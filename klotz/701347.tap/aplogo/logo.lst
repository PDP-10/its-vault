APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35
LOGO	TABLE OF CONTENTS

  	Assembly Data
  	Top Level
  	Evaluator Routines
  	Reader and Tokenizer
  	Initializations
  	Miscellaneous and Evaluator Utility Routines
  	Garbage Collector
  	Screen Editor
  	Monitor Routines
  	System Functions
  	System Tables
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1
LOGO

     1	                    	;-*-MIDAS-*-
                      	.NLIST SEQ
                      	.ENABL LC
                      	.TITLE APPLE-LOGO
                      	;
                      	;  LOGO Language Interpreter for the Apple-II Personal Microcomputer
                      	;
                      	;  Written and developed by Stephen L. Hain, Patrick G. Sobalvarro,
                      	;  and the M.I.T. LOGO Group, at the Massachusetts Institute of
                      	;  Technology.
                      	;
                      	;  Property of the M.I.T. Artificial Intelligence Laboratory,
                      	;  545 Technology Square, Cambridge, Massachusetts 02139.
                      	;  All rights reserved.
                      	;
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-1
LOGO	ASSEMBLY DATA

                      	.SBTTL	Assembly Data
                      	;	Page Zero Variables:
       0000           	LNIL	=0	;The NIL node
       0004           	PRECED	=4	;Current function's precedence
       0005           	NARGS	=5	;No. of arguments for current function
       0006           	EXPOUT	=6	;Output expected if nonzero
       0007           	OTPUTN	=7	;Number of outputs given
       0008           	EDSW	=8	;Edit mode if nonzero
       0009           	NUMSW	=9	;Line numbers used if nonzero
       000A           	DBUGSW	=10	;Debug mode if nonzero
       000B           	RUNFLG	=11	;Evaluating the RUN primitive if nonzero
       000C           	STPFLG	=12	;Stop executing current Ufun if nonzero
       000D           	DCOFLG	=13	;Return from current break-loop if nonzero
       000E           	FUNTYP	=14	;Typecode of current function
       000F           	UFRMAT	=15	;Format (List or Fpack) of current Ufun
       0010           	ERRFLG	=16	;Error code of last error
       0011           	RETADR	=17	;Holds stack pointer reset value for error recovery
       0012           	INDEV	=18	;Input device code (zero is Apple standard I/O)
       0013           	OUTDEV	=19	;Output device code (zero is Apple standard I/O)
       0014           	NNODES	=20	;Number of nodes allocated
       0016           	ERRRET	=22	;Holds program counter reset value for error recovery
       0018           	SP	=24	;Stack pointer
       001A           	VSP	=26	;Value-stack pointer
       001C           	ARG1	=28	;Primitive's first argument
       001C           	NARG1	=28	;Primitive's first argument (numerical - 4 bytes)
       001E           	ARG2	=30	;Primitive's second argument
       001F           	LINLTH	=31	;Input line length
                      	;
       0056           	SOBLST	=86	;Pointer to start of System Object List
       0058           	SOBTOP	=88	;Pointer to end of System Object List
       005A           	SARTOP	=90	;Pointer to end of System Array
       005C           	FRLIST	=92	;Pointer to start of Freelist
       005E           	TOKPTR	=94	;Token Pointer
       0060           	CURTOK	=96	;Curent Token pointer
       0062           	NEXTOK	=98	;Next Token pointer
       0064           	FUNCT	=100	;Points to current Function
       0066           	FRMGSM	=102	;Frame Generator Symbol (Number of pushed stack frames)
       0068           	FRAME	=104	;Pointer to current stack frame
       006A           	XFRAME	=106	;Pointer to end of current stack frame
       006C           	FBODY	=108	;Pointer to full body of current Ufun
       006E           	FBODY1	=110	;Current Ufun body or System index
       0070           	LINNUM	=112	;Current Ufun line number
       0072           	FPTR	=114	;Pointer to remainder of Ufun being executed
       0074           	GOPTR	=116	;Pointer to location of Ufun to GO to
       0076           	ULNEND	=118	;Pointer to end of current line of Fpack Ufun
       0078           	LEVNUM	=120	;Ufun nesting level
       007A           	NEST	=122	;EVAL nesting of current EVLINE
       007C           	TLLEVS	=124	;Number of tail recursions included in LEVNUM
       007E           	IFLEVL	=126	;IF nesting level
       0080           	EDTATM	=128	;Pointer to atom of Ufun currently being edited
       0082           	PODEFL	=130	;Default Ufun atom for PO
       0084           	MARK1	=132	;Garbage collector protected variable
       0086           	MARK2	=134	;		"
       0088           	MARK3	=136	;		"
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-2
LOGO	ASSEMBLY DATA

       008A           	MARK4	=138	;		"
       008C           	MARK5	=140	;		"
       008E           	OBLIST	=142	;Pointer to Object List
       0090           	UNSUM	=144	;Unary_Sum pointer
       0092           	UNDIF	=146	;Unary_Difference pointer
       0094           	ILINE	=148	;Pointer to current or last command line
       0096           	EDBOD	=150	;Pointer to body of Ufun (Flist type) currently being edited
       0098           	CELPTR	=152	;Garbage collector protected variable
       009A           	AREA1	=154	;Pointer to g.c.-protected area of SIZE1 contiguous nodes
       009C           	AREA2	=156	;Pointer to g.c.-protected area of SIZE2 contiguous nodes
       009E           	SIZE1	=158	;Size of area pointed to by AREA1
       00A0           	SIZE2	=160	;Size of area pointed to by AREA2
       00A2           	ANSN	=162	;(First swapped) Temporary variable
       00A3           	ANSN1	=163	;Temporary variable
       00A4           	TEMPNH	=164	;	"
       00A6           	TEMPN	=166	;	"
       00A8           	TEMPN1	=168	;	"
       00AA           	TEMPN2	=170	;	"
       00AC           	TEMPN3	=172	;	"
       00AE           	TEMPN4	=174	;	"
       00B0           	TEMPN5	=176	;(Last swapped) Temporary variable
       00B2           	ANSN2	=178	;Temporary variable
       00B3           	ANSN3	=179	;	"
       00B4           	ANSNX	=180	;	"
       00B5           	TEMPN6	=181	;	"
       00B7           	TEMPN7	=183	;	"
       00B9           	TEMPN8	=185	;	"
       00BB           	TEMPX1	=187	;	"
       00BD           	TEMPX2	=189	;	"
       00ED           	RANDOM	=237	;Random number
       00EF           	MONFLG	=239	;Flag indicates Monitor mode (if non-zero)
       00F0           	BANK4K	=240	;High-RAM 4K bank select flag (0=first, 1=second)
       00F1           	PRDFLG	=241	;Indicates READ_LINE is executing, for CONS
       00F2           	NARG2	=242	;Primitive's second argument (numerical - 4 bytes)
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-3
LOGO	ASSEMBLY DATA

                      	;	Monitor variables:
       0023           	WNDBTM	=35
       0024           	CH	=36
       0025           	CV	=37
       0028           	BASLIN	=40
       002A           	BSLTMP	=42
       0031           	MODE	=49
       0032           	INVFLG	=50
       0034           	YSAV	=52
       0035           	YSAV1	=53
       0036           	CSWL	=54
       0037           	CSWH	=55
       0038           	KSWL	=56
       0039           	KSWH	=57
       003A           	PCL	=58
       003B           	PCH	=59
       003C           	A1L	=60
       003D           	A1H	=61
       003E           	A2L	=62
       003F           	A2H	=63
       0040           	A3L	=64
       0041           	A3H	=65
       0042           	A4L	=66
       0043           	A4H	=67
       0044           	A5L	=68
       0045           	A5H	=69
       0045           	ACC	=69
       0046           	XREG	=70
       0047           	YREG	=71
       0048           	STATUS	=72
       0049           	SPNT	=73
       004E           	RNDL	=78
       004F           	RNDH	=79
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-4
LOGO	ASSEMBLY DATA

                      	;	LOGO primitive pointers (page zero):
       00BF           	ALL	=191
       00C1           	COMMNT	=193	;Comment
       00C3           	ER	=195
       00C5           	ERASE	=197
       00C7           	LELSE	=199	;Else
       00C9           	LEND	=201	;End
       00CB           	LFALSE	=203	;False
       00CD           	LIF	=205	;If
       00CF           	LPAR	=207	;(Left-parenthesis)
       00D1           	LSTOP	=209	;Stop
       00D3           	LTHEN	=211	;Then
       00D5           	LTITLE	=213	;Title
       00D7           	LTRUE	=215	;True
       00D9           	NAMES	=217
       00DB           	PO	=219
       00DD           	POTS	=221
       00DF           	PRNTOT	=223	;Printout
       00E1           	PROCS	=225	;Procedures
       00E3           	RPAR	=227	;(Right-parenthesis)
       00E5           	TI	=229
       00E7           	TITLES	=231
       00E9           	INFSUM	=233
       00EB           	INFDIF	=235
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-5
LOGO	ASSEMBLY DATA

                      	;	Type code constants:
       0000           	LIST	=0	;List
       0001           	ATOM	=1	;Atom (either Qatom, Datom, Latom)
       0002           	STRING	=2	;Regular linked-list
       0003           	FIX	=3	;Integer (GT2NUM requires that FIX < FLO)
       0004           	FLO	=4	;Floating point number
       0005           	SFUN	=5	;System Function
       0006           	UFUN	=6	;User Function
       0007           	SATOM	=7	;System atom
       0008           	QATOM	=8	;Quoted atom
       0009           	DATOM	=9	;Dotted atom
       000A           	LATOM	=10	;Label atom
       000B           	FPACK	=11	;Packed Ufun
       000C           	FLIST	=12	;Regular Ufun format
                      	;	Tokenizer constants:
       0001           	NEWLIN	=1	;Start of input line
       0002           	NEWLST	=2	;Start of sublist
       0003           	REGCEL	=3	;Regular linked cell
                      	;	General constants:
       0007           	STPKEY	=$07	;Stop-key character code (Control-G)
       0010           	PULCHR	=$10	;Re-enter last line typed (Control-P)
       0013           	LSTKEY	=$13	;Interrupt output listing (Control-S)
       001A           	PAUSKY	=$1A	;Pause-key character code (Control-Z)
       003C           	RPRMPT	=$3C	;REQUEST prompt ("<")
       003E           	EPRMPT	=$3E	;Edit-mode prompt character (">")
       003F           	QPRMPT	=$3F	;Regular prompt character (Question-mark)
       005E           	LBRAK	=$5E	;Left-bracket replacement character
       0084           	GCVST	=MARK1	;Start of Garbage Collecor protected variable area
       009A           	GCVEND	=CELPTR+2	;End of Garbage Collector protected variable area
       000A           	LININC	=10	;Default line number increment
       000F           	MONNUM	=15	;Number of Monitor commands
       0325           	RANDA	=805	;Random transform constant
       0025           	RANDC	=37	;Random transform constant
       0000           	WNDTOP	=0	;Monitor - Top of window
       0028           	WNDWTH	=40	;Monitor - Window width
                      	;	Storage parameters:
       0200           	LINARY	=$0200		;Input line buffer (page 2)
       0010           	TMPNUM	=TEMPN5-ANSN+2	;Number of temporary bytes to swap
       00A2           	TMPSTT	=ANSN		;Start of page-zero swapped temporaries
       02FF           	TMPTAB	=$02FF		;Start of temporary storage area (page 3)
       2000           	EDBUF	=$2000		;Start of editor buffer
       3FFF           	EBFEND	=$3FFF		;End of edit buffer
       2000           	HIRES	=$2000		;Start of hires graphics area
                      	;	Mapped I/O locations:
       C08B           	GETRM1	=$C08B	;Enable high RAM (with first 4K bank)
       C083           	GETRM2	=$C083	;Enable high RAM (with second 4K bank)
       C08A           	KILRAM	=$C08A	;Deselect high RAM (enable Monitor/BASIC)
       C000           	KPFLAG	=$C000	;Keyboard input byte
       C010           	KPCLR	=$C010	;Keyboard clear strobe
       C030           	SPKR	=$C030	;Toggle speaker
       C051           	TXTSET	=$C051	;Set text display
       00C0           	IOADR	=$C0	;Start of I/O ROM area
                      	;	Interrupt Vector areas:
       FFFC           	RSTVEC	=$FFFC	;Location of RESET vector
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-6
LOGO	ASSEMBLY DATA

       FFFE           	IRQVEC	=$FFFE	;Location of IRQ vector
       FFFA           	NMIVEC	=$FFFA	;Location of NMI vector (BRK command)
                      	;	System vectors:
       03F8           	USRADR	=$03F8	;User JMP location for ROM monitor
       FF59           	SYSMON	=$FF59	;ROM monitor entry point
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-7
LOGO	ASSEMBLY DATA

                      	;	System Function Constants:
       0001           	ITHNGP	=1	;Thingp
       0002           	IWORD	=2
       0003           	IWORDP	=3
       0004           	IUNSUM	=4	;Unary_sum
       0005           	IUNDIF	=5	;Unary_difference
       0006           	IMAKE	=6
       0007           	IOTPUT	=7	;Output
       0008           	ISTOP	=8
       0009           	IPRINT	=9
       000A           	ITYPE	=10
       000B           	IDEFIN	=11	;Define
       000C           	IDEBUG	=12
       000D           	ICNTIN	=13	;Continue
       000E           	IPAUSE	=14
       000F           	IELSE	=15
       0010           	ISNTNC	=16	;Sentence
       0011           	IBOTH	=17
       0012           	IEITHR	=18	;Either
       0013           	ITHEN	=19
       0014           	INOT	=20
       0015           	ILPAR	=21	;(Left-parenthesis)
       0016           	IRPAR	=22	;(Right-parenthesis)
       0017           	IIF	=23
       0018           	IRUN	=24
       0019           	IGO	=25
       001A           	IBPT	=26	;.bpt
       001B           	IGDBYE	=27	;Goodbye
       001C           	IGCOLL	=28	;.gcoll
       001D           	INODES	=29	;.nodes
       001E           	IBTFST	=30	;Butfirst
       001F           	IFIRST	=31
       0020           	IBTLST	=32	;Butlast
       0021           	ILAST	=33
       0022           	ITO	=34
       0023           	IEDIT	=35
       0024           	IEND	=36
       0025           	ITEXT	=37
       0026           	IFORWD	=38	;Forward
       0027           	IBACK	=39
       0028           	IRIGHT	=40
       0029           	ILEFT	=41
       002A           	ILIST	=42
       002B           	ICS	=43
       002C           	IHOME	=44
       002D           	IPENUP	=45
       002E           	IPENDN	=46	;Pendown
       002F           	IEMPTP	=47
       0030           	ISNAP	=48
       0031           	IDISPL	=49	;Display
       0032           	IWPCLN	=50	;Wipeclean
       0033           	ITITLE	=51
       0034           	IFPUT	=52
       0035           	IPO	=53
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-8
LOGO	ASSEMBLY DATA

       0036           	IALL	=54
       0037           	INAMES	=55
       0038           	IERASE	=56
       0039           	IREAD	=57
       003A           	IWRITE	=58
       003B           	IREQST	=59	;Request
       003C           	ITHING	=60
       003D           	ILINES	=61
       003E           	ISUM	=62
       003F           	IDIF	=63	;Difference
       0040           	IPROD	=64	;Product
       0041           	IQUOT	=65	;Quotient
       0042           	IGREAT	=66	;Greater
       0043           	ILESS	=67
       0044           	ICOMNT	=68	;Comment
       0045           	IEQUAL	=69
       0046           	ITRCBK	=70	;Traceback
       0047           	IPOTS	=71
       0048           	ITITLS	=72	;Titles
       0049           	IPROCS	=73	;Procedures
       004A           	IPEEK	=74
       004B           	IPOKE	=75
       004C           	INSUM	=76	;Infix Sum
       004D           	INDIF	=77	;Infix Difference
       004E           	INPROD	=78	;Infix Product
       004F           	INQUOT	=79	;Infix quotient
       0050           	INGRTR	=80	;Infix Greater
       0051           	INLESS	=81	;Infix Less
       0052           	INEQUL	=82	;Infix Equal
       0053           	ILPUT	=83
       0054           	IRANDM	=84	;Random
       0055           	ICTYI	=85
       0056           	ICURSR	=86	;Cursor
       0057           	IRNDMZ	=87	;Randomize
       0058           	ICALL	=88
       0059           	ILISTP	=89
       005A           	INMBRP	=90	;Numberp
       005B           	ICLINP	=91
       005C           	IPATCH	=92
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-9
LOGO	ASSEMBLY DATA

                      	;	Error Codes:
       0001           	XUOP	=1
       0002           	XEOL	=2
       0003           	XUDF	=3
       0004           	XHNV	=4
       0005           	XTMO	=5
       0006           	XNOP	=6
       0007           	XRPN	=7
       0008           	XIFX	=8
       0009           	XVNA	=9
       000A           	XTIP	=10
       000B           	XWTA	=11
       000C           	XUBL	=12
       000D           	XNTL	=13
       000E           	XNTF	=14
       000F           	XELS	=15
       0010           	XBRK	=16
       0011           	XLABEL	=17
       0012           	XTHN	=18
       0013           	XZAP	=19
       0014           	XLNF	=20
       0015           	XEDT	=21
       0016           	XDEF	=22
       0017           	XETL	=23
       0018           	XNED	=24
       0019           	XOPO	=25
       001A           	XARGTB	=26
       001B           	XTML	=27
       001C           	XTMS	=28
       001D           	XDBZ	=29
       001E           	XNWE	=30
       001F           	XLNTB	=31
       0020           	XILN	=32
       0021           	XOFLOW	=33
       0022           	XNDF	=34
       0023           	XCRSR	=35
                      	;
       0000           	XNSTOR	=0
       0001           	XNSTRN	=1
       0002           	XSTOP	=2
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-10
LOGO	ASSEMBLY DATA

                      	;	Storage Parameters and Map:
                      	;
                      	;	Miscellaneous:	Page 0 - Variables
                      	;			Page 1 - Processor Stack
                      	;			Page 2 - Line-array
                      	;			Page 3 - Temporary variable storage
                      	;			Pages 4,5,6,7 - Text/Color Graphics
                      	;
                      	;	MISC.:    $0000 - $07FF: $ 800 bytes (2K bytes)
                      	;	SARRAY:   $0800 - $0DFF: $ 600 bytes (1.5K characters)
                      	;	PDL:      $0E00 - $1BFF: $ E00 bytes (1.75K words)
                      	;	VPDL:     $1C00 - $1FFF: $ 400 bytes (0.5K words)
                      	;	HI-RES.:  $2000 - $3FFF: $2000 bytes (8K bytes)
                      	;	LOGO:     $4000 - $95FF: $5600 bytes (21.5K bytes)
                      	;	DOS:      $9600 - $BFFF: $2A00 bytes (10.5K bytes)
                      	;	I/O:      $C000 - $CFFF: $1000 bytes (4K bytes)
                      	;	BIGARRAY: $D000 - $F65F: $2660 bytes (2456. nodes)
                      	;	TYPBASE:  $F660 - $FFF7: $ 998 bytes
                      	;	UNUSED:   $FFF8 - $FFF9: $   2 bytes
                      	;	VECTORS:  $FFFA - $FFFF: $   6 bytes (3 vectors)
                      	;
       4000           	PGMSTT	=$4000		;Program starts after High-res. graphics storage
       D000           	BIGBAS	=$D000		;Nodespace beginning
       CFFC           	BBASX	=BIGBAS-4
       2660           	BIGLEN	=$2660		;Nodespace length
       F660           	SINODS	=BIGBAS+BIGLEN	;Nodespace end
       3400           	OFSET1	=$3400		;(BIGBAS/4)
       C260           	TYPBAS	=SINODS-OFSET1	;Typebase offset
       0998           	TYPLEN	=BIGLEN/4	;Typebase length
       FFF8           	TYPEND	=SINODS+TYPLEN	;Typebase end
       0032           	NODTST	=50		;Minimum free nodes for tokenizer
       0966           	NODLIM	=TYPLEN-NODTST	;Node allocation limit
       0800           	BASARY	=$800		;SARRAY beginning
       0600           	SARLEN	=$600		;SARRAY length
       0E00           	PDLBAS	=BASARY+SARLEN	;PDL beginning
       0E00           	PDLLEN	=$E00		;PDL length
       1C00           	VPDLBA	=PDLBAS+PDLLEN	;VPDL beginning
       0400           	VPDLEN	=$400		;VPDL length
       2000           	ENDVPD	=VPDLBA+VPDLEN	;VPDL end
       0014           	PDLTST	=20		;Minimum PDL space before panicking
       0010           	VPDTST	=16		;Minimum VPDL space before panicking
       1BEC           	PDLLIM	=VPDLBA-PDLTST	;PDL test limit
       1FF0           	VPDLIM	=ENDVPD-VPDTST	;VPDL test limit
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-11
LOGO	TOP LEVEL

                      	.SBTTL	Top Level
       4000           	.=PGMSTT
                      	;
                      	;Calling point for the LOGO Interpreter
                      	;
  4000   78           	LOGO:	SEI		;Disable interrupts
  4001   D8           		CLD		;Disable decimal mode
  4002   AD   8B   C0 		LDA GETRM1	;Select RAM read/write with first 4K bank
  4005   AD   8B   C0 		LDA GETRM1
  4008   A9   26      		LDA #MONBRK&$FF
  400A   8D   FE   FF 		STA IRQVEC
  400D   8D   FA   FF 		STA NMIVEC	;Interrupts cause a break to Monitor
  4010   A9   6A      		LDA #MONBRK^
  4012   8D   FF   FF 		STA IRQVEC+1
  4015   8D   FB   FF 		STA NMIVEC+1
  4018   A9   26      		LDA #MONBRK&$FF	;?Vector to LOGO when debugged
  401A   8D   FC   FF 		STA RSTVEC	;RESET reinitializes LOGO
  401D   A9   6A      		LDA #MONBRK^
  401F   8D   FD   FF 		STA RSTVEC+1
  4022   A2   00      		LDX #$00
  4024   9A           		TXS		;Initialize processor stack
  4025   86   F0      		STX BANK4K	;First 4K bank was selected
  4027   86   EF      		STX MONFLG	;Disable monitor mode
  4029   86   00      		STX $00		;Define LNIL as $0000 at $0000
  402B   86   01      		STX $01
  402D   86   02      		STX $02
  402F   86   03      		STX $03
  4031   20   41   4E 		JSR INITLZ
  4034   A2   55      		LDX #HELSTR&$FF
  4036   A0   8D      		LDY #HELSTR^
  4038   20   1D   53 		JSR PRTSTR	;Types Hello-String
  403B   20   DC   69 		JSR BREAK1
  403E   A0   94      	TOPLOP:	LDY #ILINE
  4040   20   46   4A 		JSR PRDLIN	;Get a line
  4043   98           		TYA
  4044   D0   F8      		BNE TOPLOP	;Y nonzero means not OK
  4046   A6   94      		LDX ILINE
  4048   A5   95      		LDA ILINE+1
  404A   D0   04      		BNE TPLP1
  404C   E0   00      		CPX #$00
  404E   F0   EE      		BEQ TOPLOP	;Ignore if line is empty
  4050   85   5F      	TPLP1:	STA TOKPTR+1
  4052   86   5E      		STX TOKPTR
  4054   A5   08      		LDA EDSW
  4056   F0   7A      		BEQ EVLUAT	;Evaluate it if not in Edit mode
  4058   A0   00      		LDY #$00
  405A   B1   5E      		LDA (TOKPTR),Y
  405C   85   A6      		STA TEMPN
  405E   C8           		INY
  405F   B1   5E      		LDA (TOKPTR),Y
  4061   85   A7      		STA TEMPN+1	;(CAR)
  4063   A2   A6      		LDX #TEMPN
  4065   20   93   5C 		JSR GETTYP
  4068   A0   00      		LDY #$00	;(For EDLINE)
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-12
LOGO	TOP LEVEL

  406A   C9   03      		CMP #FIX
  406C   F0   5C      		BEQ TOPEDL	;If there's a line number, add it to the procedure
  406E   A5   12      		LDA INDEV
  4070   D0   04      		BNE TOPLP1
  4072   A5   09      		LDA NUMSW
  4074   D0   5C      		BNE EVLUAT	;(If INDEV = VDT and NUMBER_SWITCH <> 0)
  4076   A6   A6      	TOPLP1:	LDX TEMPN
  4078   A4   A7      		LDY TEMPN+1
  407A   E4   DD      		CPX POTS
  407C   D0   04      		BNE TOPLP2
  407E   C4   DE      		CPY POTS+1
  4080   F0   50      		BEQ EVLUAT
  4082   E4   C9      	TOPLP2:	CPX LEND
  4084   D0   04      		BNE TOPLP3
  4086   C4   CA      		CPY LEND+1
  4088   F0   48      		BEQ EVLUAT
  408A   E4   DB      	TOPLP3:	CPX PO
  408C   D0   04      		BNE TOPLP4
  408E   C4   DC      		CPY PO+1
  4090   F0   40      		BEQ EVLUAT
  4092   E4   DF      	TOPLP4:	CPX PRNTOT
  4094   D0   04      		BNE TOPLP5
  4096   C4   E0      		CPY PRNTOT+1
  4098   F0   38      		BEQ EVLUAT
  409A   E4   D5      	TOPLP5:	CPX LTITLE
  409C   D0   04      		BNE TOPLP6
  409E   C4   D6      		CPY LTITLE+1
  40A0   F0   30      		BEQ EVLUAT
  40A2   E4   C5      	TOPLP6:	CPX ERASE
  40A4   D0   04      		BNE TOPLP7
  40A6   C4   C6      		CPY ERASE+1
  40A8   F0   28      		BEQ EVLUAT
  40AA   E4   C3      	TOPLP7:	CPX ER
  40AC   D0   04      		BNE TOPLIN
  40AE   C4   C4      		CPY ER+1
  40B0   F0   20      		BEQ EVLUAT
  40B2   A9   3E      	TOPLIN:	LDA #TOPLOP&$FF		;return to toploop on error
  40B4   85   16      		STA ERRRET
  40B6   A9   40      		LDA #TOPLOP^
  40B8   85   17      		STA ERRRET+1
  40BA   A0   00      		LDY #$00
  40BC   A2   94      		LDX #ILINE
  40BE   86   A2      		STX ANSN
  40C0   A9   0C      		LDA #FLIST
  40C2   20   09   52 		JSR CONS
  40C5   20   A8   4A 		JSR RSTERR
  40C8   A0   01      		LDY #$01
  40CA   A2   94      	TOPEDL:	LDX #ILINE
  40CC   20   42   4D 		JSR EDLINE
  40CF   4C   3E   40 		JMP TOPLOP
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-13
LOGO	EVALUATOR ROUTINES

                      	.SBTTL	Evaluator Routines
                      	;EVLUAT initializes the Evaluator variables, starts EVLINE.
                      	;
  40D2   A9   00      	EVLUAT:	LDA #PDLBAS&$FF
  40D4   85   18      		STA SP
  40D6   A9   0E      		LDA #PDLBAS^
  40D8   85   19      		STA SP+1	;SP := PDLBASE
  40DA   A9   00      		LDA #VPDLBA&$FF
  40DC   85   1A      		STA VSP
  40DE   A9   1C      		LDA #VPDLBA^
  40E0   85   1B      		STA VSP+1	;VSP := VPDLBASE
  40E2   A9   00      		LDA #$00
  40E4   85   06      		STA EXPOUT	;EXPECTED_OUTPUT := 0
  40E6   85   0B      		STA RUNFLG	;RUN_FLAG := 0
  40E8   85   0C      		STA STPFLG	;STOP_FLAG := 0
  40EA   85   0D      		STA DCOFLG	;DONT_CONTINUE_FLAG := 0
  40EC   85   10      		STA ERRFLG	;ERROR_FLAG := 0
  40EE   85   78      		STA LEVNUM
  40F0   85   79      		STA LEVNUM+1	;LEVEL_NUMBER := 0
  40F2   85   70      		STA LINNUM
  40F4   85   71      		STA LINNUM+1	;LINE_NUMBER := 0
  40F6   85   68      		STA FRAME
  40F8   85   69      		STA FRAME+1	;FRAME := 0
  40FA   85   6A      		STA XFRAME
  40FC   85   6B      		STA XFRAME+1	;XFRAME := 0
  40FE   85   0F      		STA UFRMAT	;UFORMAT := LIST
  4100   A2   3E      		LDX #TOPLOP&$FF
  4102   A0   40      		LDY #TOPLOP^
  4104   20   23   51 		JSR PUSH	;Top-level Return Address (TOPLOP)
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-14
LOGO	EVALUATOR ROUTINES

                      	;EVLINE called with TOKPTR pointing to line of code to execute.
                      	; Pushes IFLEVEL and EXPOUT and then resets them.
                      	;
  4107   20   8D   51 	EVLINE:	JSR PSHTST
  410A   20   A9   51 		JSR VPSTST
  410D   A6   06      		LDX EXPOUT
  410F   20   23   51 		JSR PUSH
  4112   A2   7E      		LDX #IFLEVL
  4114   20   0C   51 		JSR PUSHP
  4117   A9   00      		LDA #$00
  4119   85   06      		STA EXPOUT	;EXPECTED_OUTPUT := 0
  411B   85   7E      		STA IFLEVL	;IF_LEVEL := 0
  411D   85   7F      		STA IFLEVL+1
  411F   A5   5E      		LDA TOKPTR
  4121   D0   04      		BNE EVLN1
  4123   A5   5F      		LDA TOKPTR+1
  4125   F0   21      		BEQ EVLN1P
  4127   A0   00      	EVLN1:	LDY #$00
  4129   B1   5E      		LDA (TOKPTR),Y
  412B   85   A6      		STA TEMPN
  412D   C8           		INY
  412E   B1   5E      		LDA (TOKPTR),Y
  4130   85   A7      		STA TEMPN+1	;(GETTOK)
  4132   A2   A6      		LDX #TEMPN
  4134   20   93   5C 		JSR GETTYP
  4137   C9   0A      		CMP #LATOM
  4139   D0   05      		BNE EVLIN1
  413B   A2   5E      		LDX #TOKPTR
  413D   20   00   54 		JSR TTKADV
                      	;
                      	;EVLIN1 keeps calling EVLEXP until EOL.
                      	;
  4140   A5   5E      	EVLIN1:	LDA TOKPTR
  4142   D0   16      		BNE EVLN1A
  4144   A5   5F      		LDA TOKPTR+1
  4146   D0   12      		BNE EVLN1A
  4148   A2   7E      	EVLN1P:	LDX #IFLEVL
  414A   20   4F   51 		JSR POP
  414D   20   7D   51 		JSR POPB
  4150   85   06      		STA EXPOUT
  4152   A2   A6      	POPJ:	LDX #TEMPN
  4154   20   4F   51 		JSR POP
  4157   6C   A6   00 		JMP (TEMPN)
  415A   A5   0C      	EVLN1A:	LDA STPFLG
  415C   D0   EA      		BNE EVLN1P
  415E   A2   40      		LDX #EVLIN1&$FF
  4160   A0   41      		LDY #EVLIN1^
  4162   20   23   51 		JSR PUSH	;PUSH (EVLIN1) Return Address
                      	;
                      	;EVLEXP calls EVAL with PRECED = 0. EVAL returns to EVEX1,
                      	;which restores old PRECED.
                      	;
  4165   A6   04      	EVLEXP:	LDX PRECED
  4167   20   23   51 		JSR PUSH	;Call PUSH (PRECEDENCE)
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-15
LOGO	EVALUATOR ROUTINES

  416A   A9   00      		LDA #$00
  416C   85   04      		STA PRECED	;PRECEDENCE := 0
  416E   A2   EC      		LDX #EVEX1&$FF
  4170   A0   42      		LDY #EVEX1^
  4172   20   23   51 		JSR PUSH	;Call PUSH (EV_EX_1)
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-16
LOGO	EVALUATOR ROUTINES

                      	;EVAL dispatches to either EVWRAP, PARLOP, UFUNCL, or SFUNCL.
                      	;All return eventually to EVWRAP.
                      	;
  4175   A2   60      	EVAL:	LDX #CURTOK	;Push CURTOK and increment NEST if FRAME <> 0
  4177   20   0C   51 		JSR PUSHP
  417A   A5   68      		LDA FRAME
  417C   D0   04      		BNE XEVL1
  417E   A5   69      		LDA FRAME+1
  4180   F0   06      		BEQ XEVL2
  4182   E6   7A      	XEVL1:	INC NEST
  4184   D0   02      		BNE XEVL2
  4186   E6   7B      		INC NEST+1
  4188   A5   5F      	XEVL2:	LDA TOKPTR+1
  418A   D0   03      		BNE XEVL3
  418C   4C   CF   72 		JMP SCMMT1	;ERROR End-of-Line if EOL
  418F   A0   00      	XEVL3:	LDY #$00	;Get CURTOK and NEXTOK
  4191   B1   5E      		LDA (TOKPTR),Y
  4193   85   60      		STA CURTOK
  4195   C8           		INY
  4196   B1   5E      		LDA (TOKPTR),Y
  4198   85   61      		STA CURTOK+1	;(GETTOK)
  419A   A2   5E      		LDX #TOKPTR
  419C   20   00   54 		JSR TTKADV
  419F   20   D0   43 		JSR GTNXTK
  41A2   A2   60      		LDX #CURTOK
  41A4   20   93   5C 		JSR GETTYP	;Dispatch off Type of CURTOK
  41A7   C9   00      		CMP #LIST
  41A9   F0   3F      		BEQ XCASQ	;(If LIST)
  41AB   C9   0A      		CMP #LATOM
  41AD   F0   36      		BEQ XCASL
  41AF   C9   08      		CMP #QATOM
  41B1   F0   37      		BEQ XCASQ
  41B3   C9   03      		CMP #FIX
  41B5   F0   33      		BEQ XCASQ
U  41B7   C9   00      		CMP #FLONUM
  41B9   F0   2F      		BEQ XCASQ
  41BB   C9   04      		CMP #FLO
  41BD   F0   2B      		BEQ XCASQ
  41BF   C9   01      		CMP #ATOM
  41C1   F0   39      		BEQ XCASA
  41C3   C9   07      		CMP #SATOM
  41C5   F0   35      		BEQ XCASA
  41C7   A0   60      	XCASD:	LDY #CURTOK	;DATOM, so VPush it unless it's Novalue (then Error)
  41C9   A2   A6      		LDX #TEMPN
  41CB   20   BF   51 		JSR GETVAL
  41CE   A2   A6      		LDX #TEMPN	;For VPUSHP in XCASQ1
  41D0   A5   A7      		LDA TEMPN+1
  41D2   D0   1E      		BNE XCASQ1
  41D4   A5   A6      		LDA TEMPN
  41D6   F0   1A      		BEQ XCASQ1
  41D8   A5   60      		LDA CURTOK
  41DA   29   FC      		AND #$FC
  41DC   85   60      		STA CURTOK
  41DE   A0   60      		LDY #CURTOK
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-17
LOGO	EVALUATOR ROUTINES

  41E0   A9   04      		LDA #XHNV
  41E2   4C   7C   60 		JMP ERROR
  41E5   A9   11      	XCASL:	LDA #XLABEL	;ERROR, can't execute a label
  41E7   4C   7C   60 		JMP ERROR
  41EA   A5   60      	XCASQ:	LDA CURTOK	;QATOM, FIX, FLO, LIST: Just push it and set OTPUTN
  41EC   29   FC      		AND #$FC	;Strip off last two bits
  41EE   85   60      		STA CURTOK
  41F0   A2   60      		LDX #CURTOK
  41F2   20   38   51 	XCASQ1:	JSR VPUSHP	;VPUSH (CURRENT_TOKEN)
  41F5   A9   01      		LDA #$01
  41F7   85   07      		STA OTPUTN
  41F9   4C   0D   45 		JMP EVWRAP
  41FC   A2   60      	XCASA:	LDX #CURTOK	;ATOM, SATOM: It's some sort of Function
  41FE   A9   64      		LDA #FUNCT
  4200   20   32   55 		JSR GETFUN
  4203   85   0E      		STA FUNTYP
  4205   A5   65      		LDA FUNCT+1
  4207   D0   07      		BNE XCASA1
  4209   A0   60      		LDY #CURTOK
  420B   A9   03      		LDA #XUDF
  420D   4C   7C   60 		JMP ERROR	;Error if GETFUN couldn't find it
  4210   A5   0E      	XCASA1:	LDA FUNTYP
  4212   A2   64      		LDX #FUNCT
  4214   20   2E   53 		JSR INFIXP
  4217   90   27      		BCC XCASA2
  4219   C9   4C      		CMP #INSUM
  421B   D0   0E      		BNE XCASA3
  421D   A6   90      		LDX UNSUM
  421F   A4   91      		LDY UNSUM+1
  4221   4C   33   42 		JMP XCASA4
  4224   A0   60      	XCASA5:	LDY #CURTOK
  4226   A9   08      		LDA #XIFX
  4228   4C   7C   60 		JMP ERROR
  422B   C9   4D      	XCASA3:	CMP #INDIF
  422D   D0   F5      		BNE XCASA5
  422F   A6   92      		LDX UNDIF
  4231   A4   93      		LDY UNDIF+1
  4233   86   60      	XCASA4:	STX CURTOK
  4235   84   61      		STY CURTOK+1
  4237   A2   60      		LDX #CURTOK
  4239   A9   64      		LDA #FUNCT
  423B   20   32   55 		JSR GETFUN
  423E   85   0E      		STA FUNTYP
  4240   A5   0E      	XCASA2:	LDA FUNTYP	;It should be a UFUN or SFUN
  4242   C9   06      		CMP #UFUN
  4244   F0   07      		BEQ XCASFN
  4246   C9   05      		CMP #SFUN
  4248   F0   03      		BEQ XCASFN
  424A   20   BD   50 		JSR SYSBUG
  424D   A6   04      	XCASFN:	LDX PRECED
  424F   20   23   51 		JSR PUSH
  4252   A4   0E      		LDY FUNTYP
  4254   A2   64      		LDX #FUNCT
  4256   20   EF   51 		JSR GETPRC
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-18
LOGO	EVALUATOR ROUTINES

  4259   85   04      		STA PRECED
  425B   A5   0E      		LDA FUNTYP
  425D   A2   64      		LDX #FUNCT
  425F   20   F8   52 		JSR GETNGS
  4262   10   02      		BPL XCASF1
  4264   49   FF      		EOR #$FF	;NARGS := - NARGS - 1
  4266   85   05      	XCASF1:	STA NARGS
  4268   A2   E4      		LDX #EVAL1&$FF
  426A   A0   45      		LDY #EVAL1^
  426C   20   23   51 		JSR PUSH
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-19
LOGO	EVALUATOR ROUTINES

  426F   A5   05      	ARGLOP:	LDA NARGS	;ARGLOP gets the args for a function
  4271   D0   03      		BNE ARGLP1
  4273   4C   52   41 		JMP POPJ	;Exit if no args to be gotten
  4276   A6   05      	ARGLP1:	LDX NARGS
  4278   86   A2      		STX ANSN	;AL1 will push this
  427A   20   23   51 		JSR PUSH
  427D   A2   64      		LDX #FUNCT
  427F   20   0C   51 		JSR PUSHP
  4282   A6   0E      		LDX FUNTYP
  4284   20   23   51 		JSR PUSH
  4287   A6   06      		LDX EXPOUT
  4289   20   23   51 		JSR PUSH
  428C   A2   7E      		LDX #IFLEVL
  428E   20   0C   51 		JSR PUSHP
                      	;
  4291   20   D0   43 	AL1:	JSR GTNXTK
  4294   A2   62      		LDX #NEXTOK
  4296   20   0C   51 		JSR PUSHP
  4299   A6   A2      		LDX ANSN
  429B   20   23   51 		JSR PUSH
  429E   A6   04      		LDX PRECED
  42A0   20   23   51 		JSR PUSH
  42A3   A2   00      		LDX #$00
  42A5   86   7E      		STX IFLEVL
  42A7   86   7F      		STX IFLEVL+1
  42A9   E8           		INX
  42AA   86   06      		STX EXPOUT
  42AC   A2   B6      		LDX #AL2&$FF
  42AE   A0   42      		LDY #AL2^
  42B0   20   23   51 		JSR PUSH
  42B3   4C   75   41 		JMP EVAL
                      	;
  42B6   20   7D   51 	AL2:	JSR POPB
  42B9   85   04      		STA PRECED
  42BB   20   7D   51 		JSR POPB
  42BE   85   A2      		STA ANSN
  42C0   A2   62      		LDX #NEXTOK
  42C2   20   4F   51 		JSR POP
  42C5   A5   07      		LDA OTPUTN
  42C7   D0   03      		BNE AL2A
  42C9   4C   C9   43 		JMP VAL1R	;Error if no output received
  42CC   C6   A2      	AL2A:	DEC ANSN
  42CE   D0   C1      		BNE AL1		;Get another arg if not done
  42D0   A2   7E      		LDX #IFLEVL
  42D2   20   4F   51 		JSR POP
  42D5   20   7D   51 		JSR POPB
  42D8   85   06      		STA EXPOUT
  42DA   20   7D   51 		JSR POPB
  42DD   85   0E      		STA FUNTYP
  42DF   A2   64      		LDX #FUNCT
  42E1   20   4F   51 		JSR POP
  42E4   20   7D   51 		JSR POPB
  42E7   85   05      		STA NARGS
  42E9   4C   52   41 		JMP POPJ
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-20
LOGO	EVALUATOR ROUTINES

                      	;
  42EC   20   7D   51 	EVEX1:	JSR POPB
  42EF   85   04      		STA PRECED
  42F1   4C   52   41 		JMP POPJ
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-21
LOGO	EVALUATOR ROUTINES

  42F4   A2   62      	PARLOP:	LDX #NEXTOK	;Executed when an LPAR is encountered
  42F6   A9   64      		LDA #FUNCT
  42F8   20   32   55 		JSR GETFUN
  42FB   85   0E      		STA FUNTYP
  42FD   A5   65      		LDA FUNCT+1
  42FF   F0   09      		BEQ PARLP4
  4301   A5   0E      	PARLP1:	LDA FUNTYP
  4303   A2   64      		LDX #FUNCT
  4305   20   F8   52 		JSR GETNGS
  4308   85   05      		STA NARGS
  430A   A5   05      	PARLP4:	LDA NARGS
  430C   30   1D      		BMI PARLP3
  430E   A6   06      		LDX EXPOUT
  4310   20   23   51 		JSR PUSH
  4313   A2   7E      		LDX #IFLEVL
  4315   20   0C   51 		JSR PUSHP
  4318   A2   00      		LDX #$00
  431A   86   7E      		STX IFLEVL	;IF_LEVEL := 0
  431C   86   7F      		STX IFLEVL+1
  431E   E8           		INX
  431F   86   06      		STX EXPOUT
  4321   A2   DC      		LDX #PLOP1&$FF
  4323   A0   43      		LDY #PLOP1^
  4325   20   23   51 		JSR PUSH
  4328   4C   65   41 		JMP EVLEXP
  432B   A4   0E      	PARLP3:	LDY FUNTYP
  432D   A2   64      		LDX #FUNCT
  432F   20   EF   51 		JSR GETPRC
  4332   85   04      		STA PRECED
  4334   A5   62      		LDA NEXTOK
  4336   85   60      		STA CURTOK
  4338   A5   63      		LDA NEXTOK+1
  433A   85   61      		STA CURTOK+1	;CURRENT_TOKEN := NEXT_TOKEN
  433C   A2   5E      		LDX #TOKPTR
  433E   20   00   54 		JSR TTKADV
  4341   A9   00      		LDA #$00
  4343   85   05      		STA NARGS	;NARGS := 0
  4345   A2   64      		LDX #FUNCT
  4347   20   0C   51 		JSR PUSHP
  434A   A6   0E      		LDX FUNTYP
  434C   20   23   51 		JSR PUSH
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-22
LOGO	EVALUATOR ROUTINES

  434F   20   D0   43 	VARGLP:	JSR GTNXTK
  4352   A5   62      		LDA NEXTOK
  4354   C5   E3      		CMP RPAR
  4356   D0   1E      		BNE VRGLP1
  4358   A5   63      		LDA NEXTOK+1
  435A   C5   E4      		CMP RPAR+1
  435C   D0   18      		BNE VRGLP1
  435E   20   7D   51 		JSR POPB	;Call POP (FUNTYPE)
  4361   85   0E      		STA FUNTYP
  4363   A2   64      		LDX #FUNCT
  4365   20   4F   51 		JSR POP
  4368   A2   5E      		LDX #TOKPTR
  436A   20   00   54 		JSR TTKADV
  436D   A5   05      		LDA NARGS
  436F   49   FF      		EOR #$FF
  4371   85   05      		STA NARGS	;NARGS := - NARGS - 1
  4373   4C   F0   45 		JMP FNCAL1
  4376   A6   05      	VRGLP1:	LDX NARGS
  4378   20   23   51 		JSR PUSH
  437B   A2   62      		LDX #NEXTOK
  437D   20   0C   51 		JSR PUSHP
  4380   A6   06      		LDX EXPOUT
  4382   20   23   51 		JSR PUSH
  4385   A2   7E      		LDX #IFLEVL
  4387   20   0C   51 		JSR PUSHP
  438A   A2   00      		LDX #$00
  438C   86   7E      		STX IFLEVL	;IF_LEVEL := 0
  438E   86   7F      		STX IFLEVL+1
  4390   E8           		INX
  4391   86   06      		STX EXPOUT
  4393   A6   04      		LDX PRECED
  4395   20   23   51 		JSR PUSH
  4398   A2   A2      		LDX #VAL1&$FF
  439A   A0   43      		LDY #VAL1^
  439C   20   23   51 		JSR PUSH
  439F   4C   75   41 		JMP EVAL
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-23
LOGO	EVALUATOR ROUTINES

  43A2   20   7D   51 	VAL1:	JSR POPB
  43A5   85   04      		STA PRECED
  43A7   A2   7E      		LDX #IFLEVL
  43A9   20   4F   51 		JSR POP
  43AC   20   7D   51 		JSR POPB
  43AF   85   06      		STA EXPOUT
  43B1   A2   62      		LDX #NEXTOK
  43B3   20   4F   51 		JSR POP
  43B6   20   7D   51 		JSR POPB
  43B9   85   05      		STA NARGS
  43BB   A5   07      		LDA OTPUTN
  43BD   F0   0A      		BEQ VAL1R
  43BF   18           		CLC
  43C0   A5   05      		LDA NARGS
  43C2   65   07      		ADC OTPUTN
  43C4   85   05      		STA NARGS
  43C6   4C   4F   43 		JMP VARGLP
  43C9   A9   06      	VAL1R:	LDA #XNOP
  43CB   A0   62      		LDY #NEXTOK
  43CD   4C   7C   60 		JMP ERROR
                      	;
  43D0   A0   00      	GTNXTK:	LDY #$00
  43D2   B1   5E      		LDA (TOKPTR),Y
  43D4   85   62      		STA NEXTOK
  43D6   C8           		INY
  43D7   B1   5E      		LDA (TOKPTR),Y
  43D9   85   63      		STA NEXTOK+1	;(GETTOK)
  43DB   60           		RTS
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-24
LOGO	EVALUATOR ROUTINES

                      	;PLOP1 cleans up after a parenthesized expression.
                      	;
  43DC   A2   7E      	PLOP1:	LDX #IFLEVL
  43DE   20   4F   51 		JSR POP
  43E1   20   7D   51 		JSR POPB
  43E4   85   06      		STA EXPOUT
  43E6   A5   5E      		LDA TOKPTR
  43E8   D0   07      		BNE PLOP1A
  43EA   A5   5F      		LDA TOKPTR+1
  43EC   D0   03      		BNE PLOP1A
  43EE   4C   CF   72 		JMP SCMMT1	;Error if EOL
  43F1   20   D0   43 	PLOP1A:	JSR GTNXTK
  43F4   A5   62      		LDA NEXTOK
  43F6   C5   E3      		CMP RPAR	;Next token must be an RPAR, else Error
  43F8   D0   0E      		BNE PLOP1B
  43FA   A5   63      		LDA NEXTOK+1
  43FC   C5   E4      		CMP RPAR+1
  43FE   D0   08      		BNE PLOP1B
  4400   A2   5E      		LDX #TOKPTR	;Everything OK, get the next token and exit
  4402   20   00   54 		JSR TTKADV
  4405   4C   52   41 		JMP POPJ
  4408   A9   0A      	PLOP1B:	LDA #XTIP
  440A   4C   7C   60 		JMP ERROR
                      	;
  440D   A6   0F      	RUNHAN:	LDX UFRMAT
  440F   20   23   51 		JSR PUSH
  4412   A2   76      		LDX #ULNEND
  4414   20   0C   51 		JSR PUSHP
  4417   A2   5E      		LDX #TOKPTR
  4419   20   38   51 		JSR VPUSHP
  441C   A5   1C      		LDA ARG1
  441E   85   5E      		STA TOKPTR
  4420   A5   1D      		LDA ARG1+1
  4422   85   5F      		STA TOKPTR+1
  4424   A6   0B      		LDX RUNFLG
  4426   20   23   51 		JSR PUSH
  4429   A2   00      		LDX #$00
  442B   86   0F      		STX UFRMAT
  442D   E8           		INX
  442E   86   0B      		STX RUNFLG
  4430   A2   3A      		LDX #RH1&$FF
  4432   A0   44      		LDY #RH1^
  4434   20   23   51 		JSR PUSH
  4437   4C   07   41 		JMP EVLINE
                      	;
  443A   20   7D   51 	RH1:	JSR POPB
  443D   85   0B      		STA RUNFLG
  443F   A2   5E      		LDX #TOKPTR
  4441   20   66   51 		JSR VPOP
  4444   A2   76      		LDX #ULNEND
  4446   20   4F   51 		JSR POP
  4449   20   7D   51 		JSR POPB
  444C   85   0F      		STA UFRMAT
  444E   4C   52   41 		JMP POPJ
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-25
LOGO	EVALUATOR ROUTINES

  4451   A5   12      	SREAD1:	LDA INDEV	;If INDEV <> WFILE or EOF of Workspace, goto SREAD2
  4453   F0   11      		BEQ SREAD2
  4455   20   E3   69 		JSR EOF
  4458   D0   0C      		BNE SREAD2
  445A   A0   94      		LDY #ILINE
  445C   20   46   4A 		JSR PRDLIN	;Read a line. If error, reset & go to SREAD2
  445F   98           		TYA
  4460   F0   10      		BEQ SRD1A	;Y zero means OK
  4462   A9   00      		LDA #$00
  4464   85   10      		STA ERRFLG
  4466   20   E2   69 	SREAD2:	JSR CLOSEW	;Close Workspace file
  4469   A9   00      		LDA #$00
  446B   85   12      		STA INDEV	;INDEV := VDT
  446D   85   07      		STA OTPUTN	;OUTPUTN := 0
  446F   4C   52   41 		JMP POPJ
  4472   A5   94      	SRD1A:	LDA ILINE
  4474   85   5E      		STA TOKPTR
  4476   A5   95      		LDA ILINE+1
  4478   85   5F      		STA TOKPTR+1
  447A   A5   08      		LDA EDSW
  447C   D0   03      		BNE SRD1B
  447E   4C   E3   44 		JMP SRD1E
  4481   A0   00      	SRD1B:	LDY #$00
  4483   B1   94      		LDA (ILINE),Y
  4485   85   A6      		STA TEMPN
  4487   C8           		INY
  4488   B1   94      		LDA (ILINE),Y
  448A   85   A7      		STA TEMPN+1	;(CAR)
  448C   A2   A6      		LDX #TEMPN
  448E   20   93   5C 		JSR GETTYP
  4491   A0   00      		LDY #$00	;(For EDLINE)
  4493   C9   03      		CMP #FIX
  4495   F0   6E      		BEQ SRDEDL
  4497   A5   12      	SRD1C:	LDA INDEV	;EVLINE if INDEV = VDT and NUMSW <> 0, or if TEMPN =
  4499   D0   04      		BNE SRD1D	; POTS, END, PO, PRINTOUT, TITLE, ERASE, ER, or TI.
  449B   A5   09      		LDA NUMSW
  449D   D0   44      		BNE SRD1E
  449F   A6   A6      	SRD1D:	LDX TEMPN
  44A1   A4   A7      		LDY TEMPN+1
  44A3   E4   DD      		CPX POTS
  44A5   D0   04      		BNE SRD1D1
  44A7   C4   DE      		CPY POTS+1
  44A9   F0   38      		BEQ SRD1E
  44AB   E4   C9      	SRD1D1:	CPX LEND
  44AD   D0   04      		BNE SRD1D2
  44AF   C4   CA      		CPY LEND+1
  44B1   F0   30      		BEQ SRD1E
  44B3   E4   DB      	SRD1D2:	CPX PO
  44B5   D0   04      		BNE SRD1D3
  44B7   C4   DC      		CPY PO+1
  44B9   F0   28      		BEQ SRD1E
  44BB   E4   DF      	SRD1D3:	CPX PRNTOT
  44BD   D0   04      		BNE SRD1D4
  44BF   C4   E0      		CPY PRNTOT+1
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-26
LOGO	EVALUATOR ROUTINES

  44C1   F0   20      		BEQ SRD1E
  44C3   E4   D5      	SRD1D4:	CPX LTITLE
  44C5   D0   04      		BNE SRD1D5
  44C7   C4   D6      		CPY LTITLE+1
  44C9   F0   18      		BEQ SRD1E
  44CB   E4   C5      	SRD1D5:	CPX ERASE
  44CD   D0   04      		BNE SRD1D6
  44CF   C4   C6      		CPY ERASE+1
  44D1   F0   10      		BEQ SRD1E
  44D3   E4   C3      	SRD1D6:	CPX ER
  44D5   D0   04      		BNE SRD1D7
  44D7   C4   C4      		CPY ER+1
  44D9   F0   08      		BEQ SRD1E
  44DB   E4   E5      	SRD1D7:	CPX TI
  44DD   D0   0E      		BNE SRD1F
  44DF   C4   E6      		CPY TI+1
  44E1   D0   0A      		BNE SRD1F
  44E3   A2   51      	SRD1E:	LDX #SREAD1&$FF
  44E5   A0   44      		LDY #SREAD1^
  44E7   20   23   51 		JSR PUSH
  44EA   4C   07   41 		JMP EVLINE
  44ED   A9   51      	SRD1F:	LDA #SREAD1&$FF
  44EF   85   16      		STA ERRRET
  44F1   A9   44      		LDA #SREAD1^
  44F3   85   16      		STA ERRRET
  44F5   A0   00      		LDY #$00
  44F7   A2   94      		LDX #ILINE
  44F9   86   A2      		STX ANSN
  44FB   A9   0C      		LDA #FLIST
  44FD   20   09   52 		JSR CONS
  4500   20   A8   4A 		JSR RSTERR
  4503   A0   01      		LDY #$01
  4505   A2   94      	SRDEDL:	LDX #ILINE
  4507   20   42   4D 		JSR EDLINE
  450A   4C   51   44 		JMP SREAD1
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-27
LOGO	EVALUATOR ROUTINES

  450D   A5   5F      	EVWRAP:	LDA TOKPTR+1
  450F   F0   76      		BEQ EVRETN
  4511   A5   07      		LDA OTPUTN
  4513   F0   72      		BEQ EVRETN
  4515   A5   0C      		LDA STPFLG
  4517   D0   6E      		BNE EVRETN
  4519   A0   00      		LDY #$00
  451B   B1   5E      		LDA (TOKPTR),Y
  451D   85   60      		STA CURTOK
  451F   C8           		INY
  4520   B1   5E      		LDA (TOKPTR),Y
  4522   85   61      		STA CURTOK+1	;(GETTOK)
  4524   A5   60      		LDA CURTOK
  4526   C5   E3      		CMP RPAR
  4528   D0   06      		BNE EVW2
  452A   A5   61      		LDA CURTOK+1
  452C   C5   E4      		CMP RPAR+1
  452E   F0   57      		BEQ EVRETN
  4530   A2   60      	EVW2:	LDX #CURTOK
  4532   A9   64      		LDA #FUNCT
  4534   20   32   55 		JSR GETFUN
  4537   85   0E      		STA FUNTYP
  4539   A2   64      		LDX #FUNCT
  453B   20   2E   53 		JSR INFIXP
  453E   90   47      		BCC EVRETN
  4540   A4   0E      		LDY FUNTYP
  4542   A2   64      		LDX #FUNCT
  4544   20   EF   51 		JSR GETPRC
  4547   85   B2      		STA ANSN2
  4549   C5   04      		CMP PRECED
  454B   90   3A      		BCC EVRETN
  454D   F0   38      		BEQ EVRETN
  454F   A2   5E      		LDX #TOKPTR
  4551   20   00   54 		JSR TTKADV
  4554   20   D0   43 		JSR GTNXTK
  4557   A2   62      		LDX #NEXTOK
  4559   20   0C   51 		JSR PUSHP
  455C   A2   64      		LDX #FUNCT
  455E   20   0C   51 		JSR PUSHP
  4561   A6   0E      		LDX FUNTYP
  4563   20   23   51 		JSR PUSH
  4566   A6   06      		LDX EXPOUT
  4568   20   23   51 		JSR PUSH
  456B   A2   7E      		LDX #IFLEVL
  456D   20   0C   51 		JSR PUSHP
  4570   A6   04      		LDX PRECED
  4572   20   23   51 		JSR PUSH
  4575   A9   01      		LDA #$01
  4577   85   06      		STA EXPOUT
  4579   A5   B2      		LDA ANSN2
  457B   85   04      		STA PRECED
  457D   A2   B9      		LDX #EW1&$FF
  457F   A0   45      		LDY #EW1^
  4581   20   23   51 		JSR PUSH
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-28
LOGO	EVALUATOR ROUTINES

  4584   4C   75   41 		JMP EVAL
                      	;
  4587   A5   68      	EVRETN:	LDA FRAME
  4589   D0   04      		BNE EVRTN1
  458B   A5   69      		LDA FRAME+1
  458D   F0   06      		BEQ EVRET1
  458F   C6   7A      	EVRTN1:	DEC NEST
  4591   10   02      		BPL EVRET1
  4593   C6   7B      		DEC NEST+1
  4595   A5   07      	EVRET1:	LDA OTPUTN
  4597   F0   18      		BEQ EVRET2
  4599   A5   06      		LDA EXPOUT
  459B   D0   14      		BNE EVRET2
  459D   A5   0C      		LDA STPFLG
  459F   D0   10      		BNE EVRET2
  45A1   A5   0B      		LDA RUNFLG
  45A3   D0   0C      		BNE EVRET2
  45A5   A2   62      		LDX #NEXTOK
  45A7   20   66   51 		JSR VPOP
  45AA   A0   62      		LDY #NEXTOK
  45AC   A9   01      		LDA #XUOP
  45AE   4C   7C   60 		JMP ERROR
  45B1   A2   60      	EVRET2:	LDX #CURTOK
  45B3   20   4F   51 		JSR POP
  45B6   4C   52   41 		JMP POPJ
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-29
LOGO	EVALUATOR ROUTINES

                      	;EW1 pops everything EVWRAP pushed, checks for output (error if none),
                      	;then goes to FUNCAL with NARGS = 2.
                      	;
  45B9   20   7D   51 	EW1:	JSR POPB
  45BC   85   04      		STA PRECED
  45BE   A2   7E      		LDX #IFLEVL
  45C0   20   4F   51 		JSR POP
  45C3   20   7D   51 		JSR POPB
  45C6   85   06      		STA EXPOUT
  45C8   20   7D   51 		JSR POPB
  45CB   85   0E      		STA FUNTYP
  45CD   A2   64      		LDX #FUNCT
  45CF   20   4F   51 		JSR POP
  45D2   A2   62      		LDX #NEXTOK
  45D4   20   4F   51 		JSR POP
  45D7   A5   07      		LDA OTPUTN
  45D9   D0   03      		BNE EW1A
  45DB   4C   C9   43 		JMP VAL1R	;(ERROR XNOP,NEXTOK)
  45DE   A9   02      	EW1A:	LDA #$02
  45E0   85   05      		STA NARGS	;NARGS := 2
  45E2   D0   05      		BNE FUNCAL	;(Always)
                      	;
  45E4   20   7D   51 	EVAL1:	JSR POPB	;Now that we have the args, get the old PRECED
  45E7   85   04      		STA PRECED	; back and do the function
                      	;
                      	;FUNCAL calls either SFUNCL (with FBODY1 = Funct. #) or UFUNCL (with FBODY1
                      	; pointing to text). Both return to EVWRAP. (FNCAL1 is same, except U&SFNCL
                      	; don't return to EVWRAP).
                      	;
  45E9   A2   0D      	FUNCAL:	LDX #EVWRAP&$FF
  45EB   A0   45      		LDY #EVWRAP^
  45ED   20   23   51 		JSR PUSH
  45F0   A5   0E      	FNCAL1:	LDA FUNTYP
  45F2   C9   05      		CMP #SFUN
  45F4   F0   15      		BEQ FUN1
  45F6   C9   06      		CMP #UFUN
  45F8   F0   03      		BEQ FUN2
  45FA   20   BD   50 		JSR SYSBUG
  45FD   A0   02      	FUN2:	LDY #$02	;UFUN, get text pointer
  45FF   B1   64      		LDA (FUNCT),Y
  4601   85   6E      		STA FBODY1
  4603   C8           		INY
  4604   B1   64      		LDA (FUNCT),Y
  4606   85   6F      		STA FBODY1+1	;(CDR)
  4608   4C   47   46 		JMP XUFNCL
  460B   A0   02      	FUN1:	LDY #$02	;SFUN, get Function # from Sarray
  460D   B1   64      		LDA (FUNCT),Y	;FBODY1 := SARRAY[FUNCT + SA_SINDEX] (SA_SINDEX = 2)
  460F   85   6E      		STA FBODY1
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-30
LOGO	EVALUATOR ROUTINES

  4611   A9   00      	XSFNCL:	LDA #$00
  4613   85   A7      		STA TEMPN+1
  4615   A5   6E      		LDA FBODY1
  4617   0A           		ASL A
  4618   26   A7      		ROL TEMPN+1
  461A   85   A6      		STA TEMPN
  461C   A9   0E      		LDA #SYSTAB&$FF
  461E   65   A6      		ADC TEMPN
  4620   85   A6      		STA TEMPN
  4622   A5   A7      		LDA TEMPN+1
  4624   69   85      		ADC #SYSTAB^
  4626   85   A7      		STA TEMPN+1
  4628   A0   00      		LDY #$00
  462A   B1   A6      		LDA (TEMPN),Y
  462C   85   A4      		STA TEMPNH
  462E   C8           		INY
  462F   B1   A6      		LDA (TEMPN),Y
  4631   85   A5      		STA TEMPNH+1	;(CAR)
  4633   6C   A4   00 		JMP (TEMPNH)	;Execute the routine
                      	;
                      	;FBODY1 contains a one-byte index to a table of pointers to system routines
                      	;The table starts at SYSTAB, and the index is multiplied by two for indexing
                      	;the sixteen-bit addresses. Adresses in the table are stored low byte first,
                      	;high byte next.
                      	;
                      	;For CS, HOME, PENDOWN, PENUP, and WIPECLEAN, pointers all point to DO0A25
                      	;FORWARD, BACK, RIGHT, LEFT, SPIN, MOVE, and DISPLAY to DO1A25
                      	;For THEN, pointer points to XXSFR1
                      	;For RPAR, pointer points to XXSFR2
                      	;For LPAR, pointer points to PARLOP
                      	;For ALL, NAMES, TITLES, and PROCEDURES, pointers all point to XXSFR3
                      	;
  4636   A9   12      	XXSFR1:	LDA #XTHN
  4638   4C   7C   60 		JMP ERROR
  463B   A9   07      	XXSFR2:	LDA #XRPN
  463D   4C   7C   60 		JMP ERROR
  4640   A0   60      	XXSFR3:	LDY #CURTOK
  4642   A9   19      		LDA #XOPO
  4644   4C   7C   60 		JMP ERROR
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-31
LOGO	EVALUATOR ROUTINES

  4647   A0   72      	XUFNCL:	LDY #FPTR
  4649   A2   A6      		LDX #TEMPN
  464B   20   DD   53 		JSR LINPEK
  464E   20   8D   51 		JSR PSHTST
  4651   A2   76      		LDX #ULNEND
  4653   20   0C   51 		JSR PUSHP
  4656   A6   0F      		LDX UFRMAT
  4658   20   23   51 		JSR PUSH
  465B   A2   6C      		LDX #FBODY
  465D   20   0C   51 		JSR PUSHP
  4660   A2   72      		LDX #FPTR
  4662   20   0C   51 		JSR PUSHP
  4665   A6   0B      		LDX RUNFLG
  4667   20   23   51 		JSR PUSH
  466A   A9   00      		LDA #$00
  466C   85   0C      		STA STPFLG
  466E   85   0B      		STA RUNFLG
  4670   85   74      		STA GOPTR
  4672   85   75      		STA GOPTR+1	;GO_PTR := LNIL (0)
  4674   85   A8      		STA TEMPN1
  4676   85   A9      		STA TEMPN1+1	;TEMP := LNIL (0)
  4678   A5   6E      		LDA FBODY1
  467A   85   6C      		STA FBODY
  467C   85   72      		STA FPTR
  467E   A5   6F      		LDA FBODY1+1
  4680   85   6D      		STA FBODY+1
  4682   85   73      		STA FPTR+1
  4684   A5   7A      		LDA NEST
  4686   D0   3A      		BNE XUFN1
  4688   A5   7B      		LDA NEST+1
  468A   D0   36      		BNE XUFN1
  468C   A5   78      		LDA LEVNUM
  468E   D0   04      		BNE XUFN2
  4690   A5   79      		LDA LEVNUM+1
  4692   F0   2E      		BEQ XUFN1
  4694   A5   A6      	XUFN2:	LDA TEMPN
  4696   D0   17      		BNE XUFN3
  4698   A5   A7      		LDA TEMPN+1
  469A   D0   13      		BNE XUFN3
  469C   A5   5E      		LDA TOKPTR
  469E   D0   17      		BNE XUFN5
  46A0   A5   5F      		LDA TOKPTR+1
  46A2   D0   13      		BNE XUFN5
  46A4   A5   D1      		LDA LSTOP
  46A6   85   A8      		STA TEMPN1
  46A8   A5   D2      		LDA LSTOP+1
  46AA   85   A9      		STA TEMPN1+1
  46AC   4C   C2   46 		JMP XUFN1
  46AF   A5   5E      	XUFN3:	LDA TOKPTR
  46B1   D0   04      		BNE XUFN5
  46B3   A5   5F      		LDA TOKPTR+1
  46B5   F0   0B      		BEQ XUFN1
  46B7   A0   00      	XUFN5:	LDY #$00
  46B9   B1   5E      		LDA (TOKPTR),Y
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-32
LOGO	EVALUATOR ROUTINES

  46BB   85   A8      		STA TEMPN1
  46BD   C8           		INY
  46BE   B1   5E      		LDA (TOKPTR),Y
  46C0   85   A9      		STA TEMPN1+1	;(GETTOK)
  46C2   A2   6C      	XUFN1:	LDX #FBODY
  46C4   20   93   5C 		JSR GETTYP
  46C7   85   0F      		STA UFRMAT
  46C9   A5   A8      		LDA TEMPN1
  46CB   C5   D1      		CMP LSTOP
  46CD   D0   11      		BNE XUFN6
  46CF   A5   A9      		LDA TEMPN1+1
  46D1   C5   D2      		CMP LSTOP+1
  46D3   D0   0B      		BNE XUFN6
  46D5   A5   6A      		LDA XFRAME
  46D7   85   18      		STA SP
  46D9   A5   6B      		LDA XFRAME+1
  46DB   85   19      		STA SP+1
  46DD   4C   F6   48 		JMP XTAIL
  46E0   E6   66      	XUFN6:	INC FRMGSM
  46E2   D0   02      		BNE XUFN6A
  46E4   E6   67      		INC FRMGSM+1
  46E6   A6   68      	XUFN6A:	LDX FRAME
  46E8   A4   69      		LDY FRAME+1
  46EA   A5   18      		LDA SP
  46EC   85   68      		STA FRAME
  46EE   A5   19      		LDA SP+1
  46F0   85   69      		STA FRAME+1	;FRAME points to PREV_FRAME
  46F2   20   23   51 		JSR PUSH
  46F5   A2   6A      		LDX #XFRAME
  46F7   20   0C   51 		JSR PUSHP
  46FA   A6   0F      		LDX UFRMAT
  46FC   20   23   51 		JSR PUSH
  46FF   A2   60      		LDX #CURTOK
  4701   20   0C   51 		JSR PUSHP
  4704   A2   7A      		LDX #NEST
  4706   20   0C   51 		JSR PUSHP
  4709   A2   70      		LDX #LINNUM
  470B   20   0C   51 		JSR PUSHP
  470E   A2   5E      		LDX #TOKPTR
  4710   20   0C   51 		JSR PUSHP
  4713   A6   05      		LDX NARGS
  4715   E8           		INX
  4716   20   23   51 		JSR PUSH	;PUSH (NARGS+1)
  4719   A2   7C      		LDX #TLLEVS
  471B   20   0C   51 		JSR PUSHP
  471E   A0   00      		LDY #$00
  4720   B1   64      		LDA (FUNCT),Y
  4722   AA           		TAX
  4723   C8           		INY
  4724   B1   64      		LDA (FUNCT),Y
  4726   A8           		TAY		;(GET_FFRAME)
  4727   20   23   51 		JSR PUSH
  472A   A6   64      		LDX FUNCT
  472C   A4   65      		LDY FUNCT+1
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-33
LOGO	EVALUATOR ROUTINES

  472E   E8           		INX
  472F   D0   01      		BNE XUFN6B
  4731   C8           		INY
  4732   20   23   51 	XUFN6B:	JSR PUSH	;PUSH (FUNCT+1)
  4735   A0   01      		LDY #$01
  4737   84   7C      		STY TLLEVS
  4739   88           		DEY
  473A   84   70      		STY LINNUM
  473C   84   71      		STY LINNUM+1
  473E   84   7D      		STY TLLEVS+1
  4740   88           		DEY
  4741   84   7A      		STY NEST
  4743   84   7B      		STY NEST+1
  4745   E6   78      		INC LEVNUM
  4747   D0   02      		BNE XUFN6C
  4749   E6   79      		INC LEVNUM+1
  474B   C8           	XUFN6C:	INY
  474C   A5   66      		LDA FRMGSM
  474E   91   64      		STA (FUNCT),Y
  4750   C8           		INY
  4751   A5   67      		LDA FRMGSM+1
  4753   91   64      		STA (FUNCT),Y	;(PUT_FFRAME)
  4755   20   03   4A 		JSR STPTR1
  4758   A0   6C      		LDY #FBODY
  475A   A2   A8      		LDX #TEMPN1	;TEMPN1 gets ARGLIST
  475C   20   A4   54 		JSR GTTULN
  475F   A5   A8      	XUFNW:	LDA TEMPN1
  4761   D0   04      		BNE XUFNW1
  4763   A5   A9      		LDA TEMPN1+1
  4765   F0   3C      		BEQ XUFNWE
  4767   20   16   4A 	XUFNW1:	JSR PTVTST
  476A   A0   00      		LDY #$00
  476C   B1   A8      		LDA (TEMPN1),Y
  476E   85   AA      		STA TEMPN2	;TEMPN2 is VARNAM
  4770   C8           		INY
  4771   B1   A8      		LDA (TEMPN1),Y
  4773   85   AB      		STA TEMPN2+1	;(GETTOK)
  4775   A2   A8      		LDX #TEMPN1
  4777   20   00   54 		JSR TTKADV
  477A   A0   AA      		LDY #TEMPN2
  477C   A2   A6      		LDX #TEMPN	;TEMPN is TEMP1
  477E   20   BF   51 		JSR GETVAL
  4781   A2   A6      		LDX #TEMPN
  4783   20   0C   51 		JSR PUSHP
  4786   A0   00      		LDY #$00
  4788   B1   B0      		LDA (TEMPN5),Y	;TEMPN5 is POINTER
  478A   85   A6      		STA TEMPN
  478C   C8           		INY
  478D   B1   B0      		LDA (TEMPN5),Y
  478F   85   A7      		STA TEMPN+1	;(GETBAR)
  4791   20   25   4A 		JSR PTRDEC
  4794   A2   A6      		LDX #TEMPN
  4796   A0   AA      		LDY #TEMPN2
  4798   20   D7   51 		JSR PUTVAL
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-34
LOGO	EVALUATOR ROUTINES

  479B   A2   AA      		LDX #TEMPN2
  479D   20   0C   51 		JSR PUSHP
  47A0   4C   5F   47 		JMP XUFNW
  47A3   A5   18      	XUFNWE:	LDA SP
  47A5   85   6A      		STA XFRAME	;XFRAME points to location after last binding pair
  47A7   A5   19      		LDA SP+1
  47A9   85   6B      		STA XFRAME+1
  47AB   20   31   4A 		JSR INCVSP
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-35
LOGO	EVALUATOR ROUTINES

                      	;UF1 does a line of the procedure.
                      	;
  47AE   A5   74      	UF1:	LDA GOPTR
  47B0   D0   0C      		BNE UF1A
  47B2   A5   75      		LDA GOPTR+1
  47B4   D0   08      		BNE UF1A
  47B6   A2   72      		LDX #FPTR
  47B8   20   E7   55 		JSR ULNADV
  47BB   4C   CC   47 		JMP UF1C
  47BE   A5   74      	UF1A:	LDA GOPTR	;GOPTR <> NIL, so FPTR := GOPTR, reset GOPTR.
  47C0   85   72      		STA FPTR
  47C2   A5   75      		LDA GOPTR+1
  47C4   85   73      		STA FPTR+1
  47C6   A9   00      		LDA #$00
  47C8   85   74      		STA GOPTR
  47CA   85   75      		STA GOPTR+1
  47CC   A5   0C      	UF1C:	LDA STPFLG
  47CE   D0   2B      		BNE UF2A
  47D0   A5   72      		LDA FPTR
  47D2   D0   04      		BNE UF1D
  47D4   A5   73      		LDA FPTR+1
  47D6   F0   21      		BEQ UF2
  47D8   A0   72      	UF1D:	LDY #FPTR
  47DA   A2   5E      		LDX #TOKPTR
  47DC   20   A4   54 		JSR GTTULN
  47DF   A0   00      		LDY #$00
  47E1   B1   5E      		LDA (TOKPTR),Y
  47E3   85   70      		STA LINNUM
  47E5   C8           		INY
  47E6   B1   5E      		LDA (TOKPTR),Y
  47E8   85   71      		STA LINNUM+1	;(GETTOK)
  47EA   A2   5E      		LDX #TOKPTR
  47EC   20   00   54 		JSR TTKADV
  47EF   A2   AE      		LDX #UF1&$FF
  47F1   A0   47      		LDY #UF1^
  47F3   20   23   51 		JSR PUSH
  47F6   4C   07   41 		JMP EVLINE
                      	;
                      	;End of a procedure.
                      	;
  47F9   85   07      	UF2:	STA OTPUTN
  47FB   38           	UF2A:	SEC
  47FC   A5   78      		LDA LEVNUM
  47FE   E5   7C      		SBC TLLEVS
  4800   85   78      		STA LEVNUM
  4802   A5   79      		LDA LEVNUM+1
  4804   E5   7D      		SBC TLLEVS+1
  4806   85   79      		STA LEVNUM+1
  4808   A9   00      		LDA #$00
  480A   85   0C      		STA STPFLG
  480C   20   D6   50 		JSR POPFRM
  480F   20   7D   51 		JSR POPB
  4812   85   0B      		STA RUNFLG
  4814   A2   72      		LDX #FPTR
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-36
LOGO	EVALUATOR ROUTINES

  4816   20   4F   51 		JSR POP
  4819   A2   6C      		LDX #FBODY
  481B   20   4F   51 		JSR POP
  481E   20   7D   51 		JSR POPB
  4821   85   0F      		STA UFRMAT
  4823   A2   76      		LDX #ULNEND
  4825   20   4F   51 		JSR POP
  4828   4C   52   41 		JMP POPJ
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-37
LOGO	EVALUATOR ROUTINES

  482B   A2   00      	ERROR1:	LDX #$00
  482D   86   0B      		STX RUNFLG
  482F   A5   10      		LDA ERRFLG
  4831   86   10      		STX ERRFLG
  4833   C9   13      		CMP #XZAP
  4835   F0   10      		BEQ PPTTP
  4837   A6   78      		LDX LEVNUM
  4839   D0   04      		BNE ERR1A
  483B   A6   78      		LDX LEVNUM
  483D   F0   08      		BEQ PPTTP
  483F   A4   0A      	ERR1A:	LDY DBUGSW
  4841   D0   64      		BNE ERR1B
  4843   C9   10      		CMP #XBRK
  4845   F0   60      		BEQ ERR1B
  4847   A5   68      	PPTTP:	LDA FRAME
  4849   D0   04      		BNE PPTT1
  484B   A5   69      		LDA FRAME+1
  484D   F0   1D      		BEQ PPTT2
  484F   20   27   56 	PPTT1:	JSR RSTBND
  4852   A0   02      		LDY #$02	;(SF_XFRAME = 2.)
  4854   B1   68      		LDA (FRAME),Y
  4856   85   6A      		STA XFRAME
  4858   C8           		INY
  4859   B1   68      		LDA (FRAME),Y
  485B   85   6B      		STA XFRAME+1	;(GETBAR)
  485D   A0   00      		LDY #$00	;(SF_PREVIOUS_FRAME = 0)
  485F   B1   68      		LDA (FRAME),Y
  4861   AA           		TAX
  4862   C8           		INY
  4863   B1   68      		LDA (FRAME),Y
  4865   85   69      		STA FRAME+1	;(GETBAR)
  4867   86   68      		STX FRAME
  4869   4C   47   48 		JMP PPTTP
  486C   A9   00      	PPTT2:	LDA #$00
  486E   85   78      		STA LEVNUM
  4870   85   79      		STA LEVNUM+1
  4872   A5   10      		LDA ERRFLG
  4874   C9   13      		CMP #XZAP
  4876   D0   1F      		BNE JTOP
  4878   A5   B3      		LDA ANSN3
  487A   C9   01      		CMP #XNSTRN
  487C   D0   19      		BNE JTOP
  487E   A9   00      		LDA #VPDLBA&$FF
  4880   85   1A      		STA VSP		;If error was "out-of-nodes",
  4882   A9   1C      		LDA #VPDLBA^	;reset VPDL, do a garbage collect,
  4884   85   1B      		STA VSP+1	;and check remaining nodes. If low,
  4886   20   69   61 		JSR GARCOL	;ask user to delete something.
  4889   A5   15      		LDA NNODES+1
  488B   C9   09      		CMP #NODLIM^
  488D   90   08      		BCC JTOP
  488F   D0   09      		BNE NWARN
  4891   A5   14      		LDA NNODES
  4893   C9   66      		CMP #NODLIM&$FF
  4895   B0   03      		BCS NWARN
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-38
LOGO	EVALUATOR ROUTINES

  4897   4C   3E   40 	JTOP:	JMP TOPLOP
  489A   20   DC   69 	NWARN:	JSR BREAK1
  489D   A2   0C      		LDX #WRNMSG&$FF
  489F   A0   8E      		LDY #WRNMSG^	;"Please delete something"
  48A1   20   1D   53 		JSR PRTSTR
  48A4   20   DC   69 		JSR BREAK1
  48A7   A9   00      	ERR1B:	LDA #$00
  48A9   85   06      		STA EXPOUT	;(EXPOUT := 0)
  48AB   18           		CLC
  48AC   A5   6A      		LDA XFRAME
  48AE   69   02      		ADC #$02	;Don't pop the top return address
  48B0   85   18      		STA SP		;(RESET_EVAL)
  48B2   A5   6B      		LDA XFRAME+1
  48B4   69   00      		ADC #$00
  48B6   85   19      		STA SP+1
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-39
LOGO	EVALUATOR ROUTINES

  48B8   A5   0D      	ERROR2:	LDA DCOFLG
  48BA   F0   13      		BEQ ERR2A
  48BC   A9   00      		LDA #$00
  48BE   85   0C      		STA STPFLG
  48C0   85   0D      		STA DCOFLG
  48C2   85   5E      		STA TOKPTR
  48C4   85   5F      		STA TOKPTR+1
  48C6   A0   04      	ERR2A1:	LDY #$04	;(SF_FORMAT = 4.)
  48C8   B1   68      		LDA (FRAME),Y
  48CA   85   0F      		STA UFRMAT	;(GETBAR)
  48CC   4C   52   41 		JMP POPJ
  48CF   A5   0C      	ERR2A:	LDA STPFLG
  48D1   D0   F3      		BNE ERR2A1	;Zap out of EVLINE without resetting stuff.
  48D3   A9   4C      		LDA #'L		;Both flags = 0, it's a Pause.
  48D5   20   F8   69 		JSR TPCHR	;Type an "L"
  48D8   A2   78      		LDX #LEVNUM
  48DA   20   F1   66 		JSR TYPFIX
  48DD   A0   5E      		LDY #TOKPTR
  48DF   20   46   4A 		JSR PRDLIN	;Get a line
  48E2   98           		TYA
  48E3   F0   03      		BEQ ERR2A2	;Y zero means OK
  48E5   4C   2B   48 		JMP ERROR1
  48E8   A2   B8      	ERR2A2:	LDX #ERROR2&$FF
  48EA   A0   48      		LDY #ERROR2^
  48EC   20   23   51 		JSR PUSH
  48EF   A9   00      		LDA #LIST
  48F1   85   0F      		STA UFRMAT
  48F3   4C   07   41 		JMP EVLINE
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-40
LOGO	EVALUATOR ROUTINES

  48F6   A2   00      	XTAIL:	LDX #$00
  48F8   86   70      		STX LINNUM
  48FA   86   71      		STX LINNUM+1
  48FC   CA           		DEX
  48FD   86   7A      		STX NEST
  48FF   86   7B      		STX NEST+1
  4901   E6   78      		INC LEVNUM
  4903   D0   02      		BNE XTAIL1
  4905   E6   79      		INC LEVNUM+1
  4907   E6   7C      	XTAIL1:	INC TLLEVS
  4909   D0   02      		BNE XTAIL2
  490B   E6   7D      		INC TLLEVS+1
  490D   20   03   4A 	XTAIL2:	JSR STPTR1	;POINTER is TEMPN1
  4910   A0   0E      		LDY #$0E	;SF_NUMBER_BINDINGS (14.)
  4912   B1   68      		LDA (FRAME),Y
  4914   85   AC      		STA TEMPN3	;BINDINGS
  4916   A0   6C      		LDY #FBODY
  4918   A2   AA      		LDX #TEMPN2	;ARGLIST
  491A   20   A4   54 		JSR GTTULN	;GET_ULINE (ARG_LIST,FBODY,TRUE)
  491D   A0   04      		LDY #$04	;(SF_FORMAT = 4.)
  491F   A5   0F      		LDA UFRMAT
  4921   91   68      		STA (FRAME),Y	;(PUTBAR)
  4923   A0   06      		LDY #$06	;(SF_UFUN = 6.)
  4925   A5   60      		LDA CURTOK
  4927   91   68      		STA (FRAME),Y
  4929   C8           		INY
  492A   A5   61      		LDA CURTOK+1
  492C   91   68      		STA (FRAME),Y	;(PUTBAR)
  492E   C8           		INY
  492F   A0   00      		LDY #$00
  4931   B1   64      		LDA (FUNCT),Y
  4933   85   A8      		STA TEMPN1
  4935   C8           		INY
  4936   B1   64      		LDA (FUNCT),Y
  4938   85   A9      		STA TEMPN1+1	;(GET_FFRAME)
  493A   A5   A8      		LDA TEMPN1
  493C   C5   66      		CMP FRMGSM
  493E   D0   42      		BNE XTALWB
  4940   A5   A9      		LDA TEMPN1+1
  4942   C5   67      		CMP FRMGSM+1
  4944   D0   3C      		BNE XTALWB
  4946   A5   AA      	XTALWA:	LDA TEMPN2
  4948   D0   04      		BNE XTALW1
  494A   A5   AB      		LDA TEMPN2+1
  494C   F0   2B      		BEQ XTLWAE
  494E   20   16   4A 	XTALW1:	JSR PTVTST
  4951   A0   00      		LDY #$00
  4953   B1   AA      		LDA (TEMPN2),Y
  4955   85   AE      		STA TEMPN4	;VAR_NAME
  4957   C8           		INY
  4958   B1   AA      		LDA (TEMPN2),Y
  495A   85   AF      		STA TEMPN4+1	;(GETTOK)
  495C   A2   AA      		LDX #TEMPN2
  495E   20   00   54 		JSR TTKADV
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-41
LOGO	EVALUATOR ROUTINES

  4961   A0   00      		LDY #$00
  4963   B1   B0      		LDA (TEMPN5),Y
  4965   85   A8      		STA TEMPN1
  4967   C8           		INY
  4968   B1   B0      		LDA (TEMPN5),Y
  496A   85   A9      		STA TEMPN1+1	;(GETBAR)
  496C   20   25   4A 		JSR PTRDEC
  496F   A2   A8      		LDX #TEMPN1
  4971   A0   AE      		LDY #TEMPN4
  4973   20   D7   51 		JSR PUTVAL
  4976   4C   46   49 		JMP XTALWA
  4979   A0   0E      	XTLWAE:	LDY #$0E	;(SF_NUMBER_BINDINGS = 14.)
  497B   A5   AC      		LDA TEMPN3
  497D   91   68      		STA (FRAME),Y
  497F   4C   FD   49 		JMP XTAIL4
  4982   A5   AA      	XTALWB:	LDA TEMPN2
  4984   D0   04      		BNE XTALW2
  4986   A5   AA      		LDA TEMPN2
  4988   F0   3C      		BEQ XTLWBE
  498A   20   16   4A 	XTALW2:	JSR PTVTST
  498D   A0   00      		LDY #$00
  498F   B1   AA      		LDA (TEMPN2),Y
  4991   85   AE      		STA TEMPN4
  4993   C8           		INY
  4994   B1   AA      		LDA (TEMPN2),Y
  4996   85   AF      		STA TEMPN4+1	;(GETTOK)
  4998   A2   AA      		LDX #TEMPN2
  499A   20   00   54 		JSR TTKADV
  499D   A0   AE      		LDY #TEMPN4
  499F   A2   A8      		LDX #TEMPN1
  49A1   20   BF   51 		JSR GETVAL
  49A4   A2   A8      		LDX #TEMPN1
  49A6   20   0C   51 		JSR PUSHP
  49A9   A0   00      		LDY #$00
  49AB   B1   B0      		LDA (TEMPN5),Y
  49AD   85   A8      		STA TEMPN1
  49AF   C8           		INY
  49B0   B1   B0      		LDA (TEMPN5),Y
  49B2   85   A9      		STA TEMPN1+1	;(GETBAR)
  49B4   20   25   4A 		JSR PTRDEC
  49B7   A2   A8      		LDX #TEMPN1
  49B9   A0   AE      		LDY #TEMPN4
  49BB   20   D7   51 		JSR PUTVAL
  49BE   A2   AE      		LDX #TEMPN4
  49C0   20   0C   51 		JSR PUSHP
  49C3   4C   82   49 		JMP XTALWB
  49C6   A0   00      	XTLWBE:	LDY #$00
  49C8   B1   64      		LDA (FUNCT),Y
  49CA   85   A8      		STA TEMPN1
  49CC   C8           		INY
  49CD   B1   64      		LDA (FUNCT),Y
  49CF   85   A9      		STA TEMPN1+1	;(GET_FFRAME)
  49D1   A2   A8      		LDX #TEMPN1
  49D3   20   0C   51 		JSR PUSHP
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-42
LOGO	EVALUATOR ROUTINES

  49D6   A6   64      		LDX FUNCT
  49D8   A4   65      		LDY FUNCT+1
  49DA   E8           		INX
  49DB   D0   01      		BNE XTAIL5
  49DD   C8           		INY
  49DE   20   23   51 	XTAIL5:	JSR PUSH	;PUSH (FUNCT+1)
  49E1   A0   00      		LDY #$00
  49E3   A5   66      		LDA FRMGSM
  49E5   91   64      		STA (FUNCT),Y
  49E7   C8           		INY
  49E8   A5   67      		LDA FRMGSM+1
  49EA   91   64      		STA (FUNCT),Y	;(PUT_FFRAME)
  49EC   A0   0E      		LDY #$0E
  49EE   38           		SEC		;Carry added in (BINDINGS + NARGS + 1)
  49EF   A5   AC      		LDA TEMPN3
  49F1   65   05      		ADC NARGS
  49F3   91   68      		STA (FRAME),Y
  49F5   A5   18      		LDA SP
  49F7   85   6A      		STA XFRAME
  49F9   A5   19      		LDA SP+1
  49FB   85   6B      		STA XFRAME+1	;XFRAME := SP (right above last binding pair)
  49FD   20   31   4A 	XTAIL4:	JSR INCVSP
  4A00   4C   AE   47 		JMP UF1
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-43
LOGO	EVALUATOR ROUTINES

  4A03   A5   05      	STPTR1:	LDA NARGS
  4A05   0A           		ASL A
  4A06   85   A4      		STA TEMPNH
  4A08   38           		SEC
  4A09   A5   1A      		LDA VSP
  4A0B   E5   A4      		SBC TEMPNH
  4A0D   85   B0      		STA TEMPN5
  4A0F   A5   1B      		LDA VSP+1
  4A11   E9   00      		SBC #$00
  4A13   85   B1      		STA TEMPN5+1	;POINTR := VSP - (NARGS * 2)
  4A15   60           		RTS
                      	;
  4A16   A5   1B      	PTVTST:	LDA VSP+1
  4A18   C5   B1      		CMP TEMPN5+1
  4A1A   D0   14      		BNE SBHAK1
  4A1C   A5   1A      		LDA VSP
  4A1E   C5   B0      		CMP TEMPN5
  4A20   D0   0E      		BNE SBHAK1
  4A22   20   BD   50 	PTVBUG:	JSR SYSBUG	;Error if POINTER = VSP
                      	;
  4A25   18           	PTRDEC:	CLC
  4A26   A5   B0      		LDA TEMPN5
  4A28   69   02      		ADC #$02
  4A2A   85   B0      		STA TEMPN5
  4A2C   90   02      		BCC SBHAK1
  4A2E   E6   B1      		INC TEMPN5+1	;POINTR := POINTR + 2
  4A30   60           	SBHAK1:	RTS
                      	;
  4A31   A5   05      	INCVSP:	LDA NARGS
  4A33   0A           		ASL A
  4A34   85   A4      		STA TEMPNH
  4A36   38           		SEC
  4A37   A5   1A      		LDA VSP
  4A39   E5   A4      		SBC TEMPNH
  4A3B   85   1A      		STA VSP
  4A3D   B0   02      		BCS INCVE
  4A3F   C6   1B      		DEC VSP+1	;VSP := VSP - NARGS * 2
  4A41   60           	INCVE:	RTS
                      	;
                      	;End of Evaluator Dispatches and Subroutines.
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-44
LOGO	READER AND TOKENIZER

                      	.SBTTL	Reader and Tokenizer
  4A42   84   BD      	READLN:	STY TEMPX2	;Input line pointer location
  4A44   D0   13      		BNE REDLN1	;(Always)
  4A46   84   BD      	PRDLIN:	STY TEMPX2
  4A48   A5   12      		LDA INDEV
  4A4A   D0   F6      		BNE READLN	;Don't type prompt if not Screen output
  4A4C   A5   08      		LDA EDSW
  4A4E   D0   04      		BNE PRD2
  4A50   A9   3F      		LDA #QPRMPT	;Reqular prompt
  4A52   D0   02      		BNE PRD3
  4A54   A9   3E      	PRD2:	LDA #EPRMPT	;Edit-mode prompt
  4A56   20   F8   69 	PRD3:	JSR TPCHR
                      	;
  4A59   A9   00      	REDLN1:	LDA #$00
  4A5B   85   B9      		STA TEMPN8	;List-nesting counter
  4A5D   85   98      		STA CELPTR
  4A5F   85   99      		STA CELPTR+1
  4A61   E6   F1      		INC PRDFLG
  4A63   A6   BD      		LDX TEMPX2
  4A65   95   00      		STA $00,X	;Initialize ANS to Lnil
  4A67   95   01      		STA $01,X
  4A69   85   BA      		STA TEMPN8+1	;Character buffer pointer
  4A6B   A9   B5      		LDA #RDL1&$FF	;Error return address
  4A6D   85   16      		STA ERRRET
  4A6F   A9   4A      		LDA #RDL1^
  4A71   85   17      		STA ERRRET+1
  4A73   BA           		TSX
  4A74   86   11      		STX RETADR
  4A76   A9   01      		LDA #NEWLIN
  4A78   85   BE      		STA TEMPX2+1	;Current cell type
  4A7A   20   67   6D 		JSR GETLN	;Get a line into the Line buffer
  4A7D   86   B7      		STX TEMPN7
  4A7F   A5   BA      	RDLNW:	LDA TEMPN8+1	;Loop processes line, token by token
  4A81   C5   B7      		CMP TEMPN7
  4A83   D0   34      		BNE TGTTOK	;Process the next token
  4A85   A5   B9      	RDLNWE:	LDA TEMPN8	;Done, close all lists
  4A87   F0   15      		BEQ RDL1A
  4A89   A5   13      	RDL1A1:	LDA OUTDEV
  4A8B   D0   02      		BNE RDL1A2
  4A8D   A9   5D      		LDA #']		;Close the list (if Screen output)
  4A8F   20   F8   69 	RDL1A2:	JSR TPCHR
  4A92   A2   A8      		LDX #TEMPN1
  4A94   20   4F   51 		JSR POP		;Discard pushed list pointers
  4A97   C6   B9      		DEC TEMPN8	;Decrement list nesting counter
  4A99   D0   EE      		BNE RDL1A1
  4A9B   20   DC   69 		JSR BREAK1
  4A9E   A0   00      	RDL1A:	LDY #$00	;Y zero means OK
  4AA0   A9   00      	RDL1B:	LDA #$00
  4AA2   85   98      		STA CELPTR
  4AA4   85   99      		STA CELPTR+1
  4AA6   85   F1      		STA PRDFLG
  4AA8   A2   00      	RSTERR:	LDX #$00	;General reset-error routine
  4AAA   86   11      		STX RETADR
  4AAC   A2   2B      		LDX #ERROR1&$FF
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-45
LOGO	READER AND TOKENIZER

  4AAE   86   16      		STX ERRRET
  4AB0   A2   48      		LDX #ERROR1^
  4AB2   86   17      		STX ERRRET+1
  4AB4   60           		RTS
  4AB5   A0   01      	RDL1:	LDY #$01	;Y nonzero means error
  4AB7   D0   E7      		BNE RDL1B	;(Always)
  4AB9   A9   00      	TGTTOK:	LDA #$00
  4ABB   85   B3      		STA ANSN3	;No typecode yet (for SLFDLP)
  4ABD   85   B8      		STA TEMPN7+1	;Funny-pname if non-zero
  4ABF   85   AF      		STA TEMPN4+1	;Indicates quoted atom if non-zero
  4AC1   A6   BA      		LDX TEMPN8+1
  4AC3   BD   00   02 	TGT1:	LDA LINARY,X
  4AC6   C9   20      		CMP #$20
  4AC8   D0   07      		BNE TGT2
  4ACA   E8           		INX
  4ACB   E4   B7      		CPX TEMPN7
  4ACD   D0   F4      		BNE TGT1	;Skip spaces
  4ACF   F0   B4      		BEQ RDLNWE
  4AD1   86   BA      	TGT2:	STX TEMPN8+1
  4AD3   C9   5D      		CMP #']
  4AD5   F0   38      		BEQ TKRBR
  4AD7   48           		PHA
  4AD8   20   91   4C 		JSR ALLSTC
  4ADB   68           		PLA
  4ADC   C9   5B      		CMP #'[
  4ADE   F0   1F      		BEQ TKLBR
  4AE0   20   CC   4C 		JSR SLFDLP
  4AE3   90   4F      		BCC TKNDL
  4AE5   85   B0      		STA TEMPN5
  4AE7   E6   BA      		INC TEMPN8+1
  4AE9   A2   00      		LDX #$00
  4AEB   86   B1      		STX TEMPN5+1
  4AED   A0   B0      		LDY #TEMPN5	;Cons up a pname
  4AEF   A9   B5      		LDA #TEMPN6
  4AF1   85   A2      		STA ANSN
  4AF3   A9   02      		LDA #STRING
  4AF5   20   09   52 		JSR CONS
  4AF8   A9   01      		LDA #ATOM
  4AFA   85   B3      		STA ANSN3
  4AFC   4C   68   4C 		JMP ADDTOK
  4AFF   E6   B9      	TKLBR:	INC TEMPN8	;Start list - increment list nesting counter
  4B01   E6   BA      		INC TEMPN8+1	;Skip to next character
  4B03   A2   98      		LDX #CELPTR
  4B05   20   0C   51 		JSR PUSHP	;Push the list-pointer cell
  4B08   A9   02      		LDA #NEWLST
  4B0A   85   BE      		STA TEMPX2+1	;Next cell allocated will be New-list type
  4B0C   4C   7F   4A 		JMP RDLNW	;Continue processing line
  4B0F   C6   B9      	TKRBR:	DEC TEMPN8	;End list - decrement list nesting counter
  4B11   30   0E      		BMI TKRBR1	;Error if unbalanced brackets
  4B13   E6   BA      		INC TEMPN8+1	;Skip to next character
  4B15   A2   98      		LDX #CELPTR
  4B17   20   4F   51 		JSR POP		;Pop list pointer
  4B1A   A9   03      		LDA #REGCEL
  4B1C   85   BE      		STA TEMPX2+1
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-46
LOGO	READER AND TOKENIZER

  4B1E   4C   7F   4A 		JMP RDLNW	;Continue processing line
  4B21   A9   00      	TKRBR1:	LDA #$00
  4B23   85   13      		STA OUTDEV	;Set I/O to Keyboard and Screen
  4B25   85   12      		STA INDEV
  4B27   A2   D5      		LDX #RDRER2&$FF
  4B29   A0   8D      		LDY #RDRER2^
  4B2B   20   1D   53 		JSR PRTSTR	;Print "You have mismatched brackets" error
  4B2E   20   DC   69 		JSR BREAK1
  4B31   4C   B5   4A 		JMP RDL1	;Error escape
  4B34   C9   22      	TKNDL:	CMP #'"
  4B36   D0   0B      		BNE TGT3A
  4B38   E6   AF      		INC TEMPN4+1	;Quoted atom
  4B3A   E6   BA      		INC TEMPN8+1	;Skip to next character
  4B3C   A9   08      		LDA #QATOM
  4B3E   85   B3      		STA ANSN3
  4B40   4C   5C   4B 		JMP TGT3B1	;Check for funny-pname
  4B43   C9   27      	TGT3A:	CMP #$27	;(Single Quote)
  4B45   D0   0B      		BNE TGT3B
  4B47   E6   BA      		INC TEMPN8+1	;Skip to next character
  4B49   E6   B8      		INC TEMPN7+1	;Token is a funny_pname
  4B4B   A9   01      	TKAORL:	LDA #ATOM	;Token is an Atom or Label
  4B4D   85   B3      		STA ANSN3
  4B4F   4C   69   4B 		JMP TKATOM	;Tokenize it
  4B52   C9   3A      	TGT3B:	CMP #':
  4B54   D0   F5      		BNE TKAORL
  4B56   E6   BA      		INC TEMPN8+1	;Dotted atom, skip to next character
  4B58   A9   09      		LDA #DATOM
  4B5A   85   B3      		STA ANSN3
  4B5C   A6   BA      	TGT3B1:	LDX TEMPN8+1
  4B5E   BD   00   02 		LDA LINARY,X
  4B61   C9   27      		CMP #$27
  4B63   D0   04      		BNE TKATOM
  4B65   E6   B8      		INC TEMPN7+1	;Token is funny-pname
  4B67   E6   BA      		INC TEMPN8+1	;Skip to next character
  4B69   A6   BA      	TKATOM:	LDX TEMPN8+1
  4B6B   E4   B7      		CPX TEMPN7	;Check for empty word at end-of-line
  4B6D   F0   10      		BEQ EMPTWD
  4B6F   A5   B8      		LDA TEMPN7+1
  4B71   F0   03      		BEQ TKATM2
  4B73   4C   F8   4B 		JMP NTFIX	;Funny_pname, not fixnum then
  4B76   BD   00   02 	TKATM2:	LDA LINARY,X
  4B79   C9   20      		CMP #$20	;Check for empty word inside line
  4B7B   D0   0B      		BNE TKATM1
  4B7D   E6   BA      	EMTWD1:	INC TEMPN8+1	;Skip space if necessary
  4B7F   A9   00      	EMPTWD:	LDA #$00	;Empty word, link Lnil node onto input line
  4B81   85   B5      		STA TEMPN6
  4B83   85   B6      		STA TEMPN6+1
  4B85   4C   68   4C 		JMP ADDTOK	;Link up token and continue
  4B88   A9   00      	TKATM1:	LDA #$00
  4B8A   85   B5      		STA TEMPN6	;Attempt to compute fixnum value
  4B8C   85   B6      		STA TEMPN6+1
  4B8E   86   B0      	ATM1:	STX TEMPN5	;Save temporary character pointer
  4B90   E4   B7      		CPX TEMPN7
  4B92   F0   49      		BEQ ATM2	;End of line encountered, must be fixnum
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-47
LOGO	READER AND TOKENIZER

  4B94   BD   00   02 		LDA LINARY,X
  4B97   20   CC   4C 		JSR SLFDLP
  4B9A   B0   41      		BCS ATM2	;Self delimiter encountered, must be fixnum
  4B9C   20   39   4D 		JSR DIGITP	;?CHECK FOR FLONUM - DECIMAL PT., E OR N
  4B9F   90   57      		BCC NTFIX	;Not a digit, no fixnum
  4BA1   06   B5      		ASL TEMPN6	;Multiply value by 10.
  4BA3   26   B6      		ROL TEMPN6+1
  4BA5   B0   51      		BCS NTFIX	;Not a fixnum if value overflow
  4BA7   A6   B5      		LDX TEMPN6	;?TWO MORE BYTES FOR FIXNUM
  4BA9   A4   B6      		LDY TEMPN6+1	;?MAKE IT A FLONUM IF NECESSARY
  4BAB   06   B5      		ASL TEMPN6
  4BAD   26   B6      		ROL TEMPN6+1
  4BAF   B0   47      		BCS NTFIX
  4BB1   06   B5      		ASL TEMPN6
  4BB3   26   B6      		ROL TEMPN6+1
  4BB5   B0   41      		BCS NTFIX
  4BB7   8A           		TXA
  4BB8   65   B5      		ADC TEMPN6
  4BBA   85   B5      		STA TEMPN6
  4BBC   98           		TYA
  4BBD   65   B6      		ADC TEMPN6+1
  4BBF   B0   37      		BCS NTFIX
  4BC1   85   B6      		STA TEMPN6+1
  4BC3   A6   B0      		LDX TEMPN5
  4BC5   BD   00   02 		LDA LINARY,X	;Add value of current digit to subtotal
  4BC8   E9   2F      		SBC #$2F	;(Carry is clear)
  4BCA   18           		CLC
  4BCB   65   B5      		ADC TEMPN6
  4BCD   85   B5      		STA TEMPN6
  4BCF   A5   B6      		LDA TEMPN6+1
  4BD1   69   00      		ADC #$00
  4BD3   30   23      		BMI NTFIX
  4BD5   B0   21      		BCS NTFIX
  4BD7   85   B6      		STA TEMPN6+1
  4BD9   E8           		INX		;Get next digit
  4BDA   4C   8E   4B 		JMP ATM1
  4BDD   86   BA      	ATM2:	STX TEMPN8+1	;Fixnum - set character pointer to after fixnum
  4BDF   A2   00      		LDX #$00	;?FIXNUM HIGH-WORD
  4BE1   A0   B5      		LDY #TEMPN6
  4BE3   84   A2      		STY ANSN
  4BE5   A9   03      		LDA #FIX
  4BE7   20   09   52 		JSR CONS	;Cons a fixnum cell with the value in it
  4BEA   A0   00      		LDY #$00
  4BEC   A5   B5      		LDA TEMPN6
  4BEE   91   98      		STA (CELPTR),Y	;Link the cell on to the input line
  4BF0   C8           		INY
  4BF1   A5   B6      		LDA TEMPN6+1
  4BF3   91   98      		STA (CELPTR),Y
  4BF5   4C   7F   4A 		JMP RDLNW	;Continue processing line
  4BF8   A2   BB      	NTFIX:	LDX #TEMPX1	;Not a fixnum - cons up a pname (original pointer)
  4BFA   A9   00      		LDA #$00
  4BFC   85   B4      		STA ANSNX	;Indicates end of pname if non-zero
  4BFE   48           		PHA		;First time around, push zero
  4BFF   F0   09      		BEQ NXTCHS	;(Always)
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-48
LOGO	READER AND TOKENIZER

  4C01   A5   B4      	NXTTWO:	LDA ANSNX	;Next two characters
  4C03   D0   63      		BNE ADDTOK	;Link up token if end of pname
  4C05   A9   02      		LDA #$02
  4C07   48           		PHA		;Not first time around, push 2
  4C08   A2   B0      		LDX #TEMPN5	;Next pointer
  4C0A   86   A2      	NXTCHS:	STX ANSN
  4C0C   A6   BA      		LDX TEMPN8+1
  4C0E   E4   B7      		CPX TEMPN7
  4C10   F0   55      		BEQ ADDTK1	;Finish token (end of line), even no. chars.
  4C12   BD   00   02 		LDA LINARY,X
  4C15   85   A8      		STA TEMPN1	;First character in pair
  4C17   20   CC   4C 		JSR SLFDLP
  4C1A   B0   49      		BCS ADDTK2	;Finish token (delimiter hit), even no. chars.
  4C1C   E8           		INX		;Skip to next character
  4C1D   E4   B7      		CPX TEMPN7
  4C1F   F0   0D      		BEQ FINTK1	;Finish token (end of line), odd no. chars.
  4C21   BD   00   02 		LDA LINARY,X
  4C24   85   A9      		STA TEMPN1+1	;Second character in pair
  4C26   20   CC   4C 		JSR SLFDLP
  4C29   B0   03      		BCS FINTK1	;Finish token (delimiter hit), odd no. chars.
  4C2B   E8           		INX
  4C2C   90   06      		BCC CNSSTR	;(Always) Cons new pair on to pname string
  4C2E   A9   00      	FINTK1:	LDA #$00
  4C30   85   A9      		STA TEMPN1+1	;Odd no. chars. in pname, zero last character
  4C32   E6   B4      		INC ANSNX	;Indicates end of pname
  4C34   86   BA      	CNSSTR:	STX TEMPN8+1	;Skip the last character (if not delimiter)
  4C36   A0   A8      		LDY #TEMPN1
  4C38   A2   00      		LDX #$00
  4C3A   A9   02      		LDA #STRING
  4C3C   20   09   52 		JSR CONS	;Cons up the new pname pair
  4C3F   68           		PLA
  4C40   A8           		TAY		;0 first time, 2 otherwise
  4C41   D0   11      		BNE NTFRST
  4C43   A5   BB      		LDA TEMPX1
  4C45   91   98      		STA (CELPTR),Y	;(Linking garbage-collect-protects it)
  4C47   AA           		TAX
  4C48   C8           		INY
  4C49   A5   BC      		LDA TEMPX1+1
  4C4B   91   98      		STA (CELPTR),Y
  4C4D   85   B6      		STA TEMPN6+1
  4C4F   86   B5      		STX TEMPN6	;Atom pointer
  4C51   4C   01   4C 		JMP NXTTWO	;Continue making the pname
  4C54   A5   B0      	NTFRST:	LDA TEMPN5	;Link cell onto pname string
  4C56   AA           		TAX
  4C57   91   BB      		STA (TEMPX1),Y
  4C59   C8           		INY
  4C5A   A5   B1      		LDA TEMPN5+1
  4C5C   91   BB      		STA (TEMPX1),Y	;(RPLACD)
  4C5E   85   BC      		STA TEMPX1+1
  4C60   86   BB      		STX TEMPX1
  4C62   4C   01   4C 		JMP NXTTWO	;Continue making the pname
  4C65   86   BA      	ADDTK2:	STX TEMPN8+1	;In case colon or quote skipped
  4C67   68           	ADDTK1:	PLA		;Pop chain indicator if loop exit
  4C68   A2   B5      	ADDTOK:	LDX #TEMPN6
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-49
LOGO	READER AND TOKENIZER

  4C6A   A0   BB      		LDY #TEMPX1
  4C6C   20   20   5F 		JSR INTERN	;Intern atom
  4C6F   A5   B3      	ATM12B:	LDA ANSN3
  4C71   C9   01      		CMP #ATOM
  4C73   F0   05      		BEQ ATM12A
  4C75   A2   BB      		LDX #TEMPX1
  4C77   20   93   52 		JSR PUTTYP	;Give atom a type if not Atom
  4C7A   A0   00      	ATM12A:	LDY #$00
  4C7C   A5   BB      		LDA TEMPX1
  4C7E   91   98      		STA (CELPTR),Y	;Link atom onto input line
  4C80   C8           		INY
  4C81   A5   BC      		LDA TEMPX1+1
  4C83   91   98      		STA (CELPTR),Y
  4C85   A5   B8      		LDA TEMPN7+1
  4C87   F0   05      		BEQ NXTE
  4C89   A2   BB      		LDX #TEMPX1
  4C8B   20   DA   52 		JSR PTSPNM	;Put-strange-pname if funny-pname indicated
  4C8E   4C   7F   4A 	NXTE:	JMP RDLNW	;Continue processing line
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-50
LOGO	READER AND TOKENIZER

  4C91   A9   A6      	ALLSTC:	LDA #TEMPN	;Allocate a new list cell
  4C93   85   A2      		STA ANSN
  4C95   A9   00      		LDA #$00
  4C97   AA           		TAX
  4C98   A8           		TAY
  4C99   20   09   52 		JSR CONS	;(Type list)
  4C9C   A0   00      		LDY #$00
  4C9E   A5   BE      		LDA TEMPX2+1
  4CA0   C9   01      		CMP #NEWLIN
  4CA2   D0   0C      		BNE ALSTC1
  4CA4   A6   BD      		LDX TEMPX2	;New line, ANS pointer points to cell
  4CA6   A5   A6      		LDA TEMPN
  4CA8   95   00      		STA $00,X
  4CAA   A5   A7      		LDA TEMPN+1
  4CAC   95   01      		STA $01,X
  4CAE   D0   0F      		BNE ALSTC3	;(Always)
  4CB0   C9   02      	ALSTC1:	CMP #NEWLST
  4CB2   F0   02      		BEQ ALSTC4	;For new-list, rplaca onto input line
  4CB4   C8           		INY		;Regular cell, link onto input line
  4CB5   C8           		INY
  4CB6   A5   A6      	ALSTC4:	LDA TEMPN
  4CB8   91   98      		STA (CELPTR),Y	;Rplaca or Rplacd for new-list or regular-cell
  4CBA   C8           		INY
  4CBB   A5   A7      		LDA TEMPN+1
  4CBD   91   98      		STA (CELPTR),Y
  4CBF   A5   A6      	ALSTC3:	LDA TEMPN
  4CC1   85   98      		STA CELPTR	;New input line end pointer
  4CC3   A5   A7      		LDA TEMPN+1
  4CC5   85   99      		STA CELPTR+1
  4CC7   A9   03      		LDA #REGCEL
  4CC9   85   BE      		STA TEMPX2+1	;Next cell allocated will be regular-cell
  4CCB   60           		RTS
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-51
LOGO	READER AND TOKENIZER

  4CCC   A4   B8      	SLFDLP:	LDY TEMPN7+1	;Checks for self-delimiter
  4CCE   F0   0F      		BEQ SLF2	;Not funny-pname
  4CD0   C9   27      		CMP #$27	;If funny-pname, look for quote
  4CD2   D0   69      		BNE DIGN	;Not delimiter if no quote
  4CD4   E8           		INX
  4CD5   BD   00   02 		LDA LINARY,X
  4CD8   C9   27      		CMP #$27	;Look for pair of quotes
  4CDA   F0   61      		BEQ DIGN	;If pair, skip over one, not delimiter
  4CDC   4C   37   4D 		JMP DIGY	;If no pair, the quote is a delimiter, skip it
  4CDF   A4   AF      	SLF2:	LDY TEMPN4+1	;Check for quoted atom
  4CE1   F0   0E      		BEQ SLF1
  4CE3   C9   20      		CMP #$20	;Quoted atoms can be terminated by a space,
  4CE5   F0   50      		BEQ DIGY
  4CE7   C9   5D      		CMP #']		;or a closing bracket,
  4CE9   D0   52      		BNE DIGN
  4CEB   C9   29      		CMP #')		;or a closing parenthesis.
  4CED   D0   4E      		BNE DIGN
  4CEF   F0   46      		BEQ DIGY
  4CF1   A4   B3      	SLF1:	LDY ANSN3	;Check for type Atom
  4CF3   C0   01      		CPY #ATOM
  4CF5   D0   0C      		BNE SLF3
  4CF7   C9   3A      		CMP #':		;If Atom, check for colon (for Label atom)
  4CF9   D0   08      		BNE SLF3
  4CFB   E8           		INX		;If colon, skip over it and change type to Latom
  4CFC   A0   0A      		LDY #LATOM
  4CFE   84   B3      		STY ANSN3
  4D00   4C   37   4D 		JMP DIGY
  4D03   C9   20      	SLF3:	CMP #$20	;Compare character to all delimiters
  4D05   F0   30      		BEQ DIGY
  4D07   C9   3C      		CMP #'<
  4D09   F0   2C      		BEQ DIGY
  4D0B   C9   3E      		CMP #'>
  4D0D   F0   28      		BEQ DIGY
  4D0F   C9   3D      		CMP #'=
  4D11   F0   24      		BEQ DIGY
  4D13   C9   3B      		CMP #$3B	;(Semicolon)
  4D15   F0   20      		BEQ DIGY
  4D17   C9   29      		CMP #')
  4D19   F0   1C      		BEQ DIGY
  4D1B   C9   28      		CMP #'(
  4D1D   F0   18      		BEQ DIGY
  4D1F   C9   2B      		CMP #'+
  4D21   F0   14      		BEQ DIGY
  4D23   C9   2D      		CMP #'-
  4D25   F0   10      		BEQ DIGY
  4D27   C9   2A      		CMP #'*
  4D29   F0   0C      		BEQ DIGY
  4D2B   C9   2F      		CMP #'/
  4D2D   F0   08      		BEQ DIGY
  4D2F   C9   5D      		CMP #']
  4D31   F0   04      		BEQ DIGY
  4D33   C9   5B      		CMP #'[
  4D35   D0   06      		BNE DIGN
  4D37   38           	DIGY:	SEC		;Carry set means true
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-52
LOGO	READER AND TOKENIZER

  4D38   60           		RTS
                      	;
  4D39   C9   3A      	DIGITP:	CMP #':		;Checks to see if character is a digit (0-9)
  4D3B   90   02      		BCC DIGP1
  4D3D   18           	DIGN:	CLC		;Carry clear means not true
  4D3E   60           		RTS
  4D3F   C9   30      	DIGP1:	CMP #'0		;(Sets carry correctly)
  4D41   60           		RTS
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-53
LOGO	READER AND TOKENIZER

  4D42   86   A3      	EDLINE:	STX ANSN1
  4D44   B5   00      		LDA $00,X		;pointer to line
  4D46   85   A4      		STA TEMPNH		;gets stored in TEMPNH
  4D48   B5   01      		LDA $01,X
  4D4A   85   A5      		STA TEMPNH+1
  4D4C   A9   38      		LDA #PTLN2&$FF		;error will be "out of storage"
  4D4E   85   16      		STA ERRRET		;Error return pointer.
  4D50   A9   4E      		LDA #PTLN2^
  4D52   85   17      		STA ERRRET+1
  4D54   BA           		TSX
  4D55   86   11      		STX RETADR		;Save EDLINE's return address
  4D57   C0   00      		CPY #$00
  4D59   D0   24      		BNE GETHIG		;Y nonzero for default line number
  4D5B   B1   A4      		LDA (TEMPNH),Y
  4D5D   85   AE      		STA TEMPN4		;TEMPN4 is the line number
  4D5F   C8           		INY
  4D60   B1   A4      		LDA (TEMPNH),Y
  4D62   85   AF      		STA TEMPN4+1		;(car line)
  4D64   88           	EDLN1:	DEY
  4D65   B1   AE      		LDA (TEMPN4),Y
  4D67   AA           		TAX
  4D68   C8           		INY
  4D69   B1   AE      		LDA (TEMPN4),Y
  4D6B   30   0D      		BMI LINERR
  4D6D   D0   04      		BNE EDLN2
  4D6F   E0   00      		CPX #$00
  4D71   F0   07      		BEQ LINERR
  4D73   85   AF      	EDLN2:	STA TEMPN4+1		;(caar line), that is,
  4D75   86   AE      		STX TEMPN4		;actual line #
  4D77   4C   E5   4D 		JMP EDL1
  4D7A   A9   20      	LINERR:	LDA #XILN		;"Illegal Line Number"
  4D7C   4C   7C   60 		JMP ERROR
  4D7F   A9   00      	GETHIG:	LDA #$00
  4D81   85   AE      		STA TEMPN4
  4D83   85   AF      		STA TEMPN4+1
  4D85   A0   02      		LDY #$02		;get body pointer
  4D87   B1   96      		LDA (EDBOD),Y		;skip args
  4D89   85   AC      		STA TEMPN3		;TEMPN3 is BODY ptr.
  4D8B   C8           		INY
  4D8C   B1   96      		LDA (EDBOD),Y
  4D8E   85   AD      		STA TEMPN3+1		;(cdr body)
  4D90   A5   AC      	GTHW:	LDA TEMPN3		;if it ain't LNIL,
  4D92   D0   04      		BNE GTH1		;take the cdr again
  4D94   A5   AD      		LDA TEMPN3+1
  4D96   F0   40      		BEQ GTHE
  4D98   A0   00      	GTH1:	LDY #$00
  4D9A   B1   AC      		LDA (TEMPN3),Y
  4D9C   85   AA      		STA TEMPN2		;TEMPN2 is Current Line
  4D9E   C8           		INY			;(car line) - put pointer
  4D9F   B1   AC      		LDA (TEMPN3),Y
  4DA1   85   AB      		STA TEMPN2+1		;to line num in TEMPN2
  4DA3   C8           		INY
  4DA4   B1   AC      		LDA (TEMPN3),Y
  4DA6   AA           		TAX			;get (cdr body)
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-54
LOGO	READER AND TOKENIZER

  4DA7   C8           		INY
  4DA8   B1   AC      		LDA (TEMPN3),Y
  4DAA   85   AD      		STA TEMPN3+1
  4DAC   86   AC      		STX TEMPN3
  4DAE   A0   00      		LDY #$00
  4DB0   B1   AA      		LDA (TEMPN2),Y
  4DB2   AA           		TAX
  4DB3   C8           		INY			;(car line) -- this one
  4DB4   B1   AA      		LDA (TEMPN2),Y		;gets actual line number
  4DB6   85   AB      		STA TEMPN2+1
  4DB8   86   AA      		STX TEMPN2
  4DBA   A5   AF      		LDA TEMPN4+1		;old greatest line #
  4DBC   C5   AB      		CMP TEMPN2+1		;new line #
  4DBE   90   08      		BCC GTH3		;old < new - replace
  4DC0   D0   CE      		BNE GTHW		;old > new, go back for next
  4DC2   A5   AE      	GTHCNT:	LDA TEMPN4
  4DC4   C5   AA      		CMP TEMPN2
  4DC6   B0   C8      		BCS GTHW		;old > new -- just go back
  4DC8   A5   AA      	GTH3:	LDA TEMPN2		;replace old highest line #
  4DCA   85   AE      		STA TEMPN4		;with new highest line number
  4DCC   A5   AB      		LDA TEMPN2+1
  4DCE   85   AF      		STA TEMPN4+1
  4DD0   4C   90   4D 		JMP GTHW		;look for more
  4DD3   A9   1F      	EDLERR:	LDA #XLNTB		;"Line number too big"
  4DD5   4C   7C   60 		JMP ERROR
  4DD8   18           	GTHE:	CLC
  4DD9   A5   AE      		LDA TEMPN4
  4DDB   69   0A      		ADC #LININC		;make default line number
  4DDD   85   AE      		STA TEMPN4
  4DDF   90   04      		BCC EDL1
  4DE1   E6   AF      		INC TEMPN4+1
  4DE3   F0   EE      		BEQ EDLERR
  4DE5   A0   00      	EDL1:	LDY #$00		;place line # in car of line
  4DE7   A5   AE      		LDA TEMPN4
  4DE9   91   A4      		STA (TEMPNH),Y
  4DEB   C8           		INY
  4DEC   A5   AF      		LDA TEMPN4+1
  4DEE   91   A4      		STA (TEMPNH),Y		;(RPLACA)
  4DF0   A9   0C      		LDA #FLIST
  4DF2   A6   A3      		LDX ANSN1
  4DF4   20   93   52 		JSR PUTTYP
  4DF7   A6   A3      		LDX ANSN1		;POINTER
  4DF9   A0   AE      		LDY #TEMPN4		;NUMBER
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-55
LOGO	READER AND TOKENIZER

  4DFB   86   B2      	PUTLIN:	STX ANSN2	;POINTER (Y has NUMBER) -  Add line to body
  4DFD   A2   96      		LDX #EDBOD
  4DFF   A9   AA      		LDA #TEMPN2	;Line to be gotten
  4E01   20   62   53 		JSR FNDLIN
  4E04   90   0E      		BCC PTLN1	;Branch if not found
  4E06   A6   B2      		LDX ANSN2
  4E08   A0   00      		LDY #$00
  4E0A   B5   00      		LDA $00,X
  4E0C   91   AA      		STA (TEMPN2),Y
  4E0E   C8           		INY
  4E0F   B5   01      		LDA $01,X
  4E11   91   AA      		STA (TEMPN2),Y	;(RPLACA)
  4E13   60           		RTS
  4E14   A0   02      	PTLN1:	LDY #$02
  4E16   B1   AA      		LDA (TEMPN2),Y
  4E18   85   AC      		STA TEMPN3
  4E1A   C8           		INY
  4E1B   B1   AA      		LDA (TEMPN2),Y
  4E1D   85   AD      		STA TEMPN3+1	;(CDR)
  4E1F   A4   B2      		LDY ANSN2
  4E21   A2   AC      		LDX #TEMPN3
  4E23   86   A2      		STX ANSN
  4E25   A9   00      		LDA #LIST
  4E27   20   09   52 		JSR CONS
  4E2A   A0   02      		LDY #$02
  4E2C   A5   AC      		LDA TEMPN3
  4E2E   91   AA      		STA (TEMPN2),Y
  4E30   C8           		INY
  4E31   A5   AD      		LDA TEMPN3+1
  4E33   91   AA      		STA (TEMPN2),Y	;(RPLACD)
  4E35   4C   A8   4A 		JMP RSTERR
  4E38   20   DC   69 	PTLN2:	JSR BREAK1
  4E3B   20   55   61 		JSR ZPC1	;"Out of Storage" Error
  4E3E   4C   DC   69 		JMP BREAK1
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-56
LOGO	INITIALIZATIONS

                      	.SBTTL	Initializations
  4E41   A9   00      	INITLZ:	LDA #$00
  4E43   85   09      		STA NUMSW
  4E45   85   0A      		STA DBUGSW
  4E47   85   08      		STA EDSW
  4E49   85   96      		STA EDBOD
  4E4B   85   97      		STA EDBOD+1	;EDIT_BODY := LNIL (0)
  4E4D   85   12      		STA INDEV	;INDEV := VDT
  4E4F   85   13      		STA OUTDEV	;OUTDEV := VDT
  4E51   85   14      		STA NNODES	;Node allocation counter
  4E53   85   15      		STA NNODES+1
  4E55   20   E5   69 		JSR RESETT	;Clear screen, etc.
  4E58   20   B6   62 		JSR CLRMRK	;Reset G.C. Array (Typebase bits)
  4E5B   A9   00      		LDA #BASARY&$FF
  4E5D   85   A6      		STA TEMPN
  4E5F   A9   08      		LDA #BASARY^
  4E61   85   A7      		STA TEMPN+1
  4E63   A9   00      	CLRLP1:	LDA #$00	;Clear the SARRAY, 4 at a time
  4E65   A8           		TAY
  4E66   91   A6      		STA (TEMPN),Y
  4E68   C8           		INY
  4E69   91   A6      		STA (TEMPN),Y
  4E6B   C8           		INY
  4E6C   91   A6      		STA (TEMPN),Y
  4E6E   C8           		INY
  4E6F   91   A6      		STA (TEMPN),Y
  4E71   18           		CLC
  4E72   A5   A6      		LDA TEMPN
  4E74   69   04      		ADC #$04
  4E76   85   A6      		STA TEMPN
  4E78   90   02      		BCC ADHAK4
  4E7A   E6   A7      		INC TEMPN+1
  4E7C   A5   A6      	ADHAK4:	LDA TEMPN
  4E7E   C9   00      		CMP #PDLBAS&$FF	;PDL starts right after S_ARRAY
  4E80   D0   E1      		BNE CLRLP1
  4E82   A5   A7      		LDA TEMPN+1
  4E84   C9   0E      		CMP #PDLBAS^
  4E86   D0   DB      		BNE CLRLP1
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-57
LOGO	INITIALIZATIONS

  4E88   A2   00      	REINIT:	LDX #$00
  4E8A   86   67      		STX FRMGSM+1
  4E8C   86   82      		STX PODEFL
  4E8E   86   83      		STX PODEFL+1
  4E90   E8           		INX
  4E91   86   66      		STX FRMGSM
  4E93   A9   00      		LDA #BASARY&$FF
  4E95   85   5A      		STA SARTOP
  4E97   A9   08      		LDA #BASARY^
  4E99   85   5B      		STA SARTOP+1
  4E9B   A9   00      		LDA #PDLBAS&$FF
  4E9D   85   18      		STA SP
  4E9F   A9   0E      		LDA #PDLBAS^
  4EA1   85   19      		STA SP+1
  4EA3   A9   00      		LDA #VPDLBA&$FF
  4EA5   85   1A      		STA VSP
  4EA7   A9   1C      		LDA #VPDLBA^
  4EA9   85   1B      		STA VSP+1
  4EAB   A9   00      		LDA #BIGBAS&$FF	;(FIRST_NODE)
  4EAD   85   56      		STA SOBLST
  4EAF   85   58      		STA SOBTOP
  4EB1   A9   D0      		LDA #BIGBAS^
  4EB3   85   57      		STA SOBLST+1	;SOBLIST := FIRST_NODE
  4EB5   85   59      		STA SOBTOP+1	;SOBTOP is SOBPTR for now
  4EB7   A9   55      		LDA #PRMTAB&$FF	;Points to first byte of Primitive-table
  4EB9   85   A6      		STA TEMPN
  4EBB   A9   89      		LDA #PRMTAB^
  4EBD   85   A7      		STA TEMPN+1
  4EBF   20   35   50 	SOBLP1:	JSR SOBST1
  4EC2   A5   A7      		LDA TEMPN+1
  4EC4   C9   8D      		CMP #VPRMTB^
  4EC6   D0   F7      		BNE SOBLP1
  4EC8   A5   A6      		LDA TEMPN
  4ECA   C9   16      		CMP #VPRMTB&$FF
  4ECC   D0   F1      		BNE SOBLP1
  4ECE   38           		SEC
  4ECF   A5   58      		LDA SOBTOP
  4ED1   E9   08      		SBC #$08
  4ED3   85   A8      		STA TEMPN1	;TEMPN1 is SOBTOP - 8, for comparison
  4ED5   A5   59      		LDA SOBTOP+1
  4ED7   E9   00      		SBC #$00
  4ED9   85   A9      		STA TEMPN1+1
  4EDB   A0   00      	SBVLP1:	LDY #$00
  4EDD   B1   A6      		LDA (TEMPN),Y
  4EDF   85   A2      		STA ANSN	;ANSN is INDEX constant
  4EE1   C8           		INY
  4EE2   B1   A6      		LDA (TEMPN),Y
  4EE4   85   A3      		STA ANSN1	;ANSN1 is Pointer to Primitive's pointer
  4EE6   C8           		INY
  4EE7   B1   A6      		LDA (TEMPN),Y
  4EE9   85   B3      		STA ANSN3	;ANSN3 is INSTANCE counter
  4EEB   18           		CLC
  4EEC   A5   A6      		LDA TEMPN
  4EEE   69   03      		ADC #$03
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-58
LOGO	INITIALIZATIONS

  4EF0   85   A6      		STA TEMPN
  4EF2   90   02      		BCC ADHAK8
  4EF4   E6   A7      		INC TEMPN+1
  4EF6   A9   FC      	ADHAK8:	LDA #BBASX&$FF
  4EF8   85   AA      		STA TEMPN2	;TEMPN2 is temporary VARNAM pointer
  4EFA   A9   CF      		LDA #BBASX^
  4EFC   85   AB      		STA TEMPN2+1
  4EFE   A5   A9      	SBVRW:	LDA TEMPN1+1
  4F00   C5   AB      		CMP TEMPN2+1
  4F02   D0   09      		BNE SBVRW1
  4F04   A5   A8      		LDA TEMPN1
  4F06   C5   AA      		CMP TEMPN2
  4F08   D0   03      		BNE SBVRW1
  4F0A   20   BD   50 		JSR SYSBUG
  4F0D   18           	SBVRW1:	CLC
  4F0E   A5   AA      		LDA TEMPN2
  4F10   69   04      		ADC #$04
  4F12   85   AA      		STA TEMPN2
  4F14   90   02      		BCC ADHAK9
  4F16   E6   AB      		INC TEMPN2+1
  4F18   A0   02      	ADHAK9:	LDY #$02
  4F1A   B1   AA      		LDA (TEMPN2),Y
  4F1C   85   A4      		STA TEMPNH
  4F1E   C8           		INY
  4F1F   B1   AA      		LDA (TEMPN2),Y
  4F21   85   A5      		STA TEMPNH+1	;(CDR)
  4F23   88           		DEY
  4F24   B1   A4      		LDA (TEMPNH),Y
  4F26   C5   A2      		CMP ANSN
  4F28   D0   D4      		BNE SBVRW
  4F2A   C6   B3      		DEC ANSN3
  4F2C   D0   D0      		BNE SBVRW
  4F2E   A6   A3      	SBVRWE:	LDX ANSN1
  4F30   A5   AA      		LDA TEMPN2	;Put TEMPN2 in the right variable
  4F32   95   00      		STA $00,X
  4F34   A5   AB      		LDA TEMPN2+1
  4F36   95   01      		STA $01,X
  4F38   A5   A7      		LDA TEMPN+1
  4F3A   C9   8D      		CMP #VPRMTE^
  4F3C   D0   06      		BNE SBVLPJ
  4F3E   A5   A6      		LDA TEMPN
  4F40   C9   55      		CMP #VPRMTE&$FF
  4F42   F0   03      		BEQ SBVLL1
  4F44   4C   DB   4E 	SBVLPJ:	JMP SBVLP1
  4F47   18           	SBVLL1:	CLC
  4F48   A5   58      		LDA SOBTOP
  4F4A   85   5C      		STA FRLIST
  4F4C   69   04      		ADC #$04
  4F4E   85   A6      		STA TEMPN
  4F50   A5   59      		LDA SOBTOP+1
  4F52   85   5D      		STA FRLIST+1
  4F54   69   00      		ADC #$00
  4F56   85   A7      		STA TEMPN+1
  4F58   A0   02      		LDY #$02
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-59
LOGO	INITIALIZATIONS

  4F5A   A9   00      		LDA #$00
  4F5C   91   58      		STA (SOBTOP),Y
  4F5E   C8           		INY
  4F5F   91   58      		STA (SOBTOP),Y	;RPLACD (SOBTOP,LNIL)
  4F61   88           		DEY
  4F62   A5   5C      	RINLP2:	LDA FRLIST
  4F64   91   A6      		STA (TEMPN),Y
  4F66   C8           		INY
  4F67   A5   5D      		LDA FRLIST+1
  4F69   91   A6      		STA (TEMPN),Y	;(RPLACD)
  4F6B   88           		DEY
  4F6C   18           		CLC
  4F6D   A5   A6      		LDA TEMPN
  4F6F   85   5C      		STA FRLIST
  4F71   69   04      		ADC #$04
  4F73   85   A6      		STA TEMPN
  4F75   A5   A7      		LDA TEMPN+1
  4F77   85   5D      		STA FRLIST+1
  4F79   69   00      		ADC #$00
  4F7B   85   A7      		STA TEMPN+1
  4F7D   C9   F6      		CMP #SINODS^	;(Ptr. to byte after last node)
  4F7F   D0   E1      		BNE RINLP2
  4F81   A5   A6      		LDA TEMPN
  4F83   C9   60      		CMP #SINODS&$FF
  4F85   D0   DB      		BNE RINLP2
  4F87   A2   00      		LDX #$00
  4F89   86   A9      		STX TEMPN1+1
  4F8B   E8           		INX
  4F8C   86   A8      		STX TEMPN1	;Set to Novalue for MKSFUN
  4F8E   A2   90      		LDX #UNSUM
  4F90   A9   04      		LDA #IUNSUM
  4F92   20   94   50 		JSR MKSFUN
  4F95   A2   92      		LDX #UNDIF
  4F97   A9   05      		LDA #IUNDIF
  4F99   20   94   50 		JSR MKSFUN
  4F9C   A9   00      		LDA #$00	;(LNIL)
  4F9E   85   84      		STA MARK1
  4FA0   85   86      		STA MARK2
  4FA2   85   88      		STA MARK3
  4FA4   85   8A      		STA MARK4
  4FA6   85   8C      		STA MARK5
  4FA8   85   98      		STA CELPTR
  4FAA   85   8E      		STA OBLIST
  4FAC   85   85      		STA MARK1+1	;MARK1 := LNIL
  4FAE   85   87      		STA MARK2+1	;MARK2 := LNIL
  4FB0   85   89      		STA MARK3+1	;MARK3 := LNIL
  4FB2   85   8B      		STA MARK4+1	;MARK4 := LNIL
  4FB4   85   8D      		STA MARK5+1	;MARK5 := LNIL
  4FB6   85   99      		STA CELPTR+1	;CELL_PTR := LNIL
  4FB8   85   8F      		STA OBLIST+1	;OBLIST := LNIL
  4FBA   85   9E      		STA SIZE1
  4FBC   85   A0      		STA SIZE2
  4FBE   85   9F      		STA SIZE1+1	;SIZE1 := 0
  4FC0   85   A1      		STA SIZE2+1	;SIZE2 := 0
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-60
LOGO	INITIALIZATIONS

  4FC2   A9   55      		LDA #'U
  4FC4   85   AA      		STA TEMPN2
  4FC6   A9   45      		LDA #'E
  4FC8   85   AB      		STA TEMPN2+1
  4FCA   A2   00      		LDX #$00
  4FCC   A0   AA      		LDY #TEMPN2
  4FCE   A9   AC      		LDA #TEMPN3
  4FD0   85   A2      		STA ANSN
  4FD2   A9   02      		LDA #STRING
  4FD4   20   09   52 		JSR CONS	;"UE" of TRUE
  4FD7   A9   54      		LDA #'T
  4FD9   85   AA      		STA TEMPN2
  4FDB   A9   52      		LDA #'R
  4FDD   85   AB      		STA TEMPN2+1
  4FDF   A0   AA      		LDY #TEMPN2
  4FE1   A2   AC      		LDX #TEMPN3
  4FE3   86   A2      		STX ANSN
  4FE5   A9   02      		LDA #STRING
  4FE7   20   09   52 		JSR CONS	;"TR" of TRUE
  4FEA   A2   AC      		LDX #TEMPN3
  4FEC   A9   D7      		LDA #LTRUE
  4FEE   85   B2      		STA ANSN2
  4FF0   20   BE   5F 		JSR INTRNX
  4FF3   A2   00      		LDX #$00
  4FF5   86   AB      		STX TEMPN2+1
  4FF7   A9   45      		LDA #'E
  4FF9   85   AA      		STA TEMPN2
  4FFB   A0   AA      		LDY #TEMPN2
  4FFD   A9   AC      		LDA #TEMPN3
  4FFF   85   A2      		STA ANSN
  5001   A9   02      		LDA #STRING
  5003   20   09   52 		JSR CONS	;"E" of FALSE
  5006   A9   4C      		LDA #'L
  5008   85   AA      		STA TEMPN2
  500A   A9   53      		LDA #'S
  500C   85   AB      		STA TEMPN2+1
  500E   A0   AA      		LDY #TEMPN2
  5010   A2   AC      		LDX #TEMPN3
  5012   86   A2      		STX ANSN
  5014   A9   02      		LDA #STRING
  5016   20   09   52 		JSR CONS	;"LS" of FALSE
  5019   A9   46      		LDA #'F
  501B   85   AA      		STA TEMPN2
  501D   A9   41      		LDA #'A
  501F   85   AB      		STA TEMPN2+1
  5021   A0   AA      		LDY #TEMPN2
  5023   A2   AC      		LDX #TEMPN3
  5025   86   A2      		STX ANSN
  5027   A9   02      		LDA #STRING
  5029   20   09   52 		JSR CONS	;"FA" of FALSE
  502C   A2   AC      		LDX #TEMPN3
  502E   A9   CB      		LDA #LFALSE
  5030   85   B2      		STA ANSN2
  5032   4C   BE   5F 		JMP INTRNX
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-61
LOGO	INITIALIZATIONS

  5035   A0   01      	SOBST1:	LDY #$01
  5037   98           		TYA
  5038   88           		DEY
  5039   91   58      		STA (SOBTOP),Y
  503B   98           		TYA
  503C   C8           		INY
  503D   91   58      		STA (SOBTOP),Y	;(RPLACA)
  503F   C8           		INY
  5040   A5   5A      		LDA SARTOP
  5042   91   58      		STA (SOBTOP),Y
  5044   C8           		INY
  5045   A5   5B      		LDA SARTOP+1
  5047   91   58      		STA (SOBTOP),Y	;(RPLACD)
  5049   A9   07      		LDA #SATOM
  504B   A2   58      		LDX #SOBTOP
  504D   20   93   52 		JSR PUTTYP
  5050   A0   00      		LDY #$00
  5052   B1   A6      		LDA (TEMPN),Y
  5054   91   5A      		STA (SARTOP),Y
  5056   C8           		INY
  5057   B1   A6      		LDA (TEMPN),Y
  5059   91   5A      		STA (SARTOP),Y
  505B   C8           		INY
  505C   B1   A6      		LDA (TEMPN),Y
  505E   91   5A      		STA (SARTOP),Y
  5060   C8           	SBST1A:	INY
  5061   B1   A6      		LDA (TEMPN),Y
  5063   91   5A      		STA (SARTOP),Y
  5065   C9   20      		CMP #$20	;See if the last byte was transferred
  5067   D0   F7      		BNE SBST1A	;Yes.
  5069   A9   00      		LDA #$00
  506B   91   5A      		STA (SARTOP),Y
  506D   C8           		INY
  506E   18           		CLC
  506F   98           		TYA
  5070   65   5A      		ADC SARTOP
  5072   85   5A      		STA SARTOP
  5074   90   02      		BCC ADHAK5
  5076   E6   5B      		INC SARTOP+1
  5078   18           	ADHAK5:	CLC
  5079   98           		TYA
  507A   65   A6      		ADC TEMPN
  507C   85   A6      		STA TEMPN
  507E   90   02      		BCC ADHAK6
  5080   E6   A7      		INC TEMPN+1
  5082   18           	ADHAK6:	CLC
  5083   A5   58      		LDA SOBTOP
  5085   69   04      		ADC #$04
  5087   85   58      		STA SOBTOP
  5089   90   02      		BCC ADHAK7
  508B   E6   59      		INC SOBTOP+1
  508D   E6   14      	ADHAK7:	INC NNODES
  508F   90   02      		BCC ADHK7A
  5091   E6   15      		INC NNODES+1
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-62
LOGO	INITIALIZATIONS

  5093   60           	ADHK7A:	RTS
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-63
LOGO	INITIALIZATIONS

  5094   A0   02      	MKSFUN:	LDY #$02
  5096   91   5A      		STA (SARTOP),Y
  5098   88           		DEY
  5099   A9   08      		LDA #$08	;(PREC = 8)
  509B   91   5A      		STA (SARTOP),Y
  509D   98           		TYA		;(NARGS = 1)
  509E   88           		DEY
  509F   91   5A      		STA (SARTOP),Y
  50A1   98           		TYA
  50A2   A0   03      		LDY #$03
  50A4   91   5A      		STA (SARTOP),Y
  50A6   86   A2      		STX ANSN
  50A8   A2   5A      		LDX #SARTOP
  50AA   A0   A8      		LDY #TEMPN1	;TEMPN1 Set to Novalue by the calling procedure
  50AC   A9   07      		LDA #SATOM
  50AE   20   09   52 		JSR CONS
  50B1   18           		CLC
  50B2   A5   5A      		LDA SARTOP
  50B4   69   04      		ADC #$04
  50B6   85   5A      		STA SARTOP
  50B8   90   02      		BCC ADHK11
  50BA   E6   5B      		INC SARTOP+1
  50BC   60           	ADHK11:	RTS
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-64
LOGO	MISCELLANEOUS AND EVALUATOR UTILITY ROUTINES

                      	.SBTTL	Miscellaneous and Evaluator Utility Routines
                      	;
                      	;SYSBUG prints an error message and exits.
                      	;
  50BD   48           	SYSBUG:	PHA
  50BE   8A           		TXA
  50BF   48           		PHA
  50C0   98           		TYA
  50C1   48           		PHA
  50C2   A9   00      		LDA #$00
  50C4   85   13      		STA OUTDEV
  50C6   A2   7F      		LDX #LBUG1&$FF
  50C8   A0   8D      		LDY #LBUG1^
  50CA   20   1D   53 		JSR PRTSTR	;Print "LOGO BUG!"
  50CD   20   DC   69 		JSR BREAK1
  50D0   68           		PLA
  50D1   A8           		TAY
  50D2   68           		PLA
  50D3   AA           		TAX
  50D4   68           		PLA
  50D5   00           		BRK
                      	;
  50D6   20   27   56 	POPFRM:	JSR RSTBND
  50D9   A2   7C      		LDX #TLLEVS
  50DB   20   4F   51 		JSR POP
  50DE   38           		SEC
  50DF   A5   18      		LDA SP
  50E1   E9   02      		SBC #$02	;Skip SF_NUMBER_BINDINGS
  50E3   85   18      		STA SP
  50E5   B0   02      		BCS PPFM2
  50E7   C6   19      		DEC SP+1
  50E9   A2   5E      	PPFM2:	LDX #TOKPTR
  50EB   20   4F   51 		JSR POP
  50EE   A2   70      		LDX #LINNUM
  50F0   20   4F   51 		JSR POP
  50F3   A2   7A      		LDX #NEST
  50F5   20   4F   51 		JSR POP
  50F8   A2   60      		LDX #CURTOK
  50FA   20   4F   51 		JSR POP
  50FD   20   7D   51 		JSR POPB
  5100   85   0F      		STA UFRMAT
  5102   A2   6A      		LDX #XFRAME
  5104   20   4F   51 		JSR POP
  5107   A2   68      		LDX #FRAME
  5109   4C   4F   51 		JMP POP
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-65
LOGO	MISCELLANEOUS AND EVALUATOR UTILITY ROUTINES

                      	;PUSHP is given the location of a page-zero variable in X,
                      	;and pushes the contents of the variable onto the LOGO stack.
                      	;
  510C   A0   00      	PUSHP:	LDY #$00
  510E   B5   00      		LDA $00,X
  5110   91   18      		STA (SP),Y
  5112   C8           		INY
  5113   B5   01      		LDA $01,X
  5115   91   18      		STA (SP),Y
  5117   18           		CLC
  5118   A5   18      		LDA SP
  511A   69   02      		ADC #$02
  511C   85   18      		STA SP
  511E   90   02      		BCC PSHP1
  5120   E6   19      		INC SP+1
  5122   60           	PSHP1:	RTS
                      	;
                      	;PUSH pushes onto the stack the sixteen-bit value in the X and Y registers.
                      	;
  5123   98           	PUSH:	TYA
  5124   A0   01      		LDY #$01
  5126   91   18      		STA (SP),Y
  5128   88           		DEY
  5129   8A           		TXA
  512A   91   18      		STA (SP),Y
  512C   18           		CLC
  512D   A5   18      		LDA SP
  512F   69   02      		ADC #$02
  5131   85   18      		STA SP
  5133   90   02      		BCC PSHP2
  5135   E6   19      		INC SP+1
  5137   60           	PSHP2:	RTS
                      	;
                      	;VPUSHP is given the address of a page-zero variable in X,
                      	;and pushes the contents of that variable onto the Value stack.
                      	;
  5138   A0   00      	VPUSHP:	LDY #$00
  513A   B5   00      		LDA $00,X
  513C   91   1A      		STA (VSP),Y
  513E   C8           		INY
  513F   B5   01      		LDA $01,X
  5141   91   1A      		STA (VSP),Y
  5143   18           		CLC
  5144   A5   1A      		LDA VSP
  5146   69   02      		ADC #$02
  5148   85   1A      		STA VSP
  514A   90   02      		BCC VPSH1
  514C   E6   1B      		INC VSP+1
  514E   60           	VPSH1:	RTS
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-66
LOGO	MISCELLANEOUS AND EVALUATOR UTILITY ROUTINES

                      	;POP pops a value off of the LOGO stack and into the page-zero variable
                      	;whose address is in X.
                      	;
  514F   38           	POP:	SEC
  5150   A5   18      		LDA SP
  5152   E9   02      		SBC #$02
  5154   85   18      		STA SP
  5156   B0   02      		BCS POP1
  5158   C6   19      		DEC SP+1
  515A   A0   00      	POP1:	LDY #$00
  515C   B1   18      		LDA (SP),Y
  515E   95   00      		STA $00,X
  5160   C8           		INY
  5161   B1   18      		LDA (SP),Y
  5163   95   01      		STA $01,X
  5165   60           		RTS
                      	;
                      	;VPOP pops a value off of the Value stack and into the page-zero variable
                      	;whose address is in X.
                      	;
  5166   38           	VPOP:	SEC
  5167   A5   1A      		LDA VSP
  5169   E9   02      		SBC #$02
  516B   85   1A      		STA VSP
  516D   B0   02      		BCS VPOP1
  516F   C6   1B      		DEC VSP+1
  5171   A0   00      	VPOP1:	LDY #$00
  5173   B1   1A      		LDA (VSP),Y
  5175   95   00      		STA $00,X
  5177   C8           		INY
  5178   B1   1A      		LDA (VSP),Y
  517A   95   01      		STA $01,X
  517C   60           		RTS
                      	;
                      	;POPB pops a one-byte value off of the LOGO stack and returns with it in A.
                      	;
  517D   38           	POPB:	SEC
  517E   A5   18      		LDA SP
  5180   E9   02      		SBC #$02
  5182   85   18      		STA SP
  5184   B0   02      		BCS POPB1
  5186   C6   19      		DEC SP+1
  5188   A0   00      	POPB1:	LDY #$00
  518A   B1   18      		LDA (SP),Y
  518C   60           		RTS
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-67
LOGO	MISCELLANEOUS AND EVALUATOR UTILITY ROUTINES

                      	;PSHTST tests to see if the LOGO stack test limit has been exceeded,
                      	;and gives an error if so.
                      	;
  518D   A9   1B      	PSHTST:	LDA #PDLLIM^
  518F   C5   19      		CMP SP+1
  5191   90   0B      		BCC PSHTZ
  5193   D0   06      		BNE PSHTE
  5195   A9   EC      		LDA #PDLLIM&$FF
  5197   C5   18      		CMP SP
  5199   90   03      		BCC PSHTZ
  519B   4C   B5   52 	PSHTE:	JMP STPPEK
  519E   A9   00      	PSHTZ:	LDA #PDLBAS&$FF
  51A0   85   18      		STA SP
  51A2   A9   0E      		LDA #PDLBAS^
  51A4   85   19      		STA SP+1	;Reset the stack for reader/tokenizer
  51A6   4C   B8   51 		JMP VPSHTZ
                      	;
                      	;VPSTST tests to see if the Value stack test limit has been exceeded,
                      	;and gives an error if so.
                      	;
  51A9   A9   1F      	VPSTST:	LDA #VPDLIM^
  51AB   C5   1B      		CMP VSP+1
  51AD   90   09      		BCC VPSHTZ
  51AF   D0   06      		BNE VPSHTE
  51B1   A9   F0      		LDA #VPDLIM&$FF
  51B3   C5   1A      		CMP VSP
  51B5   90   01      		BCC VPSHTZ
  51B7   60           	VPSHTE:	RTS
  51B8   A2   00      	VPSHTZ:	LDX #XNSTOR	;(No Vpdl) "No storage left" zapcode
  51BA   A9   13      		LDA #XZAP
  51BC   4C   7C   60 		JMP ERROR
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-68
LOGO	MISCELLANEOUS AND EVALUATOR UTILITY ROUTINES

  51BF   B9   00   00 	GETVAL:	LDA $00,Y	;Get value into X's pointer from Y's pointer
  51C2   29   FC      		AND #$FC	;Strip off last two bits
  51C4   85   A4      		STA TEMPNH
  51C6   B9   01   00 		LDA $01,Y
  51C9   85   A5      		STA TEMPNH+1
  51CB   A0   00      		LDY #$00
  51CD   B1   A4      		LDA (TEMPNH),Y
  51CF   95   00      		STA $00,X
  51D1   C8           		INY
  51D2   B1   A4      		LDA (TEMPNH),Y
  51D4   95   01      		STA $01,X	;(CAR)
  51D6   60           		RTS
                      	;
  51D7   B9   00   00 	PUTVAL:	LDA $00,Y
  51DA   29   FC      		AND #$FC
  51DC   85   A4      		STA TEMPNH
  51DE   B9   01   00 		LDA $01,Y
  51E1   85   A5      		STA TEMPNH+1
  51E3   A0   00      		LDY #$00
  51E5   B5   00      		LDA $00,X
  51E7   91   A4      		STA (TEMPNH),Y
  51E9   C8           		INY
  51EA   B5   01      		LDA $01,X
  51EC   91   A4      		STA (TEMPNH),Y	;(RPLACA)
  51EE   60           		RTS
                      	;
                      	;GETPRC returns the precedence (in A) of the function in Y,
                      	;given the funtype in X.
                      	;
  51EF   A9   05      	GETPRC:	LDA #$05	;Assume Ufun, precedence 5
  51F1   C0   06      		CPY #UFUN
  51F3   F0   13      		BEQ GPRCU
  51F5   C0   05      		CPY #SFUN
  51F7   F0   03      		BEQ GPRCS
  51F9   20   BD   50 		JSR SYSBUG
  51FC   B5   00      	GPRCS:	LDA $00,X
  51FE   85   A4      		STA TEMPNH
  5200   B5   01      		LDA $01,X
  5202   85   A5      		STA TEMPNH+1
  5204   A0   01      		LDY #$01
  5206   B1   A4      		LDA (TEMPNH),Y
  5208   60           	GPRCU:	RTS
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-69
LOGO	MISCELLANEOUS AND EVALUATOR UTILITY ROUTINES

                      	;CONS creates a new node from the freelist. X points to the Cdr,
                      	;Y to the Car, ANSN to the node's pointer, and A holds the typecode.
                      	;
  5209   48           	CONS:	PHA		;Save type - ANS is ANSN
  520A   84   A4      		STY TEMPNH	;TEMPNH.L is XCAR
  520C   86   A5      		STX TEMPNH+1	;TEMPNH.H is XCDR
  520E   A5   F1      		LDA PRDFLG
  5210   F0   06      		BEQ CONST1	;Don't check limit for READ_LINE callers
  5212   A5   5D      		LDA FRLIST+1
  5214   D0   47      		BNE CONS2
  5216   F0   0E      		BEQ CONSG
  5218   A5   15      	CONST1:	LDA NNODES+1
  521A   C9   09      		CMP #NODLIM^
  521C   90   3F      		BCC CONS2
  521E   D0   06      		BNE CONSG
  5220   A5   14      		LDA NNODES
  5222   C9   66      		CMP #NODLIM&$FF
  5224   90   37      		BCC CONS2
  5226   A6   A4      	CONSG:	LDX TEMPNH
  5228   20   38   51 		JSR VPUSHP	;VPUSHP Xcar
  522B   A6   A5      		LDX TEMPNH+1
  522D   20   38   51 		JSR VPUSHP	;VPUSHP Xcdr
  5230   20   69   61 		JSR GARCOL
  5233   38           		SEC		;Reset the VPDL
  5234   A5   1A      		LDA VSP
  5236   E9   04      		SBC #$04
  5238   85   1A      		STA VSP
  523A   B0   02      		BCS CONSG1
  523C   C6   1B      		DEC VSP+1
  523E   A5   F1      	CONSG1:	LDA PRDFLG
  5240   F0   06      		BEQ CONST2
  5242   A5   5D      		LDA FRLIST+1
  5244   D0   17      		BNE CONS2
  5246   F0   0E      		BEQ CONSR
  5248   A5   15      	CONST2:	LDA NNODES+1
  524A   C9   09      		CMP #NODLIM^
  524C   90   0F      		BCC CONS2
  524E   D0   06      		BNE CONSR
  5250   A5   14      		LDA NNODES
  5252   C9   66      		CMP #NODLIM&$FF
  5254   90   07      		BCC CONS2
  5256   A2   01      	CONSR:	LDX #XNSTRN	;Error "No storage left" (No nodes)
  5258   A9   13      		LDA #XZAP
  525A   4C   7C   60 		JMP ERROR
  525D   E6   14      	CONS2:	INC NNODES
  525F   D0   02      		BNE CONS2A
  5261   E6   15      		INC NNODES+1	;Increment node counter
  5263   A0   00      	CONS2A:	LDY #$00
  5265   A6   A4      		LDX TEMPNH
  5267   B5   00      		LDA $00,X
  5269   91   5C      		STA (FRLIST),Y
  526B   C8           		INY
  526C   B5   01      		LDA $01,X
  526E   91   5C      		STA (FRLIST),Y	;(RPLACA)
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-70
LOGO	MISCELLANEOUS AND EVALUATOR UTILITY ROUTINES

  5270   C8           		INY
  5271   A6   A5      		LDX TEMPNH+1
  5273   B1   5C      		LDA (FRLIST),Y
  5275   48           		PHA
  5276   B5   00      		LDA $00,X
  5278   91   5C      		STA (FRLIST),Y
  527A   C8           		INY
  527B   B1   5C      		LDA (FRLIST),Y
  527D   48           		PHA
  527E   B5   01      		LDA $01,X
  5280   91   5C      		STA (FRLIST),Y	;(RPLACD)
  5282   A6   A2      		LDX ANSN
  5284   A5   5C      		LDA FRLIST
  5286   95   00      		STA $00,X
  5288   A5   5D      		LDA FRLIST+1
  528A   95   01      		STA $01,X
  528C   68           		PLA
  528D   85   5D      		STA FRLIST+1
  528F   68           		PLA
  5290   85   5C      		STA FRLIST
  5292   68           		PLA		;GET TYPE
                      	;
  5293   C9   0B      	PUTTYP:	CMP #LATOM+1
  5295   B0   0C      		BCS PUTTP2
  5297   C9   08      		CMP #QATOM
  5299   90   08      		BCC PUTTP2
  529B   E9   07      		SBC #$07
  529D   18           		CLC
  529E   75   00      		ADC $00,X
  52A0   95   00      		STA $00,X
  52A2   60           	PUTTPE:	RTS
  52A3   B4   01      	PUTTP2:	LDY $01,X
  52A5   F0   FB      		BEQ PUTTPE
  52A7   84   A5      		STY TEMPNH+1
  52A9   B4   00      		LDY $00,X
  52AB   84   A4      		STY TEMPNH
  52AD   AA           		TAX
  52AE   20   79   5C 		JSR TYPACS
  52B1   8A           		TXA
  52B2   91   A4      		STA (TEMPNH),Y
  52B4   60           	PRTS:	RTS
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-71
LOGO	MISCELLANEOUS AND EVALUATOR UTILITY ROUTINES

                      	;STPPEK is the polling routine for user interrupts.
                      	;
  52B5   20   39   6D 	STPPEK:	JSR TSTCHR
  52B8   30   FA      		BMI PRTS
  52BA   C9   07      		CMP #STPKEY
  52BC   F0   0E      		BEQ STPPK1
  52BE   C9   1A      		CMP #PAUSKY
  52C0   F0   05      		BEQ STPPKZ
  52C2   C9   13      		CMP #LSTKEY
  52C4   F0   EE      		BEQ PRTS
  52C6   60           		RTS		;?Put a character in the buffer
  52C7   A9   10      	STPPKZ:	LDA #XBRK
  52C9   4C   7C   60 		JMP ERROR
  52CC   A2   2B      	STPPK1:	LDX #ERROR1&$FF
  52CE   A0   48      		LDY #ERROR1^
  52D0   20   23   51 		JSR PUSH
  52D3   A2   02      		LDX #XSTOP	;Stop_key Zapcode
  52D5   A9   13      		LDA #XZAP
  52D7   4C   7C   60 		JMP ERROR
                      	;
  52DA   B5   00      	PTSPNM:	LDA $00,X
  52DC   29   FC      		AND #$FC
  52DE   85   A4      		STA TEMPNH
  52E0   B5   01      		LDA $01,X
  52E2   85   A5      		STA TEMPNH+1
  52E4   A0   02      		LDY #$02
  52E6   B1   A4      		LDA (TEMPNH),Y
  52E8   AA           		TAX
  52E9   C8           		INY
  52EA   B1   A4      		LDA (TEMPNH),Y
  52EC   85   A5      		STA TEMPNH+1
  52EE   86   A4      		STX TEMPNH	;(CDR)
  52F0   88           		DEY
  52F1   B1   A4      		LDA (TEMPNH),Y
  52F3   09   01      		ORA #$01
  52F5   91   A4      		STA (TEMPNH),Y
  52F7   60           	CONSE:	RTS
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-72
LOGO	MISCELLANEOUS AND EVALUATOR UTILITY ROUTINES

  52F8   C9   06      	GETNGS:	CMP #UFUN
  52FA   F0   07      		BEQ GTNG1
  52FC   C9   05      		CMP #SFUN
  52FE   F0   10      		BEQ GTNG2
  5300   20   BD   50 		JSR SYSBUG
  5303   B5   00      	GTNG1:	LDA $00,X
  5305   85   A4      		STA TEMPNH
  5307   B5   01      		LDA $01,X
  5309   85   A5      		STA TEMPNH+1
  530B   A0   04      		LDY #$04
  530D   B1   A4      		LDA (TEMPNH),Y	;(GETBAR)
  530F   60           		RTS
  5310   B5   00      	GTNG2:	LDA $00,X
  5312   85   A4      		STA TEMPNH
  5314   B5   01      		LDA $01,X
  5316   85   A5      		STA TEMPNH+1
  5318   A0   00      		LDY #$00
  531A   B1   A4      		LDA (TEMPNH),Y
  531C   60           	GTNGE:	RTS
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-73
LOGO	MISCELLANEOUS AND EVALUATOR UTILITY ROUTINES

                      	;PRTSTR prints the Ascii string whose address is in the X and Y registers.
                      	;The string is terminated with a 0.
                      	;
  531D   86   A4      	PRTSTR:	STX TEMPNH
  531F   84   A5      		STY TEMPNH+1
  5321   A0   00      		LDY #$00
  5323   B1   A4      	PTSTR1:	LDA (TEMPNH),Y
  5325   F0   F5      		BEQ GTNGE
  5327   20   F8   69 		JSR TPCHR
  532A   C8           		INY
  532B   4C   23   53 		JMP PTSTR1
                      	;
  532E   C9   05      	INFIXP:	CMP #SFUN
  5330   D0   04      		BNE IFP1
  5332   B5   01      		LDA $01,X
  5334   D0   02      		BNE IFP2
  5336   18           	IFP1:	CLC		;Not infix
  5337   60           		RTS
  5338   B5   00      	IFP2:	LDA $00,X
  533A   85   A4      		STA TEMPNH
  533C   B5   01      		LDA $01,X
  533E   85   A5      		STA TEMPNH+1
  5340   A0   02      		LDY #$02
  5342   B1   A4      		LDA (TEMPNH),Y
  5344   C9   4C      		CMP #INSUM
  5346   F0   18      		BEQ IFP3
  5348   C9   4D      		CMP #INDIF
  534A   F0   14      		BEQ IFP3
  534C   C9   4E      		CMP #INPROD
  534E   F0   10      		BEQ IFP3
  5350   C9   4F      		CMP #INQUOT
  5352   F0   0C      		BEQ IFP3
  5354   C9   50      		CMP #INGRTR
  5356   F0   08      		BEQ IFP3
  5358   C9   51      		CMP #INLESS
  535A   F0   04      		BEQ IFP3
  535C   C9   52      		CMP #INEQUL
  535E   D0   D6      		BNE IFP1
  5360   38           	IFP3:	SEC		;Infix.
  5361   60           		RTS		;Return with proper index in A
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-74
LOGO	MISCELLANEOUS AND EVALUATOR UTILITY ROUTINES

  5362   85   A2      	FNDLIN:	STA ANSN	;LINE returned
  5364   84   A3      		STY ANSN1	;NUMBER looked for
  5366   B5   00      		LDA $00,X
  5368   85   A6      		STA TEMPN	;TEMPN is LAST_LINE
  536A   B5   01      		LDA $01,X
  536C   85   A7      		STA TEMPN+1
  536E   A6   A2      		LDX ANSN
  5370   A0   02      		LDY #$02
  5372   B1   A6      		LDA (TEMPN),Y
  5374   95   00      		STA $00,X
  5376   C8           		INY
  5377   B1   A6      		LDA (TEMPN),Y
  5379   95   01      		STA $01,X	;(CDR)
  537B   A6   A2      	FDLNW:	LDX ANSN
  537D   B5   00      		LDA $00,X
  537F   D0   04      		BNE FDLNW1
  5381   B5   01      		LDA $01,X
  5383   F0   4A      		BEQ FDLNWE
  5385   A6   A2      	FDLNW1:	LDX ANSN
  5387   B5   00      		LDA $00,X
  5389   85   A4      		STA TEMPNH
  538B   B5   01      		LDA $01,X
  538D   85   A5      		STA TEMPNH+1
  538F   A0   00      		LDY #$00
  5391   B1   A4      		LDA (TEMPNH),Y
  5393   85   A8      		STA TEMPN1	;TEMPN1 is incremental ptr.
  5395   C8           		INY
  5396   B1   A4      		LDA (TEMPNH),Y
  5398   85   A9      		STA TEMPN1+1	;(CAR)
  539A   88           		DEY
  539B   B1   A8      		LDA (TEMPN1),Y
  539D   AA           		TAX
  539E   C8           		INY
  539F   B1   A8      		LDA (TEMPN1),Y
  53A1   85   A9      		STA TEMPN1+1
  53A3   86   A8      		STX TEMPN1	;(GETBAR)
  53A5   A6   A3      		LDX ANSN1
  53A7   A5   A9      		LDA TEMPN1+1
  53A9   D5   01      		CMP $01,X
  53AB   90   0A      		BCC FDLNW3
  53AD   D0   20      		BNE FDLNWE
  53AF   A5   A8      		LDA TEMPN1
  53B1   D5   00      		CMP $00,X
  53B3   F0   26      		BEQ FDLNWF
  53B5   B0   18      		BCS FDLNWE
  53B7   A6   A2      	FDLNW3:	LDX ANSN
  53B9   B5   00      		LDA $00,X
  53BB   85   A6      		STA TEMPN
  53BD   B5   01      		LDA $01,X
  53BF   85   A7      		STA TEMPN+1
  53C1   A0   02      		LDY #$02
  53C3   B1   A6      		LDA (TEMPN),Y
  53C5   95   00      		STA $00,X
  53C7   C8           		INY
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-75
LOGO	MISCELLANEOUS AND EVALUATOR UTILITY ROUTINES

  53C8   B1   A6      		LDA (TEMPN),Y
  53CA   95   01      		STA $01,X	;(CDR)
  53CC   4C   7B   53 		JMP FDLNW
  53CF   A6   A2      	FDLNWE:	LDX ANSN
  53D1   A5   A6      		LDA TEMPN
  53D3   95   00      		STA $00,X
  53D5   A5   A7      		LDA TEMPN+1
  53D7   95   01      		STA $01,X
  53D9   18           		CLC		;Clear Carry means Not Found
  53DA   60           		RTS
  53DB   38           	FDLNWF:	SEC		;Set Carry means Found
  53DC   60           		RTS
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-76
LOGO	MISCELLANEOUS AND EVALUATOR UTILITY ROUTINES

  53DD   B9   00   00 	LINPEK:	LDA $00,Y
  53E0   85   A4      		STA TEMPNH	;BODY
  53E2   B9   01   00 		LDA $01,Y
  53E5   85   A5      		STA TEMPNH+1
  53E7   A0   02      		LDY #$02
  53E9   A5   0F      		LDA UFRMAT
  53EB   F0   09      		BEQ LPK1
  53ED   C9   0B      		CMP #FPACK
  53EF   F0   03      		BEQ LPK2
  53F1   20   BD   50 		JSR SYSBUG
  53F4   C8           	LPK2:	INY
  53F5   C8           		INY
  53F6   B1   A4      	LPK1:	LDA (TEMPNH),Y
  53F8   95   00      		STA $00,X
  53FA   C8           		INY
  53FB   B1   A4      		LDA (TEMPNH),Y
  53FD   95   01      		STA $01,X	;(CDR or GETBAR)
  53FF   60           		RTS
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-77
LOGO	MISCELLANEOUS AND EVALUATOR UTILITY ROUTINES

  5400   20   16   54 	TTKADV:	JSR TFKADV
  5403   A5   A4      		LDA TEMPNH
  5405   C5   C1      		CMP COMMNT
  5407   D0   0C      		BNE TTKE
  5409   A5   A5      		LDA TEMPNH+1
  540B   C5   C2      		CMP COMMNT+1
  540D   D0   06      		BNE TTKE
  540F   A9   00      		LDA #$00
  5411   95   00      		STA $00,X
  5413   95   01      		STA $01,X
  5415   60           	TTKE:	RTS
                      	;
  5416   A5   0F      	TFKADV:	LDA UFRMAT
  5418   C9   00      		CMP #LIST
  541A   F0   07      		BEQ TFK1
  541C   C9   0B      		CMP #FPACK
  541E   F0   19      		BEQ TFK2
  5420   20   BD   50 		JSR SYSBUG
  5423   B5   00      	TFK1:	LDA $00,X
  5425   85   A4      		STA TEMPNH
  5427   B5   01      		LDA $01,X
  5429   85   A5      		STA TEMPNH+1
  542B   A0   02      		LDY #$02
  542D   B1   A4      		LDA (TEMPNH),Y
  542F   95   00      		STA $00,X
  5431   C8           		INY
  5432   B1   A4      		LDA (TEMPNH),Y
  5434   95   01      		STA $01,X	;(CDR)
  5436   4C   57   54 		JMP TFK3
  5439   18           	TFK2:	CLC
  543A   B5   00      		LDA $00,X
  543C   69   02      		ADC #$02
  543E   95   00      		STA $00,X
  5440   B5   01      		LDA $01,X
  5442   69   00      		ADC #$00
  5444   95   01      		STA $01,X
  5446   C5   77      		CMP ULNEND+1
  5448   D0   0D      		BNE TFK3
  544A   B5   00      		LDA $00,X
  544C   C5   76      		CMP ULNEND
  544E   D0   07      		BNE TFK3
  5450   A9   00      		LDA #$00
  5452   95   00      		STA $00,X
  5454   95   01      		STA $01,X
  5456   60           		RTS
  5457   B5   00      	TFK3:	LDA $00,X
  5459   85   A4      		STA TEMPNH
  545B   B5   01      		LDA $01,X
  545D   85   A5      		STA TEMPNH+1
  545F   A0   00      		LDY #$00
  5461   B1   A4      		LDA (TEMPNH),Y
  5463   48           		PHA
  5464   C8           		INY
  5465   B1   A4      		LDA (TEMPNH),Y
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-78
LOGO	MISCELLANEOUS AND EVALUATOR UTILITY ROUTINES

  5467   85   A5      		STA TEMPNH+1
  5469   68           		PLA
  546A   85   A4      		STA TEMPNH	;(GETTOK)
  546C   60           		RTS
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-79
LOGO	MISCELLANEOUS AND EVALUATOR UTILITY ROUTINES

  546D   B9   00   00 	GTFULN:	LDA $00,Y
  5470   85   A4      		STA TEMPNH
  5472   B9   01   00 		LDA $01,Y
  5475   85   A5      		STA TEMPNH+1	;BODY
  5477   A0   00      		LDY #$00
  5479   B1   A4      		LDA (TEMPNH),Y
  547B   95   00      		STA $00,X
  547D   C8           		INY
  547E   B1   A4      		LDA (TEMPNH),Y
  5480   95   01      		STA $01,X	;(CAR or GETBAR)
  5482   A5   0F      		LDA UFRMAT
  5484   F0   1D      		BEQ GTFR
  5486   C9   0B      		CMP #FPACK
  5488   F0   03      		BEQ GTF2
  548A   20   BD   50 		JSR SYSBUG
  548D   C8           	GTF2:	INY
  548E   B1   A4      		LDA (TEMPNH),Y
  5490   85   76      		STA ULNEND
  5492   C8           		INY
  5493   B1   A4      		LDA (TEMPNH),Y
  5495   85   77      		STA ULNEND+1	;(GETBAR)
  5497   B5   00      		LDA $00,X
  5499   C5   76      		CMP ULNEND
  549B   D0   06      		BNE GTFR
  549D   B5   01      		LDA $01,X
  549F   C5   77      		CMP ULNEND+1
  54A1   F0   23      		BEQ FLLIN
  54A3   60           	GTFR:	RTS
                      	;
  54A4   20   6D   54 	GTTULN:	JSR GTFULN
  54A7   B5   00      		LDA $00,X
  54A9   D0   04      		BNE GTT1
  54AB   B5   01      		LDA $01,X
  54AD   F0   F4      		BEQ GTFR
  54AF   B5   00      	GTT1:	LDA $00,X
  54B1   85   A4      		STA TEMPNH
  54B3   B5   01      		LDA $01,X
  54B5   85   A5      		STA TEMPNH+1
  54B7   A0   00      		LDY #$00
  54B9   B1   A4      		LDA (TEMPNH),Y
  54BB   C5   C1      		CMP COMMNT
  54BD   D0   E4      		BNE GTFR
  54BF   C8           		INY
  54C0   B1   A4      		LDA (TEMPNH),Y
  54C2   C5   C2      		CMP COMMNT+1
  54C4   D0   DD      		BNE GTFR
  54C6   A9   00      	FLLIN:	LDA #$00
  54C8   95   00      		STA $00,X
  54CA   95   01      		STA $01,X
  54CC   60           		RTS
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-80
LOGO	MISCELLANEOUS AND EVALUATOR UTILITY ROUTINES

  54CD   B9   00   00 	GETLEN:	LDA $00,Y
  54D0   85   A4      		STA TEMPNH	;LIST
  54D2   B9   01   00 		LDA $01,Y
  54D5   85   A5      		STA TEMPNH+1
  54D7   A9   00      		LDA #$00
  54D9   95   00      		STA $00,X	;NARGS
  54DB   95   01      		STA $01,X
  54DD   A5   A4      	GLENW:	LDA TEMPNH
  54DF   D0   04      		BNE GLENW1
  54E1   A5   A5      		LDA TEMPNH+1
  54E3   F0   BE      		BEQ GTFR
  54E5   A0   00      	GLENW1:	LDY #$00
  54E7   B1   A4      		LDA (TEMPNH),Y
  54E9   85   A6      		STA TEMPN
  54EB   C8           		INY
  54EC   B1   A4      		LDA (TEMPNH),Y
  54EE   85   A7      		STA TEMPN+1	;(CAR)
  54F0   C8           		INY
  54F1   B1   A4      		LDA (TEMPNH),Y
  54F3   48           		PHA
  54F4   C8           		INY
  54F5   B1   A4      		LDA (TEMPNH),Y
  54F7   85   A5      		STA TEMPNH+1
  54F9   68           		PLA
  54FA   85   A4      		STA TEMPNH	;(CDR)
  54FC   A5   A6      		LDA TEMPN
  54FE   C5   C1      		CMP COMMNT
  5500   D0   06      		BNE GLENW2
  5502   A5   A7      		LDA TEMPN+1
  5504   C5   C2      		CMP COMMNT+1
  5506   F0   9B      		BEQ GTFR
  5508   F6   00      	GLENW2:	INC $00,X
  550A   D0   D1      		BNE GLENW
  550C   F6   01      		INC $01,X
  550E   4C   DD   54 		JMP GLENW
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-81
LOGO	MISCELLANEOUS AND EVALUATOR UTILITY ROUTINES

  5511   86   A2      	UNFUNC:	STX ANSN
  5513   B5   00      		LDA $00,X
  5515   85   A4      		STA TEMPNH
  5517   B5   01      		LDA $01,X
  5519   85   A5      		STA TEMPNH+1
  551B   A0   02      		LDY #$02
  551D   B1   A4      		LDA (TEMPNH),Y
  551F   AA           		TAX
  5520   C8           		INY
  5521   B1   A4      		LDA (TEMPNH),Y
  5523   85   A5      		STA TEMPNH+1
  5525   86   A4      		STX TEMPNH	;(CDR)
  5527   A0   00      		LDY #$00
  5529   A9   01      		LDA #$01
  552B   91   A4      		STA (TEMPNH),Y
  552D   98           		TYA
  552E   C8           		INY
  552F   91   A4      		STA (TEMPNH),Y	;(RPLACA)
  5531   60           		RTS
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-82
LOGO	MISCELLANEOUS AND EVALUATOR UTILITY ROUTINES

  5532   85   A2      	GETFUN:	STA ANSN	;Save ANS_FUNCT pointer
  5534   B5   00      		LDA $00,X
  5536   85   A6      		STA TEMPN	;Get OBJECT pointer
  5538   B5   01      		LDA $01,X
  553A   85   A7      		STA TEMPN+1
  553C   20   93   5C 		JSR GETTYP
  553F   A6   A2      		LDX ANSN
  5541   A0   02      		LDY #$02
  5543   C9   01      		CMP #ATOM
  5545   F0   09      		BEQ GTFN1
  5547   C9   07      		CMP #SATOM
  5549   F0   20      		BEQ GTFN2
  554B   A9   00      		LDA #$00
  554D   95   01      		STA $01,X
  554F   60           		RTS
  5550   B1   A6      	GTFN1:	LDA (TEMPN),Y
  5552   48           		PHA
  5553   C8           		INY
  5554   B1   A6      		LDA (TEMPN),Y
  5556   85   A7      		STA TEMPN+1
  5558   68           		PLA
  5559   85   A6      		STA TEMPN
  555B   A0   00      		LDY #$00
  555D   B1   A6      		LDA (TEMPN),Y
  555F   48           		PHA
  5560   C8           		INY
  5561   B1   A6      		LDA (TEMPN),Y
  5563   95   01      		STA $01,X
  5565   68           		PLA
  5566   95   00      		STA $00,X	;(CAR)
  5568   A9   06      		LDA #UFUN
  556A   60           		RTS
  556B   B1   A6      	GTFN2:	LDA (TEMPN),Y
  556D   95   00      		STA $00,X
  556F   C8           		INY
  5570   B1   A6      		LDA (TEMPN),Y
  5572   95   01      		STA $01,X	;(CDR)
  5574   A9   05      		LDA #SFUN
  5576   60           		RTS
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-83
LOGO	MISCELLANEOUS AND EVALUATOR UTILITY ROUTINES

  5577   86   A2      	DELETE:	STX ANSN	;ANSN points to NUMBER
  5579   A5   96      		LDA EDBOD
  557B   85   A6      		STA TEMPN	;TEMPN is LASTLINE
  557D   A5   97      		LDA EDBOD+1
  557F   85   A7      		STA TEMPN+1
  5581   A0   02      		LDY #$02
  5583   B1   A6      		LDA (TEMPN),Y
  5585   85   A8      		STA TEMPN1	;TEMPN1 is LINE
  5587   C8           		INY
  5588   B1   A6      		LDA (TEMPN),Y
  558A   85   A9      		STA TEMPN1+1	;(CDR)
  558C   A5   A8      	DLTW:	LDA TEMPN1
  558E   D0   04      		BNE DLTW2
  5590   A5   A9      		LDA TEMPN1+1
  5592   F0   52      		BEQ DLTWE
  5594   A0   00      	DLTW2:	LDY #$00
  5596   B1   A8      		LDA (TEMPN1),Y
  5598   85   A4      		STA TEMPNH	;TEMPNH is TEMP
  559A   C8           		INY
  559B   B1   A8      		LDA (TEMPN1),Y
  559D   85   A5      		STA TEMPNH+1	;(CAR)
  559F   88           		DEY
  55A0   B1   A4      		LDA (TEMPNH),Y
  55A2   AA           		TAX
  55A3   C8           		INY
  55A4   B1   A4      		LDA (TEMPNH),Y
  55A6   85   A5      		STA TEMPNH+1
  55A8   86   A4      		STX TEMPNH	;(CAR)
  55AA   A6   A2      		LDX ANSN
  55AC   D5   01      		CMP $01,X
  55AE   90   0A      		BCC DLTW1
  55B0   D0   34      		BNE DLTWE
  55B2   A5   A4      		LDA TEMPNH
  55B4   D5   00      		CMP $00,X
  55B6   F0   19      		BEQ DLTWF
  55B8   B0   2C      		BCS DLTWE
  55BA   A5   A8      	DLTW1:	LDA TEMPN1
  55BC   85   A6      		STA TEMPN
  55BE   A5   A9      		LDA TEMPN1+1
  55C0   85   A7      		STA TEMPN+1
  55C2   A0   02      		LDY #$02
  55C4   B1   A8      		LDA (TEMPN1),Y
  55C6   AA           		TAX
  55C7   C8           		INY
  55C8   B1   A8      		LDA (TEMPN1),Y
  55CA   85   A9      		STA TEMPN1+1
  55CC   86   A8      		STX TEMPN1	;(CDR)
  55CE   4C   8C   55 		JMP DLTW
  55D1   A0   02      	DLTWF:	LDY #$02
  55D3   B1   A8      		LDA (TEMPN1),Y
  55D5   85   A4      		STA TEMPNH
  55D7   C8           		INY
  55D8   B1   A8      		LDA (TEMPN1),Y
  55DA   85   A5      		STA TEMPNH+1	;(CDR)
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-84
LOGO	MISCELLANEOUS AND EVALUATOR UTILITY ROUTINES

  55DC   88           		DEY
  55DD   A5   A4      		LDA TEMPNH
  55DF   91   A6      		STA (TEMPN),Y
  55E1   C8           		INY
  55E2   A5   A5      		LDA TEMPNH+1
  55E4   91   A6      		STA (TEMPN),Y	;(RPLACD)
  55E6   60           	DLTWE:	RTS
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-85
LOGO	MISCELLANEOUS AND EVALUATOR UTILITY ROUTINES

  55E7   B5   00      	ULNADV:	LDA $00,X
  55E9   85   A4      		STA TEMPNH
  55EB   B5   01      		LDA $01,X
  55ED   85   A5      		STA TEMPNH+1	;BODY
  55EF   A0   02      		LDY #$02
  55F1   A5   0F      		LDA UFRMAT
  55F3   F0   07      		BEQ ULDV1
  55F5   C9   0B      		CMP #FPACK
  55F7   F0   0F      		BEQ ULDV2
  55F9   20   BD   50 		JSR SYSBUG
  55FC   B1   A4      	ULDV1:	LDA (TEMPNH),Y
  55FE   48           		PHA
  55FF   C8           		INY
  5600   B1   A4      		LDA (TEMPNH),Y
  5602   95   01      		STA $01,X
  5604   68           		PLA
  5605   95   00      		STA $00,X	;(CDR)
  5607   60           		RTS
  5608   C8           	ULDV2:	INY
  5609   C8           		INY
  560A   B1   A4      		LDA (TEMPNH),Y
  560C   48           		PHA
  560D   C8           		INY
  560E   B1   A4      		LDA (TEMPNH),Y	;(GETBAR)
  5610   D0   08      		BNE ULDV3
  5612   68           		PLA
  5613   D0   06      		BNE ULDV3A
  5615   95   00      		STA $00,X
  5617   95   01      		STA $01,X
  5619   60           		RTS
  561A   68           	ULDV3:	PLA
  561B   18           	ULDV3A:	CLC
  561C   B5   00      		LDA $00,X
  561E   69   02      		ADC #$02
  5620   95   00      		STA $00,X
  5622   90   02      		BCC ADHK13
  5624   F6   01      		INC $01,X
  5626   60           	ADHK13:	RTS
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-86
LOGO	MISCELLANEOUS AND EVALUATOR UTILITY ROUTINES

  5627   A5   6A      	RSTBND:	LDA XFRAME
  5629   85   18      		STA SP
  562B   A5   6B      		LDA XFRAME+1
  562D   85   19      		STA SP+1
  562F   A0   0E      		LDY #$0E	;(SF_NUMBER_BINDINGS = 14.)
  5631   B1   68      		LDA (FRAME),Y
  5633   F0   17      		BEQ RSTBWE
  5635   85   A2      		STA ANSN	;(GETBAR)
  5637   A2   A8      	RSTBW:	LDX #TEMPN1
  5639   20   4F   51 		JSR POP
  563C   A2   A6      		LDX #TEMPN
  563E   20   4F   51 		JSR POP
  5641   A2   A6      		LDX #TEMPN
  5643   A0   A8      		LDY #TEMPN1
  5645   20   D7   51 		JSR PUTVAL
  5648   C6   A2      		DEC ANSN
  564A   D0   EB      		BNE RSTBW
  564C   60           	RSTBWE:	RTS
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-87
LOGO	MISCELLANEOUS AND EVALUATOR UTILITY ROUTINES

  564D   A9   A6      	OTPFX1:	LDA #TEMPN	;Output a two-byte fixnum value (Y is ptr.)
  564F   85   A2      		STA ANSN
  5651   A2   00      		LDX #$00
  5653   A9   03      		LDA #FIX
  5655   20   09   52 		JSR CONS
  5658   A2   A6      		LDX #TEMPN
  565A   20   38   51 		JSR VPUSHP
  565D   A9   01      		LDA #$01
  565F   85   07      		STA OTPUTN
  5661   4C   52   41 		JMP POPJ
                      	;
  5664   A9   04      	OTPFLO:	LDA #FLO
  5666   D0   02      		BNE OTPNUM	;(Always)
  5668   A9   03      	OTPFIX:	LDA #FIX
  566A   48           	OTPNUM:	PHA		;Save type
  566B   A2   A6      		LDX #TEMPN	;Entered with type (Fix/Flo) in A
  566D   86   A2      		STX ANSN
  566F   98           		TYA
  5670   AA           		TAX
  5671   C8           		INY
  5672   C8           		INY
  5673   68           		PLA		;Retrieve type
  5674   20   09   52 		JSR CONS
  5677   A2   A6      		LDX #TEMPN
  5679   20   38   51 		JSR VPUSHP
  567C   A9   01      		LDA #$01
  567E   85   07      		STA OTPUTN
  5680   4C   52   41 		JMP POPJ
                      	;
  5683   84   A2      	PUTFUN:	STY ANSN
  5685   86   A3      		STX ANSN1
  5687   20   93   5C 		JSR GETTYP
  568A   C9   07      		CMP #SATOM
  568C   F0   07      		BEQ PTFN1
  568E   C9   01      		CMP #ATOM
  5690   F0   0D      		BEQ PTFN2
  5692   20   BD   50 		JSR SYSBUG
  5695   A4   A3      	PTFN1:	LDY ANSN1
  5697   20   6F   60 		JSR PTRYOK
  569A   A9   0C      		LDA #XUBL
  569C   4C   7C   60 		JMP ERROR
  569F   A6   A3      	PTFN2:	LDX ANSN1
  56A1   B5   00      		LDA $00,X
  56A3   85   A4      		STA TEMPNH
  56A5   B5   01      		LDA $01,X
  56A7   85   A5      		STA TEMPNH+1
  56A9   A0   02      		LDY #$02
  56AB   B1   A4      		LDA (TEMPNH),Y
  56AD   AA           		TAX
  56AE   C8           		INY
  56AF   B1   A4      		LDA (TEMPNH),Y
  56B1   85   A5      		STA TEMPNH+1
  56B3   86   A4      		STX TEMPNH	;(CDR)
  56B5   A6   A2      		LDX ANSN
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-88
LOGO	MISCELLANEOUS AND EVALUATOR UTILITY ROUTINES

  56B7   A0   00      		LDY #$00
  56B9   B5   00      		LDA $00,X
  56BB   91   A4      		STA (TEMPNH),Y
  56BD   C8           		INY
  56BE   B5   01      		LDA $01,X
  56C0   91   A4      		STA (TEMPNH),Y	;(RPLACA)
  56C2   60           		RTS
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-89
LOGO	MISCELLANEOUS AND EVALUATOR UTILITY ROUTINES

                      	;Gets two numerical arguments. Coerces one to Real if not same type.
                      	;Returns with carry set if Flonum results.
  56C3   A2   F2      	GT2NUM:	LDX #NARG2
  56C5   20   66   51 		JSR VPOP
  56C8   A2   1C      		LDX #NARG1
  56CA   20   66   51 		JSR VPOP
  56CD   A2   1C      		LDX #NARG1
  56CF   20   45   57 		JSR GETNUM	;GETNUM returns carry clear if argument non-numerical
  56D2   90   1D      		BCC GTFX2A
  56D4   85   B3      		STA ANSN3	;Save first type
  56D6   A2   F2      		LDX #NARG2
  56D8   20   45   57 		JSR GETNUM
  56DB   90   17      		BCC GTFX2C
  56DD   C5   B3      		CMP ANSN3
D  56DF   D0   03      		BNE GT2NM1
U  56E1   C9   00      		CMP #FLONUM	;(Sets carry if Flonum)
  56E3   60           		RTS
M  56E4   A2   1C      	GT2NM1:	LDX #NARG1	;Assume ARG1 is the integer
  56E6   C9   03      		CMP #FIX
AU  56E8   D0   FF      		BNE GT2NM2
  56EA   A2   F2      		LDX #NARG2	;Nope, it was ARG2
M  56EC   20   2A   67 	GT2NM1:	JSR XFLOAT	;Convert to floating pt.
  56EF   38           		SEC
  56F0   60           		RTS
  56F1   4C   8D   72 	GTFX2A:	JMP SMAKE2	;(ERROR XWTA,ARG1,CURTOK)
  56F4   4C   E3   70 	GTFX2C:	JMP SFPT1	;(ERROR XWTA,ARG2,CURTOK)
                      	;
                      	;Gets a numerical argument. Returns with carry set if flonum.
  56F7   A2   1C      	GT1NUM:	LDX #NARG1
  56F9   20   66   51 		JSR VPOP
  56FC   A2   1C      		LDX #NARG1
  56FE   20   45   57 		JSR GETNUM
  5701   90   EE      		BCC GTFX2A
U  5703   C9   00      		CMP #FLONUM	;(Sets carry if Flonum)
  5705   60           	GTNRTS:	RTS
                      	;
                      	;Gets a numerical argument, changes to integer if Real.
                      	;Give an error if high bytes not zero.?
  5706   A2   1C      	GT1FIX:	LDX #NARG1
  5708   20   66   51 		JSR VPOP
  570B   A2   1C      		LDX #NARG1
  570D   20   45   57 		JSR GETNUM
  5710   90   DF      		BCC GTFX2A
  5712   C9   03      		CMP #FIX
  5714   F0   EF      		BEQ GTNRTS
  5716   A2   1C      		LDX #NARG1
  5718   4C   2B   67 		JMP XINT
                      	;
                      	;Gets two numerical arguments, changes either or both to integer if Real.
                      	;Gives an error if either arg. has high bytes non-zero.?
  571B   A2   F2      	GT2FIX:	LDX #NARG2
  571D   20   66   51 		JSR VPOP
  5720   A2   1C      		LDX #NARG1
  5722   20   66   51 		JSR VPOP
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-90
LOGO	MISCELLANEOUS AND EVALUATOR UTILITY ROUTINES

  5725   A2   1C      		LDX #NARG1
  5727   20   45   57 		JSR GETNUM
  572A   90   C5      		BCC GTFX2A
  572C   C9   03      		CMP #FIX
  572E   F0   05      		BEQ GT2FX1
  5730   A2   1C      		LDX #NARG1
  5732   20   2B   67 		JSR XINT
  5735   A2   F2      	GT2FX1:	LDX #NARG2
  5737   20   45   57 		JSR GETNUM
  573A   90   B8      		BCC GTFX2C
  573C   C9   03      		CMP #FIX
  573E   F0   C5      		BEQ GTNRTS
  5740   A2   F2      		LDX #NARG2
  5742   4C   2B   67 		JMP XINT
                      	;
                      	;Gets a numerical argument if possible. Returns with carry clear if successful.
                      	;Returns with type of argument (Fix/Flo) in A.
  5745   86   A3      	GETNUM:	STX ANSN1	;Address of argument
  5747   20   93   5C 		JSR GETTYP
  574A   A6   A3      		LDX ANSN1
  574C   C9   01      		CMP #ATOM
  574E   F0   23      		BEQ ATMTXX
  5750   C9   03      		CMP #FIX
  5752   F0   06      		BEQ GTFX2
  5754   C9   04      		CMP #FLO
  5756   F0   02      		BEQ GTFX2
  5758   18           		CLC		;Carry clear means argument not OK
  5759   60           		RTS
  575A   48           	GTFX2:	PHA		;Save type
  575B   B5   00      		LDA $00,X
  575D   85   A4      		STA TEMPNH
  575F   B5   01      		LDA $01,X
  5761   85   A5      		STA TEMPNH+1
  5763   A0   00      		LDY #$00
  5765   B1   A4      		LDA (TEMPNH),Y
  5767   95   00      		STA $00,X
  5769   C8           		INY
  576A   B1   A4      		LDA (TEMPNH),Y
  576C   95   01      		STA $01,X
  576E   68           		PLA		;Retrieve type
  576F   38           		SEC		;Carry set means argument OK
  5770   60           	RTSA1:	RTS
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-91
LOGO	MISCELLANEOUS AND EVALUATOR UTILITY ROUTINES

                      	;Convert an atom to a Fixnum or Flonum if possible. Sets the carry
                      	;if successful. Returns type of number (Fix/Flo) in A.?
                      	;
  5771   86   A3      	ATMTFX:	STX ANSN1	;ANSN1 points to argument
  5773   A0   AE      	ATMTXX:	LDY #TEMPN4	;TEMPN4 becomes PNAME (Entry point for GETNUM)
  5775   20   1D   58 		JSR GETPNM
  5778   A5   AF      		LDA TEMPN4+1
  577A   D0   02      		BNE ATMT1
  577C   18           	ATMT4F:	CLC		;Carry clear means argument not a number
  577D   60           		RTS
  577E   A0   01      	ATMT1:	LDY #$01
  5780   B1   AE      		LDA (TEMPN4),Y
  5782   85   B1      		STA TEMPN5+1
  5784   88           		DEY
  5785   84   B5      		STY TEMPN6	;TEMPN6 is NUMBER, initialize to 0
  5787   84   B6      		STY TEMPN6+1
  5789   84   B2      		STY ANSN2	;ANSN2 is SIGN
  578B   B1   AE      		LDA (TEMPN4),Y
  578D   85   B0      		STA TEMPN5	;(CAR) a pair of digits to TEMPN5
  578F   C9   2D      		CMP #'-
  5791   D0   04      		BNE ATMT3
  5793   E6   B2      		INC ANSN2	;ANSN2 is SIGN
  5795   D0   07      		BNE ATMT4A	;(Always)
  5797   20   D9   57 	ATMT3:	JSR GOBDIG
  579A   A5   AF      	ATMT4:	LDA TEMPN4+1
  579C   F0   26      		BEQ ATMT4E
  579E   A0   02      	ATMT4A:	LDY #$02
  57A0   B1   AE      		LDA (TEMPN4),Y
  57A2   AA           		TAX
  57A3   C8           		INY
  57A4   B1   AE      		LDA (TEMPN4),Y
  57A6   85   AF      		STA TEMPN4+1
  57A8   86   AE      		STX TEMPN4	;(CDR) PNAME to next two characters
  57AA   A5   B1      		LDA TEMPN5+1
  57AC   F0   EC      		BEQ ATMT4
  57AE   20   D9   57 		JSR GOBDIG
  57B1   A5   AF      		LDA TEMPN4+1
  57B3   F0   0F      		BEQ ATMT4E
  57B5   A0   01      		LDY #$01
  57B7   B1   AE      		LDA (TEMPN4),Y
  57B9   85   B1      		STA TEMPN5+1
  57BB   88           		DEY
  57BC   B1   AE      		LDA (TEMPN4),Y	;(CAR) next two characters
  57BE   20   D9   57 		JSR GOBDIG
  57C1   4C   9A   57 		JMP ATMT4
  57C4   A5   B2      	ATMT4E:	LDA ANSN2
  57C6   F0   05      		BEQ ATMT5
  57C8   A2   B5      		LDX #TEMPN6
  57CA   20   49   6F 		JSR COMPL	;?DIFFERENT FOR FLONUM
  57CD   A6   A3      	ATMT5:	LDX ANSN1	;ANSN1 is argument pointer
  57CF   A5   B5      		LDA TEMPN6	;TEMPN6 is NUMBER
  57D1   95   00      		STA $00,X
  57D3   A5   B6      		LDA TEMPN6+1
  57D5   95   01      		STA $01,X
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-92
LOGO	MISCELLANEOUS AND EVALUATOR UTILITY ROUTINES

  57D7   38           		SEC		;Carry set means argument is a number
  57D8   60           		RTS
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-93
LOGO	MISCELLANEOUS AND EVALUATOR UTILITY ROUTINES

  57D9   C9   3A      	GOBDIG:	CMP #':		;Next character after "9"
  57DB   B0   3C      		BCS GOBF	;?CHECK FOR FLONUM - DECIMAL PT., E OR N
  57DD   E9   2F      		SBC #'/		;Character before "0" (because borrow is set here)
  57DF   90   38      		BCC GOBF
  57E1   A8           		TAY
  57E2   06   B5      		ASL TEMPN6
  57E4   26   B6      		ROL TEMPN6+1	;NUMBER := NUMBER * 2
  57E6   B0   31      		BCS GOBF	;?OVERFLOW MEANS FLONUM
  57E8   A5   B5      		LDA TEMPN6
  57EA   85   A4      		STA TEMPNH
  57EC   A5   B6      		LDA TEMPN6+1
  57EE   85   A5      		STA TEMPNH+1
  57F0   06   A4      		ASL TEMPNH
  57F2   26   A5      		ROL TEMPNH+1
  57F4   B0   23      		BCS GOBF
  57F6   06   A4      		ASL TEMPNH
  57F8   26   A5      		ROL TEMPNH+1
  57FA   B0   1D      		BCS GOBF
  57FC   A5   A4      		LDA TEMPNH
  57FE   65   B5      		ADC TEMPN6
  5800   85   B5      		STA TEMPN6
  5802   A5   A5      		LDA TEMPNH+1
  5804   65   B6      		ADC TEMPN6+1
  5806   85   B6      		STA TEMPN6+1	;NUMBER := NUMBER * 10.
  5808   B0   0F      		BCS GOBF
  580A   98           		TYA
  580B   65   B5      		ADC TEMPN6	;NUMBER := NUMBER + Digit
  580D   85   B5      		STA TEMPN6
  580F   A5   B6      		LDA TEMPN6+1
  5811   69   00      		ADC #$00
  5813   85   B6      		STA TEMPN6+1
  5815   B0   02      		BCS GOBF
  5817   10   03      		BPL HKCR2
  5819   18           	GOBF:	CLC		;Carry clear means argument non-numeric
  581A   68           		PLA		;Return back past ATMTFX
  581B   68           		PLA
  581C   60           	HKCR2:	RTS
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-94
LOGO	MISCELLANEOUS AND EVALUATOR UTILITY ROUTINES

  581D   84   A9      	GETPNM:	STY TEMPN1+1	;TEMPN1.H is returned PNAME pointer
  581F   86   A8      		STX TEMPN1	;TEMPN1.L is ATOMM pointer
  5821   B5   00      		LDA $00,X
  5823   29   FC      		AND #$FC
  5825   95   00      		STA $00,X
  5827   20   93   5C 		JSR GETTYP
  582A   A4   A8      		LDY TEMPN1
  582C   B6   00      		LDX $00,Y
  582E   86   A4      		STX TEMPNH	;TEMPNH becomes ATOMM
  5830   B6   01      		LDX $01,Y
  5832   86   A5      		STX TEMPNH+1
  5834   A0   02      		LDY #$02
  5836   C9   01      		CMP #ATOM
  5838   F0   07      		BEQ GTPN1
  583A   C9   07      		CMP #SATOM
  583C   F0   22      		BEQ GTPN2
  583E   20   BD   50 		JSR SYSBUG
  5841   B1   A4      	GTPN1:	LDA (TEMPNH),Y	;(Y is $02)
  5843   AA           		TAX
  5844   C8           		INY
  5845   B1   A4      		LDA (TEMPNH),Y
  5847   85   A5      		STA TEMPNH+1
  5849   86   A4      		STX TEMPNH	;(CDR)
  584B   A6   A9      		LDX TEMPN1+1
  584D   88           		DEY
  584E   B1   A4      		LDA (TEMPNH),Y
  5850   48           		PHA
  5851   C8           		INY
  5852   B1   A4      		LDA (TEMPNH),Y
  5854   95   01      		STA $01,X
  5856   68           		PLA
  5857   A8           		TAY		;(CDR)
  5858   29   FE      		AND #$FE
  585A   95   00      		STA $00,X
  585C   98           		TYA
  585D   29   01      		AND #$01
  585F   60           	RTS1A:	RTS
  5860   A9   00      	GTPN2:	LDA #$00
  5862   85   84      		STA MARK1
  5864   85   85      		STA MARK1+1
  5866   B1   A4      		LDA (TEMPNH),Y	;(Y is $02)
  5868   85   A6      		STA TEMPN	;TEMPN is INDEX
  586A   C8           		INY
  586B   B1   A4      		LDA (TEMPNH),Y
  586D   85   A7      		STA TEMPN+1	;(CDR)
  586F   A5   18      		LDA SP
  5871   85   AA      		STA TEMPN2	;TEMPN2 is TEMP
  5873   A5   19      		LDA SP+1
  5875   85   AB      		STA TEMPN2+1
  5877   A0   03      		LDY #$03
  5879   B1   A6      	GTPNW:	LDA (TEMPN),Y	;Gets INDEX + 3 (SA_PNAME)
  587B   F0   18      		BEQ GTPNWE
  587D   84   A8      		STY TEMPN1	;TEMPN1.L is INDEX offset
  587F   20   8D   51 		JSR PSHTST
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-95
LOGO	MISCELLANEOUS AND EVALUATOR UTILITY ROUTINES

  5882   A4   A8      		LDY TEMPN1
  5884   B1   A6      		LDA (TEMPN),Y
  5886   AA           		TAX
  5887   C8           		INY
  5888   B1   A6      		LDA (TEMPN),Y
  588A   48           		PHA
  588B   C8           		INY
  588C   84   A8      		STY TEMPN1
  588E   A8           		TAY
  588F   20   23   51 		JSR PUSH
  5892   68           		PLA
  5893   D0   E4      		BNE GTPNW
  5895   A5   AA      	GTPNWE:	LDA TEMPN2
  5897   C5   18      		CMP SP
  5899   D0   06      		BNE GTPNW1
  589B   A5   AB      		LDA TEMPN2+1
  589D   C5   19      		CMP SP+1
  589F   F0   13      		BEQ GTPNWF
  58A1   A2   AC      	GTPNW1:	LDX #TEMPN3
  58A3   20   4F   51 		JSR POP
  58A6   A2   84      		LDX #MARK1
  58A8   A0   AC      		LDY #TEMPN3
  58AA   86   A2      		STX ANSN
  58AC   A9   02      		LDA #STRING
  58AE   20   09   52 		JSR CONS
  58B1   4C   95   58 		JMP GTPNWE
  58B4   A6   A9      	GTPNWF:	LDX TEMPN1+1	;ANS pointer
  58B6   A5   84      		LDA MARK1
  58B8   95   00      		STA $00,X
  58BA   A5   85      		LDA MARK1+1
  58BC   95   01      		STA $01,X
  58BE   A9   00      		LDA #$00
  58C0   85   84      		STA MARK1
  58C2   85   85      		STA MARK1+1
  58C4   60           	RTSA2X:	RTS
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-96
LOGO	MISCELLANEOUS AND EVALUATOR UTILITY ROUTINES

  58C5   A5   5E      	SKPPTH:	LDA TOKPTR
  58C7   D0   04      		BNE SKPP1
  58C9   A5   5F      		LDA TOKPTR+1
  58CB   F0   F7      		BEQ RTSA2X
  58CD   A0   00      	SKPP1:	LDY #$00
  58CF   B1   5E      		LDA (TOKPTR),Y
  58D1   85   A6      		STA TEMPN
  58D3   C8           		INY
  58D4   B1   5E      		LDA (TOKPTR),Y
  58D6   85   A7      		STA TEMPN+1	;(GETTOK)
  58D8   A2   5E      		LDX #TOKPTR
  58DA   20   00   54 		JSR TTKADV
  58DD   A5   A6      		LDA TEMPN
  58DF   C5   CF      		CMP LPAR
  58E1   D0   E1      		BNE RTSA2X
  58E3   A5   A7      		LDA TEMPN+1
  58E5   C5   D0      		CMP LPAR+1
  58E7   D0   DB      		BNE RTSA2X
  58E9   A9   01      		LDA #$01
  58EB   85   A2      		STA ANSN	;ANSN is PAREN_COUNTER
  58ED   A5   A2      	SKPPW:	LDA ANSN
  58EF   F0   D3      		BEQ RTSA2X
  58F1   A5   5E      		LDA TOKPTR
  58F3   D0   04      		BNE SKPPW1
  58F5   A5   5F      		LDA TOKPTR+1
  58F7   F0   CB      		BEQ RTSA2X
  58F9   A0   00      	SKPPW1:	LDY #$00
  58FB   B1   5E      		LDA (TOKPTR),Y
  58FD   85   A6      		STA TEMPN
  58FF   C8           		INY
  5900   B1   5E      		LDA (TOKPTR),Y
  5902   85   A7      		STA TEMPN+1	;(GETTOK)
  5904   A2   5E      		LDX #TOKPTR
  5906   20   00   54 		JSR TTKADV
  5909   A6   A6      		LDX TEMPN
  590B   A4   A7      		LDY TEMPN+1
  590D   E4   CF      		CPX LPAR
  590F   D0   09      		BNE SKPPW2
  5911   C4   D0      		CPY LPAR+1
  5913   D0   05      		BNE SKPPW2
  5915   E6   A2      		INC ANSN
  5917   4C   ED   58 		JMP SKPPW
  591A   E4   E3      	SKPPW2:	CPX RPAR
  591C   D0   CF      		BNE SKPPW
  591E   C4   E4      		CPY RPAR+1
  5920   D0   CB      		BNE SKPPW
  5922   C6   A2      		DEC ANSN
  5924   4C   ED   58 		JMP SKPPW
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-97
LOGO	MISCELLANEOUS AND EVALUATOR UTILITY ROUTINES

  5927   86   A3      	EXIFSC:	STX ANSN1	;ANSN1 is ANS
  5929   A5   7E      		LDA IFLEVL
  592B   85   A8      		STA TEMPN1	;TEMPN2 is IF_COUNTER
  592D   A5   7F      		LDA IFLEVL+1
  592F   85   A9      		STA TEMPN1+1
  5931   A5   A9      	EXFW:	LDA TEMPN1+1
  5933   C5   7F      		CMP IFLEVL+1
  5935   90   08      		BCC EXFWE
  5937   D0   12      		BNE EXFWA1
  5939   A5   A8      		LDA TEMPN1
  593B   C5   7E      		CMP IFLEVL
  593D   B0   0C      		BCS EXFWA1
  593F   38           	EXFWE:	SEC
  5940   A5   7E      		LDA IFLEVL
  5942   E9   01      		SBC #$01
  5944   85   7E      		STA IFLEVL
  5946   B0   02      		BCS EXFWR
  5948   C6   7F      		DEC IFLEVL+1
  594A   60           	EXFWR:	RTS
  594B   A5   5E      	EXFWA1:	LDA TOKPTR
  594D   D0   04      		BNE EXFW1
  594F   A5   5F      		LDA TOKPTR+1
  5951   F0   EC      		BEQ EXFWE
  5953   A0   00      	EXFW1:	LDY #$00
  5955   A6   A3      		LDX ANSN1
  5957   B1   5E      		LDA (TOKPTR),Y
  5959   95   00      		STA $00,X
  595B   C8           		INY
  595C   B1   5E      		LDA (TOKPTR),Y
  595E   95   01      		STA $01,X	;(GETTOK)
  5960   A8           		TAY
  5961   B5   00      		LDA $00,X
  5963   AA           		TAX
  5964   E4   CD      		CPX LIF
  5966   D0   12      		BNE EXFW2
  5968   C4   CE      		CPY LIF+1
  596A   D0   0E      		BNE EXFW2
  596C   E6   A8      		INC TEMPN1
  596E   D0   02      		BNE EXIFWB
  5970   E6   A9      		INC TEMPN1+1
  5972   A2   5E      	EXIFWB:	LDX #TOKPTR
  5974   20   00   54 		JSR TTKADV
  5977   4C   31   59 		JMP EXFW
  597A   E4   C7      	EXFW2:	CPX LELSE
  597C   D0   25      		BNE EXFW3
  597E   C4   C8      		CPY LELSE+1
  5980   D0   21      		BNE EXFW3
  5982   38           		SEC
  5983   A5   A8      		LDA TEMPN1
  5985   E9   01      		SBC #$01
  5987   85   A8      		STA TEMPN1
  5989   B0   02      		BCS EXFWC
  598B   C6   A9      		DEC TEMPN1+1
  598D   A5   A9      	EXFWC:	LDA TEMPN1+1
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-98
LOGO	MISCELLANEOUS AND EVALUATOR UTILITY ROUTINES

  598F   C5   7F      		CMP IFLEVL+1
  5991   90   AC      		BCC EXFWE
  5993   D0   06      		BNE EXFWD
  5995   A5   A8      		LDA TEMPN1
  5997   C5   7E      		CMP IFLEVL
  5999   90   A4      		BCC EXFWE
  599B   A2   5E      	EXFWD:	LDX #TOKPTR
  599D   20   00   54 		JSR TTKADV
  59A0   4C   4B   59 		JMP EXFWA1
  59A3   E4   E3      	EXFW3:	CPX RPAR
  59A5   D0   04      		BNE EXFW4
  59A7   C4   E4      		CPY RPAR+1
  59A9   F0   94      		BEQ EXFWE
  59AB   20   C5   58 	EXFW4:	JSR SKPPTH
  59AE   4C   31   59 		JMP EXFW
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-99
LOGO	MISCELLANEOUS AND EVALUATOR UTILITY ROUTINES

  59B1   A9   00      	EDTSTP:	LDA #$00
  59B3   85   07      		STA OTPUTN
  59B5   A5   08      		LDA EDSW
  59B7   D0   3A      		BNE EDTSR1
  59B9   A5   78      		LDA LEVNUM
  59BB   D0   3D      		BNE EDTSR2
  59BD   A5   79      		LDA LEVNUM+1
  59BF   D0   39      		BNE EDTSR2
  59C1   A5   5F      		LDA TOKPTR+1
  59C3   F0   38      		BEQ EDTSR3
  59C5   A0   00      		LDY #$00
  59C7   B1   5E      		LDA (TOKPTR),Y
  59C9   85   1C      		STA ARG1
  59CB   C8           		INY
  59CC   B1   5E      		LDA (TOKPTR),Y
  59CE   85   1D      		STA ARG1+1	;(GETTOK)
  59D0   A2   5E      		LDX #TOKPTR
  59D2   20   16   54 		JSR TFKADV
  59D5   A2   1C      		LDX #ARG1
  59D7   20   93   5C 		JSR GETTYP
  59DA   C9   07      		CMP #SATOM
  59DC   F0   22      		BEQ EDTSR4
  59DE   C9   01      		CMP #ATOM
  59E0   D0   21      		BNE EDTSR5
  59E2   A9   01      		LDA #$01
  59E4   85   08      		STA EDSW
  59E6   A5   1C      		LDA ARG1
  59E8   85   80      		STA EDTATM
  59EA   85   82      		STA PODEFL
  59EC   A5   1D      		LDA ARG1+1
  59EE   85   81      		STA EDTATM+1
  59F0   85   83      		STA PODEFL+1
  59F2   60           	RTS2:	RTS
  59F3   A0   80      	EDTSR1:	LDY #EDTATM
  59F5   A9   15      		LDA #XEDT
  59F7   4C   7C   60 		JMP ERROR
  59FA   4C   48   75 	EDTSR2:	JMP STTLR2	;(ERROR XETL)
  59FD   4C   CF   72 	EDTSR3:	JMP SCMMT1	;(ERROR XEOL)
  5A00   4C   10   7B 	EDTSR4:	JMP SPO5S	;(ERROR XUBL,ARG1)
  5A03   4C   8D   72 	EDTSR5:	JMP SMAKE2	;(ERROR XWTA,ARG1,CURTOK)
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-100
LOGO	MISCELLANEOUS AND EVALUATOR UTILITY ROUTINES

                      	;Tries to find a block of (Y) contiguous free words in nodespace.
                      	;If successful, return the start addr in (X). If not, return LNIL.
                      	;
  5A06   86   A2      	GETWDS:	STX ANSN		;ANSN is ans
  5A08   84   A3      		STY ANSN1		;ANSN1 is size
  5A0A   A9   00      		LDA #$00
  5A0C   95   00      		STA $00,X		;zero ans
  5A0E   95   01      		STA $01,X
  5A10   B9   00   00 		LDA $00,Y
  5A13   D0   05      		BNE GW1A
  5A15   B9   01   00 		LDA $01,Y
  5A18   F0   D8      		BEQ RTS2		;If size=0, just return with ANS = 0
  5A1A   20   2A   5A 	GW1A:	JSR GW1			;try once
  5A1D   A6   A2      		LDX ANSN
  5A1F   B5   00      		LDA $00,X
  5A21   D0   CF      		BNE RTS2		;if found something,
  5A23   B5   01      		LDA $01,X		;quit.
  5A25   D0   CB      		BNE RTS2		;otherwise, try again
  5A27   20   69   61 		JSR GARCOL		;after a GC
                      	;
  5A2A   A9   00      	GW1:	LDA #$00
  5A2C   85   A6      		STA TEMPN		;Zero lastptr (TEMPN)
  5A2E   85   A7      		STA TEMPN+1
  5A30   85   AE      		STA TEMPN4
  5A32   85   AF      		STA TEMPN4+1		;and lastptr1 (TEMPN4)
  5A34   A5   5C      		LDA FRLIST		;init ptr (TEMPN1) and
  5A36   85   A8      		STA TEMPN1		;ptr1 (TEMPN3) to freelist
  5A38   85   AC      		STA TEMPN3
  5A3A   A5   5D      		LDA FRLIST+1
  5A3C   85   A9      		STA TEMPN1+1
  5A3E   85   AD      		STA TEMPN3+1
  5A40   A6   A2      	GW1W:	LDX ANSN
  5A42   B5   00      		LDA $00,X		;if ans neq LNIL, done
  5A44   D0   04      		BNE GWRTS		;cuz found something
  5A46   B5   01      		LDA $01,X
  5A48   F0   10      		BEQ GW1WA
  5A4A   A6   A3      	GWRTS:	LDX ANSN1
  5A4C   18           		CLC
  5A4D   A5   14      		LDA NNODES
  5A4F   75   00      		ADC $00,X
  5A51   85   14      		STA NNODES		;Adjust allocation pointer
  5A53   A5   15      		LDA NNODES+1
  5A55   75   01      		ADC $01,X
  5A57   85   15      		STA NNODES+1
  5A59   60           		RTS
  5A5A   A5   A8      	GW1WA:	LDA TEMPN1		;if ptr1 = LNIL, done
  5A5C   D0   04      		BNE GW1W1		;cuz been thru whole
  5A5E   A5   A9      		LDA TEMPN1+1		;freelist, found nothing
  5A60   F0   90      		BEQ RTS2
  5A62   A9   00      	GW1W1:	LDA #$00
  5A64   85   AA      		STA TEMPN2		;sofar (TEMPN2) := 0
  5A66   85   AB      		STA TEMPN2+1
  5A68   85   B2      		STA ANSN2		;contig (ANSN2) := 0 (T)
  5A6A   A6   A3      	GW1X:	LDX ANSN1
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-101
LOGO	MISCELLANEOUS AND EVALUATOR UTILITY ROUTINES

  5A6C   A5   AB      		LDA TEMPN2+1
  5A6E   D5   01      		CMP $01,X
  5A70   90   14      		BCC GW1X2		;if sofar >= size, go if2
  5A72   D0   4F      		BNE GWIF2
  5A74   A5   AA      		LDA TEMPN2
  5A76   D5   00      		CMP $00,X
  5A78   B0   49      		BCS GWIF2
  5A7A   A5   B2      		LDA ANSN2		;if contig = false, go else
  5A7C   D0   70      		BNE GWELSE
  5A7E   A5   AC      		LDA TEMPN3
  5A80   D0   04      		BNE GW1X2		;if ptr1 = LNIL, goto else
  5A82   A5   AD      		LDA TEMPN3+1
  5A84   F0   68      		BEQ GWELSE
  5A86   18           	GW1X2:	CLC
  5A87   A5   AA      		LDA TEMPN2
  5A89   69   02      		ADC #$02		;sofar := sofar + 2
  5A8B   85   AA      		STA TEMPN2
  5A8D   90   02      		BCC GW1X3
  5A8F   E6   AB      		INC TEMPN2+1
  5A91   A0   02      	GW1X3:	LDY #$02
  5A93   B1   AC      		LDA (TEMPN3),Y
  5A95   85   A4      		STA TEMPNH		;temp (TEMPNH) := (cdr ptr1)
  5A97   C8           		INY
  5A98   B1   AC      		LDA (TEMPN3),Y
  5A9A   85   A5      		STA TEMPNH+1		;(CDR)
  5A9C   18           		CLC
  5A9D   A5   A4      		LDA TEMPNH		;add 4 to temp and see if
  5A9F   69   04      		ADC #$04		;result is = ptr1
  5AA1   AA           		TAX
  5AA2   A5   A5      		LDA TEMPNH+1
  5AA4   69   00      		ADC #$00
  5AA6   C5   AD      		CMP TEMPN3+1
  5AA8   D0   04      		BNE NCNTIG
  5AAA   E4   AC      		CPX TEMPN3
  5AAC   F0   02      		BEQ CONTIG		;if so, contig := 1 (false)
  5AAE   E6   B2      	NCNTIG:	INC ANSN2
  5AB0   A5   AC      	CONTIG:	LDA TEMPN3
  5AB2   85   AE      		STA TEMPN4		;lastptr1 := ptr1
  5AB4   A5   AD      		LDA TEMPN3+1
  5AB6   85   AF      		STA TEMPN4+1
  5AB8   A5   A4      		LDA TEMPNH
  5ABA   85   AC      		STA TEMPN3		;ptr1 := temp
  5ABC   A5   A5      		LDA TEMPNH+1
  5ABE   85   AD      		STA TEMPN3+1
  5AC0   4C   6A   5A 		JMP GW1X		;round the while loop
  5AC3   A5   A6      	GWIF2:	LDA TEMPN		;if lastptr = LNIL,
  5AC5   D0   0F      		BNE GWIF3		;freelist := ptr1
  5AC7   A5   A7      		LDA TEMPN+1
  5AC9   D0   0B      		BNE GWIF3
  5ACB   A5   AC      		LDA TEMPN3
  5ACD   85   5C      		STA FRLIST		;freelist := ptr1
  5ACF   A5   AD      		LDA TEMPN3+1
  5AD1   85   5D      		STA FRLIST+1
  5AD3   4C   E1   5A 		JMP GWIF4
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-102
LOGO	MISCELLANEOUS AND EVALUATOR UTILITY ROUTINES

  5AD6   A0   02      	GWIF3:	LDY #$02		;else (rplacd lasptr ptr1)
  5AD8   A5   AC      		LDA TEMPN3
  5ADA   91   A6      		STA (TEMPN),Y
  5ADC   C8           		INY
  5ADD   A5   AD      		LDA TEMPN3+1
  5ADF   91   A6      		STA (TEMPN),Y		;(rplacd)
  5AE1   A6   A2      	GWIF4:	LDX ANSN
  5AE3   A5   AE      		LDA TEMPN4
  5AE5   95   00      		STA $00,X		;ans := lastptr1
  5AE7   A5   AF      		LDA TEMPN4+1
  5AE9   95   01      		STA $01,X
  5AEB   4C   40   5A 		JMP GW1W		;back to top
  5AEE   A5   AC      	GWELSE:	LDA TEMPN3
  5AF0   85   A8      		STA TEMPN1		;ptr := ptr1
  5AF2   A5   AD      		LDA TEMPN3+1
  5AF4   85   A9      		STA TEMPN1+1
  5AF6   A5   AE      		LDA TEMPN4
  5AF8   85   A6      		STA TEMPN		;lastptr := lastptr1
  5AFA   A5   AF      		LDA TEMPN4+1
  5AFC   85   A7      		STA TEMPN+1
  5AFE   4C   40   5A 		JMP GW1W		;back to top
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-103
LOGO	MISCELLANEOUS AND EVALUATOR UTILITY ROUTINES

  5B01   85   B3      	STUFF:	STA ANSN3		;try to associate the function (ATOM)
  5B03   86   B4      		STX ANSNX		;definition with the name (BODY).
  5B05   B5   00      		LDA $00,X
  5B07   85   A4      		STA TEMPNH
  5B09   B5   01      		LDA $01,X
  5B0B   85   A5      		STA TEMPNH+1		;TEMPNH is BODY
  5B0D   A0   00      		LDY #$00
  5B0F   B1   A4      		LDA (TEMPNH),Y
  5B11   85   B7      		STA TEMPN7
  5B13   C8           		INY
  5B14   B1   A4      		LDA (TEMPNH),Y
  5B16   85   B8      		STA TEMPN7+1	;(CAR) to LINE
  5B18   A2   BD      		LDX #TEMPX2	;TEMPX2 becomes NARGS
  5B1A   A0   B7      		LDY #TEMPN7
  5B1C   20   CD   54 		JSR GETLEN
  5B1F   A9   00      		LDA #$00
  5B21   85   B5      		STA TEMPN6	;TEMPN6 is SIZE
  5B23   85   B6      		STA TEMPN6+1
  5B25   A6   B4      		LDX ANSNX
  5B27   B5   00      		LDA $00,X
  5B29   85   A4      		STA TEMPNH	;TEMPNH is BODY
  5B2B   B5   01      		LDA $01,X
  5B2D   85   A5      		STA TEMPNH+1
  5B2F   A5   A4      	GTSZW:	LDA TEMPNH
  5B31   D0   04      		BNE GTSZW1
  5B33   A5   A5      		LDA TEMPNH+1
  5B35   F0   33      		BEQ GTSZND
  5B37   A0   00      	GTSZW1:	LDY #$00
  5B39   B1   A4      		LDA (TEMPNH),Y
  5B3B   85   A6      		STA TEMPN
  5B3D   C8           		INY
  5B3E   B1   A4      		LDA (TEMPNH),Y
  5B40   85   A7      		STA TEMPN+1	;(CAR) to LINE (GETSIZ local)
  5B42   C8           		INY
  5B43   B1   A4      		LDA (TEMPNH),Y
  5B45   AA           		TAX
  5B46   C8           		INY
  5B47   B1   A4      		LDA (TEMPNH),Y
  5B49   85   A5      		STA TEMPNH+1
  5B4B   86   A4      		STX TEMPNH	;(CDR)
  5B4D   A5   A6      	GTSZX:	LDA TEMPN
  5B4F   D0   04      		BNE GTSZX1
  5B51   A5   A7      		LDA TEMPN+1
  5B53   F0   DA      		BEQ GTSZW
  5B55   E6   B5      	GTSZX1:	INC TEMPN6
  5B57   D0   02      		BNE GTSZX2
  5B59   E6   B6      		INC TEMPN6+1
  5B5B   A0   02      	GTSZX2:	LDY #$02
  5B5D   B1   A6      		LDA (TEMPN),Y
  5B5F   AA           		TAX
  5B60   C8           		INY
  5B61   B1   A6      		LDA (TEMPN),Y
  5B63   85   A7      		STA TEMPN+1
  5B65   86   A6      		STX TEMPN	;(CDR)
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-104
LOGO	MISCELLANEOUS AND EVALUATOR UTILITY ROUTINES

  5B67   4C   4D   5B 		JMP GTSZX
  5B6A   A2   B0      	GTSZND:	LDX #TEMPN5	;TEMPN5 becomes PTR
  5B6C   A0   B5      		LDY #TEMPN6	;SIZE
  5B6E   20   06   5A 		JSR GETWDS
  5B71   A5   B0      		LDA TEMPN5
  5B73   D0   0D      		BNE STFF1
  5B75   A5   B1      		LDA TEMPN5+1
  5B77   D0   09      		BNE STFF1
  5B79   A9   BD      	STFFA:	LDA #TEMPX2
  5B7B   A4   B4      		LDY ANSNX
  5B7D   A6   B3      		LDX ANSN3
  5B7F   4C   B7   5C 		JMP PTFTXT	;PUT_FTEXT (FUNATOM, BODY, NARGS) (X,Y,A)
  5B82   A5   B0      	STFF1:	LDA TEMPN5
  5B84   85   9A      		STA AREA1
  5B86   A5   B1      		LDA TEMPN5+1
  5B88   85   9B      		STA AREA1+1
  5B8A   A5   B5      		LDA TEMPN6
  5B8C   85   9E      		STA SIZE1
  5B8E   A5   B6      		LDA TEMPN6+1
  5B90   85   9F      		STA SIZE1+1
  5B92   A2   B5      		LDX #TEMPN6
  5B94   A4   B4      		LDY ANSNX	;BODY
  5B96   20   CD   54 		JSR GETLEN
  5B99   18           		CLC
  5B9A   A5   B5      		LDA TEMPN6
  5B9C   69   02      		ADC #$02
  5B9E   85   B5      		STA TEMPN6
  5BA0   90   02      		BCC ADHK55
  5BA2   E6   B6      		INC TEMPN6+1
  5BA4   A2   BB      	ADHK55:	LDX #TEMPX1	;TEMPX1 becomes INDEX
  5BA6   A0   B5      		LDY #TEMPN6
  5BA8   20   06   5A 		JSR GETWDS
  5BAB   A5   BB      		LDA TEMPX1
  5BAD   D0   0B      		BNE STFF2
  5BAF   A5   BC      		LDA TEMPX1+1
  5BB1   D0   07      		BNE STFF2
  5BB3   85   9E      		STA SIZE1
  5BB5   85   9F      		STA SIZE1+1
  5BB7   4C   79   5B 		JMP STFFA
  5BBA   A5   BB      	STFF2:	LDA TEMPX1
  5BBC   85   9C      		STA AREA2
  5BBE   85   A8      		STA TEMPN1	;TEMPN1 is INDEX1
  5BC0   A5   BC      		LDA TEMPX1+1
  5BC2   85   9D      		STA AREA2+1
  5BC4   85   A9      		STA TEMPN1+1
  5BC6   18           		CLC
  5BC7   A5   B5      		LDA TEMPN6
  5BC9   69   02      		ADC #$02
  5BCB   85   A0      		STA SIZE2
  5BCD   A5   B6      		LDA TEMPN6+1
  5BCF   69   00      		ADC #$00
  5BD1   85   A1      		STA SIZE2+1
  5BD3   A6   B4      		LDX ANSNX
  5BD5   B5   00      		LDA $00,X
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-105
LOGO	MISCELLANEOUS AND EVALUATOR UTILITY ROUTINES

  5BD7   85   A4      		STA TEMPNH	;TEMPNH is BODY
  5BD9   B5   01      		LDA $01,X
  5BDB   85   A5      		STA TEMPNH+1
  5BDD   A5   A4      	STFFW:	LDA TEMPNH
  5BDF   D0   04      		BNE STFFW1
  5BE1   A5   A5      		LDA TEMPNH+1
  5BE3   F0   66      		BEQ STFFWE
  5BE5   A0   00      	STFFW1:	LDY #$00
  5BE7   A5   B0      		LDA TEMPN5	;PTR
  5BE9   91   A8      		STA (TEMPN1),Y
  5BEB   C8           		INY
  5BEC   A5   B1      		LDA TEMPN5+1
  5BEE   91   A8      		STA (TEMPN1),Y	;(PUTBAR)
  5BF0   18           		CLC
  5BF1   A5   A8      		LDA TEMPN1
  5BF3   69   02      		ADC #$02
  5BF5   85   A8      		STA TEMPN1
  5BF7   90   02      		BCC STFFX
  5BF9   E6   A9      		INC TEMPN1+1
  5BFB   A5   B7      	STFFX:	LDA TEMPN7	;LINE
  5BFD   D0   04      		BNE STFFX1
  5BFF   A5   B8      		LDA TEMPN7+1
  5C01   F0   2F      		BEQ STFFXE
  5C03   A0   00      	STFFX1:	LDY #$00
  5C05   B1   B7      		LDA (TEMPN7),Y
  5C07   85   AC      		STA TEMPN3	;TEMPN3 is TOKEN
  5C09   C8           		INY
  5C0A   B1   B7      		LDA (TEMPN7),Y
  5C0C   85   AD      		STA TEMPN3+1	;(CAR)
  5C0E   C8           		INY
  5C0F   B1   B7      		LDA (TEMPN7),Y
  5C11   AA           		TAX
  5C12   C8           		INY
  5C13   B1   B7      		LDA (TEMPN7),Y
  5C15   85   B8      		STA TEMPN7+1
  5C17   86   B7      		STX TEMPN7	;(CDR)
  5C19   A0   00      		LDY #$00
  5C1B   A5   AC      		LDA TEMPN3
  5C1D   91   B0      		STA (TEMPN5),Y
  5C1F   C8           		INY
  5C20   A5   AD      		LDA TEMPN3+1
  5C22   91   B0      		STA (TEMPN5),Y	;(PUTBAR)
  5C24   18           		CLC
  5C25   A5   B0      		LDA TEMPN5
  5C27   69   02      		ADC #$02
  5C29   85   B0      		STA TEMPN5
  5C2B   90   CE      		BCC STFFX
  5C2D   E6   B1      		INC TEMPN5+1
  5C2F   4C   FB   5B 		JMP STFFX
  5C32   A0   03      	STFFXE:	LDY #$03
  5C34   B1   A4      		LDA (TEMPNH),Y
  5C36   AA           		TAX
  5C37   88           		DEY
  5C38   B1   A4      		LDA (TEMPNH),Y
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-106
LOGO	MISCELLANEOUS AND EVALUATOR UTILITY ROUTINES

  5C3A   85   A4      		STA TEMPNH	;(CDR)
  5C3C   86   A5      		STX TEMPNH+1
  5C3E   88           		DEY
  5C3F   B1   A4      		LDA (TEMPNH),Y
  5C41   85   B8      		STA TEMPN7+1
  5C43   88           		DEY
  5C44   B1   A4      		LDA (TEMPNH),Y
  5C46   85   B7      		STA TEMPN7	;(CAR)
  5C48   4C   DD   5B 		JMP STFFW
  5C4B   A0   00      	STFFWE:	LDY #$00
  5C4D   A5   B0      		LDA TEMPN5
  5C4F   91   A8      		STA (TEMPN1),Y	;TEMPN1 is INDEX1
  5C51   C8           		INY
  5C52   A5   B1      		LDA TEMPN5+1
  5C54   91   A8      		STA (TEMPN1),Y	;(PUTBAR)
  5C56   C8           		INY
  5C57   A9   00      		LDA #$00
  5C59   91   A8      		STA (TEMPN1),Y
  5C5B   C8           		INY
  5C5C   91   A8      		STA (TEMPN1),Y	;(PUTBAR)
  5C5E   A2   BB      		LDX #TEMPX1	;INDEX
  5C60   A9   0B      		LDA #FPACK
  5C62   20   93   52 		JSR PUTTYP
  5C65   A9   BD      		LDA #TEMPX2
  5C67   A0   BB      		LDY #TEMPX1
  5C69   A6   B3      		LDX ANSN3
  5C6B   20   B7   5C 		JSR PTFTXT	;(X,Y,A)
  5C6E   A9   00      		LDA #$00
  5C70   85   9E      		STA SIZE1
  5C72   85   9F      		STA SIZE1+1
  5C74   85   A0      		STA SIZE2
  5C76   85   A1      		STA SIZE2+1
  5C78   60           	RTS3:	RTS
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-107
LOGO	MISCELLANEOUS AND EVALUATOR UTILITY ROUTINES

  5C79   46   A5      	TYPACS:	LSR TEMPNH+1
  5C7B   66   A4      		ROR TEMPNH
  5C7D   46   A5      		LSR TEMPNH+1
  5C7F   66   A4      		ROR TEMPNH
  5C81   18           		CLC
  5C82   A5   A4      		LDA TEMPNH
  5C84   69   60      		ADC #TYPBAS&$FF
  5C86   85   A4      		STA TEMPNH
  5C88   A5   A5      		LDA TEMPNH+1
  5C8A   69   C2      		ADC #TYPBAS^
  5C8C   85   A5      		STA TEMPNH+1
  5C8E   A0   00      		LDY #$00
  5C90   B1   A4      		LDA (TEMPNH),Y
  5C92   60           		RTS
                      	;
  5C93   B5   01      	GETTYP:	LDA $01,X
  5C95   F0   1D      		BEQ GETTPE
  5C97   B5   00      	GETTP1:	LDA $00,X
  5C99   85   A4      		STA TEMPNH
  5C9B   B5   01      		LDA $01,X
  5C9D   85   A5      		STA TEMPNH+1
  5C9F   20   79   5C 		JSR TYPACS
  5CA2   C9   01      		CMP #ATOM
  5CA4   F0   04      		BEQ GETTP4
  5CA6   C9   07      		CMP #SATOM
  5CA8   D0   0A      		BNE GETTPE
  5CAA   A8           	GETTP4:	TAY
  5CAB   B5   00      		LDA $00,X
  5CAD   29   03      		AND #$03
  5CAF   F0   04      		BEQ GETTPF
  5CB1   18           		CLC
  5CB2   69   07      		ADC #$07
  5CB4   60           	GETTPE:	RTS
  5CB5   98           	GETTPF:	TYA
  5CB6   60           		RTS
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-108
LOGO	MISCELLANEOUS AND EVALUATOR UTILITY ROUTINES

  5CB7   84   B4      	PTFTXT:	STY ANSNX	;FUNTEXT
  5CB9   85   B3      		STA ANSN3	;NARGS
  5CBB   86   B7      		STX TEMPN7	;ATOMM
  5CBD   20   93   5C 		JSR GETTYP
  5CC0   C9   07      		CMP #SATOM
  5CC2   F0   07      		BEQ PTFTX1
  5CC4   C9   01      		CMP #ATOM
  5CC6   F0   0A      		BEQ PTFTX2
  5CC8   20   BD   50 		JSR SYSBUG
  5CCB   A4   B7      	PTFTX1:	LDY TEMPN7
  5CCD   A9   0C      		LDA #XUBL
  5CCF   4C   7C   60 		JMP ERROR
  5CD2   A6   B7      	PTFTX2:	LDX TEMPN7
  5CD4   B5   00      		LDA $00,X
  5CD6   85   A4      		STA TEMPNH	;TEMPNH is ATOMM
  5CD8   B5   01      		LDA $01,X
  5CDA   85   A5      		STA TEMPNH+1
  5CDC   A0   02      		LDY #$02
  5CDE   B1   A4      		LDA (TEMPNH),Y
  5CE0   85   B0      		STA TEMPN5	;TEMPN5 is CELL
  5CE2   C8           		INY
  5CE3   B1   A4      		LDA (TEMPNH),Y
  5CE5   85   B1      		STA TEMPN5+1	;(CDR)
  5CE7   A0   00      		LDY #$00
  5CE9   B1   B0      		LDA (TEMPN5),Y
  5CEB   85   B5      		STA TEMPN6	;TEMPN6 is FUNCT
  5CED   C8           		INY
  5CEE   B1   B0      		LDA (TEMPN5),Y
  5CF0   85   B6      		STA TEMPN6+1	;(CAR)
  5CF2   D0   40      		BNE PTFTX3
  5CF4   A6   B4      		LDX ANSNX	;FUNTEXT ptr.
  5CF6   B5   00      		LDA $00,X
  5CF8   85   84      		STA MARK1
  5CFA   B5   01      		LDA $01,X
  5CFC   85   85      		STA MARK1+1
  5CFE   A9   04      		LDA #$04
  5D00   85   B9      		STA TEMPN8
  5D02   A9   00      		LDA #$00
  5D04   85   BA      		STA TEMPN8+1
  5D06   A0   B9      		LDY #TEMPN8
  5D08   A2   B5      		LDX #TEMPN6
  5D0A   20   06   5A 		JSR GETWDS
  5D0D   A0   00      		LDY #$00
  5D0F   A5   B5      		LDA TEMPN6	;FUNCT
  5D11   F0   42      		BEQ PTFER
  5D13   91   B0      		STA (TEMPN5),Y	;CELL
  5D15   C8           		INY
  5D16   A5   B6      		LDA TEMPN6+1
  5D18   91   B0      		STA (TEMPN5),Y	;(RPLACA)
  5D1A   A2   B5      		LDX #TEMPN6
  5D1C   A9   06      		LDA #UFUN
  5D1E   20   93   52 		JSR PUTTYP
  5D21   A0   06      		LDY #$06
  5D23   A6   B7      		LDX TEMPN7	;ATOMM
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-109
LOGO	MISCELLANEOUS AND EVALUATOR UTILITY ROUTINES

  5D25   B5   00      		LDA $00,X
  5D27   91   B5      		STA (TEMPN6),Y
  5D29   C8           		INY
  5D2A   B5   01      		LDA $01,X
  5D2C   91   B5      		STA (TEMPN6),Y	;(PUTBAR)
  5D2E   A9   00      		LDA #$00
  5D30   85   84      		STA MARK1
  5D32   85   85      		STA MARK1+1
  5D34   A0   00      	PTFTX3:	LDY #$00
  5D36   98           		TYA
  5D37   91   B5      		STA (TEMPN6),Y
  5D39   C8           		INY
  5D3A   91   B5      		STA (TEMPN6),Y	;(PUTBAR)
  5D3C   C8           		INY
  5D3D   A6   B4      		LDX ANSNX
  5D3F   B5   00      		LDA $00,X	;FUNTEXT
  5D41   91   B5      		STA (TEMPN6),Y
  5D43   C8           		INY
  5D44   B5   01      		LDA $01,X
  5D46   91   B5      		STA (TEMPN6),Y	;(PUTBAR)
  5D48   C8           		INY
  5D49   A6   B3      		LDX ANSN3	;NARGS
  5D4B   B5   00      		LDA $00,X
  5D4D   91   B5      		STA (TEMPN6),Y
  5D4F   C8           		INY
  5D50   B5   01      		LDA $01,X
  5D52   91   B5      		STA (TEMPN6),Y	;(PUTBAR)
  5D54   60           	PTFTXE:	RTS
  5D55   4C   56   52 	PTFER:	JMP CONSR	;(No Nodes, most likely) "No storage left" zapcode
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-110
LOGO	MISCELLANEOUS AND EVALUATOR UTILITY ROUTINES

  5D58   85   B2      	UNSTUF:	STA ANSN2	;ANSN2 is TEXTP
  5D5A   84   A3      		STY ANSN1	;ANSN1 is BODY ptr. (X is FUN ptr.)
  5D5C   B5   00      		LDA $00,X
  5D5E   85   A4      		STA TEMPNH
  5D60   B5   01      		LDA $01,X
  5D62   85   A5      		STA TEMPNH+1
  5D64   A0   02      		LDY #$02
  5D66   B1   A4      		LDA (TEMPNH),Y
  5D68   85   A8      		STA TEMPN1	;TEMPN1 is INDEX
  5D6A   C8           		INY
  5D6B   B1   A4      		LDA (TEMPNH),Y
  5D6D   85   A9      		STA TEMPN1+1	;(CDR)
  5D6F   A2   A8      		LDX #TEMPN1
  5D71   20   93   5C 		JSR GETTYP
  5D74   C9   00      		CMP #LIST
  5D76   F0   07      		BEQ USTF1
  5D78   C9   0B      		CMP #FPACK
  5D7A   F0   0E      		BEQ USTF2
  5D7C   20   BD   50 		JSR SYSBUG
  5D7F   A6   A3      	USTF1:	LDX ANSN1
  5D81   A5   A8      		LDA TEMPN1
  5D83   95   00      		STA $00,X
  5D85   A5   A9      		LDA TEMPN1+1
  5D87   95   01      		STA $01,X
  5D89   60           	USTFE1:	RTS
  5D8A   A9   00      	USTF2:	LDA #$00
  5D8C   85   84      		STA MARK1
  5D8E   85   85      		STA MARK1+1
  5D90   A5   18      		LDA SP
  5D92   85   AE      		STA TEMPN4	;TEMPN4 is STACK
  5D94   A5   19      		LDA SP+1
  5D96   85   AF      		STA TEMPN4+1
  5D98   A0   00      	USTFW2:	LDY #$00
  5D9A   B1   A8      		LDA (TEMPN1),Y
  5D9C   85   AA      		STA TEMPN2	;TEMPN2 is PTR
  5D9E   C8           		INY
  5D9F   B1   A8      		LDA (TEMPN1),Y
  5DA1   85   AB      		STA TEMPN2+1	;(GETBAR)
  5DA3   C8           		INY
  5DA4   B1   A8      		LDA (TEMPN1),Y
  5DA6   85   AC      		STA TEMPN3	;TEMPN3 is ENDPTR
  5DA8   C8           		INY
  5DA9   B1   A8      		LDA (TEMPN1),Y
  5DAB   85   AD      		STA TEMPN3+1	;(GETBAR)
  5DAD   A5   AC      	USTFW:	LDA TEMPN3
  5DAF   D0   04      		BNE USTFW1
  5DB1   A5   AD      		LDA TEMPN3+1
  5DB3   F0   16      		BEQ USTFWE
  5DB5   20   8D   51 	USTFW1:	JSR PSHTST
  5DB8   A2   AA      		LDX #TEMPN2
  5DBA   20   0C   51 		JSR PUSHP
  5DBD   18           		CLC
  5DBE   A5   A8      		LDA TEMPN1
  5DC0   69   02      		ADC #$02
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-111
LOGO	MISCELLANEOUS AND EVALUATOR UTILITY ROUTINES

  5DC2   85   A8      		STA TEMPN1
  5DC4   90   D2      		BCC USTFW2
  5DC6   E6   A9      		INC TEMPN1+1
  5DC8   4C   98   5D 		JMP USTFW2
  5DCB   A5   AA      	USTFWE:	LDA TEMPN2
  5DCD   85   AC      		STA TEMPN3
  5DCF   A5   AB      		LDA TEMPN2+1
  5DD1   85   AD      		STA TEMPN3+1
  5DD3   A5   AE      	USTFX:	LDA TEMPN4
  5DD5   C5   18      		CMP SP
  5DD7   D0   06      		BNE USTFX1
  5DD9   A5   AF      		LDA TEMPN4+1
  5DDB   C5   19      		CMP SP+1
  5DDD   F0   74      		BEQ USTFXE
  5DDF   A2   AA      	USTFX1:	LDX #TEMPN2
  5DE1   20   4F   51 		JSR POP
  5DE4   A9   00      		LDA #$00
  5DE6   85   86      		STA MARK2
  5DE8   85   87      		STA MARK2+1
  5DEA   A5   AC      	USTFY:	LDA TEMPN3
  5DEC   C5   AA      		CMP TEMPN2
  5DEE   D0   06      		BNE USTFY1
  5DF0   A5   AD      		LDA TEMPN3+1
  5DF2   C5   AB      		CMP TEMPN2+1
  5DF4   F0   24      		BEQ USTFYE
  5DF6   38           	USTFY1:	SEC
  5DF7   A5   AC      		LDA TEMPN3
  5DF9   E9   02      		SBC #$02
  5DFB   85   AC      		STA TEMPN3
  5DFD   B0   02      		BCS USTFY2
  5DFF   C6   AD      		DEC TEMPN3+1
  5E01   A0   00      	USTFY2:	LDY #$00
  5E03   B1   AC      		LDA (TEMPN3),Y
  5E05   85   A6      		STA TEMPN
  5E07   C8           		INY
  5E08   B1   AC      		LDA (TEMPN3),Y
  5E0A   85   A7      		STA TEMPN+1	;(GETBAR)
  5E0C   A9   00      		LDA #LIST
  5E0E   A2   86      		LDX #MARK2
  5E10   86   A2      		STX ANSN
  5E12   A0   A6      		LDY #TEMPN
  5E14   20   09   52 		JSR CONS
  5E17   4C   EA   5D 		JMP USTFY
  5E1A   A2   86      	USTFYE:	LDX #MARK2
  5E1C   A5   AE      		LDA TEMPN4
  5E1E   C5   18      		CMP SP
  5E20   D0   0E      		BNE USTFX2
  5E22   A5   AF      		LDA TEMPN4+1
  5E24   C5   19      		CMP SP+1
  5E26   D0   08      		BNE USTFX2
  5E28   A9   00      		LDA #LIST
  5E2A   20   93   52 		JSR PUTTYP
  5E2D   4C   45   5E 		JMP USTFX3
  5E30   A9   0C      	USTFX2:	LDA #FLIST
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-112
LOGO	MISCELLANEOUS AND EVALUATOR UTILITY ROUTINES

  5E32   20   93   52 		JSR PUTTYP
  5E35   A5   B2      		LDA ANSN2
  5E37   F0   0C      		BEQ USTFX3
  5E39   A0   02      		LDY #$02
  5E3B   B1   86      		LDA (MARK2),Y
  5E3D   AA           		TAX
  5E3E   C8           		INY
  5E3F   B1   86      		LDA (MARK2),Y
  5E41   85   87      		STA MARK2+1
  5E43   86   86      		STX MARK2	;(CDR)
  5E45   A2   84      	USTFX3:	LDX #MARK1
  5E47   86   A2      		STX ANSN
  5E49   A0   86      		LDY #MARK2
  5E4B   A9   00      		LDA #LIST
  5E4D   20   09   52 		JSR CONS
  5E50   4C   CB   5D 		JMP USTFWE
  5E53   A6   A3      	USTFXE:	LDX ANSN1	;BODY
  5E55   A5   84      		LDA MARK1
  5E57   95   00      		STA $00,X
  5E59   A5   85      		LDA MARK1+1
  5E5B   95   01      		STA $01,X
  5E5D   A9   00      		LDA #$00
  5E5F   85   84      		STA MARK1
  5E61   85   86      		STA MARK2
  5E63   85   85      		STA MARK1+1
  5E65   85   87      		STA MARK2+1
  5E67   60           	USTFE:	RTS
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-113
LOGO	MISCELLANEOUS AND EVALUATOR UTILITY ROUTINES

  5E68   86   A3      	DEFUN:	STX ANSN1	;ANSN1 is LISTT
  5E6A   84   B2      		STY ANSN2	;ANSN2 is ATOMM
  5E6C   B5   01      		LDA $01,X
  5E6E   D0   05      		BNE DEFUN1
  5E70   A6   B2      		LDX ANSN2
  5E72   4C   11   55 		JMP UNFUNC
  5E75   20   38   51 	DEFUN1:	JSR VPUSHP
  5E78   A9   00      		LDA #$00
  5E7A   85   AE      		STA TEMPN4	;TEMPN4 is NUMBER
  5E7C   85   AF      		STA TEMPN4+1
  5E7E   A5   1A      		LDA VSP
  5E80   85   A8      		STA TEMPN1	;TEMPN1 is PTR
  5E82   A5   1B      		LDA VSP+1
  5E84   85   A9      		STA TEMPN1+1
  5E86   A6   A3      		LDX ANSN1
  5E88   B5   00      		LDA $00,X
  5E8A   85   A6      		STA TEMPN
  5E8C   B5   01      		LDA $01,X
  5E8E   85   A7      		STA TEMPN+1
  5E90   A0   00      		LDY #$00
  5E92   B1   A6      		LDA (TEMPN),Y
  5E94   85   AA      		STA TEMPN2
  5E96   C8           		INY
  5E97   B1   A6      		LDA (TEMPN),Y
  5E99   85   AB      		STA TEMPN2+1	;(CAR)
  5E9B   A2   AA      		LDX #TEMPN2
  5E9D   20   38   51 		JSR VPUSHP
  5EA0   A0   02      		LDY #$02
  5EA2   B1   A6      		LDA (TEMPN),Y
  5EA4   85   AA      		STA TEMPN2	;TEMPN2 is TLIST
  5EA6   C8           		INY
  5EA7   B1   A6      		LDA (TEMPN),Y
  5EA9   85   AB      		STA TEMPN2+1	;(CDR)
  5EAB   A5   AB      	DEFUNW:	LDA TEMPN2+1
  5EAD   F0   3E      		BEQ DEFNWE
  5EAF   A0   00      	DEFNW1:	LDY #$00
  5EB1   B1   AA      		LDA (TEMPN2),Y
  5EB3   85   AC      		STA TEMPN3	;TEMPN3 is T1
  5EB5   C8           		INY
  5EB6   B1   AA      		LDA (TEMPN2),Y
  5EB8   85   AD      		STA TEMPN3+1	;(CAR)
  5EBA   A2   AC      		LDX #TEMPN3
  5EBC   20   93   5C 		JSR GETTYP
  5EBF   C9   00      		CMP #LIST
  5EC1   D0   58      		BNE DEFNER
  5EC3   A2   AC      		LDX #TEMPN3
  5EC5   86   A2      		STX ANSN
  5EC7   A0   AE      		LDY #TEMPN4
  5EC9   A9   0C      		LDA #FLIST
  5ECB   20   09   52 		JSR CONS
  5ECE   A2   AC      		LDX #TEMPN3
  5ED0   20   38   51 		JSR VPUSHP
  5ED3   A0   02      		LDY #$02
  5ED5   B1   AA      		LDA (TEMPN2),Y
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-114
LOGO	MISCELLANEOUS AND EVALUATOR UTILITY ROUTINES

  5ED7   AA           		TAX
  5ED8   C8           		INY
  5ED9   B1   AA      		LDA (TEMPN2),Y
  5EDB   85   AB      		STA TEMPN2+1
  5EDD   86   AA      		STX TEMPN2	;(CDR)
  5EDF   18           		CLC
  5EE0   A5   AE      		LDA TEMPN4
  5EE2   69   0A      		ADC #LININC
  5EE4   85   AE      		STA TEMPN4
  5EE6   90   C3      		BCC DEFUNW
  5EE8   E6   AF      		INC TEMPN4+1
  5EEA   4C   AB   5E 		JMP DEFUNW
  5EED   A9   00      	DEFNWE:	LDA #$00
  5EEF   A6   A3      		LDX ANSN1	;LISTT
  5EF1   95   00      		STA $00,X
  5EF3   95   01      		STA $01,X
  5EF5   A5   A8      	DEFUNX:	LDA TEMPN1
  5EF7   C5   1A      		CMP VSP
  5EF9   D0   06      		BNE DEFNX1
  5EFB   A5   A9      		LDA TEMPN1+1
  5EFD   C5   1B      		CMP VSP+1
  5EFF   F0   13      		BEQ DEFNXE
  5F01   A2   AC      	DEFNX1:	LDX #TEMPN3
  5F03   20   66   51 		JSR VPOP
  5F06   A6   A3      		LDX ANSN1
  5F08   86   A2      		STX ANSN
  5F0A   A0   AC      		LDY #TEMPN3
  5F0C   A9   00      		LDA #LIST
  5F0E   20   09   52 		JSR CONS
  5F11   4C   F5   5E 		JMP DEFUNX
  5F14   A6   A3      	DEFNXE:	LDX ANSN1
  5F16   A5   B2      		LDA ANSN2
  5F18   4C   01   5B 		JMP STUFF
  5F1B   A6   A3      	DEFNER:	LDX ANSN1
  5F1D   4C   57   75 		JMP STTLR4	;(ERROR XWTA,CURTOK)
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-115
LOGO	MISCELLANEOUS AND EVALUATOR UTILITY ROUTINES

  5F20   86   A3      	INTERN:	STX ANSN1	;ANSN1 IS STRING PTR.
  5F22   84   B2      		STY ANSN2	;ANSN2 IS ANS PTR.
  5F24   20   38   51 		JSR VPUSHP
  5F27   A5   8E      		LDA OBLIST	;OBFIND starts
  5F29   85   AE      		STA TEMPN4
  5F2B   A5   8F      		LDA OBLIST+1
  5F2D   85   AF      		STA TEMPN4+1	;TEMPN4 IS OB_PTR
  5F2F   A5   AE      	OBFW:	LDA TEMPN4
  5F31   D0   04      		BNE OBFW1
  5F33   A5   AF      		LDA TEMPN4+1
  5F35   F0   68      		BEQ OBFNFE
  5F37   A0   00      	OBFW1:	LDY #$00
  5F39   A6   B2      		LDX ANSN2
  5F3B   B1   AE      		LDA (TEMPN4),Y
  5F3D   95   00      		STA $00,X
  5F3F   C8           		INY
  5F40   B1   AE      		LDA (TEMPN4),Y
  5F42   95   01      		STA $01,X	;(CAR) TO ANS
  5F44   A0   B0      		LDY #TEMPN5	;TEMPN5 IS PNAME
  5F46   20   1D   58 		JSR GETPNM
  5F49   A6   A3      		LDX ANSN1	;MATCH2 starts (STRING1 IS TEMPN5)
  5F4B   B5   00      		LDA $00,X
  5F4D   85   A4      		STA TEMPNH
  5F4F   B5   01      		LDA $01,X
  5F51   85   A5      		STA TEMPNH+1	;TEMPNH IS STRING2
  5F53   A5   A4      	MTC2W:	LDA TEMPNH
  5F55   D0   11      		BNE MTC2W1
  5F57   A5   A5      		LDA TEMPNH+1
  5F59   D0   0D      		BNE MTC2W1
  5F5B   A5   B0      	MTC2WA:	LDA TEMPN5
  5F5D   D0   31      		BNE OBFNF	;IF STRING2 IS 0 AND STRING1 ISN'T, NOT FOUND
  5F5F   A5   B1      		LDA TEMPN5+1
  5F61   D0   2D      		BNE OBFNF
  5F63   A2   B0      		LDX #TEMPN5
  5F65   4C   66   51 		JMP VPOP	;Pop the Vpushed string
  5F68   A0   00      	MTC2W1:	LDY #$00
  5F6A   B1   A4      		LDA (TEMPNH),Y
  5F6C   D1   B0      		CMP (TEMPN5),Y
  5F6E   D0   20      		BNE OBFNF
  5F70   C8           		INY
  5F71   B1   A4      		LDA (TEMPNH),Y
  5F73   D1   B0      		CMP (TEMPN5),Y
  5F75   D0   19      		BNE OBFNF
  5F77   C8           		INY
  5F78   B1   A4      		LDA (TEMPNH),Y
  5F7A   AA           		TAX
  5F7B   C8           		INY
  5F7C   B1   A4      		LDA (TEMPNH),Y
  5F7E   85   A5      		STA TEMPNH+1
  5F80   86   A4      		STX TEMPNH	;(CDR)
  5F82   88           		DEY
  5F83   B1   B0      		LDA (TEMPN5),Y
  5F85   AA           		TAX
  5F86   C8           		INY
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-116
LOGO	MISCELLANEOUS AND EVALUATOR UTILITY ROUTINES

  5F87   B1   B0      		LDA (TEMPN5),Y
  5F89   85   B1      		STA TEMPN5+1
  5F8B   86   B0      		STX TEMPN5	;(CDR)
  5F8D   4C   53   5F 		JMP MTC2W	;TRY NEXT TWO CHARACTERS
  5F90   A0   02      	OBFNF:	LDY #$02	;TRY NEXT OBLIST OBJECT
  5F92   B1   AE      		LDA (TEMPN4),Y	;(OB_PTR)
  5F94   AA           		TAX
  5F95   C8           		INY
  5F96   B1   AE      		LDA (TEMPN4),Y
  5F98   85   AF      		STA TEMPN4+1
  5F9A   86   AE      		STX TEMPN4	;(CDR)
  5F9C   4C   2F   5F 		JMP OBFW
  5F9F   A6   A3      	OBFNFE:	LDX ANSN1	;IT'S NOT ON THE OBLIST
  5FA1   20   66   51 		JSR VPOP	;GET STRING BACK
  5FA4   A5   56      		LDA SOBLST	;SOBFIND starts
  5FA6   A6   B2      		LDX ANSN2	;ANS BECOMES SOBLIST POINTER
  5FA8   95   00      		STA $00,X
  5FAA   A5   57      		LDA SOBLST+1
  5FAC   95   01      		STA $01,X
  5FAE   A6   B2      	SBFW:	LDX ANSN2	;OBJECT POINTER
  5FB0   B5   00      	SBFWX:	LDA $00,X
  5FB2   C5   58      		CMP SOBTOP
  5FB4   D0   31      		BNE SBFW1
  5FB6   B5   01      		LDA $01,X
  5FB8   C5   59      		CMP SOBTOP+1
  5FBA   D0   2B      		BNE SBFW1
  5FBC   A6   A3      	SBFWEN:	LDX ANSN1	;STRING
  5FBE   A0   00      	INTRNX:	LDY #$00	;Not found anywhere
  5FC0   84   A9      		STY TEMPN1+1
  5FC2   C8           		INY
  5FC3   84   A8      		STY TEMPN1
  5FC5   A5   B2      		LDA ANSN2
  5FC7   85   A2      		STA ANSN
  5FC9   A0   A8      		LDY #TEMPN1	;(NOVALUE)
  5FCB   A9   00      		LDA #LIST
  5FCD   20   09   52 		JSR CONS
  5FD0   A5   B2      		LDA ANSN2
  5FD2   85   A2      		STA ANSN	;(ANS)
  5FD4   AA           		TAX
  5FD5   A0   A8      		LDY #TEMPN1	;(NOVALUE)
  5FD7   A9   01      		LDA #ATOM
  5FD9   20   09   52 		JSR CONS
  5FDC   A9   00      		LDA #LIST
  5FDE   A2   8E      		LDX #OBLIST
  5FE0   86   A2      		STX ANSN
  5FE2   A4   B2      		LDY ANSN2	;ANS
  5FE4   4C   09   52 		JMP CONS
  5FE7   B5   00      	SBFW1:	LDA $00,X
  5FE9   85   A4      		STA TEMPNH
  5FEB   B5   01      		LDA $01,X
  5FED   85   A5      		STA TEMPNH+1
  5FEF   A0   02      		LDY #$02
  5FF1   B1   A4      		LDA (TEMPNH),Y
  5FF3   C8           		INY
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-117
LOGO	MISCELLANEOUS AND EVALUATOR UTILITY ROUTINES

  5FF4   18           		CLC
  5FF5   69   03      		ADC #$03
  5FF7   85   AA      		STA TEMPN2	;TEMPN2 IS SOBNAME
  5FF9   B1   A4      		LDA (TEMPNH),Y
  5FFB   69   00      		ADC #$00
  5FFD   85   AB      		STA TEMPN2+1	;(CDR)
  5FFF   A6   A3      		LDX ANSN1	;ANSN1 POINTS TO STRING
  6001   B5   00      		LDA $00,X
  6003   85   A4      		STA TEMPNH
  6005   B5   01      		LDA $01,X
  6007   85   A5      		STA TEMPNH+1	;TEMPNH BECOMES PNAME
  6009   A5   A4      	MTC1W:	LDA TEMPNH
  600B   D0   04      		BNE MTC1W1
  600D   A5   A5      		LDA TEMPNH+1
  600F   F0   43      		BEQ SBFNF
  6011   A0   00      	MTC1W1:	LDY #$00
  6013   B1   A4      		LDA (TEMPNH),Y
  6015   85   A6      		STA TEMPN	;TEMPN IS TEMP
  6017   C8           		INY
  6018   B1   A4      		LDA (TEMPNH),Y
  601A   85   A7      		STA TEMPN+1	;(CAR)
  601C   88           		DEY
  601D   B1   AA      		LDA (TEMPN2),Y
  601F   C5   A6      		CMP TEMPN
  6021   D0   31      		BNE SBFNF
  6023   E6   AA      		INC TEMPN2
  6025   D0   02      		BNE ADHK21
  6027   E6   AB      		INC TEMPN2+1
  6029   B1   AA      	ADHK21:	LDA (TEMPN2),Y
  602B   C5   A7      		CMP TEMPN+1
  602D   D0   25      		BNE SBFNF
  602F   A0   02      		LDY #$02
  6031   B1   A4      		LDA (TEMPNH),Y	;TEMPNH IS PNAME
  6033   AA           		TAX
  6034   C8           		INY
  6035   B1   A4      		LDA (TEMPNH),Y
  6037   85   A5      		STA TEMPNH+1
  6039   86   A4      		STX TEMPNH	;(CDR)
  603B   A0   00      		LDY #$00
  603D   B1   AA      		LDA (TEMPN2),Y
  603F   F0   12      		BEQ MTC1WF
  6041   E6   AA      		INC TEMPN2
  6043   D0   02      		BNE MTC1WE
  6045   E6   AB      		INC TEMPN2+1
  6047   A5   A4      	MTC1WE:	LDA TEMPNH
  6049   D0   C6      		BNE MTC1W1
  604B   A5   A5      		LDA TEMPNH+1
  604D   D0   C2      		BNE MTC1W1
  604F   B1   AA      		LDA (TEMPN2),Y
  6051   D0   01      		BNE SBFNF
  6053   60           	MTC1WF:	RTS
  6054   18           	SBFNF:	CLC		;NOT THIS SOBLIST OBJECT
  6055   A6   B2      		LDX ANSN2	;ANS
  6057   B5   00      		LDA $00,X
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-118
LOGO	MISCELLANEOUS AND EVALUATOR UTILITY ROUTINES

  6059   69   04      		ADC #$04
  605B   95   00      		STA $00,X
  605D   90   02      		BCC SBFWJ
  605F   F6   01      		INC $01,X
  6061   4C   B0   5F 	SBFWJ:	JMP SBFWX
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-119
LOGO	MISCELLANEOUS AND EVALUATOR UTILITY ROUTINES

                      	;Note - the only temporary variables which can be passed to ERROR
                      	;as pointers are TEMPN6, TEMPN7, TEMPX1, and TEMPX2. PTRXOK and
                      	;PTRYOK insure that the X or Y args point to safe temporaries.
                      	;
  6064   B5   00      	PTRXOK:	LDA $00,X
  6066   85   BD      		STA TEMPX2
  6068   B5   01      		LDA $01,X
  606A   85   BE      		STA TEMPX2+1
  606C   A2   BD      		LDX #TEMPX2
  606E   60           		RTS
                      	;
  606F   B9   00   00 	PTRYOK:	LDA $00,Y
  6072   85   BD      		STA TEMPX2
  6074   B9   01   00 		LDA $01,Y
  6077   85   BE      		STA TEMPX2+1
  6079   A0   BD      		LDY #TEMPX2
  607B   60           		RTS
                      	;
  607C   85   10      	ERROR:	STA ERRFLG
  607E   85   B2      		STA ANSN2
  6080   06   B2      		ASL ANSN2	;Error pointers are stored two bytes apart
  6082   86   B3      		STX ANSN3
  6084   84   A3      		STY ANSN1
  6086   A2   00      		LDX #$00
  6088   86   12      		STX INDEV
  608A   86   13      		STX OUTDEV
  608C   A6   11      		LDX RETADR
  608E   9A           		TXS		;Restore all necessary return addresses
  608F   C9   13      		CMP #XZAP
  6091   F0   31      		BEQ ERRZ1
  6093   C9   1A      		CMP #XARGTB
  6095   F0   33      		BEQ ERRZ2
  6097   18           		CLC		;The Error-table holds pointers to the error-strings
  6098   A9   C6      		LDA #ERRTBL&$FF
  609A   65   B2      		ADC ANSN2
  609C   85   B9      		STA TEMPN8
  609E   A9   85      		LDA #ERRTBL^
  60A0   69   00      		ADC #$00
  60A2   85   BA      		STA TEMPN8+1
  60A4   A0   00      		LDY #$00
  60A6   B1   B9      		LDA (TEMPN8),Y
  60A8   AA           		TAX
  60A9   C8           		INY
  60AA   B1   B9      		LDA (TEMPN8),Y
  60AC   85   BA      		STA TEMPN8+1
  60AE   86   B9      		STX TEMPN8
  60B0   A0   00      	ERRW:	LDY #$00
  60B2   B1   B9      		LDA (TEMPN8),Y
  60B4   F0   2E      		BEQ ERRW2
  60B6   C9   FF      		CMP #$FF
  60B8   F0   3A      		BEQ ERRWE
  60BA   C9   01      		CMP #$01
  60BC   F0   22      		BEQ ERRW1
  60BE   20   F8   69 		JSR TPCHR
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-120
LOGO	MISCELLANEOUS AND EVALUATOR UTILITY ROUTINES

  60C1   4C   EB   60 		JMP ERRW4
  60C4   20   41   61 	ERRZ1:	JSR ZAPMSG
  60C7   4C   F4   60 		JMP ERRWE
  60CA   A6   B3      	ERRZ2:	LDX ANSN3
  60CC   20   F1   66 		JSR TYPFIX
  60CF   A2   3D      		LDX #ERRM4&$FF
  60D1   A0   8E      		LDY #ERRM4^
  60D3   20   1D   53 		JSR PRTSTR
  60D6   A9   00      		LDA #$00
  60D8   A4   A3      		LDY ANSN1
  60DA   20   A4   65 		JSR LTYPE
  60DD   4C   F4   60 		JMP ERRWE
  60E0   A4   B3      	ERRW1:	LDY ANSN3
  60E2   D0   02      		BNE ERRW3	;(Always)
  60E4   A4   A3      	ERRW2:	LDY ANSN1
  60E6   A9   00      	ERRW3:	LDA #$00
  60E8   20   A4   65 		JSR LTYPE
  60EB   E6   B9      	ERRW4:	INC TEMPN8
  60ED   D0   C1      		BNE ERRW
  60EF   E6   BA      		INC TEMPN8+1
  60F1   4C   B0   60 		JMP ERRW
  60F4   A5   78      	ERRWE:	LDA LEVNUM
  60F6   D0   04      		BNE ERRWE1
  60F8   A5   79      		LDA LEVNUM+1
  60FA   F0   34      		BEQ ERR1
  60FC   20   DC   69 	ERRWE1:	JSR BREAK1
  60FF   A2   24      		LDX #ERRM1&$FF
  6101   A0   8E      		LDY #ERRM1^
  6103   20   1D   53 		JSR PRTSTR
  6106   A2   78      		LDX #LEVNUM
  6108   20   F1   66 		JSR TYPFIX
  610B   A2   2E      		LDX #ERRM2&$FF
  610D   A0   8E      		LDY #ERRM2^
  610F   20   1D   53 		JSR PRTSTR
  6112   A2   70      		LDX #LINNUM
  6114   20   F1   66 		JSR TYPFIX
  6117   A2   38      		LDX #ERRM3&$FF
  6119   A0   8E      		LDY #ERRM3^
  611B   20   1D   53 		JSR PRTSTR
  611E   A0   06      		LDY #$06	;(SF_UFUN = 6.)
  6120   B1   68      		LDA (FRAME),Y
  6122   85   B9      		STA TEMPN8
  6124   C8           		INY
  6125   B1   68      		LDA (FRAME),Y
  6127   85   BA      		STA TEMPN8+1	;(CAR)
  6129   A9   00      		LDA #$00
  612B   A0   B9      		LDY #TEMPN8
  612D   20   A4   65 		JSR LTYPE
  6130   20   DC   69 	ERR1:	JSR BREAK1
  6133   A5   16      		LDA ERRRET
  6135   A4   17      		LDY ERRRET+1
  6137   20   A8   4A 		JSR RSTERR
  613A   85   A4      		STA TEMPNH
  613C   84   A5      		STY TEMPNH+1
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-121
LOGO	MISCELLANEOUS AND EVALUATOR UTILITY ROUTINES

  613E   6C   A4   00 		JMP (TEMPNH)
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-122
LOGO	MISCELLANEOUS AND EVALUATOR UTILITY ROUTINES

                      	;ZAPMSG is a special case of ERROR, for error XZAP. It displays the
                      	;appropriate error message.
                      	;
  6141   20   DC   69 	ZAPMSG:	JSR BREAK1
  6144   A5   B3      		LDA ANSN3
  6146   C9   01      		CMP #XNSTRN
  6148   F0   0B      		BEQ ZPC1
  614A   C9   00      		CMP #XNSTOR
  614C   F0   07      		BEQ ZPC1
  614E   C9   02      		CMP #XSTOP
  6150   F0   0D      		BEQ ZPC2
  6152   20   BD   50 		JSR SYSBUG
  6155   A2   F2      	ZPC1:	LDX #ZPMSG1&$FF
  6157   A0   8D      		LDY #ZPMSG1^	;"No Storage Left!"
  6159   20   1D   53 		JSR PRTSTR
  615C   4C   DC   69 		JMP BREAK1
  615F   A2   03      	ZPC2:	LDX #ZPMSG2&$FF
  6161   A0   8E      		LDY #ZPMSG2^	;"Stopped!"
  6163   20   1D   53 		JSR PRTSTR
  6166   4C   DC   69 		JMP BREAK1
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-123
LOGO	GARBAGE COLLECTOR

                      	.SBTTL	Garbage Collector
  6169   BA           	GARCOL:	TSX
  616A   86   11      		STX RETADR
  616C   A9   A7      		LDA #GCLERR&$FF
  616E   85   16      		STA ERRRET
  6170   A9   62      		LDA #GCLERR^
  6172   85   17      		STA ERRRET+1
  6174   20   74   64 		JSR SWAPT1
  6177   A5   56      		LDA SOBLST
  6179   85   AC      		STA TEMPN3	;TEMPN3 is INDEX
  617B   A5   57      		LDA SOBLST+1
  617D   85   AD      		STA TEMPN3+1
  617F   A2   AC      	GCLP2:	LDX #TEMPN3
  6181   20   12   63 		JSR MARK
  6184   18           		CLC
  6185   A5   AC      		LDA TEMPN3
  6187   69   04      		ADC #$04
  6189   85   AC      		STA TEMPN3
  618B   90   02      		BCC GCLP2A
  618D   E6   AD      		INC TEMPN3+1
  618F   A5   AC      	GCLP2A:	LDA TEMPN3
  6191   C5   58      		CMP SOBTOP
  6193   D0   EA      		BNE GCLP2
  6195   A5   AD      		LDA TEMPN3+1
  6197   C5   59      		CMP SOBTOP+1
  6199   D0   E4      		BNE GCLP2
  619B   A9   00      		LDA #VPDLBA&$FF
  619D   85   AC      		STA TEMPN3
  619F   A9   1C      		LDA #VPDLBA^
  61A1   85   AD      		STA TEMPN3+1
  61A3   A5   AC      	GCLP3:	LDA TEMPN3
  61A5   C5   1A      		CMP VSP
  61A7   D0   06      		BNE GCLP3X
  61A9   A5   AD      		LDA TEMPN3+1
  61AB   C5   1B      		CMP VSP+1
  61AD   F0   1C      		BEQ GCLP3A
  61AF   A0   00      	GCLP3X:	LDY #$00
  61B1   B1   AC      		LDA (TEMPN3),Y
  61B3   85   A6      		STA TEMPN
  61B5   C8           		INY
  61B6   B1   AC      		LDA (TEMPN3),Y
  61B8   85   A7      		STA TEMPN+1	;(GETBAR)
  61BA   20   1A   63 		JSR MARKX	;Expects TEMPN as node
  61BD   18           		CLC
  61BE   A5   AC      		LDA TEMPN3
  61C0   69   02      		ADC #$02
  61C2   85   AC      		STA TEMPN3
  61C4   90   DD      		BCC GCLP3
  61C6   E6   AD      		INC TEMPN3+1
  61C8   4C   A3   61 		JMP GCLP3
  61CB   A5   68      	GCLP3A:	LDA FRAME
  61CD   85   AC      		STA TEMPN3	;TEMPN4 is FRAMEPTR
  61CF   A5   69      		LDA FRAME+1
  61D1   85   AD      		STA TEMPN3+1
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-124
LOGO	GARBAGE COLLECTOR

  61D3   A5   AC      	GCLP4:	LDA TEMPN3
  61D5   D0   04      		BNE GCLP4A
  61D7   A5   AD      		LDA TEMPN3+1
  61D9   F0   48      		BEQ GCOL1
  61DB   A0   0E      	GCLP4A:	LDY #$0E	;(SF_NUMBER_BINDINGS = 14.)
  61DD   B1   AC      		LDA (TEMPN3),Y
  61DF   F0   33      		BEQ GCLP5E
  61E1   85   A3      		STA ANSN1	;ANSN1 is NARGS
  61E3   18           		CLC
  61E4   A5   AC      		LDA TEMPN3
  61E6   69   12      		ADC #$12	;PTR1 points to first binding pair
  61E8   85   AE      		STA TEMPN4	;TEMPN4 is PTR1
  61EA   A5   AD      		LDA TEMPN3+1
  61EC   69   00      		ADC #$00
  61EE   85   AF      		STA TEMPN4+1
  61F0   A0   02      	GCLP5:	LDY #$02
  61F2   B1   AE      		LDA (TEMPN4),Y
  61F4   6A           		ROR A
  61F5   B0   0E      		BCS GCLP5A
  61F7   A0   00      		LDY #$00
  61F9   B1   AE      		LDA (TEMPN4),Y
  61FB   85   A6      		STA TEMPN
  61FD   C8           		INY
  61FE   B1   AE      		LDA (TEMPN4),Y
  6200   85   A7      		STA TEMPN+1
  6202   20   1A   63 		JSR MARKX	;Expects TEMPN as node
  6205   18           	GCLP5A:	CLC
  6206   A5   AE      		LDA TEMPN4
  6208   69   04      		ADC #$04
  620A   85   AE      		STA TEMPN4
  620C   90   02      		BCC GCLP5B
  620E   E6   AF      		INC TEMPN4+1
  6210   C6   A3      	GCLP5B:	DEC ANSN1
  6212   D0   DC      		BNE GCLP5
  6214   A0   00      	GCLP5E:	LDY #$00	;(SF_PREVIOUS_FRAME)
  6216   B1   AC      		LDA (TEMPN3),Y
  6218   AA           		TAX
  6219   C8           		INY
  621A   B1   AC      		LDA (TEMPN3),Y
  621C   85   AD      		STA TEMPN3+1
  621E   86   AC      		STX TEMPN3	;(GETBAR)
  6220   4C   D3   61 		JMP GCLP4
  6223   A9   84      	GCOL1:	LDA #GCVST	;Mark all G.C.-protected variables
  6225   85   A3      		STA ANSN1
  6227   A6   A3      	GCOL1L:	LDX ANSN1
  6229   20   12   63 		JSR MARK
  622C   E6   A3      		INC ANSN1
  622E   E6   A3      		INC ANSN1
  6230   A5   A3      		LDA ANSN1
  6232   C9   9A      		CMP #GCVEND
  6234   D0   F1      		BNE GCOL1L
  6236   A2   9E      		LDX #SIZE1
  6238   A0   9A      		LDY #AREA1
  623A   20   D9   62 		JSR MARKA
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-125
LOGO	GARBAGE COLLECTOR

  623D   A2   A0      		LDX #SIZE2
  623F   A0   9C      		LDY #AREA2
  6241   20   D9   62 		JSR MARKA
  6244   A9   00      		LDA #$00
  6246   85   5C      		STA FRLIST
  6248   85   5D      		STA FRLIST+1
  624A   85   14      		STA NNODES
  624C   85   15      		STA NNODES+1
  624E   A9   00      		LDA #BIGBAS&$FF
  6250   85   A4      		STA TEMPNH
  6252   A9   D0      		LDA #BIGBAS^
  6254   85   A5      		STA TEMPNH+1	;Nodespace pointer
  6256   A9   60      		LDA #SINODS&$FF
  6258   85   A6      		STA TEMPN
  625A   A9   F6      		LDA #SINODS^
  625C   85   A7      		STA TEMPN+1	;Typebase pointer
  625E   A0   00      	GCLP6:	LDY #$00
  6260   B1   A6      		LDA (TEMPN),Y
  6262   2A           		ROL A		;Type bit
  6263   B0   16      		BCS GCLP6C
  6265   A0   02      		LDY #$02
  6267   A5   5C      		LDA FRLIST
  6269   91   A4      		STA (TEMPNH),Y
  626B   C8           		INY
  626C   A5   5D      		LDA FRLIST+1
  626E   91   A4      		STA (TEMPNH),Y	;(RPLACD)
  6270   A5   A4      		LDA TEMPNH
  6272   85   5C      		STA FRLIST
  6274   A5   A5      		LDA TEMPNH+1
  6276   85   5D      		STA FRLIST+1
  6278   4C   81   62 		JMP GCLP6F
  627B   E6   14      	GCLP6C:	INC NNODES
  627D   D0   02      		BNE GCLP6F
  627F   E6   15      		INC NNODES+1
  6281   18           	GCLP6F:	CLC
  6282   A5   A4      		LDA TEMPNH
  6284   69   04      		ADC #$04
  6286   85   A4      		STA TEMPNH
  6288   90   02      		BCC GCLP6D
  628A   E6   A5      		INC TEMPNH+1
  628C   E6   A6      	GCLP6D:	INC TEMPN
  628E   D0   02      		BNE GCLP6E
  6290   E6   A7      		INC TEMPN+1
  6292   A5   A6      	GCLP6E:	LDA TEMPN
  6294   C9   F8      		CMP #TYPEND&$FF
  6296   D0   C6      		BNE GCLP6
  6298   A5   A7      		LDA TEMPN+1
  629A   C9   FF      		CMP #TYPEND^
  629C   D0   C0      		BNE GCLP6
  629E   20   B6   62 		JSR CLRMRK
  62A1   20   82   64 		JSR SWAPT2
  62A4   4C   A8   4A 		JMP RSTERR
  62A7   A9   00      	GCLERR:	LDA #$00
  62A9   85   5C      		STA FRLIST
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-126
LOGO	GARBAGE COLLECTOR

  62AB   85   5D      		STA FRLIST+1
  62AD   20   B6   62 		JSR CLRMRK
  62B0   20   82   64 		JSR SWAPT2
  62B3   4C   2B   48 		JMP ERROR1
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-127
LOGO	GARBAGE COLLECTOR

  62B6   A9   60      	CLRMRK:	LDA #SINODS&$FF
  62B8   85   A4      		STA TEMPNH
  62BA   A9   F6      		LDA #SINODS^
  62BC   85   A5      		STA TEMPNH+1	;TEMPN is pointer to Typebase
  62BE   A0   00      		LDY #$00
  62C0   B1   A4      	GCLP1:	LDA (TEMPNH),Y
  62C2   29   7F      		AND #$7F	;Set Mark bit to 0 (False)
  62C4   91   A4      		STA (TEMPNH),Y
  62C6   E6   A4      		INC TEMPNH
  62C8   D0   02      		BNE GCLP1A
  62CA   E6   A5      		INC TEMPNH+1
  62CC   A5   A4      	GCLP1A:	LDA TEMPNH
  62CE   C9   F8      		CMP #TYPEND&$FF
  62D0   D0   EE      		BNE GCLP1
  62D2   A5   A5      		LDA TEMPNH+1
  62D4   C9   FF      		CMP #TYPEND^
  62D6   D0   E8      		BNE GCLP1
  62D8   60           	MRKRTS:	RTS
                      	;
  62D9   B5   00      	MARKA:	LDA $00,X
  62DB   85   A6      		STA TEMPN
  62DD   B5   01      		LDA $01,X
  62DF   85   A7      		STA TEMPN+1	;TEMPN is SIZE
  62E1   B9   00   00 		LDA $00,Y
  62E4   85   A4      		STA TEMPNH
  62E6   B9   01   00 		LDA $01,Y
  62E9   85   A5      		STA TEMPNH+1
  62EB   20   79   5C 		JSR TYPACS	;TEMPNH becomes address of typecodes
  62EE   A5   A7      	MRKAW:	LDA TEMPN+1
  62F0   30   E6      		BMI MRKRTS
  62F2   D0   04      		BNE MRKAW1
  62F4   A5   A6      		LDA TEMPN
  62F6   F0   E0      		BEQ MRKRTS
  62F8   B1   A4      	MRKAW1:	LDA (TEMPNH),Y
  62FA   09   80      		ORA #$80	;Mark the word
  62FC   91   A4      		STA (TEMPNH),Y
  62FE   E6   A4      		INC TEMPNH
  6300   D0   02      		BNE MRKAW2
  6302   E6   A5      		INC TEMPNH+1
  6304   38           	MRKAW2:	SEC
  6305   A5   A6      		LDA TEMPN
  6307   E9   01      		SBC #$01
  6309   85   A6      		STA TEMPN
  630B   B0   E1      		BCS MRKAW
  630D   C6   A7      		DEC TEMPN+1
  630F   4C   EE   62 		JMP MRKAW
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-128
LOGO	GARBAGE COLLECTOR

  6312   B5   00      	MARK:	LDA $00,X
  6314   85   A6      		STA TEMPN
  6316   B5   01      		LDA $01,X
  6318   85   A7      		STA TEMPN+1	;TEMPN is INDEX
  631A   A2   FF      	MARKX:	LDX #$FF
  631C   A0   FF      		LDY #$FF
  631E   20   23   51 		JSR PUSH
  6321   A9   FF      	MRKW:	LDA #$FF
  6323   C5   A6      		CMP TEMPN
  6325   D0   04      		BNE MRKW1
  6327   C5   A7      		CMP TEMPN+1
  6329   F0   AD      		BEQ MRKRTS
  632B   A5   A7      	MRKW1:	LDA TEMPN+1
  632D   F0   0E      		BEQ MRKW3
  632F   85   A5      		STA TEMPNH+1
  6331   A5   A6      		LDA TEMPN
  6333   85   A4      		STA TEMPNH
  6335   20   79   5C 		JSR TYPACS
  6338   85   A2      		STA ANSN
  633A   2A           		ROL A
  633B   90   0B      		BCC MRKW2
  633D   20   8D   51 	MRKW3:	JSR PSHTST
  6340   A2   A6      		LDX #TEMPN
  6342   20   4F   51 		JSR POP
  6345   4C   21   63 		JMP MRKW
  6348   A5   A2      	MRKW2:	LDA ANSN
  634A   09   80      		ORA #$80
  634C   91   A4      		STA (TEMPNH),Y
  634E   29   7F      		AND #$7F
  6350   C9   00      		CMP #LIST
  6352   F0   45      		BEQ MRKCL
  6354   C9   02      		CMP #STRING
  6356   F0   2B      		BEQ MRKCF
  6358   C9   03      		CMP #FIX
  635A   F0   E1      		BEQ MRKW3
  635C   C9   04      		CMP #FLO
  635E   F0   DD      		BEQ MRKW3
  6360   C9   0C      		CMP #FLIST
  6362   F0   1F      		BEQ MRKCF
  6364   C9   06      		CMP #UFUN
  6366   F0   48      		BEQ MRKCU
  6368   C9   07      		CMP #SATOM
  636A   F0   28      		BEQ MRKCS
  636C   C9   01      		CMP #ATOM
  636E   F0   29      		BEQ MRKCL
  6370   C9   09      		CMP #DATOM
  6372   F0   25      		BEQ MRKCL
  6374   C9   0A      		CMP #LATOM
  6376   F0   21      		BEQ MRKCL
  6378   C9   08      		CMP #QATOM
  637A   F0   1D      		BEQ MRKCL
  637C   C9   0B      		CMP #FPACK
  637E   F0   47      		BEQ MRKCP
  6380   20   BD   50 		JSR SYSBUG
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-129
LOGO	GARBAGE COLLECTOR

  6383   A0   02      	MRKCF:	LDY #$02
  6385   B1   A6      	MRKCN:	LDA (TEMPN),Y
  6387   AA           		TAX
  6388   C8           		INY
  6389   B1   A6      		LDA (TEMPN),Y
  638B   F0   B0      		BEQ MRKW3
  638D   A8           		TAY
  638E   20   23   51 	MRKCF1:	JSR PUSH
  6391   4C   3D   63 		JMP MRKW3
  6394   A0   00      	MRKCS:	LDY #$00
  6396   4C   85   63 		JMP MRKCN
  6399   A5   A6      	MRKCL:	LDA TEMPN
  639B   29   FC      		AND #$FC
  639D   85   A6      		STA TEMPN
  639F   A0   00      		LDY #$00
  63A1   B1   A6      		LDA (TEMPN),Y
  63A3   AA           		TAX
  63A4   C8           		INY
  63A5   B1   A6      		LDA (TEMPN),Y
  63A7   F0   DA      		BEQ MRKCF
  63A9   A8           		TAY
  63AA   20   23   51 	MRKCL1:	JSR PUSH
  63AD   4C   83   63 		JMP MRKCF
  63B0   18           	MRKCU:	CLC
  63B1   A5   A6      		LDA TEMPN
  63B3   69   04      		ADC #$04
  63B5   85   A4      		STA TEMPNH
  63B7   A5   A7      		LDA TEMPN+1
  63B9   69   00      		ADC #$00
  63BB   85   A5      		STA TEMPNH+1
  63BD   20   79   5C 		JSR TYPACS
  63C0   09   80      		ORA #$80
  63C2   91   A4      		STA (TEMPNH),Y
  63C4   4C   83   63 		JMP MRKCF
  63C7   A0   01      	MRKCP:	LDY #$01
  63C9   84   A2      		STY ANSN	;ANSN is FIRSTLINE
  63CB   88           		DEY
  63CC   B1   A6      	MRKCP1:	LDA (TEMPN),Y
  63CE   85   A8      		STA TEMPN1	;TEMPN1 is LINE
  63D0   C8           		INY
  63D1   B1   A6      		LDA (TEMPN),Y
  63D3   85   A9      		STA TEMPN1+1	;(GETBAR)
  63D5   C8           		INY
  63D6   B1   A6      		LDA (TEMPN),Y
  63D8   85   AA      		STA TEMPN2	;TEMPN2 is LINE_END
  63DA   C8           		INY
  63DB   B1   A6      		LDA (TEMPN),Y
  63DD   85   AB      		STA TEMPN2+1	;(GETBAR)
  63DF   A5   AB      	MRKPW:	LDA TEMPN2+1
  63E1   D0   17      		BNE MRKPW1
  63E3   18           		CLC
  63E4   A5   A6      		LDA TEMPN
  63E6   69   02      		ADC #$02
  63E8   85   A4      		STA TEMPNH
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-130
LOGO	GARBAGE COLLECTOR

  63EA   A5   A7      		LDA TEMPN+1
  63EC   69   00      		ADC #$00
  63EE   85   A5      		STA TEMPNH+1
  63F0   20   79   5C 		JSR TYPACS
  63F3   09   80      		ORA #$80
  63F5   91   A4      		STA (TEMPNH),Y
  63F7   4C   3D   63 		JMP MRKW3
  63FA   18           	MRKPW1:	CLC
  63FB   A5   A6      		LDA TEMPN
  63FD   69   02      		ADC #$02
  63FF   85   A4      		STA TEMPNH
  6401   A5   A7      		LDA TEMPN+1
  6403   69   00      		ADC #$00
  6405   85   A5      		STA TEMPNH+1
  6407   20   79   5C 		JSR TYPACS
  640A   09   80      		ORA #$80
  640C   91   A4      		STA (TEMPNH),Y
  640E   A5   A8      		LDA TEMPN1
  6410   85   A4      		STA TEMPNH
  6412   A5   A9      		LDA TEMPN1+1
  6414   85   A5      		STA TEMPNH+1
  6416   20   79   5C 		JSR TYPACS
  6419   09   80      		ORA #$80
  641B   91   A4      		STA (TEMPNH),Y
  641D   A5   A2      		LDA ANSN
  641F   D0   0B      		BNE MRKPW2
  6421   18           		CLC
  6422   A5   A8      		LDA TEMPN1
  6424   69   02      		ADC #$02
  6426   85   A8      		STA TEMPN1
  6428   90   02      		BCC MRKPW2
  642A   E6   A9      		INC TEMPN1+1
  642C   A9   00      	MRKPW2:	LDA #$00
  642E   85   A2      		STA ANSN
  6430   A5   A8      	MRKPX:	LDA TEMPN1
  6432   C5   AA      		CMP TEMPN2
  6434   D0   06      		BNE MRKPX1
  6436   A5   A9      		LDA TEMPN1+1
  6438   C5   AB      		CMP TEMPN2+1
  643A   F0   2A      		BEQ MRKPXE
  643C   A5   A8      	MRKPX1:	LDA TEMPN1
  643E   85   A4      		STA TEMPNH
  6440   A5   A9      		LDA TEMPN1+1
  6442   85   A5      		STA TEMPNH+1
  6444   20   79   5C 		JSR TYPACS
  6447   09   80      		ORA #$80
  6449   91   A4      		STA (TEMPNH),Y
  644B   B1   A8      		LDA (TEMPN1),Y
  644D   AA           		TAX
  644E   C8           		INY
  644F   B1   A8      		LDA (TEMPN1),Y
  6451   A8           		TAY
  6452   20   23   51 		JSR PUSH
  6455   20   8D   51 		JSR PSHTST
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-131
LOGO	GARBAGE COLLECTOR

  6458   18           		CLC
  6459   A5   A8      		LDA TEMPN1
  645B   69   02      		ADC #$02
  645D   85   A8      		STA TEMPN1
  645F   90   CF      		BCC MRKPX
  6461   E6   A9      		INC TEMPN1+1
  6463   4C   30   64 		JMP MRKPX
  6466   18           	MRKPXE:	CLC
  6467   A5   A6      		LDA TEMPN
  6469   69   02      		ADC #$02
  646B   85   A6      		STA TEMPN
  646D   90   02      		BCC MRKPW4
  646F   E6   A7      		INC TEMPN+1
  6471   4C   CC   63 	MRKPW4:	JMP MRKCP1
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-132
LOGO	GARBAGE COLLECTOR

  6474   A0   10      	SWAPT1:	LDY #TMPNUM
  6476   A2   A2      		LDX #TMPSTT
  6478   B5   00      	SWPLP1:	LDA $00,X
  647A   99   FF   02 		STA TMPTAB,Y
  647D   E8           		INX
  647E   88           		DEY
  647F   D0   F7      		BNE SWPLP1
  6481   60           		RTS
                      	;
  6482   A0   10      	SWAPT2:	LDY #TMPNUM
  6484   A2   A2      		LDX #TMPSTT
  6486   B9   FF   02 	SWPLP2:	LDA TMPTAB,Y
  6489   95   00      		STA $00,X
  648B   E8           		INX
  648C   88           		DEY
  648D   D0   F7      		BNE SWPLP2
  648F   60           		RTS
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-133
LOGO	GARBAGE COLLECTOR

  6490   84   B2      	MAKPNM:	STY ANSN2	;ANS
  6492   86   A3      		STX ANSN1	;ARG
  6494   20   93   5C 		JSR GETTYP
  6497   C9   01      		CMP #ATOM
  6499   F0   14      		BEQ MKPN1
  649B   C9   07      		CMP #SATOM
  649D   F0   10      		BEQ MKPN1
  649F   C9   03      		CMP #FIX
  64A1   F0   13      		BEQ MKPN2
  64A3   C9   04      		CMP #FLO
  64A5   D0   03      		BNE MKPNR
  64A7   4C   81   65 		JMP MKPN3
  64AA   A6   A3      	MKPNR:	LDX ANSN1
  64AC   4C   57   75 		JMP STTLR4	;(ERROR XWTA,CURTOK)
  64AF   A6   A3      	MKPN1:	LDX ANSN1
  64B1   A4   B2      		LDY ANSN2
  64B3   4C   1D   58 		JMP GETPNM
  64B6   A6   A3      	MKPN2:	LDX ANSN1
  64B8   B5   00      		LDA $00,X
  64BA   85   AA      		STA TEMPN2
  64BC   B5   01      		LDA $01,X
  64BE   85   AB      		STA TEMPN2+1
  64C0   A0   00      		LDY #$00
  64C2   B1   AA      		LDA (TEMPN2),Y
  64C4   AA           		TAX
  64C5   C8           		INY
  64C6   B1   AA      		LDA (TEMPN2),Y
  64C8   85   AB      		STA TEMPN2+1
  64CA   86   AA      		STX TEMPN2	;(CAR)
  64CC   8A           		TXA
  64CD   D0   16      		BNE MKPN2A
  64CF   A5   AB      		LDA TEMPN2+1
  64D1   D0   12      		BNE MKPN2A
  64D3   AA           		TAX
  64D4   86   AD      		STX TEMPN3+1
  64D6   A9   30      		LDA #'0
  64D8   85   AC      		STA TEMPN3
  64DA   A0   AC      		LDY #TEMPN3
  64DC   A5   B2      		LDA ANSN2
  64DE   85   A2      		STA ANSN
  64E0   A9   02      		LDA #STRING
  64E2   4C   09   52 		JMP CONS
  64E5   A9   00      	MKPN2A:	LDA #$00
  64E7   85   A2      		STA ANSN
  64E9   85   B3      		STA ANSN3
  64EB   A5   AB      		LDA TEMPN2+1
  64ED   10   09      		BPL MKPN2B
  64EF   A2   AA      		LDX #TEMPN2
  64F1   20   49   6F 		JSR COMPL
  64F4   E6   B3      		INC ANSN3	;ANSN3 is SIGN
  64F6   E6   A2      		INC ANSN	;ANSN is DIGITS
  64F8   A2   00      	MKPN2B:	LDX #$00
  64FA   86   A7      		STX TEMPN+1	;Divisor for XDIVID
  64FC   20   38   51 		JSR VPUSHP	;(LNIL)
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-134
LOGO	GARBAGE COLLECTOR

  64FF   A5   AA      		LDA TEMPN2
  6501   85   AC      		STA TEMPN3
  6503   A5   AB      		LDA TEMPN2+1
  6505   85   AD      		STA TEMPN3+1
  6507   A9   0A      		LDA #$0A
  6509   85   A6      		STA TEMPN
  650B   E6   A2      	MKPNR1:	INC ANSN
  650D   A2   AC      		LDX #TEMPN3
  650F   20   70   6F 		JSR XDIVID
  6512   A5   AC      		LDA TEMPN3
  6514   D0   F5      		BNE MKPNR1
  6516   A5   AD      		LDA TEMPN3+1
  6518   D0   F1      		BNE MKPNR1
  651A   A5   A2      		LDA ANSN
  651C   6A           		ROR A
  651D   B0   0B      		BCS MKPNR2
  651F   A9   00      		LDA #$00
  6521   85   AC      		STA TEMPN3
  6523   A2   AA      		LDX #TEMPN2
  6525   20   70   6F 		JSR XDIVID
  6528   85   AD      		STA TEMPN3+1
  652A   38           	MKPNR2:	SEC
  652B   A5   1A      		LDA VSP
  652D   E9   02      		SBC #$02
  652F   85   AE      		STA TEMPN4
  6531   A5   1B      		LDA VSP+1
  6533   E9   00      		SBC #$00
  6535   85   AF      		STA TEMPN4+1
  6537   A5   AA      		LDA TEMPN2
  6539   D0   15      		BNE MKPNR3
  653B   A5   AB      		LDA TEMPN2+1
  653D   D0   11      		BNE MKPNR3
  653F   A5   B3      		LDA ANSN3
  6541   D0   03      		BNE MKPNR4
  6543   20   BD   50 		JSR SYSBUG
  6546   A9   2D      	MKPNR4:	LDA #'-
  6548   85   AC      		STA TEMPN3
  654A   20   82   65 		JSR MKPNAD
  654D   4C   69   65 		JMP MKPNR5
  6550   A2   AA      	MKPNR3:	LDX #TEMPN2
  6552   20   70   6F 		JSR XDIVID
  6555   85   AC      		STA TEMPN3
  6557   20   82   65 		JSR MKPNAD
  655A   A5   AA      		LDA TEMPN2
  655C   D0   0B      		BNE MKPNR5
  655E   A5   AB      		LDA TEMPN2+1
  6560   D0   07      		BNE MKPNR5
  6562   A5   B3      		LDA ANSN3
  6564   F0   03      		BEQ MKPNR5
  6566   20   BD   50 		JSR SYSBUG
  6569   A2   AA      	MKPNR5:	LDX #TEMPN2
  656B   20   70   6F 		JSR XDIVID
  656E   85   AD      		STA TEMPN3+1
  6570   A9   00      		LDA #$00
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-135
LOGO	GARBAGE COLLECTOR

  6572   85   AC      		STA TEMPN3
  6574   A5   AA      		LDA TEMPN2
  6576   D0   B2      		BNE MKPNR2
  6578   A5   AB      		LDA TEMPN2+1
  657A   D0   AE      		BNE MKPNR2
  657C   A6   B2      	MKPNR6:	LDX ANSN2
  657E   4C   66   51 		JMP VPOP
  6581   EA           	MKPN3:	NOP		;?<MAKE AN ATOM OUT OF A FLONUM>
                      	;
  6582   A6   B2      	MKPNAD:	LDX ANSN2
  6584   A0   00      		LDY #$00
  6586   B1   AE      		LDA (TEMPN4),Y
  6588   95   00      		STA $00,X
  658A   C8           		INY
  658B   B1   AE      		LDA (TEMPN4),Y
  658D   95   01      		STA $01,X	;(GETBAR)
  658F   86   A2      	MKPND1:	STX ANSN
  6591   A0   AC      		LDY #TEMPN3
  6593   A9   02      		LDA #STRING
  6595   20   09   52 		JSR CONS
  6598   A0   00      		LDY #$00
  659A   B5   00      		LDA $00,X
  659C   91   AE      		STA (TEMPN4),Y
  659E   C8           		INY
  659F   B5   01      		LDA $01,X
  65A1   91   AE      		STA (TEMPN4),Y	;(PUTBAR)
  65A3   60           		RTS
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-136
LOGO	GARBAGE COLLECTOR

  65A4   B6   00      	LTYPE:	LDX $00,Y
  65A6   86   B0      		STX TEMPN5
  65A8   B6   01      		LDX $01,Y
  65AA   86   B1      		STX TEMPN5+1	;THING
  65AC   85   AE      		STA TEMPN4	;TOPLEVELP
  65AE   A2   F0      		LDX #LTPRTS&$FF
  65B0   A0   66      		LDY #LTPRTS^
  65B2   20   23   51 		JSR PUSH
  65B5   A2   B0      	PRTHNG:	LDX #TEMPN5
  65B7   20   93   5C 		JSR GETTYP
  65BA   C9   00      		CMP #LIST
  65BC   F0   5B      		BEQ LTPLS
  65BE   C9   01      		CMP #ATOM
  65C0   F0   34      		BEQ LTPA
  65C2   C9   07      		CMP #SATOM
  65C4   F0   36      		BEQ LTPS
  65C6   C9   09      		CMP #DATOM
  65C8   F0   27      		BEQ LTPD
  65CA   C9   08      		CMP #QATOM
  65CC   F0   1F      		BEQ LTPQ
  65CE   C9   0A      		CMP #LATOM
  65D0   F0   30      		BEQ LTPL
  65D2   48           		PHA		;Assuming Fix or Flo, save typecode
  65D3   A0   00      		LDY #$00	;and prep. for TYPFIX/FLO
  65D5   B1   B0      		LDA (TEMPN5),Y
  65D7   AA           		TAX
  65D8   C8           		INY
  65D9   B1   B0      		LDA (TEMPN5),Y
  65DB   85   B1      		STA TEMPN5+1
  65DD   86   B0      		STX TEMPN5	;(CAR)
  65DF   A2   B0      		LDX #TEMPN5
  65E1   68           		PLA
  65E2   C9   03      		CMP #FIX
  65E4   F0   27      		BEQ LTPF
  65E6   C9   04      		CMP #FLO
  65E8   F0   29      		BEQ LTPF1
  65EA   20   BD   50 		JSR SYSBUG
  65ED   A9   22      	LTPQ:	LDA #'"
  65EF   D0   02      		BNE LTPD1	;(Always)
  65F1   A9   3A      	LTPD:	LDA #':
  65F3   20   F8   69 	LTPD1:	JSR TPCHR
  65F6   20   81   66 	LTPA:	JSR TYPATM
  65F9   4C   52   41 		JMP POPJ
  65FC   20   D3   66 	LTPS:	JSR TPSATM
  65FF   4C   52   41 		JMP POPJ
  6602   20   81   66 	LTPL:	JSR TYPATM
  6605   A9   3A      		LDA #':
  6607   20   F8   69 		JSR TPCHR
  660A   4C   52   41 		JMP POPJ
  660D   20   28   67 	LTPF:	JSR TPBFIX
  6610   4C   52   41 		JMP POPJ
  6613   20   29   67 	LTPF1:	JSR TYPFLO
  6616   4C   52   41 		JMP POPJ
  6619   A9   01      	LTPLS:	LDA #$01
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-137
LOGO	GARBAGE COLLECTOR

  661B   85   AF      		STA TEMPN4+1	;NOSPACE
  661D   A5   AE      		LDA TEMPN4	;TOPLEVELP
  661F   D0   05      		BNE PLSTLP
  6621   A9   5B      		LDA #'[
  6623   20   F8   69 		JSR TPCHR
  6626   20   8D   51 	PLSTLP:	JSR PSHTST
  6629   A5   B1      		LDA TEMPN5+1
  662B   D0   0E      		BNE PLLP1
  662D   A5   AE      		LDA TEMPN4	;TOPLEVELP
  662F   D0   07      		BNE PLLP2
  6631   85   AF      		STA TEMPN4+1	;Print a space after Sublists
  6633   A9   5D      		LDA #']
  6635   20   F8   69 		JSR TPCHR
  6638   4C   52   41 	PLLP2:	JMP POPJ
  663B   A5   AF      	PLLP1:	LDA TEMPN4+1	;NOSPACE
  663D   D0   05      		BNE PLLP1A
  663F   A9   20      		LDA #$20	;(Space)
  6641   20   F8   69 		JSR TPCHR
  6644   A2   B0      	PLLP1A:	LDX #TEMPN5
  6646   20   0C   51 		JSR PUSHP
  6649   A6   AE      		LDX TEMPN4
  664B   20   23   51 		JSR PUSH
  664E   A0   00      		LDY #$00
  6650   84   AE      		STY TEMPN4
  6652   84   AF      		STY TEMPN4+1
  6654   B1   B0      		LDA (TEMPN5),Y
  6656   AA           		TAX
  6657   C8           		INY
  6658   B1   B0      		LDA (TEMPN5),Y
  665A   85   B1      		STA TEMPN5+1
  665C   86   B0      		STX TEMPN5	;(CAR)
  665E   A2   68      		LDX #TPP1&$FF
  6660   A0   66      		LDY #TPP1^
  6662   20   23   51 		JSR PUSH
  6665   4C   B5   65 		JMP PRTHNG
  6668   20   7D   51 	TPP1:	JSR POPB
  666B   85   AE      		STA TEMPN4
  666D   A2   B0      		LDX #TEMPN5
  666F   20   4F   51 		JSR POP
  6672   A0   02      		LDY #$02
  6674   B1   B0      		LDA (TEMPN5),Y
  6676   AA           		TAX
  6677   C8           		INY
  6678   B1   B0      		LDA (TEMPN5),Y
  667A   85   B1      		STA TEMPN5+1
  667C   86   B0      		STX TEMPN5	;(CDR)
  667E   4C   26   66 		JMP PLSTLP
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-138
LOGO	GARBAGE COLLECTOR

  6681   A5   B0      	TYPATM:	LDA TEMPN5
  6683   29   FC      		AND #$FC
  6685   85   B0      		STA TEMPN5
  6687   A2   B0      		LDX #TEMPN5
  6689   A0   B0      		LDY #TEMPN5
  668B   20   1D   58 		JSR GETPNM
  668E   A6   13      		LDX OUTDEV
  6690   D0   02      		BNE TPATM1
  6692   A9   00      		LDA #$00
  6694   85   A2      	TPATM1:	STA ANSN
  6696   F0   05      		BEQ TPATMW
  6698   A9   27      		LDA #$27	;(Single Quote)
  669A   20   F8   69 		JSR TPCHR
  669D   A5   B0      	TPATMW:	LDA TEMPN5
  669F   D0   04      		BNE TPTMW1
  66A1   A5   B1      		LDA TEMPN5+1
  66A3   F0   25      		BEQ TPTMWE
  66A5   A0   00      	TPTMW1:	LDY #$00
  66A7   B1   B0      		LDA (TEMPN5),Y
  66A9   85   A4      		STA TEMPNH
  66AB   C8           		INY
  66AC   B1   B0      		LDA (TEMPN5),Y
  66AE   85   A5      		STA TEMPNH+1	;(CAR)
  66B0   C8           		INY
  66B1   B1   B0      		LDA (TEMPN5),Y
  66B3   AA           		TAX
  66B4   C8           		INY
  66B5   B1   B0      		LDA (TEMPN5),Y
  66B7   85   B1      		STA TEMPN5+1
  66B9   86   B0      		STX TEMPN5	;(CDR)
  66BB   A5   A4      		LDA TEMPNH
  66BD   20   F8   69 		JSR TPCHR
  66C0   A5   A5      		LDA TEMPNH+1
  66C2   F0   D9      		BEQ TPATMW
  66C4   20   F8   69 		JSR TPCHR
  66C7   4C   9D   66 		JMP TPATMW
  66CA   A5   A2      	TPTMWE:	LDA ANSN
  66CC   F0   22      		BEQ LTPRTS
  66CE   A9   27      		LDA #$27	;(Single Quote)
  66D0   4C   F8   69 		JMP TPCHR
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-139
LOGO	GARBAGE COLLECTOR

  66D3   A0   02      	TPSATM:	LDY #$02
  66D5   B1   B0      		LDA (TEMPN5),Y
  66D7   AA           		TAX
  66D8   C8           		INY
  66D9   B1   B0      		LDA (TEMPN5),Y
  66DB   85   B1      		STA TEMPN5+1
  66DD   86   B0      		STX TEMPN5	;(CDR)
  66DF   A0   03      		LDY #$03
  66E1   B1   B0      	TPSTMW:	LDA (TEMPN5),Y
  66E3   F0   0B      		BEQ LTPRTS
  66E5   84   A2      		STY ANSN
  66E7   20   F8   69 		JSR TPCHR
  66EA   A4   A2      		LDY ANSN
  66EC   C8           		INY
  66ED   4C   E1   66 		JMP TPSTMW
  66F0   60           	LTPRTS:	RTS
                      	;
  66F1   B5   00      	TYPFIX:	LDA $00,X
  66F3   85   AA      		STA TEMPN2
  66F5   B5   01      		LDA $01,X
  66F7   85   AB      		STA TEMPN2+1	;TEMPN2 is the number to type
  66F9   10   0A      		BPL TYPNM1
  66FB   A2   AA      		LDX #TEMPN2
  66FD   20   49   6F 		JSR COMPL
  6700   A9   2D      		LDA #'-
  6702   20   F8   69 		JSR TPCHR
  6705   A9   00      	TYPNM1:	LDA #$00
  6707   85   A2      		STA ANSN	;ANSN is digit counter
  6709   85   A7      		STA TEMPN+1
  670B   A9   0A      		LDA #$0A	;Divisor for XDIVID
  670D   85   A6      		STA TEMPN
  670F   A2   AA      	TYPNMR:	LDX #TEMPN2
  6711   20   70   6F 		JSR XDIVID	;Divide number by ten and get remainder
  6714   48           		PHA		;Push remainder digit
  6715   E6   A2      		INC ANSN	;Increment digit counter
  6717   A5   AA      		LDA TEMPN2
  6719   D0   F4      		BNE TYPNMR
  671B   A5   AB      		LDA TEMPN2+1
  671D   D0   F0      		BNE TYPNMR
  671F   68           	TYPNMF:	PLA		;Pop a digit
  6720   20   F8   69 		JSR TPCHR	;Type it
  6723   C6   A2      		DEC ANSN
  6725   D0   F8      		BNE TYPNMF
  6727   60           	RTSA2:	RTS
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-140
LOGO	GARBAGE COLLECTOR

  6728   EA           	TPBFIX:	NOP	;?TYPE FOUR BYTE FIXNUM, LIKE TYPFIX
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-141
LOGO	GARBAGE COLLECTOR

  6729   EA           	TYPFLO:	NOP	;?<TYPE OUT A FLONUM, LIKE TYPFIX>
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-142
LOGO	GARBAGE COLLECTOR

                      	;Changes the argument in (X) from Fixnum to Flonum.?
                      	;
  672A   60           	XFLOAT:	RTS
                      	;
                      	;Changes the argument in (X) from Flonum to Fixnum.
                      	;Gives an error if not possible (under/overflow).?
                      	;
  672B   60           	XINT:	RTS
                      	;
                      	;Complements the floating pt. number in (X) if possible.
                      	;
  672C   60           	XFCOMP:	RTS
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-143
LOGO	GARBAGE COLLECTOR

                      	;Floating Point routines (Copyright 1977 by Apple Computer Inc.):
                      	;
  672D   18           	ADD:	CLC		;Clear carry
  672E   A2   02      		LDX #$02	;Index for 3-byte add
U  6730   BD   00   00 	ADD1:	LDA M1,X
U  6733   7D   00   00 		ADC M2,X	;Add abyte of Mant2 to Mant1
U  6736   9D   00   00 		STA M1,X
  6739   CA           		DEX		;Index to next more signif. byte
  673A   10   F4      		BPL ADD1	;Loop until done
  673C   60           		RTS		;Return
U  673D   0E   00   00 	MD1:	ASL SIGN	;Clear LSB of Sign
  6740   20   43   67 		JSR ABSWAP	;Abs. val. of M1, then swap with M2
U  6743   2C   00   00 	ABSWAP:	BIT M1		;Is Mant1 negative...
  6746   10   06      		BPL ABSWP1	;No, swap with Mant2 and return
U  6748   20   00   00 		JSR PCOMPL	;Yes, complement it.
U  674B   EE   00   00 		INC SIGN	;Increment sign, complementing LSB
  674E   38           	ABSWP1:	SEC		;Set carry for return to MUL/DIV
  674F   A2   04      	SWAP:	LDX #$04	;Index for 4-byte swap
U  6751   08   FF   FF 	SWAP1:	STY E-1,X
U  6754   BD   FF   FF 		LDA X1-1,X	;Swap a byte of Exp/Mant1 with
U  6757   BC   FF   FF 		LDY X2-1,X	;Exp/Mant2 and leave a copy of
U  675A   08   FF   FF 		STY X1-1,X	;Mant1 in E (3 bytes). E+3 is used.
U  675D   9D   FF   FF 		STA X2-1,X
  6760   CA           		DEX		;Advance index to next byte
  6761   D0   EE      		BNE SWAP1	;Loop until done
  6763   60           		RTS		;Return
  6764   A9   8E      	FLOAT:	LDA #$8E	;Init Exp1 to 14,
U  6766   8D   00   00 		STA X1		;then normalize to floating pt.
U  6769   AD   00   00 	NORM1:	LDA M1		;High-order Mant1 byte
  676C   C9   C0      		CMP #$C0	;Are Upper two bits unequal...
  676E   30   11      		BMI RTS1	;Yes, return with Mant1 normalized.
U  6770   CE   00   00 		DEC X1		;Decrement X1
U  6773   0E   02   00 		ASL M1+2
U  6776   2E   01   00 		ROL M1+1	;Shift Mant1 3 bytes left
U  6779   2E   00   00 		ROL M1
MU  677C   AD   00   00 	NORM:	LDA X1		;Is Exp1 zero...
  677F   D0   E8      		BNE NORM1	;No, continue normalizing.
  6781   60           	RTS1:	RTS		;Return
  6782   20   C5   67 	FSUB:	JSR FCOMPL	;Complement Mant1, clears carry unless 0
  6785   20   97   67 	SWPALN:	JSR ALNSWP	;Right shift Mant1 or swap
U  6788   AD   00   00 	FADD:	LDA X2
U  678B   CD   00   00 		CMP X1		;Compare Exp1 with Exp2
  678E   D0   F5      		BNE SWPALN	;If unequal, swap addends or align mantissas
  6790   20   2D   67 		JSR ADD		;Add aligned mantissas
D  6793   50   E7      	ADDEND:	BVC NORM	;No overflow, normalize result
  6795   70   06      		BVS RTLOG	;Overflow - shift M1 right, carry into Sign
  6797   90   B6      	ALNSWP:	BCC SWAP	;Swap if carry clear, else shift right arith.
U  6799   AD   00   00 	RTAR:	LDA M1		;Sign of M1 into carry for
  679C   0A           		ASL A		;right arith. shift
U  679D   EE   00   00 	RTLOG:	INC X1		;Increment X1 to adjust for right shift
A  67A0   F0   FF      		BEQ OVFL	;Exp1 out of range
  67A2   A2   FA      	RTLOG1:	LDX #$FA	;Index for 6 byte right shift
U  67A4   7E   03   00 	ROR1:	ROR E+3,X
  67A7   E8           		INX		;Next byte of shift
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-144
LOGO	GARBAGE COLLECTOR

  67A8   D0   FA      		BNE ROR1	;Loop until done
  67AA   60           		RTS		;Return
  67AB   20   3D   67 	FMUL:	JSR MD1		;Absolute value of Mant1, Mant2.
U  67AE   6D   00   00 		ADC X1		;Add Exp1 to Exp2 for product Exp
  67B1   20   0F   68 		JSR MD2		;Check product exp. and prepare for multiply
  67B4   18           		CLC		;Clear carry for first bit
  67B5   20   A2   67 	MUL1:	JSR RTLOG1	;M1 and E right (product and multiplier)
D  67B8   90   03      		BCC MUL2	;If carry clear, skip partial product
  67BA   20   2D   67 		JSR ADD		;Add multiplicand to product
M  67BD   88           	MUL2:	DEY		;Next multiply iteration
  67BE   10   F5      		BPL MUL1	;Loop until done
U  67C0   4E   00   00 	MDEND:	LSR SIGN	;Test Sign LSB
D  67C3   90   B7      	NORMX:	BCC NORM	;If even, normalize product, else complement
  67C5   38           	FCOMPL:	SEC		;Set carry for subtract
  67C6   A2   03      		LDX #$03	;Index for 3-byte subtract
  67C8   A9   00      	COMPL1:	LDA #$00	;Clear A
U  67CA   FD   00   00 		SBC X1,X	;Subtract byte of Exp1
U  67CD   9D   00   00 		STA X1,X	;Restore it
  67D0   CA           		DEX		;Next more significant byte
  67D1   D0   F5      		BNE COMPL1	;Loop until done
  67D3   F0   BE      		BEQ ADDEND	;Normalize (or shift right if overflow)
  67D5   20   3D   67 	FDIV:	JSR MD1		;Take abs. val. of Mant1, Mant2
U  67D8   ED   00   00 		SBC X1		;Subtract Exp1 from Exp2
  67DB   20   0F   68 		JSR MD2		;Save as quotient exp.
  67DE   38           	DIV1:	SEC		;Set carry for subtract
  67DF   A2   02      		LDX #$02	;Index for 3-byte subtraction
U  67E1   BD   00   00 	DIV2:	LDA M2,X
U  67E4   FD   00   00 		SBC E,X		;Subtract a byte of E from Mant2
  67E7   48           		PHA		;Save on stack
  67E8   CA           		DEX		;Next more significant byte
  67E9   10   F6      		BPL DIV2	;Loop until done
  67EB   A2   FD      		LDX #$FD	;Index for 3-byte conditional move
  67ED   68           	DIV3:	PLA		;Pull byte of difference off stack
  67EE   90   03      		BCC DIV4	;If M2 smaller than E then don't restore M2
U  67F0   9D   03   00 		STA M2+3,X
  67F3   E8           	DIV4:	INX		;Next less significant byte
  67F4   D0   F7      		BNE DIV3	;Loop until done
U  67F6   2E   02   00 		ROL M1+2
U  67F9   2E   01   00 		ROL M1+1	;Roll quotient left, carry into LSB
U  67FC   2E   00   00 		ROL M1
U  67FF   0E   02   00 		ASL M2+2
U  6802   2E   01   00 		ROL M2+1	;Shift dividend left
U  6805   2E   00   00 		ROL M2
  6808   B0   20      		BCS OVFL	;Overflow is due to un-normalized divisor
  680A   88           		DEY		;Next divide iteration
  680B   D0   D1      		BNE DIV1	;Loop until done 23 iterations
  680D   F0   B1      		BEQ MDEND	;Normalize quotient and correct sign
U  680F   8E   02   00 	MD2:	STX M1+2
U  6812   8E   01   00 		STX M1+1	;Clear Mant1 (3 bytes) for MUL/DIV
U  6815   8E   00   00 		STX M1
  6818   B0   0E      		BCS OVCHK	;If calculation set carry, check for overflow
  681A   30   04      		BMI MD3		;If negative, then no undeflow
  681C   68           		PLA		;Pop one return level
  681D   68           		PLA
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-145
LOGO	GARBAGE COLLECTOR

  681E   90   A3      		BCC NORMX	;Clear X1 and return
  6820   49   80      	MD3:	EOR #$80	;Complement sign bit of exponent
U  6822   8D   00   00 		STA X1		;Store it.
  6825   A0   17      		LDY #$17	;Count 24 (MUL) or 23 (DIV) iterations
  6827   60           		RTS		;Return
  6828   10   F6      	OVCHK:	BPL MD3		;If positive exponent, then no overflow.
  682A   EA           	OVFL:	NOP		;Arithmetic overflow error (underflow?)
  682B   20   99   67 	FIX1:	JSR RTAR
U  682E   AD   00   00 	FFIX:	LDA X1
  6831   10   17      		BPL UNDFL
  6833   C9   8E      		CMP #$8E
  6835   D0   F4      		BNE FIX1
U  6837   2C   00   00 		BIT M1
  683A   10   0D      		BPL FIXRTS
U  683C   AD   02   00 		LDA M1+2
  683F   F0   08      		BEQ FIXRTS
U  6841   EE   01   00 		INC M1+1
  6844   D0   03      		BNE FIXRTS
U  6846   EE   00   00 		INC M1
  6849   60           	FIXRTS:	RTS
  684A   A9   00      	UNDFL:	LDA #$00
U  684C   8D   00   00 		STA M1
U  684F   8D   01   00 		STA M1+1
  6852   60           		RTS
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-146
LOGO	SCREEN EDITOR

                      	.SBTTL	Screen Editor
  6853   48           	PATTXT:	PHA		;save fun name
  6854   20   6F   68 		JSR CLEDBF	;clear the edit buffer
  6857   A9   93      		LDA #EDOUT&$FF	;location of edbuf output
  6859   A0   68      		LDY #EDOUT^	;routine (for TPCHR)
  685B   A2   36      		LDX #CSWL
  685D   95   00      		STA $00,X	;store it in CSWL
  685F   94   01      		STY $01,X
  6861   A9   00      		LDA #$00
  6863   85   BB      		STA TEMPX1	;initialize pointer for EDOUT
  6865   85   BC      		STA TEMPX1+1
  6867   68           		PLA		;get fun name back
  6868   20   1F   7C 		JSR PTEXTX	;store function text in EDBUF
  686B   20   D6   6B 		JSR SETVID	;make output device be screen again 
  686E   60           	PATRTS:	RTS		;done
                      
  686F   A9   00      	CLEDBF: LDA #$00	;clear the edit buffer
  6871   A8           		TAY		;(same as high-res graphics page)
  6872   A2   00      		LDX #EDBUF&$FF
  6874   86   B5      		STX TEMPN6
  6876   A2   20      		LDX #EDBUF^
  6878   86   B6      		STX TEMPN6+1
  687A   91   B5      	CLOOP:	STA (TEMPN6),Y
  687C   E6   B5      		INC TEMPN6
  687E   90   02      		BCC CLOP2
  6880   E6   B6      		INC TEMPN6+1
  6882   A9   FF      	CLOP2:	LDA #EBFEND&$FF
  6884   C5   B5      		CMP TEMPN6
  6886   D0   06      		BNE CLOP3
  6888   A9   3F      		LDA #EBFEND^
  688A   C5   B6      		CMP TEMPN6+1
  688C   F0   E0      		BEQ PATRTS
  688E   A9   00      	CLOP3:	LDA #$00
  6890   4C   7A   68 		JMP CLOOP
                      
                      	;output char in AC to EDBUF
  6893   48           	EDOUT:	PHA		;save char
  6894   A0   00      		LDY #$00
  6896   A5   BB      		LDA TEMPX1
  6898   C9   FF      		CMP #EBFEND&$FF	;at end of edit buffer?
  689A   D0   06      		BNE EDOUT1
  689C   A5   BC      		LDA TEMPX1+1
  689E   C9   3F      		CMP #EBFEND^
  68A0   F0   08      		BEQ EDORTS	;if so, quit
  68A2   91   BB      	EDOUT1:	STA (TEMPX1),Y	;if not, store char and inc pointer
  68A4   E6   BB      		INC TEMPX1
  68A6   90   02      		BCC EDORTS
  68A8   E6   BC      		INC TEMPX1+1
  68AA   60           	EDORTS:	RTS
                      
                      	;top level loop in the editor; listens for characters; outputs them to
                      	;the screen and the edit buffer; accepts commands and has them
                      	;processed.
                      
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-147
LOGO	SCREEN EDITOR

  68AB   A4   24      	PATLOP:	LDY CH
  68AD   B1   28      		LDA (BASLIN),Y	;get current char
  68AF   48           		PHA		;save it
  68B0   29   7F      		AND #$7F
  68B2   09   40      		ORA #$40	;make cursor flash
  68B4   91   28      		STA (BASLIN),Y
  68B6   20   25   6D 		JSR RDKEY	;get char from kbd
  68B9   AA           		TAX		;save char
  68BA   68           		PLA		;get old one
  68BB   91   28      		STA (BASLIN),Y	;put it back on screen
  68BD   8A           		TXA		;kbd char again
  68BE   C9   03      		CMP #$03	;^C means finished
  68C0   4C   DF   68 		JMP ERDBCK	;read function into Logo and return.
                      				;here put the command char recognition
                      				;routines.
  68C3   A6   24      		LDX CH
  68C5   E0   28      		CPX #WNDWTH	;at end of line?
  68C7   D0   0B      		BNE PATLP2	;no
  68C9   C9   0D      		CMP #$0D	;yes, check if this char is a cr.
  68CB   F0   07      		BEQ PATLP2	;if so continue normally
  68CD   48           		PHA		;if not, save char
  68CE   A9   21      		LDA #'!		;and output a line continuation char.
  68D0   20   7C   6C 		JSR COUT
  68D3   68           		PLA		;recover char
  68D4   48           	PATLP2:	PHA
  68D5   20   7C   6C 		JSR COUT	;output char to screen
  68D8   68           		PLA
  68D9   20   93   68 		JSR EDOUT	;and to EDBUF
  68DC   4C   AB   68 		JMP PATLOP	;back fer more
                      
                      	;ERDBCK will (soon) read the editor-defined code back into Logo.
                      
  68DF   A9   18      	ERDBCK:	LDA #$18
  68E1   85   23      		STA WNDBTM	;clean up after yourself,
  68E3   A9   00      		LDA #$00	;that's what Maw always
  68E5   85   24      		STA CH		;used to say
  68E7   85   25      		STA CV
  68E9   85   28      		STA BASLIN	;top of screen
  68EB   A9   04      		LDA #$04
  68ED   85   29      		STA BASLIN+1
  68EF   20   66   6C 		JSR CLREOP
  68F2   60           		RTS		;don't worry about it right now.
                      
                      	;this function will display the buffer beginning at the pointer
                      	;(TEMPX1) on the screen, beginning at CH, CV.
                      
  68F3   A5   BB      	EDSPBF:	LDA TEMPX1
  68F5   48           		PHA		;save everything
  68F6   A5   BC      		LDA TEMPX1+1
  68F8   48           		PHA
  68F9   A5   24      		LDA CH
  68FB   48           		PHA
  68FC   A5   25      		LDA CV
  68FE   48           		PHA
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-148
LOGO	SCREEN EDITOR

  68FF   20   EA   6C 		JSR BCALC	;calculate baseline in case
  6902   A0   00      	EDSPLP:	LDY #$00	;cursor has been moved
  6904   A5   BC      		LDA TEMPX1+1
  6906   C9   3F      		CMP #EBFEND^
  6908   90   06      		BCC EDPLP1
  690A   A5   BB      		LDA TEMPX1
  690C   C9   FF      		CMP #EBFEND&$FF
  690E   B0   34      		BCS EDPRTS	;quit if at end of buffer
  6910   B1   BB      	EDPLP1: LDA (TEMPX1),Y
  6912   A6   25      		LDX CV
  6914   E4   23      		CPX WNDBTM
  6916   90   02      		BCC EDPLP2
  6918   B0   2A      		BCS EDPRTS	;quit if filled screen
  691A   A6   24      	EDPLP2:	LDX CH
  691C   E0   28      		CPX #WNDWTH	;if at end of line and next char is a
  691E   90   1E      		BCC EDPLP3	;cr, then no !. otherwise yes.
  6920   C9   0D      		CMP #$0D	;#$0D = CR
  6922   F0   07      		BEQ ECREOL
  6924   48           		PHA
  6925   A9   21      		LDA #'!
  6927   20   7C   6C 		JSR COUT	;output continuation line char
  692A   68           		PLA
  692B   A6   25      	ECREOL:	LDX CV
  692D   E8           		INX		;if we output the CR, will we have
  692E   E4   23      		CPX WNDBTM	;exceeded the screen length?
  6930   B0   12      		BCS EDPRTS	;yes, quit while we're not ahead
  6932   20   7C   6C 	EDPLPO:	JSR COUT	;output char; back for more
  6935   E6   BB      		INC TEMPX1
  6937   90   C9      		BCC EDSPLP
  6939   E6   BC      		INC TEMPX1+1
  693B   4C   02   69 		JMP EDSPLP
  693E   C9   0D      	EDPLP3:	CMP #$0D	;CR?
  6940   F0   E9      		BEQ ECREOL	;then check
  6942   D0   EE      		BNE EDPLPO	;always
  6944   20   66   6C 	EDPRTS:	JSR CLREOP	;clean up just in case
  6947   68           		PLA		;restore everything
  6948   85   25      		STA CV
  694A   68           		PLA
  694B   85   24      		STA CH
  694D   68           		PLA
  694E   85   BC      		STA TEMPX1+1
  6950   68           		PLA
  6951   85   BB      		STA TEMPX1
  6953   60           		RTS
                      
  6954   A9   00      	PATSTP:	LDA #$00
  6956   85   07      		STA OTPUTN
  6958   A5   08      		LDA EDSW
  695A   D0   2A      		BNE PATSR1
  695C   A5   78      		LDA LEVNUM
  695E   D0   2D      		BNE PATSR2
  6960   A5   79      		LDA LEVNUM+1
  6962   D0   29      		BNE PATSR2
  6964   A5   5F      		LDA TOKPTR+1
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-149
LOGO	SCREEN EDITOR

  6966   F0   28      		BEQ PATSR3
  6968   A0   00      		LDY #$00
  696A   B1   5E      		LDA (TOKPTR),Y
  696C   85   1C      		STA ARG1
  696E   C8           		INY
  696F   B1   5E      		LDA (TOKPTR),Y
  6971   85   1D      		STA ARG1+1	;(GETTOK)
  6973   A2   5E      		LDX #TOKPTR
  6975   20   16   54 		JSR TFKADV
  6978   A2   1C      		LDX #ARG1
  697A   20   93   5C 		JSR GETTYP
  697D   C9   07      		CMP #SATOM
  697F   F0   12      		BEQ PATSR4
  6981   C9   01      		CMP #ATOM
  6983   D0   11      		BNE PATSR5
  6985   60           	PSTRTS:	RTS
  6986   A0   80      	PATSR1:	LDY #EDTATM
  6988   A9   15      		LDA #XEDT
  698A   4C   7C   60 		JMP ERROR
  698D   4C   48   75 	PATSR2:	JMP STTLR2	;(ERROR XETL)
  6990   4C   CF   72 	PATSR3:	JMP SCMMT1	;(ERROR XEOL)
  6993   4C   10   7B 	PATSR4:	JMP SPO5S	;(ERROR XUBL,ARG1)
  6996   4C   8D   72 	PATSR5:	JMP SMAKE2	;(ERROR XWTA,ARG1,CURTOK)
                      
                      
  6999   A9   18      	PATERR:	LDA #$18
  699B   85   23      		STA WNDBTM
  699D   20   D6   6B 		JSR SETVID	;i/o back to normal - screen
  69A0   20   CA   6B 		JSR SETKBD	;keyboard
  69A3   4C   2B   48 		JMP ERROR1
                      
  69A6   20   BD   6B 	PATNYM:	JSR SETREV	;print the "Apple Logo Screen Editor" thing on
  69A9   A5   24      		LDA CH		;the bottom line.
  69AB   48           		PHA
  69AC   A5   25      		LDA CV		;save current screen location
  69AE   48           		PHA
  69AF   A5   28      		LDA BASLIN	;save old baseline
  69B1   48           		PHA
  69B2   A5   29      		LDA BASLIN+1
  69B4   48           		PHA
  69B5   A9   00      		LDA #$00
  69B7   85   24      		STA CH		;far left
  69B9   A9   23      		LDA #$23
  69BB   85   25      		STA CV		;bottom of screen
  69BD   A9   D0      		LDA #$D0	;slight speed bum -- we know we want
  69BF   85   28      		STA BASLIN	;the bottom of the screen, so instead
  69C1   A9   07      		LDA #$7		;of calculating it via BCALC, we load
  69C3   85   29      		STA BASLIN+1	;it up.
  69C5   A2   92      		LDX #PATMSG&$FF
  69C7   A0   8E      		LDY #PATMSG^
  69C9   20   1D   53 		JSR PRTSTR
  69CC   68           		PLA
  69CD   85   29      		STA BASLIN+1
  69CF   68           		PLA
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-150
LOGO	SCREEN EDITOR

  69D0   85   28      		STA BASLIN
  69D2   68           		PLA
  69D3   85   25      		STA CV
  69D5   68           		PLA
  69D6   85   24      		STA CH
  69D8   20   C5   6B 		JSR SETNRM
  69DB   60           		RTS
                      
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-151
LOGO	MONITOR ROUTINES

                      	.SBTTL	Monitor Routines
  69DC   A9   0D      	BREAK1:	LDA #$0D
  69DE   4C   F8   69 		JMP TPCHR
                      	;
  69E1   60           	OPENW:	RTS		;?Open the Workspace file, initialize it for writing
                      	;
  69E2   60           	CLOSEW:	RTS		;?Close the Workspace file
                      	;
  69E3   60           	EOF:	RTS		;?Return True or False depending on EOF of file
                      	;
  69E4   60           	RESETW:	RTS		;?Open Workspace file for reading
                      	;
  69E5   A9   24      	RESETT:	LDA #$24
  69E7   85   23      		STA WNDBTM
  69E9   20   D6   6B 		JSR SETVID
  69EC   20   CA   6B 		JSR SETKBD
  69EF   20   5A   6D 		JSR SETTXT
  69F2   20   C5   6B 		JSR SETNRM
  69F5   4C   5C   6C 		JMP HOME
                      	;
  69F8   48           	TPCHR:	PHA
  69F9   A5   13      		LDA OUTDEV
  69FB   D0   04      		BNE TPCHR1
  69FD   68           		PLA
  69FE   6C   36   00 		JMP (CSWL)
  6A01   68           	TPCHR1:	PLA
  6A02   60           		RTS		;?Output character to device
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-152
LOGO	MONITOR ROUTINES

                      	;Modified Monitor for Apple-LOGO
                      	;
  6A03   90   04      	SCRN2:	BCC RTMSKZ
  6A05   4A           		LSR A
  6A06   4A           		LSR A
  6A07   4A           		LSR A
  6A08   4A           		LSR A
  6A09   29   0F      	RTMSKZ:	AND #$0F
  6A0B   60           		RTS
                      	;
  6A0C   98           	PRNTYX:	TYA
  6A0D   20   3D   6B 	PRNTAX:	JSR PRBYTE
  6A10   8A           	PRNTX:	TXA
  6A11   4C   3D   6B 		JMP PRBYTE
                      	;
  6A14   A6   3A      	INSDS1:	LDX PCL
  6A16   A4   3B      		LDY PCH
  6A18   20   0D   6B 		JSR PRYX2
                      	;
  6A1B   A2   03      	PRBLNK:	LDX #$03
  6A1D   A9   20      	PRBL2:	LDA #$20
  6A1F   20   F8   69 	PRBL3:	JSR TPCHR
  6A22   CA           		DEX
  6A23   D0   F8      		BNE PRBL2
  6A25   60           		RTS
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-153
LOGO	MONITOR ROUTINES

  6A26   48           	MONBRK:	PHA
  6A27   AD   8B   C0 		LDA GETRM1
  6A2A   AD   8B   C0 		LDA GETRM1
  6A2D   A9   00      		LDA #$00
  6A2F   85   F0      		STA BANK4K
  6A31   20   C5   6B 		JSR SETNRM
  6A34   20   D6   6B 		JSR SETVID
  6A37   20   CA   6B 		JSR SETKBD
  6A3A   68           		PLA
  6A3B   28           		PLP
  6A3C   20   4D   6C 		JSR SAVE
  6A3F   68           		PLA
  6A40   85   3A      		STA PCL
  6A42   68           		PLA
  6A43   85   3B      		STA PCH
  6A45   A9   01      		LDA #$01
  6A47   85   EF      		STA MONFLG
  6A49   20   14   6A 	OLDBRK:	JSR INSDS1
  6A4C   20   D1   6A 		JSR RGDSP1
  6A4F   D8           	MON:	CLD
  6A50   20   86   6C 		JSR BELL
  6A53   20   DC   69 	MONZ:	JSR BREAK1
  6A56   A9   2A      		LDA #'*
  6A58   20   F8   69 		JSR TPCHR
  6A5B   20   67   6D 		JSR GETLN
  6A5E   20   C9   6A 		JSR ZMODE
  6A61   20   95   6A 	NXTITM:	JSR GETNMB
  6A64   84   34      		STY YSAV
  6A66   A0   0F      		LDY #MONNUM
  6A68   88           	CHRSRC:	DEY
  6A69   30   E4      		BMI MON
  6A6B   D9   C3   8E 		CMP CHRTBL,Y
  6A6E   D0   F8      		BNE CHRSRC
  6A70   20   B3   6A 		JSR TOSUB
  6A73   A4   34      		LDY YSAV
  6A75   4C   61   6A 		JMP NXTITM
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-154
LOGO	MONITOR ROUTINES

  6A78   A2   03      	DIG:	LDX #$03
  6A7A   0A           		ASL A
  6A7B   0A           		ASL A
  6A7C   0A           		ASL A
  6A7D   0A           		ASL A
  6A7E   0A           	NXTBIT:	ASL A
  6A7F   26   3E      		ROL A2L
  6A81   26   3F      		ROL A2H
  6A83   CA           		DEX
  6A84   10   F8      		BPL NXTBIT
  6A86   A5   31      	NXTBAS:	LDA MODE
  6A88   D0   06      		BNE NXTBS2
  6A8A   B5   3F      		LDA A2H,X
  6A8C   95   3D      		STA A1H,X
  6A8E   95   41      		STA A3H,X
  6A90   E8           	NXTBS2:	INX
  6A91   F0   F3      		BEQ NXTBAS
  6A93   D0   06      		BNE NXTCHR
  6A95   A2   00      	GETNMB:	LDX #$00
  6A97   86   3E      		STX A2L
  6A99   86   3F      		STX A2H
  6A9B   B9   00   02 	NXTCHR:	LDA LINARY,Y
  6A9E   C8           		INY
  6A9F   C9   30      		CMP #'0
  6AA1   90   2A      		BCC NTDIG
  6AA3   C9   3A      		CMP #':
  6AA5   90   D1      		BCC DIG
  6AA7   C9   41      		CMP #'A
  6AA9   90   22      		BCC NTDIG
  6AAB   C9   47      		CMP #'G
  6AAD   B0   1E      		BCS NTDIG
  6AAF   69   09      		ADC #$09
  6AB1   D0   C5      		BNE DIG		;(Always)
                      	;
  6AB3   98           	TOSUB:	TYA
  6AB4   0A           		ASL A
  6AB5   A8           		TAY
  6AB6   B9   D2   8E 		LDA SUBTBL,Y
  6AB9   85   2A      		STA BSLTMP
  6ABB   C8           		INY
  6ABC   B9   D2   8E 		LDA SUBTBL,Y
  6ABF   85   2B      		STA BSLTMP+1
  6AC1   A5   31      		LDA MODE
  6AC3   20   C9   6A 		JSR ZMODE
  6AC6   6C   2A   00 		JMP (BSLTMP)
                      	;
  6AC9   A0   00      	ZMODE:	LDY #$00
  6ACB   84   31      		STY MODE
  6ACD   60           	NTDIG:	RTS
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-155
LOGO	MONITOR ROUTINES

  6ACE   20   DC   69 	REGDSP:	JSR BREAK1
  6AD1   A9   45      	RGDSP1:	LDA #ACC
  6AD3   85   40      		STA A3L
  6AD5   A9   00      		LDA #ACC^
  6AD7   85   41      		STA A3H
  6AD9   A2   FB      		LDX #$FB
  6ADB   A9   20      	RDSP1:	LDA #$20
  6ADD   20   F8   69 		JSR TPCHR
  6AE0   BD   F5   8D 		LDA RTBL-$FB,X
  6AE3   20   F8   69 		JSR TPCHR
  6AE6   A9   3D      		LDA #'=
  6AE8   20   F8   69 		JSR TPCHR
  6AEB   B5   4A      		LDA ACC+5,X
  6AED   20   3D   6B 		JSR PRBYTE
  6AF0   E8           		INX
  6AF1   30   E8      		BMI RDSP1
  6AF3   60           		RTS
                      	;
  6AF4   E6   42      	NXTA4:	INC A4L
  6AF6   D0   02      		BNE NXTA1
  6AF8   E6   43      		INC A4H
  6AFA   A5   3C      	NXTA1:	LDA A1L
  6AFC   C5   3E      		CMP A2L
  6AFE   A5   3D      		LDA A1H
  6B00   E5   3F      		SBC A2H
  6B02   E6   3C      		INC A1L
  6B04   D0   02      		BNE RTS4B
  6B06   E6   3D      		INC A1H
  6B08   60           	RTS4B:	RTS
                      	;
  6B09   A4   3D      	PRA1:	LDY A1H
  6B0B   A6   3C      		LDX A1L
  6B0D   20   DC   69 	PRYX2:	JSR BREAK1
  6B10   20   0C   6A 		JSR PRNTYX
  6B13   A0   00      		LDY #$00
  6B15   A9   2D      		LDA #'-
  6B17   4C   F8   69 		JMP TPCHR
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-156
LOGO	MONITOR ROUTINES

  6B1A   A5   3C      	XAM8:	LDA A1L
  6B1C   09   07      		ORA #$07
  6B1E   85   3E      		STA A2L
  6B20   A5   3D      		LDA A1H
  6B22   85   3F      		STA A2H
  6B24   A5   3C      	MD8CHK:	LDA A1L
  6B26   29   07      		AND #$07
  6B28   D0   03      		BNE DATAOT
  6B2A   20   09   6B 	XAM:	JSR PRA1
  6B2D   A9   20      	DATAOT:	LDA #$20
  6B2F   20   F8   69 		JSR TPCHR
  6B32   B1   3C      		LDA (A1L),Y
  6B34   20   3D   6B 		JSR PRBYTE
  6B37   20   FA   6A 		JSR NXTA1
  6B3A   90   E8      		BCC MD8CHK
  6B3C   60           	RTS4C:	RTS
                      	;
  6B3D   48           	PRBYTE:	PHA
  6B3E   4A           		LSR A
  6B3F   4A           		LSR A
  6B40   4A           		LSR A
  6B41   4A           		LSR A
  6B42   20   48   6B 		JSR PRHEXZ
  6B45   68           		PLA
  6B46   29   0F      	PRHEX:	AND #$0F
  6B48   18           	PRHEXZ:	CLC
  6B49   69   30      		ADC #'0
  6B4B   C9   3A      		CMP #':
  6B4D   90   02      		BCC PRHEXC
  6B4F   69   06      		ADC #$06
  6B51   4C   F8   69 	PRHEXC:	JMP TPCHR
                      	;
  6B54   C6   34      	BL1:	DEC YSAV
  6B56   F0   C2      		BEQ XAM8
  6B58   CA           	BLANK:	DEX
  6B59   D0   16      		BNE SETMDZ
  6B5B   C9   3A      		CMP #':
  6B5D   D0   CB      		BNE XAM
  6B5F   85   31      	STOR:	STA MODE
  6B61   A5   3E      		LDA A2L
  6B63   91   40      		STA (A3L),Y
  6B65   E6   40      		INC A3L
  6B67   D0   02      		BNE RTS5
  6B69   E6   41      		INC A3H
  6B6B   60           	RTS5:	RTS
                      	;
  6B6C   A4   34      	SETMOD:	LDY YSAV
  6B6E   B9   FF   01 		LDA LINARY-1,Y
  6B71   85   31      	SETMDZ:	STA MODE
  6B73   60           		RTS
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-157
LOGO	MONITOR ROUTINES

  6B74   A2   01      	LT:	LDX #$01
  6B76   B5   3E      	LT2:	LDA A2L,X
  6B78   95   42      		STA A4L,X
  6B7A   95   44      		STA A5L,X
  6B7C   CA           		DEX
  6B7D   10   F7      		BPL LT2
  6B7F   60           		RTS
                      	;
  6B80   B1   3C      	MOVE:	LDA (A1L),Y
  6B82   91   42      		STA (A4L),Y
  6B84   20   F4   6A 		JSR NXTA4
  6B87   90   F7      		BCC MOVE
  6B89   60           		RTS
                      	;
  6B8A   B1   3C      	VFY:	LDA (A1L),Y
  6B8C   D1   42      		CMP (A4L),Y
  6B8E   F0   1C      		BEQ VFYOK
  6B90   20   09   6B 		JSR PRA1
  6B93   B1   3C      		LDA (A1L),Y
  6B95   20   3D   6B 		JSR PRBYTE
  6B98   A9   20      		LDA #$20
  6B9A   20   F8   69 		JSR TPCHR
  6B9D   A9   28      		LDA #'(
  6B9F   20   F8   69 		JSR TPCHR
  6BA2   B1   42      		LDA (A4L),Y
  6BA4   20   3D   6B 		JSR PRBYTE
  6BA7   A9   29      		LDA #')
  6BA9   20   F8   69 		JSR TPCHR
  6BAC   20   F4   6A 	VFYOK:	JSR NXTA4
  6BAF   90   D9      		BCC VFY
  6BB1   60           		RTS
                      	;
  6BB2   8A           	A1PC:	TXA
  6BB3   F0   07      		BEQ A1PCRT
  6BB5   B5   3C      	A1PCLP:	LDA A1L,X
  6BB7   95   3A      		STA PCL,X
  6BB9   CA           		DEX
  6BBA   10   F9      		BPL A1PCLP
  6BBC   60           	A1PCRT:	RTS
                      	;
                      
  6BBD   A0   3F      	SETREV:	LDY #$3F
  6BBF   D0   06      		BNE SETIFL
  6BC1   A0   7F      	SETINV:	LDY #$7F
  6BC3   D0   02      		BNE SETIFL
  6BC5   A0   FF      	SETNRM:	LDY #$FF
  6BC7   84   32      	SETIFL:	STY INVFLG
  6BC9   60           		RTS
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-158
LOGO	MONITOR ROUTINES

  6BCA   A9   00      	SETKBD:	LDA #$00
  6BCC   85   3E      		STA A2L
  6BCE   A0   2D      	INPRT:	LDY #KEYIN&$FF
  6BD0   A9   6D      		LDA #KEYIN^
  6BD2   A2   38      		LDX #KSWL
  6BD4   D0   0A      		BNE IOPRT	;(Always)
  6BD6   A9   00      	SETVID:	LDA #$00
  6BD8   85   3E      		STA A2L
  6BDA   A0   7C      	OUTPRT:	LDY #COUT&$FF
  6BDC   A9   6C      		LDA #COUT^
  6BDE   A2   36      		LDX #CSWL
  6BE0   95   01      	IOPRT:	STA $01,X
  6BE2   A5   3E      		LDA A2L
  6BE4   29   0F      		AND #$0F
  6BE6   F0   06      		BEQ IOPRT1
  6BE8   09   00      		ORA #IOADR^
  6BEA   95   01      		STA $01,X
  6BEC   A0   00      		LDY #$00
  6BEE   94   00      	IOPRT1:	STY $00,X
  6BF0   60           		RTS
                      
                      
                      	;
  6BF1   20   B2   6B 	GO:	JSR A1PC
  6BF4   20   42   6C 		JSR RESTOR
  6BF7   A9   00      		LDA #$00
  6BF9   85   EF      		STA MONFLG
  6BFB   6C   3A   00 		JMP (PCL)
                      	;
  6BFE   A5   F0      	BSWTCH:	LDA BANK4K
  6C00   D0   10      		BNE BSW1
  6C02   E6   F0      		INC BANK4K
  6C04   AD   83   C0 		LDA GETRM2
  6C07   AD   83   C0 		LDA GETRM2
  6C0A   A9   32      		LDA #'2
  6C0C   20   F8   69 		JSR TPCHR
  6C0F   4C   DC   69 		JMP BREAK1
  6C12   C6   F0      	BSW1:	DEC BANK4K
  6C14   AD   8B   C0 		LDA GETRM1
  6C17   AD   8B   C0 		LDA GETRM1
  6C1A   A9   31      		LDA #'1
  6C1C   20   F8   69 		JSR TPCHR
  6C1F   4C   DC   69 		JMP BREAK1
                      	;
  6C22   4C   CE   6A 	REGZ:	JMP REGDSP
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-159
LOGO	MONITOR ROUTINES

  6C25   AD   8A   C0 	XMON:	LDA KILRAM
  6C28   A9   4C      		LDA #$4C	;(JMP instruction code)
  6C2A   8D   F8   03 		STA USRADR
  6C2D   A9   26      		LDA #MONBRK&$FF
  6C2F   8D   F9   03 		STA USRADR+1
  6C32   A9   6A      		LDA #MONBRK^
  6C34   8D   FA   03 		STA USRADR+2
  6C37   4C   59   FF 		JMP SYSMON	;User can re-enter this monitor with control-Y
                      	;
  6C3A   20   54   6B 	CRMON:	JSR BL1
  6C3D   68           		PLA
  6C3E   68           		PLA
  6C3F   4C   53   6A 		JMP MONZ
                      	;
  6C42   A5   48      	RESTOR:	LDA STATUS
  6C44   48           		PHA
  6C45   A5   45      		LDA A5H
  6C47   A6   46      	RESTR1:	LDX XREG
  6C49   A4   47      		LDY YREG
  6C4B   28           		PLP
  6C4C   60           		RTS
                      	;
  6C4D   85   45      	SAVE:	STA ACC
  6C4F   86   46      	SAV1:	STX XREG
  6C51   84   47      		STY YREG
  6C53   08           		PHP
  6C54   68           		PLA
  6C55   85   48      		STA STATUS
  6C57   BA           		TSX
  6C58   86   49      		STX SPNT
  6C5A   D8           		CLD
  6C5B   60           		RTS
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-160
LOGO	MONITOR ROUTINES

                      	;HOME - Home the cursor and clear the screen
                      	;
  6C5C   A9   00      	HOME:	LDA #WNDTOP
  6C5E   85   25      		STA CV
  6C60   A0   00      		LDY #$00
  6C62   84   24      		STY CH
  6C64   F0   04      		BEQ CLEOP1	;(always branches)
                      	;
                      	;CLREOP - Clear to end-of-page
                      	;
  6C66   A4   24      	CLREOP:	LDY CH
  6C68   A5   25      		LDA CV
  6C6A   48           	CLEOP1:	PHA
  6C6B   20   EC   6C 		JSR BCALCA
  6C6E   20   06   6D 		JSR CLEOL1
  6C71   A0   00      		LDY #$00
  6C73   68           		PLA
  6C74   69   00      		ADC #$00
  6C76   C5   23      		CMP WNDBTM
  6C78   90   F0      		BCC CLEOP1
  6C7A   B0   6E      		BCS BCALC
                      	;
                      	;COUT - Output the character in A to the screen
                      	;
  6C7C   48           	COUT:	PHA
  6C7D   84   35      		STY YSAV1
  6C7F   20   99   6C 		JSR COUT1
  6C82   68           		PLA
  6C83   A4   35      		LDY YSAV1
  6C85   60           		RTS
                      	;
  6C86   A9   40      	BELL:	LDA #$40
  6C88   20   0C   6E 		JSR WAIT
  6C8B   A0   C0      		LDY #$C0
  6C8D   A9   0C      	BELL1:	LDA #$0C
  6C8F   20   0C   6E 		JSR WAIT
  6C92   AD   30   C0 		LDA SPKR
  6C95   88           		DEY
  6C96   D0   F5      		BNE BELL1
  6C98   60           		RTS
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-161
LOGO	MONITOR ROUTINES

  6C99   C9   0D      	COUT1:	CMP #$0D
  6C9B   F0   73      		BEQ CROUT
  6C9D   09   80      		ORA #$80	;Assume non-flashing first
  6C9F   25   32      		AND INVFLG	;Flash or Invert if set
  6CA1   C9   E0      		CMP #$E0
  6CA3   90   02      		BCC COUTZ
  6CA5   29   DF      		AND #$DF	;Make it uppercase
  6CA7   A4   24      	COUTZ:	LDY CH
  6CA9   91   28      		STA (BASLIN),Y
  6CAB   E6   24      		INC CH		;Advance Horizontally
  6CAD   A5   24      		LDA CH
  6CAF   C9   28      		CMP #WNDWTH
  6CB1   90   50      		BCC BCALCR
  6CB3   A9   00      	CR:	LDA #$00
  6CB5   85   24      		STA CH
  6CB7   E6   25      	LF:	INC CV
  6CB9   A5   25      		LDA CV
  6CBB   C5   23      		CMP WNDBTM
  6CBD   90   2D      		BCC BCALCA	;Finish if scrolling unnecessary
  6CBF   C6   25      		DEC CV
  6CC1   A9   00      	SCROLL:	LDA #WNDTOP
  6CC3   48           		PHA
  6CC4   20   EC   6C 		JSR BCALCA
  6CC7   A5   28      	SCRL1:	LDA BASLIN
  6CC9   85   2A      		STA BSLTMP
  6CCB   A5   29      		LDA BASLIN+1
  6CCD   85   2B      		STA BSLTMP+1
  6CCF   A0   27      		LDY #WNDWTH-1
  6CD1   68           		PLA
  6CD2   69   01      		ADC #$01
  6CD4   C5   23      		CMP WNDBTM
  6CD6   B0   0D      		BCS SCRL3
  6CD8   48           		PHA
  6CD9   20   EC   6C 		JSR BCALCA
  6CDC   B1   28      	SCRL2:	LDA (BASLIN),Y	;Shift a line up one, character by character
  6CDE   91   2A      		STA (BSLTMP),Y
  6CE0   88           		DEY
  6CE1   10   F9      		BPL SCRL2	;Next character
  6CE3   30   E2      		BMI SCRL1	;Next line
  6CE5   A0   00      	SCRL3:	LDY #$00
  6CE7   20   06   6D 		JSR CLEOL1	;Clear the bottom line, then calculate new base
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-162
LOGO	MONITOR ROUTINES

  6CEA   A5   25      	BCALC:	LDA CV
  6CEC   48           	BCALCA:	PHA
  6CED   4A           		LSR A
  6CEE   29   03      		AND #$03
  6CF0   09   04      		ORA #$04
  6CF2   85   29      		STA BASLIN+1
  6CF4   68           		PLA
  6CF5   29   18      		AND #$18
  6CF7   90   02      		BCC BCALC2
  6CF9   69   7F      		ADC #$7F
  6CFB   85   28      	BCALC2:	STA BASLIN
  6CFD   0A           		ASL A
  6CFE   0A           		ASL A
  6CFF   05   28      		ORA BASLIN
  6D01   85   28      		STA BASLIN
  6D03   60           	BCALCR:	RTS
                      	;
                      	;CLREOL - Clear to end-of-line
                      	;
  6D04   A4   24      	CLREOL:	LDY CH
  6D06   A9   A0      	CLEOL1:	LDA #$A0	;(Space, non-flashing, non-inverted)
  6D08   91   28      	CLEOL2:	STA (BASLIN),Y
  6D0A   C8           		INY
  6D0B   C0   28      		CPY #WNDWTH
  6D0D   90   F9      		BCC CLEOL2
  6D0F   60           		RTS
                      	;
                      	;CROUT - Output a Carriage return; suppress output if necessary
                      	;
  6D10   20   04   6D 	CROUT:	JSR CLREOL
  6D13   20   39   6D 		JSR TSTCHR
  6D16   30   9B      		BMI CR
  6D18   C0   13      		CPY #LSTKEY
  6D1A   D0   97      		BNE CR
  6D1C   2C   00   C0 		BIT KPFLAG
  6D1F   20   FE   6D 		JSR RWAIT
  6D22   4C   B3   6C 		JMP CR
                      	;
  6D25   A5   12      	RDKEY:	LDA INDEV
  6D27   D0   03      		BNE KEYIND
  6D29   6C   38   00 		JMP (KSWL)
  6D2C   60           	KEYIND:	RTS		;?Get a character from the input device
                      	;
  6D2D   E6   4E      	KEYIN:	INC RNDL
  6D2F   D0   02      		BNE KEYIN1
  6D31   E6   4F      		INC RNDH
  6D33   20   43   6D 	KEYIN1:	JSR TSTCH1
  6D36   30   F5      		BMI KEYIN
  6D38   60           	KRTS:	RTS
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-163
LOGO	MONITOR ROUTINES

  6D39   A5   12      	TSTCHR:	LDA INDEV
  6D3B   D0   17      		BNE TSTC1
  6D3D   A5   39      		LDA KSWH
  6D3F   C9   C0      		CMP #IOADR
  6D41   F0   14      		BEQ TSTC2
  6D43   2C   00   C0 	TSTCH1:	BIT KPFLAG
  6D46   10   09      		BPL KNONE
  6D48   AD   00   C0 		LDA KPFLAG
  6D4B   2C   10   C0 		BIT KPCLR
  6D4E   29   7F      		AND #$7F
  6D50   60           		RTS
  6D51   A9   FF      	KNONE:	LDA #$FF	;Return negative if no character
  6D53   60           		RTS
  6D54   4C   51   6D 	TSTC1:	JMP KNONE	;Return $FF if no char. from input device, else A=char.
  6D57   4C   51   6D 	TSTC2:	JMP KNONE	;Return $FF if no char. from input card, else A=char.
                      	;
                      	;SETTXT - Set text mode
                      	;
  6D5A   AD   51   C0 	SETTXT:	LDA TXTSET
  6D5D   A5   23      		LDA WNDBTM
  6D5F   38           		SEC
  6D60   E9   01      		SBC #$01
  6D62   85   25      		STA CV
  6D64   4C   EC   6C 		JMP BCALCA
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-164
LOGO	MONITOR ROUTINES

                      	;GETLN - Gets a line of input from the keyboard. Looks for LOGO interrupt
                      	; characters, and recognizes the left-bracket alias character. Returns
                      	; number of characters (not including terminator) in X.
                      	;
  6D67   A2   00      	GETLN:	LDX #$00	;X is LINARY index
  6D69   A5   13      	NEXTC:	LDA OUTDEV
  6D6B   D0   1E      		BNE NEXTC1	;No flashing cursor if non-Apple output
  6D6D   A5   37      		LDA CSWH
  6D6F   C9   C0      		CMP #IOADR
  6D71   F0   18      		BEQ NEXTC1	;No flashing cursor if non-screen output
  6D73   A4   24      		LDY CH
  6D75   B1   28      		LDA (BASLIN),Y
  6D77   48           		PHA
  6D78   29   7F      		AND #$7F
  6D7A   09   40      		ORA #$40
  6D7C   91   28      		STA (BASLIN),Y	;Make cursor position flash
  6D7E   20   25   6D 		JSR RDKEY
  6D81   85   2A      		STA BSLTMP
  6D83   68           		PLA
  6D84   91   28      		STA (BASLIN),Y
  6D86   A5   2A      		LDA BSLTMP
  6D88   4C   90   6D 		JMP GETLN1
  6D8B   20   25   6D 	NEXTC1:	JSR RDKEY	;Get an ascii value from keyboard
  6D8E   85   2A      		STA BSLTMP
  6D90   C9   15      	GETLN1:	CMP #$15	;(Forward arrow)
  6D92   D0   0A      		BNE GTLN1C
  6D94   BD   00   02 		LDA LINARY,X	;Get character under cursor
  6D97   D0   58      		BNE GTLN2A	;(0 becomes space)
  6D99   A9   20      		LDA #$20
  6D9B   4C   F1   6D 		JMP GTLN2A
  6D9E   C9   08      	GTLN1C:	CMP #$08	;(Back arrow)
  6DA0   F0   15      		BEQ BCKSPC
  6DA2   C9   10      		CMP #PULCHR	;(Pull back last line)
  6DA4   D0   2F      		BNE GTLN1D
  6DA6   8A           	PREVLN:	TXA
  6DA7   D0   C0      		BNE NEXTC	;done if not at beginning of line
  6DA9   BD   00   02 	PRVLN1:	LDA LINARY,X	;get char from line-array
  6DAC   C9   0D      		CMP #$0D
  6DAE   F0   B9      		BEQ NEXTC	;done if null char
  6DB0   20   F8   69 	NEXTCX:	JSR TPCHR	;output char to screen
  6DB3   E8           		INX		;next char
  6DB4   4C   A9   6D 		JMP PRVLN1
  6DB7   8A           	BCKSPC:	TXA
  6DB8   F0   AF      		BEQ NEXTC
  6DBA   C6   24      		DEC CH
  6DBC   CA           		DEX
  6DBD   4C   69   6D 		JMP NEXTC
  6DC0   20   F8   69 	NOTCR:	JSR TPCHR	;Echo character
  6DC3   E0   F8      		CPX #$F8
  6DC5   90   03      		BCC GETLN3
  6DC7   20   86   6C 		JSR BELL
  6DCA   E8           	GETLN3:	INX
  6DCB   D0   9C      		BNE NEXTC
  6DCD   A9   5C      	CANCEL:	LDA #'\
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-165
LOGO	MONITOR ROUTINES

  6DCF   20   F8   69 		JSR TPCHR
  6DD2   4C   67   6D 		JMP GETLN
  6DD5   C9   18      	GTLN1D:	CMP #$18	;(Cancel line)
  6DD7   F0   F4      		BEQ CANCEL
  6DD9   C9   5E      		CMP #LBRAK
  6DDB   D0   04      		BNE GTLN1A
  6DDD   A9   5B      		LDA #'[
  6DDF   D0   10      		BNE GTLN2A	;(Always)
  6DE1   A5   EF      	GTLN1A:	LDA MONFLG
  6DE3   D0   0A      		BNE GTLN1B	;Don't check for interrupt characters if in monitor
  6DE5   A5   2A      		LDA BSLTMP
  6DE7   C9   07      		CMP #STPKEY
  6DE9   F0   10      		BEQ GTLNR1
  6DEB   C9   1A      		CMP #PAUSKY
  6DED   F0   1A      		BEQ GTLNR2
  6DEF   A5   2A      	GTLN1B:	LDA BSLTMP
  6DF1   9D   00   02 	GTLN2A:	STA LINARY,X
  6DF4   C9   0D      		CMP #$0D	;(Carriage return)
  6DF6   D0   C8      		BNE NOTCR
  6DF8   4C   DC   69 		JMP BREAK1
  6DFB   4C   CC   52 	GTLNR1:	JMP STPPK1
                      	;
  6DFE   20   25   6D 	RWAIT:	JSR RDKEY
  6E01   C9   07      		CMP #STPKEY
  6E03   F0   F6      		BEQ GTLNR1
  6E05   C9   1A      		CMP #PAUSKY
  6E07   D0   0E      		BNE WRTS
  6E09   4C   C7   52 	GTLNR2:	JMP STPPKZ
                      	;
  6E0C   38           	WAIT:	SEC
  6E0D   48           	WAIT1:	PHA
  6E0E   E9   01      	WAIT2:	SBC #$01
  6E10   D0   FC      		BNE WAIT2
  6E12   68           		PLA
  6E13   E9   01      		SBC #$01
  6E15   D0   F6      		BNE WAIT1
  6E17   60           	WRTS:	RTS
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-166
LOGO	SYSTEM FUNCTIONS

                      	.SBTTL	System Functions
                      	;	Arithmetic Functions: ?AIN'T GONNA WORK ON 4-BYTE FIXNUMS:
                      	;		SSUM,SDIF,SPROD,SDIVID,SGRTR,SLESS
  6E18   A5   EB      	SUNDIF:	LDA INFDIF
  6E1A   85   60      		STA CURTOK	;(For possible error message in GT1NUM)
  6E1C   A5   EC      		LDA INFDIF+1
  6E1E   85   61      		STA CURTOK+1
  6E20   20   F7   56 		JSR GT1NUM
  6E23   B0   1C      		BCS SNDIF2
  6E25   A5   1C      		LDA NARG1
  6E27   D0   0E      		BNE SNDIF1
  6E29   A5   1D      		LDA NARG1+1
  6E2B   D0   0A      		BNE SNDIF1
  6E2D   A5   1E      		LDA NARG1+2
  6E2F   D0   06      		BNE SNDIF1
  6E31   A5   1F      		LDA NARG1+3
  6E33   C9   80      		CMP #$80	;Can't complement -32768
  6E35   F0   30      		BEQ ROFLOW
  6E37   A2   1C      	SNDIF1:	LDX #NARG1
  6E39   20   49   6F 		JSR COMPL
  6E3C   A0   1C      		LDY #NARG1
  6E3E   4C   68   56 		JMP OTPFIX
  6E41   A2   1C      	SNDIF2:	LDX #NARG1
  6E43   20   2C   67 		JSR XFCOMP
  6E46   A0   1C      		LDY #NARG1
  6E48   4C   64   56 		JMP OTPFLO
                      	;
  6E4B   20   C3   56 	SSUM:	JSR GT2NUM
                      	;?	BCS <FLONUM ADDITION>
  6E4E   18           		CLC
  6E4F   A5   1C      		LDA NARG1
  6E51   65   F2      		ADC NARG2
  6E53   85   A8      		STA TEMPN1
  6E55   A5   1D      		LDA NARG1+1
  6E57   65   F3      		ADC NARG2+1
  6E59   85   A9      		STA TEMPN1+1
  6E5B   A5   1D      		LDA NARG1+1
  6E5D   45   F3      		EOR NARG2+1
  6E5F   30   0B      		BMI SSUMOK	;Different signs, never an overflow
  6E61   A5   1D      		LDA NARG1+1
  6E63   45   A9      		EOR TEMPN1+1
  6E65   10   05      		BPL SSUMOK	;Overflow if result not same sign as one argument
  6E67   A9   21      	ROFLOW:	LDA #XOFLOW
  6E69   4C   7C   60 		JMP ERROR
  6E6C   A0   A8      	SSUMOK:	LDY #TEMPN1
  6E6E   4C   68   56 		JMP OTPFIX
                      	;
  6E71   20   C3   56 	SDIF:	JSR GT2NUM
                      	;?	BCS <FLONUM DIFFERENCE>
  6E74   38           		SEC
  6E75   A5   1C      		LDA NARG1
  6E77   E5   F2      		SBC NARG2
  6E79   85   A8      		STA TEMPN1
  6E7B   A5   1D      		LDA NARG1+1
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-167
LOGO	SYSTEM FUNCTIONS

  6E7D   E5   F3      		SBC NARG2+1
  6E7F   85   A9      		STA TEMPN1+1
  6E81   A5   1D      		LDA NARG1+1
  6E83   45   F3      		EOR NARG2+1
  6E85   10   E5      		BPL SSUMOK	;Same signs, never an overflow
  6E87   A5   1D      		LDA NARG1+1
  6E89   45   A9      		EOR TEMPN1+1
  6E8B   30   DA      		BMI ROFLOW	;Different signs, overflow
  6E8D   10   DD      		BPL SSUMOK	;(Always)
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-168
LOGO	SYSTEM FUNCTIONS

  6E8F   20   C3   56 	SPROD:	JSR GT2NUM
                      	;?	BCS <FLONUM PRODUCT>
  6E92   A5   1D      		LDA NARG1+1
  6E94   45   F3      		EOR NARG2+1
  6E96   85   A2      		STA ANSN
  6E98   A5   1D      		LDA NARG1+1
  6E9A   10   05      		BPL SPRD1
  6E9C   A2   1C      		LDX #NARG1
  6E9E   20   49   6F 		JSR COMPL
  6EA1   A5   F3      	SPRD1:	LDA NARG2+1
  6EA3   10   05      		BPL SPRD2
  6EA5   A2   F2      		LDX #NARG2
  6EA7   20   49   6F 		JSR COMPL
  6EAA   A9   00      	SPRD2:	LDA #$00
  6EAC   85   A8      		STA TEMPN1
  6EAE   85   A9      		STA TEMPN1+1
  6EB0   A0   10      		LDY #$10	;Bit counter
M  6EB2   46   F3      	MUL2:	LSR NARG2+1
  6EB4   66   F2      		ROR NARG2
  6EB6   90   11      		BCC MUL4
  6EB8   18           		CLC
  6EB9   A5   A8      	MUL3:	LDA TEMPN1	;Add multiplicand (NARG1) to partial product (TEMPN1)
  6EBB   65   1C      		ADC NARG1
  6EBD   85   A8      		STA TEMPN1
  6EBF   A5   A9      		LDA TEMPN1+1
  6EC1   65   1D      		ADC NARG1+1
  6EC3   85   A9      		STA TEMPN1+1
  6EC5   30   A0      		BMI ROFLOW
  6EC7   B0   9E      		BCS ROFLOW
  6EC9   06   1C      	MUL4:	ASL NARG1
  6ECB   26   1D      		ROL NARG1+1
  6ECD   88           	MUL4A:	DEY
AD  6ECE   D0   FF      		BNE MUL2	;Next bit
  6ED0   A5   A2      		LDA ANSN
  6ED2   10   05      		BPL MULEND
  6ED4   A2   A8      		LDX #TEMPN1
  6ED6   20   49   6F 		JSR COMPL
  6ED9   A0   A8      	MULEND:	LDY #TEMPN1
  6EDB   4C   68   56 		JMP OTPFIX
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-169
LOGO	SYSTEM FUNCTIONS

  6EDE   20   C3   56 	SDIVID:	JSR GT2NUM
                      	;?	BCS <FLONUM DIVIDE>
  6EE1   A5   F2      		LDA NARG2
  6EE3   D0   09      		BNE SDVD1
  6EE5   A5   F3      		LDA NARG2+1
  6EE7   D0   05      		BNE SDVD1
  6EE9   A9   1D      		LDA #XDBZ
  6EEB   4C   7C   60 		JMP ERROR
  6EEE   A5   1C      	SDVD1:	LDA NARG1
  6EF0   D0   09      		BNE SDVD1A
  6EF2   A5   1D      		LDA NARG1+1
  6EF4   D0   05      		BNE SDVD1A
  6EF6   A0   1C      		LDY #NARG1
  6EF8   4C   68   56 		JMP OTPFIX	;Answer is zero if numerator is zero
  6EFB   A9   00      	SDVD1A:	LDA #$00
  6EFD   85   A2      		STA ANSN	;SIGN
  6EFF   A5   1D      		LDA NARG1+1
  6F01   10   07      		BPL SDVD2
  6F03   A2   1C      		LDX #NARG1
  6F05   20   49   6F 		JSR COMPL
  6F08   E6   A2      		INC ANSN
  6F0A   A5   F3      	SDVD2:	LDA NARG2+1
  6F0C   10   0B      		BPL SDVD3
  6F0E   A2   F2      		LDX #NARG2
  6F10   20   49   6F 		JSR COMPL
  6F13   A5   A2      		LDA ANSN
  6F15   49   01      		EOR #$01
  6F17   85   A2      		STA ANSN
  6F19   A5   F2      	SDVD3:	LDA NARG2
  6F1B   85   A6      		STA TEMPN
  6F1D   A5   F3      		LDA NARG2+1
  6F1F   85   A7      		STA TEMPN+1	;Divisor for XDIVID
  6F21   A2   1C      		LDX #NARG1
  6F23   20   70   6F 		JSR XDIVID
  6F26   A5   A2      		LDA ANSN
  6F28   F0   05      		BEQ SDVD4
  6F2A   A2   1C      		LDX #NARG1
  6F2C   20   49   6F 		JSR COMPL
  6F2F   A0   1C      	SDVD4:	LDY #NARG1
  6F31   4C   68   56 		JMP OTPFIX
                      	;
  6F34   A5   E9      	SUNSUM:	LDA INFSUM
  6F36   85   60      		STA CURTOK	;(For possible error message in GT1NUM)
  6F38   A5   EA      		LDA INFSUM+1
  6F3A   85   61      		STA CURTOK+1
  6F3C   20   F7   56 		JSR GT1NUM
  6F3F   A0   1C      		LDY #NARG1
  6F41   B0   03      		BCS SNSM1
  6F43   4C   68   56 		JMP OTPFIX
  6F46   4C   64   56 	SNSM1:	JMP OTPFLO
                      	;
  6F49   B5   00      	COMPL:	LDA $00,X	;Complement and increment X pointer
  6F4B   49   FF      		EOR #$FF
  6F4D   95   00      		STA $00,X
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-170
LOGO	SYSTEM FUNCTIONS

  6F4F   B5   01      		LDA $01,X
  6F51   49   FF      		EOR #$FF
  6F53   95   01      		STA $01,X
  6F55   B5   02      		LDA $02,X
  6F57   49   FF      		EOR #$FF
  6F59   95   02      		STA $02,X
  6F5B   B5   03      		LDA $03,X
  6F5D   49   FF      		EOR #$FF
  6F5F   95   03      		STA $03,X
  6F61   F6   00      		INC $00,X
  6F63   D0   0A      		BNE COMPLR
  6F65   F6   01      		INC $01,X
  6F67   D0   06      		BNE COMPLR
  6F69   F6   02      		INC $02,X
  6F6B   D0   02      		BNE COMPLR
  6F6D   F6   03      		INC $03,X
  6F6F   60           	COMPLR:	RTS
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-171
LOGO	SYSTEM FUNCTIONS

                      	;Fast and clean division routine; assumes positive numbers.
                      	;Dividend in 00,X and 01,X; divisor in TEMPX1 and TEMPX1+1;
                      	;Quotient is placed in TEMPNH and TEMPNH+1, remainder left in
                      	;00,X and 01,X.
                      	;
  6F70   A5   A6      	XDIVID:	LDA TEMPN		;save divisor
  6F72   48           		PHA
  6F73   A5   A7      		LDA TEMPN+1
  6F75   48           		PHA
  6F76   A0   00      		LDY #$00		;zero quotient
  6F78   84   A4      		STY TEMPNH
  6F7A   84   A5      		STY TEMPNH+1
  6F7C   84   A9      		STY TEMPN1+1
  6F7E   C8           		INY
  6F7F   84   A8      		STY TEMPN1		;initialize bit-holder
M  6F81   06   A8      	NORM:	ASL TEMPN1		;normalize the divisor...
  6F83   26   A9      		ROL TEMPN1+1
  6F85   06   A6      		ASL TEMPN
  6F87   26   A7      		ROL TEMPN+1		;and the bitholder
AD  6F89   10   FF      		BPL NORM		;to the left side
  6F8B   46   A9      	SHFT:	LSR TEMPN1+1		;then back 'em off one
  6F8D   66   A8      		ROR TEMPN1
  6F8F   46   A7      		LSR TEMPN+1
  6F91   66   A6      		ROR TEMPN
  6F93   A5   A8      		LDA TEMPN1
  6F95   D0   04      		BNE DV2			;if bitholder is zero, done
  6F97   A5   A9      		LDA TEMPN1+1
  6F99   F0   20      		BEQ DONE
  6F9B   38           	DV2:	SEC			;subtract dividend from divisor
  6F9C   B5   00      		LDA 00,X
  6F9E   E5   A6      		SBC TEMPN
  6FA0   A8           		TAY
  6FA1   B5   01      		LDA 01,X
  6FA3   E5   A7      		SBC TEMPN+1
  6FA5   90   E4      		BCC SHFT		;if borrow, don't save remainder
  6FA7   94   00      		STY 00,X		;or add to result
  6FA9   95   01      		STA 01,X
  6FAB   18           		CLC
  6FAC   A5   A4      		LDA TEMPNH		;add bitholder to result
  6FAE   65   A8      		ADC TEMPN1
  6FB0   85   A4      		STA TEMPNH
  6FB2   A5   A5      		LDA TEMPNH+1
  6FB4   65   A9      		ADC TEMPN1+1
  6FB6   85   A5      		STA TEMPNH+1
  6FB8   4C   8B   6F 		JMP SHFT
  6FBB   68           	DONE:	PLA
  6FBC   85   A7      		STA TEMPN+1		;and divisor
  6FBE   68           		PLA
  6FBF   85   A6      		STA TEMPN
  6FC1   B5   00      		LDA $00,X		;quotient is left in (X), low byte of
  6FC3   A4   A4      		LDY TEMPNH		;remainder + '0 is left in A
  6FC5   94   00      		STY $00,X
  6FC7   A4   A5      		LDY TEMPNH+1
  6FC9   94   01      		STY $01,X
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-172
LOGO	SYSTEM FUNCTIONS

  6FCB   18           		CLC
  6FCC   69   30      		ADC #'0
  6FCE   60           		RTS
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-173
LOGO	SYSTEM FUNCTIONS

                      	;	Boolean Functions:
                      	;
  6FCF   20   C3   56 	SGRTR:	JSR GT2NUM
                      	;?SGRTRX:	BCS <FLONUM COMPARE>
  6FD2   A5   1D      	SGRTRX:	LDA NARG1+1
  6FD4   30   15      		BMI SGRTRM
  6FD6   A5   F3      		LDA NARG2+1
  6FD8   30   22      		BMI JTRU	;POS > NEG
  6FDA   A5   F3      	SGRTRP:	LDA NARG2+1
  6FDC   C5   1D      		CMP NARG1+1
  6FDE   90   1C      		BCC JTRU
  6FE0   D0   06      		BNE JFLS
  6FE2   A5   F2      		LDA NARG2
  6FE4   C5   1C      		CMP NARG1
  6FE6   90   14      		BCC JTRU
  6FE8   4C   90   70 	JFLS:	JMP VPLFLS
  6FEB   A5   F3      	SGRTRM:	LDA NARG2+1
  6FED   10   F9      		BPL JFLS	;NEG not > POS
  6FEF   29   7F      		AND #$7F	;Both negative, strip sign bit and compare
  6FF1   85   F3      		STA NARG2+1
  6FF3   A5   1D      		LDA NARG1+1
  6FF5   29   7F      		AND #$7F
  6FF7   85   1D      		STA NARG1+1
  6FF9   4C   DA   6F 		JMP SGRTRP
  6FFC   4C   88   70 	JTRU:	JMP VPLTRU
                      	;
  6FFF   20   C3   56 	SLESS:	JSR GT2NUM
  7002   A6   1C      		LDX NARG1	;Switch the args and call S_GREATER
  7004   A4   1D      		LDY NARG1+1
  7006   A5   F2      		LDA NARG2
  7008   86   F2      		STX NARG2
  700A   85   1C      		STA NARG1
  700C   A5   F3      		LDA NARG2+1
  700E   84   F3      		STY NARG2+1
  7010   85   1D      		STA NARG1+1
  7012   4C   D2   6F 		JMP SGRTRX
                      	;
  7015   A2   1C      	SNOT:	LDX #ARG1
  7017   20   5B   70 		JSR GTBOOL
  701A   A9   01      		LDA #$01
  701C   85   07      		STA OTPUTN
  701E   C0   00      		CPY #$00
  7020   D0   66      		BNE VPLTRU
  7022   4C   90   70 		JMP VPLFLS
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-174
LOGO	SYSTEM FUNCTIONS

  7025   A2   1E      	SBOTH:	LDX #ARG2
  7027   20   5B   70 		JSR GTBOOL
  702A   84   A3      		STY ANSN1
  702C   A2   1C      		LDX #ARG1
  702E   20   5B   70 		JSR GTBOOL
  7031   A9   01      		LDA #$01
  7033   85   07      		STA OTPUTN
  7035   C0   00      		CPY #$00
  7037   D0   57      		BNE VPLFLS
  7039   A5   A3      		LDA ANSN1
  703B   D0   53      		BNE VPLFLS
  703D   4C   88   70 		JMP VPLTRU
                      	;
  7040   A2   1E      	SEITHR:	LDX #ARG2
  7042   20   5B   70 		JSR GTBOOL
  7045   84   A3      		STY ANSN1
  7047   A2   1C      		LDX #ARG1
  7049   20   5B   70 		JSR GTBOOL
  704C   A9   01      		LDA #$01
  704E   85   07      		STA OTPUTN
  7050   C0   00      		CPY #$00
  7052   F0   34      		BEQ VPLTRU
  7054   A5   A3      		LDA ANSN1
  7056   F0   30      		BEQ VPLTRU
  7058   4C   90   70 		JMP VPLFLS
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-175
LOGO	SYSTEM FUNCTIONS

  705B   86   A2      	GTBOOL:	STX ANSN
  705D   20   66   51 		JSR VPOP
  7060   A6   A2      		LDX ANSN
  7062   B5   00      		LDA $00,X
  7064   A0   00      		LDY #$00
  7066   C5   D7      		CMP LTRUE
  7068   D0   07      		BNE GTBL1
  706A   B5   01      		LDA $01,X
  706C   C5   D8      		CMP LTRUE+1
  706E   D0   01      		BNE GTBL1
  7070   60           	SERR:	RTS
  7071   C8           	GTBL1:	INY
  7072   B5   00      		LDA $00,X
  7074   C5   CB      		CMP LFALSE
  7076   D0   06      		BNE GTBL2
  7078   B5   01      		LDA $01,X
  707A   C5   CC      		CMP LFALSE+1
  707C   F0   F2      		BEQ SERR
  707E   A4   A2      	GTBL2:	LDY ANSN
  7080   20   6F   60 		JSR PTRYOK
  7083   A9   0E      		LDA #XNTF
  7085   4C   7C   60 		JMP ERROR
                      	;
  7088   A2   D7      	VPLTRU:	LDX #LTRUE
  708A   20   38   51 		JSR VPUSHP
  708D   4C   52   41 		JMP POPJ
                      	;
  7090   A2   CB      	VPLFLS:	LDX #LFALSE
  7092   20   38   51 		JSR VPUSHP
  7095   4C   52   41 		JMP POPJ
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-176
LOGO	SYSTEM FUNCTIONS

                      	;	List Manipulation Functions:
                      	;
  7098   86   A2      	GTLSTC:	STX ANSN
  709A   B5   00      		LDA $00,X
  709C   85   A4      		STA TEMPNH
  709E   B5   01      		LDA $01,X
  70A0   85   A5      		STA TEMPNH+1	;PTR
  70A2   A0   02      		LDY #$02
  70A4   B1   A4      	GTLC2:	LDA (TEMPNH),Y
  70A6   AA           		TAX
  70A7   F0   0B      		BEQ GTLC3
  70A9   C8           		INY
  70AA   B1   A4      		LDA (TEMPNH),Y
  70AC   85   A5      	GTLC2A:	STA TEMPNH+1
  70AE   86   A4      		STX TEMPNH	;(CDR)
  70B0   88           		DEY
  70B1   4C   A4   70 		JMP GTLC2
  70B4   C8           	GTLC3:	INY
  70B5   B1   A4      		LDA (TEMPNH),Y
  70B7   D0   F3      		BNE GTLC2A
  70B9   A6   A2      		LDX ANSN
  70BB   A5   A4      		LDA TEMPNH
  70BD   95   00      		STA $00,X
  70BF   A5   A5      		LDA TEMPNH+1
  70C1   95   01      		STA $01,X
  70C3   60           		RTS
                      	;
  70C4   A2   1E      	SFPUT:	LDX #ARG2
  70C6   20   66   51 		JSR VPOP
  70C9   A2   1C      		LDX #ARG1
  70CB   20   66   51 		JSR VPOP
  70CE   A2   1E      		LDX #ARG2
  70D0   20   93   5C 		JSR GETTYP
  70D3   C9   00      		CMP #LIST
  70D5   D0   0C      		BNE SFPT1
  70D7   A2   1E      		LDX #ARG2
  70D9   A0   1C      		LDY #ARG1
  70DB   84   A2      		STY ANSN
  70DD   20   09   52 		JSR CONS
  70E0   4C   E2   74 		JMP OTPRG1
  70E3   A2   1E      	SFPT1:	LDX #ARG2
  70E5   A0   60      		LDY #CURTOK
  70E7   A9   0B      		LDA #XWTA
  70E9   4C   7C   60 		JMP ERROR
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-177
LOGO	SYSTEM FUNCTIONS

  70EC   A2   1E      	SLPUT:	LDX #ARG2
  70EE   20   66   51 		JSR VPOP
  70F1   A2   1C      		LDX #ARG1
  70F3   20   66   51 		JSR VPOP
  70F6   A2   1E      		LDX #ARG2
  70F8   20   93   5C 		JSR GETTYP
  70FB   C9   00      		CMP #LIST
  70FD   D0   E4      		BNE SFPT1
  70FF   A5   1D      		LDA ARG1+1
  7101   D0   0F      		BNE SLPUT1
  7103   A9   1C      		LDA #ARG1
  7105   85   A2      		STA ANSN
  7107   A0   1E      		LDY #ARG2
  7109   A9   00      		LDA #$00	;(Type LIST)
  710B   AA           		TAX
  710C   20   09   52 		JSR CONS
  710F   4C   E2   74 		JMP OTPRG1
  7112   A5   1E      	SLPUT1:	LDA ARG2
  7114   D0   12      		BNE SLPUT2
  7116   A5   1F      		LDA ARG2+1
  7118   D0   0E      		BNE SLPUT2
  711A   A9   1C      		LDA #ARG1
  711C   85   A2      		STA ANSN
  711E   A8           		TAY
  711F   A2   00      		LDX #$00
  7121   8A           		TXA
  7122   20   09   52 		JSR CONS
  7125   4C   E2   74 		JMP OTPRG1
  7128   A5   1C      	SLPUT2:	LDA ARG1
  712A   85   86      		STA MARK2	;Protect the last element
  712C   A5   1D      		LDA ARG1+1
  712E   85   87      		STA MARK2+1
  7130   A5   1E      		LDA ARG2
  7132   85   88      		STA MARK3	;Protect the original list (or what's left of it)
  7134   A5   1F      		LDA ARG2+1
  7136   85   89      		STA MARK3+1
  7138   A0   00      		LDY #$00
  713A   B1   88      		LDA (MARK3),Y
  713C   85   A8      		STA TEMPN1
  713E   C8           		INY
  713F   B1   88      		LDA (MARK3),Y
  7141   85   A9      		STA TEMPN1+1	;(CAR) First element
  7143   C8           		INY
  7144   B1   88      		LDA (MARK3),Y
  7146   AA           		TAX
  7147   C8           		INY
  7148   B1   88      		LDA (MARK3),Y
  714A   85   89      		STA MARK3+1
  714C   86   88      		STX MARK3	;(CDR)
  714E   A9   84      		LDA #MARK1	;Pointer to start of new list
  7150   85   A2      		STA ANSN
  7152   A2   00      		LDX #$00
  7154   8A           		TXA
  7155   A0   A8      		LDY #TEMPN1
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-178
LOGO	SYSTEM FUNCTIONS

  7157   20   09   52 		JSR CONS
  715A   A5   84      		LDA MARK1
  715C   85   AA      		STA TEMPN2	;Pointer to newest node
  715E   A5   85      		LDA MARK1+1
  7160   85   AB      		STA TEMPN2+1
  7162   A5   88      	SLPTW:	LDA MARK3	;Make a new list, element by element
  7164   D0   04      		BNE SLPTW1
  7166   A5   89      		LDA MARK3+1
  7168   F0   35      		BEQ SLPT2
  716A   A0   00      	SLPTW1:	LDY #$00
  716C   B1   88      		LDA (MARK3),Y
  716E   85   A8      		STA TEMPN1	;Get an element
  7170   C8           		INY
  7171   B1   88      		LDA (MARK3),Y
  7173   85   A9      		STA TEMPN1+1	;(CAR)
  7175   C8           		INY
  7176   B1   88      		LDA (MARK3),Y
  7178   AA           		TAX
  7179   C8           		INY
  717A   B1   88      		LDA (MARK3),Y
  717C   85   89      		STA MARK3+1
  717E   86   88      		STX MARK3	;(CDR) Advance element pointer
  7180   A9   A6      		LDA #TEMPN	;New pointer to newest node
  7182   85   A2      		STA ANSN
  7184   A2   00      		LDX #$00
  7186   8A           		TXA
  7187   A0   A8      		LDY #TEMPN1
  7189   20   09   52 		JSR CONS
  718C   A0   02      		LDY #$02
  718E   A5   A6      		LDA TEMPN
  7190   91   AA      		STA (TEMPN2),Y	;Pointer to last node
  7192   AA           		TAX
  7193   C8           		INY
  7194   A5   A7      		LDA TEMPN+1
  7196   91   AA      		STA (TEMPN2),Y	;(CDR) Link new node onto list
  7198   85   AB      		STA TEMPN2+1
  719A   86   AA      		STX TEMPN2
  719C   4C   62   71 		JMP SLPTW
  719F   A9   A6      	SLPT2:	LDA #TEMPN
  71A1   85   A2      		STA ANSN
  71A3   A2   00      		LDX #$00
  71A5   8A           		TXA
  71A6   A0   1C      		LDY #ARG1
  71A8   20   09   52 		JSR CONS	;Get a pointer to first argument
  71AB   A0   02      		LDY #$02
  71AD   A5   A6      		LDA TEMPN
  71AF   91   AA      		STA (TEMPN2),Y
  71B1   C8           		INY
  71B2   A5   A7      		LDA TEMPN+1
  71B4   91   AA      		STA (TEMPN2),Y	;(RPLACD) Link final node on
  71B6   4C   CB   71 		JMP SSN2	;MARK1 points to our new list
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-179
LOGO	SYSTEM FUNCTIONS

  71B9   A5   05      	SSNTNC:	LDA NARGS
  71BB   10   04      		BPL SSN1
  71BD   49   FF      		EOR #$FF	;NARGS := - NARGS - 1
  71BF   85   05      		STA NARGS
  71C1   A9   00      	SSN1:	LDA #$00
  71C3   85   84      		STA MARK1
  71C5   85   85      		STA MARK1+1
  71C7   A5   05      	SSNW:	LDA NARGS
  71C9   D0   19      		BNE SSNWA
  71CB   A5   84      	SSN2:	LDA MARK1
  71CD   85   1C      		STA ARG1
  71CF   A5   85      		LDA MARK1+1
  71D1   85   1D      		STA ARG1+1
  71D3   A9   00      		LDA #$00
  71D5   85   84      		STA MARK1
  71D7   85   86      		STA MARK2
  71D9   85   88      		STA MARK3
  71DB   85   85      		STA MARK1+1
  71DD   85   87      		STA MARK2+1
  71DF   85   89      		STA MARK3+1
  71E1   4C   E2   74 		JMP OTPRG1
  71E4   A2   86      	SSNWA:	LDX #MARK2
  71E6   20   66   51 		JSR VPOP
  71E9   A2   86      		LDX #MARK2
  71EB   20   93   5C 		JSR GETTYP
  71EE   C9   00      		CMP #LIST
  71F0   F0   0E      		BEQ SSNW1
  71F2   A2   84      		LDX #MARK1
  71F4   86   A2      		STX ANSN
  71F6   A0   86      		LDY #MARK2
  71F8   A9   00      		LDA #LIST
  71FA   20   09   52 		JSR CONS
  71FD   4C   63   72 		JMP SSNW2
  7200   A5   1A      	SSNW1:	LDA VSP
  7202   85   A8      		STA TEMPN1
  7204   A5   1B      		LDA VSP+1
  7206   85   A9      		STA TEMPN1+1
  7208   A9   58      		LDA #SSNERR&$FF
  720A   85   16      		STA ERRRET
  720C   A9   72      		LDA #SSNERR^
  720E   85   17      		STA ERRRET+1
  7210   BA           		TSX
  7211   86   11      		STX RETADR	;Save all necessary return addresses
  7213   A5   86      	SSNX:	LDA MARK2
  7215   D0   04      		BNE SSNX1
  7217   A5   87      		LDA MARK2+1
  7219   F0   1E      		BEQ SSNY
  721B   A0   00      	SSNX1:	LDY #$00
  721D   B1   86      		LDA (MARK2),Y
  721F   85   88      		STA MARK3
  7221   C8           		INY
  7222   B1   86      		LDA (MARK2),Y
  7224   85   89      		STA MARK3+1	;(CAR)
  7226   C8           		INY
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-180
LOGO	SYSTEM FUNCTIONS

  7227   B1   86      		LDA (MARK2),Y
  7229   AA           		TAX
  722A   C8           		INY
  722B   B1   86      		LDA (MARK2),Y
  722D   85   87      		STA MARK2+1
  722F   86   86      		STX MARK2	;(CDR)
  7231   A2   88      		LDX #MARK3
  7233   20   38   51 		JSR VPUSHP
  7236   4C   13   72 		JMP SSNX
  7239   A5   A8      	SSNY:	LDA TEMPN1
  723B   C5   1A      		CMP VSP
  723D   D0   06      		BNE SSNY1
  723F   A5   A9      		LDA TEMPN1+1
  7241   C5   1B      		CMP VSP+1
  7243   F0   1E      		BEQ SSNW2
  7245   A2   88      	SSNY1:	LDX #MARK3
  7247   20   66   51 		JSR VPOP
  724A   A2   84      		LDX #MARK1
  724C   86   A2      		STX ANSN
  724E   A0   88      		LDY #MARK3
  7250   A9   00      		LDA #LIST
  7252   20   09   52 		JSR CONS
  7255   4C   39   72 		JMP SSNY
  7258   A5   A8      	SSNERR:	LDA TEMPN1
  725A   85   1A      		STA VSP
  725C   A5   A9      		LDA TEMPN1+1
  725E   85   1B      		STA VSP+1
  7260   4C   2B   48 		JMP ERROR1
  7263   C6   05      	SSNW2:	DEC NARGS
  7265   4C   C7   71 		JMP SSNW
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-181
LOGO	SYSTEM FUNCTIONS

                      	;	Miscellaneous Functions:
                      	;
  7268   A2   1E      	SMAKE:	LDX #ARG2
  726A   20   66   51 		JSR VPOP
  726D   A2   1C      		LDX #ARG1
  726F   20   66   51 		JSR VPOP
  7272   A2   1C      		LDX #ARG1
  7274   20   93   5C 		JSR GETTYP
  7277   C9   01      		CMP #ATOM
  7279   F0   04      		BEQ SMAKE1
  727B   C9   07      		CMP #SATOM
  727D   D0   0E      		BNE SMAKE2
  727F   A2   1E      	SMAKE1:	LDX #ARG2
  7281   A0   1C      		LDY #ARG1
  7283   20   D7   51 		JSR PUTVAL
  7286   A9   00      		LDA #$00
  7288   85   07      		STA OTPUTN
  728A   4C   52   41 		JMP POPJ
  728D   A2   1C      	SMAKE2:	LDX #ARG1
  728F   A0   60      		LDY #CURTOK
  7291   A9   0B      		LDA #XWTA
  7293   4C   7C   60 		JMP ERROR
                      	;
  7296   A5   78      	SOUTPT:	LDA LEVNUM
  7298   D0   04      		BNE SOTPT2
  729A   A5   79      		LDA LEVNUM+1
  729C   F0   09      		BEQ SOTPT1
  729E   A9   01      	SOTPT2:	LDA #$01
  72A0   85   0C      		STA STPFLG
  72A2   85   07      		STA OTPUTN
  72A4   4C   52   41 		JMP POPJ
  72A7   A0   60      	SOTPT1:	LDY #CURTOK
  72A9   A9   0D      		LDA #XNTL
  72AB   4C   7C   60 		JMP ERROR
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-182
LOGO	SYSTEM FUNCTIONS

  72AE   A5   78      	SSTOP:	LDA LEVNUM
  72B0   D0   04      		BNE SSTOP1
  72B2   A5   79      		LDA LEVNUM+1
  72B4   F0   F1      		BEQ SOTPT1
  72B6   A2   00      	SSTOP1:	LDX #$00
  72B8   86   07      		STX OTPUTN
  72BA   E8           		INX
  72BB   86   0C      		STX STPFLG
  72BD   4C   52   41 		JMP POPJ
                      	;
  72C0   A9   00      	SCOMMT:	LDA #$00
  72C2   85   5E      		STA TOKPTR
  72C4   85   5F      		STA TOKPTR+1
  72C6   85   07      		STA OTPUTN
  72C8   A5   06      		LDA EXPOUT
  72CA   D0   03      		BNE SCMMT1
  72CC   4C   52   41 		JMP POPJ
  72CF   A9   02      	SCMMT1:	LDA #XEOL
  72D1   4C   7C   60 		JMP ERROR
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-183
LOGO	SYSTEM FUNCTIONS

  72D4   A9   4F      	SDEBUG:	LDA #'O
  72D6   20   F8   69 		JSR TPCHR
  72D9   A9   00      		LDA #$00
  72DB   85   07      		STA OTPUTN
  72DD   C5   0A      		CMP DBUGSW
  72DF   D0   0D      		BNE SDBG1
  72E1   E6   0A      		INC DBUGSW
  72E3   A9   4E      		LDA #'N
  72E5   20   F8   69 		JSR TPCHR
  72E8   20   DC   69 		JSR BREAK1
  72EB   4C   52   41 		JMP POPJ
  72EE   85   0A      	SDBG1:	STA DBUGSW
  72F0   A9   46      		LDA #'F
  72F2   20   F8   69 		JSR TPCHR
  72F5   A9   46      		LDA #'F
  72F7   20   F8   69 		JSR TPCHR
  72FA   20   DC   69 		JSR BREAK1
  72FD   4C   52   41 		JMP POPJ
                      	;
  7300   A2   00      	SLINES:	LDX #$00
  7302   86   07      		STX OTPUTN
  7304   A5   09      		LDA NUMSW
  7306   D0   0F      		BNE SLINS1
  7308   E6   09      		INC NUMSW
  730A   A2   94      		LDX #NMMSG1&$FF	;"USE LINE NUMBERS"
  730C   A0   8D      		LDY #NMMSG1^
  730E   20   1D   53 		JSR PRTSTR
  7311   20   DC   69 		JSR BREAK1
  7314   4C   52   41 		JMP POPJ
  7317   86   09      	SLINS1:	STX NUMSW
  7319   A2   A5      		LDX #NMMSG2&$FF	;"NO LINE NUMBERS"
  731B   A0   8D      		LDY #NMMSG2^
  731D   20   1D   53 		JSR PRTSTR
  7320   20   DC   69 		JSR BREAK1
  7323   4C   52   41 		JMP POPJ
                      	;
  7326   A2   00      	SCNTIN:	LDX #$00
  7328   86   07      		STX OTPUTN
  732A   E8           		INX
  732B   86   0C      		STX STPFLG
  732D   86   0D      		STX DCOFLG
  732F   4C   52   41 		JMP POPJ
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-184
LOGO	SYSTEM FUNCTIONS

  7332   E6   7E      	SIF:	INC IFLEVL
  7334   D0   02      		BNE SIFA
  7336   E6   7F      		INC IFLEVL+1
  7338   A9   00      	SIFA:	LDA #$00
  733A   85   07      		STA OTPUTN
  733C   20   D0   43 		JSR GTNXTK
  733F   A5   62      		LDA NEXTOK
  7341   C5   D3      		CMP LTHEN
  7343   D0   0B      		BNE SIF1
  7345   A5   63      		LDA NEXTOK+1
  7347   C5   D4      		CMP LTHEN+1
  7349   D0   05      		BNE SIF1
  734B   A2   5E      		LDX #TOKPTR
  734D   20   00   54 		JSR TTKADV
  7350   A2   1C      	SIF1:	LDX #ARG1
  7352   20   5B   70 		JSR GTBOOL
  7355   C0   00      		CPY #$00
  7357   D0   03      		BNE SIF2
  7359   4C   52   41 	SIF3A:	JMP POPJ
  735C   A2   62      	SIF2:	LDX #NEXTOK
  735E   20   27   59 		JSR EXIFSC
  7361   A5   5E      		LDA TOKPTR
  7363   D0   04      		BNE SIF3
  7365   A5   5F      		LDA TOKPTR+1
  7367   F0   F0      		BEQ SIF3A
  7369   A5   62      	SIF3:	LDA NEXTOK
  736B   C5   C7      		CMP LELSE
  736D   D0   EA      		BNE SIF3A
  736F   A5   63      		LDA NEXTOK+1
  7371   C5   C8      		CMP LELSE+1
  7373   D0   E4      		BNE SIF3A
  7375   A2   5E      		LDX #TOKPTR
  7377   20   00   54 		JSR TTKADV
  737A   4C   52   41 		JMP POPJ
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-185
LOGO	SYSTEM FUNCTIONS

  737D   38           	SELSE:	SEC
  737E   A5   7E      		LDA IFLEVL
  7380   E9   01      		SBC #$01
  7382   85   7E      		STA IFLEVL
  7384   A5   7F      		LDA IFLEVL+1
  7386   E9   00      		SBC #$00
  7388   85   7F      		STA IFLEVL+1
  738A   90   1B      		BCC SELSE1
  738C   A9   00      		LDA #$00
  738E   85   07      		STA OTPUTN
  7390   A5   7E      		LDA IFLEVL
  7392   D0   0B      		BNE SELSE2
  7394   A5   7F      		LDA IFLEVL+1
  7396   D0   07      		BNE SELSE2
  7398   85   5E      		STA TOKPTR
  739A   85   5F      		STA TOKPTR+1
  739C   4C   52   41 		JMP POPJ
  739F   A2   AA      	SELSE2:	LDX #TEMPN2
  73A1   20   27   59 		JSR EXIFSC
  73A4   4C   52   41 		JMP POPJ
  73A7   A9   0F      	SELSE1:	LDA #XELS
  73A9   4C   7C   60 		JMP ERROR
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-186
LOGO	SYSTEM FUNCTIONS

  73AC   20   B5   52 	SGO:	JSR STPPEK
  73AF   A9   00      		LDA #$00
  73B1   85   07      		STA OTPUTN
  73B3   A2   1C      		LDX #ARG1
  73B5   20   66   51 		JSR VPOP
  73B8   A2   1C      		LDX #ARG1
  73BA   20   93   5C 		JSR GETTYP
  73BD   C9   01      		CMP #ATOM
  73BF   F0   07      		BEQ SGO1
  73C1   C9   07      		CMP #SATOM
  73C3   F0   03      		BEQ SGO1
  73C5   4C   41   74 		JMP SRUN1
  73C8   A9   0A      	SGO1:	LDA #LATOM
  73CA   A2   1C      		LDX #ARG1
  73CC   20   93   52 		JSR PUTTYP
  73CF   A5   6C      		LDA FBODY
  73D1   85   74      		STA GOPTR
  73D3   A5   6D      		LDA FBODY+1
  73D5   85   75      		STA GOPTR+1
  73D7   A2   74      		LDX #GOPTR
  73D9   20   E7   55 		JSR ULNADV
  73DC   A5   74      	SGOW:	LDA GOPTR
  73DE   D0   04      		BNE SGOW1
  73E0   A5   75      		LDA GOPTR+1
  73E2   F0   42      		BEQ SGOR
  73E4   A2   A8      	SGOW1:	LDX #TEMPN1
  73E6   A0   74      		LDY #GOPTR
  73E8   20   A4   54 		JSR GTTULN
  73EB   A0   00      		LDY #$00
  73ED   B1   A8      		LDA (TEMPN1),Y
  73EF   85   A6      		STA TEMPN
  73F1   C8           		INY
  73F2   B1   A8      		LDA (TEMPN1),Y
  73F4   85   A7      		STA TEMPN+1	;(GETTOK)
  73F6   A2   A8      		LDX #TEMPN1
  73F8   20   00   54 		JSR TTKADV
  73FB   A0   00      		LDY #$00
  73FD   B1   A8      		LDA (TEMPN1),Y
  73FF   AA           		TAX
  7400   C8           		INY
  7401   B1   A8      		LDA (TEMPN1),Y
  7403   85   A9      		STA TEMPN1+1
  7405   86   A8      		STX TEMPN1	;(GETTOK)
  7407   A5   1C      		LDA ARG1
  7409   C5   A8      		CMP TEMPN1
  740B   D0   06      		BNE SGOW2
  740D   A5   1D      		LDA ARG1+1
  740F   C5   A9      		CMP TEMPN1+1
  7411   F0   08      		BEQ SGOE1
  7413   A2   74      	SGOW2:	LDX #GOPTR
  7415   20   E7   55 		JSR ULNADV
  7418   4C   DC   73 		JMP SGOW
  741B   A5   A6      	SGOE1:	LDA TEMPN
  741D   85   70      		STA LINNUM
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-187
LOGO	SYSTEM FUNCTIONS

  741F   A5   A7      		LDA TEMPN+1
  7421   85   71      		STA LINNUM+1
  7423   4C   52   41 		JMP POPJ
  7426   A0   1C      	SGOR:	LDY #ARG1
  7428   A9   14      		LDA #XLNF
  742A   4C   7C   60 		JMP ERROR
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-188
LOGO	SYSTEM FUNCTIONS

  742D   20   B5   52 	SRUN:	JSR STPPEK
  7430   A2   1C      		LDX #ARG1
  7432   20   66   51 		JSR VPOP
  7435   A2   1C      		LDX #ARG1
  7437   20   93   5C 		JSR GETTYP
  743A   C9   00      		CMP #LIST
  743C   D0   03      		BNE SRUN1
  743E   4C   0D   44 		JMP RUNHAN
  7441   4C   8D   72 	SRUN1:	JMP SMAKE2	;(ERROR XWTA,ARG1,CURTOK)
                      	;
  7444   A2   1E      	STHING:	LDX #ARG2
  7446   20   66   51 		JSR VPOP
  7449   A2   1E      		LDX #ARG2
  744B   20   93   5C 		JSR GETTYP
  744E   C9   01      		CMP #ATOM
  7450   F0   09      		BEQ STH1
  7452   C9   07      		CMP #SATOM
  7454   F0   05      		BEQ STH1
  7456   A2   1E      		LDX #ARG2
  7458   4C   5A   75 		JMP STLR4A
  745B   A2   1C      	STH1:	LDX #ARG1
  745D   A0   1E      		LDY #ARG2
  745F   20   BF   51 		JSR GETVAL
  7462   A5   1D      		LDA ARG1+1
  7464   D0   0B      		BNE STH2
  7466   A5   1C      		LDA ARG1
  7468   F0   07      		BEQ STH2
  746A   A0   1E      		LDY #ARG2
  746C   A9   04      		LDA #XHNV
  746E   4C   7C   60 		JMP ERROR
  7471   4C   E2   74 	STH2:	JMP OTPRG1
                      	;
  7474   A9   01      	SPTHNG:	LDA #$01
  7476   85   07      		STA OTPUTN
  7478   A2   1E      		LDX #ARG2
  747A   20   66   51 		JSR VPOP
  747D   A2   1E      		LDX #ARG2
  747F   20   93   5C 		JSR GETTYP
  7482   C9   01      		CMP #ATOM
  7484   F0   07      		BEQ SPTH1
  7486   C9   07      		CMP #SATOM
  7488   F0   03      		BEQ SPTH1
  748A   4C   90   70 	SPTH2:	JMP VPLFLS
  748D   A2   1C      	SPTH1:	LDX #ARG1
  748F   A0   1E      		LDY #ARG2
  7491   20   BF   51 		JSR GETVAL
  7494   A5   1D      		LDA ARG1+1
  7496   D0   04      		BNE SPTH3
  7498   A5   1C      		LDA ARG1
  749A   D0   EE      		BNE SPTH2
  749C   4C   88   70 	SPTH3:	JMP VPLTRU
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-189
LOGO	SYSTEM FUNCTIONS

  749F   A9   01      	SPWRDP:	LDA #$01
  74A1   85   07      		STA OTPUTN
  74A3   A2   1C      		LDX #ARG1
  74A5   20   66   51 		JSR VPOP
  74A8   A2   1C      		LDX #ARG1
  74AA   20   93   5C 		JSR GETTYP
  74AD   C9   01      		CMP #ATOM
  74AF   F0   EB      		BEQ SPTH3
  74B1   C9   07      		CMP #SATOM
  74B3   F0   E7      		BEQ SPTH3
  74B5   C9   03      		CMP #FIX
  74B7   F0   E3      		BEQ SPTH3
  74B9   C9   04      		CMP #FLO
  74BB   F0   DF      		BEQ SPTH3
  74BD   4C   90   70 		JMP VPLFLS
                      	;
  74C0   38           	SNODES:	SEC
  74C1   A9   98      		LDA #TYPLEN&$FF
  74C3   E5   14      		SBC NNODES
  74C5   85   A8      		STA TEMPN1
  74C7   A9   09      		LDA #TYPLEN^
  74C9   E5   15      		SBC NNODES+1
  74CB   85   A9      		STA TEMPN1+1
  74CD   A0   A8      		LDY #TEMPN1
  74CF   4C   4D   56 		JMP OTPFX1
                      	;
  74D2   A9   3C      	SREQU:	LDA #RPRMPT
  74D4   20   F8   69 		JSR TPCHR
  74D7   A0   1C      		LDY #ARG1
  74D9   20   42   4A 		JSR READLN
  74DC   98           		TYA
  74DD   F0   03      		BEQ OTPRG1	;Y zero means OK
  74DF   4C   2B   48 		JMP ERROR1
  74E2   A9   01      	OTPRG1:	LDA #$01
  74E4   85   07      		STA OTPUTN
  74E6   A2   1C      		LDX #ARG1
  74E8   20   38   51 		JSR VPUSHP
  74EB   4C   52   41 		JMP POPJ
                      	;
  74EE   20   69   61 	SGCOLL:	JSR GARCOL
  74F1   A9   00      		LDA #$00
  74F3   85   07      		STA OTPUTN
  74F5   4C   52   41 		JMP POPJ
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-190
LOGO	SYSTEM FUNCTIONS

  74F8   20   54   69 	SPATCH:	JSR PATSTP	;get arg to pat
  74FB   20   6F   68 		JSR CLEDBF	;clear the edit buffer
  74FE   A9   1C      		LDA #ARG1
  7500   20   53   68 		JSR PATTXT	;get text into buffer
  7503   A9   99      		LDA #PATERR&$FF
  7505   85   16      		STA ERRRET
  7507   A9   69      		LDA #PATERR^	;save the address of the error return
  7509   85   17      		STA ERRRET+1	;subroutine for this function
  750B   BA           		TSX
  750C   86   11      		STX RETADR
  750E   A9   00      		LDA #EDBUF&$FF
  7510   85   BB      		STA TEMPX1	;set pointer to beginnning of buffer
  7512   A9   20      		LDA #EDBUF^
  7514   85   BC      		STA TEMPX1+1
  7516   A9   17      		LDA #$17	;Window bottom to allow display of
  7518   85   23      		STA WNDBTM	;"Apple Logo Editor" crock
  751A   A9   00      		LDA #$00
  751C   85   25      		STA CV
  751E   85   24      		STA CH		;position cursor at top left
  7520   20   A6   69 		JSR PATNYM	;print editor name
  7523   20   F3   68 		JSR EDSPBF	;call edit-display-buffer
  7526   20   AB   68 		JSR PATLOP	;call text and command handling loop
  7529   60           		RTS
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-191
LOGO	SYSTEM FUNCTIONS

  752A   A5   08      	STITLE:	LDA EDSW
  752C   F0   15      		BEQ STTLR1
  752E   A5   78      		LDA LEVNUM
  7530   D0   16      		BNE STTLR2
  7532   A5   79      		LDA LEVNUM+1
  7534   D0   12      		BNE STTLR2
  7536   A5   5E      		LDA TOKPTR
  7538   D0   27      		BNE STTL1
  753A   A5   5F      		LDA TOKPTR+1
  753C   D0   23      		BNE STTL1
  753E   85   07      		STA OTPUTN
  7540   4C   52   41 		JMP POPJ
  7543   A9   18      	STTLR1:	LDA #XNED
  7545   4C   7C   60 		JMP ERROR
  7548   A9   17      	STTLR2:	LDA #XETL
  754A   4C   7C   60 		JMP ERROR
  754D   A0   AC      	STTLR3:	LDY #TEMPN3
  754F   20   6F   60 		JSR PTRYOK
  7552   A9   0C      		LDA #XUBL
  7554   4C   7C   60 		JMP ERROR
  7557   20   64   60 	STTLR4:	JSR PTRXOK
  755A   A0   60      	STLR4A:	LDY #CURTOK
  755C   A9   0B      		LDA #XWTA
  755E   4C   7C   60 		JMP ERROR
  7561   A0   00      	STTL1:	LDY #$00
  7563   B1   5E      		LDA (TOKPTR),Y
  7565   85   AC      		STA TEMPN3	;(ATOMM)
  7567   C8           		INY
  7568   B1   5E      		LDA (TOKPTR),Y
  756A   85   AD      		STA TEMPN3+1	;(CAR)
  756C   C8           		INY
  756D   B1   5E      		LDA (TOKPTR),Y
  756F   AA           		TAX
  7570   C8           		INY
  7571   B1   5E      		LDA (TOKPTR),Y
  7573   85   5F      		STA TOKPTR+1
  7575   85   A9      		STA TEMPN1+1	;(ARGLIST)
  7577   86   5E      		STX TOKPTR	;(CDR)
  7579   86   A8      		STX TEMPN1
  757B   A2   AC      		LDX #TEMPN3
  757D   20   93   5C 		JSR GETTYP
  7580   C9   07      		CMP #SATOM
  7582   F0   C9      		BEQ STTLR3
  7584   C9   01      		CMP #ATOM
  7586   D0   CF      		BNE STTLR4
  7588   A5   AC      		LDA TEMPN3
  758A   C5   80      		CMP EDTATM
  758C   D0   06      		BNE STTL2
  758E   A5   AD      		LDA TEMPN3+1
  7590   C5   81      		CMP EDTATM+1
  7592   F0   1F      		BEQ STTL3
  7594   A2   80      	STTL2:	LDX #EDTATM
  7596   A9   AA      		LDA #TEMPN2	;(FUN)
  7598   20   32   55 		JSR GETFUN
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-192
LOGO	SYSTEM FUNCTIONS

  759B   A2   80      		LDX #EDTATM
  759D   20   11   55 		JSR UNFUNC
  75A0   A5   AC      		LDA TEMPN3
  75A2   85   80      		STA EDTATM
  75A4   85   82      		STA PODEFL
  75A6   A5   AD      		LDA TEMPN3+1
  75A8   85   81      		STA EDTATM+1
  75AA   85   83      		STA PODEFL+1
  75AC   A0   AA      		LDY #TEMPN2
  75AE   A2   80      		LDX #EDTATM
  75B0   20   83   56 		JSR PUTFUN
  75B3   A9   00      	STTL3:	LDA #$00
  75B5   85   A3      		STA ANSN1
  75B7   A5   5E      	STTLW:	LDA TOKPTR
  75B9   D0   04      		BNE STTLW1
  75BB   A5   5F      		LDA TOKPTR+1
  75BD   F0   3C      		BEQ STTLWE
  75BF   A0   00      	STTLW1:	LDY #$00
  75C1   B1   5E      		LDA (TOKPTR),Y
  75C3   85   A6      		STA TEMPN
  75C5   C8           		INY
  75C6   B1   5E      		LDA (TOKPTR),Y
  75C8   85   A7      		STA TEMPN+1	;(CAR)
  75CA   C8           		INY
  75CB   B1   5E      		LDA (TOKPTR),Y
  75CD   AA           		TAX
  75CE   C8           		INY
  75CF   B1   5E      		LDA (TOKPTR),Y
  75D1   85   5F      		STA TOKPTR+1
  75D3   86   5E      		STX TOKPTR	;(CDR)
  75D5   A5   A6      		LDA TEMPN
  75D7   C5   C1      		CMP COMMNT
  75D9   D0   06      		BNE STTLW2
  75DB   A5   A7      		LDA TEMPN+1
  75DD   C5   C2      		CMP COMMNT+1
  75DF   F0   D6      		BEQ STTLW
  75E1   A2   A6      	STTLW2:	LDX #TEMPN
  75E3   20   93   5C 		JSR GETTYP
  75E6   C9   01      		CMP #ATOM
  75E8   F0   0C      		BEQ STTLW3
  75EA   C9   07      		CMP #SATOM
  75EC   F0   08      		BEQ STTLW3
  75EE   20   09   7A 		JSR EXTEDT
  75F1   A2   A6      		LDX #TEMPN
  75F3   4C   57   75 		JMP STTLR4
  75F6   E6   A3      	STTLW3:	INC ANSN1
  75F8   4C   B7   75 		JMP STTLW
  75FB   A0   00      	STTLWE:	LDY #$00
  75FD   84   5E      		STY TOKPTR
  75FF   84   5F      		STY TOKPTR+1
  7601   84   07      		STY OTPUTN
  7603   A5   A8      		LDA TEMPN1
  7605   91   96      		STA (EDBOD),Y
  7607   C8           		INY
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-193
LOGO	SYSTEM FUNCTIONS

  7608   A5   A9      		LDA TEMPN1+1
  760A   91   96      		STA (EDBOD),Y	;(RPLACA)
  760C   A2   80      		LDX #EDTATM
  760E   A9   A8      		LDA #TEMPN1
  7610   20   32   55 		JSR GETFUN
  7613   A0   04      		LDY #$04
  7615   A5   A3      		LDA ANSN1
  7617   91   A8      		STA (TEMPN1),Y	;(PUTNGS)
  7619   4C   52   41 		JMP POPJ
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-194
LOGO	SYSTEM FUNCTIONS

  761C   A5   12      	SREAD:	LDA INDEV
  761E   D0   08      		BNE SERR4
  7620   E6   12      		INC INDEV
  7622   20   E4   69 		JSR RESETW
  7625   4C   51   44 		JMP SREAD1
  7628   4C   52   41 	SERR4:	JMP POPJ
                      	;
  762B   A2   1C      	SPRINT:	LDX #ARG1
  762D   20   66   51 		JSR VPOP
  7630   A0   1C      		LDY #ARG1
  7632   A9   01      		LDA #$01
  7634   20   A4   65 		JSR LTYPE
  7637   20   DC   69 		JSR BREAK1
  763A   A9   00      	SPRNT1:	LDA #$00
  763C   85   07      		STA OTPUTN
  763E   4C   52   41 		JMP POPJ
                      	;
  7641   A2   1C      	STYPE:	LDX #ARG1
  7643   20   66   51 		JSR VPOP
  7646   A0   1C      		LDY #ARG1
  7648   A9   01      		LDA #$01
  764A   20   A4   65 		JSR LTYPE
  764D   4C   3A   76 		JMP SPRNT1
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-195
LOGO	SYSTEM FUNCTIONS

  7650   A2   1E      	SDEFIN:	LDX #ARG2
  7652   20   66   51 		JSR VPOP
  7655   A2   1C      		LDX #ARG1
  7657   20   66   51 		JSR VPOP
  765A   A2   1C      		LDX #ARG1
  765C   20   93   5C 		JSR GETTYP
  765F   C9   01      		CMP #ATOM
  7661   D0   2B      		BNE SDFNR1
  7663   A2   1E      		LDX #ARG2
  7665   20   93   5C 		JSR GETTYP
  7668   C9   00      		CMP #LIST
  766A   D0   25      		BNE SDFNR2
  766C   A0   00      		LDY #$00
  766E   B1   1E      		LDA (ARG2),Y
  7670   85   A6      		STA TEMPN
  7672   C8           		INY
  7673   B1   1E      		LDA (ARG2),Y
  7675   85   A7      		STA TEMPN+1	;(CAR)
  7677   A2   A6      		LDX #TEMPN
  7679   20   93   5C 		JSR GETTYP
  767C   C9   00      		CMP #LIST
  767E   D0   11      		BNE SDFNR2
  7680   A0   1C      		LDY #ARG1
  7682   A2   1E      		LDX #ARG2
  7684   20   68   5E 		JSR DEFUN
  7687   A9   00      		LDA #$00
  7689   85   07      		STA OTPUTN
  768B   4C   52   41 		JMP POPJ
  768E   4C   8D   72 	SDFNR1:	JMP SMAKE2
  7691   4C   E3   70 	SDFNR2:	JMP SFPT1
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-196
LOGO	SYSTEM FUNCTIONS

  7694   A2   1C      	STEXT:	LDX #ARG1
  7696   20   66   51 		JSR VPOP
  7699   A2   1C      		LDX #ARG1
  769B   20   93   5C 		JSR GETTYP
  769E   C9   01      		CMP #ATOM
  76A0   D0   EC      		BNE SDFNR1
  76A2   A2   1C      		LDX #ARG1
  76A4   A9   B0      		LDA #TEMPN5	;FUN is TEMPN5
  76A6   20   32   55 		JSR GETFUN
  76A9   A5   B1      		LDA TEMPN5+1
  76AB   D0   07      		BNE STEXT1
  76AD   85   B5      		STA TEMPN6	;BODY is TEMPN6
  76AF   85   B6      		STA TEMPN6+1
  76B1   4C   66   77 		JMP STEXT3
  76B4   A0   02      	STEXT1:	LDY #$02
  76B6   B1   B0      		LDA (TEMPN5),Y
  76B8   85   B5      		STA TEMPN6
  76BA   C8           		INY
  76BB   B1   B0      		LDA (TEMPN5),Y
  76BD   85   B6      		STA TEMPN6+1	;(CDR)
  76BF   A2   B5      		LDX #TEMPN6
  76C1   20   93   5C 		JSR GETTYP
  76C4   C9   00      		CMP #LIST
  76C6   F0   13      		BEQ STXT1A
  76C8   C9   0B      		CMP #FPACK
  76CA   F0   03      		BEQ STXT1B
  76CC   20   BD   50 		JSR SYSBUG
  76CF   A0   B5      	STXT1B:	LDY #TEMPN6
  76D1   A2   B0      		LDX #TEMPN5
  76D3   A9   01      		LDA #$01
  76D5   20   58   5D 		JSR UNSTUF
  76D8   4C   66   77 		JMP STEXT3
  76DB   A5   B5      	STXT1A:	LDA TEMPN6
  76DD   85   B0      		STA TEMPN5
  76DF   A5   B6      		LDA TEMPN6+1
  76E1   85   B1      		STA TEMPN5+1
  76E3   A5   1A      		LDA VSP
  76E5   85   A8      		STA TEMPN1	;TEMPN1 is STACK
  76E7   A5   1B      		LDA VSP+1
  76E9   85   A9      		STA TEMPN1+1
  76EB   A0   00      		LDY #$00
  76ED   B1   B0      		LDA (TEMPN5),Y
  76EF   85   AA      		STA TEMPN2	;TEMPN2 is LINE
  76F1   C8           		INY
  76F2   B1   B0      		LDA (TEMPN5),Y
  76F4   85   AB      		STA TEMPN2+1	;(CAR)
  76F6   C8           		INY
  76F7   B1   B0      		LDA (TEMPN5),Y
  76F9   AA           		TAX
  76FA   C8           		INY
  76FB   B1   B0      		LDA (TEMPN5),Y
  76FD   85   B1      		STA TEMPN5+1
  76FF   86   B0      		STX TEMPN5	;(CDR)
  7701   A2   AA      		LDX #TEMPN2
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-197
LOGO	SYSTEM FUNCTIONS

  7703   20   38   51 		JSR VPUSHP
  7706   A5   B1      	STXTW:	LDA TEMPN5+1
  7708   F0   29      		BEQ STXTWE
  770A   A0   00      		LDY #$00
  770C   B1   B0      		LDA (TEMPN5),Y
  770E   85   AA      		STA TEMPN2
  7710   C8           		INY
  7711   B1   B0      		LDA (TEMPN5),Y
  7713   85   AB      		STA TEMPN2+1	;(CAR)
  7715   C8           		INY
  7716   B1   B0      		LDA (TEMPN5),Y
  7718   AA           		TAX
  7719   C8           		INY
  771A   B1   B0      		LDA (TEMPN5),Y
  771C   85   B1      		STA TEMPN5+1
  771E   86   B0      		STX TEMPN5	;(CDR)
  7720   88           		DEY
  7721   B1   AA      		LDA (TEMPN2),Y
  7723   AA           		TAX
  7724   C8           		INY
  7725   B1   AA      		LDA (TEMPN2),Y
  7727   85   AB      		STA TEMPN2+1
  7729   86   AA      		STX TEMPN2	;(CDR)
  772B   A2   AA      		LDX #TEMPN2
  772D   20   38   51 		JSR VPUSHP
  7730   4C   06   77 		JMP STXTW
  7733   A9   00      	STXTWE:	LDA #$00
  7735   85   84      		STA MARK1
  7737   85   85      		STA MARK1+1
  7739   A5   A8      	STXTX:	LDA TEMPN1
  773B   C5   1A      		CMP VSP
  773D   D0   06      		BNE STXTX1
  773F   A5   A9      		LDA TEMPN1+1
  7741   C5   1B      		CMP VSP+1
  7743   F0   13      		BEQ STXTXE
  7745   A2   AA      	STXTX1:	LDX #TEMPN2
  7747   20   66   51 		JSR VPOP
  774A   A2   84      		LDX #MARK1
  774C   86   A2      		STX ANSN
  774E   A0   AA      		LDY #TEMPN2
  7750   A9   00      		LDA #LIST
  7752   20   09   52 		JSR CONS
  7755   4C   39   77 		JMP STXTX
  7758   A5   84      	STXTXE:	LDA MARK1
  775A   85   B5      		STA TEMPN6
  775C   A5   85      		LDA MARK1+1
  775E   85   B6      		STA TEMPN6+1
  7760   A9   00      		LDA #$00
  7762   85   84      		STA MARK1
  7764   85   85      		STA MARK1+1
  7766   A2   B5      	STEXT3:	LDX #TEMPN6
  7768   20   38   51 		JSR VPUSHP
  776B   A9   01      		LDA #$01
  776D   85   07      		STA OTPUTN
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-198
LOGO	SYSTEM FUNCTIONS

  776F   4C   52   41 		JMP POPJ
  7772   4C   8D   72 	SDFNRR:	JMP SMAKE2	;(ERROR XWTA,ARG1,CURTOK)
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-199
LOGO	SYSTEM FUNCTIONS

  7775   A2   1C      	SFIRST:	LDX #ARG1
  7777   20   66   51 		JSR VPOP
  777A   A2   1C      		LDX #ARG1
  777C   20   93   5C 		JSR GETTYP
  777F   C9   00      		CMP #LIST
  7781   F0   12      		BEQ SFRST1
  7783   C9   01      		CMP #ATOM
  7785   F0   1D      		BEQ SFRST2
  7787   C9   07      		CMP #SATOM
  7789   F0   19      		BEQ SFRST2
  778B   C9   03      		CMP #FIX
  778D   F0   15      		BEQ SFRST2
  778F   C9   04      		CMP #FLO
  7791   F0   11      		BEQ SFRST2
  7793   D0   DD      		BNE SDFNRR	;(Always)
  7795   A0   00      	SFRST1:	LDY #$00
  7797   B1   1C      		LDA (ARG1),Y
  7799   AA           		TAX
  779A   C8           		INY
  779B   B1   1C      		LDA (ARG1),Y
  779D   85   1D      		STA ARG1+1
  779F   86   1C      		STX ARG1	;(CAR)
  77A1   4C   E2   74 		JMP OTPRG1
  77A4   A5   1C      	SFRST2:	LDA ARG1
  77A6   D0   04      		BNE SFRST3
  77A8   A5   1D      		LDA ARG1+1
  77AA   F0   C6      		BEQ SDFNRR
  77AC   A0   B5      	SFRST3:	LDY #TEMPN6	;TEMPN6 is TEMP
  77AE   A2   1C      		LDX #ARG1
  77B0   20   90   64 		JSR MAKPNM
  77B3   A0   00      		LDY #$00
  77B5   B1   B5      		LDA (TEMPN6),Y
  77B7   AA           		TAX
  77B8   C8           		INY
  77B9   B1   B5      		LDA (TEMPN6),Y
  77BB   85   B6      		STA TEMPN6+1
  77BD   86   B5      		STX TEMPN6	;(CAR)
  77BF   86   B0      		STX TEMPN5
  77C1   A2   00      		LDX #$00
  77C3   86   B1      		STX TEMPN5+1
  77C5   A9   B5      		LDA #TEMPN6
  77C7   85   A2      		STA ANSN
  77C9   A0   B0      		LDY #TEMPN5
  77CB   A9   02      		LDA #STRING
  77CD   20   09   52 		JSR CONS
  77D0   A0   1C      		LDY #ARG1
  77D2   A2   B5      		LDX #TEMPN6
  77D4   20   20   5F 		JSR INTERN
  77D7   4C   E2   74 		JMP OTPRG1
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-200
LOGO	SYSTEM FUNCTIONS

  77DA   A2   1C      	SLAST:	LDX #ARG1
  77DC   20   66   51 		JSR VPOP
  77DF   A2   1C      		LDX #ARG1
  77E1   20   93   5C 		JSR GETTYP
  77E4   C9   00      		CMP #LIST
  77E6   F0   13      		BEQ SLST1
  77E8   C9   01      		CMP #ATOM
  77EA   F0   23      		BEQ SLST2
  77EC   C9   07      		CMP #SATOM
  77EE   F0   1F      		BEQ SLST2
  77F0   C9   03      		CMP #FIX
  77F2   F0   1B      		BEQ SLST2
  77F4   C9   04      		CMP #FLO
  77F6   F0   17      		BEQ SLST2
  77F8   4C   8E   76 		JMP SDFNR1
  77FB   A2   1C      	SLST1:	LDX #ARG1
  77FD   20   98   70 		JSR GTLSTC
  7800   A0   00      		LDY #$00
  7802   B1   1C      		LDA (ARG1),Y
  7804   AA           		TAX
  7805   C8           		INY
  7806   B1   1C      		LDA (ARG1),Y
  7808   85   1D      		STA ARG1+1
  780A   86   1C      		STX ARG1	;(CAR)
  780C   4C   E2   74 		JMP OTPRG1
  780F   A0   1E      	SLST2:	LDY #ARG2
  7811   A2   1C      		LDX #ARG1
  7813   20   90   64 		JSR MAKPNM
  7816   A2   1E      		LDX #ARG2
  7818   20   98   70 		JSR GTLSTC
  781B   A0   01      		LDY #$01
  781D   B1   1E      		LDA (ARG2),Y
  781F   F0   12      		BEQ SLST3
  7821   85   A6      		STA TEMPN	;(CAR)
  7823   88           		DEY
  7824   84   A7      		STY TEMPN+1
  7826   A9   1E      		LDA #ARG2
  7828   85   A2      		STA ANSN
  782A   A2   00      		LDX #$00
  782C   A0   A6      		LDY #TEMPN
  782E   A9   02      		LDA #STRING
  7830   20   09   52 		JSR CONS
  7833   A2   1E      	SLST3:	LDX #ARG2
  7835   A0   1C      		LDY #ARG1
  7837   20   20   5F 		JSR INTERN
  783A   4C   E2   74 		JMP OTPRG1
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-201
LOGO	SYSTEM FUNCTIONS

  783D   00           	SBPT:	BRK		;Enter Monitor
  783E   EA           		NOP
  783F   EA           		NOP
  7840   A9   00      		LDA #$00	;Monitor "G" command re-enters here
  7842   85   07      		STA OTPUTN
  7844   4C   52   41 		JMP POPJ
                      	;
  7847   A5   D7      	SEQUAL:	LDA LTRUE
  7849   85   B7      		STA TEMPN7	;TEMPN7 is PRED
  784B   A5   D8      		LDA LTRUE+1
  784D   85   B8      		STA TEMPN7+1
  784F   A2   1E      		LDX #ARG2
  7851   20   66   51 		JSR VPOP
  7854   A2   1C      		LDX #ARG1
  7856   20   66   51 		JSR VPOP
  7859   A9   01      		LDA #$01
  785B   85   07      		STA OTPUTN
  785D   A5   18      		LDA SP
  785F   85   B9      		STA TEMPN8
  7861   A5   19      		LDA SP+1
  7863   85   BA      		STA TEMPN8+1
  7865   A2   67      		LDX #SEQEND&$FF
  7867   A0   79      		LDY #SEQEND^
  7869   20   23   51 		JSR PUSH
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-202
LOGO	SYSTEM FUNCTIONS

  786C   A2   1E      	EQ:	LDX #ARG2
  786E   20   93   5C 		JSR GETTYP
  7871   85   A2      		STA ANSN	;TEMP1
  7873   A2   1C      		LDX #ARG1
  7875   20   93   5C 		JSR GETTYP
  7878   85   A3      		STA ANSN1	;TYP1
  787A   C9   00      		CMP #LIST
  787C   F0   2C      		BEQ EQL
  787E   C9   03      		CMP #FIX
  7880   F0   31      		BEQ EQF
  7882   C9   04      		CMP #FLO
  7884   F0   43      		BEQ EQFL
  7886   C9   01      		CMP #ATOM
  7888   F0   40      		BEQ EQA
  788A   A5   A3      	EQO:	LDA ANSN1
  788C   C5   A2      		CMP ANSN
  788E   D0   0C      		BNE EQFF
  7890   A5   1C      	EQO1:	LDA ARG1
  7892   C5   1E      		CMP ARG2
  7894   D0   06      		BNE EQFF
  7896   A5   1D      		LDA ARG1+1
  7898   C5   1F      		CMP ARG2+1
  789A   F0   0B      		BEQ EQPOP
  789C   A5   CB      	EQFF:	LDA LFALSE
  789E   85   B7      		STA TEMPN7	;PRED
  78A0   A5   CC      		LDA LFALSE+1
  78A2   85   B8      		STA TEMPN7+1
  78A4   4C   67   79 		JMP SEQEND
  78A7   4C   52   41 	EQPOP:	JMP POPJ
  78AA   A5   A2      	EQL:	LDA ANSN
  78AC   C9   00      		CMP #LIST
  78AE   D0   EC      		BNE EQFF
  78B0   4C   E4   78 		JMP EQLIST
  78B3   A0   00      	EQF:	LDY #$00	;?CAR TO GET FIXNUM WON'T WORK
  78B5   B1   1C      		LDA (ARG1),Y	;?ALSO COMPARISON MUST BE 4 BYTES
  78B7   AA           		TAX
  78B8   C8           		INY
  78B9   B1   1C      		LDA (ARG1),Y
  78BB   85   1D      		STA ARG1+1
  78BD   86   1C      		STX ARG1	;(CAR)
  78BF   A2   1E      		LDX #ARG2
  78C1   20   45   57 		JSR GETNUM	;?TYPE IN A
  78C4   90   D6      	EQAA:	BCC EQFF
  78C6   4C   90   78 		JMP EQO1
  78C9   EA           	EQFL:	NOP		;?FLONUM IN ARG1
  78CA   A5   A2      	EQA:	LDA ANSN
  78CC   C9   03      		CMP #FIX	;?FLONUMS TOO
  78CE   D0   BA      		BNE EQO
  78D0   A0   00      		LDY #$00
  78D2   B1   1E      		LDA (ARG2),Y
  78D4   AA           		TAX
  78D5   C8           		INY
  78D6   B1   1E      		LDA (ARG2),Y
  78D8   85   1F      		STA ARG2+1
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-203
LOGO	SYSTEM FUNCTIONS

  78DA   86   1E      		STX ARG2	;(CAR)
  78DC   A2   1C      		LDX #ARG1
  78DE   20   45   57 		JSR GETNUM
  78E1   4C   C4   78 		JMP EQAA
  78E4   A5   1C      	EQLIST:	LDA ARG1
  78E6   D0   0F      		BNE EQLST1
  78E8   A5   1D      		LDA ARG1+1
  78EA   D0   0B      		BNE EQLST1
  78EC   A5   1E      		LDA ARG2
  78EE   D0   AC      		BNE EQFF
  78F0   A5   1F      		LDA ARG2+1
  78F2   D0   A8      		BNE EQFF
  78F4   4C   52   41 		JMP POPJ
  78F7   A5   1E      	EQLST1:	LDA ARG2
  78F9   D0   04      		BNE EQLST2
  78FB   A5   1F      		LDA ARG2+1
  78FD   F0   9D      		BEQ EQFF
  78FF   A2   1C      	EQLST2:	LDX #ARG1
  7901   20   0C   51 		JSR PUSHP
  7904   A2   1E      		LDX #ARG2
  7906   20   0C   51 		JSR PUSHP
  7909   A0   00      		LDY #$00
  790B   B1   1C      		LDA (ARG1),Y
  790D   AA           		TAX
  790E   C8           		INY
  790F   B1   1C      		LDA (ARG1),Y
  7911   85   1D      		STA ARG1+1
  7913   86   1C      		STX ARG1	;(CAR)
  7915   88           		DEY
  7916   B1   1E      		LDA (ARG2),Y
  7918   AA           		TAX
  7919   C8           		INY
  791A   B1   1E      		LDA (ARG2),Y
  791C   85   1F      		STA ARG2+1
  791E   86   1E      		STX ARG2	;(CAR)
  7920   20   8D   51 		JSR PSHTST
  7923   A2   2D      		LDX #EL1&$FF
  7925   A0   79      		LDY #EL1^
  7927   20   23   51 		JSR PUSH
  792A   4C   6C   78 		JMP EQ
  792D   A2   1E      	EL1:	LDX #ARG2
  792F   20   4F   51 		JSR POP
  7932   A2   1C      		LDX #ARG1
  7934   20   4F   51 		JSR POP
  7937   A0   02      		LDY #$02
  7939   B1   1C      		LDA (ARG1),Y
  793B   AA           		TAX
  793C   C8           		INY
  793D   B1   1C      		LDA (ARG1),Y
  793F   85   1D      		STA ARG1+1
  7941   86   1C      		STX ARG1	;(CDR)
  7943   A2   1C      		LDX #ARG1
  7945   20   93   5C 		JSR GETTYP
  7948   C9   00      		CMP #LIST
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-204
LOGO	SYSTEM FUNCTIONS

  794A   D0   18      		BNE EL1R
  794C   A0   02      		LDY #$02
  794E   B1   1E      		LDA (ARG2),Y
  7950   AA           		TAX
  7951   C8           		INY
  7952   B1   1E      		LDA (ARG2),Y
  7954   85   1F      		STA ARG2+1
  7956   86   1E      		STX ARG2	;(CDR)
  7958   A2   1E      		LDX #ARG2
  795A   20   93   5C 		JSR GETTYP
  795D   C9   00      		CMP #LIST
  795F   D0   03      		BNE EL1R
  7961   4C   E4   78 		JMP EQLIST
  7964   20   BD   50 	EL1R:	JSR SYSBUG
  7967   A2   B7      	SEQEND:	LDX #TEMPN7	;PRED
  7969   20   38   51 		JSR VPUSHP
  796C   A5   B9      		LDA TEMPN8
  796E   85   18      		STA SP
  7970   A5   BA      		LDA TEMPN8+1
  7972   85   19      		STA SP+1
  7974   4C   52   41 		JMP POPJ
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-205
LOGO	SYSTEM FUNCTIONS

  7977   20   B1   59 	STO:	JSR EDTSTP
  797A   A9   BD      		LDA #TEMPX2	;FUN is TEMPX2
  797C   A2   1C      		LDX #ARG1
  797E   20   32   55 		JSR GETFUN
  7981   A9   03      		LDA #STOERR&$FF
  7983   85   16      		STA ERRRET	;Error return pointer
  7985   A9   7A      		LDA #STOERR^
  7987   85   17      		STA ERRRET+1
  7989   BA           		TSX
  798A   86   11      		STX RETADR	;Save all necessary return addresses
  798C   A5   BE      		LDA TEMPX2+1
  798E   F0   07      		BEQ STO1
  7990   A9   16      		LDA #XDEF
  7992   A0   1C      		LDY #ARG1
  7994   4C   7C   60 		JMP ERROR
  7997   A5   5E      	STO1:	LDA TOKPTR
  7999   85   84      		STA MARK1
  799B   A5   5F      		LDA TOKPTR+1
  799D   85   85      		STA MARK1+1
  799F   A9   00      		LDA #$00
  79A1   85   05      		STA NARGS
  79A3   A5   5F      	STOW:	LDA TOKPTR+1
  79A5   D0   04      		BNE STOW1
  79A7   A5   5E      		LDA TOKPTR
  79A9   F0   33      		BEQ STOWE
  79AB   A0   00      	STOW1:	LDY #$00
  79AD   B1   5E      		LDA (TOKPTR),Y
  79AF   85   BD      		STA TEMPX2	;TEMPN1 is TOKEN
  79B1   C8           		INY
  79B2   B1   5E      		LDA (TOKPTR),Y
  79B4   85   BE      		STA TEMPX2+1	;(GETTOK)
  79B6   A2   5E      		LDX #TOKPTR
  79B8   20   16   54 		JSR TFKADV
  79BB   A5   BD      		LDA TEMPX2
  79BD   C5   C1      		CMP COMMNT
  79BF   D0   06      		BNE STOW2
  79C1   A5   BE      		LDA TEMPX2+1
  79C3   C5   C2      		CMP COMMNT+1
  79C5   F0   17      		BEQ STOWE
  79C7   A2   BD      	STOW2:	LDX #TEMPX2
  79C9   20   93   5C 		JSR GETTYP
  79CC   C9   01      		CMP #ATOM
  79CE   F0   09      		BEQ STOW3
  79D0   C9   07      		CMP #SATOM
  79D2   F0   05      		BEQ STOW3
  79D4   A2   BD      		LDX #TEMPX2
  79D6   4C   5A   75 		JMP STLR4A
  79D9   E6   05      	STOW3:	INC NARGS
  79DB   4C   A3   79 		JMP STOW
  79DE   A2   00      	STOWE:	LDX #$00
  79E0   86   5E      		STX TOKPTR
  79E2   86   5F      		STX TOKPTR+1
  79E4   86   BC      		STX TEMPX1+1
  79E6   A9   96      		LDA #EDBOD
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-206
LOGO	SYSTEM FUNCTIONS

  79E8   85   A2      		STA ANSN
  79EA   8A           		TXA
  79EB   A0   84      		LDY #MARK1
  79ED   20   09   52 		JSR CONS
  79F0   A0   96      		LDY #EDBOD
  79F2   A2   80      		LDX #EDTATM
  79F4   A5   05      		LDA NARGS
  79F6   85   BB      		STA TEMPX1
  79F8   A9   BB      		LDA #TEMPX1
  79FA   20   B7   5C 		JSR PTFTXT
  79FD   20   A8   4A 		JSR RSTERR
  7A00   4C   52   41 		JMP POPJ
  7A03   20   09   7A 	STOERR:	JSR EXTEDT
  7A06   4C   2B   48 		JMP ERROR1
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-207
LOGO	SYSTEM FUNCTIONS

  7A09   A9   00      	EXTEDT:	LDA #$00
  7A0B   85   08      		STA EDSW
  7A0D   85   07      		STA OTPUTN
  7A0F   85   96      		STA EDBOD
  7A11   85   80      		STA EDTATM
  7A13   85   97      		STA EDBOD+1
  7A15   85   81      		STA EDTATM+1
  7A17   60           	RTS9:	RTS
                      	;
  7A18   20   B1   59 	SEDIT:	JSR EDTSTP
  7A1B   A9   B0      		LDA #TEMPN5	;FUN
  7A1D   A2   1C      		LDX #ARG1
  7A1F   20   32   55 		JSR GETFUN
  7A22   A9   03      		LDA #STOERR&$FF
  7A24   85   16      		STA ERRRET
  7A26   A9   7A      		LDA #STOERR^
  7A28   85   17      		STA ERRRET+1
  7A2A   BA           		TSX
  7A2B   86   11      		STX RETADR	;Save all necessary return addresses
  7A2D   A5   B1      		LDA TEMPN5+1
  7A2F   D0   07      		BNE SEDIT1
  7A31   A9   03      		LDA #XUDF
  7A33   A0   1C      		LDY #ARG1
  7A35   4C   7C   60 		JMP ERROR
  7A38   A9   00      	SEDIT1:	LDA #$00
  7A3A   A2   B0      		LDX #TEMPN5
  7A3C   A0   96      		LDY #EDBOD
  7A3E   20   58   5D 		JSR UNSTUF
  7A41   A0   00      		LDY #$00
  7A43   B1   96      		LDA (EDBOD),Y
  7A45   85   A8      		STA TEMPN1	;ARGS
  7A47   C8           		INY
  7A48   B1   96      		LDA (EDBOD),Y
  7A4A   85   A9      		STA TEMPN1+1	;(CAR)
  7A4C   A2   BB      		LDX #TEMPX1
  7A4E   A0   A8      		LDY #TEMPN1
  7A50   20   CD   54 		JSR GETLEN
  7A53   A9   BB      		LDA #TEMPX1
  7A55   A0   96      		LDY #EDBOD
  7A57   A2   1C      		LDX #ARG1
  7A59   20   B7   5C 		JSR PTFTXT
  7A5C   20   A8   4A 		JSR RSTERR
  7A5F   4C   52   41 		JMP POPJ
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-208
LOGO	SYSTEM FUNCTIONS

  7A62   A5   08      	SEND:	LDA EDSW
  7A64   D0   03      		BNE SEND1	;if edit switch off, give
  7A66   4C   43   75 		JMP STTLR1	;(ERROR XNED)
  7A69   A5   78      	SEND1:	LDA LEVNUM	;if not at top level, complain.
  7A6B   D0   26      		BNE SENDR
  7A6D   A5   79      		LDA LEVNUM+1
  7A6F   D0   22      		BNE SENDR
  7A71   A9   80      		LDA #EDTATM
  7A73   A2   96      		LDX #EDBOD
  7A75   20   01   5B 		JSR STUFF	;try to put the function def together
  7A78   A5   13      		LDA OUTDEV
  7A7A   D0   11      		BNE SEND2
  7A7C   A9   00      		LDA #$00
  7A7E   A0   80      		LDY #EDTATM
  7A80   20   A4   65 		JSR LTYPE
  7A83   A2   4E      		LDX #SENDM&$FF	;" DEFINED"
  7A85   A0   8E      		LDY #SENDM^
  7A87   20   1D   53 		JSR PRTSTR
  7A8A   20   DC   69 		JSR BREAK1
  7A8D   20   09   7A 	SEND2:	JSR EXTEDT
  7A90   4C   52   41 		JMP POPJ
  7A93   4C   48   75 	SENDR:	JMP STTLR2	;(ERROR XETL)
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-209
LOGO	SYSTEM FUNCTIONS

  7A96   A9   00      	SPO:	LDA #$00
  7A98   85   07      		STA OTPUTN
  7A9A   A5   5E      		LDA TOKPTR
  7A9C   D0   0F      		BNE SPO1
  7A9E   A5   5F      		LDA TOKPTR+1
  7AA0   D0   0B      		BNE SPO1
  7AA2   A5   82      		LDA PODEFL
  7AA4   D0   79      		BNE SPO1A
  7AA6   A5   83      		LDA PODEFL+1
  7AA8   D0   75      		BNE SPO1A
  7AAA   4C   52   41 		JMP POPJ
  7AAD   A0   00      	SPO1:	LDY #$00
  7AAF   B1   5E      		LDA (TOKPTR),Y
  7AB1   85   1C      		STA ARG1
  7AB3   C8           		INY
  7AB4   B1   5E      		LDA (TOKPTR),Y
  7AB6   85   1D      		STA ARG1+1	;(GETTOK)
  7AB8   A2   5E      		LDX #TOKPTR
  7ABA   20   00   54 		JSR TTKADV
  7ABD   A6   1C      		LDX ARG1
  7ABF   A4   1D      		LDY ARG1+1
  7AC1   E4   BF      		CPX ALL
  7AC3   D0   11      		BNE SPO2
  7AC5   C4   C0      		CPY ALL+1
  7AC7   D0   0D      		BNE SPO2
  7AC9   A9   01      		LDA #$01
  7ACB   20   E8   7B 		JSR POFUNS
  7ACE   A9   01      	SPON:	LDA #$01
  7AD0   20   3B   7B 		JSR PONAMS
  7AD3   4C   52   41 		JMP POPJ
  7AD6   E4   D9      	SPO2:	CPX NAMES
  7AD8   D0   04      		BNE SPO3
  7ADA   C4   DA      		CPY NAMES+1
  7ADC   F0   F0      		BEQ SPON
  7ADE   E4   E7      	SPO3:	CPX TITLES
  7AE0   D0   0E      		BNE SPO4
  7AE2   C4   E8      		CPY TITLES+1
  7AE4   D0   0A      		BNE SPO4
  7AE6   A9   00      	SPOTS:	LDA #$00
  7AE8   85   07      		STA OTPUTN
  7AEA   20   E8   7B 		JSR POFUNS
  7AED   4C   52   41 		JMP POPJ
  7AF0   E4   E1      	SPO4:	CPX PROCS
  7AF2   D0   0C      		BNE SPO5
  7AF4   C4   E2      		CPY PROCS+1
  7AF6   D0   08      		BNE SPO5
  7AF8   A9   01      		LDA #$01
  7AFA   20   E8   7B 		JSR POFUNS
  7AFD   4C   52   41 		JMP POPJ
  7B00   A2   1C      	SPO5:	LDX #ARG1
  7B02   20   93   5C 		JSR GETTYP
  7B05   C9   01      		CMP #ATOM
  7B07   F0   0E      		BEQ SPO5A
  7B09   C9   07      		CMP #SATOM
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-210
LOGO	SYSTEM FUNCTIONS

  7B0B   F0   03      		BEQ SPO5S
  7B0D   4C   8D   72 		JMP SMAKE2	;(ERROR XWTA,ARG1,CURTOK)
  7B10   A0   1C      	SPO5S:	LDY #ARG1
  7B12   A9   0C      		LDA #XUBL
  7B14   4C   7C   60 		JMP ERROR
  7B17   A5   1C      	SPO5A:	LDA ARG1
  7B19   85   82      		STA PODEFL
  7B1B   A5   1D      		LDA ARG1+1
  7B1D   85   83      		STA PODEFL+1
  7B1F   A2   82      	SPO1A:	LDX #PODEFL
  7B21   A9   A8      		LDA #TEMPN1
  7B23   20   32   55 		JSR GETFUN
  7B26   A5   A9      		LDA TEMPN1+1
  7B28   F0   0A      		BEQ PFERR
  7B2A   A2   01      		LDX #$01
  7B2C   A9   82      		LDA #PODEFL
  7B2E   20   1D   7C 		JSR POTEXT
  7B31   4C   52   41 		JMP POPJ
  7B34   A0   82      	PFERR:	LDY #PODEFL
  7B36   A9   22      		LDA #XNDF
  7B38   4C   7C   60 		JMP ERROR
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-211
LOGO	SYSTEM FUNCTIONS

  7B3B   A5   8E      	PONAMS:	LDA OBLIST
  7B3D   85   B9      		STA TEMPN8
  7B3F   A5   8F      		LDA OBLIST+1
  7B41   85   BA      		STA TEMPN8+1	;TEMPN8 is OBLIST pointer
  7B43   A5   B9      	PONW1:	LDA TEMPN8
  7B45   D0   04      		BNE PONW1A	;See if done
  7B47   A5   BA      		LDA TEMPN8+1
  7B49   F0   1C      		BEQ PONW1E
  7B4B   A0   00      	PONW1A:	LDY #$00
  7B4D   B1   B9      		LDA (TEMPN8),Y
  7B4F   85   B5      		STA TEMPN6	;Get name pointer
  7B51   C8           		INY
  7B52   B1   B9      		LDA (TEMPN8),Y
  7B54   85   B6      		STA TEMPN6+1	;(CAR)
  7B56   C8           		INY
  7B57   B1   B9      		LDA (TEMPN8),Y
  7B59   AA           		TAX
  7B5A   C8           		INY
  7B5B   B1   B9      		LDA (TEMPN8),Y
  7B5D   85   BA      		STA TEMPN8+1
  7B5F   86   B9      		STX TEMPN8	;(CDR) to next OBLIST object
  7B61   20   8D   7B 		JSR PON1	;Print the name and value
  7B64   4C   43   7B 		JMP PONW1
  7B67   A5   56      	PONW1E:	LDA SOBLST
  7B69   85   B5      		STA TEMPN6	;TEMPN6 is SOBLIST pointer
  7B6B   A5   57      		LDA SOBLST+1
  7B6D   85   B6      		STA TEMPN6+1
  7B6F   A5   B5      	PONW2:	LDA TEMPN6
  7B71   C5   58      		CMP SOBTOP
  7B73   D0   07      		BNE PONW2A	;See if done
  7B75   A5   B6      		LDA TEMPN6+1
  7B77   C5   59      		CMP SOBTOP+1
  7B79   D0   01      		BNE PONW2A
  7B7B   60           	PONRTS:	RTS
  7B7C   20   8D   7B 	PONW2A:	JSR PON1	;Print the name and value
  7B7F   18           		CLC
  7B80   A5   B5      		LDA TEMPN6
  7B82   69   04      		ADC #$04
  7B84   85   B5      		STA TEMPN6
  7B86   90   E7      		BCC PONW2
  7B88   E6   B6      		INC TEMPN6+1
  7B8A   4C   6F   7B 		JMP PONW2
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-212
LOGO	SYSTEM FUNCTIONS

  7B8D   A2   B7      	PON1:	LDX #TEMPN7	;TEMPN7 is value
  7B8F   A0   B5      		LDY #TEMPN6	;TEMPN6 is NAME
  7B91   20   BF   51 		JSR GETVAL
  7B94   A5   B8      		LDA TEMPN7+1
  7B96   D0   04      		BNE PON1A
  7B98   A5   B7      		LDA TEMPN7
  7B9A   D0   DF      		BNE PONRTS	;Skip if NOVALUE
  7B9C   A5   13      	PON1A:	LDA OUTDEV
  7B9E   D0   1D      		BNE PON1B	;Use "MAKE" if not screen output
  7BA0   A9   22      		LDA #'"
  7BA2   20   F8   69 		JSR TPCHR
  7BA5   A9   00      		LDA #$00
  7BA7   A0   B5      		LDY #TEMPN6
  7BA9   20   A4   65 		JSR LTYPE
  7BAC   A2   57      		LDX #PNMSG1&$FF		;"IS "
  7BAE   A0   8E      		LDY #PNMSG1^
  7BB0   20   1D   53 		JSR PRTSTR
  7BB3   A9   00      		LDA #$00
  7BB5   A0   B7      		LDY #TEMPN7
  7BB7   20   A4   65 		JSR LTYPE
  7BBA   4C   DC   69 		JMP BREAK1
  7BBD   A2   5C      	PON1B:	LDX #PNMSG2&$FF		;"MAKE "
  7BBF   A0   8E      		LDY #PNMSG2^
  7BC1   20   1D   53 		JSR PRTSTR
  7BC4   A9   00      		LDA #$00
  7BC6   A0   B5      		LDY #TEMPN6
  7BC8   20   A4   65 		JSR LTYPE
  7BCB   A9   20      		LDA #$20
  7BCD   20   F8   69 		JSR TPCHR
  7BD0   A2   B7      		LDX #TEMPN7
  7BD2   20   93   5C 		JSR GETTYP
  7BD5   C9   01      		CMP #ATOM
  7BD7   D0   05      		BNE PON1C
  7BD9   A9   22      		LDA #'"
  7BDB   20   F8   69 		JSR TPCHR
  7BDE   A9   00      	PON1C:	LDA #$00
  7BE0   A0   B7      		LDY #TEMPN7
  7BE2   20   A4   65 		JSR LTYPE
  7BE5   4C   DC   69 		JMP BREAK1
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-213
LOGO	SYSTEM FUNCTIONS

  7BE8   85   B2      	POFUNS:	STA ANSN2	;ANSN2 is FULL
  7BEA   A5   8E      		LDA OBLIST
  7BEC   85   BD      		STA TEMPX2	;TEMPN7 is OBLIST pointer
  7BEE   A5   8F      		LDA OBLIST+1
  7BF0   85   BE      		STA TEMPX2+1
  7BF2   A5   BE      	POFNSW:	LDA TEMPX2+1
  7BF4   D0   05      		BNE PFNSW1
  7BF6   A5   BD      		LDA TEMPX2
  7BF8   D0   01      		BNE PFNSW1
  7BFA   60           	PFRTS:	RTS
  7BFB   A0   03      	PFNSW1:	LDY #$03
  7BFD   B1   BD      		LDA (TEMPX2),Y
  7BFF   48           		PHA
  7C00   88           		DEY
  7C01   B1   BD      		LDA (TEMPX2),Y
  7C03   48           		PHA
  7C04   88           		DEY
  7C05   B1   BD      		LDA (TEMPX2),Y
  7C07   AA           		TAX
  7C08   88           		DEY
  7C09   B1   BD      		LDA (TEMPX2),Y
  7C0B   85   BD      		STA TEMPX2
  7C0D   86   BE      		STX TEMPX2+1
  7C0F   A9   BD      		LDA #TEMPX2
  7C11   20   1F   7C 		JSR PTEXTX
  7C14   68           		PLA
  7C15   85   BD      		STA TEMPX2
  7C17   68           		PLA
  7C18   85   BE      		STA TEMPX2+1
  7C1A   4C   F2   7B 		JMP POFNSW
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-214
LOGO	SYSTEM FUNCTIONS

  7C1D   86   B2      	POTEXT:	STX ANSN2	;ANSN2 is FULL
  7C1F   85   A3      	PTEXTX:	STA ANSN1	;Save ATOMM (Entry point for POFUNS)
  7C21   AA           		TAX
  7C22   A9   B5      		LDA #TEMPN6	;TEMPN6 becomes FUN
  7C24   20   32   55 		JSR GETFUN
  7C27   A5   B6      		LDA TEMPN6+1
  7C29   F0   77      		BEQ PTXRTS
  7C2B   A2   BB      		LDX #TOMSG&$FF	;"TO "
  7C2D   A0   8E      		LDY #TOMSG^
  7C2F   20   1D   53 		JSR PRTSTR
  7C32   A4   A3      		LDY ANSN1	;Retrieve ATOMM
  7C34   A9   00      		LDA #$00
  7C36   20   A4   65 		JSR LTYPE	;Print the title
  7C39   A0   02      		LDY #$02
  7C3B   B1   B5      		LDA (TEMPN6),Y
  7C3D   AA           		TAX
  7C3E   C8           		INY
  7C3F   B1   B5      		LDA (TEMPN6),Y
  7C41   85   B6      		STA TEMPN6+1
  7C43   86   B5      		STX TEMPN6	;(CDR)
  7C45   A2   B5      		LDX #TEMPN6
  7C47   20   93   5C 		JSR GETTYP
  7C4A   C9   00      		CMP #LIST
  7C4C   F0   0A      		BEQ POTXTL
  7C4E   C9   0B      		CMP #FPACK
  7C50   D0   03      		BNE PTXERR
  7C52   4C   21   7D 		JMP POTXTF
  7C55   20   BD   50 	PTXERR:	JSR SYSBUG
  7C58   A0   00      	POTXTL:	LDY #$00
  7C5A   B1   B5      		LDA (TEMPN6),Y
  7C5C   85   B9      		STA TEMPN8	;TEMPN8 is LINE
  7C5E   C8           		INY
  7C5F   B1   B5      		LDA (TEMPN6),Y
  7C61   85   BA      		STA TEMPN8+1	;(CAR)
  7C63   C8           		INY
  7C64   B1   B5      		LDA (TEMPN6),Y
  7C66   AA           		TAX
  7C67   C8           		INY
  7C68   B1   B5      		LDA (TEMPN6),Y
  7C6A   85   B6      		STA TEMPN6+1
  7C6C   86   B5      		STX TEMPN6	;(CDR)
  7C6E   A5   B9      	PTXLW:	LDA TEMPN8
  7C70   D0   04      		BNE PTXLW1
  7C72   A5   BA      		LDA TEMPN8+1
  7C74   F0   25      		BEQ PTXLWE
  7C76   A0   00      	PTXLW1:	LDY #$00
  7C78   B1   B9      		LDA (TEMPN8),Y
  7C7A   85   BB      		STA TEMPX1
  7C7C   C8           		INY
  7C7D   B1   B9      		LDA (TEMPN8),Y
  7C7F   85   BC      		STA TEMPX1+1	;(CAR)
  7C81   C8           		INY
  7C82   B1   B9      		LDA (TEMPN8),Y
  7C84   AA           		TAX
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-215
LOGO	SYSTEM FUNCTIONS

  7C85   C8           		INY
  7C86   B1   B9      		LDA (TEMPN8),Y
  7C88   85   BA      		STA TEMPN8+1
  7C8A   86   B9      		STX TEMPN8
  7C8C   A9   20      		LDA #$20	;(Space)
  7C8E   20   F8   69 		JSR TPCHR
  7C91   A9   00      		LDA #$00
  7C93   A0   BB      		LDY #TEMPX1
  7C95   20   A4   65 		JSR LTYPE
  7C98   4C   6E   7C 		JMP PTXLW
  7C9B   20   DC   69 	PTXLWE:	JSR BREAK1
  7C9E   A5   B2      		LDA ANSN2	;FULL
  7CA0   D0   01      		BNE PTXLX
  7CA2   60           	PTXRTS:	RTS
  7CA3   A5   B5      	PTXLX:	LDA TEMPN6
  7CA5   D0   0E      		BNE PTXLX1
  7CA7   A5   B6      		LDA TEMPN6+1
  7CA9   D0   0A      		BNE PTXLX1
  7CAB   A2   BF      	PTXEND:	LDX #ENDMSG&$FF
  7CAD   A0   8E      		LDY #ENDMSG^
  7CAF   20   1D   53 		JSR PRTSTR
  7CB2   4C   DC   69 		JMP BREAK1
  7CB5   A0   00      	PTXLX1:	LDY #$00
  7CB7   B1   B5      		LDA (TEMPN6),Y
  7CB9   85   B9      		STA TEMPN8
  7CBB   C8           		INY
  7CBC   B1   B5      		LDA (TEMPN6),Y
  7CBE   85   BA      		STA TEMPN8+1	;(CAR)
  7CC0   C8           		INY
  7CC1   B1   B5      		LDA (TEMPN6),Y
  7CC3   AA           		TAX
  7CC4   C8           		INY
  7CC5   B1   B5      		LDA (TEMPN6),Y
  7CC7   85   B6      		STA TEMPN6+1
  7CC9   86   B5      		STX TEMPN6	;(CDR)
  7CCB   A0   00      		LDY #$00
  7CCD   B1   B9      		LDA (TEMPN8),Y
  7CCF   85   BB      		STA TEMPX1
  7CD1   C8           		INY
  7CD2   B1   B9      		LDA (TEMPN8),Y
  7CD4   85   BC      		STA TEMPX1+1	;(CAR)
  7CD6   C8           		INY
  7CD7   B1   B9      		LDA (TEMPN8),Y
  7CD9   AA           		TAX
  7CDA   C8           		INY
  7CDB   B1   B9      		LDA (TEMPN8),Y
  7CDD   85   BA      		STA TEMPN8+1
  7CDF   86   B9      		STX TEMPN8	;(CDR)
  7CE1   A5   13      		LDA OUTDEV
  7CE3   F0   04      		BEQ PTXLX2
  7CE5   A5   09      		LDA NUMSW
  7CE7   F0   05      		BEQ PTXLY
  7CE9   A2   BB      	PTXLX2:	LDX #TEMPX1
  7CEB   20   F1   66 		JSR TYPFIX
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-216
LOGO	SYSTEM FUNCTIONS

  7CEE   A5   B9      	PTXLY:	LDA TEMPN8
  7CF0   D0   04      		BNE PTXLY1
  7CF2   A5   BA      		LDA TEMPN8+1
  7CF4   F0   25      		BEQ PTXLYE
  7CF6   A0   00      	PTXLY1:	LDY #$00
  7CF8   B1   B9      		LDA (TEMPN8),Y
  7CFA   85   BB      		STA TEMPX1
  7CFC   C8           		INY
  7CFD   B1   B9      		LDA (TEMPN8),Y
  7CFF   85   BC      		STA TEMPX1+1	;(CAR)
  7D01   C8           		INY
  7D02   B1   B9      		LDA (TEMPN8),Y
  7D04   AA           		TAX
  7D05   C8           		INY
  7D06   B1   B9      		LDA (TEMPN8),Y
  7D08   85   BA      		STA TEMPN8+1
  7D0A   86   B9      		STX TEMPN8
  7D0C   A9   20      		LDA #$20	;(Space)
  7D0E   20   F8   69 		JSR TPCHR
  7D11   A9   00      		LDA #$00
  7D13   A0   BB      		LDY #TEMPX1
  7D15   20   A4   65 		JSR LTYPE
  7D18   4C   EE   7C 		JMP PTXLY
  7D1B   20   DC   69 	PTXLYE:	JSR BREAK1
  7D1E   4C   A3   7C 		JMP PTXLX
  7D21   A0   00      	POTXTF:	LDY #$00
  7D23   B1   B5      		LDA (TEMPN6),Y
  7D25   85   B9      		STA TEMPN8	;TEMPN8 is PTR
  7D27   C8           		INY
  7D28   B1   B5      		LDA (TEMPN6),Y
  7D2A   85   BA      		STA TEMPN8+1	;(GETBAR)
  7D2C   C8           		INY
  7D2D   B1   B5      		LDA (TEMPN6),Y
  7D2F   85   B7      		STA TEMPN7	;TEMPN7 is ENDPTR
  7D31   C8           		INY
  7D32   B1   B5      		LDA (TEMPN6),Y
  7D34   85   B8      		STA TEMPN7+1	;(GETBAR)
  7D36   18           		CLC
  7D37   A5   B5      		LDA TEMPN6
  7D39   69   02      		ADC #$02
  7D3B   85   B5      		STA TEMPN6
  7D3D   90   02      		BCC PTXFW
  7D3F   E6   B6      		INC TEMPN6+1
  7D41   A5   B7      	PTXFW:	LDA TEMPN7
  7D43   C5   B9      		CMP TEMPN8
  7D45   D0   06      		BNE PTXFW1
  7D47   A5   B8      		LDA TEMPN7+1
  7D49   C5   BA      		CMP TEMPN8+1
  7D4B   F0   25      		BEQ PTXFWE
  7D4D   A0   00      	PTXFW1:	LDY #$00
  7D4F   B1   B9      		LDA (TEMPN8),Y
  7D51   85   BB      		STA TEMPX1
  7D53   C8           		INY
  7D54   B1   B9      		LDA (TEMPN8),Y
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-217
LOGO	SYSTEM FUNCTIONS

  7D56   85   BC      		STA TEMPX1+1	;(GETBAR)
  7D58   18           		CLC
  7D59   A5   B9      		LDA TEMPN8
  7D5B   69   02      		ADC #$02
  7D5D   85   B9      		STA TEMPN8
  7D5F   90   02      		BCC PTXFW2
  7D61   E6   BA      		INC TEMPN8+1
  7D63   A9   20      	PTXFW2:	LDA #$20
  7D65   20   F8   69 		JSR TPCHR
  7D68   A9   00      		LDA #$00
  7D6A   A0   BB      		LDY #TEMPX1
  7D6C   20   A4   65 		JSR LTYPE
  7D6F   4C   41   7D 		JMP PTXFW
  7D72   20   DC   69 	PTXFWE:	JSR BREAK1
  7D75   A5   B2      		LDA ANSN2
  7D77   D0   01      		BNE PTXFX
  7D79   60           		RTS
  7D7A   A5   B7      	PTXFX:	LDA TEMPN7
  7D7C   D0   07      		BNE PTXFX1
  7D7E   A5   B8      		LDA TEMPN7+1
  7D80   D0   03      		BNE PTXFX1
  7D82   4C   AB   7C 		JMP PTXEND
  7D85   A5   B7      	PTXFX1:	LDA TEMPN7
  7D87   85   B9      		STA TEMPN8
  7D89   A5   B8      		LDA TEMPN7+1
  7D8B   85   BA      		STA TEMPN8+1
  7D8D   A0   02      		LDY #$02
  7D8F   B1   B5      		LDA (TEMPN6),Y
  7D91   85   B7      		STA TEMPN7
  7D93   C8           		INY
  7D94   B1   B5      		LDA (TEMPN6),Y
  7D96   85   B8      		STA TEMPN7+1	;(GETBAR)
  7D98   18           		CLC
  7D99   A5   B5      		LDA TEMPN6
  7D9B   69   02      		ADC #$02
  7D9D   85   B5      		STA TEMPN6
  7D9F   90   02      		BCC PTXFX2
  7DA1   E6   B6      		INC TEMPN6+1
  7DA3   A5   B7      	PTXFX2:	LDA TEMPN7
  7DA5   D0   07      		BNE PTXFX3
  7DA7   A5   B8      		LDA TEMPN7+1
  7DA9   D0   03      		BNE PTXFX3
  7DAB   4C   AB   7C 		JMP PTXEND
  7DAE   A0   00      	PTXFX3:	LDY #$00
  7DB0   B1   B9      		LDA (TEMPN8),Y
  7DB2   85   BB      		STA TEMPX1
  7DB4   C8           		INY
  7DB5   B1   B9      		LDA (TEMPN8),Y
  7DB7   85   BC      		STA TEMPX1+1	;(GETBAR)
  7DB9   18           		CLC
  7DBA   A5   B9      		LDA TEMPN8
  7DBC   69   02      		ADC #$02
  7DBE   85   B9      		STA TEMPN8
  7DC0   90   02      		BCC PTXFX4
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-218
LOGO	SYSTEM FUNCTIONS

  7DC2   E6   BA      		INC TEMPN8+1
  7DC4   A5   13      	PTXFX4:	LDA OUTDEV
  7DC6   F0   04      		BEQ PTXFX5
  7DC8   A5   09      		LDA NUMSW
  7DCA   F0   05      		BEQ PTXFY
  7DCC   A2   BB      	PTXFX5:	LDX #TEMPX1
  7DCE   20   F1   66 		JSR TYPFIX
  7DD1   A5   B7      	PTXFY:	LDA TEMPN7
  7DD3   C5   B9      		CMP TEMPN8
  7DD5   D0   06      		BNE PTXFY1
  7DD7   A5   B8      		LDA TEMPN7+1
  7DD9   C5   BA      		CMP TEMPN8+1
  7DDB   F0   25      		BEQ PTXFYE
  7DDD   A0   00      	PTXFY1:	LDY #$00
  7DDF   B1   B9      		LDA (TEMPN8),Y
  7DE1   85   BB      		STA TEMPX1
  7DE3   C8           		INY
  7DE4   B1   B9      		LDA (TEMPN8),Y
  7DE6   85   BC      		STA TEMPX1+1	;(GETBAR)
  7DE8   18           		CLC
  7DE9   A5   B9      		LDA TEMPN8
  7DEB   69   02      		ADC #$02
  7DED   85   B9      		STA TEMPN8
  7DEF   90   02      		BCC PTXFY2
  7DF1   E6   BA      		INC TEMPN8+1
  7DF3   A9   20      	PTXFY2:	LDA #$20
  7DF5   20   F8   69 		JSR TPCHR
  7DF8   A9   00      		LDA #$00
  7DFA   A0   BB      		LDY #TEMPX1
  7DFC   20   A4   65 		JSR LTYPE
  7DFF   4C   D1   7D 		JMP PTXFY
  7E02   20   DC   69 	PTXFYE:	JSR BREAK1
  7E05   4C   7A   7D 		JMP PTXFX
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-219
LOGO	SYSTEM FUNCTIONS

  7E08   A5   68      	STRCBK:	LDA FRAME
  7E0A   D0   0E      		BNE TCBK1
  7E0C   A5   69      		LDA FRAME+1
  7E0E   D0   0A      		BNE TCBK1
  7E10   A2   62      		LDX #TBMSG1&$FF
  7E12   A0   8E      		LDY #TBMSG1^
  7E14   20   1D   53 		JSR PRTSTR
  7E17   4C   C4   7E 		JMP TCBKWE
  7E1A   A2   7A      	TCBK1:	LDX #TBMSG2&$FF
  7E1C   A0   8E      		LDY #TBMSG2^
  7E1E   20   1D   53 		JSR PRTSTR
  7E21   A9   01      		LDA #$01
  7E23   85   A3      		STA ANSN1	;ANSN1 is FIRST
  7E25   A5   68      		LDA FRAME
  7E27   85   BB      		STA TEMPX1	;TEMPX1 is FR
  7E29   A5   69      		LDA FRAME+1
  7E2B   85   BC      		STA TEMPX1+1
  7E2D   A5   6A      		LDA XFRAME
  7E2F   85   BD      		STA TEMPX2	;TEMPX2 is XFR
  7E31   A5   6B      		LDA XFRAME+1
  7E33   85   BE      		STA TEMPX2+1
  7E35   A5   BB      	TCBKW:	LDA TEMPX1
  7E37   D0   07      		BNE TCBKW1
  7E39   A5   BC      		LDA TEMPX1+1
  7E3B   D0   03      		BNE TCBKW1
  7E3D   4C   C4   7E 		JMP TCBKWE
  7E40   18           	TCBKW1:	CLC
  7E41   A5   BB      		LDA TEMPX1
  7E43   69   12      		ADC #$12	;(SF_BINDINGS = 18.)
  7E45   85   B5      		STA TEMPN6	;TEMPN6 is PTR
  7E47   A5   BC      		LDA TEMPX1+1
  7E49   69   00      		ADC #$00
  7E4B   85   B6      		STA TEMPN6+1
  7E4D   38           		SEC
  7E4E   A5   BD      		LDA TEMPX2
  7E50   E9   02      		SBC #$02	;PTR1 (TEMPN7) points to top binding (name)
  7E52   85   B7      		STA TEMPN7
  7E54   A5   BE      		LDA TEMPX2+1
  7E56   E9   00      		SBC #$00
  7E58   85   B8      		STA TEMPN7+1
  7E5A   A5   B8      	TCBKX:	LDA TEMPN7+1
  7E5C   C5   B6      		CMP TEMPN6+1
  7E5E   90   4B      		BCC TCBKXE
  7E60   D0   06      		BNE TCBKX1
  7E62   A5   B7      		LDA TEMPN7
  7E64   C5   B5      		CMP TEMPN6
  7E66   90   43      		BCC TCBKXE
  7E68   A0   00      	TCBKX1:	LDY #$00
  7E6A   B1   B7      		LDA (TEMPN7),Y
  7E6C   85   A4      		STA TEMPNH
  7E6E   C8           		INY
  7E6F   B1   B7      		LDA (TEMPN7),Y
  7E71   85   A5      		STA TEMPNH+1	;(GETBAR)
  7E73   A5   A4      		LDA TEMPNH
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-220
LOGO	SYSTEM FUNCTIONS

  7E75   6A           		ROR A
  7E76   90   25      		BCC TCBKX2
  7E78   A5   A3      		LDA ANSN1
  7E7A   D0   0D      		BNE TCBKX3
  7E7C   A9   2C      		LDA #',
  7E7E   20   F8   69 		JSR TPCHR
  7E81   A9   20      		LDA #$20
  7E83   20   F8   69 		JSR TPCHR
  7E86   4C   8B   7E 		JMP TCBKX4
  7E89   C6   A3      	TCBKX3:	DEC ANSN1
  7E8B   A0   05      	TCBKX4:	LDY #$05
  7E8D   B1   A4      		LDA (TEMPNH),Y
  7E8F   85   B9      		STA TEMPN8
  7E91   C8           		INY
  7E92   B1   A4      		LDA (TEMPNH),Y
  7E94   85   BA      		STA TEMPN8+1	;(GETBAR)
  7E96   A9   00      		LDA #$00
  7E98   A0   B9      		LDY #TEMPN8
  7E9A   20   A4   65 		JSR LTYPE
  7E9D   38           	TCBKX2:	SEC
  7E9E   A5   B7      		LDA TEMPN7
  7EA0   E9   04      		SBC #$04
  7EA2   85   B7      		STA TEMPN7
  7EA4   B0   B4      		BCS TCBKX
  7EA6   C6   B8      		DEC TEMPN7+1
  7EA8   4C   5A   7E 		JMP TCBKX
  7EAB   A0   03      	TCBKXE:	LDY #$03	;(SF_XFRAME = 2.)
  7EAD   B1   BB      		LDA (TEMPX1),Y
  7EAF   85   BE      		STA TEMPX2+1
  7EB1   88           		DEY
  7EB2   B1   BB      		LDA (TEMPX1),Y
  7EB4   85   BD      		STA TEMPX2	;(GETBAR)
  7EB6   88           		DEY		;(SF_PREV_FRAME = 0)
  7EB7   B1   BB      		LDA (TEMPX1),Y
  7EB9   AA           		TAX
  7EBA   88           		DEY
  7EBB   B1   BB      		LDA (TEMPX1),Y
  7EBD   85   BB      		STA TEMPX1
  7EBF   86   BC      		STX TEMPX1+1	;(GETBAR)
  7EC1   4C   35   7E 		JMP TCBKW
  7EC4   20   DC   69 	TCBKWE:	JSR BREAK1
  7EC7   A9   00      		LDA #$00
  7EC9   85   07      		STA OTPUTN
  7ECB   4C   52   41 		JMP POPJ
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-221
LOGO	SYSTEM FUNCTIONS

  7ECE   A9   01      	SWRITE:	LDA #$01
  7ED0   85   13      		STA OUTDEV
  7ED2   20   E1   69 		JSR OPENW
  7ED5   A9   01      		LDA #$01
  7ED7   20   E8   7B 		JSR POFUNS
  7EDA   20   3B   7B 		JSR PONAMS
  7EDD   20   E2   69 		JSR CLOSEW
  7EE0   A9   00      		LDA #$00
  7EE2   85   13      		STA OUTDEV
  7EE4   85   07      		STA OTPUTN
  7EE6   4C   52   41 		JMP POPJ
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-222
LOGO	SYSTEM FUNCTIONS

  7EE9   A5   5E      	SERASE:	LDA TOKPTR
  7EEB   D0   07      		BNE SERAS1
  7EED   A5   5F      		LDA TOKPTR+1
  7EEF   D0   03      		BNE SERAS1
  7EF1   4C   CF   72 		JMP SCMMT1	;(ERROR XEOL)
  7EF4   A0   00      	SERAS1:	LDY #$00
  7EF6   84   07      		STY OTPUTN
  7EF8   B1   5E      		LDA (TOKPTR),Y
  7EFA   85   1C      		STA ARG1
  7EFC   C8           		INY
  7EFD   B1   5E      		LDA (TOKPTR),Y
  7EFF   85   1D      		STA ARG1+1	;(GETTOK)
  7F01   A2   5E      		LDX #TOKPTR
  7F03   20   00   54 		JSR TTKADV
  7F06   A5   08      		LDA EDSW
  7F08   D0   51      		BNE SERASB
  7F0A   A6   1C      		LDX ARG1
  7F0C   A4   1D      		LDY ARG1+1
  7F0E   E4   BF      		CPX ALL
  7F10   D0   0A      		BNE ECMP2
  7F12   C4   C0      		CPY ALL+1
  7F14   D0   06      		BNE ECMP2
  7F16   20   88   4E 		JSR REINIT
  7F19   4C   3E   40 		JMP TOPLOP
  7F1C   E4   D9      	ECMP2:	CPX NAMES
  7F1E   D0   0A      		BNE ECMP3
  7F20   C4   DA      		CPY NAMES+1
  7F22   D0   06      		BNE ECMP3
  7F24   20   AC   7F 		JSR ERNAMS
  7F27   4C   52   41 		JMP POPJ
  7F2A   E4   E7      	ECMP3:	CPX TITLES
  7F2C   D0   04      		BNE ECMP4
  7F2E   C4   E8      		CPY TITLES+1
  7F30   F0   08      		BEQ SERPS
  7F32   E4   E1      	ECMP4:	CPX PROCS
  7F34   D0   0A      		BNE SERAP
  7F36   C4   E2      		CPY PROCS+1
  7F38   D0   06      		BNE SERAP
  7F3A   20   7D   7F 	SERPS:	JSR ERPROS
  7F3D   4C   52   41 		JMP POPJ
  7F40   A2   1C      	SERAP:	LDX #ARG1
  7F42   20   93   5C 		JSR GETTYP
  7F45   C9   01      		CMP #ATOM
  7F47   D0   08      		BNE SERAR1
  7F49   A2   1C      		LDX #ARG1
  7F4B   20   11   55 		JSR UNFUNC
  7F4E   4C   52   41 		JMP POPJ
  7F51   C9   03      	SERAR1:	CMP #FIX
  7F53   D0   03      		BNE SERAR2
  7F55   4C   43   75 		JMP STTLR1	;(ERROR XNED)
  7F58   4C   8D   72 	SERAR2:	JMP SMAKE2	;(ERROR XWTA,ARG1,CURTOK)
  7F5B   A2   1C      	SERASB:	LDX #ARG1
  7F5D   20   93   5C 		JSR GETTYP
  7F60   C9   03      		CMP #FIX
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-223
LOGO	SYSTEM FUNCTIONS

  7F62   D0   14      		BNE SERAR3
  7F64   A0   00      		LDY #$00
  7F66   B1   1C      		LDA (ARG1),Y
  7F68   AA           		TAX
  7F69   C8           		INY
  7F6A   B1   1C      		LDA (ARG1),Y
  7F6C   85   1D      		STA ARG1+1
  7F6E   86   1C      		STX ARG1	;(CAR)
  7F70   A2   1C      		LDX #ARG1
  7F72   20   77   55 		JSR DELETE
  7F75   4C   52   41 		JMP POPJ
  7F78   A9   1E      	SERAR3:	LDA #XNWE
  7F7A   4C   7C   60 		JMP ERROR
                      	;
  7F7D   A5   8E      	ERPROS:	LDA OBLIST
  7F7F   85   A6      		STA TEMPN
  7F81   A5   8F      		LDA OBLIST+1
  7F83   85   A7      		STA TEMPN+1
  7F85   A5   A6      	ERPRSW:	LDA TEMPN
  7F87   D0   04      		BNE ERPRW1
  7F89   A5   A7      		LDA TEMPN+1
  7F8B   F0   1E      		BEQ RTS30
  7F8D   A0   00      	ERPRW1:	LDY #$00
  7F8F   B1   A6      		LDA (TEMPN),Y
  7F91   85   A8      		STA TEMPN1
  7F93   C8           		INY
  7F94   B1   A6      		LDA (TEMPN),Y
  7F96   85   A9      		STA TEMPN1+1	;(CAR)
  7F98   C8           		INY
  7F99   B1   A6      		LDA (TEMPN),Y
  7F9B   AA           		TAX
  7F9C   C8           		INY
  7F9D   B1   A6      		LDA (TEMPN),Y
  7F9F   85   A7      		STA TEMPN+1
  7FA1   86   A6      		STX TEMPN	;(CDR)
  7FA3   A2   A8      		LDX #TEMPN1
  7FA5   20   11   55 		JSR UNFUNC
  7FA8   4C   85   7F 		JMP ERPRSW
  7FAB   60           	RTS30:	RTS
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-224
LOGO	SYSTEM FUNCTIONS

  7FAC   A5   8E      	ERNAMS:	LDA OBLIST
  7FAE   85   A6      		STA TEMPN
  7FB0   A5   8F      		LDA OBLIST+1
  7FB2   85   A7      		STA TEMPN+1	;TEMPN is OBLIST pointer
  7FB4   A2   00      		LDX #$00
  7FB6   86   A9      		STX TEMPN1+1	;TEMPN1 is NOVALUE
  7FB8   E8           		INX
  7FB9   86   A8      		STX TEMPN1
  7FBB   A5   A6      	ERNMSW:	LDA TEMPN
  7FBD   D0   04      		BNE ERNMW1
  7FBF   A5   A7      		LDA TEMPN+1
  7FC1   F0   20      		BEQ ERNMWE
  7FC3   A0   00      	ERNMW1:	LDY #$00
  7FC5   B1   A6      		LDA (TEMPN),Y
  7FC7   85   AA      		STA TEMPN2	;TEMPN2 is NAME
  7FC9   C8           		INY
  7FCA   B1   A6      		LDA (TEMPN),Y
  7FCC   85   AB      		STA TEMPN2+1	;(CAR)
  7FCE   C8           		INY
  7FCF   B1   A6      		LDA (TEMPN),Y
  7FD1   AA           		TAX
  7FD2   C8           		INY
  7FD3   B1   A6      		LDA (TEMPN),Y
  7FD5   85   A7      		STA TEMPN+1
  7FD7   86   A6      		STX TEMPN	;(CDR)
  7FD9   A2   A8      		LDX #TEMPN1
  7FDB   A0   AA      		LDY #TEMPN2
  7FDD   20   D7   51 		JSR PUTVAL
  7FE0   4C   BB   7F 		JMP ERNMSW
  7FE3   A5   56      	ERNMWE:	LDA SOBLST
  7FE5   85   A6      		STA TEMPN
  7FE7   A5   57      		LDA SOBLST+1
  7FE9   85   A7      		STA TEMPN+1
  7FEB   A5   A6      	ERNMX:	LDA TEMPN
  7FED   C5   58      		CMP SOBTOP
  7FEF   D0   06      		BNE ERNMX1
  7FF1   A5   A7      		LDA TEMPN+1
  7FF3   C5   59      		CMP SOBTOP+1
  7FF5   F0   B4      		BEQ RTS30
  7FF7   A2   A8      	ERNMX1:	LDX #TEMPN1
  7FF9   A0   A6      		LDY #TEMPN
  7FFB   20   D7   51 		JSR PUTVAL
  7FFE   18           		CLC
  7FFF   A5   A6      		LDA TEMPN
  8001   69   04      		ADC #$04
  8003   85   A6      		STA TEMPN
  8005   90   E4      		BCC ERNMX
  8007   E6   A7      		INC TEMPN+1
  8009   4C   EB   7F 		JMP ERNMX
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-225
LOGO	SYSTEM FUNCTIONS

  800C   A2   1C      	SBTFST:	LDX #ARG1
  800E   20   66   51 		JSR VPOP
  8011   A2   1C      		LDX #ARG1
  8013   20   93   5C 		JSR GETTYP
  8016   C9   00      		CMP #LIST
  8018   F0   13      		BEQ SBFL
  801A   C9   07      		CMP #SATOM
  801C   F0   22      		BEQ SBFA
  801E   C9   01      		CMP #ATOM
  8020   F0   1E      		BEQ SBFA
  8022   C9   03      		CMP #FIX
  8024   F0   1A      		BEQ SBFA
  8026   C9   04      		CMP #FLO
  8028   F0   16      		BEQ SBFA
  802A   4C   8D   72 	SBFR:	JMP SMAKE2	;(ERROR XWTA,ARG1,CURTOK)
  802D   A5   1D      	SBFL:	LDA ARG1+1
  802F   F0   F9      		BEQ SBFR
  8031   A0   02      		LDY #$02
  8033   B1   1C      		LDA (ARG1),Y
  8035   AA           		TAX
  8036   C8           		INY
  8037   B1   1C      		LDA (ARG1),Y
  8039   85   1D      		STA ARG1+1
  803B   86   1C      		STX ARG1	;(CDR)
  803D   4C   E2   74 		JMP OTPRG1
  8040   A2   1C      	SBFA:	LDX #ARG1
  8042   A0   1E      		LDY #ARG2	;ARG2 is OLD_PTR
  8044   20   90   64 		JSR MAKPNM
  8047   A2   1E      		LDX #ARG2
  8049   20   38   51 		JSR VPUSHP
  804C   A0   00      		LDY #$00
  804E   84   A3      		STY ANSN1
  8050   B1   1E      		LDA (ARG2),Y
  8052   85   A8      		STA TEMPN1	;TEMPN1 is OLD_CAR
  8054   C8           		INY
  8055   B1   1E      		LDA (ARG2),Y
  8057   85   A9      		STA TEMPN1+1	;(CAR)
  8059   D0   08      		BNE SBFA1A
  805B   A5   A8      		LDA TEMPN1
  805D   F0   CB      		BEQ SBFR
  805F   A5   A9      	SBFA1:	LDA TEMPN1+1
  8061   F0   32      		BEQ SBFB
  8063   A2   00      	SBFA1A:	LDX #$00
  8065   A5   A9      		LDA TEMPN1+1
  8067   85   A8      		STA TEMPN1
  8069   86   A9      		STX TEMPN1+1
  806B   A0   A8      		LDY #TEMPN1
  806D   A9   AA      		LDA #TEMPN2
  806F   85   A2      		STA ANSN
  8071   8A           		TXA		;(LIST)
  8072   20   09   52 		JSR CONS
  8075   A5   A3      		LDA ANSN1
  8077   D0   09      		BNE SBFC
  8079   A2   AA      		LDX #TEMPN2
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-226
LOGO	SYSTEM FUNCTIONS

  807B   20   38   51 		JSR VPUSHP
  807E   E6   A3      		INC ANSN1	;BEG_OF_PNAME
  8080   D0   0B      		BNE SBFC1	;(Always)
  8082   A0   02      	SBFC:	LDY #$02
  8084   A5   AA      		LDA TEMPN2
  8086   91   A6      		STA (TEMPN),Y	;TEMPN is NEW_PTR
  8088   C8           		INY
  8089   A5   AB      		LDA TEMPN2+1
  808B   91   A6      		STA (TEMPN),Y	;(RPLACD)
  808D   A5   AA      	SBFC1:	LDA TEMPN2
  808F   85   A6      		STA TEMPN
  8091   A5   AB      		LDA TEMPN2+1
  8093   85   A7      		STA TEMPN+1
  8095   A0   02      	SBFB:	LDY #$02
  8097   B1   1E      		LDA (ARG2),Y
  8099   AA           		TAX
  809A   C8           		INY
  809B   B1   1E      		LDA (ARG2),Y
  809D   86   1E      		STX ARG2
  809F   85   1F      		STA ARG2+1	;(CDR)
  80A1   F0   1A      		BEQ SBFD
  80A3   A5   A8      	SBFB1:	LDA TEMPN1
  80A5   AA           		TAX
  80A6   A0   00      		LDY #$00
  80A8   B1   1E      		LDA (ARG2),Y
  80AA   85   A8      		STA TEMPN1	;(OLD_CAR)
  80AC   C8           		INY
  80AD   B1   1E      		LDA (ARG2),Y
  80AF   85   A9      		STA TEMPN1+1	;(CAR)
  80B1   88           		DEY
  80B2   8A           		TXA
  80B3   91   A6      		STA (TEMPN),Y
  80B5   C8           		INY
  80B6   A5   A8      		LDA TEMPN1
  80B8   91   A6      		STA (TEMPN),Y
  80BA   4C   5F   80 		JMP SBFA1
  80BD   A2   1E      	SBFD:	LDX #ARG2
  80BF   20   66   51 		JSR VPOP
  80C2   A5   A3      		LDA ANSN1
  80C4   D0   08      		BNE SBFD1
  80C6   A9   00      		LDA #$00
  80C8   85   1E      		STA ARG2
  80CA   85   1F      		STA ARG2+1
  80CC   F0   05      		BEQ SBFD2	;(Always)
  80CE   A2   1C      	SBFD1:	LDX #ARG1	;(OLD_CAR, discard)
  80D0   20   66   51 		JSR VPOP
  80D3   A2   1E      	SBFD2:	LDX #ARG2
  80D5   A0   1C      		LDY #ARG1
  80D7   20   20   5F 		JSR INTERN
  80DA   4C   E2   74 		JMP OTPRG1
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-227
LOGO	SYSTEM FUNCTIONS

  80DD   20   06   57 	SPEEK:	JSR GT1FIX
  80E0   A0   00      		LDY #$00
  80E2   B1   1C      		LDA (NARG1),Y
  80E4   85   1C      		STA NARG1
  80E6   84   1D      		STY NARG1+1
  80E8   A0   1C      		LDY #NARG1
  80EA   4C   4D   56 		JMP OTPFX1
                      	;
  80ED   20   1B   57 	SPOKE:	JSR GT2FIX	;First argument is location
  80F0   A0   00      		LDY #$00
  80F2   84   07      		STY OTPUTN
  80F4   A5   F2      		LDA NARG2
  80F6   91   1C      		STA (NARG1),Y
  80F8   4C   52   41 		JMP POPJ
                      	;
  80FB   20   5C   6C 	SCLSCR:	JSR HOME
  80FE   A9   00      		LDA #$00
  8100   85   07      		STA OTPUTN
  8102   4C   52   41 	SRET1:	JMP POPJ
                      	;
  8105   A9   00      	SRANDM:	LDA #$00
  8107   85   A8      		STA TEMPN1
  8109   85   A9      		STA TEMPN1+1
  810B   A9   25      		LDA #RANDA&$FF
  810D   85   A4      		STA TEMPNH
  810F   A9   03      		LDA #RANDA^
  8111   85   A5      		STA TEMPNH+1
  8113   A0   10      		LDY #$10
  8115   46   EE      	RMUL2:	LSR RANDOM+1
  8117   66   ED      		ROR RANDOM
  8119   90   0D      		BCC RMUL4
  811B   18           		CLC
  811C   A5   A8      	RMUL3:	LDA TEMPN1
  811E   65   A4      		ADC TEMPNH
  8120   85   A8      		STA TEMPN1
  8122   A5   A9      		LDA TEMPN1+1
  8124   65   A5      		ADC TEMPNH+1
  8126   85   A9      		STA TEMPN1+1
  8128   06   A4      	RMUL4:	ASL TEMPNH
  812A   26   A5      		ROL TEMPNH+1
  812C   88           		DEY
  812D   D0   E6      		BNE RMUL2
  812F   18           		CLC
  8130   A5   A8      		LDA TEMPN1
  8132   69   25      		ADC #RANDC&$FF
  8134   85   ED      		STA RANDOM
  8136   A5   A9      		LDA TEMPN1+1
  8138   69   00      		ADC #RANDC^
  813A   85   EE      		STA RANDOM+1
  813C   A0   ED      		LDY #RANDOM
  813E   4C   4D   56 		JMP OTPFX1
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-228
LOGO	SYSTEM FUNCTIONS

  8141   A5   4E      	SRNDMZ:	LDA RNDL
  8143   85   ED      		STA RANDOM
  8145   A5   4F      		LDA RNDH
  8147   85   EE      		STA RANDOM+1
  8149   A9   00      		LDA #$00
  814B   85   07      		STA OTPUTN
  814D   4C   52   41 		JMP POPJ
                      	;
  8150   A9   00      	SCTYI:	LDA #$00
  8152   85   1D      		STA ARG1+1	;Returns 255. if no key hit yet
  8154   20   39   6D 	SCTYI1:	JSR TSTCHR
  8157   C9   07      		CMP #STPKEY
  8159   F0   0F      		BEQ SCTYR1
  815B   C9   1A      		CMP #PAUSKY
  815D   F0   0E      		BEQ SCTYR2
  815F   C9   13      		CMP #LSTKEY
  8161   F0   0D      		BEQ SCTYR3
  8163   85   1C      		STA ARG1
  8165   A0   1C      		LDY #ARG1
  8167   4C   4D   56 		JMP OTPFX1
  816A   4C   CC   52 	SCTYR1:	JMP STPPK1
  816D   4C   C7   52 	SCTYR2:	JMP STPPKZ
  8170   20   FE   6D 	SCTYR3:	JSR RWAIT
  8173   4C   54   81 		JMP SCTYI1
                      	;
  8176   20   1B   57 	SCURSR:	JSR GT2FIX
  8179   A5   1D      		LDA NARG1+1	;Horizontal position 0 - 39.
  817B   D0   23      		BNE SCRSR1
  817D   85   07      		STA OTPUTN
  817F   A9   27      		LDA #WNDWTH-1
  8181   C5   1C      		CMP NARG1
  8183   90   1B      		BCC SCRSR1
  8185   A5   F3      		LDA NARG2+1	;Vertical position 0 - 23.
  8187   D0   17      		BNE SCRSR1
  8189   A5   23      		LDA WNDBTM
  818B   38           		SEC
  818C   E9   01      		SBC #$01
  818E   C5   F2      		CMP NARG2
  8190   90   0E      		BCC SCRSR1
  8192   A5   1C      		LDA NARG1
  8194   85   24      		STA CH
  8196   A5   F2      		LDA NARG2
  8198   85   25      		STA CV
  819A   20   EC   6C 		JSR BCALCA
  819D   4C   52   41 		JMP POPJ
  81A0   A9   23      	SCRSR1:	LDA #XCRSR	;"Position off of screen"
  81A2   4C   7C   60 		JMP ERROR
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-229
LOGO	SYSTEM FUNCTIONS

       81B4           	SCALLR	=SCALL1-1
                      	;
  81A5   20   06   57 	SCALL:	JSR GT1FIX
  81A8   A9   00      		LDA #$00
  81AA   85   07      		STA OTPUTN	;Assume no output
  81AC   A9   81      		LDA #SCALLR^
  81AE   48           		PHA		;Push return address for RTS
  81AF   A9   B4      		LDA #SCALLR&$FF
  81B1   48           		PHA
  81B2   6C   1C   00 		JMP (NARG1)
  81B5   4C   52   41 	SCALL1:	JMP POPJ
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-230
LOGO	SYSTEM FUNCTIONS

  81B8   A5   05      	SWORD:	LDA NARGS
  81BA   10   04      		BPL SWRD1
  81BC   49   FF      		EOR #$FF
  81BE   85   05      		STA NARGS
  81C0   A9   00      	SWRD1:	LDA #$00
  81C2   85   8C      		STA MARK5
  81C4   85   8D      		STA MARK5+1
  81C6   A5   05      		LDA NARGS
  81C8   0A           		ASL A
  81C9   85   B4      		STA ANSNX
  81CB   38           		SEC
  81CC   A5   1A      		LDA VSP
  81CE   E5   B4      		SBC ANSNX
  81D0   85   B5      		STA TEMPN6
  81D2   A5   1B      		LDA VSP+1
  81D4   E9   00      		SBC #$00
  81D6   85   B6      		STA TEMPN6+1
  81D8   A5   05      	SWRDW:	LDA NARGS
  81DA   F0   29      		BEQ SWRD2
  81DC   A0   00      		LDY #$00
  81DE   B1   B5      		LDA (TEMPN6),Y
  81E0   85   88      		STA MARK3
  81E2   C8           		INY
  81E3   B1   B5      		LDA (TEMPN6),Y
  81E5   85   89      		STA MARK3+1
  81E7   18           		CLC
  81E8   A5   B5      		LDA TEMPN6
  81EA   69   02      		ADC #$02
  81EC   85   B5      		STA TEMPN6
  81EE   90   02      		BCC SWRDW1
  81F0   E6   B5      		INC TEMPN6
  81F2   C6   05      	SWRDW1:	DEC NARGS
  81F4   A0   8A      		LDY #MARK4
  81F6   A2   88      		LDX #MARK3
  81F8   20   90   64 		JSR MAKPNM
  81FB   A5   8B      		LDA MARK4+1
  81FD   F0   D9      		BEQ SWRDW
  81FF   20   28   82 		JSR CONCAT	;MARK5 := (Concatenate MARK5 MARK4)
  8202   4C   D8   81 		JMP SWRDW
  8205   38           	SWRD2:	SEC
  8206   A5   1A      		LDA VSP
  8208   E5   B4      		SBC ANSNX
  820A   85   1A      		STA VSP
  820C   B0   02      		BCS SWRD3
  820E   C6   1B      		DEC VSP+1
  8210   A2   8C      	SWRD3:	LDX #MARK5
  8212   A0   1C      		LDY #ARG1
  8214   20   20   5F 		JSR INTERN
  8217   A9   00      		LDA #$00
  8219   85   88      		STA MARK3
  821B   85   89      		STA MARK3+1
  821D   85   8A      		STA MARK4
  821F   85   8B      		STA MARK4+1
  8221   85   8C      		STA MARK5
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-231
LOGO	SYSTEM FUNCTIONS

  8223   85   8D      		STA MARK5+1
  8225   4C   E2   74 		JMP OTPRG1
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-232
LOGO	SYSTEM FUNCTIONS

  8228   A5   8D      	CONCAT:	LDA MARK5+1
  822A   D0   09      		BNE CNCT1
  822C   A5   8A      		LDA MARK4	;MARK5 is Lnil, so make
  822E   A6   8B      		LDX MARK4+1	;MARK5 a copy of second word and return
  8230   A0   8C      		LDY #MARK5
  8232   4C   C5   82 		JMP COPY
  8235   A5   8C      	CNCT1:	LDA MARK5
  8237   A6   8D      		LDX MARK5+1
  8239   A0   AC      		LDY #TEMPN3	;Make TEMPN3 a copy of MARK5
  823B   20   C5   82 		JSR COPY
  823E   A5   AC      		LDA TEMPN3
  8240   85   AE      		STA TEMPN4	;Save the first word's pointer in TEMPN4
  8242   A5   AD      		LDA TEMPN3+1
  8244   85   AF      		STA TEMPN4+1
  8246   A2   AC      		LDX #TEMPN3	;Get the last cell of first word (TEMPN3)
  8248   20   98   70 		JSR GTLSTC
  824B   A0   01      		LDY #$01
  824D   B1   AC      		LDA (TEMPN3),Y
  824F   F0   1D      		BEQ CNCODD
  8251   A5   8A      		LDA MARK4	;Even no. chars. in first word
  8253   A6   8B      		LDX MARK4+1
  8255   A0   B0      		LDY #TEMPN5	;Make TEMPN5 a copy of second word
  8257   20   C5   82 		JSR COPY
  825A   A0   02      		LDY #$02
  825C   A5   B0      		LDA TEMPN5
  825E   91   AC      		STA (TEMPN3),Y	;Link second word onto first
  8260   C8           		INY
  8261   A5   B1      		LDA TEMPN5+1
  8263   91   AC      		STA (TEMPN3),Y
  8265   A5   AE      	CNCTWE:	LDA TEMPN4	;Restore pointer to new word
  8267   85   8C      		STA MARK5
  8269   A5   AF      		LDA TEMPN4+1
  826B   85   8D      		STA MARK5+1
  826D   60           		RTS
  826E   A0   00      	CNCODD:	LDY #$00	;Odd no. chars. in first word
  8270   84   A9      		STY TEMPN1+1
  8272   B1   8A      		LDA (MARK4),Y	;Get first char. of second word
  8274   C8           		INY
  8275   91   AC      		STA (TEMPN3),Y	;Append it to end of first word
  8277   B1   8A      		LDA (MARK4),Y
  8279   85   A8      		STA TEMPN1	;TEMPN1 holds second char. of second word
  827B   A5   8B      	CNCTW:	LDA MARK4+1
  827D   F0   E6      		BEQ CNCTWE
  827F   A0   02      		LDY #$02
  8281   B1   8A      		LDA (MARK4),Y
  8283   AA           		TAX
  8284   C8           		INY
  8285   B1   8A      		LDA (MARK4),Y
  8287   85   8B      		STA MARK4+1	;Advance second word char-ptr
  8289   86   8A      		STX MARK4
  828B   A5   A8      		LDA TEMPN1	;If even-numbered char. of second word nil, exit
  828D   F0   D6      		BEQ CNCTWE	;(already appended odd-numbered char. preceeding)
  828F   A5   8B      		LDA MARK4+1
  8291   D0   04      		BNE CNCTW1
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-233
LOGO	SYSTEM FUNCTIONS

  8293   85   A9      		STA TEMPN1+1	;Zero last character (because odd no.)
  8295   F0   0B      		BEQ CNCTW2	;(Always) Just add last char. if end of second word
  8297   A0   00      	CNCTW1:	LDY #$00
  8299   B1   8A      		LDA (MARK4),Y
  829B   85   A9      		STA TEMPN1+1	;Get odd-numbered (3,5,...) char.
  829D   C8           		INY
  829E   B1   8A      		LDA (MARK4),Y
  82A0   85   A3      		STA ANSN1	;Get next even-numbered (4,6,...) char.
  82A2   A9   A6      	CNCTW2:	LDA #TEMPN
  82A4   85   A2      		STA ANSN
  82A6   A0   A8      		LDY #TEMPN1
  82A8   A9   00      		LDA #$00
  82AA   AA           		TAX
  82AB   20   09   52 		JSR CONS	;Cons new cell
  82AE   A0   02      		LDY #$02
  82B0   A5   A6      		LDA TEMPN
  82B2   91   AC      		STA (TEMPN3),Y
  82B4   AA           		TAX
  82B5   C8           		INY
  82B6   A5   A7      		LDA TEMPN+1
  82B8   91   AC      		STA (TEMPN3),Y	;Append to new word
  82BA   85   AD      		STA TEMPN3+1
  82BC   86   AC      		STX TEMPN3	;New new-word end pointer
  82BE   A5   A3      		LDA ANSN1
  82C0   85   A8      		STA TEMPN1	;Last even char. becomes new odd char.
  82C2   4C   7B   82 		JMP CNCTW
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-234
LOGO	SYSTEM FUNCTIONS

  82C5   84   A3      	COPY:	STY ANSN1	;Y is STR1
  82C7   85   A8      		STA TEMPN1	;Make (ANSN1) point to a copy of (vAX)
  82C9   86   A9      		STX TEMPN1+1
  82CB   D0   07      		BNE COPY1
  82CD   99   00   00 		STA $00,Y	;If (vAX) is Lnil, make (ANSN1) Lnil
  82D0   99   00   00 		STA $00,Y
  82D3   60           		RTS
  82D4   84   A2      	COPY1:	STY ANSN	;Cons up an empty cell
  82D6   A9   00      		LDA #$00
  82D8   AA           		TAX
  82D9   A8           		TAY
  82DA   20   09   52 		JSR CONS
  82DD   A6   A3      		LDX ANSN1
  82DF   20   38   51 		JSR VPUSHP	;Vpush forming string
  82E2   A6   A3      	COPYW:	LDX ANSN1
  82E4   B5   00      		LDA $00,X
  82E6   85   AA      		STA TEMPN2
  82E8   B5   01      		LDA $01,X
  82EA   85   AB      		STA TEMPN2+1	;TEMPN2 points to empty last cell of copy
  82EC   A0   00      		LDY #$00
  82EE   B1   A8      		LDA (TEMPN1),Y
  82F0   91   AA      		STA (TEMPN2),Y	;Copy two characters into cell
  82F2   C8           		INY
  82F3   B1   A8      		LDA (TEMPN1),Y
  82F5   91   AA      		STA (TEMPN2),Y
  82F7   C8           		INY
  82F8   B1   A8      		LDA (TEMPN1),Y
  82FA   AA           		TAX
  82FB   C8           		INY
  82FC   B1   A8      		LDA (TEMPN1),Y
  82FE   85   A9      		STA TEMPN1+1	;Advance char-ptr of original
  8300   86   A8      		STX TEMPN1
  8302   AA           		TAX
  8303   F0   1F      		BEQ COPYWE	;Exit if end of original
  8305   A9   A6      		LDA #TEMPN
  8307   85   A2      		STA ANSN
  8309   A9   00      		LDA #$00
  830B   AA           		TAX
  830C   A8           		TAY
  830D   20   09   52 		JSR CONS	;Cons a new cell
  8310   A0   02      		LDY #$02
  8312   A6   A3      		LDX ANSN1
  8314   A5   A6      		LDA TEMPN
  8316   91   AA      		STA (TEMPN2),Y
  8318   95   00      		STA $00,X
  831A   C8           		INY
  831B   A5   A7      		LDA TEMPN+1
  831D   91   AA      		STA (TEMPN2),Y	;Link new cell on to end of copy
  831F   95   01      		STA $01,X	;Advance copy's last-cell ptr
  8321   4C   E2   82 		JMP COPYW
  8324   A6   A3      	COPYWE:	LDX ANSN1	;Vpop copy's beginning pointer
  8326   4C   66   51 		JMP VPOP
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-235
LOGO	SYSTEM FUNCTIONS

  8329   A2   1C      	SBTLST:	LDX #ARG1
  832B   20   66   51 		JSR VPOP
  832E   A2   1C      		LDX #ARG1
  8330   20   93   5C 		JSR GETTYP
  8333   C9   00      		CMP #LIST
  8335   F0   2F      		BEQ BTLSTL
  8337   C9   01      		CMP #ATOM
  8339   F0   0F      		BEQ BTLSTA
  833B   C9   07      		CMP #SATOM
  833D   F0   0B      		BEQ BTLSTA
  833F   C9   03      		CMP #FIX
  8341   F0   07      		BEQ BTLSTA
  8343   C9   04      		CMP #FLO
  8345   F0   03      		BEQ BTLSTA
  8347   4C   8D   72 	BTLSTR:	JMP SMAKE2
  834A   A0   B0      	BTLSTA:	LDY #TEMPN5
  834C   A2   1C      		LDX #ARG1
  834E   20   90   64 		JSR MAKPNM
  8351   A9   01      		LDA #ATOM
  8353   85   B2      		STA ANSN2
  8355   A0   00      		LDY #$00
  8357   B1   B0      		LDA (TEMPN5),Y
  8359   F0   EC      		BEQ BTLSTR
  835B   A5   B0      		LDA TEMPN5
  835D   85   1C      		STA ARG1
  835F   A5   B1      		LDA TEMPN5+1
  8361   85   1D      		STA ARG1+1
  8363   4C   6C   83 		JMP BTLSTX
  8366   85   B2      	BTLSTL:	STA ANSN2
  8368   A5   1D      		LDA ARG1+1
  836A   F0   DB      		BEQ BTLSTR
  836C   A9   00      	BTLSTX:	LDA #$00
  836E   85   A3      		STA ANSN1	;NEW_LIST
  8370   A2   1C      		LDX #ARG1
  8372   20   38   51 		JSR VPUSHP
  8375   A0   03      	BTLSW:	LDY #$03
  8377   B1   1C      		LDA (ARG1),Y
  8379   F0   54      		BEQ BTLSWE
  837B   A0   00      		LDY #$00
  837D   B1   1C      		LDA (ARG1),Y
  837F   85   A8      		STA TEMPN1	;TEMP_CAR
  8381   C8           		INY
  8382   B1   1C      		LDA (ARG1),Y
  8384   85   A9      		STA TEMPN1+1
  8386   A9   A6      		LDA #TEMPN	;TEMP
  8388   85   A2      		STA ANSN
  838A   A0   A8      		LDY #TEMPN1
  838C   A9   00      		LDA #$00
  838E   AA           		TAX
  838F   20   09   52 		JSR CONS
  8392   A5   B2      		LDA ANSN2
  8394   C9   01      		CMP #ATOM
  8396   D0   07      		BNE BTLSW1
  8398   A2   A6      		LDX #TEMPN
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-236
LOGO	SYSTEM FUNCTIONS

  839A   A9   02      		LDA #STRING
  839C   20   93   52 		JSR PUTTYP
  839F   A5   A3      	BTLSW1:	LDA ANSN1
  83A1   D0   0D      		BNE BTLSW2
  83A3   A2   A6      		LDX #TEMPN
  83A5   20   38   51 		JSR VPUSHP
  83A8   A6   A6      		LDX TEMPN
  83AA   A5   A7      		LDA TEMPN+1
  83AC   E6   A3      		INC ANSN1
  83AE   D0   0C      		BNE BTLSW3	;(Always)
  83B0   A0   02      	BTLSW2:	LDY #$02
  83B2   A5   A6      		LDA TEMPN
  83B4   91   AA      		STA (TEMPN2),Y
  83B6   AA           		TAX
  83B7   C8           		INY
  83B8   A5   A7      		LDA TEMPN+1
  83BA   91   AA      		STA (TEMPN2),Y
  83BC   85   AB      	BTLSW3:	STA TEMPN2+1
  83BE   86   AA      		STX TEMPN2
  83C0   A0   02      		LDY #$02
  83C2   B1   1C      		LDA (ARG1),Y
  83C4   AA           		TAX
  83C5   C8           		INY
  83C6   B1   1C      		LDA (ARG1),Y
  83C8   85   1D      		STA ARG1+1
  83CA   86   1C      		STX ARG1
  83CC   4C   75   83 		JMP BTLSW
  83CF   A5   B2      	BTLSWE:	LDA ANSN2
  83D1   C9   00      		CMP #LIST
  83D3   D0   19      		BNE BTLWE1
  83D5   A5   A3      		LDA ANSN1
  83D7   D0   08      		BNE BTLWL1
  83D9   A9   00      		LDA #$00
  83DB   85   1C      		STA ARG1
  83DD   85   1D      		STA ARG1+1
  83DF   F0   05      		BEQ BTLWL2	;(Always)
  83E1   A2   1C      	BTLWL1:	LDX #ARG1
  83E3   20   66   51 		JSR VPOP
  83E6   A2   A8      	BTLWL2:	LDX #TEMPN1
  83E8   20   66   51 		JSR VPOP
  83EB   4C   E2   74 		JMP OTPRG1
  83EE   A0   00      	BTLWE1:	LDY #$00
  83F0   B1   1C      		LDA (ARG1),Y
  83F2   85   A8      		STA TEMPN1
  83F4   C8           		INY
  83F5   B1   1C      		LDA (ARG1),Y
  83F7   85   A9      		STA TEMPN1+1
  83F9   F0   2B      		BEQ BTLWE2
  83FB   A9   A6      		LDA #TEMPN
  83FD   85   A2      		STA ANSN
  83FF   A9   00      		LDA #$00
  8401   AA           		TAX
  8402   85   A9      		STA TEMPN1+1
  8404   A0   A8      		LDY #TEMPN1
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-237
LOGO	SYSTEM FUNCTIONS

  8406   20   09   52 		JSR CONS
  8409   A5   A3      		LDA ANSN1
  840B   D0   0B      		BNE BTLWE3
  840D   A5   A6      		LDA TEMPN
  840F   85   1C      		STA ARG1
  8411   A5   A7      		LDA TEMPN+1
  8413   85   1D      		STA ARG1+1
  8415   4C   37   84 		JMP BTLWE5
  8418   A0   02      	BTLWE3:	LDY #$02
  841A   A5   A6      		LDA TEMPN
  841C   91   AA      		STA (TEMPN2),Y
  841E   C8           		INY
  841F   A5   A7      		LDA TEMPN+1
  8421   91   AA      		STA (TEMPN2),Y
  8423   4C   32   84 		JMP BTLWE4
  8426   A5   A3      	BTLWE2:	LDA ANSN1
  8428   D0   08      		BNE BTLWE4
  842A   A9   00      		LDA #$00
  842C   85   1C      		STA ARG1
  842E   85   1D      		STA ARG1+1
  8430   F0   05      		BEQ BTLWE5	;(Always)
  8432   A2   1C      	BTLWE4:	LDX #ARG1
  8434   20   66   51 		JSR VPOP
  8437   A2   A6      	BTLWE5:	LDX #TEMPN
  8439   20   66   51 		JSR VPOP
  843C   A0   1E      		LDY #ARG2
  843E   A2   1C      		LDX #ARG1
  8440   20   20   5F 		JSR INTERN
  8443   A2   1E      		LDX #ARG2
  8445   20   38   51 		JSR VPUSHP
  8448   A9   01      		LDA #$01
  844A   85   07      		STA OTPUTN
  844C   4C   52   41 		JMP POPJ
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-238
LOGO	SYSTEM FUNCTIONS

  844F   A9   01      	SLISTP:	LDA #$01
  8451   85   07      		STA OTPUTN
  8453   A2   1C      		LDX #ARG1
  8455   20   66   51 		JSR VPOP
  8458   A2   1C      		LDX #ARG1
  845A   20   93   5C 		JSR GETTYP
  845D   C9   00      		CMP #LIST
  845F   D0   03      		BNE NTLST
  8461   4C   88   70 	YESLST:	JMP VPLTRU
  8464   4C   90   70 	NTLST:	JMP VPLFLS
                      	;
  8467   A9   01      	SNMBRP:	LDA #$01
  8469   85   07      		STA OTPUTN
  846B   A2   1C      		LDX #ARG1
  846D   20   66   51 		JSR VPOP
  8470   A2   1C      		LDX #ARG1
  8472   20   93   5C 		JSR GETTYP
  8475   C9   03      		CMP #FIX	;ALSO FLONUMS
  8477   F0   E8      		BEQ YESLST
  8479   C9   01      		CMP #ATOM
  847B   D0   E7      		BNE NTLST
  847D   A2   1C      		LDX #ARG1
  847F   20   71   57 		JSR ATMTFX
  8482   B0   DD      		BCS YESLST
  8484   90   DE      		BCC NTLST
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-239
LOGO	SYSTEM FUNCTIONS

  8486   A9   01      	SEMPTP:	LDA #$01
  8488   85   07      		STA OTPUTN
  848A   A2   1C      		LDX #ARG1
  848C   20   66   51 		JSR VPOP
  848F   A2   1C      		LDX #ARG1
  8491   20   93   5C 		JSR GETTYP
  8494   C9   00      		CMP #LIST
  8496   F0   16      		BEQ SEMPT1
  8498   C9   01      		CMP #ATOM
  849A   D0   C8      		BNE NTLST
  849C   A0   02      		LDY #$02
  849E   B1   1C      		LDA (ARG1),Y
  84A0   AA           		TAX
  84A1   C8           		INY
  84A2   B1   1C      		LDA (ARG1),Y
  84A4   85   1D      		STA ARG1+1
  84A6   86   1C      		STX ARG1
  84A8   B1   1C      		LDA (ARG1),Y
  84AA   D0   B8      		BNE NTLST
  84AC   F0   B3      		BEQ YESLST
  84AE   A5   1D      	SEMPT1:	LDA ARG1+1
  84B0   D0   B2      		BNE NTLST
  84B2   F0   AD      		BEQ YESLST
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-240
LOGO	SYSTEM FUNCTIONS

  84B4   A5   05      	SLIST:	LDA NARGS
  84B6   10   04      		BPL SLIST1
  84B8   49   FF      		EOR #$FF
  84BA   85   05      		STA NARGS
  84BC   A9   84      	SLIST1:	LDA #MARK1
  84BE   85   A2      		STA ANSN
  84C0   A9   00      		LDA #$00
  84C2   85   84      		STA MARK1
  84C4   85   85      		STA MARK1+1
  84C6   A5   05      		LDA NARGS
  84C8   F0   14      		BEQ SLSTWE
  84CA   A2   86      	SLISTW:	LDX #MARK2
  84CC   20   66   51 		JSR VPOP
  84CF   A2   84      		LDX #MARK1
  84D1   86   A2      		STX ANSN
  84D3   A0   86      		LDY #MARK2
  84D5   A9   00      		LDA #$00	;(Type LIST)
  84D7   20   09   52 		JSR CONS
  84DA   C6   05      		DEC NARGS
  84DC   D0   EC      		BNE SLISTW
  84DE   A5   84      	SLSTWE:	LDA MARK1
  84E0   85   1C      		STA ARG1
  84E2   A5   85      		LDA MARK1+1
  84E4   85   1D      		STA ARG1+1
  84E6   A9   00      		LDA #$00
  84E8   85   84      		STA MARK1
  84EA   85   85      		STA MARK1+1
  84EC   85   86      		STA MARK2
  84EE   85   87      		STA MARK2+1
  84F0   4C   E2   74 		JMP OTPRG1
                      	;
  84F3   A9   00      	SCLINP:	LDA #$00	;?Clear entire input buffer when implemented
  84F5   85   07      		STA OTPUTN
  84F7   2C   10   C0 		BIT KPCLR
  84FA   4C   52   41 		JMP POPJ
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-241
LOGO	SYSTEM FUNCTIONS

                      	;	Not yet implemented (Graphics):
                      	;
  84FD   A9   00      	DO0A25:	LDA #$00
  84FF   85   07      		STA OTPUTN
  8501   4C   52   41 		JMP POPJ
                      	;
  8504   A9   00      	DO1A25:	LDA #$00
  8506   85   07      		STA OTPUTN
  8508   A2   1C      		LDX #ARG1
  850A   20   66   51 		JSR VPOP
  850D   4C   52   41 		JMP POPJ
                      	;
                      	;	End of program portion.
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-242
LOGO	SYSTEM TABLES

                      	.SBTTL	System Tables
                      	;	System Function address table:
       850E           	SYSTAB=.-2
  8510   74   74      		.ADDR	SPTHNG
  8512   B8   81      		.ADDR	SWORD
  8514   9F   74      		.ADDR	SPWRDP
  8516   34   6F      		.ADDR	SUNSUM
  8518   18   6E      		.ADDR	SUNDIF
  851A   68   72      		.ADDR	SMAKE
  851C   96   72      		.ADDR	SOUTPT
  851E   AE   72      		.ADDR	SSTOP
  8520   2B   76      		.ADDR	SPRINT
  8522   41   76      		.ADDR	STYPE
  8524   50   76      		.ADDR	SDEFIN
  8526   D4   72      		.ADDR	SDEBUG
  8528   26   73      		.ADDR	SCNTIN
  852A   C7   52      		.ADDR	STPPKZ
  852C   7D   73      		.ADDR	SELSE
  852E   B9   71      		.ADDR	SSNTNC
  8530   25   70      		.ADDR	SBOTH
  8532   40   70      		.ADDR	SEITHR
  8534   36   46      		.ADDR	XXSFR1	;Then
  8536   15   70      		.ADDR	SNOT
  8538   F4   42      		.ADDR	PARLOP	;Left-parenthesis
  853A   3B   46      		.ADDR	XXSFR2	;Right-parenthesis
  853C   32   73      		.ADDR	SIF
  853E   2D   74      		.ADDR	SRUN
  8540   AC   73      		.ADDR	SGO
  8542   3D   78      		.ADDR	SBPT
  8544   00   40      		.ADDR	LOGO	;Goodbye
  8546   EE   74      		.ADDR	SGCOLL
  8548   C0   74      		.ADDR	SNODES
  854A   0C   80      		.ADDR	SBTFST
  854C   75   77      		.ADDR	SFIRST
  854E   29   83      		.ADDR	SBTLST
  8550   DA   77      		.ADDR	SLAST
  8552   77   79      		.ADDR	STO
  8554   18   7A      		.ADDR	SEDIT
  8556   62   7A      		.ADDR	SEND
  8558   94   76      		.ADDR	STEXT
  855A   04   85      		.ADDR	DO1A25	;Forward
  855C   04   85      		.ADDR	DO1A25	;Back
  855E   04   85      		.ADDR	DO1A25	;Right
  8560   04   85      		.ADDR	DO1A25	;Left
  8562   B4   84      		.ADDR	SLIST
  8564   FB   80      		.ADDR	SCLSCR
  8566   FD   84      		.ADDR	DO0A25	;Home
  8568   FD   84      		.ADDR	DO0A25	;Penup
  856A   FD   84      		.ADDR	DO0A25	;Pendown
  856C   86   84      		.ADDR	SEMPTP
  856E   04   85      		.ADDR	DO1A25	;Snap
  8570   04   85      		.ADDR	DO1A25	;Display
  8572   FD   84      		.ADDR	DO0A25	;Wipeclean
  8574   2A   75      		.ADDR	STITLE
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-243
LOGO	SYSTEM TABLES

  8576   C4   70      		.ADDR	SFPUT
  8578   96   7A      		.ADDR	SPO
  857A   40   46      		.ADDR	XXSFR3	;All
  857C   40   46      		.ADDR	XXSFR3	;Names
  857E   E9   7E      		.ADDR	SERASE
  8580   1C   76      		.ADDR	SREAD
  8582   CE   7E      		.ADDR	SWRITE
  8584   D2   74      		.ADDR	SREQU
  8586   44   74      		.ADDR	STHING
  8588   00   73      		.ADDR	SLINES
  858A   4B   6E      		.ADDR	SSUM
  858C   71   6E      		.ADDR	SDIF
  858E   8F   6E      		.ADDR	SPROD
  8590   DE   6E      		.ADDR	SDIVID
  8592   CF   6F      		.ADDR	SGRTR
  8594   FF   6F      		.ADDR	SLESS
  8596   C0   72      		.ADDR	SCOMMT
  8598   47   78      		.ADDR	SEQUAL
  859A   08   7E      		.ADDR	STRCBK
  859C   E6   7A      		.ADDR	SPOTS
  859E   40   46      		.ADDR	XXSFR3	;Titles
  85A0   40   46      		.ADDR	XXSFR3	;Procedures
  85A2   DD   80      		.ADDR	SPEEK
  85A4   ED   80      		.ADDR	SPOKE
  85A6   4B   6E      		.ADDR	SSUM
  85A8   71   6E      		.ADDR	SDIF
  85AA   8F   6E      		.ADDR	SPROD
  85AC   DE   6E      		.ADDR	SDIVID
  85AE   CF   6F      		.ADDR	SGRTR
  85B0   FF   6F      		.ADDR	SLESS
  85B2   47   78      		.ADDR	SEQUAL
  85B4   EC   70      		.ADDR	SLPUT
  85B6   05   81      		.ADDR	SRANDM
  85B8   50   81      		.ADDR	SCTYI
  85BA   76   81      		.ADDR	SCURSR
  85BC   41   81      		.ADDR	SRNDMZ
  85BE   A5   81      		.ADDR	SCALL
  85C0   4F   84      		.ADDR	SLISTP
  85C2   67   84      		.ADDR	SNMBRP
  85C4   F3   84      		.ADDR	SCLINP
  85C6   F8   74      		.ADDR	SPATCH
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-244
LOGO	SYSTEM TABLES

                      	;	Error-string address table:
       85C6           	ERRTBL=.-2
  85C8   0E   86      		.ADDR	XXUOP
  85CA   2E   86      		.ADDR	XXEOL
  85CC   45   86      		.ADDR	XXUDF
  85CE   62   86      		.ADDR	XXHNV
  85D0   71   86      		.ADDR	XXTMO
  85D2   8A   86      		.ADDR	XXNOP
  85D4   9A   86      		.ADDR	XXRPN
  85D6   A7   86      		.ADDR	XXIFX
  85D8   C4   86      		.ADDR	XXVNA
  85DA   DC   86      		.ADDR	XXTIP
  85DC   F8   86      		.ADDR	XXWTA
  85DE   12   87      		.ADDR	XXUBL
  85E0   24   87      		.ADDR	XXNTL
  85E2   4F   87      		.ADDR	XXNTF
  85E4   74   87      		.ADDR	XXELS
  85E6   89   87      		.ADDR	XXBRK
  85E8   9D   87      		.ADDR	XXLABE
  85EA   C5   87      		.ADDR	XXTHN
  85EC   00   00      		.ADDR	0
  85EE   DA   87      		.ADDR	XXLNF
  85F0   F3   87      		.ADDR	XXEDT
  85F2   0C   88      		.ADDR	XXDEF
  85F4   21   88      		.ADDR	XXETL
  85F6   40   88      		.ADDR	XXNED
  85F8   58   88      		.ADDR	XXOPO
  85FA   00   00      		.ADDR	0
  85FC   7B   88      		.ADDR	XXTML
  85FE   95   88      		.ADDR	XXTMS
  8600   A6   88      		.ADDR	XXDBZ
  8602   C2   88      		.ADDR	XXNWE
  8604   E7   88      		.ADDR	XXLNTB
  8606   FB   88      		.ADDR	XXILN
  8608   0F   89      		.ADDR	XXOFLO
  860A   23   89      		.ADDR	XXNDF
  860C   34   89      		.ADDR	XXCRSR
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-245
LOGO	SYSTEM TABLES

                      	;	Error Messages:
  860E   59   6F   75 	XXUOP:	.ASCII "You don't say what to do with "
  8611   20   64   6F 
  8614   6E   27   74 
  8617   20   73   61 
  861A   79   20   77 
  861D   68   61   74 
  8620   20   74   6F 
  8623   20   64   6F 
  8626   20   77   69 
  8629   74   68   20 
  862C   00           		$00
  862D   FF           		$FF
  862E   55   6E   65 	XXEOL:	.ASCII "Unexpected end of line"
  8631   78   70   65 
  8634   63   74   65 
  8637   64   20   65 
  863A   6E   64   20 
  863D   6F   66   20 
  8640   6C   69   6E 
  8643   65           
  8644   FF           		$FF
  8645   59   6F   75 	XXUDF:	.ASCII "You haven't told me how to "
  8648   20   68   61 
  864B   76   65   6E 
  864E   27   74   20 
  8651   74   6F   6C 
  8654   64   20   6D 
  8657   65   20   68 
  865A   6F   77   20 
  865D   74   6F   20 
  8660   00           		$00
  8661   FF           		$FF
  8662   00           	XXHNV:	$00
  8663   20   68   61 		.ASCII " has no value"
  8666   73   20   6E 
  8669   6F   20   76 
  866C   61   6C   75 
  866F   65           
  8670   FF           		$FF
  8671   00           	XXTMO:	$00
  8672   20   6F   75 		.ASCII " output too many things"
  8675   74   70   75 
  8678   74   20   74 
  867B   6F   6F   20 
  867E   6D   61   6E 
  8681   79   20   74 
  8684   68   69   6E 
  8687   67   73      
  8689   FF           		$FF
  868A   00           	XXNOP:	$00
  868B   20   64   69 		.ASCII " didn't output"
  868E   64   6E   27 
  8691   74   20   6F 
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-246
LOGO	SYSTEM TABLES

  8694   75   74   70 
  8697   75   74      
  8699   FF           		$FF
  869A   55   6E   65 	XXRPN:	.ASCII "Unexpected )"
  869D   78   70   65 
  86A0   63   74   65 
  86A3   64   20   29 
  86A6   FF           		$FF
  86A7   54   68   65 	XXIFX:	.ASCII "There's nothing before the "
  86AA   72   65   27 
  86AD   73   20   6E 
  86B0   6F   74   68 
  86B3   69   6E   67 
  86B6   20   62   65 
  86B9   66   6F   72 
  86BC   65   20   74 
  86BF   68   65   20 
  86C2   00           		$00
  86C3   FF           		$FF
  86C4   59   6F   75 	XXVNA:	.ASCII "You need ( )'s around "
  86C7   20   6E   65 
  86CA   65   64   20 
  86CD   28   20   29 
  86D0   27   73   20 
  86D3   61   72   6F 
  86D6   75   6E   64 
  86D9   20           
  86DA   00           		$00
  86DB   FF           		$FF
  86DC   54   6F   6F 	XXTIP:	.ASCII "Too much inside parenthesis"
  86DF   20   6D   75 
  86E2   63   68   20 
  86E5   69   6E   73 
  86E8   69   64   65 
  86EB   20   70   61 
  86EE   72   65   6E 
  86F1   74   68   65 
  86F4   73   69   73 
  86F7   FF           		$FF
  86F8   00           	XXWTA:	$00
  86F9   20   64   6F 		.ASCII " doesn't like "
  86FC   65   73   6E 
  86FF   27   74   20 
  8702   6C   69   6B 
  8705   65   20      
  8707   01           		$01
  8708   20   61   73 		.ASCII " as input"
  870B   20   69   6E 
  870E   70   75   74 
  8711   FF           		$FF
  8712   00           	XXUBL:	$00
  8713   20   69   73 		.ASCII " is used by LOGO"
  8716   20   75   73 
  8719   65   64   20 
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-247
LOGO	SYSTEM TABLES

  871C   62   79   20 
  871F   4C   4F   47 
  8722   4F           
  8723   FF           		$FF
  8724   00           	XXNTL:	$00
  8725   20   73   68 		.ASCII " should only be called inside a procedure"
  8728   6F   75   6C 
  872B   64   20   6F 
  872E   6E   6C   79 
  8731   20   62   65 
  8734   20   63   61 
  8737   6C   6C   65 
  873A   64   20   69 
  873D   6E   73   69 
  8740   64   65   20 
  8743   61   20   70 
  8746   72   6F   63 
  8749   65   64   75 
  874C   72   65      
  874E   FF           		$FF
  874F   00           	XXNTF:	$00
  8750   20   77   61 		.ASCII " was given instead of TRUE or FALSE"
  8753   73   20   67 
  8756   69   76   65 
  8759   6E   20   69 
  875C   6E   73   74 
  875F   65   61   64 
  8762   20   6F   66 
  8765   20   54   52 
  8768   55   45   20 
  876B   6F   72   20 
  876E   46   41   4C 
  8771   53   45      
  8773   FF           		$FF
  8774   45   4C   53 	XXELS:	.ASCII "ELSE is out of place"
  8777   45   20   69 
  877A   73   20   6F 
  877D   75   74   20 
  8780   6F   66   20 
  8783   70   6C   61 
  8786   63   65      
  8788   FF           		$FF
  8789   49   20   77 	XXBRK:	.ASCII "I was told to pause"
  878C   61   73   20 
  878F   74   6F   6C 
  8792   64   20   74 
  8795   6F   20   70 
  8798   61   75   73 
  879B   65           
  879C   FF           		$FF
  879D   54   68   65 	XXLABE:	.ASCII "There's a label in the middle of a line"
  87A0   72   65   27 
  87A3   73   20   61 
  87A6   20   6C   61 
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-248
LOGO	SYSTEM TABLES

  87A9   62   65   6C 
  87AC   20   69   6E 
  87AF   20   74   68 
  87B2   65   20   6D 
  87B5   69   64   64 
  87B8   6C   65   20 
  87BB   6F   66   20 
  87BE   61   20   6C 
  87C1   69   6E   65 
  87C4   FF           		$FF
  87C5   54   48   45 	XXTHN:	.ASCII "THEN is out of place"
  87C8   4E   20   69 
  87CB   73   20   6F 
  87CE   75   74   20 
  87D1   6F   66   20 
  87D4   70   6C   61 
  87D7   63   65      
  87D9   FF           		$FF
  87DA   49   20   63 	XXLNF:	.ASCII "I can't find the label "
  87DD   61   6E   27 
  87E0   74   20   66 
  87E3   69   6E   64 
  87E6   20   74   68 
  87E9   65   20   6C 
  87EC   61   62   65 
  87EF   6C   20      
  87F1   00           		$00
  87F2   FF           		$FF
  87F3   59   6F   75 	XXEDT:	.ASCII "You're already editing "
  87F6   27   72   65 
  87F9   20   61   6C 
  87FC   72   65   61 
  87FF   64   79   20 
  8802   65   64   69 
  8805   74   69   6E 
  8808   67   20      
  880A   00           		$00
  880B   FF           		$FF
  880C   00           	XXDEF:	$00
  880D   20   69   73 		.ASCII " is already defined"
  8810   20   61   6C 
  8813   72   65   61 
  8816   64   79   20 
  8819   64   65   66 
  881C   69   6E   65 
  881F   64           
  8820   FF           		$FF
  8821   59   6F   75 	XXETL:	.ASCII "You can only edit at top level"
  8824   20   63   61 
  8827   6E   20   6F 
  882A   6E   6C   79 
  882D   20   65   64 
  8830   69   74   20 
  8833   61   74   20 
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-249
LOGO	SYSTEM TABLES

  8836   74   6F   70 
  8839   20   6C   65 
  883C   76   65   6C 
  883F   FF           		$FF
  8840   59   6F   75 	XXNED:	.ASCII "You're not in Edit mode"
  8843   27   72   65 
  8846   20   6E   6F 
  8849   74   20   69 
  884C   6E   20   45 
  884F   64   69   74 
  8852   20   6D   6F 
  8855   64   65      
  8857   FF           		$FF
  8858   59   6F   75 	XXOPO:	.ASCII "You can only say "
  885B   20   63   61 
  885E   6E   20   6F 
  8861   6E   6C   79 
  8864   20   73   61 
  8867   79   20      
  8869   00           		$00
  886A   20   74   6F 		.ASCII " to PO, ER, etc."
  886D   20   50   4F 
  8870   2C   20   45 
  8873   52   2C   20 
  8876   65   74   63 
  8879   2E           
  887A   FF           		$FF
  887B   54   6F   6F 	XXTML:	.ASCII "Too many display commands"
  887E   20   6D   61 
  8881   6E   79   20 
  8884   64   69   73 
  8887   70   6C   61 
  888A   79   20   63 
  888D   6F   6D   6D 
  8890   61   6E   64 
  8893   73           
  8894   FF           		$FF
  8895   54   6F   6F 	XXTMS:	.ASCII "Too much snapped"
  8898   20   6D   75 
  889B   63   68   20 
  889E   73   6E   61 
  88A1   70   70   65 
  88A4   64           
  88A5   FF           		$FF
  88A6   59   6F   75 	XXDBZ:	.ASCII "You tried to divide by zero"
  88A9   20   74   72 
  88AC   69   65   64 
  88AF   20   74   6F 
  88B2   20   64   69 
  88B5   76   69   64 
  88B8   65   20   62 
  88BB   79   20   7A 
  88BE   65   72   6F 
  88C1   FF           		$FF
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-250
LOGO	SYSTEM TABLES

  88C2   59   6F   75 	XXNWE:	.ASCII "You can't do that while in Edit mode"
  88C5   20   63   61 
  88C8   6E   27   74 
  88CB   20   64   6F 
  88CE   20   74   68 
  88D1   61   74   20 
  88D4   77   68   69 
  88D7   6C   65   20 
  88DA   69   6E   20 
  88DD   45   64   69 
  88E0   74   20   6D 
  88E3   6F   64   65 
  88E6   FF           		$FF
  88E7   4C   69   6E 	XXLNTB:	.ASCII "Line number too big"
  88EA   65   20   6E 
  88ED   75   6D   62 
  88F0   65   72   20 
  88F3   74   6F   6F 
  88F6   20   62   69 
  88F9   67           
  88FA   FF           		$FF
  88FB   49   6C   6C 	XXILN:	.ASCII "Illegal line number"
  88FE   65   67   61 
  8901   6C   20   6C 
  8904   69   6E   65 
  8907   20   6E   75 
  890A   6D   62   65 
  890D   72           
  890E   FF           		$FF
  890F   41   72   69 	XXOFLO:	.ASCII "Arithmetic overflow"
  8912   74   68   6D 
  8915   65   74   69 
  8918   63   20   6F 
  891B   76   65   72 
  891E   66   6C   6F 
  8921   77           
  8922   FF           		$FF
  8923   00           	XXNDF:	$00
  8924   20   69   73 		.ASCII " is not defined"
  8927   20   6E   6F 
  892A   74   20   64 
  892D   65   66   69 
  8930   6E   65   64 
  8933   FF           		$FF
  8934   43   75   72 	XXCRSR:	.ASCII "Cursor coordinates off of screen"
  8937   73   6F   72 
  893A   20   63   6F 
  893D   6F   72   64 
  8940   69   6E   61 
  8943   74   65   73 
  8946   20   6F   66 
  8949   66   20   6F 
  894C   66   20   73 
  894F   63   72   65 
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-251
LOGO	SYSTEM TABLES

  8952   65   6E      
  8954   FF           		$FF
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-252
LOGO	SYSTEM TABLES

                      	;	Primitive table:
  8955   00           	PRMTAB:	0
  8956   00           		0
  8957   36           		IALL
  8958   41   4C   4C 		.ASCII "ALL "
  895B   20           
  895C   01           		1
  895D   00           		0
  895E   27           		IBACK
  895F   42   41   43 		.ASCII "BACK "
  8962   4B   20      
  8964   01           		1
  8965   05           		5
  8966   1E           		IBTFST
  8967   42   46   20 		.ASCII "BF "
  896A   01           		1
  896B   00           		0
  896C   27           		IBACK
  896D   42   4B   20 		.ASCII "BK "
  8970   01           		1
  8971   05           		5
  8972   20           		IBTLST
  8973   42   4C   20 		.ASCII "BL "
  8976   02           		2
  8977   01           		1
  8978   11           		IBOTH
  8979   42   4F   54 		.ASCII "BOTH "
  897C   48   20      
  897E   01           		1
  897F   05           		5
  8980   1E           		IBTFST
  8981   42   55   54 		.ASCII "BUTFIRST "
  8984   46   49   52 
  8987   53   54   20 
  898A   01           		1
  898B   05           		5
  898C   20           		IBTLST
  898D   42   55   54 		.ASCII "BUTLAST "
  8990   4C   41   53 
  8993   54   20      
  8995   00           		0
  8996   00           		0
  8997   5B           		ICLINP
  8998   43   4C   45 		.ASCII "CLEARINPUT "
  899B   41   52   49 
  899E   4E   50   55 
  89A1   54   20      
  89A3   00           		0
  89A4   00           		0
  89A5   2B           		ICS
  89A6   43   4C   45 		.ASCII "CLEARSCREEN "
  89A9   41   52   53 
  89AC   43   52   45 
  89AF   45   4E   20 
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-253
LOGO	SYSTEM TABLES

  89B2   00           		0
  89B3   00           		0
  89B4   0D           		ICNTIN
  89B5   43   4F   20 		.ASCII "CO "
  89B8   00           		0
  89B9   00           		0
  89BA   0D           		ICNTIN
  89BB   43   4F   4E 		.ASCII "CONTINUE "
  89BE   54   49   4E 
  89C1   55   45   20 
  89C4   00           		0
  89C5   00           		0
  89C6   2B           		ICS
  89C7   43   53   20 		.ASCII "CS "
  89CA   02           		2
  89CB   05           		5
  89CC   56           		ICURSR
  89CD   43   55   52 		.ASCII "CURSOR "
  89D0   53   4F   52 
  89D3   20           
  89D4   02           		2
  89D5   00           		0
  89D6   0B           		IDEFIN
  89D7   44   45   20 		.ASCII "DE "
  89DA   00           		0
  89DB   00           		0
  89DC   0C           		IDEBUG
  89DD   44   45   42 		.ASCII "DEBUG "
  89E0   55   47   20 
  89E3   02           		2
  89E4   00           		0
  89E5   0B           		IDEFIN
  89E6   44   45   46 		.ASCII "DEFINE "
  89E9   49   4E   45 
  89EC   20           
  89ED   02           		2
  89EE   06           		6
  89EF   3F           		IDIF
  89F0   44   49   46 		.ASCII "DIFFERENCE "
  89F3   46   45   52 
  89F6   45   4E   43 
  89F9   45   20      
  89FB   01           		1
  89FC   00           		0
  89FD   31           		IDISPL
  89FE   44   49   53 		.ASCII "DISPLAY "
  8A01   50   4C   41 
  8A04   59   20      
  8A06   00           		0
  8A07   00           		0
  8A08   23           		IEDIT
  8A09   45   44   20 		.ASCII "ED "
  8A0C   00           		0
  8A0D   00           		0
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-254
LOGO	SYSTEM TABLES

  8A0E   23           		IEDIT
  8A0F   45   44   49 		.ASCII "EDIT "
  8A12   54   20      
  8A14   02           		2
  8A15   01           		1
  8A16   12           		IEITHR
  8A17   45   49   54 		.ASCII "EITHER "
  8A1A   48   45   52 
  8A1D   20           
  8A1E   00           		0
  8A1F   01           		1
  8A20   0F           		IELSE
  8A21   45   4C   53 		.ASCII "ELSE "
  8A24   45   20      
  8A26   01           		1
  8A27   05           		5
  8A28   2F           		IEMPTP
  8A29   45   4D   50 		.ASCII "EMPTY? "
  8A2C   54   59   3F 
  8A2F   20           
  8A30   00           		0
  8A31   00           		0
  8A32   24           		IEND
  8A33   45   4E   44 		.ASCII "END "
  8A36   20           
  8A37   02           		2
  8A38   03           		3
  8A39   45           		IEQUAL
  8A3A   45   51   55 		.ASCII "EQUAL? "
  8A3D   41   4C   3F 
  8A40   20           
  8A41   00           		0
  8A42   00           		0
  8A43   38           		IERASE
  8A44   45   52   20 		.ASCII "ER "
  8A47   00           		0
  8A48   00           		0
  8A49   38           		IERASE
  8A4A   45   52   41 		.ASCII "ERASE "
  8A4D   53   45   20 
  8A50   01           		1
  8A51   00           		0
  8A52   26           		IFORWD
  8A53   46   44   20 		.ASCII "FD "
  8A56   01           		1
  8A57   05           		5
  8A58   1F           		IFIRST
  8A59   46   49   52 		.ASCII "FIRST "
  8A5C   53   54   20 
  8A5F   01           		1
  8A60   00           		0
  8A61   26           		IFORWD
  8A62   46   4F   52 		.ASCII "FORWARD "
  8A65   57   41   52 
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-255
LOGO	SYSTEM TABLES

  8A68   44   20      
  8A6A   02           		2
  8A6B   00           		0
  8A6C   34           		IFPUT
  8A6D   46   50   55 		.ASCII "FPUT "
  8A70   54   20      
  8A72   01           		1
  8A73   00           		0
  8A74   19           		IGO
  8A75   47   4F   20 		.ASCII "GO "
  8A78   00           		0
  8A79   00           		0
  8A7A   1B           		IGDBYE
  8A7B   47   4F   4F 		.ASCII "GOODBYE "
  8A7E   44   42   59 
  8A81   45   20      
  8A83   02           		2
  8A84   04           		4
  8A85   42           		IGREAT
  8A86   47   52   45 		.ASCII "GREATER? "
  8A89   41   54   45 
  8A8C   52   3F   20 
  8A8F   00           		0
  8A90   00           		0
  8A91   2C           		IHOME
  8A92   48   4F   4D 		.ASCII "HOME "
  8A95   45   20      
  8A97   01           		1
  8A98   00           		0
  8A99   17           		IIF
  8A9A   49   46   20 		.ASCII "IF "
  8A9D   01           		1
  8A9E   05           		5
  8A9F   21           		ILAST
  8AA0   4C   41   53 		.ASCII "LAST "
  8AA3   54   20      
  8AA5   01           		1
  8AA6   00           		0
  8AA7   29           		ILEFT
  8AA8   4C   45   46 		.ASCII "LEFT "
  8AAB   54   20      
  8AAD   02           		2
  8AAE   04           		4
  8AAF   43           		ILESS
  8AB0   4C   45   53 		.ASCII "LESS? "
  8AB3   53   3F   20 
  8AB6   00           		0
  8AB7   00           		0
  8AB8   3D           		ILINES
  8AB9   4C   49   4E 		.ASCII "LINES "
  8ABC   45   53   20 
  8ABF   FD           		-3
  8AC0   05           		5
  8AC1   2A           		ILIST
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-256
LOGO	SYSTEM TABLES

  8AC2   4C   49   53 		.ASCII "LIST "
  8AC5   54   20      
  8AC7   01           		1
  8AC8   05           		5
  8AC9   59           		ILISTP
  8ACA   4C   49   53 		.ASCII "LIST? "
  8ACD   54   3F   20 
  8AD0   02           		2
  8AD1   00           		0
  8AD2   53           		ILPUT
  8AD3   4C   50   55 		.ASCII "LPUT "
  8AD6   54   20      
  8AD8   01           		1
  8AD9   00           		0
  8ADA   29           		ILEFT
  8ADB   4C   54   20 		.ASCII "LT "
  8ADE   02           		2
  8ADF   00           		0
  8AE0   06           		IMAKE
  8AE1   4D   41   4B 		.ASCII "MAKE "
  8AE4   45   20      
  8AE6   00           		0
  8AE7   00           		0
  8AE8   37           		INAMES
  8AE9   4E   41   4D 		.ASCII "NAMES "
  8AEC   45   53   20 
  8AEF   01           		1
  8AF0   02           		2
  8AF1   14           		INOT
  8AF2   4E   4F   54 		.ASCII "NOT "
  8AF5   20           
  8AF6   01           		1
  8AF7   05           		5
  8AF8   5A           		INMBRP
  8AF9   4E   55   4D 		.ASCII "NUMBER? "
  8AFC   42   45   52 
  8AFF   3F   20      
  8B01   01           		1
  8B02   00           		0
  8B03   07           		IOTPUT
  8B04   4F   50   20 		.ASCII "OP "
  8B07   01           		1
  8B08   00           		0
  8B09   07           		IOTPUT
  8B0A   4F   55   54 		.ASCII "OUTPUT "
  8B0D   50   55   54 
  8B10   20           
  8B11   00           		0
  8B12   00           		0
  8B13   5C           		IPATCH
  8B14   50   41   54 		.ASCII "PAT"
  8B17   00           		0
  8B18   00           		0
  8B19   50   41   54 		.ASCII "PATCH"
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-257
LOGO	SYSTEM TABLES

  8B1C   43   48      
  8B1E   00           		0
  8B1F   00           		0
  8B20   0E           		IPAUSE
  8B21   50   41   55 		.ASCII "PAUSE "
  8B24   53   45   20 
  8B27   00           		0
  8B28   00           		0
  8B29   2E           		IPENDN
  8B2A   50   44   20 		.ASCII "PD "
  8B2D   00           		0
  8B2E   00           		0
  8B2F   2E           		IPENDN
  8B30   50   45   4E 		.ASCII "PENDOWN "
  8B33   44   4F   57 
  8B36   4E   20      
  8B38   00           		0
  8B39   00           		0
  8B3A   2D           		IPENUP
  8B3B   50   45   4E 		.ASCII "PENUP "
  8B3E   55   50   20 
  8B41   00           		0
  8B42   00           		0
  8B43   35           		IPO
  8B44   50   4F   20 		.ASCII "PO "
  8B47   00           		0
  8B48   00           		0
  8B49   47           		IPOTS
  8B4A   50   4F   54 		.ASCII "POTS "
  8B4D   53   20      
  8B4F   01           		1
  8B50   00           		0
  8B51   09           		IPRINT
  8B52   50   52   20 		.ASCII "PR "
  8B55   01           		1
  8B56   00           		0
  8B57   09           		IPRINT
  8B58   50   52   49 		.ASCII "PRINT "
  8B5B   4E   54   20 
  8B5E   01           		1
  8B5F   05           		5
  8B60   0A           		ITYPE
  8B61   50   52   49 		.ASCII "PRINT1 "
  8B64   4E   54   31 
  8B67   20           
  8B68   00           		0
  8B69   00           		0
  8B6A   35           		IPO
  8B6B   50   52   49 		.ASCII "PRINTOUT "
  8B6E   4E   54   4F 
  8B71   55   54   20 
  8B74   00           		0
  8B75   00           		0
  8B76   49           		IPROCS
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-258
LOGO	SYSTEM TABLES

  8B77   50   52   4F 		.ASCII "PROCEDURES "
  8B7A   43   45   44 
  8B7D   55   52   45 
  8B80   53   20      
  8B82   02           		2
  8B83   07           		7
  8B84   40           		IPROD
  8B85   50   52   4F 		.ASCII "PRODUCT "
  8B88   44   55   43 
  8B8B   54   20      
  8B8D   00           		0
  8B8E   00           		0
  8B8F   2D           		IPENUP
  8B90   50   55   20 		.ASCII "PU "
  8B93   02           		2
  8B94   07           		7
  8B95   41           		IQUOT
  8B96   51   55   4F 		.ASCII "QUOTIENT "
  8B99   54   49   45 
  8B9C   4E   54   20 
  8B9F   00           		0
  8BA0   00           		0
  8BA1   54           		IRANDM
  8BA2   52   41   4E 		.ASCII "RANDOM "
  8BA5   44   4F   4D 
  8BA8   20           
  8BA9   00           		0
  8BAA   00           		0
  8BAB   57           		IRNDMZ
  8BAC   52   41   4E 		.ASCII "RANDOMIZE "
  8BAF   44   4F   4D 
  8BB2   49   5A   45 
  8BB5   20           
  8BB6   00           		0
  8BB7   00           		0
  8BB8   55           		ICTYI
  8BB9   52   43   20 		.ASCII "RC "
  8BBC   00           		0
  8BBD   00           		0
  8BBE   39           		IREAD
  8BBF   52   45   41 		.ASCII "READ "
  8BC2   44   20      
  8BC4   00           		0
  8BC5   00           		0
  8BC6   55           		ICTYI
  8BC7   52   45   41 		.ASCII "READCHARACTER "
  8BCA   44   43   48 
  8BCD   41   52   41 
  8BD0   43   54   45 
  8BD3   52   20      
  8BD5   00           		0
  8BD6   00           		0
  8BD7   3B           		IREQST
  8BD8   52   45   51 		.ASCII "REQUEST "
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-259
LOGO	SYSTEM TABLES

  8BDB   55   45   53 
  8BDE   54   20      
  8BE0   01           		1
  8BE1   00           		0
  8BE2   28           		IRIGHT
  8BE3   52   49   47 		.ASCII "RIGHT "
  8BE6   48   54   20 
  8BE9   00           		0
  8BEA   00           		0
  8BEB   3B           		IREQST
  8BEC   52   51   20 		.ASCII "RQ "
  8BEF   01           		1
  8BF0   00           		0
  8BF1   28           		IRIGHT
  8BF2   52   54   20 		.ASCII "RT "
  8BF5   01           		1
  8BF6   00           		0
  8BF7   18           		IRUN
  8BF8   52   55   4E 		.ASCII "RUN "
  8BFB   20           
  8BFC   FD           		-3
  8BFD   05           		5
  8BFE   10           		ISNTNC
  8BFF   53   45   20 		.ASCII "SE "
  8C02   FD           		-3
  8C03   05           		5
  8C04   10           		ISNTNC
  8C05   53   45   4E 		.ASCII "SENTENCE "
  8C08   54   45   4E 
  8C0B   43   45   20 
  8C0E   00           		0
  8C0F   05           		5
  8C10   30           		ISNAP
  8C11   53   4E   41 		.ASCII "SNAP "
  8C14   50   20      
  8C16   00           		0
  8C17   00           		0
  8C18   08           		ISTOP
  8C19   53   54   4F 		.ASCII "STOP "
  8C1C   50   20      
  8C1E   02           		2
  8C1F   06           		6
  8C20   3E           		ISUM
  8C21   53   55   4D 		.ASCII "SUM "
  8C24   20           
  8C25   00           		0
  8C26   00           		0
  8C27   46           		ITRCBK
  8C28   54   42   20 		.ASCII "TB "
  8C2B   01           		1
  8C2C   05           		5
  8C2D   25           		ITEXT
  8C2E   54   45   58 		.ASCII "TEXT "
  8C31   54   20      
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-260
LOGO	SYSTEM TABLES

  8C33   00           		0
  8C34   00           		0
  8C35   13           		ITHEN
  8C36   54   48   45 		.ASCII "THEN "
  8C39   4E   20      
  8C3B   01           		1
  8C3C   05           		5
  8C3D   3C           		ITHING
  8C3E   54   48   49 		.ASCII "THING "
  8C41   4E   47   20 
  8C44   01           		1
  8C45   05           		5
  8C46   01           		ITHNGP
  8C47   54   48   49 		.ASCII "THINGP "
  8C4A   4E   47   50 
  8C4D   20           
  8C4E   00           		0
  8C4F   00           		0
  8C50   33           		ITITLE
  8C51   54   49   20 		.ASCII "TI "
  8C54   00           		0
  8C55   00           		0
  8C56   33           		ITITLE
  8C57   54   49   54 		.ASCII "TITLE "
  8C5A   4C   45   20 
  8C5D   00           		0
  8C5E   00           		0
  8C5F   48           		ITITLS
  8C60   54   49   54 		.ASCII "TITLES "
  8C63   4C   45   53 
  8C66   20           
  8C67   00           		0
  8C68   00           		0
  8C69   22           		ITO
  8C6A   54   4F   20 		.ASCII "TO "
  8C6D   00           		0
  8C6E   00           		0
  8C6F   46           		ITRCBK
  8C70   54   52   41 		.ASCII "TRACEBACK "
  8C73   43   45   42 
  8C76   41   43   4B 
  8C79   20           
  8C7A   00           		0
  8C7B   00           		0
  8C7C   32           		IWPCLN
  8C7D   57   43   20 		.ASCII "WC "
  8C80   00           		0
  8C81   00           		0
  8C82   32           		IWPCLN
  8C83   57   49   50 		.ASCII "WIPECLEAN "
  8C86   45   43   4C 
  8C89   45   41   4E 
  8C8C   20           
  8C8D   FD           		-3
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-261
LOGO	SYSTEM TABLES

  8C8E   05           		5
  8C8F   02           		IWORD
  8C90   57   4F   52 		.ASCII "WORD "
  8C93   44   20      
  8C95   01           		1
  8C96   05           		5
  8C97   03           		IWORDP
  8C98   57   4F   52 		.ASCII "WORD? "
  8C9B   44   3F   20 
  8C9E   00           		0
  8C9F   00           		0
  8CA0   3A           		IWRITE
  8CA1   57   52   49 		.ASCII "WRITE "
  8CA4   54   45   20 
  8CA7   00           		0
  8CA8   00           		0
  8CA9   15           		ILPAR
  8CAA   28   20      		.ASCII "( "
  8CAC   00           		0
  8CAD   00           		0
  8CAE   16           		IRPAR
  8CAF   29   20      		.ASCII ") "
  8CB1   02           		2
  8CB2   07           		7
  8CB3   4E           		INPROD
  8CB4   2A   20      		.ASCII "* "
  8CB6   02           		2
  8CB7   06           		6
  8CB8   4C           		INSUM
  8CB9   2B   20      		.ASCII "+ "
  8CBB   02           		2
  8CBC   06           		6
  8CBD   4D           		INDIF
  8CBE   2D   20      		.ASCII "- "
  8CC0   00           		0
  8CC1   00           		0
  8CC2   1A           		IBPT
  8CC3   2E   42   50 		.ASCII ".BPT "
  8CC6   54   20      
  8CC8   01           		1
  8CC9   05           		5
  8CCA   58           		ICALL
  8CCB   2E   43   41 		.ASCII ".CALL "
  8CCE   4C   4C   20 
  8CD1   02           		2
  8CD2   00           		0
  8CD3   4B           		IPOKE
  8CD4   2E   44   45 		.ASCII ".DEPOSIT "
  8CD7   50   4F   53 
  8CDA   49   54   20 
  8CDD   01           		1
  8CDE   00           		0
  8CDF   4A           		IPEEK
  8CE0   2E   45   58 		.ASCII ".EXAMINE "
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-262
LOGO	SYSTEM TABLES

  8CE3   41   4D   49 
  8CE6   4E   45   20 
  8CE9   00           		0
  8CEA   00           		0
  8CEB   1C           		IGCOLL
  8CEC   2E   47   43 		.ASCII ".GCOLL "
  8CEF   4F   4C   4C 
  8CF2   20           
  8CF3   00           		0
  8CF4   00           		0
  8CF5   1D           		INODES
  8CF6   2E   4E   4F 		.ASCII ".NODES "
  8CF9   44   45   53 
  8CFC   20           
  8CFD   02           		2
  8CFE   07           		7
  8CFF   4F           		INQUOT
  8D00   2F   20      		.ASCII "/ "
  8D02   00           		0
  8D03   00           		0
  8D04   44           		ICOMNT
  8D05   3B   20      		.ASCII "; "
  8D07   02           		2
  8D08   04           		4
  8D09   51           		INLESS
  8D0A   3C   20      		.ASCII "< "
  8D0C   02           		2
  8D0D   03           		3
  8D0E   52           		INEQUL
  8D0F   3D   20      		.ASCII "= "
  8D11   02           		2
  8D12   04           		4
  8D13   50           		INGRTR
  8D14   3E   20      		.ASCII "> "
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-263
LOGO	SYSTEM TABLES

                      	;	V-Primitive table:
  8D16   4C           	VPRMTB:	INSUM
  8D17   E9           		INFSUM
  8D18   01           		1
  8D19   4D           		INDIF
  8D1A   EB           		INFDIF
  8D1B   01           		1
  8D1C   15           		ILPAR
  8D1D   CF           		LPAR
  8D1E   01           		1
  8D1F   16           		IRPAR
  8D20   E3           		RPAR
  8D21   01           		1
  8D22   17           		IIF
  8D23   CD           		LIF
  8D24   01           		1
  8D25   0F           		IELSE
  8D26   C7           		LELSE
  8D27   01           		1
  8D28   13           		ITHEN
  8D29   D3           		LTHEN
  8D2A   01           		1
  8D2B   37           		INAMES
  8D2C   D9           		NAMES
  8D2D   01           		1
  8D2E   36           		IALL
  8D2F   BF           		ALL
  8D30   01           		1
  8D31   48           		ITITLS
  8D32   E7           		TITLES
  8D33   01           		1
  8D34   49           		IPROCS
  8D35   E1           		PROCS
  8D36   01           		1
  8D37   24           		IEND
  8D38   C9           		LEND
  8D39   01           		1
  8D3A   35           		IPO
  8D3B   DB           		PO
  8D3C   01           		1
  8D3D   35           		IPO
  8D3E   DF           		PRNTOT
  8D3F   02           		2
  8D40   47           		IPOTS
  8D41   DD           		POTS
  8D42   01           		1
  8D43   38           		IERASE
  8D44   C3           		ER
  8D45   01           		1
  8D46   38           		IERASE
  8D47   C5           		ERASE
  8D48   02           		2
  8D49   33           		ITITLE
  8D4A   E5           		TI
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-264
LOGO	SYSTEM TABLES

  8D4B   01           		1
  8D4C   33           		ITITLE
  8D4D   D5           		LTITLE
  8D4E   02           		2
  8D4F   08           		ISTOP
  8D50   D1           		LSTOP
  8D51   01           		1
  8D52   44           		ICOMNT
  8D53   C1           		COMMNT
  8D54   01           		1
       8D55           	VPRMTE=.
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-265
LOGO	SYSTEM TABLES

                      	;	Miscellaneous text strings:
                      
                      	;The changed HELSTR is as per Hal's request, for use while the system
                      	;is in development.
  8D55   50   72   65 	HELSTR:	.ASCII "Preliminary Apple LOGO Development System"
  8D58   6C   69   6D 
  8D5B   69   6E   61 
  8D5E   72   79   20 
  8D61   41   70   70 
  8D64   6C   65   20 
  8D67   4C   4F   47 
  8D6A   4F   20   44 
  8D6D   65   76   65 
  8D70   6C   6F   70 
  8D73   6D   65   6E 
  8D76   74   20   53 
  8D79   79   73   74 
  8D7C   65   6D      
  8D7E   00           		$00
  8D7F   4C   4F   47 	LBUG1:	.ASCII "LOGO bug; exiting..."
  8D82   4F   20   62 
  8D85   75   67   3B 
  8D88   20   65   78 
  8D8B   69   74   69 
  8D8E   6E   67   2E 
  8D91   2E   2E      
  8D93   00           		$00
  8D94   55   73   65 	NMMSG1:	.ASCII "Use line numbers"
  8D97   20   6C   69 
  8D9A   6E   65   20 
  8D9D   6E   75   6D 
  8DA0   62   65   72 
  8DA3   73           
  8DA4   00           		$00
  8DA5   4E   6F   20 	NMMSG2:	.ASCII "No line numbers"
  8DA8   6C   69   6E 
  8DAB   65   20   6E 
  8DAE   75   6D   62 
  8DB1   65   72   73 
  8DB4   00           		$00
  8DB5   52   65   61 	RDRER1:	.ASCII "Reader error: Too many sublists"
  8DB8   64   65   72 
  8DBB   20   65   72 
  8DBE   72   6F   72 
  8DC1   3A   20   54 
  8DC4   6F   6F   20 
  8DC7   6D   61   6E 
  8DCA   79   20   73 
  8DCD   75   62   6C 
  8DD0   69   73   74 
  8DD3   73           
  8DD4   00           		$00
  8DD5   59   6F   75 	RDRER2:	.ASCII "You have mismatched brackets"
  8DD8   20   68   61 
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-266
LOGO	SYSTEM TABLES

  8DDB   76   65   20 
  8DDE   6D   69   73 
  8DE1   6D   61   74 
  8DE4   63   68   65 
  8DE7   64   20   62 
  8DEA   72   61   63 
  8DED   6B   65   74 
  8DF0   73           
  8DF1   00           		$00
  8DF2   4E   6F   20 	ZPMSG1:	.ASCII "No storage left!"
  8DF5   73   74   6F 
  8DF8   72   61   67 
  8DFB   65   20   6C 
  8DFE   65   66   74 
  8E01   21           
  8E02   00           		$00
  8E03   53   74   6F 	ZPMSG2:	.ASCII "Stopped!"
  8E06   70   70   65 
  8E09   64   21      
  8E0B   00           		$00
  8E0C   50   6C   65 	WRNMSG:	.ASCII "Please ERASE something:"
  8E0F   61   73   65 
  8E12   20   45   52 
  8E15   41   53   45 
  8E18   20   73   6F 
  8E1B   6D   65   74 
  8E1E   68   69   6E 
  8E21   67   3A      
  8E23   00           		$00
  8E24   41   74   20 	ERRM1:	.ASCII "At level "
  8E27   6C   65   76 
  8E2A   65   6C   20 
  8E2D   00           		$00
  8E2E   20   69   6E 	ERRM2:	.ASCII " in line "
  8E31   20   6C   69 
  8E34   6E   65   20 
  8E37   00           		$00
  8E38   20   6F   66 	ERRM3:	.ASCII " of "
  8E3B   20           
  8E3C   00           		$00
  8E3D   20   69   73 	ERRM4:	.ASCII " is too big for "
  8E40   20   74   6F 
  8E43   6F   20   62 
  8E46   69   67   20 
  8E49   66   6F   72 
  8E4C   20           
  8E4D   00           		$00
  8E4E   20   64   65 	SENDM:	.ASCII " defined"
  8E51   66   69   6E 
  8E54   65   64      
  8E56   00           		$00
  8E57   20   69   73 	PNMSG1:	.ASCII " is "
  8E5A   20           
  8E5B   00           		$00
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-267
LOGO	SYSTEM TABLES

  8E5C   4D   41   4B 	PNMSG2:	.ASCII "MAKE "
  8E5F   45   20      
  8E61   00           		$00
  8E62   57   65   27 	TBMSG1:	.ASCII "We're now at top-level."
  8E65   72   65   20 
  8E68   6E   6F   77 
  8E6B   20   61   74 
  8E6E   20   74   6F 
  8E71   70   2D   6C 
  8E74   65   76   65 
  8E77   6C   2E      
  8E79   00           		$00
  8E7A   57   65   27 	TBMSG2:	.ASCII "We're currently inside "
  8E7D   72   65   20 
  8E80   63   75   72 
  8E83   72   65   6E 
  8E86   74   6C   79 
  8E89   20   69   6E 
  8E8C   73   69   64 
  8E8F   65   20      
  8E91   00           		$00
  8E92   20   20   20 	PATMSG:	.ASCII "        Apple Logo Screen Editor        "
  8E95   20   20   20 
  8E98   20   20   41 
  8E9B   70   70   6C 
  8E9E   65   20   4C 
  8EA1   6F   67   6F 
  8EA4   20   53   63 
  8EA7   72   65   65 
  8EAA   6E   20   45 
  8EAD   64   69   74 
  8EB0   6F   72   20 
  8EB3   20   20   20 
  8EB6   20   20   20 
  8EB9   20           
  8EBA   00           		$00
  8EBB   54   4F   20 	TOMSG:	.ASCII "TO "
  8EBE   00           		$00
  8EBF   45   4E   44 	ENDMSG:	.ASCII "END"
  8EC2   00           		$00
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-268
LOGO	SYSTEM TABLES

                      	;	Monitor data:
                      	;
  8EC3   56   4D   3C 	CHRTBL:	.ASCII "VM<NIG S:."
  8EC6   4E   49   47 
  8EC9   20   53   3A 
  8ECC   2E           
  8ECD   05           		$05	;^E
  8ECE   0D           		$0D	;(Carriage-return)
  8ECF   10           		$10	;^P
  8ED0   0B           		$0B	;^K
  8ED1   02           		$02	;^B
                      	;
  8ED2   8A   6B      	SUBTBL:	.ADDR	VFY
  8ED4   80   6B      		.ADDR	MOVE
  8ED6   74   6B      		.ADDR	LT
  8ED8   C5   6B      		.ADDR	SETNRM
  8EDA   C1   6B      		.ADDR	SETINV
  8EDC   F1   6B      		.ADDR	GO
  8EDE   58   6B      		.ADDR	BLANK
  8EE0   FE   6B      		.ADDR	BSWTCH
  8EE2   6C   6B      		.ADDR	SETMOD
  8EE4   6C   6B      		.ADDR	SETMOD
  8EE6   22   6C      		.ADDR	REGZ
  8EE8   3A   6C      		.ADDR	CRMON
  8EEA   DA   6B      		.ADDR	OUTPRT
  8EEC   CE   6B      		.ADDR	INPRT
  8EEE   25   6C      		.ADDR	XMON
                      	;
  8EF0   41   58   59 	RTBL:	.ASCII "AXYPS"
  8EF3   50   53      
                      	;
       0000           	.END
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-269
LOGO	SYMBOL TABLE

ABSWAP  6743    	ABSWP1  674E    	ACC   = 0045    	ADD     672D    
ADDEND  6793    	ADDTK1  4C67    	ADDTK2  4C65    	ADDTOK  4C68    
ADD1    6730    	ADHAK4  4E7C    	ADHAK5  5078    	ADHAK6  5082    
ADHAK7  508D    	ADHAK8  4EF6    	ADHAK9  4F18    	ADHK11  50BC    
ADHK13  5626    	ADHK21  6029    	ADHK55  5BA4    	ADHK7A  5093    
ALL   = 00BF    	ALLSTC  4C91    	ALNSWP  6797    	ALSTC1  4CB0    
ALSTC3  4CBF    	ALSTC4  4CB6    	AL1     4291    	AL2     42B6    
AL2A    42CC    	ANSN  = 00A2    	ANSNX = 00B4    	ANSN1 = 00A3    
ANSN2 = 00B2    	ANSN3 = 00B3    	AREA1 = 009A    	AREA2 = 009C    
ARGLOP  426F    	ARGLP1  4276    	ARG1  = 001C    	ARG2  = 001E    
ATMTFX  5771    	ATMTXX  5773    	ATMT1   577E    	ATMT3   5797    
ATMT4   579A    	ATMT4A  579E    	ATMT4E  57C4    	ATMT4F  577C    
ATMT5   57CD    	ATM1    4B8E    	ATM12A  4C7A    	ATM12B  4C6F    
ATM2    4BDD    	ATOM  = 0001    	A1H   = 003D    	A1L   = 003C    
A1PC    6BB2    	A1PCLP  6BB5    	A1PCRT  6BBC    	A2H   = 003F    
A2L   = 003E    	A3H   = 0041    	A3L   = 0040    	A4H   = 0043    
A4L   = 0042    	A5H   = 0045    	A5L   = 0044    	BANK4K= 00F0    
BASARY= 0800    	BASLIN= 0028    	BBASX = CFFC    	BCALC   6CEA    
BCALCA  6CEC    	BCALCR  6D03    	BCALC2  6CFB    	BCKSPC  6DB7    
BELL    6C86    	BELL1   6C8D    	BIGBAS= D000    	BIGLEN= 2660    
BLANK   6B58    	BL1     6B54    	BREAK1  69DC    	BSLTMP= 002A    
BSWTCH  6BFE    	BSW1    6C12    	BTLSTA  834A    	BTLSTL  8366    
BTLSTR  8347    	BTLSTX  836C    	BTLSW   8375    	BTLSWE  83CF    
BTLSW1  839F    	BTLSW2  83B0    	BTLSW3  83BC    	BTLWE1  83EE    
BTLWE2  8426    	BTLWE3  8418    	BTLWE4  8432    	BTLWE5  8437    
BTLWL1  83E1    	BTLWL2  83E6    	CANCEL  6DCD    	CELPTR= 0098    
CH    = 0024    	CHRSRC  6A68    	CHRTBL  8EC3    	CLEDBF  686F    
CLEOL1  6D06    	CLEOL2  6D08    	CLEOP1  6C6A    	CLOOP   687A    
CLOP2   6882    	CLOP3   688E    	CLOSEW  69E2    	CLREOL  6D04    
CLREOP  6C66    	CLRLP1  4E63    	CLRMRK  62B6    	CNCODD  826E    
CNCTW   827B    	CNCTWE  8265    	CNCTW1  8297    	CNCTW2  82A2    
CNCT1   8235    	CNSSTR  4C34    	COMMNT= 00C1    	COMPL   6F49    
COMPLR  6F6F    	COMPL1  67C8    	CONCAT  8228    	CONS    5209    
CONSE   52F7    	CONSG   5226    	CONSG1  523E    	CONSR   5256    
CONST1  5218    	CONST2  5248    	CONS2   525D    	CONS2A  5263    
CONTIG  5AB0    	COPY    82C5    	COPYW   82E2    	COPYWE  8324    
COPY1   82D4    	COUT    6C7C    	COUTZ   6CA7    	COUT1   6C99    
CR      6CB3    	CRMON   6C3A    	CROUT   6D10    	CSWH  = 0037    
CSWL  = 0036    	CURTOK= 0060    	CV    = 0025    	DATAOT  6B2D    
DATOM = 0009    	DBUGSW= 000A    	DCOFLG= 000D    	DEFNER  5F1B    
DEFNWE  5EED    	DEFNW1  5EAF    	DEFNXE  5F14    	DEFNX1  5F01    
DEFUN   5E68    	DEFUNW  5EAB    	DEFUNX  5EF5    	DEFUN1  5E75    
DELETE  5577    	DIG     6A78    	DIGITP  4D39    	DIGN    4D3D    
DIGP1   4D3F    	DIGY    4D37    	DIV1    67DE    	DIV2    67E1    
DIV3    67ED    	DIV4    67F3    	DLTW    558C    	DLTWE   55E6    
DLTWF   55D1    	DLTW1   55BA    	DLTW2   5594    	DONE    6FBB    
DO0A25  84FD    	DO1A25  8504    	DV2     6F9B    	E     = ****** U  
EBFEND= 3FFF    	ECMP2   7F1C    	ECMP3   7F2A    	ECMP4   7F32    
ECREOL  692B    	EDBOD = 0096    	EDBUF = 2000    	EDLERR  4DD3    
EDLINE  4D42    	EDLN1   4D64    	EDLN2   4D73    	EDL1    4DE5    
EDORTS  68AA    	EDOUT   6893    	EDOUT1  68A2    	EDPLPO  6932    
EDPLP1  6910    	EDPLP2  691A    	EDPLP3  693E    	EDPRTS  6944    
EDSPBF  68F3    	EDSPLP  6902    	EDSW  = 0008    	EDTATM= 0080    
EDTSR1  59F3    	EDTSR2  59FA    	EDTSR3  59FD    	EDTSR4  5A00    
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-270
LOGO	SYMBOL TABLE

EDTSR5  5A03    	EDTSTP  59B1    	EL1     792D    	EL1R    7964    
EMPTWD  4B7F    	EMTWD1  4B7D    	ENDMSG  8EBF    	ENDVPD= 2000    
EOF     69E3    	EPRMPT= 003E    	EQ      786C    	EQA     78CA    
EQAA    78C4    	EQF     78B3    	EQFF    789C    	EQFL    78C9    
EQL     78AA    	EQLIST  78E4    	EQLST1  78F7    	EQLST2  78FF    
EQO     788A    	EQO1    7890    	EQPOP   78A7    	ER    = 00C3    
ERASE = 00C5    	ERDBCK  68DF    	ERNAMS  7FAC    	ERNMSW  7FBB    
ERNMWE  7FE3    	ERNMW1  7FC3    	ERNMX   7FEB    	ERNMX1  7FF7    
ERPROS  7F7D    	ERPRSW  7F85    	ERPRW1  7F8D    	ERRFLG= 0010    
ERRM1   8E24    	ERRM2   8E2E    	ERRM3   8E38    	ERRM4   8E3D    
ERROR   607C    	ERROR1  482B    	ERROR2  48B8    	ERRRET= 0016    
ERRTBL= 85C6    	ERRW    60B0    	ERRWE   60F4    	ERRWE1  60FC    
ERRW1   60E0    	ERRW2   60E4    	ERRW3   60E6    	ERRW4   60EB    
ERRZ1   60C4    	ERRZ2   60CA    	ERR1    6130    	ERR1A   483F    
ERR1B   48A7    	ERR2A   48CF    	ERR2A1  48C6    	ERR2A2  48E8    
EVAL    4175    	EVAL1   45E4    	EVEX1   42EC    	EVLEXP  4165    
EVLINE  4107    	EVLIN1  4140    	EVLN1   4127    	EVLN1A  415A    
EVLN1P  4148    	EVLUAT  40D2    	EVRETN  4587    	EVRET1  4595    
EVRET2  45B1    	EVRTN1  458F    	EVWRAP  450D    	EVW2    4530    
EW1     45B9    	EW1A    45DE    	EXFW    5931    	EXFWA1  594B    
EXFWC   598D    	EXFWD   599B    	EXFWE   593F    	EXFWR   594A    
EXFW1   5953    	EXFW2   597A    	EXFW3   59A3    	EXFW4   59AB    
EXIFSC  5927    	EXIFWB  5972    	EXPOUT= 0006    	EXTEDT  7A09    
FADD    6788    	FBODY = 006C    	FBODY1= 006E    	FCOMPL  67C5    
FDIV    67D5    	FDLNW   537B    	FDLNWE  53CF    	FDLNWF  53DB    
FDLNW1  5385    	FDLNW3  53B7    	FFIX    682E    	FINTK1  4C2E    
FIX   = 0003    	FIXRTS  6849    	FIX1    682B    	FLIST = 000C    
FLLIN   54C6    	FLO   = 0004    	FLOAT   6764    	FLONUM= ****** U  
FMUL    67AB    	FNCAL1  45F0    	FNDLIN  5362    	FPACK = 000B    
FPTR  = 0072    	FRAME = 0068    	FRLIST= 005C    	FRMGSM= 0066    
FSUB    6782    	FUNCAL  45E9    	FUNCT = 0064    	FUNTYP= 000E    
FUN1    460B    	FUN2    45FD    	GARCOL  6169    	GCLERR  62A7    
GCLP1   62C0    	GCLP1A  62CC    	GCLP2   617F    	GCLP2A  618F    
GCLP3   61A3    	GCLP3A  61CB    	GCLP3X  61AF    	GCLP4   61D3    
GCLP4A  61DB    	GCLP5   61F0    	GCLP5A  6205    	GCLP5B  6210    
GCLP5E  6214    	GCLP6   625E    	GCLP6C  627B    	GCLP6D  628C    
GCLP6E  6292    	GCLP6F  6281    	GCOL1   6223    	GCOL1L  6227    
GCVEND= 009A    	GCVST = 0084    	GETFUN  5532    	GETHIG  4D7F    
GETLEN  54CD    	GETLN   6D67    	GETLN1  6D90    	GETLN3  6DCA    
GETNGS  52F8    	GETNMB  6A95    	GETNUM  5745    	GETPNM  581D    
GETPRC  51EF    	GETRM1= C08B    	GETRM2= C083    	GETTPE  5CB4    
GETTPF  5CB5    	GETTP1  5C97    	GETTP4  5CAA    	GETTYP  5C93    
GETVAL  51BF    	GETWDS  5A06    	GLENW   54DD    	GLENW1  54E5    
GLENW2  5508    	GO      6BF1    	GOBDIG  57D9    	GOBF    5819    
GOPTR = 0074    	GPRCS   51FC    	GPRCU   5208    	GTBL1   7071    
GTBL2   707E    	GTBOOL  705B    	GTFN1   5550    	GTFN2   556B    
GTFR    54A3    	GTFULN  546D    	GTFX2   575A    	GTFX2A  56F1    
GTFX2C  56F4    	GTF2    548D    	GTHCNT  4DC2    	GTHE    4DD8    
GTHW    4D90    	GTH1    4D98    	GTH3    4DC8    	GTLC2   70A4    
GTLC2A  70AC    	GTLC3   70B4    	GTLNR1  6DFB    	GTLNR2  6E09    
GTLN1A  6DE1    	GTLN1B  6DEF    	GTLN1C  6D9E    	GTLN1D  6DD5    
GTLN2A  6DF1    	GTLSTC  7098    	GTNGE   531C    	GTNG1   5303    
GTNG2   5310    	GTNRTS  5705    	GTNXTK  43D0    	GTPNW   5879    
GTPNWE  5895    	GTPNWF  58B4    	GTPNW1  58A1    	GTPN1   5841    
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-271
LOGO	SYMBOL TABLE

GTPN2   5860    	GTSZND  5B6A    	GTSZW   5B2F    	GTSZW1  5B37    
GTSZX   5B4D    	GTSZX1  5B55    	GTSZX2  5B5B    	GTTULN  54A4    
GTT1    54AF    	GT1FIX  5706    	GT1NUM  56F7    	GT2FIX  571B    
GT2FX1  5735    	GT2NM1  56E4    	GT2NM2= ****** U  	GT2NUM  56C3    
GWELSE  5AEE    	GWIF2   5AC3    	GWIF3   5AD6    	GWIF4   5AE1    
GWRTS   5A4A    	GW1     5A2A    	GW1A    5A1A    	GW1W    5A40    
GW1WA   5A5A    	GW1W1   5A62    	GW1X    5A6A    	GW1X2   5A86    
GW1X3   5A91    	HELSTR  8D55    	HIRES = 2000    	HKCR2   581C    
HOME    6C5C    	IALL  = 0036    	IBACK = 0027    	IBOTH = 0011    
IBPT  = 001A    	IBTFST= 001E    	IBTLST= 0020    	ICALL = 0058    
ICLINP= 005B    	ICNTIN= 000D    	ICOMNT= 0044    	ICS   = 002B    
ICTYI = 0055    	ICURSR= 0056    	IDEBUG= 000C    	IDEFIN= 000B    
IDIF  = 003F    	IDISPL= 0031    	IEDIT = 0023    	IEITHR= 0012    
IELSE = 000F    	IEMPTP= 002F    	IEND  = 0024    	IEQUAL= 0045    
IERASE= 0038    	IFIRST= 001F    	IFLEVL= 007E    	IFORWD= 0026    
IFPUT = 0034    	IFP1    5336    	IFP2    5338    	IFP3    5360    
IGCOLL= 001C    	IGDBYE= 001B    	IGO   = 0019    	IGREAT= 0042    
IHOME = 002C    	IIF   = 0017    	ILAST = 0021    	ILEFT = 0029    
ILESS = 0043    	ILINE = 0094    	ILINES= 003D    	ILIST = 002A    
ILISTP= 0059    	ILPAR = 0015    	ILPUT = 0053    	IMAKE = 0006    
INAMES= 0037    	INCVE   4A41    	INCVSP  4A31    	INDEV = 0012    
INDIF = 004D    	INEQUL= 0052    	INFDIF= 00EB    	INFIXP  532E    
INFSUM= 00E9    	INGRTR= 0050    	INITLZ  4E41    	INLESS= 0051    
INMBRP= 005A    	INODES= 001D    	INOT  = 0014    	INPROD= 004E    
INPRT   6BCE    	INQUOT= 004F    	INSDS1  6A14    	INSUM = 004C    
INTERN  5F20    	INTRNX  5FBE    	INVFLG= 0032    	IOADR = 00C0    
IOPRT   6BE0    	IOPRT1  6BEE    	IOTPUT= 0007    	IPATCH= 005C    
IPAUSE= 000E    	IPEEK = 004A    	IPENDN= 002E    	IPENUP= 002D    
IPO   = 0035    	IPOKE = 004B    	IPOTS = 0047    	IPRINT= 0009    
IPROCS= 0049    	IPROD = 0040    	IQUOT = 0041    	IRANDM= 0054    
IREAD = 0039    	IREQST= 003B    	IRIGHT= 0028    	IRNDMZ= 0057    
IRPAR = 0016    	IRQVEC= FFFE    	IRUN  = 0018    	ISNAP = 0030    
ISNTNC= 0010    	ISTOP = 0008    	ISUM  = 003E    	ITEXT = 0025    
ITHEN = 0013    	ITHING= 003C    	ITHNGP= 0001    	ITITLE= 0033    
ITITLS= 0048    	ITO   = 0022    	ITRCBK= 0046    	ITYPE = 000A    
IUNDIF= 0005    	IUNSUM= 0004    	IWORD = 0002    	IWORDP= 0003    
IWPCLN= 0032    	IWRITE= 003A    	JFLS    6FE8    	JTOP    4897    
JTRU    6FFC    	KEYIN   6D2D    	KEYIND  6D2C    	KEYIN1  6D33    
KILRAM= C08A    	KNONE   6D51    	KPCLR = C010    	KPFLAG= C000    
KRTS    6D38    	KSWH  = 0039    	KSWL  = 0038    	LATOM = 000A    
LBRAK = 005E    	LBUG1   8D7F    	LELSE = 00C7    	LEND  = 00C9    
LEVNUM= 0078    	LF      6CB7    	LFALSE= 00CB    	LIF   = 00CD    
LINARY= 0200    	LINERR  4D7A    	LININC= 000A    	LINLTH= 001F    
LINNUM= 0070    	LINPEK  53DD    	LIST  = 0000    	LNIL  = 0000    
LOGO    4000    	LPAR  = 00CF    	LPK1    53F6    	LPK2    53F4    
LSTKEY= 0013    	LSTOP = 00D1    	LT      6B74    	LTHEN = 00D3    
LTITLE= 00D5    	LTPA    65F6    	LTPD    65F1    	LTPD1   65F3    
LTPF    660D    	LTPF1   6613    	LTPL    6602    	LTPLS   6619    
LTPQ    65ED    	LTPRTS  66F0    	LTPS    65FC    	LTRUE = 00D7    
LTYPE   65A4    	LT2     6B76    	MAKPNM  6490    	MARK    6312    
MARKA   62D9    	MARKX   631A    	MARK1 = 0084    	MARK2 = 0086    
MARK3 = 0088    	MARK4 = 008A    	MARK5 = 008C    	MDEND   67C0    
MD1     673D    	MD2     680F    	MD3     6820    	MD8CHK  6B24    
MKPNAD  6582    	MKPND1  658F    	MKPNR   64AA    	MKPNR1  650B    
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-272
LOGO	SYMBOL TABLE

MKPNR2  652A    	MKPNR3  6550    	MKPNR4  6546    	MKPNR5  6569    
MKPNR6  657C    	MKPN1   64AF    	MKPN2   64B6    	MKPN2A  64E5    
MKPN2B  64F8    	MKPN3   6581    	MKSFUN  5094    	MODE  = 0031    
MON     6A4F    	MONBRK  6A26    	MONFLG= 00EF    	MONNUM= 000F    
MONZ    6A53    	MOVE    6B80    	MRKAW   62EE    	MRKAW1  62F8    
MRKAW2  6304    	MRKCF   6383    	MRKCF1  638E    	MRKCL   6399    
MRKCL1  63AA    	MRKCN   6385    	MRKCP   63C7    	MRKCP1  63CC    
MRKCS   6394    	MRKCU   63B0    	MRKPW   63DF    	MRKPW1  63FA    
MRKPW2  642C    	MRKPW4  6471    	MRKPX   6430    	MRKPXE  6466    
MRKPX1  643C    	MRKRTS  62D8    	MRKW    6321    	MRKW1   632B    
MRKW2   6348    	MRKW3   633D    	MTC1W   6009    	MTC1WE  6047    
MTC1WF  6053    	MTC1W1  6011    	MTC2W   5F53    	MTC2WA  5F5B    
MTC2W1  5F68    	MULEND  6ED9    	MUL1    67B5    	MUL2    67BD    
MUL3    6EB9    	MUL4    6EC9    	MUL4A   6ECD    	M1    = ****** U  
M2    = ****** U  	NAMES = 00D9    	NARGS = 0005    	NARG1 = 001C    
NARG2 = 00F2    	NCNTIG  5AAE    	NEST  = 007A    	NEWLIN= 0001    
NEWLST= 0002    	NEXTC   6D69    	NEXTCX  6DB0    	NEXTC1  6D8B    
NEXTOK= 0062    	NMIVEC= FFFA    	NMMSG1  8D94    	NMMSG2  8DA5    
NNODES= 0014    	NODLIM= 0966    	NODTST= 0032    	NORM    677C    
NORMX   67C3    	NORM1   6769    	NOTCR   6DC0    	NTDIG   6ACD    
NTFIX   4BF8    	NTFRST  4C54    	NTLST   8464    	NUMSW = 0009    
NWARN   489A    	NXTA1   6AFA    	NXTA4   6AF4    	NXTBAS  6A86    
NXTBIT  6A7E    	NXTBS2  6A90    	NXTCHR  6A9B    	NXTCHS  4C0A    
NXTE    4C8E    	NXTITM  6A61    	NXTTWO  4C01    	OBFNF   5F90    
OBFNFE  5F9F    	OBFW    5F2F    	OBFW1   5F37    	OBLIST= 008E    
OFSET1= 3400    	OLDBRK  6A49    	OPENW   69E1    	OTPFIX  5668    
OTPFLO  5664    	OTPFX1  564D    	OTPNUM  566A    	OTPRG1  74E2    
OTPUTN= 0007    	OUTDEV= 0013    	OUTPRT  6BDA    	OVCHK   6828    
OVFL    682A    	PARLOP  42F4    	PARLP1  4301    	PARLP3  432B    
PARLP4  430A    	PATERR  6999    	PATLOP  68AB    	PATLP2  68D4    
PATMSG  8E92    	PATNYM  69A6    	PATRTS  686E    	PATSR1  6986    
PATSR2  698D    	PATSR3  6990    	PATSR4  6993    	PATSR5  6996    
PATSTP  6954    	PATTXT  6853    	PAUSKY= 001A    	PCH   = 003B    
PCL   = 003A    	PCOMPL= ****** U  	PDLBAS= 0E00    	PDLLEN= 0E00    
PDLLIM= 1BEC    	PDLTST= 0014    	PFERR   7B34    	PFNSW1  7BFB    
PFRTS   7BFA    	PGMSTT= 4000    	PLLP1   663B    	PLLP1A  6644    
PLLP2   6638    	PLOP1   43DC    	PLOP1A  43F1    	PLOP1B  4408    
PLSTLP  6626    	PNMSG1  8E57    	PNMSG2  8E5C    	PO    = 00DB    
PODEFL= 0082    	POFNSW  7BF2    	POFUNS  7BE8    	PONAMS  7B3B    
PONRTS  7B7B    	PONW1   7B43    	PONW1A  7B4B    	PONW1E  7B67    
PONW2   7B6F    	PONW2A  7B7C    	PON1    7B8D    	PON1A   7B9C    
PON1B   7BBD    	PON1C   7BDE    	POP     514F    	POPB    517D    
POPB1   5188    	POPFRM  50D6    	POPJ    4152    	POP1    515A    
POTEXT  7C1D    	POTS  = 00DD    	POTXTF  7D21    	POTXTL  7C58    
PPFM2   50E9    	PPTTP   4847    	PPTT1   484F    	PPTT2   486C    
PRA1    6B09    	PRBLNK  6A1B    	PRBL2   6A1D    	PRBL3   6A1F    
PRBYTE  6B3D    	PRDFLG= 00F1    	PRDLIN  4A46    	PRD2    4A54    
PRD3    4A56    	PRECED= 0004    	PREVLN  6DA6    	PRHEX   6B46    
PRHEXC  6B51    	PRHEXZ  6B48    	PRMTAB  8955    	PRNTAX  6A0D    
PRNTOT= 00DF    	PRNTX   6A10    	PRNTYX  6A0C    	PROCS = 00E1    
PRTHNG  65B5    	PRTS    52B4    	PRTSTR  531D    	PRVLN1  6DA9    
PRYX2   6B0D    	PSHP1   5122    	PSHP2   5137    	PSHTE   519B    
PSHTST  518D    	PSHTZ   519E    	PSTRTS  6985    	PTEXTX  7C1F    
PTFER   5D55    	PTFN1   5695    	PTFN2   569F    	PTFTXE  5D54    
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-273
LOGO	SYMBOL TABLE

PTFTXT  5CB7    	PTFTX1  5CCB    	PTFTX2  5CD2    	PTFTX3  5D34    
PTLN1   4E14    	PTLN2   4E38    	PTRDEC  4A25    	PTRXOK  6064    
PTRYOK  606F    	PTSPNM  52DA    	PTSTR1  5323    	PTVBUG  4A22    
PTVTST  4A16    	PTXEND  7CAB    	PTXERR  7C55    	PTXFW   7D41    
PTXFWE  7D72    	PTXFW1  7D4D    	PTXFW2  7D63    	PTXFX   7D7A    
PTXFX1  7D85    	PTXFX2  7DA3    	PTXFX3  7DAE    	PTXFX4  7DC4    
PTXFX5  7DCC    	PTXFY   7DD1    	PTXFYE  7E02    	PTXFY1  7DDD    
PTXFY2  7DF3    	PTXLW   7C6E    	PTXLWE  7C9B    	PTXLW1  7C76    
PTXLX   7CA3    	PTXLX1  7CB5    	PTXLX2  7CE9    	PTXLY   7CEE    
PTXLYE  7D1B    	PTXLY1  7CF6    	PTXRTS  7CA2    	PULCHR= 0010    
PUSH    5123    	PUSHP   510C    	PUTFUN  5683    	PUTLIN  4DFB    
PUTTPE  52A2    	PUTTP2  52A3    	PUTTYP  5293    	PUTVAL  51D7    
QATOM = 0008    	QPRMPT= 003F    	RANDA = 0325    	RANDC = 0025    
RANDOM= 00ED    	RDKEY   6D25    	RDLNW   4A7F    	RDLNWE  4A85    
RDL1    4AB5    	RDL1A   4A9E    	RDL1A1  4A89    	RDL1A2  4A8F    
RDL1B   4AA0    	RDRER1  8DB5    	RDRER2  8DD5    	RDSP1   6ADB    
READLN  4A42    	REDLN1  4A59    	REGCEL= 0003    	REGDSP  6ACE    
REGZ    6C22    	REINIT  4E88    	RESETT  69E5    	RESETW  69E4    
RESTOR  6C42    	RESTR1  6C47    	RETADR= 0011    	RGDSP1  6AD1    
RH1     443A    	RINLP2  4F62    	RMUL2   8115    	RMUL3   811C    
RMUL4   8128    	RNDH  = 004F    	RNDL  = 004E    	ROFLOW  6E67    
ROR1    67A4    	RPAR  = 00E3    	RPRMPT= 003C    	RSTBND  5627    
RSTBW   5637    	RSTBWE  564C    	RSTERR  4AA8    	RSTVEC= FFFC    
RTAR    6799    	RTBL    8EF0    	RTLOG   679D    	RTLOG1  67A2    
RTMSKZ  6A09    	RTSA1   5770    	RTSA2   6727    	RTSA2X  58C4    
RTS1    6781    	RTS1A   585F    	RTS2    59F2    	RTS3    5C78    
RTS30   7FAB    	RTS4B   6B08    	RTS4C   6B3C    	RTS5    6B6B    
RTS9    7A17    	RUNFLG= 000B    	RUNHAN  440D    	RWAIT   6DFE    
SARLEN= 0600    	SARTOP= 005A    	SATOM = 0007    	SAVE    6C4D    
SAV1    6C4F    	SBFA    8040    	SBFA1   805F    	SBFA1A  8063    
SBFB    8095    	SBFB1   80A3    	SBFC    8082    	SBFC1   808D    
SBFD    80BD    	SBFD1   80CE    	SBFD2   80D3    	SBFL    802D    
SBFNF   6054    	SBFR    802A    	SBFW    5FAE    	SBFWEN  5FBC    
SBFWJ   6061    	SBFWX   5FB0    	SBFW1   5FE7    	SBHAK1  4A30    
SBOTH   7025    	SBPT    783D    	SBST1A  5060    	SBTFST  800C    
SBTLST  8329    	SBVLL1  4F47    	SBVLPJ  4F44    	SBVLP1  4EDB    
SBVRW   4EFE    	SBVRWE  4F2E    	SBVRW1  4F0D    	SCALL   81A5    
SCALLR= 81B4    	SCALL1  81B5    	SCLINP  84F3    	SCLSCR  80FB    
SCMMT1  72CF    	SCNTIN  7326    	SCOMMT  72C0    	SCRL1   6CC7    
SCRL2   6CDC    	SCRL3   6CE5    	SCRN2   6A03    	SCROLL  6CC1    
SCRSR1  81A0    	SCTYI   8150    	SCTYI1  8154    	SCTYR1  816A    
SCTYR2  816D    	SCTYR3  8170    	SCURSR  8176    	SDBG1   72EE    
SDEBUG  72D4    	SDEFIN  7650    	SDFNRR  7772    	SDFNR1  768E    
SDFNR2  7691    	SDIF    6E71    	SDIVID  6EDE    	SDVD1   6EEE    
SDVD1A  6EFB    	SDVD2   6F0A    	SDVD3   6F19    	SDVD4   6F2F    
SEDIT   7A18    	SEDIT1  7A38    	SEITHR  7040    	SELSE   737D    
SELSE1  73A7    	SELSE2  739F    	SEMPTP  8486    	SEMPT1  84AE    
SEND    7A62    	SENDM   8E4E    	SENDR   7A93    	SEND1   7A69    
SEND2   7A8D    	SEQEND  7967    	SEQUAL  7847    	SERAP   7F40    
SERAR1  7F51    	SERAR2  7F58    	SERAR3  7F78    	SERASB  7F5B    
SERASE  7EE9    	SERAS1  7EF4    	SERPS   7F3A    	SERR    7070    
SERR4   7628    	SETIFL  6BC7    	SETINV  6BC1    	SETKBD  6BCA    
SETMDZ  6B71    	SETMOD  6B6C    	SETNRM  6BC5    	SETREV  6BBD    
SETTXT  6D5A    	SETVID  6BD6    	SFIRST  7775    	SFPT1   70E3    
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-274
LOGO	SYMBOL TABLE

SFPUT   70C4    	SFRST1  7795    	SFRST2  77A4    	SFRST3  77AC    
SFUN  = 0005    	SGCOLL  74EE    	SGO     73AC    	SGOE1   741B    
SGOR    7426    	SGOW    73DC    	SGOW1   73E4    	SGOW2   7413    
SGO1    73C8    	SGRTR   6FCF    	SGRTRM  6FEB    	SGRTRP  6FDA    
SGRTRX  6FD2    	SHFT    6F8B    	SIF     7332    	SIFA    7338    
SIF1    7350    	SIF2    735C    	SIF3    7369    	SIF3A   7359    
SIGN  = ****** U  	SINODS= F660    	SIZE1 = 009E    	SIZE2 = 00A0    
SKPPTH  58C5    	SKPPW   58ED    	SKPPW1  58F9    	SKPPW2  591A    
SKPP1   58CD    	SLAST   77DA    	SLESS   6FFF    	SLFDLP  4CCC    
SLF1    4CF1    	SLF2    4CDF    	SLF3    4D03    	SLINES  7300    
SLINS1  7317    	SLIST   84B4    	SLISTP  844F    	SLISTW  84CA    
SLIST1  84BC    	SLPTW   7162    	SLPTW1  716A    	SLPT2   719F    
SLPUT   70EC    	SLPUT1  7112    	SLPUT2  7128    	SLSTWE  84DE    
SLST1   77FB    	SLST2   780F    	SLST3   7833    	SMAKE   7268    
SMAKE1  727F    	SMAKE2  728D    	SNDIF1  6E37    	SNDIF2  6E41    
SNMBRP  8467    	SNODES  74C0    	SNOT    7015    	SNSM1   6F46    
SOBLP1  4EBF    	SOBLST= 0056    	SOBST1  5035    	SOBTOP= 0058    
SOTPT1  72A7    	SOTPT2  729E    	SOUTPT  7296    	SP    = 0018    
SPATCH  74F8    	SPEEK   80DD    	SPKR  = C030    	SPNT  = 0049    
SPO     7A96    	SPOKE   80ED    	SPON    7ACE    	SPOTS   7AE6    
SPO1    7AAD    	SPO1A   7B1F    	SPO2    7AD6    	SPO3    7ADE    
SPO4    7AF0    	SPO5    7B00    	SPO5A   7B17    	SPO5S   7B10    
SPRD1   6EA1    	SPRD2   6EAA    	SPRINT  762B    	SPRNT1  763A    
SPROD   6E8F    	SPTHNG  7474    	SPTH1   748D    	SPTH2   748A    
SPTH3   749C    	SPWRDP  749F    	SRANDM  8105    	SRDEDL  4505    
SRD1A   4472    	SRD1B   4481    	SRD1C   4497    	SRD1D   449F    
SRD1D1  44AB    	SRD1D2  44B3    	SRD1D3  44BB    	SRD1D4  44C3    
SRD1D5  44CB    	SRD1D6  44D3    	SRD1D7  44DB    	SRD1E   44E3    
SRD1F   44ED    	SREAD   761C    	SREAD1  4451    	SREAD2  4466    
SREQU   74D2    	SRET1   8102    	SRNDMZ  8141    	SRUN    742D    
SRUN1   7441    	SSNERR  7258    	SSNTNC  71B9    	SSNW    71C7    
SSNWA   71E4    	SSNW1   7200    	SSNW2   7263    	SSNX    7213    
SSNX1   721B    	SSNY    7239    	SSNY1   7245    	SSN1    71C1    
SSN2    71CB    	SSTOP   72AE    	SSTOP1  72B6    	SSUM    6E4B    
SSUMOK  6E6C    	STATUS= 0048    	STEXT   7694    	STEXT1  76B4    
STEXT3  7766    	STFFA   5B79    	STFFW   5BDD    	STFFWE  5C4B    
STFFW1  5BE5    	STFFX   5BFB    	STFFXE  5C32    	STFFX1  5C03    
STFF1   5B82    	STFF2   5BBA    	STHING  7444    	STH1    745B    
STH2    7471    	STITLE  752A    	STLR4A  755A    	STO     7977    
STOERR  7A03    	STOR    6B5F    	STOW    79A3    	STOWE   79DE    
STOW1   79AB    	STOW2   79C7    	STOW3   79D9    	STO1    7997    
STPFLG= 000C    	STPKEY= 0007    	STPPEK  52B5    	STPPKZ  52C7    
STPPK1  52CC    	STPTR1  4A03    	STRCBK  7E08    	STRING= 0002    
STTLR1  7543    	STTLR2  7548    	STTLR3  754D    	STTLR4  7557    
STTLW   75B7    	STTLWE  75FB    	STTLW1  75BF    	STTLW2  75E1    
STTLW3  75F6    	STTL1   7561    	STTL2   7594    	STTL3   75B3    
STUFF   5B01    	STXTW   7706    	STXTWE  7733    	STXTX   7739    
STXTXE  7758    	STXTX1  7745    	STXT1A  76DB    	STXT1B  76CF    
STYPE   7641    	SUBTBL  8ED2    	SUNDIF  6E18    	SUNSUM  6F34    
SWAP    674F    	SWAPT1  6474    	SWAPT2  6482    	SWAP1   6751    
SWORD   81B8    	SWPALN  6785    	SWPLP1  6478    	SWPLP2  6486    
SWRDW   81D8    	SWRDW1  81F2    	SWRD1   81C0    	SWRD2   8205    
SWRD3   8210    	SWRITE  7ECE    	SYSBUG  50BD    	SYSMON= FF59    
SYSTAB= 850E    	TBMSG1  8E62    	TBMSG2  8E7A    	TCBKW   7E35    
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-275
LOGO	SYMBOL TABLE

TCBKWE  7EC4    	TCBKW1  7E40    	TCBKX   7E5A    	TCBKXE  7EAB    
TCBKX1  7E68    	TCBKX2  7E9D    	TCBKX3  7E89    	TCBKX4  7E8B    
TCBK1   7E1A    	TEMPN = 00A6    	TEMPNH= 00A4    	TEMPN1= 00A8    
TEMPN2= 00AA    	TEMPN3= 00AC    	TEMPN4= 00AE    	TEMPN5= 00B0    
TEMPN6= 00B5    	TEMPN7= 00B7    	TEMPN8= 00B9    	TEMPX1= 00BB    
TEMPX2= 00BD    	TFKADV  5416    	TFK1    5423    	TFK2    5439    
TFK3    5457    	TGTTOK  4AB9    	TGT1    4AC3    	TGT2    4AD1    
TGT3A   4B43    	TGT3B   4B52    	TGT3B1  4B5C    	TI    = 00E5    
TITLES= 00E7    	TKAORL  4B4B    	TKATM1  4B88    	TKATM2  4B76    
TKATOM  4B69    	TKLBR   4AFF    	TKNDL   4B34    	TKRBR   4B0F    
TKRBR1  4B21    	TLLEVS= 007C    	TMPNUM= 0010    	TMPSTT= 00A2    
TMPTAB= 02FF    	TOKPTR= 005E    	TOMSG   8EBB    	TOPEDL  40CA    
TOPLIN  40B2    	TOPLOP  403E    	TOPLP1  4076    	TOPLP2  4082    
TOPLP3  408A    	TOPLP4  4092    	TOPLP5  409A    	TOPLP6  40A2    
TOPLP7  40AA    	TOSUB   6AB3    	TPATMW  669D    	TPATM1  6694    
TPBFIX  6728    	TPCHR   69F8    	TPCHR1  6A01    	TPLP1   4050    
TPP1    6668    	TPSATM  66D3    	TPSTMW  66E1    	TPTMWE  66CA    
TPTMW1  66A5    	TSTCHR  6D39    	TSTCH1  6D43    	TSTC1   6D54    
TSTC2   6D57    	TTKADV  5400    	TTKE    5415    	TXTSET= C051    
TYPACS  5C79    	TYPATM  6681    	TYPBAS= C260    	TYPEND= FFF8    
TYPFIX  66F1    	TYPFLO  6729    	TYPLEN= 0998    	TYPNMF  671F    
TYPNMR  670F    	TYPNM1  6705    	UFRMAT= 000F    	UFUN  = 0006    
UF1     47AE    	UF1A    47BE    	UF1C    47CC    	UF1D    47D8    
UF2     47F9    	UF2A    47FB    	ULDV1   55FC    	ULDV2   5608    
ULDV3   561A    	ULDV3A  561B    	ULNADV  55E7    	ULNEND= 0076    
UNDFL   684A    	UNDIF = 0092    	UNFUNC  5511    	UNSTUF  5D58    
UNSUM = 0090    	USRADR= 03F8    	USTFE   5E67    	USTFE1  5D89    
USTFW   5DAD    	USTFWE  5DCB    	USTFW1  5DB5    	USTFW2  5D98    
USTFX   5DD3    	USTFXE  5E53    	USTFX1  5DDF    	USTFX2  5E30    
USTFX3  5E45    	USTFY   5DEA    	USTFYE  5E1A    	USTFY1  5DF6    
USTFY2  5E01    	USTF1   5D7F    	USTF2   5D8A    	VAL1    43A2    
VAL1R   43C9    	VARGLP  434F    	VFY     6B8A    	VFYOK   6BAC    
VPDLBA= 1C00    	VPDLEN= 0400    	VPDLIM= 1FF0    	VPDTST= 0010    
VPLFLS  7090    	VPLTRU  7088    	VPOP    5166    	VPOP1   5171    
VPRMTB  8D16    	VPRMTE= 8D55    	VPSHTE  51B7    	VPSHTZ  51B8    
VPSH1   514E    	VPSTST  51A9    	VPUSHP  5138    	VRGLP1  4376    
VSP   = 001A    	WAIT    6E0C    	WAIT1   6E0D    	WAIT2   6E0E    
WNDBTM= 0023    	WNDTOP= 0000    	WNDWTH= 0028    	WRNMSG  8E0C    
WRTS    6E17    	XAM     6B2A    	XAM8    6B1A    	XARGTB= 001A    
XBRK  = 0010    	XCASA   41FC    	XCASA1  4210    	XCASA2  4240    
XCASA3  422B    	XCASA4  4233    	XCASA5  4224    	XCASD   41C7    
XCASFN  424D    	XCASF1  4266    	XCASL   41E5    	XCASQ   41EA    
XCASQ1  41F2    	XCRSR = 0023    	XDBZ  = 001D    	XDEF  = 0016    
XDIVID  6F70    	XEDT  = 0015    	XELS  = 000F    	XEOL  = 0002    
XETL  = 0017    	XEVL1   4182    	XEVL2   4188    	XEVL3   418F    
XFCOMP  672C    	XFLOAT  672A    	XFRAME= 006A    	XHNV  = 0004    
XIFX  = 0008    	XILN  = 0020    	XINT    672B    	XLABEL= 0011    
XLNF  = 0014    	XLNTB = 001F    	XMON    6C25    	XNDF  = 0022    
XNED  = 0018    	XNOP  = 0006    	XNSTOR= 0000    	XNSTRN= 0001    
XNTF  = 000E    	XNTL  = 000D    	XNWE  = 001E    	XOFLOW= 0021    
XOPO  = 0019    	XREG  = 0046    	XRPN  = 0007    	XSFNCL  4611    
XSTOP = 0002    	XTAIL   48F6    	XTAIL1  4907    	XTAIL2  490D    
XTAIL4  49FD    	XTAIL5  49DE    	XTALWA  4946    	XTALWB  4982    
XTALW1  494E    	XTALW2  498A    	XTHN  = 0012    	XTIP  = 000A    
APPLE-LOGO	CROSS 6(33)  27-JUN-80  03:35  PAGE 1-276
LOGO	SYMBOL TABLE

XTLWAE  4979    	XTLWBE  49C6    	XTML  = 001B    	XTMO  = 0005    
XTMS  = 001C    	XUBL  = 000C    	XUDF  = 0003    	XUFNCL  4647    
XUFNW   475F    	XUFNWE  47A3    	XUFNW1  4767    	XUFN1   46C2    
XUFN2   4694    	XUFN3   46AF    	XUFN5   46B7    	XUFN6   46E0    
XUFN6A  46E6    	XUFN6B  4732    	XUFN6C  474B    	XUOP  = 0001    
XVNA  = 0009    	XWTA  = 000B    	XXBRK   8789    	XXCRSR  8934    
XXDBZ   88A6    	XXDEF   880C    	XXEDT   87F3    	XXELS   8774    
XXEOL   862E    	XXETL   8821    	XXHNV   8662    	XXIFX   86A7    
XXILN   88FB    	XXLABE  879D    	XXLNF   87DA    	XXLNTB  88E7    
XXNDF   8923    	XXNED   8840    	XXNOP   868A    	XXNTF   874F    
XXNTL   8724    	XXNWE   88C2    	XXOFLO  890F    	XXOPO   8858    
XXRPN   869A    	XXSFR1  4636    	XXSFR2  463B    	XXSFR3  4640    
XXTHN   87C5    	XXTIP   86DC    	XXTML   887B    	XXTMO   8671    
XXTMS   8895    	XXUBL   8712    	XXUDF   8645    	XXUOP   860E    
XXVNA   86C4    	XXWTA   86F8    	XZAP  = 0013    	X1    = ****** U  
X2    = ****** U  	YESLST  8461    	YREG  = 0047    	YSAV  = 0034    
YSAV1 = 0035    	ZAPMSG  6141    	ZMODE   6AC9    	ZPC1    6155    
ZPC2    615F    	ZPMSG1  8DF2    	ZPMSG2  8E03    	.     = 8EF5    



? ERRORS DETECTED:  65

 *LOGO/PTP,LOGO=LOGO/M65
 RUN-TIME: 72 145 4 SECONDS
 CORE USED:  7K

