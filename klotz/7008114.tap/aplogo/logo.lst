APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20
LOGO	TABLE OF CONTENTS

  	Assembly Data
  	Top Level
  	Evaluator Routines
  	Reader and Tokenizer
  	Initializations
  	Miscellaneous and Evaluator Utility Routines
  	Garbage Collector
  	Screen Editor
  	File System
  	Monitor Routines
  	System Functions
  	Turtle-Graphics Routines
  	System Tables
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1
LOGO

     1	                    	;-*-MIDAS-*-
     2	                    
                      	.NLIST SEQ
                      	.ENABL LC
                      	.TITLE APPLE-LOGO
                      
                      	;  LOGO Language Interpreter for the Apple-II-Plus Personal Microcomputer
                      
                      	;  Written and developed by Stephen L. Hain, Patrick G. Sobalvarro,
                      	;  and the M.I.T. LOGO Group, at the Massachusetts Institute of
                      	;  Technology.
                      
                      	;  Property of the M.I.T. LOGO Laboratory,
                      	;  545 Technology Square, Cambridge, MA 02139.
                      	;  All rights reserved.
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-1
LOGO	ASSEMBLY DATA

                      	.SBTTL	Assembly Data
                      	;	Page Zero Variables:
       0000           	LNIL	=0	;The NIL node
       0004           	PRECED	=4	;Current function's precedence
       0005           	NARGS	=5	;No. of arguments for current function
       0006           	EXPOUT	=6	;Output expected if nonzero
       0007           	OTPUTN	=7	;Number of outputs given
       0008           	EDSW	=8	;Edit mode if nonzero
       0009           	GRPHCS	=9	;Indicates graphics mode if nonzero
       000A           	DBUGSW	=10	;Debug mode if nonzero
       000B           	RUNFLG	=11	;Evaluating the RUN primitive if nonzero
       000C           	STPFLG	=12	;Stop executing current Ufun if nonzero
       000D           	DCOFLG	=13	;Return from current break-loop if nonzero
       000E           	FUNTYP	=14	;Typecode of current function
       000F           	UFRMAT	=15	;Format (List or Fpack) of current Ufun
       0010           	ERRFLG	=16	;Error code of last error
       0011           	RETADR	=17	;Holds stack pointer reset value for error recovery
       0012           	ERRRET	=18	;Holds program counter reset value for error recovery
       0014           	SP	=20	;Stack pointer
       0016           	VSP	=22	;Value-stack pointer
       0018           	SIZE1	=24	;Size of area pointed to by AREA1
       001A           	SIZE2	=26	;Size of area pointed to by AREA2
       001C           	AREA1	=28	;Pointer to g.c.-protected area of SIZE1 contiguous nodes
       001E           	AREA2	=30	;Pointer to g.c.-protected area of SIZE2 contiguous nodes
                      	;	Monitor variables:
       0020           	WNDLFT	=32
       0021           	WNDWTH	=33
       0022           	WNDTOP	=34
       0023           	WNDBTM	=35
       0024           	CH	=36
       0025           	CV	=37
                      		;DOS wants 38,39
       0028           	BASLIN	=40
       002A           	BSLTMP	=42
                      		;DOS wants 42,43,44,45,46,47
       0031           	MODE	=49
       0032           	INVFLG	=50
                      		;DOS wants 51
       0033           	DSPFL1	=51
       0034           	YSAV	=52
       0035           	YSAV1	=53	;(DOS wants 53,54,55,56,57)
       0036           	CSWL	=54
       0037           	CSWH	=55
       0038           	KSWL	=56
       0039           	KSWH	=57
       003A           	PCL	=58
       003B           	PCH	=59
       003C           	A1L	=60
       003D           	A1H	=61
       003E           	A2L	=62	;(DOS wants 62,63,64,65,66,67,68,69,70,71,72)
       003F           	A2H	=63
       0040           	A3L	=64
       0041           	A3H	=65
       0042           	A4L	=66
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-2
LOGO	ASSEMBLY DATA

       0043           	A4H	=67
       0044           	A5L	=68
       0045           	A5H	=69
       0045           	ACC	=69
       0046           	XREG	=70
       0047           	YREG	=71
       0048           	STATUS	=72
       0049           	SPNT	=73
       004A           	RNDL	=74	;(DOS wants 74,75,76,77)
                      
       004E           	LTRUE	=78	;TRUE atom pointer
       0050           	LFALSE	=80	;FALSE atom pointer
                      
       0052           	RANDOM	=82	;Random number
       0054           	MONFLG	=84	;Flag indicates Monitor mode (if non-zero)
       0055           	BANK4K	=85	;High-RAM 4K bank select flag (0=first, 1=second)
       0056           	PRDFLG	=86	;Indicates READ_LINE is executing, for CONS
       0057           	INDEV	=87	;Input device code (zero is Apple standard I/O)
       0058           	OUTDEV	=88	;Output device code (zero is Apple standard I/O)
       0059           	SOBLST	=89	;Pointer to start of System Object List
       005B           	SOBTOP	=91	;Pointer to end of System Object List
       005D           	SARTOP	=93	;Pointer to end of System Array
       005F           	FRLIST	=95	;Pointer to start of Freelist
       0061           	TOKPTR	=97	;Token Pointer
       0063           	CURTOK	=99	;Curent Token pointer
       0065           	NEXTOK	=101	;Next Token pointer
       0067           	FUNCT	=103	;Points to current Function
       0069           	CHBUF	=105	;Character buffer
       006A           	TEMPX3	=106	;Temporary variable
       006C           	FRAME	=108	;Pointer to current stack frame
       006E           	XFRAME	=110	;Pointer to end of current stack frame
       0070           	FBODY	=112	;Pointer to full body of current Ufun
       0072           	FBODY1	=114	;Current Ufun body or System index
       0074           	LINNUM	=116	;Current Ufun line number
       0076           	FPTR	=118	;Pointer to remainder of Ufun being executed
       0078           	GOPTR	=120	;Pointer to location of Ufun to GO to
       007A           	ULNEND	=122	;Pointer to end of current line of Fpack Ufun
       007C           	LEVNUM	=124	;Ufun nesting level
       007E           	NEST	=126	;EVAL nesting of current EVLINE
       007F           	DSPFL2	=127	;(For DOS, gets saved, though)
       0080           	TLLEVS	=128	;Number of tail recursions included in LEVNUM
       0082           	IFLEVL	=130	;IF nesting level
       0084           	EDTATM	=132	;Pointer to atom of Ufun currently being edited
       0086           	PODEFL	=134	;Default Ufun atom for PO
       0088           	MARK1	=136	;Garbage collector protected variable
       008A           	MARK2	=138	;		"
       008C           	MARK3	=140	;		"
       008E           	MARK4	=142	;		"
       0090           	MARK5	=144	;		"
       0092           	OBLIST	=146	;Pointer to Object List
       0094           	UNSUM	=148	;Unary_Sum pointer
       0096           	UNDIF	=150	;Unary_Difference pointer
       0098           	ILINE	=152	;Pointer to current or last command line
       009A           	EDBOD	=154	;Pointer to body of Ufun (Flist type) currently being edited
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-3
LOGO	ASSEMBLY DATA

       009C           	CELPTR	=156	;Garbage collector protected variable
       009E           	ARG2	=158	;Primitive's second argument
       009E           	NARG2	=158	;Primitive's second argument (numerical - 4 bytes)
       00A2           	ARG1	=162	;Primitive's first argument
       00A2           	NARG1	=162	;Primitive's first argument (numerical - 4 bytes)
       00A6           	TEMPNH	=166	;Temporary variable (must follow NARG1 for floating pt. routines)
       00A8           	TEMPN	=168	;	"
       00AA           	TEMPN1	=170	;	"
       00AC           	TEMPN2	=172	;	"
       00AE           	TEMPN3	=174	;	"
       00B0           	TEMPN4	=176	;	"
       00B2           	ANSN	=178	;	"
       00B3           	ANSN1	=179	;	"
       00B4           	TEMPN5	=180	;(Last swapped) Temporary variable
       00B6           	TEMPN6	=182	;Temporary variable
       00B8           	TEMPN7	=184	;	"
       00BA           	TEMPN8	=186	;	"
       00BC           	TEMPX1	=188	;	"
       00BE           	TEMPX2	=190	;	"
       00C0           	ANSN2	=192	;	"
       00C1           	ANSN3	=193	;	"
       00C2           	ANSNX	=194	;	"
       00C3           	NNODES	=195	;Number of nodes allocated
                      	;	Turtle-Graphics/Editor variables:
       00C5           	EPOINT	=197	;Editor point
       00C7           	ENDBUF	=199	;Location after last character in buffer
       00C9           	PEN	=201	;Indicates pen down if nonzero
       00CA           	TSHOWN	=202	;Indicates turtle shown if nonzero
       00CB           	XCOR	=203	;X-Coordinate, floating pt.
       00CF           	YCOR	=207	;Y-Coordinate, floating pt.
       00D3           	HEADNG	=211	;Heading, floating pt.
       00D7           	GANSN2	=215
       00D8           	GRP0	=216
       00D9           	GRP1	=217
       00DA           	GRP2	=218
       00DB           	GRP5	=219
       00DC           	GTMP4	=220
       00DE           	DERCOD	=222	;Error code location for DOS
       00DF           	COLR	=223	;Color
                      
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-4
LOGO	ASSEMBLY DATA

                      	;	LOGO primitive pointers (page 3):
       0300           	ALL	=$300
       0302           	COMMNT	=$302	;Comment
       0304           	ER	=$304
       0306           	ERASE	=$306
       0308           	LELSE	=$308	;Else
       030A           	LEND	=$30A	;End
       030C           	LIF	=$30C	;If
       030E           	LPAR	=$30E	;(Left-parenthesis)
       0310           	LSTOP	=$310	;Stop
       0312           	LTHEN	=$312	;Then
       0314           	LTITLE	=$314	;Title
       0316           	NAMES	=$316
       0318           	PO	=$318
       031A           	POTS	=$31A
       031C           	PRNTOT	=$31C	;Printout
       031E           	PROCS	=$31E	;Procedures
       0320           	RPAR	=$320	;(Right-parenthesis)
       0322           	TI	=$322
       0324           	TITLES	=$324
       0326           	INFSUM	=$326	;(Infix Sum)
       0328           	INFDIF	=$328	;(Infix Difference)
       0328           	LASTPP	=INFDIF
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-5
LOGO	ASSEMBLY DATA

                      	;	Type code constants:
       0000           	LIST	=0	;List
       0001           	ATOM	=1	;Atom (either Qatom, Datom, Latom)
       0002           	STRING	=2	;Regular linked-list
       0003           	FIX	=3	;Integer (GT2NUM requires that FIX < FLO)
       0004           	FLO	=4	;Floating point number
       0005           	SFUN	=5	;System Function
       0006           	UFUN	=6	;User Function
       0007           	SATOM	=7	;System atom
       0008           	QATOM	=8	;Quoted atom
       0009           	DATOM	=9	;Dotted atom
       000A           	LATOM	=10	;Label atom
       000B           	FPACK	=11	;Packed Ufun
       000C           	FLIST	=12	;Regular Ufun format
                      	;	Tokenizer constants:
       0001           	NEWLIN	=1	;Start of input line
       0002           	NEWLST	=2	;Start of sublist
       0003           	REGCEL	=3	;Regular linked cell
                      	;	General constants:
       0006           	FULCHR	=$06	;Full-screen graphics character (Control-F)
       0007           	STPKEY	=$07	;Stop-key character code (Control-G)
       000C           	MIXCHR	=$0C	;Mixed-screen graphics character (Control-L)
       0010           	PULCHR	=$10	;Re-enter last line typed (Control-P)
       0013           	LSTKEY	=$13	;Interrupt output listing (Control-S)
       001A           	PAUSKY	=$1A	;Pause-key character code (Control-Z)
       003C           	RPRMPT	=$3C	;REQUEST prompt ("<")
       003E           	EPRMPT	=$3E	;Edit-mode prompt character (">")
       003F           	QPRMPT	=$3F	;Regular prompt character (Question-mark)
       005E           	LBRAK	=$5E	;Left-bracket replacement character
       0088           	GCVST	=MARK1	;Start of Garbage Collecor protected variable area
       009E           	GCVEND	=CELPTR+2	;End of Garbage Collector protected variable area
       000A           	LININC	=10	;Default line number increment
       000F           	MONNUM	=15	;Number of Monitor commands
       0091           	RANDA	=145	;Random transform constant "A"
       002B           	RANDC	=43	;Random transform constant "C"
       0006           	TTLC1	=6	;Turtle length constant, center to tip
       0012           	TTLC2	=18	;Turtle length constant, side
       000C           	TTLC3	=12	;Turtle length constant, rear
       00A0           	TTLA1	=160	;Turtle angle constant, first turn
       006E           	TTLA2	=110	;Turtle angle constant, base turns
                      	;	I/O Device constants:
       0000           	KBD	=0	;For Keyboard input
       0000           	VDT	=0	;For Screen output
       0001           	BUFFER	=1	;For buffer I/O
                      	;	Storage Parameters:
       0200           	LINARY	=$0200		;Input line buffer (page 2)
       0010           	TMPNUM	=TEMPN5-TMPSTT+2;Number of temporary bytes to swap
       00A6           	TMPSTT	=TEMPNH		;Start of page-zero swapped temporaries
       032A           	TMPTAB	=LASTPP+2	;Start of temporary storage area (page 3)
       2000           	GRPSTT	=$2000		;Start of hires graphics area
       4000           	GRPEND	=$4000		;End of Hires graphics area
       2000           	EDBUF	=$2000		;Start of editor buffer
       3FFB           	EBFEND	=$3FFB		;End of edit buffer (with room for CR and EOF marker)
       0030           	SYSTAB	=$30		;Page no. of System tables (after loading)
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-6
LOGO	ASSEMBLY DATA

       00D0           	GHOMEM	=$D0		;Page no. of Ghost-memory
       A000           	TDIFF	=$A000		;Difference between above storage areas
                      	;	Mapped I/O locations:
       C08B           	GETRM1	=$C08B	;Enable high RAM (with first 4K bank)
       C083           	GETRM2	=$C083	;Enable high RAM (with second 4K bank)
       C08A           	KILRAM	=$C08A	;Deselect high RAM (enable Monitor/BASIC)
       C000           	KPFLAG	=$C000	;Keyboard input byte
       C010           	KPCLR	=$C010	;Keyboard clear strobe
       C030           	SPKR	=$C030	;Toggle speaker
       00C0           	IOADR	=$C0	;Start of I/O ROM area
                      	;	Interrupt Vector areas:
       FFFC           	RSTVEC	=$FFFC	;Location of RESET vector
       FFFE           	IRQVEC	=$FFFE	;Location of IRQ vector
       FFFA           	NMIVEC	=$FFFA	;Location of NMI vector (BRK command)
                      	;	System vectors:
       03F8           	USRADR	=$03F8	;User JMP location for ROM monitor
       FF59           	SYSMON	=$FF59	;ROM monitor entry point
                      	;	DOS sacred locations
       A851           	DOSEAT	=$A851	;DOS subroutine to give DOS control of input
       00D8           	DOSERR	=$00D8	;DOS onerr goto flag - set high bit to turn on
       9D5A           	DSERET	=$9D5A	;DOS error return address
       AAB6           	DLNGFG	=$AAB6	;DOS language flag -- stuff a $40 for Applesoft
       AA60           	FILLEN	=$AA60	;length of last file loaded
       FDED           	APCOUT	=$FDED	;location of COUT routine in monitor (DOS calls it)
                      
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-7
LOGO	ASSEMBLY DATA

                      	;	System Function Constants:
       0000           	INULL	=0
       0001           	ITHNGP	=1	;Thingp
       0002           	IWORD	=2
       0003           	IWORDP	=3
       0004           	IUNSUM	=4	;Unary_sum
       0005           	IUNDIF	=5	;Unary_difference
       0006           	IMAKE	=6
       0007           	IOTPUT	=7	;Output
       0008           	ISTOP	=8
       0009           	IPRINT	=9
       000A           	ITYPE	=10
       000B           	IDEFIN	=11	;Define
       000C           	IDEBUG	=12
       000D           	ICNTIN	=13	;Continue
       000E           	IPAUSE	=14
       000F           	IELSE	=15
       0010           	ISNTNC	=16	;Sentence
       0011           	IBOTH	=17
       0012           	IEITHR	=18	;Either
       0013           	ITHEN	=19
       0014           	INOT	=20
       0015           	ILPAR	=21	;(Left-parenthesis)
       0016           	IRPAR	=22	;(Right-parenthesis)
       0017           	IIF	=23
       0018           	IRUN	=24
       0019           	IGO	=25
       001A           	IBPT	=26	;.bpt
       001B           	IGDBYE	=27	;Goodbye
       001C           	IGCOLL	=28	;.gcoll
       001D           	INODES	=29	;.nodes
       001E           	IBTFST	=30	;Butfirst
       001F           	IFIRST	=31
       0020           	IBTLST	=32	;Butlast
       0021           	ILAST	=33
       0022           	ITO	=34
       0023           	IEDIT	=35
       0024           	IEND	=36
       0025           	ITEXT	=37
       0026           	IFORWD	=38	;Forward
       0027           	IBACK	=39
       0028           	IRIGHT	=40
       0029           	ILEFT	=41
       002A           	ILIST	=42
       002B           	ICS	=43
       002C           	IHOME	=44
       002D           	IPENUP	=45
       002E           	IPENDN	=46	;Pendown
       002F           	IEMPTP	=47
       0030           	ISHOWT	=48	;Showturtle
       0031           	IHIDET	=49	;Hideturtle
       0032           	ITSTAT	=50	;Turtlestate
       0033           	ITITLE	=51
       0034           	IFPUT	=52
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-8
LOGO	ASSEMBLY DATA

       0035           	IPO	=53
       0036           	IALL	=54
       0037           	INAMES	=55
       0038           	IERASE	=56
       0039           	IREAD	=57
       003A           	ISAVE	=58
       003B           	IREQST	=59	;Request
       003C           	ITHING	=60
       003D           	IRETRV	=61	;Retrieve
       003E           	ISUM	=62
       003F           	IDIF	=63	;Difference
       0040           	IPROD	=64	;Product
       0041           	IQUOT	=65	;Quotient
       0042           	IGREAT	=66	;Greater
       0043           	ILESS	=67
       0044           	ICOMNT	=68	;Comment
       0045           	IEQUAL	=69
       0046           	ITRCBK	=70	;Traceback
       0047           	IPOTS	=71
       0048           	ITITLS	=72	;Titles
       0049           	IPROCS	=73	;Procedures
       004A           	IPEEK	=74
       004B           	IPOKE	=75
       004C           	INSUM	=76	;Infix Sum
       004D           	INDIF	=77	;Infix Difference
       004E           	INPROD	=78	;Infix Product
       004F           	INQUOT	=79	;Infix quotient
       0050           	INGRTR	=80	;Infix Greater
       0051           	INLESS	=81	;Infix Less
       0052           	INEQUL	=82	;Infix Equal
       0053           	ILPUT	=83
       0054           	IRANDM	=84	;Random
       0055           	ICTYI	=85
       0056           	ICURSR	=86	;Cursor
       0057           	IRNDMZ	=87	;Randomize
       0058           	ICALL	=88
       0059           	ILISTP	=89
       005A           	INMBRP	=90	;Numberp
       005B           	ICLINP	=91
       005C           	ICHNGE	=92
       005D           	IRPEAT	=93
       005E           	ISETX	=94
       005F           	ISETY	=95
       0060           	ISETXY	=96
       0061           	ISETH	=97
       0062           	ISETT	=98
       0063           	IXCOR	=99
       0064           	IYCOR	=100
       0065           	IHDING	=101	;Heading
       0066           	INDSPL	=102	;Nodisplay
       0067           	ICLEAR	=103
       0068           	IINT	=104
       0069           	IFULL	=105
       006A           	IMIX	=106
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-9
LOGO	ASSEMBLY DATA

       006B           	IDELET	=107	;delete file
       006C           	ICATLG	=108	;list files
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-10
LOGO	ASSEMBLY DATA

                      	;	Error Codes:
       0001           	XUOP	=1
       0002           	XEOL	=2
       0003           	XUDF	=3
       0004           	XHNV	=4
       0005           	XTMO	=5
       0006           	XNOP	=6
       0007           	XRPN	=7
       0008           	XIFX	=8
       0009           	XVNA	=9
       000A           	XTIP	=10
       000B           	XWTA	=11
       000C           	XUBL	=12
       000D           	XNTL	=13
       000E           	XNTF	=14
       000F           	XELS	=15
       0010           	XBRK	=16
       0011           	XLABEL	=17
       0012           	XTHN	=18
       0013           	XZAP	=19
       0014           	XLNF	=20
       0015           	XEDT	=21
       0016           	XDEF	=22
       0017           	XETL	=23
       0018           	XNED	=24
       0019           	XOPO	=25
       001A           	XARGTB	=26
       001B           	XTML	=27
       001C           	XDBZ	=28
       001D           	XNWE	=29
       001E           	XLNTB	=30
       001F           	XILN	=31
       0020           	XOFLOW	=32
       0021           	XNDF	=33
       0022           	XCRSR	=34
       0023           	XYNT	=35
       0024           	XOOB	=36
       0025           	XIOR	=37
       0026           	XWTP	=38
       0027           	XFNF	=39
       0028           	XDKF	=40
       0029           	XLKF	=41
                      
       0000           	XNSTOR	=0
       0001           	XNSTRN	=1
       0002           	XSTOP	=2
       0003           	XEXCED	=3
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-11
LOGO	ASSEMBLY DATA

                      	;	Storage Parameters and Map:
                      
                      	;	Miscellaneous:	Page 0 - Variables
                      	;			Page 1 - Processor Stack
                      	;			Page 2 - Line-array
                      	;			Page 3 - Pointers, variable storage
                      	;			Pages 4 to 7 - Text/Color Graphics
                      	;			Pages 8 to 13 - System Array
                      	;			Pages 14 to 31 - Stacks
                      	;			Pages 32 to 63 - Hi-res/edit buffer
                      
                      	;	MISC.:    $0000 - $07FF: $ 800 bytes (2K bytes)
                      	;	SARRAY:   $0800 - $0DFF: $ 600 bytes (1.5K characters)
                      	;	PDL,VPDL: $0E00 - $1FF9: $11F9 bytes (about 2.25K words)
                      	;	HI-RES.:  $2000 - $3FFF: $2000 bytes (8K bytes)
                      	;	LOGO:     $4000 - $95FF: $5600 bytes (21.5K bytes)
                      	;	DOS:      $9600 - $BFFF: $2A00 bytes (10.5K bytes)
                      	;	I/O:      $C000 - $CFFF: $1000 bytes (4K bytes)
                      	;	BIGARRAY: $D000 - $F65F: $2660 bytes (2456. nodes)
                      	;	TYPBASE:  $F660 - $FFF7: $ 998 bytes
                      	;	UNUSED:   $FFF8 - $FFF9: $   2 bytes
                      	;	VECTORS:  $FFFA - $FFFF: $   6 bytes (3 vectors)
                      
                      	;	GHOSTMEM: $D000 - $DFFF: $1000 bytes (4K bytes)
                      
       4000           	PGMSTT	=$4000		;Program starts after High-res. graphics storage
       D000           	BIGBAS	=$D000		;Nodespace beginning
       CFFC           	BBASX	=BIGBAS-4
       2660           	BIGLEN	=$2660		;Nodespace length
       F660           	SINODS	=BIGBAS+BIGLEN	;Nodespace end
       3400           	OFSET1	=$3400		;Offset constant (BIGBAS/4)
       C260           	TYPBAS	=SINODS-OFSET1	;Typebase offset
       0998           	TYPLEN	=BIGLEN/4	;Typebase length
       FFF8           	TYPEND	=SINODS+TYPLEN	;Typebase end
       0032           	NODTST	=50		;Minimum free nodes for tokenizer
       0966           	NODLIM	=TYPLEN-NODTST	;Node allocation limit
       0800           	BASARY	=$800		;SARRAY beginning
       0600           	SARLEN	=$600		;SARRAY length
       11F9           	STKLEN	=$11F9		;Combined stack length
       0E00           	PDLBAS	=BASARY+SARLEN	;PDL beginning (grows upwards, Push-then-incr.)
       1FF7           	VPDLBA	=PDLBAS+STKLEN-2;VPDL beginning (grows downwards, Push-then-decr.)
       0050           	STKLIM	=80		;Minimum unused stack space before panicking
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-12
LOGO	TOP LEVEL

                      	.SBTTL	Top Level
       4000           	.=PGMSTT
                      
                      	;Calling point for the LOGO Interpreter
                      
  4000   AD   83   C0 	LOGO:	LDA GETRM2	;Select Ghost-memory bank 2 for writing
  4003   AD   83   C0 		LDA GETRM2
  4006   A2   00      		LDX #$00
  4008   86   A6      		STX TEMPNH
  400A   86   A8      		STX TEMPN
  400C   E8           		INX
  400D   86   55      		STX BANK4K
  400F   A9   30      		LDA #SYSTAB	;Page no. of tables
  4011   85   A7      		STA TEMPNH+1
  4013   A9   D0      		LDA #GHOMEM	;Page no. of ghost-memory
  4015   85   A9      		STA TEMPN+1
  4017   A0   00      		LDY #$00
  4019   B1   A6      	MOVLOP:	LDA (TEMPNH),Y
  401B   91   A8      		STA (TEMPN),Y
  401D   C8           		INY
  401E   D0   F9      		BNE MOVLOP
  4020   E6   A7      		INC TEMPNH+1
  4022   E6   A9      		INC TEMPN+1
  4024   A9   3D      		LDA #ENDTAB^
  4026   C5   A7      		CMP TEMPNH+1	;See if last page transferred
  4028   B0   EF      		BCS MOVLOP
                      
                      	;Re-entry point for GOODBYE:
  402A   78           	LOGO1:	SEI		;Disable interrupts
  402B   D8           		CLD		;Disable decimal mode
  402C   A2   00      		LDX #$00
  402E   9A           		TXS		;Initialize processor stack
  402F   86   54      		STX MONFLG	;Disable monitor mode
  4031   86   00      		STX $00		;Define LNIL as $0000 at $0000
  4033   86   01      		STX $01
  4035   86   02      		STX $02
  4037   86   03      		STX $03
  4039   86   55      		STX BANK4K
  403B   AD   8B   C0 		LDA GETRM1
  403E   AD   8B   C0 		LDA GETRM1	;Disable Ghost-memory bank 2
  4041   A9   AA      		LDA #MONBRK&$FF
  4043   8D   FE   FF 		STA IRQVEC
  4046   8D   FA   FF 		STA NMIVEC	;Interrupts cause a break to Monitor
  4049   A9   72      		LDA #MONBRK^
  404B   8D   FF   FF 		STA IRQVEC+1
  404E   8D   FB   FF 		STA NMIVEC+1
  4051   A9   AA      		LDA #MONBRK&$FF	;?Vector to LOGO when debugged
  4053   8D   FC   FF 		STA RSTVEC	;RESET reinitializes LOGO
  4056   A9   72      		LDA #MONBRK^
  4058   8D   FD   FF 		STA RSTVEC+1
  405B   20   3A   4F 		JSR INITLZ
  405E   A2   F8      		LDX #HELSTR&$FF
  4060   A0   D9      		LDY #HELSTR^
  4062   20   95   54 		JSR PRTSTR	;Types Hello-String
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-13
LOGO	TOP LEVEL

  4065   A2   98      	TOPLOP:	LDX #ILINE
  4067   20   DE   49 		JSR PRDLIN	;Get a line
  406A   98           		TYA
  406B   D0   F8      		BNE TOPLOP	;Y nonzero means not OK
  406D   A5   99      		LDA ILINE+1
  406F   F0   F4      		BEQ TOPLOP	;Ignore if line is empty
  4071   85   62      		STA TOKPTR+1
  4073   A5   98      		LDA ILINE
  4075   85   61      		STA TOKPTR
  4077   A5   08      		LDA EDSW
  4079   F0   32      		BEQ EVLUAT	;Evaluate it if not in Edit mode
  407B   20   98   40 		JSR CHKLNN
  407E   F0   10      		BEQ TOPEDL	;If there's a line number, add it to the procedure
  4080   20   A5   42 		JSR CHKEVL	;Returns Carry set if Evaluatable
  4083   B0   28      		BCS EVLUAT
  4085   A2   98      	TOPLIN:	LDX #ILINE
  4087   86   B2      		STX ANSN
  4089   A9   0C      		LDA #FLIST
  408B   20   14   53 		JSR CONS
  408E   A0   01      		LDY #$01
  4090   A2   98      	TOPEDL:	LDX #ILINE
  4092   20   4E   4E 		JSR EDLINE
  4095   4C   65   40 		JMP TOPLOP
                      
  4098   A0   00      	CHKLNN:	LDY #$00
  409A   B1   61      		LDA (TOKPTR),Y
  409C   85   A8      		STA TEMPN
  409E   C8           		INY
  409F   B1   61      		LDA (TOKPTR),Y
  40A1   85   A9      		STA TEMPN+1	;(CAR)
  40A3   A2   A8      		LDX #TEMPN
  40A5   20   84   5D 		JSR GETTYP
  40A8   A0   00      		LDY #$00	;(For EDLINE)
  40AA   C9   03      		CMP #FIX
  40AC   60           		RTS
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-14
LOGO	EVALUATOR ROUTINES

                      	.SBTTL	Evaluator Routines
                      	;EVLUAT initializes the Evaluator variables, starts EVLINE.
                      
  40AD   A9   00      	EVLUAT:	LDA #PDLBAS&$FF
  40AF   85   14      		STA SP
  40B1   A9   0E      		LDA #PDLBAS^
  40B3   85   15      		STA SP+1	;SP := PDLBASE
  40B5   A9   F7      		LDA #VPDLBA&$FF
  40B7   85   16      		STA VSP
  40B9   A9   1F      		LDA #VPDLBA^
  40BB   85   17      		STA VSP+1	;VSP := VPDLBASE
  40BD   A9   00      		LDA #$00
  40BF   85   06      		STA EXPOUT	;EXPECTED_OUTPUT := 0
  40C1   85   0B      		STA RUNFLG	;RUN_FLAG := 0
  40C3   85   0C      		STA STPFLG	;STOP_FLAG := 0
  40C5   85   0D      		STA DCOFLG	;DONT_CONTINUE_FLAG := 0
  40C7   85   10      		STA ERRFLG	;ERROR_FLAG := 0
  40C9   85   7C      		STA LEVNUM
  40CB   85   7D      		STA LEVNUM+1	;LEVEL_NUMBER := 0
  40CD   85   74      		STA LINNUM
  40CF   85   75      		STA LINNUM+1	;LINE_NUMBER := 0
  40D1   85   6D      		STA FRAME+1	;FRAME := 0
  40D3   85   6F      		STA XFRAME+1	;XFRAME := 0
  40D5   85   0F      		STA UFRMAT	;UFORMAT := LIST
  40D7   A2   65      		LDX #TOPLOP&$FF
  40D9   A0   40      		LDY #TOPLOP^
  40DB   20   3C   52 		JSR PUSH	;Top-level Return Address (TOPLOP)
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-15
LOGO	EVALUATOR ROUTINES

                      	;EVLINE called with TOKPTR pointing to line of code to execute.
                      	; Pushes IFLEVEL and EXPOUT and then resets them.
                      
  40DE   20   12   54 	EVLINE:	JSR STKTST
  40E1   A6   06      		LDX EXPOUT
  40E3   20   3C   52 		JSR PUSH
  40E6   A2   82      		LDX #IFLEVL
  40E8   20   25   52 		JSR PUSHP
  40EB   A9   00      		LDA #$00
  40ED   85   06      		STA EXPOUT	;EXPECTED_OUTPUT := 0
  40EF   85   82      		STA IFLEVL	;IF_LEVEL := 0
  40F1   85   83      		STA IFLEVL+1
  40F3   A5   62      		LDA TOKPTR+1
  40F5   F0   1D      		BEQ EVLN1P
  40F7   A0   00      	EVLN1:	LDY #$00
  40F9   B1   61      		LDA (TOKPTR),Y
  40FB   85   A8      		STA TEMPN
  40FD   C8           		INY
  40FE   B1   61      		LDA (TOKPTR),Y
  4100   85   A9      		STA TEMPN+1	;(GETTOK)
  4102   A2   A8      		LDX #TEMPN
  4104   20   84   5D 		JSR GETTYP
  4107   C9   0A      		CMP #LATOM
  4109   D0   05      		BNE EVLIN1
  410B   A2   61      		LDX #TOKPTR
  410D   20   75   55 		JSR TTKADV
                      
                      	;EVLIN1 keeps calling EVLEXP until EOL.
                      
  4110   A5   62      	EVLIN1:	LDA TOKPTR+1
  4112   D0   12      		BNE EVLN1A
  4114   A2   82      	EVLN1P:	LDX #IFLEVL
  4116   20   6C   52 		JSR POP
  4119   20   9E   52 		JSR POPB
  411C   85   06      		STA EXPOUT
  411E   A2   A8      	POPJ:	LDX #TEMPN
  4120   20   6C   52 		JSR POP
  4123   6C   A8   00 		JMP (TEMPN)
  4126   A5   0C      	EVLN1A:	LDA STPFLG
  4128   D0   EA      		BNE EVLN1P
  412A   A2   10      		LDX #EVLIN1&$FF
  412C   A0   41      		LDY #EVLIN1^
  412E   20   3C   52 		JSR PUSH	;PUSH (EVLIN1) Return Address
                      
                      	;EVLEXP calls EVAL with PRECED = 0. EVAL returns to EVEX1,
                      	;which restores old PRECED.
                      
  4131   A6   04      	EVLEXP:	LDX PRECED
  4133   20   3C   52 		JSR PUSH	;Call PUSH (PRECEDENCE)
  4136   A9   00      		LDA #$00
  4138   85   04      		STA PRECED	;PRECEDENCE := 0
  413A   A2   F3      		LDX #EVEX1&$FF
  413C   A0   42      		LDY #EVEX1^
  413E   20   3C   52 		JSR PUSH	;Call PUSH (EV_EX_1)
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-16
LOGO	EVALUATOR ROUTINES

                      	;EVAL dispatches to either EVWRAP, PARLOP, UFUNCL, or SFUNCL.
                      	;All return eventually to EVWRAP.
                      
  4141   A2   63      	EVAL:	LDX #CURTOK	;Push CURTOK and increment NEST if FRAME <> 0
  4143   20   25   52 		JSR PUSHP
  4146   A5   6D      		LDA FRAME+1
  4148   F0   0B      		BEQ XEVL2
  414A   E6   7E      	XEVL1:	INC NEST
  414C   D0   07      		BNE XEVL2
  414E   E6   7F      		INC NEST+1
  4150   10   03      		BPL XEVL2
  4152   4C   FB   42 		JMP EXCED
  4155   A5   62      	XEVL2:	LDA TOKPTR+1
  4157   D0   03      		BNE XEVL3
  4159   4C   52   7C 		JMP SCMMT1	;ERROR End-of-Line if EOL
  415C   A0   00      	XEVL3:	LDY #$00	;Get CURTOK and NEXTOK
  415E   B1   61      		LDA (TOKPTR),Y
  4160   85   63      		STA CURTOK
  4162   C8           		INY
  4163   B1   61      		LDA (TOKPTR),Y
  4165   85   64      		STA CURTOK+1	;(GETTOK)
  4167   A2   61      		LDX #TOKPTR
  4169   20   75   55 		JSR TTKADV
  416C   20   E0   43 		JSR GTNXTK
  416F   A2   63      		LDX #CURTOK
  4171   20   84   5D 		JSR GETTYP	;Dispatch off Type of CURTOK
  4174   C9   07      		CMP #SATOM
  4176   F0   4B      		BEQ XCASA
  4178   C9   01      		CMP #ATOM
  417A   F0   47      		BEQ XCASA
  417C   C9   09      		CMP #DATOM
  417E   F0   15      		BEQ XCASD
  4180   C9   00      		CMP #LIST
  4182   F0   2F      		BEQ XCASQ	;(If LIST)
  4184   C9   08      		CMP #QATOM
  4186   F0   2B      		BEQ XCASQ
  4188   C9   03      		CMP #FIX
  418A   F0   27      		BEQ XCASQ
  418C   C9   04      		CMP #FLO
  418E   F0   23      		BEQ XCASQ
  4190   A9   11      	XCASL:	LDA #XLABEL	;ERROR, can't execute a label
  4192   4C   47   61 		JMP ERROR
  4195   A0   63      	XCASD:	LDY #CURTOK	;DATOM, so VPush it unless it's Novalue (then Error)
  4197   A2   A8      		LDX #TEMPN
  4199   20   D1   52 		JSR GETVAL
  419C   A2   A8      		LDX #TEMPN	;For VPUSHP in XCASQ1
  419E   A5   A9      		LDA TEMPN+1
  41A0   D0   19      		BNE XCASQ1
  41A2   A5   A8      		LDA TEMPN
  41A4   F0   15      		BEQ XCASQ1
  41A6   A5   63      		LDA CURTOK
  41A8   29   FC      		AND #$FC
  41AA   85   63      		STA CURTOK
  41AC   A0   63      		LDY #CURTOK
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-17
LOGO	EVALUATOR ROUTINES

  41AE   A9   04      		LDA #XHNV
  41B0   4C   47   61 		JMP ERROR
  41B3   A5   63      	XCASQ:	LDA CURTOK	;QATOM, FIX, FLO, LIST: Just push it and set OTPUTN
  41B5   29   FC      		AND #$FC	;Strip off last two bits
  41B7   85   63      		STA CURTOK
  41B9   A2   63      		LDX #CURTOK
  41BB   20   53   52 	XCASQ1:	JSR VPUSHP	;VPUSH (CURRENT_TOKEN)
  41BE   E6   07      		INC OTPUTN
  41C0   4C   DB   44 		JMP EVWRAP
  41C3   A2   63      	XCASA:	LDX #CURTOK	;ATOM, SATOM: It's some sort of Function
  41C5   A9   67      		LDA #FUNCT
  41C7   20   92   56 		JSR GETFUN
  41CA   85   0E      		STA FUNTYP
  41CC   A5   68      		LDA FUNCT+1
  41CE   D0   07      		BNE XCASA1
  41D0   A0   63      		LDY #CURTOK
  41D2   A9   03      		LDA #XUDF
  41D4   4C   47   61 		JMP ERROR	;Error if GETFUN couldn't find it
  41D7   A5   0E      	XCASA1:	LDA FUNTYP
  41D9   A2   67      		LDX #FUNCT
  41DB   20   B3   54 		JSR INFIXP
  41DE   90   26      		BCC XCASA2
  41E0   C9   4C      		CMP #INSUM
  41E2   D0   0D      		BNE XCASA3
  41E4   A6   94      		LDX UNSUM
  41E6   A4   95      		LDY UNSUM+1
  41E8   D0   0F      		BNE XCASA4	;(Always)
  41EA   A0   63      	XCASA5:	LDY #CURTOK
  41EC   A9   08      		LDA #XIFX
  41EE   4C   47   61 		JMP ERROR
  41F1   C9   4D      	XCASA3:	CMP #INDIF
  41F3   D0   F5      		BNE XCASA5
  41F5   A6   96      		LDX UNDIF
  41F7   A4   97      		LDY UNDIF+1
  41F9   86   63      	XCASA4:	STX CURTOK
  41FB   84   64      		STY CURTOK+1
  41FD   A2   63      		LDX #CURTOK
  41FF   A9   67      		LDA #FUNCT
  4201   20   92   56 		JSR GETFUN
  4204   85   0E      		STA FUNTYP
  4206   A6   04      	XCASA2:	LDX PRECED	;It should be a UFUN or SFUN
  4208   20   3C   52 		JSR PUSH
  420B   A4   0E      		LDY FUNTYP
  420D   A2   67      		LDX #FUNCT
  420F   20   01   53 		JSR GETPRC
  4212   85   04      		STA PRECED
  4214   A5   0E      		LDA FUNTYP
  4216   A2   67      		LDX #FUNCT
  4218   20   77   54 		JSR GETNGS
  421B   10   02      		BPL XCASF1
  421D   49   FF      		EOR #$FF	;NARGS := - NARGS - 1
  421F   85   05      	XCASF1:	STA NARGS
  4221   A2   B0      		LDX #EVAL1&$FF
  4223   A0   45      		LDY #EVAL1^
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-18
LOGO	EVALUATOR ROUTINES

  4225   20   3C   52 		JSR PUSH
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-19
LOGO	EVALUATOR ROUTINES

  4228   A5   05      	ARGLOP:	LDA NARGS	;ARGLOP gets the args for a function
  422A   D0   03      		BNE ARGLP1
  422C   4C   1E   41 		JMP POPJ	;Exit if no args to be gotten
  422F   A6   05      	ARGLP1:	LDX NARGS
  4231   86   B2      		STX ANSN	;AL1 will push this
  4233   20   3C   52 		JSR PUSH
  4236   A2   67      		LDX #FUNCT
  4238   20   25   52 		JSR PUSHP
  423B   A6   0E      		LDX FUNTYP
  423D   20   3C   52 		JSR PUSH
  4240   A6   06      		LDX EXPOUT
  4242   20   3C   52 		JSR PUSH
  4245   A2   82      		LDX #IFLEVL
  4247   20   25   52 		JSR PUSHP
                      
  424A   20   E0   43 	AL1:	JSR GTNXTK
  424D   A2   65      		LDX #NEXTOK
  424F   20   25   52 		JSR PUSHP
  4252   A6   B2      		LDX ANSN
  4254   20   3C   52 		JSR PUSH
  4257   A6   04      		LDX PRECED
  4259   20   3C   52 		JSR PUSH
  425C   A2   00      		LDX #$00
  425E   86   82      		STX IFLEVL
  4260   86   83      		STX IFLEVL+1
  4262   E8           		INX
  4263   86   06      		STX EXPOUT
  4265   A2   6F      		LDX #AL2&$FF
  4267   A0   42      		LDY #AL2^
  4269   20   3C   52 		JSR PUSH
  426C   4C   41   41 		JMP EVAL
                      
  426F   20   9E   52 	AL2:	JSR POPB
  4272   85   04      		STA PRECED
  4274   20   9E   52 		JSR POPB
  4277   85   B2      		STA ANSN
  4279   A2   65      		LDX #NEXTOK
  427B   20   6C   52 		JSR POP
  427E   A5   07      		LDA OTPUTN
  4280   D0   03      		BNE AL2A
  4282   4C   D9   43 		JMP VAL1R	;Error if no output received
  4285   C6   B2      	AL2A:	DEC ANSN
  4287   D0   C1      		BNE AL1		;Get another arg if not done
  4289   A2   82      		LDX #IFLEVL
  428B   20   6C   52 		JSR POP
  428E   20   9E   52 		JSR POPB
  4291   85   06      		STA EXPOUT
  4293   20   9E   52 		JSR POPB
  4296   85   0E      		STA FUNTYP
  4298   A2   67      		LDX #FUNCT
  429A   20   6C   52 		JSR POP
  429D   20   9E   52 		JSR POPB
  42A0   85   05      		STA NARGS
  42A2   4C   1E   41 		JMP POPJ
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-20
LOGO	EVALUATOR ROUTINES

                      
  42A5   A6   A8      	CHKEVL:	LDX TEMPN
  42A7   A4   A9      		LDY TEMPN+1
  42A9   EC   1A   03 		CPX POTS
  42AC   D0   05      		BNE CHKEV2
  42AE   CC   1B   03 		CPY POTS+1
  42B1   F0   3C      		BEQ EVLOK
  42B3   EC   0A   03 	CHKEV2:	CPX LEND
  42B6   D0   05      		BNE CHKEV3
  42B8   CC   0B   03 		CPY LEND+1
  42BB   F0   32      		BEQ EVLOK
  42BD   EC   18   03 	CHKEV3:	CPX PO
  42C0   D0   05      		BNE CHKEV4
  42C2   CC   19   03 		CPY PO+1
  42C5   F0   28      		BEQ EVLOK
  42C7   EC   1C   03 	CHKEV4:	CPX PRNTOT
  42CA   D0   05      		BNE CHKEV5
  42CC   CC   1D   03 		CPY PRNTOT+1
  42CF   F0   1E      		BEQ EVLOK
  42D1   EC   14   03 	CHKEV5:	CPX LTITLE
  42D4   D0   05      		BNE CHKEV6
  42D6   CC   15   03 		CPY LTITLE+1
  42D9   F0   14      		BEQ EVLOK
  42DB   EC   06   03 	CHKEV6:	CPX ERASE
  42DE   D0   05      		BNE CHKEV7
  42E0   CC   07   03 		CPY ERASE+1
  42E3   F0   0A      		BEQ EVLOK
  42E5   EC   04   03 	CHKEV7:	CPX ER
  42E8   D0   07      		BNE EVLNO
  42EA   CC   05   03 		CPY ER+1
  42ED   D0   02      		BNE EVLNO
  42EF   38           	EVLOK:	SEC
  42F0   60           		RTS
  42F1   18           	EVLNO:	CLC
  42F2   60           		RTS
                      
  42F3   20   9E   52 	EVEX1:	JSR POPB
  42F6   85   04      		STA PRECED
  42F8   4C   1E   41 		JMP POPJ
                      
  42FB   A9   13      	EXCED:	LDA #XZAP
  42FD   A2   03      		LDX #XEXCED
  42FF   4C   47   61 		JMP ERROR
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-21
LOGO	EVALUATOR ROUTINES

  4302   A2   65      	PARLOP:	LDX #NEXTOK	;Executed when an LPAR is encountered
  4304   A9   67      		LDA #FUNCT
  4306   20   92   56 		JSR GETFUN
  4309   85   0E      		STA FUNTYP
  430B   A5   68      		LDA FUNCT+1
  430D   F0   09      		BEQ PARLP4
  430F   A5   0E      	PARLP1:	LDA FUNTYP
  4311   A2   67      		LDX #FUNCT
  4313   20   77   54 		JSR GETNGS
  4316   85   05      		STA NARGS
  4318   A5   05      	PARLP4:	LDA NARGS
  431A   30   1D      		BMI PARLP3
  431C   A6   06      		LDX EXPOUT
  431E   20   3C   52 		JSR PUSH
  4321   A2   82      		LDX #IFLEVL
  4323   20   25   52 		JSR PUSHP
  4326   A2   00      		LDX #$00
  4328   86   82      		STX IFLEVL	;IF_LEVEL := 0
  432A   86   83      		STX IFLEVL+1
  432C   E8           		INX
  432D   86   06      		STX EXPOUT
  432F   A2   EC      		LDX #PLOP1&$FF
  4331   A0   43      		LDY #PLOP1^
  4333   20   3C   52 		JSR PUSH
  4336   4C   31   41 		JMP EVLEXP
  4339   A4   0E      	PARLP3:	LDY FUNTYP
  433B   A2   67      		LDX #FUNCT
  433D   20   01   53 		JSR GETPRC
  4340   85   04      		STA PRECED
  4342   A5   65      		LDA NEXTOK
  4344   85   63      		STA CURTOK
  4346   A5   66      		LDA NEXTOK+1
  4348   85   64      		STA CURTOK+1	;CURRENT_TOKEN := NEXT_TOKEN
  434A   A2   61      		LDX #TOKPTR
  434C   20   75   55 		JSR TTKADV
  434F   A9   00      		LDA #$00
  4351   85   05      		STA NARGS	;NARGS := 0
  4353   A2   67      		LDX #FUNCT
  4355   20   25   52 		JSR PUSHP
  4358   A6   0E      		LDX FUNTYP
  435A   20   3C   52 		JSR PUSH
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-22
LOGO	EVALUATOR ROUTINES

  435D   20   E0   43 	VARGLP:	JSR GTNXTK
  4360   A5   65      		LDA NEXTOK
  4362   CD   20   03 		CMP RPAR
  4365   D0   1F      		BNE VRGLP1
  4367   A5   66      		LDA NEXTOK+1
  4369   CD   21   03 		CMP RPAR+1
  436C   D0   18      		BNE VRGLP1
  436E   20   9E   52 		JSR POPB	;Call POP (FUNTYPE)
  4371   85   0E      		STA FUNTYP
  4373   A2   67      		LDX #FUNCT
  4375   20   6C   52 		JSR POP
  4378   A2   61      		LDX #TOKPTR
  437A   20   75   55 		JSR TTKADV
  437D   A5   05      		LDA NARGS
  437F   49   FF      		EOR #$FF
  4381   85   05      		STA NARGS	;NARGS := - NARGS - 1
  4383   4C   BC   45 		JMP FNCAL1
  4386   A6   05      	VRGLP1:	LDX NARGS
  4388   20   3C   52 		JSR PUSH
  438B   A2   65      		LDX #NEXTOK
  438D   20   25   52 		JSR PUSHP
  4390   A6   06      		LDX EXPOUT
  4392   20   3C   52 		JSR PUSH
  4395   A2   82      		LDX #IFLEVL
  4397   20   25   52 		JSR PUSHP
  439A   A2   00      		LDX #$00
  439C   86   82      		STX IFLEVL	;IF_LEVEL := 0
  439E   86   83      		STX IFLEVL+1
  43A0   E8           		INX
  43A1   86   06      		STX EXPOUT
  43A3   A6   04      		LDX PRECED
  43A5   20   3C   52 		JSR PUSH
  43A8   A2   B2      		LDX #VAL1&$FF
  43AA   A0   43      		LDY #VAL1^
  43AC   20   3C   52 		JSR PUSH
  43AF   4C   41   41 		JMP EVAL
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-23
LOGO	EVALUATOR ROUTINES

  43B2   20   9E   52 	VAL1:	JSR POPB
  43B5   85   04      		STA PRECED
  43B7   A2   82      		LDX #IFLEVL
  43B9   20   6C   52 		JSR POP
  43BC   20   9E   52 		JSR POPB
  43BF   85   06      		STA EXPOUT
  43C1   A2   65      		LDX #NEXTOK
  43C3   20   6C   52 		JSR POP
  43C6   20   9E   52 		JSR POPB
  43C9   85   05      		STA NARGS
  43CB   A5   07      		LDA OTPUTN
  43CD   F0   0A      		BEQ VAL1R
  43CF   18           		CLC
  43D0   A5   05      		LDA NARGS
  43D2   65   07      		ADC OTPUTN
  43D4   85   05      		STA NARGS
  43D6   4C   5D   43 		JMP VARGLP
  43D9   A9   06      	VAL1R:	LDA #XNOP
  43DB   A0   65      		LDY #NEXTOK
  43DD   4C   47   61 		JMP ERROR
                      
  43E0   A0   00      	GTNXTK:	LDY #$00
  43E2   B1   61      		LDA (TOKPTR),Y
  43E4   85   65      		STA NEXTOK
  43E6   C8           		INY
  43E7   B1   61      		LDA (TOKPTR),Y
  43E9   85   66      		STA NEXTOK+1	;(GETTOK)
  43EB   60           		RTS
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-24
LOGO	EVALUATOR ROUTINES

                      	;PLOP1 cleans up after a parenthesized expression.
                      
  43EC   A2   82      	PLOP1:	LDX #IFLEVL
  43EE   20   6C   52 		JSR POP
  43F1   20   9E   52 		JSR POPB
  43F4   85   06      		STA EXPOUT
  43F6   A5   62      		LDA TOKPTR+1
  43F8   D0   03      		BNE PLOP1A
  43FA   4C   52   7C 		JMP SCMMT1	;Error if EOL
  43FD   20   E0   43 	PLOP1A:	JSR GTNXTK
  4400   A5   65      		LDA NEXTOK
  4402   CD   20   03 		CMP RPAR	;Next token must be an RPAR, else Error
  4405   D0   0F      		BNE PLOP1B
  4407   A5   66      		LDA NEXTOK+1
  4409   CD   21   03 		CMP RPAR+1
  440C   D0   08      		BNE PLOP1B
  440E   A2   61      		LDX #TOKPTR	;Everything OK, get the next token and exit
  4410   20   75   55 		JSR TTKADV
  4413   4C   1E   41 		JMP POPJ
  4416   A9   0A      	PLOP1B:	LDA #XTIP
  4418   4C   47   61 		JMP ERROR
                      
  441B   A6   0F      	RUNHAN:	LDX UFRMAT
  441D   20   3C   52 		JSR PUSH
  4420   A2   7A      		LDX #ULNEND
  4422   20   25   52 		JSR PUSHP
  4425   A2   61      		LDX #TOKPTR
  4427   20   53   52 		JSR VPUSHP
  442A   A5   A2      		LDA ARG1
  442C   85   61      		STA TOKPTR
  442E   A5   A3      		LDA ARG1+1
  4430   85   62      		STA TOKPTR+1
  4432   A6   0B      		LDX RUNFLG
  4434   20   3C   52 		JSR PUSH
  4437   A2   00      		LDX #$00
  4439   86   07      		STX OTPUTN
  443B   86   0F      		STX UFRMAT
  443D   E8           		INX
  443E   86   0B      		STX RUNFLG
  4440   A2   4A      		LDX #RH1&$FF
  4442   A0   44      		LDY #RH1^
  4444   20   3C   52 		JSR PUSH
  4447   4C   DE   40 		JMP EVLINE
                      
  444A   20   9E   52 	RH1:	JSR POPB
  444D   85   0B      		STA RUNFLG
  444F   A2   61      		LDX #TOKPTR
  4451   20   85   52 		JSR VPOP
  4454   A2   7A      		LDX #ULNEND
  4456   20   6C   52 		JSR POP
  4459   20   9E   52 		JSR POPB
  445C   85   0F      		STA UFRMAT
  445E   4C   1E   41 		JMP POPJ
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-25
LOGO	EVALUATOR ROUTINES

  4461   A5   57      	SREAD1:	LDA INDEV	;If something reset INDEV to default,
  4463   F0   3A      		BEQ SREAD3	;then break out, don't check for EOF.
  4465   A5   C8      	SRED1A:	LDA ENDBUF+1
  4467   C5   C6      		CMP EPOINT+1
  4469   D0   06      		BNE EDIN
  446B   A5   C7      		LDA ENDBUF
  446D   C5   C5      		CMP EPOINT
  446F   F0   2A      		BEQ SREAD2
  4471   A2   00      	EDIN:	LDX #$00
  4473   A0   00      	EDIN2:	LDY #$00
  4475   B1   C5      		LDA (EPOINT),Y
  4477   9D   00   02 		STA LINARY,X
  447A   20   A0   6A 		JSR INCPNT
  447D   BD   00   02 		LDA LINARY,X
  4480   C9   0D      		CMP #$0D
  4482   F0   03      		BEQ EDIN1
  4484   E8           		INX
  4485   D0   EC      		BNE EDIN2
  4487   86   B8      	EDIN1:	STX TEMPN7
  4489   E6   58      		INC OUTDEV	;Nullify the TPCHR in PRDLIN (closing brackets, etc.)
  448B   A9   98      		LDA #ILINE
  448D   85   BE      		STA TEMPX2
  448F   20   F2   49 		JSR PRDLNX	;Read a line. If error, reset & go to SREAD2
  4492   C6   58      		DEC OUTDEV	;Re-enable TPCHR's
  4494   98           		TYA
  4495   F0   0F      		BEQ SRD1A	;Y zero means OK
  4497   A9   00      		LDA #$00
  4499   85   10      		STA ERRFLG
  449B   A9   00      	SREAD2:	LDA #KBD	;Break out of Read loop, reset INDEV
  449D   85   57      		STA INDEV	;to default.
  449F   85   08      	SREAD3:	STA EDSW
  44A1   85   07      		STA OTPUTN	;OUTPUTN := 0
  44A3   4C   1E   41 		JMP POPJ	;Return to S_READ1's superior
                      
  44A6   A5   99      	SRD1A:	LDA ILINE+1
  44A8   85   62      		STA TOKPTR+1
  44AA   F0   B9      		BEQ SRED1A
  44AC   A5   98      		LDA ILINE
  44AE   85   61      		STA TOKPTR
  44B0   A5   08      		LDA EDSW
  44B2   F0   0A      		BEQ SRD1E
  44B4   20   98   40 		JSR CHKLNN
  44B7   F0   1A      		BEQ SRDEDL	;If there's a line number, add it to the procedure
  44B9   20   A5   42 		JSR CHKEVL	;Returns Carry set if Evaluatable
  44BC   90   0A      		BCC SRD1F
  44BE   A2   61      	SRD1E:	LDX #SREAD1&$FF
  44C0   A0   44      		LDY #SREAD1^
  44C2   20   3C   52 		JSR PUSH
  44C5   4C   DE   40 		JMP EVLINE
  44C8   A2   98      	SRD1F:	LDX #ILINE
  44CA   86   B2      		STX ANSN
  44CC   A9   0C      		LDA #FLIST
  44CE   20   14   53 		JSR CONS
  44D1   A0   01      		LDY #$01
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-26
LOGO	EVALUATOR ROUTINES

  44D3   A2   98      	SRDEDL:	LDX #ILINE
  44D5   20   4E   4E 		JSR EDLINE
  44D8   4C   61   44 		JMP SREAD1
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-27
LOGO	EVALUATOR ROUTINES

  44DB   A5   62      	EVWRAP:	LDA TOKPTR+1
  44DD   F0   78      		BEQ EVRETN
  44DF   A5   07      		LDA OTPUTN
  44E1   F0   74      		BEQ EVRETN
  44E3   A5   0C      		LDA STPFLG
  44E5   D0   70      		BNE EVRETN
  44E7   A0   00      		LDY #$00
  44E9   B1   61      		LDA (TOKPTR),Y
  44EB   85   63      		STA CURTOK
  44ED   C8           		INY
  44EE   B1   61      		LDA (TOKPTR),Y
  44F0   85   64      		STA CURTOK+1	;(GETTOK)
  44F2   A5   63      		LDA CURTOK
  44F4   CD   20   03 		CMP RPAR
  44F7   D0   07      		BNE EVW2
  44F9   A5   64      		LDA CURTOK+1
  44FB   CD   21   03 		CMP RPAR+1
  44FE   F0   57      		BEQ EVRETN
  4500   A2   63      	EVW2:	LDX #CURTOK
  4502   A9   67      		LDA #FUNCT
  4504   20   92   56 		JSR GETFUN
  4507   85   0E      		STA FUNTYP
  4509   A2   67      		LDX #FUNCT
  450B   20   B3   54 		JSR INFIXP
  450E   90   47      		BCC EVRETN
  4510   A4   0E      		LDY FUNTYP
  4512   A2   67      		LDX #FUNCT
  4514   20   01   53 		JSR GETPRC
  4517   85   C0      		STA ANSN2
  4519   C5   04      		CMP PRECED
  451B   90   3A      		BCC EVRETN
  451D   F0   38      		BEQ EVRETN
  451F   A2   61      		LDX #TOKPTR
  4521   20   75   55 		JSR TTKADV
  4524   20   E0   43 		JSR GTNXTK
  4527   A2   65      		LDX #NEXTOK
  4529   20   25   52 		JSR PUSHP
  452C   A2   67      		LDX #FUNCT
  452E   20   25   52 		JSR PUSHP
  4531   A6   0E      		LDX FUNTYP
  4533   20   3C   52 		JSR PUSH
  4536   A6   06      		LDX EXPOUT
  4538   20   3C   52 		JSR PUSH
  453B   A2   82      		LDX #IFLEVL
  453D   20   25   52 		JSR PUSHP
  4540   A6   04      		LDX PRECED
  4542   20   3C   52 		JSR PUSH
  4545   A9   01      		LDA #$01
  4547   85   06      		STA EXPOUT
  4549   A5   C0      		LDA ANSN2
  454B   85   04      		STA PRECED
  454D   A2   85      		LDX #EW1&$FF
  454F   A0   45      		LDY #EW1^
  4551   20   3C   52 		JSR PUSH
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-28
LOGO	EVALUATOR ROUTINES

  4554   4C   41   41 		JMP EVAL
                      
  4557   A5   6D      	EVRETN:	LDA FRAME+1
  4559   F0   06      		BEQ EVRET1
  455B   C6   7E      	EVRTN1:	DEC NEST
  455D   10   02      		BPL EVRET1
  455F   C6   7F      		DEC NEST+1
  4561   A5   07      	EVRET1:	LDA OTPUTN
  4563   F0   18      		BEQ EVRET2
  4565   A5   06      		LDA EXPOUT
  4567   D0   14      		BNE EVRET2
  4569   A5   0C      		LDA STPFLG
  456B   D0   10      		BNE EVRET2
  456D   A5   0B      		LDA RUNFLG
  456F   D0   0C      		BNE EVRET2
  4571   A2   65      		LDX #NEXTOK
  4573   20   85   52 		JSR VPOP
  4576   A0   65      		LDY #NEXTOK
  4578   A9   01      		LDA #XUOP
  457A   4C   47   61 		JMP ERROR
  457D   A2   63      	EVRET2:	LDX #CURTOK
  457F   20   6C   52 		JSR POP
  4582   4C   1E   41 		JMP POPJ
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-29
LOGO	EVALUATOR ROUTINES

                      	;EW1 pops everything EVWRAP pushed, checks for output (error if none),
                      	;then goes to FUNCAL with NARGS = 2.
                      
  4585   20   9E   52 	EW1:	JSR POPB
  4588   85   04      		STA PRECED
  458A   A2   82      		LDX #IFLEVL
  458C   20   6C   52 		JSR POP
  458F   20   9E   52 		JSR POPB
  4592   85   06      		STA EXPOUT
  4594   20   9E   52 		JSR POPB
  4597   85   0E      		STA FUNTYP
  4599   A2   67      		LDX #FUNCT
  459B   20   6C   52 		JSR POP
  459E   A2   65      		LDX #NEXTOK
  45A0   20   6C   52 		JSR POP
  45A3   A5   07      		LDA OTPUTN
  45A5   D0   03      		BNE EW1A
  45A7   4C   D9   43 		JMP VAL1R	;(ERROR XNOP,NEXTOK)
  45AA   A9   02      	EW1A:	LDA #$02
  45AC   85   05      		STA NARGS	;NARGS := 2
  45AE   D0   05      		BNE FUNCAL	;(Always)
                      
  45B0   20   9E   52 	EVAL1:	JSR POPB	;Now that we have the args, get the old PRECED
  45B3   85   04      		STA PRECED	; back and do the function
                      
                      	;FUNCAL calls either SFUNCL (with FBODY1 = Funct. #) or UFUNCL (with FBODY1
                      	; pointing to text). Both return to EVWRAP. (FNCAL1 is same, except U&SFNCL
                      	; don't return to EVWRAP).
                      
  45B5   A2   DB      	FUNCAL:	LDX #EVWRAP&$FF
  45B7   A0   44      		LDY #EVWRAP^
  45B9   20   3C   52 		JSR PUSH
  45BC   A5   0E      	FNCAL1:	LDA FUNTYP
  45BE   C9   05      		CMP #SFUN
  45C0   F0   0E      		BEQ FUN1
  45C2   A0   02      		LDY #$02	;UFUN, get text pointer
  45C4   B1   67      		LDA (FUNCT),Y
  45C6   85   72      		STA FBODY1
  45C8   C8           		INY
  45C9   B1   67      		LDA (FUNCT),Y
  45CB   85   73      		STA FBODY1+1	;(CDR)
  45CD   4C   13   46 		JMP XUFNCL
  45D0   A0   02      	FUN1:	LDY #$02	;SFUN, get Function # from Sarray
  45D2   B1   67      		LDA (FUNCT),Y	;FBODY1 := SARRAY[FUNCT + SA_SINDEX] (SA_SINDEX = 2)
  45D4   85   72      		STA FBODY1
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-30
LOGO	EVALUATOR ROUTINES

  45D6   A9   00      	XSFNCL:	LDA #$00
  45D8   85   07      		STA OTPUTN	;Default, no outputs
  45DA   A9   D0      		LDA #GHOMEM	;Page no. of dispatch addresses
  45DC   85   A9      		STA TEMPN+1
  45DE   A5   72      		LDA FBODY1
  45E0   0A           		ASL A
  45E1   85   A8      		STA TEMPN
  45E3   90   02      		BCC XSFNC1
  45E5   E6   A9      		INC TEMPN+1
  45E7   AD   83   C0 	XSFNC1:	LDA GETRM2	;Ghost-memory bank 2, System table
  45EA   E6   55      		INC BANK4K
  45EC   A0   00      		LDY #$00
  45EE   B1   A8      		LDA (TEMPN),Y
  45F0   85   A6      		STA TEMPNH
  45F2   C8           		INY
  45F3   B1   A8      		LDA (TEMPN),Y
  45F5   85   A7      		STA TEMPNH+1	;(CAR)
  45F7   AD   8B   C0 		LDA GETRM1	;Ghost-memory bank 2 disable
  45FA   AD   8B   C0 		LDA GETRM1
  45FD   C6   55      		DEC BANK4K
  45FF   6C   A6   00 		JMP (TEMPNH)	;Execute the routine
                      
                      	;FBODY1 contains a one-byte index to a table of pointers to system routines
                      	;The table starts at GHOMEM, and the index is multiplied by two for indexing
                      	;the sixteen-bit addresses. Adresses in the table are stored low byte first,
                      	;high byte next.
                      
                      	;For THEN, pointer points to XXSFR1
                      	;For RPAR, pointer points to XXSFR2
                      	;For LPAR, pointer points to PARLOP
                      	;For ALL, NAMES, TITLES, and PROCEDURES, pointers all point to XXSFR3
                      
  4602   A9   12      	XXSFR1:	LDA #XTHN
  4604   4C   47   61 		JMP ERROR
  4607   A9   07      	XXSFR2:	LDA #XRPN
  4609   4C   47   61 		JMP ERROR
  460C   A0   63      	XXSFR3:	LDY #CURTOK
  460E   A9   19      		LDA #XOPO
  4610   4C   47   61 		JMP ERROR
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-31
LOGO	EVALUATOR ROUTINES

  4613   A0   76      	XUFNCL:	LDY #FPTR
  4615   A2   A8      		LDX #TEMPN	;Lastline
  4617   20   59   55 		JSR LINPEK
  461A   20   12   54 		JSR STKTST
  461D   A2   7A      		LDX #ULNEND
  461F   20   25   52 		JSR PUSHP
  4622   A6   0F      		LDX UFRMAT
  4624   20   3C   52 		JSR PUSH
  4627   A2   70      		LDX #FBODY
  4629   20   25   52 		JSR PUSHP
  462C   A2   76      		LDX #FPTR
  462E   20   25   52 		JSR PUSHP
  4631   A6   0B      		LDX RUNFLG
  4633   20   3C   52 		JSR PUSH
  4636   A9   00      		LDA #$00
  4638   85   0C      		STA STPFLG
  463A   85   0B      		STA RUNFLG
  463C   85   79      		STA GOPTR+1	;GO_PTR := LNIL (0)
  463E   85   AB      		STA TEMPN1+1	;TEMP := LNIL (0)
  4640   A5   72      		LDA FBODY1
  4642   85   70      		STA FBODY
  4644   85   76      		STA FPTR
  4646   A5   73      		LDA FBODY1+1
  4648   85   71      		STA FBODY+1
  464A   85   77      		STA FPTR+1
  464C   A5   7E      		LDA NEST
  464E   D0   26      		BNE XUFN1
  4650   A5   7F      		LDA NEST+1
  4652   D0   22      		BNE XUFN1
  4654   A5   7C      		LDA LEVNUM
  4656   D0   04      		BNE XUFN2
  4658   A5   7D      		LDA LEVNUM+1
  465A   F0   1A      		BEQ XUFN1
  465C   A5   A9      	XUFN2:	LDA TEMPN+1	;Lastline
  465E   D0   07      		BNE XUFN3
  4660   A5   62      		LDA TOKPTR+1
  4662   D0   07      		BNE XUFN5
  4664   4C   8B   46 		JMP XUFN1A
  4667   A5   62      	XUFN3:	LDA TOKPTR+1
  4669   F0   0B      		BEQ XUFN1
  466B   A0   00      	XUFN5:	LDY #$00
  466D   B1   61      		LDA (TOKPTR),Y
  466F   85   AA      		STA TEMPN1
  4671   C8           		INY
  4672   B1   61      		LDA (TOKPTR),Y
  4674   85   AB      		STA TEMPN1+1	;(GETTOK)
  4676   A2   70      	XUFN1:	LDX #FBODY
  4678   20   84   5D 		JSR GETTYP
  467B   85   0F      		STA UFRMAT
  467D   A5   AA      		LDA TEMPN1
  467F   CD   10   03 		CMP LSTOP
  4682   D0   12      		BNE XUFN6
  4684   A5   AB      		LDA TEMPN1+1
  4686   CD   11   03 		CMP LSTOP+1
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-32
LOGO	EVALUATOR ROUTINES

  4689   D0   0B      		BNE XUFN6
  468B   A5   6E      	XUFN1A:	LDA XFRAME
  468D   85   14      		STA SP
  468F   A5   6F      		LDA XFRAME+1
  4691   85   15      		STA SP+1
  4693   4C   95   48 		JMP XTAIL
  4696   A6   6C      	XUFN6:	LDX FRAME
  4698   A4   6D      		LDY FRAME+1
  469A   A5   14      		LDA SP
  469C   85   6C      		STA FRAME
  469E   A5   15      		LDA SP+1
  46A0   85   6D      		STA FRAME+1	;FRAME points to PREV_FRAME
  46A2   20   3C   52 		JSR PUSH
  46A5   A2   6E      		LDX #XFRAME
  46A7   20   25   52 		JSR PUSHP
  46AA   A6   0F      		LDX UFRMAT
  46AC   20   3C   52 		JSR PUSH
  46AF   A2   63      		LDX #CURTOK
  46B1   20   25   52 		JSR PUSHP
  46B4   A2   7E      		LDX #NEST
  46B6   20   25   52 		JSR PUSHP
  46B9   A2   74      		LDX #LINNUM
  46BB   20   25   52 		JSR PUSHP
  46BE   A2   61      		LDX #TOKPTR
  46C0   20   25   52 		JSR PUSHP
  46C3   A6   05      		LDX NARGS
  46C5   E8           		INX
  46C6   20   3C   52 		JSR PUSH	;PUSH (NARGS+1)
  46C9   A2   80      		LDX #TLLEVS
  46CB   20   25   52 		JSR PUSHP
  46CE   A0   00      		LDY #$00
  46D0   B1   67      		LDA (FUNCT),Y
  46D2   AA           		TAX
  46D3   C8           		INY
  46D4   B1   67      		LDA (FUNCT),Y
  46D6   A8           		TAY		;(GET_FFRAME)
  46D7   20   3C   52 		JSR PUSH
  46DA   A6   67      		LDX FUNCT
  46DC   A4   68      		LDY FUNCT+1
  46DE   E8           		INX
  46DF   D0   01      		BNE XUFN6B
  46E1   C8           		INY
  46E2   20   3C   52 	XUFN6B:	JSR PUSH	;PUSH (FUNCT+1)
  46E5   A0   01      		LDY #$01
  46E7   84   80      		STY TLLEVS
  46E9   88           		DEY
  46EA   84   74      		STY LINNUM
  46EC   84   75      		STY LINNUM+1
  46EE   84   81      		STY TLLEVS+1
  46F0   88           		DEY
  46F1   84   7E      		STY NEST
  46F3   84   7F      		STY NEST+1
  46F5   E6   7C      		INC LEVNUM
  46F7   D0   07      		BNE XUFN6C
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-33
LOGO	EVALUATOR ROUTINES

  46F9   E6   7D      		INC LEVNUM+1
  46FB   D0   03      		BNE XUFN6C
  46FD   4C   FB   42 		JMP EXCED
  4700   C8           	XUFN6C:	INY
  4701   A5   6C      		LDA FRAME
  4703   91   67      		STA (FUNCT),Y
  4705   C8           		INY
  4706   A5   6D      		LDA FRAME+1
  4708   91   67      		STA (FUNCT),Y	;(PUT_FFRAME)
  470A   20   9B   49 		JSR STPTR1
  470D   A0   70      		LDY #FBODY
  470F   A2   AA      		LDX #TEMPN1	;TEMPN1 gets ARGLIST
  4711   20   0B   56 		JSR GTTULN
  4714   A5   AB      	XUFNW:	LDA TEMPN1+1
  4716   F0   3C      		BEQ XUFNWE
  4718   20   AE   49 		JSR PTVTST
  471B   A0   00      		LDY #$00
  471D   B1   AA      		LDA (TEMPN1),Y
  471F   85   AC      		STA TEMPN2	;TEMPN2 is VARNAM
  4721   C8           		INY
  4722   B1   AA      		LDA (TEMPN1),Y
  4724   85   AD      		STA TEMPN2+1	;(GETTOK)
  4726   A2   AA      		LDX #TEMPN1
  4728   20   75   55 		JSR TTKADV
  472B   A0   AC      		LDY #TEMPN2
  472D   A2   A8      		LDX #TEMPN	;TEMPN is TEMP1
  472F   20   D1   52 		JSR GETVAL
  4732   A2   A8      		LDX #TEMPN
  4734   20   25   52 		JSR PUSHP
  4737   A0   00      		LDY #$00
  4739   B1   B4      		LDA (TEMPN5),Y	;TEMPN5 is POINTER
  473B   85   A8      		STA TEMPN
  473D   C8           		INY
  473E   B1   B4      		LDA (TEMPN5),Y
  4740   85   A9      		STA TEMPN+1	;(GETBAR)
  4742   20   BD   49 		JSR PTRDEC
  4745   A2   A8      		LDX #TEMPN
  4747   A0   AC      		LDY #TEMPN2
  4749   20   E9   52 		JSR PUTVAL
  474C   A2   AC      		LDX #TEMPN2
  474E   20   25   52 		JSR PUSHP
  4751   4C   14   47 		JMP XUFNW
  4754   A5   14      	XUFNWE:	LDA SP
  4756   85   6E      		STA XFRAME	;XFRAME points to location after last binding pair
  4758   A5   15      		LDA SP+1
  475A   85   6F      		STA XFRAME+1
  475C   20   C9   49 		JSR INCVSP
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-34
LOGO	EVALUATOR ROUTINES

                      	;UF1 does a line of the procedure.
                      
  475F   A5   79      	UF1:	LDA GOPTR+1
  4761   D0   08      		BNE UF1A
  4763   A2   76      		LDX #FPTR
  4765   20   43   57 		JSR ULNADV
  4768   4C   77   47 		JMP UF1C
  476B   A5   78      	UF1A:	LDA GOPTR	;GOPTR <> NIL, so FPTR := GOPTR, reset GOPTR.
  476D   85   76      		STA FPTR
  476F   A5   79      		LDA GOPTR+1
  4771   85   77      		STA FPTR+1
  4773   A9   00      		LDA #$00
  4775   85   79      		STA GOPTR+1
  4777   A5   0C      	UF1C:	LDA STPFLG
  4779   D0   27      		BNE UF2A
  477B   A5   77      		LDA FPTR+1
  477D   F0   21      		BEQ UF2
  477F   A0   76      	UF1D:	LDY #FPTR
  4781   A2   61      		LDX #TOKPTR
  4783   20   0B   56 		JSR GTTULN
  4786   A0   00      		LDY #$00
  4788   B1   61      		LDA (TOKPTR),Y
  478A   85   74      		STA LINNUM
  478C   C8           		INY
  478D   B1   61      		LDA (TOKPTR),Y
  478F   85   75      		STA LINNUM+1	;(GETTOK)
  4791   A2   61      		LDX #TOKPTR
  4793   20   75   55 		JSR TTKADV
  4796   A2   5F      		LDX #UF1&$FF
  4798   A0   47      		LDY #UF1^
  479A   20   3C   52 		JSR PUSH
  479D   4C   DE   40 		JMP EVLINE
                      
                      	;End of a procedure.
                      
  47A0   85   07      	UF2:	STA OTPUTN
  47A2   38           	UF2A:	SEC
  47A3   A5   7C      		LDA LEVNUM
  47A5   E5   80      		SBC TLLEVS
  47A7   85   7C      		STA LEVNUM
  47A9   A5   7D      		LDA LEVNUM+1
  47AB   E5   81      		SBC TLLEVS+1
  47AD   85   7D      		STA LEVNUM+1
  47AF   A9   00      		LDA #$00
  47B1   85   0C      		STA STPFLG
  47B3   20   EF   51 		JSR POPFRM
  47B6   20   9E   52 		JSR POPB
  47B9   85   0B      		STA RUNFLG
  47BB   A2   76      		LDX #FPTR
  47BD   20   6C   52 		JSR POP
  47C0   A2   70      		LDX #FBODY
  47C2   20   6C   52 		JSR POP
  47C5   20   9E   52 		JSR POPB
  47C8   85   0F      		STA UFRMAT
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-35
LOGO	EVALUATOR ROUTINES

  47CA   A2   7A      		LDX #ULNEND
  47CC   20   6C   52 		JSR POP
  47CF   4C   1E   41 		JMP POPJ
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-36
LOGO	EVALUATOR ROUTINES

  47D2   A2   00      	ERROR1:	LDX #$00
  47D4   86   0B      		STX RUNFLG
  47D6   A5   10      		LDA ERRFLG
  47D8   85   C2      		STA ANSNX
  47DA   86   10      		STX ERRFLG
  47DC   C9   13      		CMP #XZAP
  47DE   F0   10      		BEQ PPTTP
  47E0   A6   7C      		LDX LEVNUM
  47E2   D0   04      		BNE ERR1A
  47E4   A6   7D      		LDX LEVNUM+1
  47E6   F0   08      		BEQ PPTTP
  47E8   A4   0A      	ERR1A:	LDY DBUGSW
  47EA   D0   5C      		BNE ERR1B
  47EC   C9   10      		CMP #XBRK
  47EE   F0   58      		BEQ ERR1B
  47F0   A5   6D      	PPTTP:	LDA FRAME+1
  47F2   F0   1C      		BEQ PPTT2
  47F4   20   7C   57 	PPTTP1:	JSR RSTBND
  47F7   A0   02      		LDY #$02	;(SF_XFRAME = 2.)
  47F9   B1   6C      		LDA (FRAME),Y
  47FB   85   6E      		STA XFRAME
  47FD   C8           		INY
  47FE   B1   6C      		LDA (FRAME),Y
  4800   85   6F      		STA XFRAME+1	;(GETBAR)
  4802   A0   00      		LDY #$00	;(SF_PREVIOUS_FRAME = 0)
  4804   B1   6C      		LDA (FRAME),Y
  4806   AA           		TAX
  4807   C8           		INY
  4808   B1   6C      		LDA (FRAME),Y
  480A   85   6D      		STA FRAME+1	;(GETBAR)
  480C   86   6C      		STX FRAME
  480E   D0   E4      		BNE PPTTP1
  4810   A9   00      	PPTT2:	LDA #$00
  4812   85   7C      		STA LEVNUM
  4814   85   7D      		STA LEVNUM+1
  4816   A5   C2      		LDA ANSNX
  4818   C9   13      		CMP #XZAP
  481A   D0   29      		BNE JTOP
  481C   A5   C1      		LDA ANSN3
  481E   C9   01      		CMP #XNSTRN
  4820   D0   23      		BNE JTOP
  4822   A9   F7      		LDA #VPDLBA&$FF
  4824   85   16      		STA VSP		;If error was "out-of-nodes",
  4826   A9   1F      		LDA #VPDLBA^	;reset VPDL, do a garbage collect,
  4828   85   17      		STA VSP+1	;and check remaining nodes. If low,
  482A   20   5B   62 		JSR GARCOL	;ask user to delete something.
  482D   A5   C4      		LDA NNODES+1
  482F   C9   09      		CMP #NODLIM^
  4831   90   12      		BCC JTOP
  4833   D0   06      		BNE NWARN
  4835   A5   C3      		LDA NNODES
  4837   C9   66      		CMP #NODLIM&$FF
  4839   90   0A      		BCC JTOP
  483B   20   5B   72 	NWARN:	JSR BREAK1
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-37
LOGO	EVALUATOR ROUTINES

  483E   A2   BC      		LDX #WRNMSG&$FF
  4840   A0   DA      		LDY #WRNMSG^	;"Please delete something"
  4842   20   95   54 		JSR PRTSTR
  4845   4C   65   40 	JTOP:	JMP TOPLOP
  4848   A9   00      	ERR1B:	LDA #$00
  484A   85   06      		STA EXPOUT	;(EXPOUT := 0)
  484C   18           		CLC
  484D   A5   6E      		LDA XFRAME
  484F   69   02      		ADC #$02	;Don't pop the top return address
  4851   85   14      		STA SP		;(RESET_EVAL)
  4853   A5   6F      		LDA XFRAME+1
  4855   69   00      		ADC #$00
  4857   85   15      		STA SP+1
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-38
LOGO	EVALUATOR ROUTINES

  4859   A5   0D      	ERROR2:	LDA DCOFLG
  485B   F0   11      		BEQ ERR2A
  485D   A9   00      		LDA #$00
  485F   85   0C      		STA STPFLG
  4861   85   0D      		STA DCOFLG
  4863   85   62      		STA TOKPTR+1
  4865   A0   04      	ERR2A1:	LDY #$04	;(SF_FORMAT = 4.)
  4867   B1   6C      		LDA (FRAME),Y
  4869   85   0F      		STA UFRMAT	;(GETBAR)
  486B   4C   1E   41 		JMP POPJ
  486E   A5   0C      	ERR2A:	LDA STPFLG
  4870   D0   F3      		BNE ERR2A1	;Zap out of EVLINE without resetting stuff.
  4872   A9   4C      		LDA #'L		;Both flags = 0, it's a Pause.
  4874   20   84   72 		JSR TPCHR	;Type an "L"
  4877   A2   7C      		LDX #LEVNUM
  4879   20   42   67 		JSR TYPFIX
  487C   A2   61      		LDX #TOKPTR
  487E   20   DE   49 		JSR PRDLIN	;Get a line
  4881   98           		TYA
  4882   F0   03      		BEQ ERR2A2	;Y zero means OK
  4884   4C   D2   47 		JMP ERROR1
  4887   A2   59      	ERR2A2:	LDX #ERROR2&$FF
  4889   A0   48      		LDY #ERROR2^
  488B   20   3C   52 		JSR PUSH
  488E   A9   00      		LDA #LIST
  4890   85   0F      		STA UFRMAT
  4892   4C   DE   40 		JMP EVLINE
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-39
LOGO	EVALUATOR ROUTINES

  4895   A2   00      	XTAIL:	LDX #$00
  4897   86   74      		STX LINNUM
  4899   86   75      		STX LINNUM+1
  489B   CA           		DEX
  489C   86   7E      		STX NEST
  489E   86   7F      		STX NEST+1
  48A0   E6   7C      		INC LEVNUM
  48A2   D0   07      		BNE XTAIL1
  48A4   E6   7D      		INC LEVNUM+1
  48A6   D0   03      		BNE XTAIL1
  48A8   4C   FB   42 		JMP EXCED
  48AB   E6   80      	XTAIL1:	INC TLLEVS
  48AD   D0   07      		BNE XTAIL2
  48AF   E6   81      		INC TLLEVS+1
  48B1   D0   03      		BNE XTAIL2
  48B3   4C   FB   42 		JMP EXCED
  48B6   20   9B   49 	XTAIL2:	JSR STPTR1	;POINTER is TEMPN1
  48B9   A0   0E      		LDY #$0E	;SF_NUMBER_BINDINGS (14.)
  48BB   B1   6C      		LDA (FRAME),Y
  48BD   85   AE      		STA TEMPN3	;BINDINGS
  48BF   A0   70      		LDY #FBODY
  48C1   A2   AC      		LDX #TEMPN2	;ARGLIST
  48C3   20   0B   56 		JSR GTTULN	;GET_ULINE (ARG_LIST,FBODY,TRUE)
  48C6   A0   04      		LDY #$04	;(SF_FORMAT = 4.)
  48C8   A5   0F      		LDA UFRMAT
  48CA   91   6C      		STA (FRAME),Y	;(PUTBAR)
  48CC   A0   06      		LDY #$06	;(SF_UFUN = 6.)
  48CE   A5   63      		LDA CURTOK
  48D0   91   6C      		STA (FRAME),Y
  48D2   C8           		INY
  48D3   A5   64      		LDA CURTOK+1
  48D5   91   6C      		STA (FRAME),Y	;(PUTBAR)
  48D7   A0   00      		LDY #$00
  48D9   B1   67      		LDA (FUNCT),Y
  48DB   C5   6C      		CMP FRAME
  48DD   D0   3F      		BNE XTALWB
  48DF   C8           		INY
  48E0   B1   67      		LDA (FUNCT),Y	;(GET_FFRAME)
  48E2   C5   6D      		CMP FRAME+1
  48E4   D0   38      		BNE XTALWB
  48E6   A5   AD      	XTALWA:	LDA TEMPN2+1
  48E8   F0   2B      		BEQ XTLWAE
  48EA   20   AE   49 	XTALW1:	JSR PTVTST
  48ED   A0   00      		LDY #$00
  48EF   B1   AC      		LDA (TEMPN2),Y
  48F1   85   B0      		STA TEMPN4	;VAR_NAME
  48F3   C8           		INY
  48F4   B1   AC      		LDA (TEMPN2),Y
  48F6   85   B1      		STA TEMPN4+1	;(GETTOK)
  48F8   A2   AC      		LDX #TEMPN2
  48FA   20   75   55 		JSR TTKADV
  48FD   A0   00      		LDY #$00
  48FF   B1   B4      		LDA (TEMPN5),Y
  4901   85   AA      		STA TEMPN1
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-40
LOGO	EVALUATOR ROUTINES

  4903   C8           		INY
  4904   B1   B4      		LDA (TEMPN5),Y
  4906   85   AB      		STA TEMPN1+1	;(GETBAR)
  4908   20   BD   49 		JSR PTRDEC
  490B   A2   AA      		LDX #TEMPN1
  490D   A0   B0      		LDY #TEMPN4
  490F   20   E9   52 		JSR PUTVAL
  4912   4C   E6   48 		JMP XTALWA
  4915   A0   0E      	XTLWAE:	LDY #$0E	;(SF_NUMBER_BINDINGS = 14.)
  4917   A5   AE      		LDA TEMPN3
  4919   91   6C      		STA (FRAME),Y
  491B   4C   95   49 		JMP XTAIL4
  491E   A5   AD      	XTALWB:	LDA TEMPN2+1
  4920   F0   3C      		BEQ XTLWBE
  4922   20   AE   49 	XTALW2:	JSR PTVTST
  4925   A0   00      		LDY #$00
  4927   B1   AC      		LDA (TEMPN2),Y
  4929   85   B0      		STA TEMPN4
  492B   C8           		INY
  492C   B1   AC      		LDA (TEMPN2),Y
  492E   85   B1      		STA TEMPN4+1	;(GETTOK)
  4930   A2   AC      		LDX #TEMPN2
  4932   20   75   55 		JSR TTKADV
  4935   A0   B0      		LDY #TEMPN4
  4937   A2   AA      		LDX #TEMPN1
  4939   20   D1   52 		JSR GETVAL
  493C   A2   AA      		LDX #TEMPN1
  493E   20   25   52 		JSR PUSHP
  4941   A0   00      		LDY #$00
  4943   B1   B4      		LDA (TEMPN5),Y
  4945   85   AA      		STA TEMPN1
  4947   C8           		INY
  4948   B1   B4      		LDA (TEMPN5),Y
  494A   85   AB      		STA TEMPN1+1	;(GETBAR)
  494C   20   BD   49 		JSR PTRDEC
  494F   A2   AA      		LDX #TEMPN1
  4951   A0   B0      		LDY #TEMPN4
  4953   20   E9   52 		JSR PUTVAL
  4956   A2   B0      		LDX #TEMPN4
  4958   20   25   52 		JSR PUSHP
  495B   4C   1E   49 		JMP XTALWB
  495E   A0   00      	XTLWBE:	LDY #$00
  4960   B1   67      		LDA (FUNCT),Y
  4962   85   AA      		STA TEMPN1
  4964   C8           		INY
  4965   B1   67      		LDA (FUNCT),Y
  4967   85   AB      		STA TEMPN1+1	;(GET_FFRAME)
  4969   A2   AA      		LDX #TEMPN1
  496B   20   25   52 		JSR PUSHP
  496E   A6   67      		LDX FUNCT
  4970   A4   68      		LDY FUNCT+1
  4972   E8           		INX
  4973   D0   01      		BNE XTAIL5
  4975   C8           		INY
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-41
LOGO	EVALUATOR ROUTINES

  4976   20   3C   52 	XTAIL5:	JSR PUSH	;PUSH (FUNCT+1)
  4979   A0   00      		LDY #$00
  497B   A5   6C      		LDA FRAME
  497D   91   67      		STA (FUNCT),Y
  497F   C8           		INY
  4980   A5   6D      		LDA FRAME+1
  4982   91   67      		STA (FUNCT),Y	;(PUT_FFRAME)
  4984   A0   0E      		LDY #$0E
  4986   38           		SEC		;Carry added in (BINDINGS + NARGS + 1)
  4987   A5   AE      		LDA TEMPN3
  4989   65   05      		ADC NARGS
  498B   91   6C      		STA (FRAME),Y
  498D   A5   14      		LDA SP
  498F   85   6E      		STA XFRAME
  4991   A5   15      		LDA SP+1
  4993   85   6F      		STA XFRAME+1	;XFRAME := SP (right above last binding pair)
  4995   20   C9   49 	XTAIL4:	JSR INCVSP
  4998   4C   5F   47 		JMP UF1
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-42
LOGO	EVALUATOR ROUTINES

  499B   A5   05      	STPTR1:	LDA NARGS
  499D   0A           		ASL A
  499E   85   A6      		STA TEMPNH
  49A0   18           		CLC
  49A1   A5   16      		LDA VSP
  49A3   65   A6      		ADC TEMPNH
  49A5   85   B4      		STA TEMPN5
  49A7   A5   17      		LDA VSP+1
  49A9   69   00      		ADC #$00
  49AB   85   B5      		STA TEMPN5+1	;POINTR := VSP + (NARGS * 2)
  49AD   60           		RTS
                      
  49AE   A5   17      	PTVTST:	LDA VSP+1
  49B0   C5   B5      		CMP TEMPN5+1
  49B2   D0   14      		BNE SBHAK1
  49B4   A5   16      		LDA VSP
  49B6   C5   B4      		CMP TEMPN5
  49B8   D0   0E      		BNE SBHAK1
  49BA   20   CD   51 	PTVBUG:	JSR SYSBUG	;Error if POINTER = VSP
                      
  49BD   38           	PTRDEC:	SEC
  49BE   A5   B4      		LDA TEMPN5
  49C0   E9   02      		SBC #$02
  49C2   85   B4      		STA TEMPN5
  49C4   B0   02      		BCS SBHAK1
  49C6   C6   B5      		DEC TEMPN5+1	;POINTR := POINTR - 2
  49C8   60           	SBHAK1:	RTS
                      
  49C9   A5   05      	INCVSP:	LDA NARGS
  49CB   0A           		ASL A
  49CC   85   A6      		STA TEMPNH
  49CE   18           		CLC
  49CF   A5   16      		LDA VSP
  49D1   65   A6      		ADC TEMPNH
  49D3   85   16      		STA VSP
  49D5   90   02      		BCC INCVE
  49D7   E6   17      		INC VSP+1	;VSP := VSP + NARGS * 2
  49D9   60           	INCVE:	RTS
                      
                      	;End of Evaluator Dispatches and Subroutines.
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-43
LOGO	READER AND TOKENIZER

                      	.SBTTL	Reader and Tokenizer
                      
  49DA   86   BE      	READLN:	STX TEMPX2	;Input line pointer location
  49DC   D0   0F      		BNE REDLN1	;(Always)
  49DE   86   BE      	PRDLIN:	STX TEMPX2
  49E0   A5   08      		LDA EDSW
  49E2   F0   04      		BEQ PRD2
  49E4   A9   3E      		LDA #EPRMPT	;Edit-mode prompt
  49E6   D0   02      		BNE PRD3
  49E8   A9   3F      	PRD2:	LDA #QPRMPT	;Reqular prompt
  49EA   20   84   72 	PRD3:	JSR TPCHR
                      
  49ED   20   08   76 	REDLN1:	JSR GETLN	;Get a line into the Line buffer
  49F0   86   B8      		STX TEMPN7
  49F2   A0   00      	PRDLNX:	LDY #$00
  49F4   84   BA      		STY TEMPN8	;List-nesting counter
  49F6   84   BB      		STY TEMPN8+1	;Character buffer pointer
  49F8   84   9C      		STY CELPTR
  49FA   84   9D      		STY CELPTR+1
  49FC   A6   BE      		LDX TEMPX2
  49FE   94   00      		STY $00,X	;Initialize ANS to Lnil
  4A00   94   01      		STY $01,X
  4A02   C8           		INY
  4A03   84   56      		STY PRDFLG
  4A05   A9   37      		LDA #RDL1&$FF	;Error return address
  4A07   85   12      		STA ERRRET
  4A09   A9   4A      		LDA #RDL1^
  4A0B   85   13      		STA ERRRET+1
  4A0D   BA           		TSX
  4A0E   86   11      		STX RETADR
  4A10   A9   01      		LDA #NEWLIN
  4A12   85   BF      		STA TEMPX2+1	;Current cell type
  4A14   A5   BB      	RDLNW:	LDA TEMPN8+1	;Loop processes line, token by token
  4A16   C5   B8      		CMP TEMPN7
  4A18   D0   34      		BNE TGTTOK	;Process the next token
  4A1A   A5   BA      	RDLNWE:	LDA TEMPN8	;Done, close all lists
  4A1C   F0   15      		BEQ RDL1A
  4A1E   A5   58      	RDL1A1:	LDA OUTDEV
  4A20   D0   02      		BNE RDL1A2
  4A22   A9   5D      		LDA #']		;Close the list (unless non-default output)
  4A24   20   84   72 	RDL1A2:	JSR TPCHR
  4A27   A2   AA      		LDX #TEMPN1
  4A29   20   6C   52 		JSR POP		;Discard pushed list pointers
  4A2C   C6   BA      		DEC TEMPN8	;Decrement list nesting counter
  4A2E   D0   EE      		BNE RDL1A1
  4A30   20   5B   72 		JSR BREAK1
  4A33   A0   00      	RDL1A:	LDY #$00	;Y zero means OK
  4A35   F0   02      		BEQ RDL1B	;(Always)
  4A37   A0   01      	RDL1:	LDY #$01	;Y nonzero means error
  4A39   A9   00      	RDL1B:	LDA #$00
  4A3B   85   9C      		STA CELPTR
  4A3D   85   9D      		STA CELPTR+1
  4A3F   85   56      		STA PRDFLG
  4A41   A2   00      	RSTERR:	LDX #$00	;General reset-error routine
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-44
LOGO	READER AND TOKENIZER

  4A43   86   11      		STX RETADR
  4A45   A2   D2      		LDX #ERROR1&$FF
  4A47   86   12      		STX ERRRET
  4A49   A2   47      		LDX #ERROR1^
  4A4B   86   13      		STX ERRRET+1
  4A4D   60           		RTS
  4A4E   A9   00      	TGTTOK:	LDA #$00
  4A50   85   C1      		STA ANSN3	;No typecode yet (for SLFDLP)
  4A52   85   B9      		STA TEMPN7+1	;Funny-pname if non-zero
  4A54   85   B1      		STA TEMPN4+1	;Indicates quoted atom if non-zero
  4A56   A6   BB      		LDX TEMPN8+1
  4A58   BD   00   02 	TGT1:	LDA LINARY,X
  4A5B   C9   20      		CMP #$20
  4A5D   D0   07      		BNE TGT2
  4A5F   E8           		INX
  4A60   E4   B8      		CPX TEMPN7
  4A62   D0   F4      		BNE TGT1	;Skip spaces
  4A64   F0   B4      		BEQ RDLNWE
  4A66   86   BB      	TGT2:	STX TEMPN8+1
  4A68   C9   5D      		CMP #']
  4A6A   F0   38      		BEQ TKRBR
  4A6C   48           		PHA
  4A6D   20   9D   4D 		JSR ALLSTC
  4A70   68           		PLA
  4A71   C9   5B      		CMP #'[
  4A73   F0   1F      		BEQ TKLBR
  4A75   20   D8   4D 		JSR SLFDLP
  4A78   90   49      		BCC TKNDL
  4A7A   85   B4      		STA TEMPN5
  4A7C   E6   BB      		INC TEMPN8+1
  4A7E   A2   00      		LDX #$00
  4A80   86   B5      		STX TEMPN5+1
  4A82   A0   B4      		LDY #TEMPN5	;Cons up a pname
  4A84   A9   B6      		LDA #TEMPN6
  4A86   85   B2      		STA ANSN
  4A88   A9   02      		LDA #STRING
  4A8A   20   14   53 		JSR CONS
  4A8D   A9   01      		LDA #ATOM
  4A8F   85   C1      		STA ANSN3
  4A91   4C   C4   4B 		JMP ADDTOK
  4A94   E6   BA      	TKLBR:	INC TEMPN8	;Start list - increment list nesting counter
  4A96   E6   BB      		INC TEMPN8+1	;Skip to next character
  4A98   A2   9C      		LDX #CELPTR
  4A9A   20   25   52 		JSR PUSHP	;Push the list-pointer cell
  4A9D   A9   02      		LDA #NEWLST
  4A9F   85   BF      		STA TEMPX2+1	;Next cell allocated will be New-list type
  4AA1   4C   14   4A 		JMP RDLNW	;Continue processing line
  4AA4   C6   BA      	TKRBR:	DEC TEMPN8	;End list - decrement list nesting counter
  4AA6   30   0E      		BMI TKRBR1	;Error if unbalanced brackets
  4AA8   E6   BB      		INC TEMPN8+1	;Skip to next character
  4AAA   A2   9C      		LDX #CELPTR
  4AAC   20   6C   52 		JSR POP		;Pop list pointer
  4AAF   A9   03      		LDA #REGCEL
  4AB1   85   BF      		STA TEMPX2+1
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-45
LOGO	READER AND TOKENIZER

  4AB3   4C   14   4A 		JMP RDLNW	;Continue processing line
  4AB6   20   60   72 	TKRBR1:	JSR RSTIO	;Reset I/O to master drivers
  4AB9   A2   6D      		LDX #RDRER2&$FF
  4ABB   A0   DA      		LDY #RDRER2^
  4ABD   20   95   54 		JSR PRTSTR	;Print "You have mismatched brackets" error
  4AC0   4C   37   4A 		JMP RDL1	;Error escape
  4AC3   C9   22      	TKNDL:	CMP #'"
  4AC5   D0   0B      		BNE TGT3A
  4AC7   E6   B1      		INC TEMPN4+1	;Quoted atom
  4AC9   E6   BB      		INC TEMPN8+1	;Skip to next character
  4ACB   A9   08      		LDA #QATOM
  4ACD   85   C1      		STA ANSN3
  4ACF   4C   EB   4A 		JMP TGT3B1	;Check for funny-pname
  4AD2   C9   27      	TGT3A:	CMP #$27	;(Single Quote)
  4AD4   D0   0B      		BNE TGT3B
  4AD6   E6   BB      		INC TEMPN8+1	;Skip to next character
  4AD8   E6   B9      		INC TEMPN7+1	;Token is a funny_pname
  4ADA   A9   01      	TKAORL:	LDA #ATOM	;Token is an Atom or Label
  4ADC   85   C1      		STA ANSN3
  4ADE   4C   F8   4A 		JMP TKATOM	;Tokenize it
  4AE1   C9   3A      	TGT3B:	CMP #':
  4AE3   D0   F5      		BNE TKAORL
  4AE5   E6   BB      		INC TEMPN8+1	;Dotted atom, skip to next character
  4AE7   A9   09      		LDA #DATOM
  4AE9   85   C1      		STA ANSN3
  4AEB   A6   BB      	TGT3B1:	LDX TEMPN8+1
  4AED   BD   00   02 		LDA LINARY,X
  4AF0   C9   27      		CMP #$27
  4AF2   D0   04      		BNE TKATOM
  4AF4   E6   B9      		INC TEMPN7+1	;Token is funny-pname
  4AF6   E6   BB      		INC TEMPN8+1	;Skip to next character
  4AF8   A6   BB      	TKATOM:	LDX TEMPN8+1
  4AFA   E4   B8      		CPX TEMPN7	;Check for empty word at end-of-line
  4AFC   F0   0D      		BEQ EMPTWD
  4AFE   A5   B9      		LDA TEMPN7+1
  4B00   D0   52      		BNE NOTNUM	;Funny_pname, not fixnum then
  4B02   BD   00   02 	TKATM2:	LDA LINARY,X
  4B05   C9   20      		CMP #$20	;Check for empty word inside line
  4B07   D0   0B      		BNE TKATM1
  4B09   E6   BB      	EMTWD1:	INC TEMPN8+1	;Skip space if necessary
  4B0B   A9   00      	EMPTWD:	LDA #$00	;Empty word, link Lnil node onto input line
  4B0D   85   B6      		STA TEMPN6
  4B0F   85   B7      		STA TEMPN6+1
  4B11   4C   C4   4B 		JMP ADDTOK	;Link up token and continue
  4B14   20   CA   4C 	TKATM1:	JSR CLRNG1	;Attempt to compute numerical value, clear indicators
  4B17   86   AC      	ATM1:	STX TEMPN2	;Save temporary character pointer
  4B19   E4   B8      		CPX TEMPN7
  4B1B   F0   13      		BEQ ATM2	;End of line encountered, must be numerical
  4B1D   BD   00   02 		LDA LINARY,X
  4B20   20   D8   4D 		JSR SLFDLP
  4B23   B0   0B      		BCS ATM2	;Self delimiter encountered, must be numerical
  4B25   20   ED   4B 		JSR CNUML1	;Process the next digit
  4B28   90   2A      		BCC NOTNUM	;Carry clear means not a number
  4B2A   A6   AC      		LDX TEMPN2
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-46
LOGO	READER AND TOKENIZER

  4B2C   E8           		INX		;Get next digit
  4B2D   4C   17   4B 		JMP ATM1
  4B30   86   AC      	ATM2:	STX TEMPN2	;All characters processed - save character pointer
  4B32   20   95   4C 		JSR CNUML2	;Finish numerical processing
  4B35   90   1D      		BCC NOTNUM
  4B37   A6   AC      		LDX TEMPN2
  4B39   86   BB      		STX TEMPN8+1	;Numerically ok, reset real charcater pointer
  4B3B   A2   B6      		LDX #TEMPN6
  4B3D   86   B2      		STX ANSN
  4B3F   A2   A4      		LDX #NARG1+2	;High word
  4B41   A0   A2      		LDY #NARG1	;Low word
  4B43   20   14   53 		JSR CONS	;Cons a numerical cell with the value in it
  4B46   A0   00      		LDY #$00
  4B48   A5   B6      		LDA TEMPN6
  4B4A   91   9C      		STA (CELPTR),Y	;Link the cell on to the input line
  4B4C   C8           		INY
  4B4D   A5   B7      		LDA TEMPN6+1
  4B4F   91   9C      		STA (CELPTR),Y
  4B51   4C   14   4A 		JMP RDLNW	;Continue processing line
  4B54   A2   BC      	NOTNUM:	LDX #TEMPX1	;Not a fixnum - cons up a pname (original pointer)
  4B56   A9   00      		LDA #$00
  4B58   85   C2      		STA ANSNX	;Indicates end of pname if non-zero
  4B5A   48           		PHA		;First time around, push zero
  4B5B   F0   09      		BEQ NXTCHS	;(Always)
  4B5D   A5   C2      	NXTTWO:	LDA ANSNX	;Next two characters
  4B5F   D0   63      		BNE ADDTOK	;Link up token if end of pname
  4B61   A9   02      		LDA #$02
  4B63   48           		PHA		;Not first time around, push 2
  4B64   A2   B4      		LDX #TEMPN5	;Next pointer
  4B66   86   B2      	NXTCHS:	STX ANSN
  4B68   A6   BB      		LDX TEMPN8+1
  4B6A   E4   B8      		CPX TEMPN7
  4B6C   F0   55      		BEQ ADDTK1	;Finish token (end of line), even no. chars.
  4B6E   BD   00   02 		LDA LINARY,X
  4B71   85   AA      		STA TEMPN1	;First character in pair
  4B73   20   D8   4D 		JSR SLFDLP
  4B76   B0   49      		BCS ADDTK2	;Finish token (delimiter hit), even no. chars.
  4B78   E8           		INX		;Skip to next character
  4B79   E4   B8      		CPX TEMPN7
  4B7B   F0   0D      		BEQ FINTK1	;Finish token (end of line), odd no. chars.
  4B7D   BD   00   02 		LDA LINARY,X
  4B80   85   AB      		STA TEMPN1+1	;Second character in pair
  4B82   20   D8   4D 		JSR SLFDLP
  4B85   B0   03      		BCS FINTK1	;Finish token (delimiter hit), odd no. chars.
  4B87   E8           		INX
  4B88   90   06      		BCC CNSSTR	;(Always) Cons new pair on to pname string
  4B8A   A9   00      	FINTK1:	LDA #$00
  4B8C   85   AB      		STA TEMPN1+1	;Odd no. chars. in pname, zero last character
  4B8E   E6   C2      		INC ANSNX	;Indicates end of pname
  4B90   86   BB      	CNSSTR:	STX TEMPN8+1	;Skip the last character (if not delimiter)
  4B92   A0   AA      		LDY #TEMPN1
  4B94   A2   00      		LDX #$00
  4B96   A9   02      		LDA #STRING
  4B98   20   14   53 		JSR CONS	;Cons up the new pname pair
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-47
LOGO	READER AND TOKENIZER

  4B9B   68           		PLA
  4B9C   A8           		TAY		;0 first time, 2 otherwise
  4B9D   D0   11      		BNE NTFRST
  4B9F   A5   BC      		LDA TEMPX1
  4BA1   91   9C      		STA (CELPTR),Y	;(Linking garbage-collect-protects it)
  4BA3   AA           		TAX
  4BA4   C8           		INY
  4BA5   A5   BD      		LDA TEMPX1+1
  4BA7   91   9C      		STA (CELPTR),Y
  4BA9   85   B7      		STA TEMPN6+1
  4BAB   86   B6      		STX TEMPN6	;Atom pointer
  4BAD   4C   5D   4B 		JMP NXTTWO	;Continue making the pname
  4BB0   A5   B4      	NTFRST:	LDA TEMPN5	;Link cell onto pname string
  4BB2   AA           		TAX
  4BB3   91   BC      		STA (TEMPX1),Y
  4BB5   C8           		INY
  4BB6   A5   B5      		LDA TEMPN5+1
  4BB8   91   BC      		STA (TEMPX1),Y	;(RPLACD)
  4BBA   85   BD      		STA TEMPX1+1
  4BBC   86   BC      		STX TEMPX1
  4BBE   4C   5D   4B 		JMP NXTTWO	;Continue making the pname
  4BC1   86   BB      	ADDTK2:	STX TEMPN8+1	;In case colon or quote skipped
  4BC3   68           	ADDTK1:	PLA		;Pop chain indicator if loop exit
  4BC4   A2   B6      	ADDTOK:	LDX #TEMPN6
  4BC6   A0   BC      		LDY #TEMPX1
  4BC8   20   FE   5F 		JSR INTERN	;Intern atom
  4BCB   A5   C1      	ATM12B:	LDA ANSN3
  4BCD   C9   01      		CMP #ATOM
  4BCF   F0   05      		BEQ ATM12A
  4BD1   A2   BC      		LDX #TEMPX1
  4BD3   20   F0   53 		JSR PUTTYP	;Give atom a type if not Atom
  4BD6   A0   00      	ATM12A:	LDY #$00
  4BD8   A5   BC      		LDA TEMPX1
  4BDA   91   9C      		STA (CELPTR),Y	;Link atom onto input line
  4BDC   C8           		INY
  4BDD   A5   BD      		LDA TEMPX1+1
  4BDF   91   9C      		STA (CELPTR),Y
  4BE1   A5   B9      		LDA TEMPN7+1
  4BE3   F0   05      		BEQ NXTE
  4BE5   A2   BC      		LDX #TEMPX1
  4BE7   20   59   54 		JSR PTSPNM	;Put-strange-pname if funny-pname indicated
  4BEA   4C   14   4A 	NXTE:	JMP RDLNW	;Continue processing line
                      
                      	;Process a character, number-building
  4BED   A6   B4      	CNUML1:	LDX TEMPN5	;Flonum indicator
  4BEF   D0   54      		BNE NFLDIG	;Process next flonum character
  4BF1   20   45   4E 		JSR DIGITP	;Still a fixnum
  4BF4   90   63      		BCC NTFIX1	;Not a digit, isn't a fixnum then
  4BF6   E6   B7      		INC TEMPN6+1	;Indicate presence of digit
  4BF8   20   E1   4C 		JSR NMROL1	;Multiply by 2 first
  4BFB   30   1F      		BMI NTFIX3	;Not a fixnum if value overflow
  4BFD   48           		PHA		;Save digit
  4BFE   A0   3C      		LDY #A1L
  4C00   20   F3   4C 		JSR XN1TOY	;Copy doubled number
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-48
LOGO	READER AND TOKENIZER

  4C03   68           		PLA
  4C04   A8           		TAY
  4C05   20   E1   4C 		JSR NMROL1	;Multiplied by 4
  4C08   30   15      		BMI NTFIX2
  4C0A   20   E1   4C 		JSR NMROL1	;Multiplied by 8
  4C0D   30   10      		BMI NTFIX2
  4C0F   20   0B   4D 		JSR ADDNUM	;Multiplied by 10.
  4C12   30   0B      		BMI NTFIX2
  4C14   98           		TYA		;Retrieve digit
  4C15   20   19   4D 		JSR ADDDIG	;Add value of current digit to subtotal
  4C18   30   05      		BMI NTFIX2
  4C1A   38           	NUMOK:	SEC		;Indicate number OK
  4C1B   60           		RTS
  4C1C   48           	NTFIX3:	PHA		;Save digit
  4C1D   D0   06      		BNE NTFX2A	;(Always)
  4C1F   48           	NTFIX2:	PHA		;Save digit
  4C20   A0   3C      		LDY #A1L
  4C22   20   FF   4C 		JSR XYTON1	;Fixnum overflow, doubled number is in A1L-A2H, transfer
  4C25   20   EA   4C 	NTFX2A:	JSR NMROR1	;Halve it
  4C28   E6   B4      		INC TEMPN5	;Indicate flonum (1)
  4C2A   20   2C   69 		JSR FLOTN1	;Convert to floating pt.
  4C2D   68           		PLA		;Get the digit back
  4C2E   E6   B7      	FADNML:	INC TEMPN6+1	;Indicate prescence of digit
  4C30   20   61   4D 		JSR MULN10	;Shift number before adding
  4C33   20   3F   4D 		JSR FADDIG	;Add it to the number (left of point)
  4C36   4C   1A   4C 		JMP NUMOK
  4C39   E6   B7      	FNDIGD:	INC TEMPN6+1	;Indicate presence of digit
  4C3B   A6   BD      		LDX TEMPX1+1	;See if it's significant
  4C3D   D0   DB      		BNE NUMOK	;No, ignore it
  4C3F   20   45   4D 		JSR FADDGN	;Yes, add it to the number (right of point)
  4C42   4C   1A   4C 		JMP NUMOK
  4C45   E0   02      	NFLDIG:	CPX #$02	;New flonum digit
  4C47   D0   07      		BNE NFLDG1
  4C49   20   45   4E 		JSR DIGITP	;In decimal mode
  4C4C   B0   EB      		BCS FNDIGD	;If digit, add to number
  4C4E   90   0D      		BCC FCKEN	;Else check for E or N
  4C50   E0   03      	NFLDG1:	CPX #$03	;See if exponent mode
  4C52   F0   23      		BEQ FXDIG
  4C54   20   45   4E 		JSR DIGITP	;Normal mode, check for digit
  4C57   B0   D5      		BCS FADNML	;Add it if it is, else
  4C59   C9   2E      	NTFIX1:	CMP #'.		;See if digit is legal
  4C5B   F0   27      		BEQ FMDECI
  4C5D   C9   45      	FCKEN:	CMP #'E		;Check for E or N
  4C5F   F0   06      		BEQ FXPOS
  4C61   C9   4E      		CMP #'N
  4C63   D0   2E      		BNE NTNUM
  4C65   E6   B5      		INC TEMPN5+1	;Indicate negative exponent
  4C67   A5   B7      	FXPOS:	LDA TEMPN6+1
  4C69   F0   28      		BEQ NTNUM	;Check that a digit was typed (so ".Ex" is illegal)
  4C6B   A6   B4      		LDX TEMPN5
  4C6D   A9   03      		LDA #$03
  4C6F   85   B4      		STA TEMPN5	;Indicate exponent mode (3)
  4C71   A9   00      		LDA #$00
  4C73   85   B7      		STA TEMPN6+1	;Now, indicates exponent digit presence
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-49
LOGO	READER AND TOKENIZER

  4C75   F0   13      		BEQ MAKFLO	;(Always)
  4C77   20   45   4E 	FXDIG:	JSR DIGITP	;Exponent mode, must be a digit
  4C7A   90   18      		BCC CNMR
  4C7C   E6   B7      		INC TEMPN6+1	;Indicate presence of exponent digit
  4C7E   20   7B   4D 		JSR INCEXP	;Exponentiate by vA
  4C81   4C   1A   4C 		JMP NUMOK
  4C84   A6   B4      	FMDECI:	LDX TEMPN5
  4C86   A9   02      		LDA #$02
  4C88   85   B4      		STA TEMPN5	;Indicate decimal mode (2)
  4C8A   8A           	MAKFLO:	TXA
  4C8B   D0   8D      		BNE NUMOK	;Exit OK if flonum, else...
  4C8D   20   2C   69 		JSR FLOTN1	;make it one
  4C90   4C   1A   4C 		JMP NUMOK
  4C93   18           	NTNUM:	CLC		;Not a number
  4C94   60           	CNMR:	RTS
                      
                      	;Number gobbled, finish number-building.
  4C95   A6   B4      	CNUML2:	LDX TEMPN5
  4C97   F0   2D      		BEQ CNUM2X
  4C99   A5   B7      		LDA TEMPN6+1	;If floating pt., make sure that there's a digit
  4C9B   F0   F6      		BEQ NTNUM
  4C9D   A5   B6      		LDA TEMPN6	;Check placeholder counter
  4C9F   F0   07      		BEQ CNUM2A
  4CA1   20   6E   4D 	CNUM2B:	JSR FDVD10	;Divide by 10. until back to correct decimal point location
  4CA4   C6   B6      		DEC TEMPN6
  4CA6   D0   F9      		BNE CNUM2B
  4CA8   A5   BC      	CNUM2A:	LDA TEMPX1	;Check for exponent
  4CAA   F0   16      		BEQ CNUM2R
  4CAC   A5   B5      		LDA TEMPN5+1	;Check its sign
  4CAE   D0   0B      		BNE CNUM2D
  4CB0   20   61   4D 	CNUM2C:	JSR MULN10	;Multiply by 10 according to (positive) exponent value
  4CB3   B0   DE      		BCS NTNUM
  4CB5   C6   BC      		DEC TEMPX1
  4CB7   D0   F7      		BNE CNUM2C
  4CB9   F0   07      		BEQ CNUM2R	;(Always)
  4CBB   20   6E   4D 	CNUM2D:	JSR FDVD10	;Divide by 10 according to (negative) exponent value
  4CBE   C6   BC      		DEC TEMPX1
  4CC0   D0   F9      		BNE CNUM2D
  4CC2   A9   04      	CNUM2R:	LDA #FLO
  4CC4   38           		SEC
  4CC5   60           		RTS
  4CC6   A9   03      	CNUM2X:	LDA #FIX
  4CC8   38           		SEC
  4CC9   60           		RTS
                      
  4CCA   A9   00      	CLRNG1:	LDA #$00
  4CCC   85   A2      		STA NARG1	;Initialize number to 0
  4CCE   85   A3      		STA NARG1+1
  4CD0   85   A4      		STA NARG1+2
  4CD2   85   A5      		STA NARG1+3
  4CD4   85   B4      		STA TEMPN5	;Flonum indicator
  4CD6   85   B5      		STA TEMPN5+1	;Exponent sign indicator
  4CD8   85   B6      		STA TEMPN6	;Fraction decimal shift (placeholder) counter
  4CDA   85   B7      		STA TEMPN6+1	;Indicates the presence of a mant. or exp. digit
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-50
LOGO	READER AND TOKENIZER

  4CDC   85   BC      		STA TEMPX1	;Exponent counter
  4CDE   85   BD      		STA TEMPX1+1	;Significant digit indicator
  4CE0   60           		RTS
                      
  4CE1   06   A2      	NMROL1:	ASL NARG1	;Double number in NARG1
  4CE3   26   A3      		ROL NARG1+1
  4CE5   26   A4      		ROL NARG1+2
  4CE7   26   A5      		ROL NARG1+3
  4CE9   60           		RTS
                      
  4CEA   46   A5      	NMROR1:	LSR NARG1+3	;Halve number in NARG1
  4CEC   66   A4      		ROR NARG1+2
  4CEE   66   A3      		ROR NARG1+1
  4CF0   66   A2      		ROR NARG1
  4CF2   60           		RTS
                      
  4CF3   A2   FC      	XN1TOY:	LDX #$FC
  4CF5   B5   A6      	XN1YL:	LDA NARG1+4,X
  4CF7   99   00   00 		STA $00,Y
  4CFA   C8           		INY
  4CFB   E8           		INX
  4CFC   30   F7      		BMI XN1YL
  4CFE   60           		RTS
                      
  4CFF   A2   FC      	XYTON1:	LDX #$FC
  4D01   B9   00   00 	XYN1L:	LDA $00,Y
  4D04   95   A6      		STA NARG1+4,X
  4D06   C8           		INY
  4D07   E8           		INX
  4D08   30   F7      		BMI XYN1L
  4D0A   60           		RTS
                      
  4D0B   A2   FC      	ADDNUM:	LDX #$FC	;Add A1L to NARG1
  4D0D   18           		CLC
  4D0E   B5   40      	ADDNML:	LDA A1L+4,X
  4D10   75   A6      		ADC NARG1+4,X
  4D12   95   A6      		STA NARG1+4,X
  4D14   E8           		INX
  4D15   30   F7      		BMI ADDNML
  4D17   AA           		TAX
  4D18   60           		RTS
                      
  4D19   38           	ADDDIG:	SEC		;Add Ascii digit in A to NARG1
  4D1A   E9   30      		SBC #'0
  4D1C   18           		CLC
  4D1D   A2   FC      		LDX #$FC
  4D1F   D0   02      		BNE ADDL1A	;(Always)
  4D21   A9   00      	ADDLP1:	LDA #$00
  4D23   75   A6      	ADDL1A:	ADC NARG1+4,X
  4D25   95   A6      		STA NARG1+4,X
  4D27   E8           		INX
  4D28   30   F7      		BMI ADDLP1
  4D2A   AA           		TAX
  4D2B   60           		RTS
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-51
LOGO	READER AND TOKENIZER

                      
  4D2C   38           	FADDGX:	SEC
  4D2D   E9   30      		SBC #'0		;Get the digit's value
  4D2F   85   9E      		STA NARG2	;Add A to NARG1, floating pt.
  4D31   A9   00      		LDA #$00
  4D33   85   9F      		STA NARG2+1	;Put A in NARG2, make it floating pt., and add
  4D35   85   A0      		STA NARG2+2
  4D37   85   A1      		STA NARG2+3
  4D39   20   23   69 		JSR FLOTN2
  4D3C   4C   9D   69 		JMP FADD
                      
  4D3F   20   2C   4D 	FADDIG:	JSR FADDGX
  4D42   B0   55      		BCS NUMOVF
  4D44   60           		RTS
                      
  4D45   48           	FADDGN:	PHA		;Add decimal digit to floating pt. number
  4D46   A0   3C      		LDY #A1L
  4D48   20   F3   4C 		JSR XN1TOY	;Save NARG1
  4D4B   20   61   4D 		JSR MULN10	;Multiply number by 10
  4D4E   B0   09      		BCS FADDG1	;Overflow, digit will be insignificant
  4D50   68           		PLA		;Get digit
  4D51   20   2C   4D 		JSR FADDGX	;and add it
  4D54   B0   04      		BCS FADDG2	;If overflow, digit not significant
  4D56   E6   B6      		INC TEMPN6	;Else increment placeholder counter
  4D58   60           		RTS
  4D59   68           	FADDG1:	PLA		;Discard digit
  4D5A   E6   BD      	FADDG2:	INC TEMPX1+1	;Indicate no more significant digits, restore NARG1
  4D5C   A0   3C      		LDY #A1L
  4D5E   4C   FF   4C 		JMP XYTON1
                      
  4D61   A2   03      	MULN10:	LDX #$03	;Multiply NARG1 by 10., floating pt.
  4D63   BD   F1   94 	MLN10L:	LDA FLT10,X	;Put 10. (floating pt. constant) in NARG2
  4D66   95   9E      		STA NARG2,X
  4D68   CA           		DEX
  4D69   10   F8      		BPL MLN10L
  4D6B   4C   AA   69 		JMP FMUL	;and multiply (calling procedure checks for overflow)
                      
  4D6E   A2   03      	FDVD10:	LDX #$03	;Divide NARG1 by 10., floating pt.
  4D70   BD   F1   94 	FDV10L:	LDA FLT10,X	;Put 10. (floating pt. constant) in NARG2
  4D73   95   9E      		STA NARG2,X
  4D75   CA           		DEX
  4D76   10   F8      		BPL FDV10L
  4D78   4C   AF   69 		JMP FDIV
                      
  4D7B   38           	INCEXP:	SEC
  4D7C   E9   30      		SBC #'0
  4D7E   A8           		TAY		;Multiply exponent by ten and add new digit
  4D7F   06   BC      		ASL TEMPX1
  4D81   30   16      		BMI NUMOVF
  4D83   A5   BC      		LDA TEMPX1
  4D85   0A           		ASL A
  4D86   30   11      		BMI NUMOVF
  4D88   0A           		ASL A
  4D89   30   0E      		BMI NUMOVF
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-52
LOGO	READER AND TOKENIZER

  4D8B   65   BC      		ADC TEMPX1
  4D8D   30   0A      		BMI NUMOVF
  4D8F   85   BC      		STA TEMPX1
  4D91   98           		TYA
  4D92   65   BC      		ADC TEMPX1
  4D94   30   03      		BMI NUMOVF
  4D96   85   BC      		STA TEMPX1
  4D98   60           		RTS
                      
  4D99   68           	NUMOVF:	PLA		;Overflow, pop past subroutine
  4D9A   68           		PLA
  4D9B   18           		CLC		;Indicate not a number
  4D9C   60           		RTS
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-53
LOGO	READER AND TOKENIZER

  4D9D   A9   A8      	ALLSTC:	LDA #TEMPN	;Allocate a new list cell
  4D9F   85   B2      		STA ANSN
  4DA1   A9   00      		LDA #$00
  4DA3   AA           		TAX
  4DA4   A8           		TAY
  4DA5   20   14   53 		JSR CONS	;(Type list)
  4DA8   A0   00      		LDY #$00
  4DAA   A5   BF      		LDA TEMPX2+1
  4DAC   C9   01      		CMP #NEWLIN
  4DAE   D0   0C      		BNE ALSTC1
  4DB0   A6   BE      		LDX TEMPX2	;New line, ANS pointer points to cell
  4DB2   A5   A8      		LDA TEMPN
  4DB4   95   00      		STA $00,X
  4DB6   A5   A9      		LDA TEMPN+1
  4DB8   95   01      		STA $01,X
  4DBA   D0   0F      		BNE ALSTC3	;(Always)
  4DBC   C9   02      	ALSTC1:	CMP #NEWLST
  4DBE   F0   02      		BEQ ALSTC4	;For new-list, rplaca onto input line
  4DC0   C8           		INY		;Regular cell, link onto input line
  4DC1   C8           		INY
  4DC2   A5   A8      	ALSTC4:	LDA TEMPN
  4DC4   91   9C      		STA (CELPTR),Y	;Rplaca or Rplacd for new-list or regular-cell
  4DC6   C8           		INY
  4DC7   A5   A9      		LDA TEMPN+1
  4DC9   91   9C      		STA (CELPTR),Y
  4DCB   A5   A8      	ALSTC3:	LDA TEMPN
  4DCD   85   9C      		STA CELPTR	;New input line end pointer
  4DCF   A5   A9      		LDA TEMPN+1
  4DD1   85   9D      		STA CELPTR+1
  4DD3   A9   03      		LDA #REGCEL
  4DD5   85   BF      		STA TEMPX2+1	;Next cell allocated will be regular-cell
  4DD7   60           		RTS
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-54
LOGO	READER AND TOKENIZER

  4DD8   A4   B9      	SLFDLP:	LDY TEMPN7+1	;Checks for self-delimiter
  4DDA   F0   0F      		BEQ SLF2	;Not funny-pname
  4DDC   C9   27      		CMP #$27	;If funny-pname, look for quote
  4DDE   D0   69      		BNE DIGN	;Not delimiter if no quote
  4DE0   E8           		INX
  4DE1   BD   00   02 		LDA LINARY,X
  4DE4   C9   27      		CMP #$27	;Look for pair of quotes
  4DE6   F0   61      		BEQ DIGN	;If pair, skip over one, not delimiter
  4DE8   4C   43   4E 		JMP DIGY	;If no pair, the quote is a delimiter, skip it
  4DEB   A4   B1      	SLF2:	LDY TEMPN4+1	;Check for quoted atom
  4DED   F0   0E      		BEQ SLF1
  4DEF   C9   20      		CMP #$20	;Quoted atoms can be terminated by a space,
  4DF1   F0   50      		BEQ DIGY
  4DF3   C9   5D      		CMP #']		;or a closing bracket,
  4DF5   F0   4C      		BEQ DIGY
  4DF7   C9   29      		CMP #')		;or a closing parenthesis.
  4DF9   F0   48      		BEQ DIGY
  4DFB   D0   4C      		BNE DIGN	;(Always)
  4DFD   A4   C1      	SLF1:	LDY ANSN3	;Check for type Atom
  4DFF   C0   01      		CPY #ATOM
  4E01   D0   0C      		BNE SLF3
  4E03   C9   3A      		CMP #':		;If Atom, check for colon (for Label atom)
  4E05   D0   08      		BNE SLF3
  4E07   E8           		INX		;If colon, skip over it and change type to Latom
  4E08   A0   0A      		LDY #LATOM
  4E0A   84   C1      		STY ANSN3
  4E0C   4C   43   4E 		JMP DIGY
  4E0F   C9   20      	SLF3:	CMP #$20	;Compare character to all delimiters
  4E11   F0   30      		BEQ DIGY
  4E13   C9   3C      		CMP #'<
  4E15   F0   2C      		BEQ DIGY
  4E17   C9   3E      		CMP #'>
  4E19   F0   28      		BEQ DIGY
  4E1B   C9   3D      		CMP #'=
  4E1D   F0   24      		BEQ DIGY
  4E1F   C9   3B      		CMP #$3B	;(Semicolon)
  4E21   F0   20      		BEQ DIGY
  4E23   C9   29      		CMP #')
  4E25   F0   1C      		BEQ DIGY
  4E27   C9   28      		CMP #'(
  4E29   F0   18      		BEQ DIGY
  4E2B   C9   2B      		CMP #'+
  4E2D   F0   14      		BEQ DIGY
  4E2F   C9   2D      		CMP #'-
  4E31   F0   10      		BEQ DIGY
  4E33   C9   2A      		CMP #'*
  4E35   F0   0C      		BEQ DIGY
  4E37   C9   2F      		CMP #'/
  4E39   F0   08      		BEQ DIGY
  4E3B   C9   5D      		CMP #']
  4E3D   F0   04      		BEQ DIGY
  4E3F   C9   5B      		CMP #'[
  4E41   D0   06      		BNE DIGN
  4E43   38           	DIGY:	SEC		;Carry set means true
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-55
LOGO	READER AND TOKENIZER

  4E44   60           		RTS
                      
  4E45   C9   3A      	DIGITP:	CMP #':		;Checks to see if character is a digit (0-9)
  4E47   90   02      		BCC DIGP1
  4E49   18           	DIGN:	CLC		;Carry clear means not true
  4E4A   60           		RTS
  4E4B   C9   30      	DIGP1:	CMP #'0		;(Sets carry correctly)
  4E4D   60           		RTS
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-56
LOGO	READER AND TOKENIZER

  4E4E   86   B3      	EDLINE:	STX ANSN1
  4E50   B5   00      		LDA $00,X		;pointer to line
  4E52   85   A6      		STA TEMPNH		;gets stored in TEMPNH
  4E54   B5   01      		LDA $01,X
  4E56   85   A7      		STA TEMPNH+1
  4E58   98           		TYA
  4E59   D0   31      		BNE GETHIG		;Y nonzero for default line number
  4E5B   B1   A6      		LDA (TEMPNH),Y
  4E5D   85   B0      		STA TEMPN4		;TEMPN4 is the line pointer
  4E5F   C8           		INY
  4E60   B1   A6      		LDA (TEMPNH),Y
  4E62   85   B1      		STA TEMPN4+1		;(car line)
  4E64   A0   02      		LDY #$02
  4E66   B1   B0      		LDA (TEMPN4),Y
  4E68   D0   1D      		BNE EDLERR
  4E6A   C8           		INY
  4E6B   B1   B0      		LDA (TEMPN4),Y
  4E6D   D0   18      		BNE EDLERR
  4E6F   A0   00      		LDY #$00
  4E71   B1   B0      		LDA (TEMPN4),Y
  4E73   AA           		TAX
  4E74   C8           		INY
  4E75   B1   B0      		LDA (TEMPN4),Y
  4E77   85   B1      		STA TEMPN4+1
  4E79   30   07      		BMI LINERR		;Line numbers limited to two bytes, positive
  4E7B   86   B0      		STX TEMPN4
  4E7D   D0   6A      		BNE EDL1
  4E7F   8A           		TXA
  4E80   D0   67      		BNE EDL1
  4E82   A9   1F      	LINERR:	LDA #XILN		;"Illegal Line Number"
  4E84   4C   47   61 		JMP ERROR
  4E87   A9   1E      	EDLERR:	LDA #XLNTB		;"Line number too big"
  4E89   4C   47   61 		JMP ERROR
  4E8C   A9   00      	GETHIG:	LDA #$00
  4E8E   85   B0      		STA TEMPN4
  4E90   85   B1      		STA TEMPN4+1
  4E92   A0   02      		LDY #$02		;get body pointer
  4E94   B1   9A      		LDA (EDBOD),Y		;skip args
  4E96   85   AE      		STA TEMPN3		;TEMPN3 is BODY ptr.
  4E98   C8           		INY
  4E99   B1   9A      		LDA (EDBOD),Y
  4E9B   85   AF      		STA TEMPN3+1		;(cdr body)
  4E9D   A5   AF      	GTHW:	LDA TEMPN3+1		;if it ain't LNIL,
  4E9F   F0   3B      		BEQ GTHE		;take the cdr again
  4EA1   A0   00      		LDY #$00
  4EA3   B1   AE      		LDA (TEMPN3),Y
  4EA5   85   AC      		STA TEMPN2		;TEMPN2 is Current Line
  4EA7   C8           		INY			;(car line) - put pointer
  4EA8   B1   AE      		LDA (TEMPN3),Y
  4EAA   85   AD      		STA TEMPN2+1		;to line num in TEMPN2
  4EAC   C8           		INY
  4EAD   B1   AE      		LDA (TEMPN3),Y
  4EAF   AA           		TAX			;get (cdr body)
  4EB0   C8           		INY
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-57
LOGO	READER AND TOKENIZER

  4EB1   B1   AE      		LDA (TEMPN3),Y
  4EB3   85   AF      		STA TEMPN3+1
  4EB5   86   AE      		STX TEMPN3
  4EB7   A0   00      		LDY #$00
  4EB9   B1   AC      		LDA (TEMPN2),Y
  4EBB   AA           		TAX
  4EBC   C8           		INY			;(car line) -- this one
  4EBD   B1   AC      		LDA (TEMPN2),Y		;gets actual line number
  4EBF   85   AD      		STA TEMPN2+1
  4EC1   86   AC      		STX TEMPN2
  4EC3   A5   B1      		LDA TEMPN4+1
  4EC5   C5   AD      		CMP TEMPN2+1		;old greatest line #
  4EC7   90   08      		BCC GTH3		;old < new - replace
  4EC9   D0   D2      		BNE GTHW		;old > new, go back for next
  4ECB   A5   B0      		LDA TEMPN4
  4ECD   C5   AC      		CMP TEMPN2
  4ECF   B0   CC      		BCS GTHW		;old > new -- just go back
  4ED1   A5   AC      	GTH3:	LDA TEMPN2		;replace old highest line #
  4ED3   85   B0      		STA TEMPN4		;with new highest line number
  4ED5   A5   AD      		LDA TEMPN2+1
  4ED7   85   B1      		STA TEMPN4+1
  4ED9   4C   9D   4E 		JMP GTHW		;look for more
  4EDC   18           	GTHE:	CLC
  4EDD   A5   B0      		LDA TEMPN4
  4EDF   69   0A      		ADC #LININC		;make default line number
  4EE1   85   B0      		STA TEMPN4
  4EE3   90   04      		BCC EDL1
  4EE5   E6   B1      		INC TEMPN4+1
  4EE7   30   9E      		BMI EDLERR
  4EE9   A0   00      	EDL1:	LDY #$00		;place line # in car of line
  4EEB   A5   B0      		LDA TEMPN4
  4EED   91   A6      		STA (TEMPNH),Y
  4EEF   C8           		INY
  4EF0   A5   B1      		LDA TEMPN4+1
  4EF2   91   A6      		STA (TEMPNH),Y		;(RPLACA)
  4EF4   A9   0C      		LDA #FLIST
  4EF6   A6   B3      		LDX ANSN1
  4EF8   20   F0   53 		JSR PUTTYP
  4EFB   A6   B3      		LDX ANSN1		;POINTER
  4EFD   A0   B0      		LDY #TEMPN4		;NUMBER
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-58
LOGO	READER AND TOKENIZER

  4EFF   86   C0      	PUTLIN:	STX ANSN2	;POINTER (Y has NUMBER) -  Add line to body
  4F01   A2   9A      		LDX #EDBOD
  4F03   A9   AC      		LDA #TEMPN2	;Line to be gotten
  4F05   20   E7   54 		JSR FNDLIN
  4F08   90   0E      		BCC PTLN1	;Branch if not found
  4F0A   A6   C0      		LDX ANSN2
  4F0C   A0   00      		LDY #$00
  4F0E   B5   00      		LDA $00,X
  4F10   91   AC      		STA (TEMPN2),Y
  4F12   C8           		INY
  4F13   B5   01      		LDA $01,X
  4F15   91   AC      		STA (TEMPN2),Y	;(RPLACA)
  4F17   60           		RTS
  4F18   A0   02      	PTLN1:	LDY #$02
  4F1A   B1   AC      		LDA (TEMPN2),Y
  4F1C   85   AE      		STA TEMPN3
  4F1E   C8           		INY
  4F1F   B1   AC      		LDA (TEMPN2),Y
  4F21   85   AF      		STA TEMPN3+1	;(CDR)
  4F23   A4   C0      		LDY ANSN2
  4F25   A2   AE      		LDX #TEMPN3
  4F27   86   B2      		STX ANSN
  4F29   A9   00      		LDA #LIST
  4F2B   20   14   53 		JSR CONS
  4F2E   A0   02      		LDY #$02
  4F30   A5   AE      		LDA TEMPN3
  4F32   91   AC      		STA (TEMPN2),Y
  4F34   C8           		INY
  4F35   A5   AF      		LDA TEMPN3+1
  4F37   91   AC      		STA (TEMPN2),Y	;(RPLACD)
  4F39   60           		RTS
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-59
LOGO	INITIALIZATIONS

                      	.SBTTL	Initializations
  4F3A   A9   00      	INITLZ:	LDA #$00
  4F3C   85   09      		STA GRPHCS
  4F3E   85   0A      		STA DBUGSW
  4F40   85   08      		STA EDSW
  4F42   85   9A      		STA EDBOD
  4F44   85   9B      		STA EDBOD+1
  4F46   20   60   72 		JSR RSTIO	;Set I/O to to default
  4F49   20   7B   72 		JSR RESETT	;Clear screen, etc.
  4F4C   20   A0   63 		JSR CLRMRK	;Reset G.C. Array (Typebase bits)
  4F4F   A9   00      		LDA #BASARY&$FF
  4F51   85   A8      		STA TEMPN
  4F53   A9   08      		LDA #BASARY^
  4F55   85   A9      		STA TEMPN+1
  4F57   A0   00      		LDY #$00
  4F59   98           		TYA		;Clear the SARRAY, 4 at a time
  4F5A   91   A8      	CLRLP1:	STA (TEMPN),Y
  4F5C   E6   A8      		INC TEMPN
  4F5E   D0   02      		BNE ADHAK4
  4F60   E6   A9      		INC TEMPN+1
  4F62   A6   A8      	ADHAK4:	LDX TEMPN
  4F64   E0   00      		CPX #PDLBAS&$FF	;PDL starts right after S_ARRAY
  4F66   D0   F2      		BNE CLRLP1
  4F68   A6   A9      		LDX TEMPN+1
  4F6A   E0   0E      		CPX #PDLBAS^
  4F6C   D0   EC      		BNE CLRLP1
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-60
LOGO	INITIALIZATIONS

  4F6E   A2   00      	REINIT:	LDX #$00
  4F70   86   C3      		STX NNODES	;Node allocation counter
  4F72   86   C4      		STX NNODES+1
  4F74   86   87      		STX PODEFL+1
  4F76   20   6D   72 		JSR CLRCBF
  4F79   A9   00      		LDA #BASARY&$FF
  4F7B   85   5D      		STA SARTOP
  4F7D   A9   08      		LDA #BASARY^
  4F7F   85   5E      		STA SARTOP+1
  4F81   A9   00      		LDA #PDLBAS&$FF
  4F83   85   14      		STA SP
  4F85   A9   0E      		LDA #PDLBAS^
  4F87   85   15      		STA SP+1
  4F89   A9   F7      		LDA #VPDLBA&$FF
  4F8B   85   16      		STA VSP
  4F8D   A9   1F      		LDA #VPDLBA^
  4F8F   85   17      		STA VSP+1
  4F91   A9   00      		LDA #EDBUF&$FF	;Tell RETRIEVE that buffer is not retrievable
  4F93   85   C7      		STA ENDBUF
  4F95   A9   20      		LDA #EDBUF^
  4F97   85   C8      		STA ENDBUF+1
  4F99   A9   00      		LDA #BIGBAS&$FF	;(FIRST_NODE)
  4F9B   85   59      		STA SOBLST
  4F9D   85   5B      		STA SOBTOP
  4F9F   A9   D0      		LDA #BIGBAS^
  4FA1   85   5A      		STA SOBLST+1	;SOBLIST := FIRST_NODE
  4FA3   85   5C      		STA SOBTOP+1	;SOBTOP is SOBPTR for now
  4FA5   A9   01      		LDA #PRMTAB&$FF	;Points to first byte of Primitive-table
  4FA7   85   A8      		STA TEMPN
  4FA9   A9   D5      		LDA #PRMTAB^
  4FAB   85   A9      		STA TEMPN+1
  4FAD   20   38   51 	SOBLP1:	JSR SOBST1
  4FB0   A5   A9      		LDA TEMPN+1
  4FB2   C9   D9      		CMP #VPRMTB^
  4FB4   D0   F7      		BNE SOBLP1
  4FB6   A5   A8      		LDA TEMPN
  4FB8   C9   A4      		CMP #VPRMTB&$FF
  4FBA   D0   F1      		BNE SOBLP1
  4FBC   38           		SEC
  4FBD   A5   5B      		LDA SOBTOP
  4FBF   E9   08      		SBC #$08
  4FC1   85   AA      		STA TEMPN1	;TEMPN1 is SOBTOP - 8, for comparison
  4FC3   A5   5C      		LDA SOBTOP+1
  4FC5   E9   00      		SBC #$00
  4FC7   85   AB      		STA TEMPN1+1
  4FC9   AD   83   C0 	SBVLP1:	LDA GETRM2	;Ghost-memory bank 2, VPrim table
  4FCC   E6   55      		INC BANK4K
  4FCE   A0   00      		LDY #$00
  4FD0   B1   A8      		LDA (TEMPN),Y
  4FD2   85   B2      		STA ANSN	;ANSN is INDEX constant
  4FD4   C8           		INY
  4FD5   B1   A8      		LDA (TEMPN),Y
  4FD7   85   AF      		STA TEMPN3+1	;TEMPN3 is Primitive's pointer address
  4FD9   C8           		INY
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-61
LOGO	INITIALIZATIONS

  4FDA   B1   A8      		LDA (TEMPN),Y
  4FDC   85   AE      		STA TEMPN3
  4FDE   C8           		INY
  4FDF   B1   A8      		LDA (TEMPN),Y
  4FE1   85   C1      		STA ANSN3	;ANSN3 is INSTANCE counter
  4FE3   AD   8B   C0 		LDA GETRM1	;Ghost-memory disable
  4FE6   AD   8B   C0 		LDA GETRM1
  4FE9   C6   55      		DEC BANK4K
  4FEB   18           		CLC
  4FEC   A5   A8      		LDA TEMPN
  4FEE   69   04      		ADC #$04
  4FF0   85   A8      		STA TEMPN
  4FF2   90   02      		BCC ADHAK8
  4FF4   E6   A9      		INC TEMPN+1
  4FF6   A9   FC      	ADHAK8:	LDA #BBASX&$FF
  4FF8   85   AC      		STA TEMPN2	;TEMPN2 is temporary VARNAM pointer
  4FFA   A9   CF      		LDA #BBASX^
  4FFC   85   AD      		STA TEMPN2+1
  4FFE   A5   AB      	SBVRW:	LDA TEMPN1+1
  5000   C5   AD      		CMP TEMPN2+1
  5002   D0   09      		BNE SBVRW1
  5004   A5   AA      		LDA TEMPN1
  5006   C5   AC      		CMP TEMPN2
  5008   D0   03      		BNE SBVRW1
  500A   20   CD   51 		JSR SYSBUG
  500D   18           	SBVRW1:	CLC
  500E   A5   AC      		LDA TEMPN2
  5010   69   04      		ADC #$04
  5012   85   AC      		STA TEMPN2
  5014   90   02      		BCC ADHAK9
  5016   E6   AD      		INC TEMPN2+1
  5018   A0   02      	ADHAK9:	LDY #$02
  501A   B1   AC      		LDA (TEMPN2),Y
  501C   85   A6      		STA TEMPNH
  501E   C8           		INY
  501F   B1   AC      		LDA (TEMPN2),Y
  5021   85   A7      		STA TEMPNH+1	;(CDR)
  5023   88           		DEY
  5024   B1   A6      		LDA (TEMPNH),Y
  5026   C5   B2      		CMP ANSN
  5028   D0   D4      		BNE SBVRW
  502A   C6   C1      		DEC ANSN3
  502C   D0   D0      		BNE SBVRW
  502E   A0   00      	SBVRWE:	LDY #$00
  5030   A5   AC      		LDA TEMPN2	;Put TEMPN2 in the right variable
  5032   91   AE      		STA (TEMPN3),Y
  5034   C8           		INY
  5035   A5   AD      		LDA TEMPN2+1
  5037   91   AE      		STA (TEMPN3),Y
  5039   A5   A9      		LDA TEMPN+1
  503B   C9   D9      		CMP #VPRMTE^
  503D   D0   06      		BNE SBVLPJ
  503F   A5   A8      		LDA TEMPN
  5041   C9   F8      		CMP #VPRMTE&$FF
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-62
LOGO	INITIALIZATIONS

  5043   F0   03      		BEQ SBVLL1
  5045   4C   C9   4F 	SBVLPJ:	JMP SBVLP1
  5048   18           	SBVLL1:	CLC
  5049   A5   5B      		LDA SOBTOP
  504B   85   5F      		STA FRLIST
  504D   69   04      		ADC #$04
  504F   85   A8      		STA TEMPN
  5051   A5   5C      		LDA SOBTOP+1
  5053   85   60      		STA FRLIST+1
  5055   69   00      		ADC #$00
  5057   85   A9      		STA TEMPN+1
  5059   A0   02      		LDY #$02
  505B   A9   00      		LDA #$00
  505D   91   5B      		STA (SOBTOP),Y
  505F   C8           		INY
  5060   91   5B      		STA (SOBTOP),Y	;RPLACD (SOBTOP,LNIL)
  5062   88           		DEY
  5063   A5   5F      	RINLP2:	LDA FRLIST
  5065   91   A8      		STA (TEMPN),Y
  5067   C8           		INY
  5068   A5   60      		LDA FRLIST+1
  506A   91   A8      		STA (TEMPN),Y	;(RPLACD)
  506C   88           		DEY
  506D   18           		CLC
  506E   A5   A8      		LDA TEMPN
  5070   85   5F      		STA FRLIST
  5072   69   04      		ADC #$04
  5074   85   A8      		STA TEMPN
  5076   A5   A9      		LDA TEMPN+1
  5078   85   60      		STA FRLIST+1
  507A   69   00      		ADC #$00
  507C   85   A9      		STA TEMPN+1
  507E   C9   F6      		CMP #SINODS^	;(Ptr. to byte after last node)
  5080   D0   E1      		BNE RINLP2
  5082   A5   A8      		LDA TEMPN
  5084   C9   60      		CMP #SINODS&$FF
  5086   D0   DB      		BNE RINLP2
  5088   A2   00      		LDX #$00
  508A   86   AB      		STX TEMPN1+1
  508C   E8           		INX
  508D   86   AA      		STX TEMPN1	;Set to Novalue for MKSFUN
  508F   A2   94      		LDX #UNSUM
  5091   A9   04      		LDA #IUNSUM
  5093   20   A4   51 		JSR MKSFUN
  5096   A2   96      		LDX #UNDIF
  5098   A9   05      		LDA #IUNDIF
  509A   20   A4   51 		JSR MKSFUN
  509D   A9   00      		LDA #$00	;(LNIL)
  509F   20   23   51 		JSR CLMK5
  50A2   85   9C      		STA CELPTR
  50A4   85   9D      		STA CELPTR+1	;CELL_PTR := LNIL
  50A6   85   93      		STA OBLIST+1	;OBLIST := LNIL
  50A8   85   18      		STA SIZE1
  50AA   85   19      		STA SIZE1+1	;SIZE1 := 0
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-63
LOGO	INITIALIZATIONS

  50AC   85   1A      		STA SIZE2
  50AE   85   1B      		STA SIZE2+1	;SIZE2 := 0
  50B0   A9   55      		LDA #'U
  50B2   85   AC      		STA TEMPN2
  50B4   A9   45      		LDA #'E
  50B6   85   AD      		STA TEMPN2+1
  50B8   A2   00      		LDX #$00
  50BA   A0   AC      		LDY #TEMPN2
  50BC   A9   AE      		LDA #TEMPN3
  50BE   85   B2      		STA ANSN
  50C0   A9   02      		LDA #STRING
  50C2   20   14   53 		JSR CONS	;"UE" of TRUE
  50C5   A9   54      		LDA #'T
  50C7   85   AC      		STA TEMPN2
  50C9   A9   52      		LDA #'R
  50CB   85   AD      		STA TEMPN2+1
  50CD   A0   AC      		LDY #TEMPN2
  50CF   A2   AE      		LDX #TEMPN3
  50D1   86   B2      		STX ANSN
  50D3   A9   02      		LDA #STRING
  50D5   20   14   53 		JSR CONS	;"TR" of TRUE
  50D8   A2   AE      		LDX #TEMPN3
  50DA   A9   4E      		LDA #LTRUE
  50DC   85   C0      		STA ANSN2
  50DE   20   8D   60 		JSR INTRNX
  50E1   A2   00      		LDX #$00
  50E3   86   AD      		STX TEMPN2+1
  50E5   A9   45      		LDA #'E
  50E7   85   AC      		STA TEMPN2
  50E9   A0   AC      		LDY #TEMPN2
  50EB   A9   AE      		LDA #TEMPN3
  50ED   85   B2      		STA ANSN
  50EF   A9   02      		LDA #STRING
  50F1   20   14   53 		JSR CONS	;"E" of FALSE
  50F4   A9   4C      		LDA #'L
  50F6   85   AC      		STA TEMPN2
  50F8   A9   53      		LDA #'S
  50FA   85   AD      		STA TEMPN2+1
  50FC   A0   AC      		LDY #TEMPN2
  50FE   A2   AE      		LDX #TEMPN3
  5100   86   B2      		STX ANSN
  5102   A9   02      		LDA #STRING
  5104   20   14   53 		JSR CONS	;"LS" of FALSE
  5107   A9   46      		LDA #'F
  5109   85   AC      		STA TEMPN2
  510B   A9   41      		LDA #'A
  510D   85   AD      		STA TEMPN2+1
  510F   A0   AC      		LDY #TEMPN2
  5111   A2   AE      		LDX #TEMPN3
  5113   86   B2      		STX ANSN
  5115   A9   02      		LDA #STRING
  5117   20   14   53 		JSR CONS	;"FA" of FALSE
  511A   A2   AE      		LDX #TEMPN3
  511C   A9   50      		LDA #LFALSE
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-64
LOGO	INITIALIZATIONS

  511E   85   C0      		STA ANSN2
  5120   4C   8D   60 		JMP INTRNX
                      
  5123   85   90      	CLMK5:	STA MARK5
  5125   85   91      		STA MARK5+1	;MARK5 := LNIL
  5127   85   8E      	CLMK4:	STA MARK4
  5129   85   8F      		STA MARK4+1	;MARK4 := LNIL
  512B   85   8C      	CLMK3:	STA MARK3
  512D   85   8D      		STA MARK3+1	;MARK3 := LNIL
  512F   85   8A      	CLMK2:	STA MARK2
  5131   85   8B      		STA MARK2+1	;MARK2 := LNIL
  5133   85   88      	CLMK1:	STA MARK1
  5135   85   89      		STA MARK1+1	;MARK1 := LNIL
  5137   60           		RTS
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-65
LOGO	INITIALIZATIONS

  5138   A0   01      	SOBST1:	LDY #$01
  513A   98           		TYA
  513B   88           		DEY
  513C   91   5B      		STA (SOBTOP),Y
  513E   98           		TYA
  513F   C8           		INY
  5140   91   5B      		STA (SOBTOP),Y	;(RPLACA)
  5142   C8           		INY
  5143   A5   5D      		LDA SARTOP
  5145   91   5B      		STA (SOBTOP),Y
  5147   C8           		INY
  5148   A5   5E      		LDA SARTOP+1
  514A   91   5B      		STA (SOBTOP),Y	;(RPLACD)
  514C   A9   07      		LDA #SATOM
  514E   A2   5B      		LDX #SOBTOP
  5150   20   F0   53 		JSR PUTTYP
  5153   AD   83   C0 		LDA GETRM2	;Ghost-memory bank 2, Prim table
  5156   E6   55      		INC BANK4K
  5158   A0   00      		LDY #$00
  515A   B1   A8      		LDA (TEMPN),Y
  515C   91   5D      		STA (SARTOP),Y
  515E   C8           		INY
  515F   B1   A8      		LDA (TEMPN),Y
  5161   91   5D      		STA (SARTOP),Y
  5163   C8           		INY
  5164   B1   A8      		LDA (TEMPN),Y
  5166   91   5D      		STA (SARTOP),Y
  5168   C8           	SBST1A:	INY
  5169   B1   A8      		LDA (TEMPN),Y
  516B   91   5D      		STA (SARTOP),Y
  516D   C9   20      		CMP #$20	;See if the last byte was transferred
  516F   D0   F7      		BNE SBST1A	;Yes.
  5171   AD   8B   C0 		LDA GETRM1	;Ghost-memory bank 2 disable
  5174   AD   8B   C0 		LDA GETRM1
  5177   C6   55      		DEC BANK4K
  5179   A9   00      		LDA #$00
  517B   91   5D      		STA (SARTOP),Y
  517D   C8           		INY
  517E   18           		CLC
  517F   98           		TYA
  5180   65   5D      		ADC SARTOP
  5182   85   5D      		STA SARTOP
  5184   90   02      		BCC ADHAK5
  5186   E6   5E      		INC SARTOP+1
  5188   18           	ADHAK5:	CLC
  5189   98           		TYA
  518A   65   A8      		ADC TEMPN
  518C   85   A8      		STA TEMPN
  518E   90   02      		BCC ADHAK6
  5190   E6   A9      		INC TEMPN+1
  5192   18           	ADHAK6:	CLC
  5193   A5   5B      		LDA SOBTOP
  5195   69   04      		ADC #$04
  5197   85   5B      		STA SOBTOP
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-66
LOGO	INITIALIZATIONS

  5199   90   02      		BCC ADHAK7
  519B   E6   5C      		INC SOBTOP+1
  519D   E6   C3      	ADHAK7:	INC NNODES
  519F   D0   02      		BNE ADHK7A
  51A1   E6   C4      		INC NNODES+1
  51A3   60           	ADHK7A:	RTS
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-67
LOGO	INITIALIZATIONS

  51A4   A0   02      	MKSFUN:	LDY #$02
  51A6   91   5D      		STA (SARTOP),Y
  51A8   88           		DEY
  51A9   A9   08      		LDA #$08	;(PREC = 8)
  51AB   91   5D      		STA (SARTOP),Y
  51AD   98           		TYA		;(NARGS = 1)
  51AE   88           		DEY
  51AF   91   5D      		STA (SARTOP),Y
  51B1   98           		TYA
  51B2   A0   03      		LDY #$03
  51B4   91   5D      		STA (SARTOP),Y
  51B6   86   B2      		STX ANSN
  51B8   A2   5D      		LDX #SARTOP
  51BA   A0   AA      		LDY #TEMPN1	;TEMPN1 Set to Novalue by the calling procedure
  51BC   A9   07      		LDA #SATOM
  51BE   20   14   53 		JSR CONS
  51C1   18           		CLC
  51C2   A5   5D      		LDA SARTOP
  51C4   69   04      		ADC #$04
  51C6   85   5D      		STA SARTOP
  51C8   90   02      		BCC ADHK11
  51CA   E6   5E      		INC SARTOP+1
  51CC   60           	ADHK11:	RTS
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-68
LOGO	MISCELLANEOUS AND EVALUATOR UTILITY ROUTINES

                      	.SBTTL	Miscellaneous and Evaluator Utility Routines
                      
                      	;SYSBUG prints an error message and exits.
                      
  51CD   85   02      	SYSBUG:	STA $02
  51CF   68           		PLA
  51D0   85   01      		STA $01		;Store calling point in locations $00,$01
  51D2   68           		PLA
  51D3   85   00      		STA $00
  51D5   8A           		TXA
  51D6   48           		PHA
  51D7   98           		TYA
  51D8   48           		PHA
  51D9   20   60   72 		JSR RSTIO
  51DC   A2   36      		LDX #LBUG1&$FF
  51DE   A0   DA      		LDY #LBUG1^
  51E0   20   95   54 		JSR PRTSTR	;Print "LOGO BUG!"
  51E3   68           		PLA
  51E4   A8           		TAY
  51E5   68           		PLA
  51E6   AA           		TAX
  51E7   A5   02      		LDA $02
  51E9   00           	SBPT:	BRK
  51EA   EA           		NOP
  51EB   EA           		NOP
  51EC   4C   1E   41 		JMP POPJ	;Monitor "G" command re-enters here
                      
  51EF   20   7C   57 	POPFRM:	JSR RSTBND
  51F2   A2   80      		LDX #TLLEVS
  51F4   20   6C   52 		JSR POP
  51F7   38           		SEC
  51F8   A5   14      		LDA SP
  51FA   E9   02      		SBC #$02	;Skip SF_NUMBER_BINDINGS
  51FC   85   14      		STA SP
  51FE   B0   02      		BCS PPFM2
  5200   C6   15      		DEC SP+1
  5202   A2   61      	PPFM2:	LDX #TOKPTR
  5204   20   6C   52 		JSR POP
  5207   A2   74      		LDX #LINNUM
  5209   20   6C   52 		JSR POP
  520C   A2   7E      		LDX #NEST
  520E   20   6C   52 		JSR POP
  5211   A2   63      		LDX #CURTOK
  5213   20   6C   52 		JSR POP
  5216   20   9E   52 		JSR POPB
  5219   85   0F      		STA UFRMAT
  521B   A2   6E      		LDX #XFRAME
  521D   20   6C   52 		JSR POP
  5220   A2   6C      		LDX #FRAME
  5222   4C   6C   52 		JMP POP
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-69
LOGO	MISCELLANEOUS AND EVALUATOR UTILITY ROUTINES

                      	;PUSHP is given the location of a page-zero variable in X,
                      	;and pushes the contents of the variable onto the LOGO stack.
                      
  5225   A0   00      	PUSHP:	LDY #$00
  5227   B5   00      		LDA $00,X
  5229   91   14      		STA (SP),Y
  522B   C8           		INY
  522C   B5   01      		LDA $01,X
  522E   91   14      		STA (SP),Y
  5230   18           		CLC
  5231   A5   14      		LDA SP
  5233   69   02      		ADC #$02
  5235   85   14      		STA SP
  5237   90   02      		BCC PSHP1
  5239   E6   15      		INC SP+1
  523B   60           	PSHP1:	RTS
                      
                      	;PUSH pushes onto the stack the sixteen-bit value in the X and Y registers.
                      
  523C   E6   4A      	PUSH:	INC RNDL
  523E   98           		TYA
  523F   A0   01      		LDY #$01
  5241   91   14      		STA (SP),Y
  5243   88           		DEY
  5244   8A           		TXA
  5245   91   14      		STA (SP),Y
  5247   18           		CLC
  5248   A5   14      		LDA SP
  524A   69   02      		ADC #$02
  524C   85   14      		STA SP
  524E   90   02      		BCC PSHP2
  5250   E6   15      		INC SP+1
  5252   60           	PSHP2:	RTS
                      
                      	;VPUSHP is given the address of a page-zero variable in X,
                      	;and pushes the contents of that variable onto the Value stack.
                      
  5253   E6   4A      	VPUSHP:	INC RNDL
  5255   A0   00      		LDY #$00
  5257   B5   00      		LDA $00,X
  5259   91   16      		STA (VSP),Y
  525B   C8           		INY
  525C   B5   01      		LDA $01,X
  525E   91   16      		STA (VSP),Y
  5260   38           		SEC
  5261   A5   16      		LDA VSP
  5263   E9   02      		SBC #$02
  5265   85   16      		STA VSP
  5267   B0   02      		BCS VPSH1
  5269   C6   17      		DEC VSP+1
  526B   60           	VPSH1:	RTS
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-70
LOGO	MISCELLANEOUS AND EVALUATOR UTILITY ROUTINES

                      	;POP pops a value off of the LOGO stack and into the page-zero variable
                      	;whose address is in X.
                      
  526C   E6   4A      	POP:	INC RNDL
  526E   38           		SEC
  526F   A5   14      		LDA SP
  5271   E9   02      		SBC #$02
  5273   85   14      		STA SP
  5275   B0   02      		BCS POP1
  5277   C6   15      		DEC SP+1
  5279   A0   00      	POP1:	LDY #$00
  527B   B1   14      		LDA (SP),Y
  527D   95   00      		STA $00,X
  527F   C8           		INY
  5280   B1   14      		LDA (SP),Y
  5282   95   01      		STA $01,X
  5284   60           		RTS
                      
                      	;VPOP pops a value off of the Value stack and into the page-zero variable
                      	;whose address is in X. Doesn't destroy X.
                      
  5285   E6   4A      	VPOP:	INC RNDL
  5287   18           		CLC
  5288   A5   16      		LDA VSP
  528A   69   02      		ADC #$02
  528C   85   16      		STA VSP
  528E   90   02      		BCC VPOP1
  5290   E6   17      		INC VSP+1
  5292   A0   00      	VPOP1:	LDY #$00
  5294   B1   16      		LDA (VSP),Y
  5296   95   00      		STA $00,X
  5298   C8           		INY
  5299   B1   16      		LDA (VSP),Y
  529B   95   01      		STA $01,X
  529D   60           		RTS
                      
                      	;POPB pops a one-byte value off of the LOGO stack and returns with it in A.
                      
  529E   E6   4A      	POPB:	INC RNDL
  52A0   38           		SEC
  52A1   A5   14      		LDA SP
  52A3   E9   02      		SBC #$02
  52A5   85   14      		STA SP
  52A7   B0   02      		BCS POPB1
  52A9   C6   15      		DEC SP+1
  52AB   A0   00      	POPB1:	LDY #$00
  52AD   B1   14      		LDA (SP),Y
  52AF   60           		RTS
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-71
LOGO	MISCELLANEOUS AND EVALUATOR UTILITY ROUTINES

                      	;STKTS1 tests to see if the LOGO stack test limit has been exceeded,
                      	;and gives an error if so. It doesn't poll for interrupts.
                      
  52B0   A5   17      	STKTS1:	LDA VSP+1
  52B2   C5   15      		CMP SP+1
  52B4   90   0C      		BCC STKTZ
  52B6   D0   09      		BNE STKTR
  52B8   38           		SEC
  52B9   A5   16      		LDA VSP
  52BB   E5   14      		SBC SP
  52BD   C9   50      		CMP #STKLIM
  52BF   90   01      		BCC STKTZ
  52C1   60           	STKTR:	RTS
  52C2   A9   00      	STKTZ:	LDA #PDLBAS&$FF
  52C4   85   14      		STA SP
  52C6   A9   0E      		LDA #PDLBAS^
  52C8   85   15      		STA SP+1	;Reset the stack for reader/tokenizer
  52CA   A2   00      		LDX #XNSTOR	;(No Stack) "No storage left" zapcode
  52CC   A9   13      		LDA #XZAP
  52CE   4C   47   61 		JMP ERROR
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-72
LOGO	MISCELLANEOUS AND EVALUATOR UTILITY ROUTINES

  52D1   B9   00   00 	GETVAL:	LDA $00,Y	;Get value into X's pointer from Y's pointer
  52D4   29   FC      		AND #$FC	;Strip off last two bits
  52D6   85   A6      		STA TEMPNH
  52D8   B9   01   00 		LDA $01,Y
  52DB   85   A7      		STA TEMPNH+1
  52DD   A0   00      		LDY #$00
  52DF   B1   A6      		LDA (TEMPNH),Y
  52E1   95   00      		STA $00,X
  52E3   C8           		INY
  52E4   B1   A6      		LDA (TEMPNH),Y
  52E6   95   01      		STA $01,X	;(CAR)
  52E8   60           		RTS
                      
  52E9   B9   00   00 	PUTVAL:	LDA $00,Y
  52EC   29   FC      		AND #$FC
  52EE   85   A6      		STA TEMPNH
  52F0   B9   01   00 		LDA $01,Y
  52F3   85   A7      		STA TEMPNH+1
  52F5   A0   00      		LDY #$00
  52F7   B5   00      		LDA $00,X
  52F9   91   A6      		STA (TEMPNH),Y
  52FB   C8           		INY
  52FC   B5   01      		LDA $01,X
  52FE   91   A6      		STA (TEMPNH),Y	;(RPLACA)
  5300   60           		RTS
                      
                      	;GETPRC returns the precedence (in A) of the function in Y,
                      	;given the funtype in X.
                      
  5301   A9   05      	GETPRC:	LDA #$05	;Assume Ufun, precedence 5
  5303   C0   06      		CPY #UFUN
  5305   F0   0C      		BEQ GPRCU
  5307   B5   00      	GPRCS:	LDA $00,X
  5309   85   A6      		STA TEMPNH
  530B   B5   01      		LDA $01,X
  530D   85   A7      		STA TEMPNH+1
  530F   A0   01      		LDY #$01
  5311   B1   A6      		LDA (TEMPNH),Y
  5313   60           	GPRCU:	RTS
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-73
LOGO	MISCELLANEOUS AND EVALUATOR UTILITY ROUTINES

                      	;CONS creates a new node from the freelist. X points to the Cdr,
                      	;Y to the Car, ANSN to the node's pointer, and A holds the typecode.
                      
  5314   48           	CONS:	PHA
  5315   C9   00      		CMP #LIST
  5317   F0   1B      		BEQ FCONS
  5319   C9   02      		CMP #STRING
  531B   F0   38      		BEQ SCONS
  531D   C9   03      		CMP #FIX
  531F   F0   2B      		BEQ NCONS
  5321   C9   04      		CMP #FLO
  5323   F0   27      		BEQ NCONS
  5325   C9   01      		CMP #ATOM
  5327   F0   2C      		BEQ SCONS
  5329   C9   0C      		CMP #FLIST
  532B   F0   28      		BEQ SCONS
  532D   C9   07      		CMP #SATOM
  532F   F0   32      		BEQ S1CONS
  5331   20   CD   51 		JSR SYSBUG
                      
                      	;"F" CONS - Protect both CAR and CDR. Used for Lists.
  5334   20   7B   53 	FCONS:	JSR XCONS
  5337   A6   A6      		LDX TEMPNH
  5339   20   53   52 		JSR VPUSHP	;VPUSHP Xcar
  533C   A6   A7      		LDX TEMPNH+1
  533E   20   53   52 		JSR VPUSHP	;VPUSHP Xcdr
  5341   20   5B   62 		JSR GARCOL
  5344   18           		CLC		;Reset the VPDL
  5345   A5   16      		LDA VSP
  5347   69   04      		ADC #$04
  5349   4C   73   53 		JMP SCONS2
                      
                      	;"N" CONS - Doesn't protect either CAR or CDR. Used for numbers.
  534C   20   7B   53 	NCONS:	JSR XCONS
  534F   20   5B   62 		JSR GARCOL
  5352   4C   9B   53 		JMP CONSG1
                      
                      	;"S" CONS - Protects only CDR. Used for strings.
  5355   20   7B   53 	SCONS:	JSR XCONS
  5358   A6   A7      		LDX TEMPNH+1
  535A   20   53   52 		JSR VPUSHP	;VPUSHP Xcdr
  535D   20   5B   62 		JSR GARCOL
  5360   4C   6E   53 		JMP SCONS1	;Reset the VPDL
                      
                      	;"S1" CONS - Protects only CAR. Used for Satoms.
  5363   20   7B   53 	S1CONS:	JSR XCONS
  5366   A6   A6      		LDX TEMPNH
  5368   20   53   52 		JSR VPUSHP
  536B   20   5B   62 		JSR GARCOL
  536E   18           	SCONS1:	CLC
  536F   A5   16      		LDA VSP
  5371   69   02      		ADC #$02
  5373   85   16      	SCONS2:	STA VSP
  5375   90   24      		BCC CONSG1
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-74
LOGO	MISCELLANEOUS AND EVALUATOR UTILITY ROUTINES

  5377   E6   17      		INC VSP+1
  5379   D0   20      		BNE CONSG1	;(Always)
                      
  537B   84   A6      	XCONS:	STY TEMPNH	;TEMPNH.L is XCAR
  537D   86   A7      		STX TEMPNH+1	;TEMPNH.H is XCDR
  537F   A5   60      		LDA FRLIST+1
  5381   F0   12      		BEQ XCONSG
  5383   A5   56      		LDA PRDFLG
  5385   D0   0F      		BNE XCONS2	;Don't check limit for READ_LINE callers
  5387   A5   C4      		LDA NNODES+1
  5389   C9   09      		CMP #NODLIM^
  538B   90   09      		BCC XCONS2
  538D   D0   06      		BNE XCONSG
  538F   A5   C3      		LDA NNODES
  5391   C9   66      		CMP #NODLIM&$FF
  5393   90   01      		BCC XCONS2
  5395   60           	XCONSG:	RTS
  5396   68           	XCONS2:	PLA
  5397   68           		PLA
  5398   4C   BA   53 		JMP CONS2
                      
  539B   A5   56      	CONSG1:	LDA PRDFLG
  539D   F0   06      		BEQ CONST2
  539F   A5   60      		LDA FRLIST+1
  53A1   D0   17      		BNE CONS2
  53A3   F0   0E      		BEQ CONSR
  53A5   A5   C4      	CONST2:	LDA NNODES+1
  53A7   C9   09      		CMP #NODLIM^
  53A9   90   0F      		BCC CONS2
  53AB   D0   06      		BNE CONSR
  53AD   A5   C3      		LDA NNODES
  53AF   C9   66      		CMP #NODLIM&$FF
  53B1   90   07      		BCC CONS2
  53B3   A2   01      	CONSR:	LDX #XNSTRN	;Error "No storage left" (No nodes)
  53B5   A9   13      		LDA #XZAP
  53B7   4C   47   61 		JMP ERROR
  53BA   E6   C3      	CONS2:	INC NNODES
  53BC   D0   02      		BNE CONS2A
  53BE   E6   C4      		INC NNODES+1	;Increment node counter
  53C0   A0   00      	CONS2A:	LDY #$00
  53C2   A6   A6      		LDX TEMPNH
  53C4   B5   00      		LDA $00,X
  53C6   91   5F      		STA (FRLIST),Y
  53C8   C8           		INY
  53C9   B5   01      		LDA $01,X
  53CB   91   5F      		STA (FRLIST),Y	;(RPLACA)
  53CD   C8           		INY
  53CE   A6   A7      		LDX TEMPNH+1
  53D0   B1   5F      		LDA (FRLIST),Y
  53D2   48           		PHA
  53D3   B5   00      		LDA $00,X
  53D5   91   5F      		STA (FRLIST),Y
  53D7   C8           		INY
  53D8   B1   5F      		LDA (FRLIST),Y
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-75
LOGO	MISCELLANEOUS AND EVALUATOR UTILITY ROUTINES

  53DA   48           		PHA
  53DB   B5   01      		LDA $01,X
  53DD   91   5F      		STA (FRLIST),Y	;(RPLACD)
  53DF   A6   B2      		LDX ANSN
  53E1   A5   5F      		LDA FRLIST
  53E3   95   00      		STA $00,X
  53E5   A5   60      		LDA FRLIST+1
  53E7   95   01      		STA $01,X
  53E9   68           		PLA
  53EA   85   60      		STA FRLIST+1
  53EC   68           		PLA
  53ED   85   5F      		STA FRLIST
  53EF   68           		PLA		;GET TYPE
                      
  53F0   C9   0B      	PUTTYP:	CMP #LATOM+1
  53F2   B0   0C      		BCS PUTTP2
  53F4   C9   08      		CMP #QATOM
  53F6   90   08      		BCC PUTTP2
  53F8   E9   07      		SBC #$07
  53FA   18           		CLC
  53FB   75   00      		ADC $00,X
  53FD   95   00      		STA $00,X
  53FF   60           	PUTTPE:	RTS
  5400   B4   01      	PUTTP2:	LDY $01,X
  5402   F0   FB      		BEQ PUTTPE
  5404   84   A7      		STY TEMPNH+1
  5406   B4   00      		LDY $00,X
  5408   84   A6      		STY TEMPNH
  540A   AA           		TAX
  540B   20   6A   5D 		JSR TYPACS
  540E   8A           		TXA
  540F   91   A6      		STA (TEMPNH),Y
  5411   60           		RTS
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-76
LOGO	MISCELLANEOUS AND EVALUATOR UTILITY ROUTINES

                      	;STKTST tests to see if the LOGO stack test limit has been exceeded,
                      	;and gives an error if so. Polls for interrupts.
  5412   20   B0   52 	STKTST:	JSR STKTS1
                      
                      	;STPPEK is the polling routine for user interrupts.
  5415   E6   4A      	STPPEK:	INC RNDL
  5417   20   D9   75 		JSR TSTCHR
  541A   90   19      		BCC PRTS
  541C   2C   10   C0 		BIT KPCLR
  541F   C9   07      		CMP #STPKEY
  5421   F0   18      		BEQ STPPK1
  5423   C9   1A      		CMP #PAUSKY
  5425   F0   0F      		BEQ STPPKZ
  5427   C9   13      		CMP #LSTKEY
  5429   F0   0A      		BEQ PRTS
  542B   C9   06      		CMP #FULCHR	;Full-screen graphics character
  542D   F0   1A      		BEQ STPFUL
  542F   C9   0C      		CMP #MIXCHR	;Mixed-screen graphics character
  5431   F0   1E      		BEQ STPMIX
  5433   85   69      		STA CHBUF	;(?Store character in buffer)
  5435   60           	PRTS:	RTS
  5436   A9   10      	STPPKZ:	LDA #XBRK
  5438   4C   47   61 		JMP ERROR
  543B   A2   D2      	STPPK1:	LDX #ERROR1&$FF
  543D   A0   47      		LDY #ERROR1^
  543F   20   3C   52 		JSR PUSH
  5442   A2   02      		LDX #XSTOP	;Stop_key Zapcode
  5444   A9   13      		LDA #XZAP
  5446   4C   47   61 		JMP ERROR
  5449   A5   09      	STPFUL:	LDA GRPHCS
  544B   F0   E8      		BEQ PRTS
  544D   AD   52   C0 		LDA $C052
  5450   60           		RTS
  5451   A5   09      	STPMIX:	LDA GRPHCS
  5453   F0   E0      		BEQ PRTS
  5455   AD   53   C0 		LDA $C053
  5458   60           		RTS
                      
  5459   B5   00      	PTSPNM:	LDA $00,X
  545B   29   FC      		AND #$FC
  545D   85   A6      		STA TEMPNH
  545F   B5   01      		LDA $01,X
  5461   85   A7      		STA TEMPNH+1
  5463   A0   02      		LDY #$02
  5465   B1   A6      		LDA (TEMPNH),Y
  5467   AA           		TAX
  5468   C8           		INY
  5469   B1   A6      		LDA (TEMPNH),Y
  546B   85   A7      		STA TEMPNH+1
  546D   86   A6      		STX TEMPNH	;(CDR)
  546F   88           		DEY
  5470   B1   A6      		LDA (TEMPNH),Y
  5472   09   01      		ORA #$01
  5474   91   A6      		STA (TEMPNH),Y
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-77
LOGO	MISCELLANEOUS AND EVALUATOR UTILITY ROUTINES

  5476   60           		RTS
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-78
LOGO	MISCELLANEOUS AND EVALUATOR UTILITY ROUTINES

  5477   C9   05      	GETNGS:	CMP #SFUN
  5479   F0   0D      		BEQ GTNG2
  547B   B5   00      	GTNG1:	LDA $00,X
  547D   85   A6      		STA TEMPNH
  547F   B5   01      		LDA $01,X
  5481   85   A7      		STA TEMPNH+1
  5483   A0   04      		LDY #$04
  5485   B1   A6      		LDA (TEMPNH),Y	;(GETBAR)
  5487   60           		RTS
  5488   B5   00      	GTNG2:	LDA $00,X
  548A   85   A6      		STA TEMPNH
  548C   B5   01      		LDA $01,X
  548E   85   A7      		STA TEMPNH+1
  5490   A0   00      		LDY #$00
  5492   B1   A6      		LDA (TEMPNH),Y
  5494   60           		RTS
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-79
LOGO	MISCELLANEOUS AND EVALUATOR UTILITY ROUTINES

                      	;PRTSTR prints the Ascii string whose address is in the X and Y registers.
                      	;The string is terminated with a 0.
                      
  5495   86   A6      	PRTSTR: STX TEMPNH
  5497   84   A7      		STY TEMPNH+1
  5499   AD   83   C0 		LDA GETRM2	;Ghost-memory bank 2, Text strings
  549C   E6   55      		INC BANK4K
  549E   A0   00      		LDY #$00
  54A0   B1   A6      	PTSTR1:	LDA (TEMPNH),Y
  54A2   F0   06      		BEQ PTRRTS
  54A4   20   84   72 		JSR TPCHR
  54A7   C8           		INY
  54A8   D0   F6      		BNE PTSTR1	;(Always)
  54AA   AD   8B   C0 	PTRRTS:	LDA GETRM1	;Ghost-memory bank 2 disable
  54AD   AD   8B   C0 		LDA GETRM1
  54B0   C6   55      		DEC BANK4K
  54B2   60           		RTS
                      
  54B3   C9   05      	INFIXP:	CMP #SFUN
  54B5   D0   04      		BNE IFP1
  54B7   B5   01      		LDA $01,X
  54B9   D0   02      		BNE IFP2
  54BB   18           	IFP1:	CLC		;Not infix
  54BC   60           		RTS
  54BD   B5   00      	IFP2:	LDA $00,X
  54BF   85   A6      		STA TEMPNH
  54C1   B5   01      		LDA $01,X
  54C3   85   A7      		STA TEMPNH+1
  54C5   A0   02      		LDY #$02
  54C7   B1   A6      		LDA (TEMPNH),Y
  54C9   C9   4C      		CMP #INSUM
  54CB   F0   18      		BEQ IFP3
  54CD   C9   4D      		CMP #INDIF
  54CF   F0   14      		BEQ IFP3
  54D1   C9   4E      		CMP #INPROD
  54D3   F0   10      		BEQ IFP3
  54D5   C9   4F      		CMP #INQUOT
  54D7   F0   0C      		BEQ IFP3
  54D9   C9   50      		CMP #INGRTR
  54DB   F0   08      		BEQ IFP3
  54DD   C9   51      		CMP #INLESS
  54DF   F0   04      		BEQ IFP3
  54E1   C9   52      		CMP #INEQUL
  54E3   D0   D6      		BNE IFP1
  54E5   38           	IFP3:	SEC		;Infix.
  54E6   60           		RTS		;Return with proper index in A
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-80
LOGO	MISCELLANEOUS AND EVALUATOR UTILITY ROUTINES

  54E7   85   B2      	FNDLIN:	STA ANSN	;LINE returned
  54E9   84   B3      		STY ANSN1	;NUMBER looked for
  54EB   B5   00      		LDA $00,X
  54ED   85   A8      		STA TEMPN	;TEMPN is LAST_LINE
  54EF   B5   01      		LDA $01,X
  54F1   85   A9      		STA TEMPN+1
  54F3   A6   B2      		LDX ANSN
  54F5   A0   02      		LDY #$02
  54F7   B1   A8      		LDA (TEMPN),Y
  54F9   95   00      		STA $00,X
  54FB   C8           		INY
  54FC   B1   A8      		LDA (TEMPN),Y
  54FE   95   01      		STA $01,X	;(CDR)
  5500   F0   49      		BEQ FDLNWE
  5502   A6   B2      	FDLNW:	LDX ANSN
  5504   B5   00      		LDA $00,X
  5506   85   A6      		STA TEMPNH
  5508   B5   01      		LDA $01,X
  550A   85   A7      		STA TEMPNH+1
  550C   A0   00      		LDY #$00
  550E   B1   A6      		LDA (TEMPNH),Y
  5510   85   AA      		STA TEMPN1	;TEMPN1 is incremental ptr.
  5512   C8           		INY
  5513   B1   A6      		LDA (TEMPNH),Y
  5515   85   AB      		STA TEMPN1+1	;(CAR)
  5517   88           		DEY
  5518   B1   AA      		LDA (TEMPN1),Y
  551A   AA           		TAX
  551B   C8           		INY
  551C   B1   AA      		LDA (TEMPN1),Y
  551E   85   AB      		STA TEMPN1+1
  5520   86   AA      		STX TEMPN1	;(GETBAR)
  5522   A6   B3      		LDX ANSN1
  5524   A5   AB      		LDA TEMPN1+1
  5526   D5   01      		CMP $01,X
  5528   90   0A      		BCC FDLNW3
  552A   D0   1F      		BNE FDLNWE
  552C   A5   AA      		LDA TEMPN1
  552E   D5   00      		CMP $00,X
  5530   F0   25      		BEQ FDLNWF
  5532   B0   17      		BCS FDLNWE
  5534   A6   B2      	FDLNW3:	LDX ANSN
  5536   B5   00      		LDA $00,X
  5538   85   A8      		STA TEMPN
  553A   B5   01      		LDA $01,X
  553C   85   A9      		STA TEMPN+1
  553E   A0   02      		LDY #$02
  5540   B1   A8      		LDA (TEMPN),Y
  5542   95   00      		STA $00,X
  5544   C8           		INY
  5545   B1   A8      		LDA (TEMPN),Y
  5547   95   01      		STA $01,X	;(CDR)
  5549   D0   B7      		BNE FDLNW
  554B   A6   B2      	FDLNWE:	LDX ANSN
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-81
LOGO	MISCELLANEOUS AND EVALUATOR UTILITY ROUTINES

  554D   A5   A8      		LDA TEMPN
  554F   95   00      		STA $00,X
  5551   A5   A9      		LDA TEMPN+1
  5553   95   01      		STA $01,X
  5555   18           		CLC		;Clear Carry means Not Found
  5556   60           		RTS
  5557   38           	FDLNWF:	SEC		;Set Carry means Found
  5558   60           		RTS
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-82
LOGO	MISCELLANEOUS AND EVALUATOR UTILITY ROUTINES

  5559   B9   00   00 	LINPEK:	LDA $00,Y
  555C   85   A6      		STA TEMPNH	;BODY
  555E   B9   01   00 		LDA $01,Y
  5561   85   A7      		STA TEMPNH+1
  5563   A0   02      		LDY #$02
  5565   A5   0F      		LDA UFRMAT
  5567   F0   02      		BEQ LPK1
  5569   C8           		INY
  556A   C8           		INY
  556B   B1   A6      	LPK1:	LDA (TEMPNH),Y
  556D   95   00      		STA $00,X
  556F   C8           		INY
  5570   B1   A6      		LDA (TEMPNH),Y
  5572   95   01      		STA $01,X	;(CDR or GETBAR)
  5574   60           		RTS
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-83
LOGO	MISCELLANEOUS AND EVALUATOR UTILITY ROUTINES

  5575   20   8D   55 	TTKADV:	JSR TFKADV
  5578   A5   A6      		LDA TEMPNH
  557A   CD   02   03 		CMP COMMNT
  557D   D0   0D      		BNE TTKE
  557F   A5   A7      		LDA TEMPNH+1
  5581   CD   03   03 		CMP COMMNT+1
  5584   D0   06      		BNE TTKE
  5586   A9   00      		LDA #$00
  5588   95   00      		STA $00,X
  558A   95   01      		STA $01,X
  558C   60           	TTKE:	RTS
                      
  558D   A5   0F      	TFKADV:	LDA UFRMAT
  558F   C9   0B      		CMP #FPACK
  5591   F0   16      		BEQ TFK2
  5593   B5   00      	TFK1:	LDA $00,X
  5595   85   A6      		STA TEMPNH
  5597   B5   01      		LDA $01,X
  5599   85   A7      		STA TEMPNH+1
  559B   A0   02      		LDY #$02
  559D   B1   A6      		LDA (TEMPNH),Y
  559F   95   00      		STA $00,X
  55A1   C8           		INY
  55A2   B1   A6      		LDA (TEMPNH),Y
  55A4   95   01      		STA $01,X	;(CDR)
  55A6   4C   C5   55 		JMP TFK3
  55A9   18           	TFK2:	CLC
  55AA   B5   00      		LDA $00,X
  55AC   69   02      		ADC #$02
  55AE   95   00      		STA $00,X
  55B0   90   02      		BCC TFK2A
  55B2   F6   01      		INC $01,X
  55B4   C5   7A      	TFK2A:	CMP ULNEND
  55B6   D0   0D      		BNE TFK3
  55B8   B5   01      		LDA $01,X
  55BA   C5   7B      		CMP ULNEND+1
  55BC   D0   07      		BNE TFK3
  55BE   A9   00      		LDA #$00
  55C0   95   00      		STA $00,X
  55C2   95   01      		STA $01,X
  55C4   60           		RTS
  55C5   B5   00      	TFK3:	LDA $00,X
  55C7   85   A6      		STA TEMPNH
  55C9   B5   01      		LDA $01,X
  55CB   85   A7      		STA TEMPNH+1
  55CD   A0   00      		LDY #$00
  55CF   B1   A6      		LDA (TEMPNH),Y
  55D1   48           		PHA
  55D2   C8           		INY
  55D3   B1   A6      		LDA (TEMPNH),Y
  55D5   85   A7      		STA TEMPNH+1
  55D7   68           		PLA
  55D8   85   A6      		STA TEMPNH	;(GETTOK)
  55DA   60           		RTS
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-84
LOGO	MISCELLANEOUS AND EVALUATOR UTILITY ROUTINES

  55DB   B9   00   00 	GTFULN:	LDA $00,Y
  55DE   85   A6      		STA TEMPNH
  55E0   B9   01   00 		LDA $01,Y
  55E3   85   A7      		STA TEMPNH+1	;BODY
  55E5   A0   00      		LDY #$00
  55E7   B1   A6      		LDA (TEMPNH),Y
  55E9   95   00      		STA $00,X
  55EB   C8           		INY
  55EC   B1   A6      		LDA (TEMPNH),Y
  55EE   95   01      		STA $01,X	;(CAR or GETBAR)
  55F0   A5   0F      		LDA UFRMAT
  55F2   F0   16      		BEQ GTFR
  55F4   C8           	GTF2:	INY
  55F5   B1   A6      		LDA (TEMPNH),Y
  55F7   85   7A      		STA ULNEND
  55F9   C8           		INY
  55FA   B1   A6      		LDA (TEMPNH),Y
  55FC   85   7B      		STA ULNEND+1	;(GETBAR)
  55FE   B5   00      		LDA $00,X
  5600   C5   7A      		CMP ULNEND
  5602   D0   06      		BNE GTFR
  5604   B5   01      		LDA $01,X
  5606   C5   7B      		CMP ULNEND+1
  5608   F0   21      		BEQ FLLIN
  560A   60           	GTFR:	RTS
                      
  560B   20   DB   55 	GTTULN:	JSR GTFULN
  560E   B5   01      		LDA $01,X
  5610   F0   F8      		BEQ GTFR
  5612   B5   00      	GTT1:	LDA $00,X
  5614   85   A6      		STA TEMPNH
  5616   B5   01      		LDA $01,X
  5618   85   A7      		STA TEMPNH+1
  561A   A0   00      		LDY #$00
  561C   B1   A6      		LDA (TEMPNH),Y
  561E   CD   02   03 		CMP COMMNT
  5621   D0   E7      		BNE GTFR
  5623   C8           		INY
  5624   B1   A6      		LDA (TEMPNH),Y
  5626   CD   03   03 		CMP COMMNT+1
  5629   D0   DF      		BNE GTFR
  562B   A9   00      	FLLIN:	LDA #$00
  562D   95   00      		STA $00,X
  562F   95   01      		STA $01,X
  5631   60           		RTS
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-85
LOGO	MISCELLANEOUS AND EVALUATOR UTILITY ROUTINES

  5632   B9   00   00 	GETLEN:	LDA $00,Y
  5635   85   A6      		STA TEMPNH	;LIST
  5637   B9   01   00 		LDA $01,Y
  563A   85   A7      		STA TEMPNH+1
  563C   A9   00      		LDA #$00
  563E   95   00      		STA $00,X	;NARGS
  5640   95   01      		STA $01,X
  5642   A5   A7      	GLENW:	LDA TEMPNH+1
  5644   F0   C4      		BEQ GTFR
  5646   A0   00      	GLENW1:	LDY #$00
  5648   B1   A6      		LDA (TEMPNH),Y
  564A   85   A8      		STA TEMPN
  564C   C8           		INY
  564D   B1   A6      		LDA (TEMPNH),Y
  564F   85   A9      		STA TEMPN+1	;(CAR)
  5651   C8           		INY
  5652   B1   A6      		LDA (TEMPNH),Y
  5654   48           		PHA
  5655   C8           		INY
  5656   B1   A6      		LDA (TEMPNH),Y
  5658   85   A7      		STA TEMPNH+1
  565A   68           		PLA
  565B   85   A6      		STA TEMPNH	;(CDR)
  565D   A5   A8      		LDA TEMPN
  565F   CD   02   03 		CMP COMMNT
  5662   D0   07      		BNE GLENW2
  5664   A5   A9      		LDA TEMPN+1
  5666   CD   03   03 		CMP COMMNT+1
  5669   F0   9F      		BEQ GTFR
  566B   F6   00      	GLENW2:	INC $00,X
  566D   D0   D3      		BNE GLENW
  566F   F6   01      		INC $01,X
  5671   D0   CF      		BNE GLENW	;(Always)
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-86
LOGO	MISCELLANEOUS AND EVALUATOR UTILITY ROUTINES

  5673   B5   00      	UNFUNC:	LDA $00,X
  5675   85   A6      		STA TEMPNH
  5677   B5   01      		LDA $01,X
  5679   85   A7      		STA TEMPNH+1
  567B   A0   02      		LDY #$02
  567D   B1   A6      		LDA (TEMPNH),Y
  567F   AA           		TAX
  5680   C8           		INY
  5681   B1   A6      		LDA (TEMPNH),Y
  5683   85   A7      		STA TEMPNH+1
  5685   86   A6      		STX TEMPNH	;(CDR)
  5687   A0   00      		LDY #$00
  5689   A9   01      		LDA #$01
  568B   91   A6      		STA (TEMPNH),Y
  568D   98           		TYA
  568E   C8           		INY
  568F   91   A6      		STA (TEMPNH),Y	;(RPLACA)
  5691   60           		RTS
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-87
LOGO	MISCELLANEOUS AND EVALUATOR UTILITY ROUTINES

  5692   85   B2      	GETFUN:	STA ANSN	;Save ANS_FUNCT pointer
  5694   B5   00      		LDA $00,X
  5696   85   A8      		STA TEMPN	;Get OBJECT pointer
  5698   B5   01      		LDA $01,X
  569A   85   A9      		STA TEMPN+1
  569C   20   84   5D 		JSR GETTYP
  569F   A6   B2      		LDX ANSN
  56A1   A0   02      		LDY #$02
  56A3   C9   01      		CMP #ATOM
  56A5   F0   09      		BEQ GTFN1
  56A7   C9   07      		CMP #SATOM
  56A9   F0   20      		BEQ GTFN2
  56AB   A9   00      		LDA #$00
  56AD   95   01      		STA $01,X
  56AF   60           		RTS
  56B0   B1   A8      	GTFN1:	LDA (TEMPN),Y
  56B2   48           		PHA
  56B3   C8           		INY
  56B4   B1   A8      		LDA (TEMPN),Y
  56B6   85   A9      		STA TEMPN+1
  56B8   68           		PLA
  56B9   85   A8      		STA TEMPN
  56BB   A0   00      		LDY #$00
  56BD   B1   A8      		LDA (TEMPN),Y
  56BF   48           		PHA
  56C0   C8           		INY
  56C1   B1   A8      		LDA (TEMPN),Y
  56C3   95   01      		STA $01,X
  56C5   68           		PLA
  56C6   95   00      		STA $00,X	;(CAR)
  56C8   A9   06      		LDA #UFUN
  56CA   60           		RTS
  56CB   B1   A8      	GTFN2:	LDA (TEMPN),Y
  56CD   95   00      		STA $00,X
  56CF   C8           		INY
  56D0   B1   A8      		LDA (TEMPN),Y
  56D2   95   01      		STA $01,X	;(CDR)
  56D4   A9   05      		LDA #SFUN
  56D6   60           		RTS
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-88
LOGO	MISCELLANEOUS AND EVALUATOR UTILITY ROUTINES

  56D7   86   B2      	LDELET:	STX ANSN	;ANSN points to NUMBER
  56D9   A5   9A      		LDA EDBOD
  56DB   85   A8      		STA TEMPN	;TEMPN is LASTLINE
  56DD   A5   9B      		LDA EDBOD+1
  56DF   85   A9      		STA TEMPN+1
  56E1   A0   02      		LDY #$02
  56E3   B1   A8      		LDA (TEMPN),Y
  56E5   85   AA      		STA TEMPN1	;TEMPN1 is LINE
  56E7   C8           		INY
  56E8   B1   A8      		LDA (TEMPN),Y
  56EA   85   AB      		STA TEMPN1+1	;(CDR)
  56EC   A5   AB      	DLTW:	LDA TEMPN1+1
  56EE   F0   52      		BEQ DLTWE
  56F0   A0   00      	DLTW2:	LDY #$00
  56F2   B1   AA      		LDA (TEMPN1),Y
  56F4   85   A6      		STA TEMPNH	;TEMPNH is TEMP
  56F6   C8           		INY
  56F7   B1   AA      		LDA (TEMPN1),Y
  56F9   85   A7      		STA TEMPNH+1	;(CAR)
  56FB   88           		DEY
  56FC   B1   A6      		LDA (TEMPNH),Y
  56FE   AA           		TAX
  56FF   C8           		INY
  5700   B1   A6      		LDA (TEMPNH),Y
  5702   85   A7      		STA TEMPNH+1
  5704   86   A6      		STX TEMPNH	;(CAR)
  5706   A6   B2      		LDX ANSN
  5708   D5   01      		CMP $01,X
  570A   90   0A      		BCC DLTW1
  570C   D0   34      		BNE DLTWE
  570E   A5   A6      		LDA TEMPNH
  5710   D5   00      		CMP $00,X
  5712   F0   19      		BEQ DLTWF
  5714   B0   2C      		BCS DLTWE
  5716   A5   AA      	DLTW1:	LDA TEMPN1
  5718   85   A8      		STA TEMPN
  571A   A5   AB      		LDA TEMPN1+1
  571C   85   A9      		STA TEMPN+1
  571E   A0   02      		LDY #$02
  5720   B1   AA      		LDA (TEMPN1),Y
  5722   AA           		TAX
  5723   C8           		INY
  5724   B1   AA      		LDA (TEMPN1),Y
  5726   85   AB      		STA TEMPN1+1
  5728   86   AA      		STX TEMPN1	;(CDR)
  572A   4C   EC   56 		JMP DLTW
  572D   A0   02      	DLTWF:	LDY #$02
  572F   B1   AA      		LDA (TEMPN1),Y
  5731   85   A6      		STA TEMPNH
  5733   C8           		INY
  5734   B1   AA      		LDA (TEMPN1),Y
  5736   85   A7      		STA TEMPNH+1	;(CDR)
  5738   88           		DEY
  5739   A5   A6      		LDA TEMPNH
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-89
LOGO	MISCELLANEOUS AND EVALUATOR UTILITY ROUTINES

  573B   91   A8      		STA (TEMPN),Y
  573D   C8           		INY
  573E   A5   A7      		LDA TEMPNH+1
  5740   91   A8      		STA (TEMPN),Y	;(RPLACD)
  5742   60           	DLTWE:	RTS
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-90
LOGO	MISCELLANEOUS AND EVALUATOR UTILITY ROUTINES

  5743   B5   00      	ULNADV:	LDA $00,X
  5745   85   A6      		STA TEMPNH
  5747   B5   01      		LDA $01,X
  5749   85   A7      		STA TEMPNH+1	;BODY
  574B   A0   02      		LDY #$02
  574D   A5   0F      		LDA UFRMAT
  574F   D0   0C      		BNE ULDV2
  5751   B1   A6      	ULDV1:	LDA (TEMPNH),Y
  5753   48           		PHA
  5754   C8           		INY
  5755   B1   A6      		LDA (TEMPNH),Y
  5757   95   01      		STA $01,X
  5759   68           		PLA
  575A   95   00      		STA $00,X	;(CDR)
  575C   60           		RTS
  575D   C8           	ULDV2:	INY
  575E   C8           		INY
  575F   B1   A6      		LDA (TEMPNH),Y
  5761   48           		PHA
  5762   C8           		INY
  5763   B1   A6      		LDA (TEMPNH),Y	;(GETBAR)
  5765   D0   08      		BNE ULDV3
  5767   68           		PLA
  5768   D0   06      		BNE ULDV3A
  576A   95   00      		STA $00,X
  576C   95   01      		STA $01,X
  576E   60           		RTS
  576F   68           	ULDV3:	PLA
  5770   18           	ULDV3A:	CLC
  5771   B5   00      		LDA $00,X
  5773   69   02      		ADC #$02
  5775   95   00      		STA $00,X
  5777   90   02      		BCC ADHK13
  5779   F6   01      		INC $01,X
  577B   60           	ADHK13:	RTS
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-91
LOGO	MISCELLANEOUS AND EVALUATOR UTILITY ROUTINES

  577C   A5   6E      	RSTBND:	LDA XFRAME
  577E   85   14      		STA SP
  5780   A5   6F      		LDA XFRAME+1
  5782   85   15      		STA SP+1
  5784   A0   0E      		LDY #$0E	;(SF_NUMBER_BINDINGS = 14.)
  5786   B1   6C      		LDA (FRAME),Y
  5788   F0   17      		BEQ RSTBWE
  578A   85   B2      		STA ANSN	;(GETBAR)
  578C   A2   AA      	RSTBW:	LDX #TEMPN1
  578E   20   6C   52 		JSR POP
  5791   A2   A8      		LDX #TEMPN
  5793   20   6C   52 		JSR POP
  5796   A2   A8      		LDX #TEMPN
  5798   A0   AA      		LDY #TEMPN1
  579A   20   E9   52 		JSR PUTVAL
  579D   C6   B2      		DEC ANSN
  579F   D0   EB      		BNE RSTBW
  57A1   60           	RSTBWE:	RTS
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-92
LOGO	MISCELLANEOUS AND EVALUATOR UTILITY ROUTINES

  57A2   A9   A8      	OTPFX1:	LDA #TEMPN	;Output a two-byte fixnum value (Y is ptr.)
  57A4   85   B2      		STA ANSN
  57A6   A2   00      		LDX #$00
  57A8   A9   03      		LDA #FIX
  57AA   20   14   53 		JSR CONS
  57AD   A2   A8      		LDX #TEMPN
  57AF   20   53   52 		JSR VPUSHP
  57B2   E6   07      		INC OTPUTN
  57B4   4C   1E   41 		JMP POPJ
                      
  57B7   A0   A2      	OTPFL1:	LDY #NARG1
  57B9   A9   04      	OTPFLO:	LDA #FLO
  57BB   D0   17      		BNE OTPNUM	;(Always)
  57BD   B5   03      	OTPFIX:	LDA $03,X
  57BF   C9   80      		CMP #$80
  57C1   D0   0F      		BNE OTPFXA
  57C3   B5   02      		LDA $02,X
  57C5   D0   0B      		BNE OTPFXA
  57C7   B5   01      		LDA $01,X
  57C9   D0   07      		BNE OTPFXA
  57CB   B5   00      		LDA $00,X
  57CD   D0   03      		BNE OTPFXA
  57CF   4C   A6   77 		JMP ROFLOW	;Attempted to output -2^15, so Overflow Error
  57D2   A9   03      	OTPFXA:	LDA #FIX
  57D4   48           	OTPNUM:	PHA		;Save type
  57D5   A9   A8      		LDA #TEMPN	;Entered with type (Fix/Flo) in A
  57D7   85   B2      		STA ANSN
  57D9   98           		TYA
  57DA   AA           		TAX
  57DB   E8           		INX
  57DC   E8           		INX
  57DD   68           		PLA		;Retrieve type
  57DE   20   14   53 		JSR CONS
  57E1   A2   A8      		LDX #TEMPN
  57E3   20   53   52 		JSR VPUSHP
  57E6   E6   07      		INC OTPUTN
  57E8   4C   1E   41 		JMP POPJ
                      
  57EB   84   B2      	PUTFUN:	STY ANSN
  57ED   86   B3      		STX ANSN1
  57EF   20   84   5D 		JSR GETTYP
  57F2   C9   01      		CMP #ATOM
  57F4   F0   0A      		BEQ PTFN2
  57F6   A4   B3      	PTFN1:	LDY ANSN1
  57F8   20   3A   61 		JSR PTRYOK
  57FB   A9   0C      		LDA #XUBL
  57FD   4C   47   61 		JMP ERROR
  5800   A6   B3      	PTFN2:	LDX ANSN1
  5802   B5   00      		LDA $00,X
  5804   85   A6      		STA TEMPNH
  5806   B5   01      		LDA $01,X
  5808   85   A7      		STA TEMPNH+1
  580A   A0   02      		LDY #$02
  580C   B1   A6      		LDA (TEMPNH),Y
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-93
LOGO	MISCELLANEOUS AND EVALUATOR UTILITY ROUTINES

  580E   AA           		TAX
  580F   C8           		INY
  5810   B1   A6      		LDA (TEMPNH),Y
  5812   85   A7      		STA TEMPNH+1
  5814   86   A6      		STX TEMPNH	;(CDR)
  5816   A6   B2      		LDX ANSN
  5818   A0   00      		LDY #$00
  581A   B5   00      		LDA $00,X
  581C   91   A6      		STA (TEMPNH),Y
  581E   C8           		INY
  581F   B5   01      		LDA $01,X
  5821   91   A6      		STA (TEMPNH),Y	;(RPLACA)
  5823   60           		RTS
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-94
LOGO	MISCELLANEOUS AND EVALUATOR UTILITY ROUTINES

                      	;Gets two numerical arguments. Coerces one to Real if not same type.
                      	;Returns with carry set if Flonum results.
  5824   A2   BE      	GT2NUM:	LDX #TEMPX2
  5826   20   85   52 		JSR VPOP
  5829   A2   A2      		LDX #NARG1
  582B   20   85   52 		JSR VPOP
  582E   20   DC   58 		JSR GETNUM	;GETNUM returns carry clear if argument non-numerical
  5831   90   1C      		BCC GTERR1
  5833   85   C1      		STA ANSN3	;Save first type
  5835   20   C0   58 		JSR GTNUM2	;Special GETNUM for NARG2
  5838   90   18      		BCC GTERR2
  583A   C5   C1      		CMP ANSN3
  583C   D0   03      		BNE GT2NM1
  583E   C9   04      		CMP #FLO	;(Sets carry if Flonum)
  5840   60           		RTS
  5841   C9   03      	GT2NM1:	CMP #FIX	;Assume ARG1 is the integer
  5843   D0   05      		BNE GT2NM2
  5845   20   23   69 		JSR FLOTN2	;Nope, it was NARG2, convert to flt. pt.
  5848   38           		SEC
  5849   60           		RTS
  584A   20   2C   69 	GT2NM2:	JSR FLOTN1	;Convert NARG1 to floating pt.
  584D   38           		SEC
  584E   60           		RTS
  584F   4C   15   7C 	GTERR1:	JMP SMAKE2	;(ERROR XWTA,ARG1,CURTOK)
  5852   4C   84   7A 	GTERR2:	JMP SFPT1	;(ERROR XWTA,ARG2,CURTOK)
                      
                      	;Gets a numerical argument. Returns with carry set if flonum.
  5855   A2   A2      	GT1NUM:	LDX #NARG1
  5857   20   85   52 		JSR VPOP
  585A   20   DA   58 	GT1NMX:	JSR GTNUM1	;Alt. entry
  585D   90   F0      		BCC GTERR1
  585F   C9   04      		CMP #FLO	;(Sets carry if Flonum)
  5861   60           		RTS
                      
                      	;Gets a numerical argument, changes to integer if Real.
                      	;Give an error if high bytes not zero.
  5862   A2   A2      	GT1FIX:	LDX #NARG1
  5864   20   85   52 		JSR VPOP
  5867   20   DC   58 		JSR GETNUM
  586A   90   E3      		BCC GTERR1
  586C   C9   03      		CMP #FIX
  586E   F0   03      		BEQ GT1FX1
  5870   20   57   6A 		JSR XINT1
  5873   A2   A2      	GT1FX1:	LDX #NARG1
  5875   20   7B   58 		JSR CHKINT
  5878   B0   D5      		BCS GTERR1
  587A   60           		RTS
                      
  587B   B5   02      	CHKINT:	LDA $02,X
  587D   D0   06      		BNE CHKIN2
  587F   B5   03      		LDA $03,X
  5881   D0   0A      		BNE CHKNNT
  5883   18           	CHKIOK:	CLC
  5884   60           		RTS
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-95
LOGO	MISCELLANEOUS AND EVALUATOR UTILITY ROUTINES

  5885   C9   FF      	CHKIN2:	CMP #$FF
  5887   D0   04      		BNE CHKNNT
  5889   D5   03      		CMP $03,X
  588B   F0   F6      		BEQ CHKIOK
  588D   38           	CHKNNT:	SEC
  588E   60           		RTS
                      
                      	;Gets two numerical arguments, changes either or both to integer if Real.
                      	;Gives an error if either arg. has high bytes non-zero.
  588F   A2   BE      	GT2FIX:	LDX #TEMPX2
  5891   20   85   52 		JSR VPOP
  5894   A2   A2      		LDX #NARG1
  5896   20   85   52 		JSR VPOP
  5899   20   DC   58 		JSR GETNUM
  589C   90   B1      		BCC GTERR1
  589E   C9   03      		CMP #FIX
  58A0   F0   0A      		BEQ GT2FX1
  58A2   20   57   6A 		JSR XINT1
  58A5   A2   A2      		LDX #NARG1
  58A7   20   7B   58 		JSR CHKINT
  58AA   B0   A3      		BCS GTERR1
  58AC   20   C0   58 	GT2FX1:	JSR GTNUM2	;Special GETNUM for NARG2
  58AF   90   A1      		BCC GTERR2
  58B1   C9   03      		CMP #FIX
  58B3   F0   03      		BEQ GT2FX2
  58B5   20   4E   6A 		JSR XINT2
  58B8   A2   9E      	GT2FX2:	LDX #NARG2
  58BA   20   7B   58 		JSR CHKINT
  58BD   B0   93      		BCS GTERR2
  58BF   60           		RTS
                      
                      	;GETNM2 saves NARG1 before calling GETNUM with NARG2, then restores NARG1.
                      
  58C0   A0   40      	GTNUM2:	LDY #A3L
  58C2   20   F3   4C 		JSR XN1TOY	;Save NARG1
  58C5   A5   BE      		LDA TEMPX2
  58C7   85   9E      		STA NARG2
  58C9   A5   BF      		LDA TEMPX2+1
  58CB   85   9F      		STA NARG2+1
  58CD   A2   9E      		LDX #NARG2
  58CF   20   DC   58 		JSR GETNUM
  58D2   48           		PHA		;Save type
  58D3   A0   40      		LDY #A3L
  58D5   20   FF   4C 		JSR XYTON1	;Restore NARG1
  58D8   68           		PLA		;Get type back
  58D9   60           		RTS
                      
                      	;Gets a numerical argument if possible. Returns with carry clear if successful.
                      	;Returns with type of argument (Fix/Flo) in A.
                      	;(Note: ATMTFX destroys previous values of NARG1 and NARG2. Call with NARG1 first,
                      	; then save it, then call with NARG2, then restore NARG1.)
                      
  58DA   A2   A2      	GTNUM1:	LDX #NARG1
  58DC   86   B3      	GETNUM:	STX ANSN1	;Address of argument
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-96
LOGO	MISCELLANEOUS AND EVALUATOR UTILITY ROUTINES

  58DE   20   84   5D 		JSR GETTYP
  58E1   A6   B3      		LDX ANSN1
  58E3   C9   01      		CMP #ATOM
  58E5   F0   22      		BEQ ATMTXX
  58E7   C9   03      		CMP #FIX
  58E9   F0   06      		BEQ GTNM2
  58EB   C9   04      		CMP #FLO
  58ED   F0   02      		BEQ GTNM2
  58EF   18           	GTNMNO:	CLC		;Carry clear means argument not OK
  58F0   60           		RTS
  58F1   48           	GTNM2:	PHA		;Save type
  58F2   B5   00      		LDA $00,X
  58F4   85   A6      		STA TEMPNH
  58F6   B5   01      		LDA $01,X
  58F8   85   A7      		STA TEMPNH+1
  58FA   A0   03      		LDY #$03
  58FC   B1   A6      	GTNML:	LDA (TEMPNH),Y
  58FE   95   03      		STA $03,X
  5900   CA           		DEX
  5901   88           		DEY
  5902   10   F8      		BPL GTNML
  5904   68           		PLA		;Retrieve type
  5905   38           		SEC		;Carry set means argument OK
  5906   60           		RTS
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-97
LOGO	MISCELLANEOUS AND EVALUATOR UTILITY ROUTINES

                      	;Convert an atom to a Fixnum or Flonum if possible. Sets the carry
                      	;if successful. Returns type of number (Fix/Flo) in A.
                      	;(Note: Destroys previous values of NARG1 and NARG2.)
                      
  5907   86   B3      	ATMTFX:	STX ANSN1	;ANSN1 points to argument
  5909   A0   B0      	ATMTXX:	LDY #TEMPN4	;TEMPN4 becomes PNAME (Entry point for GETNUM)
  590B   20   88   59 		JSR GETPNM
  590E   A5   B1      		LDA TEMPN4+1
  5910   F0   DD      		BEQ GTNMNO
  5912   20   CA   4C 		JSR CLRNG1	;Initialize number to 0
  5915   A0   01      		LDY #$01
  5917   B1   B0      		LDA (TEMPN4),Y
  5919   85   B9      		STA TEMPN7+1
  591B   88           		DEY
  591C   84   C0      		STY ANSN2	;ANSN2 is SIGN
  591E   B1   B0      		LDA (TEMPN4),Y
  5920   85   B8      		STA TEMPN7	;(CAR) a pair of digits to TEMPN7
  5922   C9   2D      		CMP #'-
  5924   D0   04      		BNE ATMT3
  5926   E6   C0      		INC ANSN2	;ANSN2 is SIGN
  5928   D0   07      		BNE ATMT4A	;(Always)
  592A   20   7F   59 	ATMT3:	JSR GOBDIG
  592D   A6   B1      	ATMT4:	LDX TEMPN4+1
  592F   F0   26      		BEQ ATMT4E
  5931   A0   02      	ATMT4A:	LDY #$02
  5933   B1   B0      		LDA (TEMPN4),Y
  5935   AA           		TAX
  5936   C8           		INY
  5937   B1   B0      		LDA (TEMPN4),Y
  5939   85   B1      		STA TEMPN4+1
  593B   86   B0      		STX TEMPN4	;(CDR) PNAME to next two characters
  593D   A5   B9      		LDA TEMPN7+1
  593F   F0   EC      		BEQ ATMT4
  5941   20   7F   59 		JSR GOBDIG
  5944   A6   B1      		LDX TEMPN4+1
  5946   F0   0F      		BEQ ATMT4E
  5948   A0   01      		LDY #$01
  594A   B1   B0      		LDA (TEMPN4),Y
  594C   85   B9      		STA TEMPN7+1
  594E   88           		DEY
  594F   B1   B0      		LDA (TEMPN4),Y	;(CAR) next two characters
  5951   20   7F   59 		JSR GOBDIG
  5954   4C   2D   59 		JMP ATMT4
  5957   20   95   4C 	ATMT4E:	JSR CNUML2
  595A   90   2A      		BCC NOTNM2
  595C   48           		PHA		;Save type
  595D   A6   C0      		LDX ANSN2
  595F   F0   0E      		BEQ ATMT5
  5961   A2   A2      		LDX #NARG1
  5963   A8           		TAY		;(Type of number is in A)
  5964   D0   06      		BNE ATMT41
  5966   20   D1   78 		JSR COMPL
  5969   4C   6F   59 		JMP ATMT5
  596C   20   F3   69 	ATMT41:	JSR FCOMPL
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-98
LOGO	MISCELLANEOUS AND EVALUATOR UTILITY ROUTINES

  596F   A4   B3      	ATMT5:	LDY ANSN1	;ANSN1 is argument pointer
  5971   A2   FC      		LDX #$FC
  5973   B5   A6      	ATMT5L:	LDA NARG1+4,X	;NARG1 is NUMBER
  5975   99   00   00 		STA $00,Y
  5978   C8           		INY
  5979   E8           		INX
  597A   30   F7      		BMI ATMT5L
  597C   68           		PLA		;Retrieve type
  597D   38           		SEC		;Carry set means argument is a number
  597E   60           		RTS
                      
  597F   20   ED   4B 	GOBDIG:	JSR CNUML1
  5982   B0   03      		BCS GBDGR
  5984   68           	NOTNM1:	PLA		;Return back past ATMTFX
  5985   68           		PLA
  5986   18           	NOTNM2:	CLC		;Carry clear means argument non-numeric
  5987   60           	GBDGR:	RTS
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-99
LOGO	MISCELLANEOUS AND EVALUATOR UTILITY ROUTINES

  5988   84   AB      	GETPNM:	STY TEMPN1+1	;TEMPN1.H is returned PNAME pointer
  598A   86   AA      		STX TEMPN1	;TEMPN1.L is ATOMM pointer
  598C   B5   00      		LDA $00,X
  598E   29   FC      		AND #$FC
  5990   95   00      		STA $00,X
  5992   20   84   5D 		JSR GETTYP
  5995   A4   AA      		LDY TEMPN1
  5997   B6   00      		LDX $00,Y
  5999   86   A6      		STX TEMPNH	;TEMPNH becomes ATOMM
  599B   B6   01      		LDX $01,Y
  599D   86   A7      		STX TEMPNH+1
  599F   A0   02      		LDY #$02
  59A1   C9   07      		CMP #SATOM
  59A3   F0   1F      		BEQ GTPN2
  59A5   B1   A6      	GTPN1:	LDA (TEMPNH),Y	;(Y is $02)
  59A7   AA           		TAX
  59A8   C8           		INY
  59A9   B1   A6      		LDA (TEMPNH),Y
  59AB   85   A7      		STA TEMPNH+1
  59AD   86   A6      		STX TEMPNH	;(CDR)
  59AF   A6   AB      		LDX TEMPN1+1	;PNAME ptr.
  59B1   88           		DEY
  59B2   B1   A6      		LDA (TEMPNH),Y
  59B4   48           		PHA
  59B5   C8           		INY
  59B6   B1   A6      		LDA (TEMPNH),Y
  59B8   95   01      		STA $01,X
  59BA   68           		PLA
  59BB   A8           		TAY		;(CDR)
  59BC   29   FC      		AND #$FC
  59BE   95   00      		STA $00,X
  59C0   98           		TYA
  59C1   29   01      		AND #$01
  59C3   60           	RTSA2X:	RTS
  59C4   B1   A6      	GTPN2:	LDA (TEMPNH),Y	;(Y is $02)
  59C6   85   A8      		STA TEMPN	;TEMPN is INDEX
  59C8   C8           		INY
  59C9   B1   A6      		LDA (TEMPNH),Y
  59CB   85   A9      		STA TEMPN+1	;(CDR)
  59CD   A9   03      		LDA #$03
  59CF   85   AA      		STA TEMPN1
  59D1   A9   00      		LDA #$00
  59D3   85   B3      		STA ANSN1	;Character counter
  59D5   A4   AA      	GTPNW:	LDY TEMPN1
  59D7   B1   A8      		LDA (TEMPN),Y	;Gets INDEX + 3 (SA_PNAME)
  59D9   F0   0A      		BEQ GTPNWE
  59DB   AA           		TAX
  59DC   20   3C   52 		JSR PUSH
  59DF   E6   B3      		INC ANSN1
  59E1   E6   AA      		INC TEMPN1
  59E3   D0   F0      		BNE GTPNW	;(Always)
  59E5   A5   AB      	GTPNWE:	LDA TEMPN1+1	;ANS pointer
  59E7   48           		PHA
  59E8   20   BD   65 		JSR CNSPDL
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-100
LOGO	MISCELLANEOUS AND EVALUATOR UTILITY ROUTINES

  59EB   A9   00      		LDA #$00	;No Funny-pname SATOMs
  59ED   60           		RTS
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-101
LOGO	MISCELLANEOUS AND EVALUATOR UTILITY ROUTINES

  59EE   A5   62      	SKPPTH:	LDA TOKPTR+1
  59F0   F0   D1      		BEQ RTSA2X
  59F2   A0   00      		LDY #$00
  59F4   B1   61      		LDA (TOKPTR),Y
  59F6   85   A8      		STA TEMPN
  59F8   C8           		INY
  59F9   B1   61      		LDA (TOKPTR),Y
  59FB   85   A9      		STA TEMPN+1	;(GETTOK)
  59FD   A2   61      		LDX #TOKPTR
  59FF   20   75   55 		JSR TTKADV
  5A02   A5   A8      		LDA TEMPN
  5A04   CD   0E   03 		CMP LPAR
  5A07   D0   BA      		BNE RTSA2X
  5A09   A5   A9      		LDA TEMPN+1
  5A0B   CD   0F   03 		CMP LPAR+1
  5A0E   D0   B3      		BNE RTSA2X
  5A10   A9   01      		LDA #$01
  5A12   85   B2      		STA ANSN	;ANSN is PAREN_COUNTER
  5A14   A5   62      	SKPPW:	LDA TOKPTR+1
  5A16   F0   AB      		BEQ RTSA2X
  5A18   A0   00      		LDY #$00
  5A1A   B1   61      		LDA (TOKPTR),Y
  5A1C   85   A8      		STA TEMPN
  5A1E   C8           		INY
  5A1F   B1   61      		LDA (TOKPTR),Y
  5A21   85   A9      		STA TEMPN+1	;(GETTOK)
  5A23   A2   61      		LDX #TOKPTR
  5A25   20   75   55 		JSR TTKADV
  5A28   A6   A8      		LDX TEMPN
  5A2A   A4   A9      		LDY TEMPN+1
  5A2C   EC   0E   03 		CPX LPAR
  5A2F   D0   0A      		BNE SKPPW2
  5A31   CC   0F   03 		CPY LPAR+1
  5A34   D0   05      		BNE SKPPW2
  5A36   E6   B2      		INC ANSN
  5A38   4C   14   5A 		JMP SKPPW
  5A3B   EC   20   03 	SKPPW2:	CPX RPAR
  5A3E   D0   D4      		BNE SKPPW
  5A40   CC   21   03 		CPY RPAR+1
  5A43   D0   CF      		BNE SKPPW
  5A45   C6   B2      		DEC ANSN
  5A47   D0   CB      		BNE SKPPW
  5A49   60           		RTS
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-102
LOGO	MISCELLANEOUS AND EVALUATOR UTILITY ROUTINES

  5A4A   86   B3      	EXIFSC:	STX ANSN1	;ANSN1 is ANS
  5A4C   A5   82      		LDA IFLEVL
  5A4E   85   AA      		STA TEMPN1	;TEMPN2 is IF_COUNTER
  5A50   A5   83      		LDA IFLEVL+1
  5A52   85   AB      		STA TEMPN1+1
  5A54   A5   AB      	EXFW:	LDA TEMPN1+1
  5A56   C5   83      		CMP IFLEVL+1
  5A58   90   08      		BCC EXFWE
  5A5A   D0   12      		BNE EXFWA1
  5A5C   A5   AA      		LDA TEMPN1
  5A5E   C5   82      		CMP IFLEVL
  5A60   B0   0C      		BCS EXFWA1
  5A62   38           	EXFWE:	SEC
  5A63   A5   82      		LDA IFLEVL
  5A65   E9   01      		SBC #$01
  5A67   85   82      		STA IFLEVL
  5A69   B0   02      		BCS EXFWR
  5A6B   C6   83      		DEC IFLEVL+1
  5A6D   60           	EXFWR:	RTS
  5A6E   A5   62      	EXFWA1:	LDA TOKPTR+1
  5A70   F0   F0      		BEQ EXFWE
  5A72   A0   00      		LDY #$00
  5A74   A6   B3      		LDX ANSN1
  5A76   B1   61      		LDA (TOKPTR),Y
  5A78   95   00      		STA $00,X
  5A7A   C8           		INY
  5A7B   B1   61      		LDA (TOKPTR),Y
  5A7D   95   01      		STA $01,X	;(GETTOK)
  5A7F   A8           		TAY
  5A80   B5   00      		LDA $00,X
  5A82   AA           		TAX
  5A83   EC   0C   03 		CPX LIF
  5A86   D0   13      		BNE EXFW2
  5A88   CC   0D   03 		CPY LIF+1
  5A8B   D0   0E      		BNE EXFW2
  5A8D   E6   AA      		INC TEMPN1
  5A8F   D0   02      		BNE EXIFWB
  5A91   E6   AB      		INC TEMPN1+1
  5A93   A2   61      	EXIFWB:	LDX #TOKPTR
  5A95   20   75   55 		JSR TTKADV
  5A98   4C   54   5A 		JMP EXFW
  5A9B   EC   08   03 	EXFW2:	CPX LELSE
  5A9E   D0   26      		BNE EXFW3
  5AA0   CC   09   03 		CPY LELSE+1
  5AA3   D0   21      		BNE EXFW3
  5AA5   38           		SEC
  5AA6   A5   AA      		LDA TEMPN1
  5AA8   E9   01      		SBC #$01
  5AAA   85   AA      		STA TEMPN1
  5AAC   B0   02      		BCS EXFWC
  5AAE   C6   AB      		DEC TEMPN1+1
  5AB0   A5   AB      	EXFWC:	LDA TEMPN1+1
  5AB2   C5   83      		CMP IFLEVL+1
  5AB4   90   AC      		BCC EXFWE
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-103
LOGO	MISCELLANEOUS AND EVALUATOR UTILITY ROUTINES

  5AB6   D0   06      		BNE EXFWD
  5AB8   A5   AA      		LDA TEMPN1
  5ABA   C5   82      		CMP IFLEVL
  5ABC   90   A4      		BCC EXFWE
  5ABE   A2   61      	EXFWD:	LDX #TOKPTR
  5AC0   20   75   55 		JSR TTKADV
  5AC3   4C   6E   5A 		JMP EXFWA1
  5AC6   EC   20   03 	EXFW3:	CPX RPAR
  5AC9   D0   05      		BNE EXFW4
  5ACB   CC   21   03 		CPY RPAR+1
  5ACE   F0   92      		BEQ EXFWE
  5AD0   20   EE   59 	EXFW4:	JSR SKPPTH
  5AD3   4C   54   5A 		JMP EXFW
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-104
LOGO	MISCELLANEOUS AND EVALUATOR UTILITY ROUTINES

  5AD6   A5   08      	EDTSTP:	LDA EDSW
  5AD8   C9   01      		CMP #$01
  5ADA   F0   36      		BEQ EDTSR1	;Error if already in CHANGE (not EDIT) mode
  5ADC   A5   7C      		LDA LEVNUM
  5ADE   D0   37      		BNE EDTSR2
  5AE0   A5   7D      		LDA LEVNUM+1
  5AE2   D0   33      		BNE EDTSR2
  5AE4   A5   62      		LDA TOKPTR+1
  5AE6   F0   32      		BEQ EDTSR3
  5AE8   A0   00      		LDY #$00
  5AEA   B1   61      		LDA (TOKPTR),Y
  5AEC   85   A2      		STA ARG1
  5AEE   C8           		INY
  5AEF   B1   61      		LDA (TOKPTR),Y
  5AF1   85   A3      		STA ARG1+1	;(GETTOK)
  5AF3   A2   61      		LDX #TOKPTR
  5AF5   20   75   55 		JSR TTKADV
  5AF8   A2   A2      		LDX #ARG1
  5AFA   20   84   5D 		JSR GETTYP
  5AFD   C9   07      		CMP #SATOM
  5AFF   F0   1C      		BEQ EDTSR4
  5B01   C9   01      		CMP #ATOM
  5B03   D0   1B      		BNE EDTSR5
  5B05   A5   A2      		LDA ARG1
  5B07   85   84      		STA EDTATM
  5B09   85   86      		STA PODEFL
  5B0B   A5   A3      		LDA ARG1+1
  5B0D   85   85      		STA EDTATM+1
  5B0F   85   87      		STA PODEFL+1
  5B11   60           	RTS2:	RTS
  5B12   A9   15      	EDTSR1:	LDA #XEDT
  5B14   4C   47   61 		JMP ERROR
  5B17   4C   DD   7E 	EDTSR2:	JMP STTLR2	;(ERROR XETL)
  5B1A   4C   52   7C 	EDTSR3:	JMP SCMMT1	;(ERROR XEOL)
  5B1D   4C   6B   84 	EDTSR4:	JMP SPO5S	;(ERROR XUBL,ARG1)
  5B20   4C   15   7C 	EDTSR5:	JMP SMAKE2	;(ERROR XWTA,ARG1,CURTOK)
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-105
LOGO	MISCELLANEOUS AND EVALUATOR UTILITY ROUTINES

                      	;Tries to find a block of (Y) contiguous free words in nodespace.
                      	;If successful, return the start addr in (X). If not, return LNIL.
                      
  5B23   86   B2      	GETWDS:	STX ANSN		;ANSN is ans
  5B25   84   B3      		STY ANSN1		;ANSN1 is size
  5B27   A9   00      		LDA #$00
  5B29   95   00      		STA $00,X		;zero ans
  5B2B   95   01      		STA $01,X
  5B2D   B9   00   00 		LDA $00,Y
  5B30   D0   05      		BNE GW1A
  5B32   B9   01   00 		LDA $01,Y
  5B35   F0   DA      		BEQ RTS2		;If size=0, just return with ANS = 0
  5B37   20   43   5B 	GW1A:	JSR GW1			;try once
  5B3A   A6   B2      		LDX ANSN
  5B3C   B5   01      		LDA $01,X
  5B3E   D0   D1      		BNE RTS2		;if found something, quit.
  5B40   20   5B   62 		JSR GARCOL		;otherwise, try again after a GC
                      
  5B43   A9   00      	GW1:	LDA #$00
  5B45   85   A9      		STA TEMPN+1		;Zero lastptr (TEMPN)
  5B47   85   B1      		STA TEMPN4+1		;and lastptr1 (TEMPN4)
  5B49   A5   5F      		LDA FRLIST		;init ptr (TEMPN1) and
  5B4B   85   AA      		STA TEMPN1		;ptr1 (TEMPN3) to freelist
  5B4D   85   AE      		STA TEMPN3
  5B4F   A5   60      		LDA FRLIST+1
  5B51   85   AB      		STA TEMPN1+1
  5B53   85   AF      		STA TEMPN3+1
  5B55   A6   B2      	GW1W:	LDX ANSN
  5B57   B5   01      		LDA $01,X		;if ans neq LNIL, done
  5B59   F0   10      		BEQ GW1WA		;cuz found something
  5B5B   A6   B3      	GWRTS:	LDX ANSN1
  5B5D   18           		CLC
  5B5E   A5   C3      		LDA NNODES
  5B60   75   00      		ADC $00,X
  5B62   85   C3      		STA NNODES		;Adjust allocation pointer
  5B64   A5   C4      		LDA NNODES+1
  5B66   75   01      		ADC $01,X
  5B68   85   C4      		STA NNODES+1
  5B6A   60           		RTS
  5B6B   A5   AB      	GW1WA:	LDA TEMPN1+1		;if ptr1 = LNIL, done cuz been thru whole
  5B6D   F0   A2      		BEQ RTS2		;freelist, found nothing
  5B6F   A9   00      	GW1W1:	LDA #$00
  5B71   85   AC      		STA TEMPN2		;sofar (TEMPN2) := 0
  5B73   85   AD      		STA TEMPN2+1
  5B75   85   C0      		STA ANSN2		;contig (ANSN2) := 0 (T)
  5B77   A6   B3      	GW1X:	LDX ANSN1
  5B79   A5   AD      		LDA TEMPN2+1
  5B7B   D5   01      		CMP $01,X
  5B7D   90   14      		BCC GW1X2		;if sofar >= size, go if2
  5B7F   D0   4F      		BNE GWIF2
  5B81   A5   AC      		LDA TEMPN2
  5B83   D5   00      		CMP $00,X
  5B85   B0   49      		BCS GWIF2
  5B87   A5   C0      		LDA ANSN2		;if contig = false, go else
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-106
LOGO	MISCELLANEOUS AND EVALUATOR UTILITY ROUTINES

  5B89   D0   6C      		BNE GWELSE
  5B8B   A5   AE      		LDA TEMPN3
  5B8D   D0   04      		BNE GW1X2		;if ptr1 = LNIL, goto else
  5B8F   A5   AF      		LDA TEMPN3+1
  5B91   F0   64      		BEQ GWELSE
  5B93   18           	GW1X2:	CLC
  5B94   A5   AC      		LDA TEMPN2
  5B96   69   02      		ADC #$02		;sofar := sofar + 2
  5B98   85   AC      		STA TEMPN2
  5B9A   90   02      		BCC GW1X3
  5B9C   E6   AD      		INC TEMPN2+1
  5B9E   A0   02      	GW1X3:	LDY #$02
  5BA0   B1   AE      		LDA (TEMPN3),Y
  5BA2   85   A6      		STA TEMPNH		;temp (TEMPNH) := (cdr ptr1)
  5BA4   C8           		INY
  5BA5   B1   AE      		LDA (TEMPN3),Y
  5BA7   85   A7      		STA TEMPNH+1		;(CDR)
  5BA9   18           		CLC
  5BAA   A5   A6      		LDA TEMPNH		;add 4 to temp and see if
  5BAC   69   04      		ADC #$04		;result is = ptr1
  5BAE   AA           		TAX
  5BAF   A5   A7      		LDA TEMPNH+1
  5BB1   69   00      		ADC #$00
  5BB3   C5   AF      		CMP TEMPN3+1
  5BB5   D0   04      		BNE NCNTIG
  5BB7   E4   AE      		CPX TEMPN3
  5BB9   F0   02      		BEQ CONTIG		;if so, contig := 1 (false)
  5BBB   E6   C0      	NCNTIG:	INC ANSN2
  5BBD   A5   AE      	CONTIG:	LDA TEMPN3
  5BBF   85   B0      		STA TEMPN4		;lastptr1 := ptr1
  5BC1   A5   AF      		LDA TEMPN3+1
  5BC3   85   B1      		STA TEMPN4+1
  5BC5   A5   A6      		LDA TEMPNH
  5BC7   85   AE      		STA TEMPN3		;ptr1 := temp
  5BC9   A5   A7      		LDA TEMPNH+1
  5BCB   85   AF      		STA TEMPN3+1
  5BCD   4C   77   5B 		JMP GW1X		;round the while loop
  5BD0   A5   A9      	GWIF2:	LDA TEMPN+1		;if lastptr = LNIL, freelist := ptr1
  5BD2   D0   0B      		BNE GWIF3
  5BD4   A5   AE      		LDA TEMPN3
  5BD6   85   5F      		STA FRLIST		;freelist := ptr1
  5BD8   A5   AF      		LDA TEMPN3+1
  5BDA   85   60      		STA FRLIST+1
  5BDC   4C   EA   5B 		JMP GWIF4
  5BDF   A0   02      	GWIF3:	LDY #$02		;else (rplacd lasptr ptr1)
  5BE1   A5   AE      		LDA TEMPN3
  5BE3   91   A8      		STA (TEMPN),Y
  5BE5   C8           		INY
  5BE6   A5   AF      		LDA TEMPN3+1
  5BE8   91   A8      		STA (TEMPN),Y		;(rplacd)
  5BEA   A6   B2      	GWIF4:	LDX ANSN
  5BEC   A5   B0      		LDA TEMPN4
  5BEE   95   00      		STA $00,X		;ans := lastptr1
  5BF0   A5   B1      		LDA TEMPN4+1
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-107
LOGO	MISCELLANEOUS AND EVALUATOR UTILITY ROUTINES

  5BF2   95   01      		STA $01,X
  5BF4   4C   55   5B 		JMP GW1W		;back to top
  5BF7   A5   AE      	GWELSE:	LDA TEMPN3
  5BF9   85   AA      		STA TEMPN1		;ptr := ptr1
  5BFB   A5   AF      		LDA TEMPN3+1
  5BFD   85   AB      		STA TEMPN1+1
  5BFF   A5   B0      		LDA TEMPN4
  5C01   85   A8      		STA TEMPN		;lastptr := lastptr1
  5C03   A5   B1      		LDA TEMPN4+1
  5C05   85   A9      		STA TEMPN+1
  5C07   4C   55   5B 		JMP GW1W		;back to top
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-108
LOGO	MISCELLANEOUS AND EVALUATOR UTILITY ROUTINES

  5C0A   85   C1      	STUFF:	STA ANSN3		;try to associate the function (ATOM)
  5C0C   86   C2      		STX ANSNX		;definition with the name (BODY).
  5C0E   B5   00      		LDA $00,X
  5C10   85   A6      		STA TEMPNH
  5C12   B5   01      		LDA $01,X
  5C14   85   A7      		STA TEMPNH+1		;TEMPNH is BODY
  5C16   A0   00      		LDY #$00
  5C18   B1   A6      		LDA (TEMPNH),Y
  5C1A   85   B8      		STA TEMPN7
  5C1C   C8           		INY
  5C1D   B1   A6      		LDA (TEMPNH),Y
  5C1F   85   B9      		STA TEMPN7+1	;(CAR) to LINE
  5C21   A2   BE      		LDX #TEMPX2	;TEMPX2 becomes NARGS
  5C23   A0   B8      		LDY #TEMPN7
  5C25   20   32   56 		JSR GETLEN
  5C28   A9   00      		LDA #$00
  5C2A   85   B6      		STA TEMPN6	;TEMPN6 is SIZE
  5C2C   85   B7      		STA TEMPN6+1
  5C2E   A6   C2      		LDX ANSNX
  5C30   B5   00      		LDA $00,X
  5C32   85   A6      		STA TEMPNH	;TEMPNH is BODY
  5C34   B5   01      		LDA $01,X
  5C36   85   A7      		STA TEMPNH+1
  5C38   A5   A7      	GTSZW:	LDA TEMPNH+1
  5C3A   F0   30      		BEQ GTSZND
  5C3C   A0   00      		LDY #$00
  5C3E   B1   A6      		LDA (TEMPNH),Y
  5C40   85   A8      		STA TEMPN
  5C42   C8           		INY
  5C43   B1   A6      		LDA (TEMPNH),Y
  5C45   85   A9      		STA TEMPN+1	;(CAR) to LINE (GETSIZ local)
  5C47   C8           		INY
  5C48   B1   A6      		LDA (TEMPNH),Y
  5C4A   AA           		TAX
  5C4B   C8           		INY
  5C4C   B1   A6      		LDA (TEMPNH),Y
  5C4E   85   A7      		STA TEMPNH+1
  5C50   86   A6      		STX TEMPNH	;(CDR)
  5C52   A5   A9      	GTSZX:	LDA TEMPN+1
  5C54   F0   E2      		BEQ GTSZW
  5C56   E6   B6      	GTSZX1:	INC TEMPN6
  5C58   D0   02      		BNE GTSZX2
  5C5A   E6   B7      		INC TEMPN6+1
  5C5C   A0   02      	GTSZX2:	LDY #$02
  5C5E   B1   A8      		LDA (TEMPN),Y
  5C60   AA           		TAX
  5C61   C8           		INY
  5C62   B1   A8      		LDA (TEMPN),Y
  5C64   85   A9      		STA TEMPN+1
  5C66   86   A8      		STX TEMPN	;(CDR)
  5C68   D0   EC      		BNE GTSZX1
  5C6A   F0   CC      		BEQ GTSZW
  5C6C   A2   B4      	GTSZND:	LDX #TEMPN5	;TEMPN5 becomes PTR
  5C6E   A0   B6      		LDY #TEMPN6	;SIZE
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-109
LOGO	MISCELLANEOUS AND EVALUATOR UTILITY ROUTINES

  5C70   20   23   5B 		JSR GETWDS
  5C73   A5   B5      		LDA TEMPN5+1
  5C75   D0   09      		BNE STFF1
  5C77   A9   BE      	STFFA:	LDA #TEMPX2
  5C79   A4   C2      		LDY ANSNX
  5C7B   A6   C1      		LDX ANSN3
  5C7D   4C   A8   5D 		JMP PTFTXT	;PUT_FTEXT (FUNATOM, BODY, NARGS) (X,Y,A)
  5C80   A5   B4      	STFF1:	LDA TEMPN5
  5C82   85   1C      		STA AREA1
  5C84   A5   B5      		LDA TEMPN5+1
  5C86   85   1D      		STA AREA1+1
  5C88   A5   B6      		LDA TEMPN6
  5C8A   85   18      		STA SIZE1
  5C8C   A5   B7      		LDA TEMPN6+1
  5C8E   85   19      		STA SIZE1+1
  5C90   A2   B6      		LDX #TEMPN6
  5C92   A4   C2      		LDY ANSNX	;BODY
  5C94   20   32   56 		JSR GETLEN
  5C97   18           		CLC
  5C98   A5   B6      		LDA TEMPN6
  5C9A   69   02      		ADC #$02
  5C9C   85   B6      		STA TEMPN6
  5C9E   90   02      		BCC ADHK55
  5CA0   E6   B7      		INC TEMPN6+1
  5CA2   A2   BC      	ADHK55:	LDX #TEMPX1	;TEMPX1 becomes INDEX
  5CA4   A0   B6      		LDY #TEMPN6
  5CA6   20   23   5B 		JSR GETWDS
  5CA9   A5   BD      		LDA TEMPX1+1
  5CAB   D0   07      		BNE STFF2
  5CAD   85   18      		STA SIZE1
  5CAF   85   19      		STA SIZE1+1
  5CB1   4C   77   5C 		JMP STFFA
  5CB4   A5   BC      	STFF2:	LDA TEMPX1
  5CB6   85   1E      		STA AREA2
  5CB8   85   AA      		STA TEMPN1	;TEMPN1 is INDEX1
  5CBA   A5   BD      		LDA TEMPX1+1
  5CBC   85   1F      		STA AREA2+1
  5CBE   85   AB      		STA TEMPN1+1
  5CC0   18           		CLC
  5CC1   A5   B6      		LDA TEMPN6
  5CC3   69   02      		ADC #$02
  5CC5   85   1A      		STA SIZE2
  5CC7   A5   B7      		LDA TEMPN6+1
  5CC9   69   00      		ADC #$00
  5CCB   85   1B      		STA SIZE2+1
  5CCD   A6   C2      		LDX ANSNX
  5CCF   B5   00      		LDA $00,X
  5CD1   85   A6      		STA TEMPNH	;TEMPNH is BODY
  5CD3   B5   01      		LDA $01,X
  5CD5   85   A7      		STA TEMPNH+1
  5CD7   A5   A7      	STFFW:	LDA TEMPNH+1
  5CD9   F0   61      		BEQ STFFWE
  5CDB   A0   00      	STFFW1:	LDY #$00
  5CDD   A5   B4      		LDA TEMPN5	;PTR
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-110
LOGO	MISCELLANEOUS AND EVALUATOR UTILITY ROUTINES

  5CDF   91   AA      		STA (TEMPN1),Y
  5CE1   C8           		INY
  5CE2   A5   B5      		LDA TEMPN5+1
  5CE4   91   AA      		STA (TEMPN1),Y	;(PUTBAR)
  5CE6   18           		CLC
  5CE7   A5   AA      		LDA TEMPN1
  5CE9   69   02      		ADC #$02
  5CEB   85   AA      		STA TEMPN1
  5CED   90   02      		BCC STFFX
  5CEF   E6   AB      		INC TEMPN1+1
  5CF1   A5   B9      	STFFX:	LDA TEMPN7+1	;LINE
  5CF3   F0   2E      		BEQ STFFXE
  5CF5   A0   00      		LDY #$00
  5CF7   B1   B8      		LDA (TEMPN7),Y
  5CF9   85   AE      		STA TEMPN3	;TEMPN3 is TOKEN
  5CFB   C8           		INY
  5CFC   B1   B8      		LDA (TEMPN7),Y
  5CFE   85   AF      		STA TEMPN3+1	;(CAR)
  5D00   C8           		INY
  5D01   B1   B8      		LDA (TEMPN7),Y
  5D03   AA           		TAX
  5D04   C8           		INY
  5D05   B1   B8      		LDA (TEMPN7),Y
  5D07   85   B9      		STA TEMPN7+1
  5D09   86   B8      		STX TEMPN7	;(CDR)
  5D0B   A0   00      		LDY #$00
  5D0D   A5   AE      		LDA TEMPN3
  5D0F   91   B4      		STA (TEMPN5),Y
  5D11   C8           		INY
  5D12   A5   AF      		LDA TEMPN3+1
  5D14   91   B4      		STA (TEMPN5),Y	;(PUTBAR)
  5D16   18           		CLC
  5D17   A5   B4      		LDA TEMPN5
  5D19   69   02      		ADC #$02
  5D1B   85   B4      		STA TEMPN5
  5D1D   90   D2      		BCC STFFX
  5D1F   E6   B5      		INC TEMPN5+1
  5D21   D0   CE      		BNE STFFX	;(Always)
  5D23   A0   03      	STFFXE:	LDY #$03
  5D25   B1   A6      		LDA (TEMPNH),Y
  5D27   AA           		TAX
  5D28   88           		DEY
  5D29   B1   A6      		LDA (TEMPNH),Y
  5D2B   85   A6      		STA TEMPNH	;(CDR)
  5D2D   86   A7      		STX TEMPNH+1
  5D2F   88           		DEY
  5D30   B1   A6      		LDA (TEMPNH),Y
  5D32   85   B9      		STA TEMPN7+1
  5D34   88           		DEY
  5D35   B1   A6      		LDA (TEMPNH),Y
  5D37   85   B8      		STA TEMPN7	;(CAR)
  5D39   4C   D7   5C 		JMP STFFW
  5D3C   A0   00      	STFFWE:	LDY #$00
  5D3E   A5   B4      		LDA TEMPN5
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-111
LOGO	MISCELLANEOUS AND EVALUATOR UTILITY ROUTINES

  5D40   91   AA      		STA (TEMPN1),Y	;TEMPN1 is INDEX1
  5D42   C8           		INY
  5D43   A5   B5      		LDA TEMPN5+1
  5D45   91   AA      		STA (TEMPN1),Y	;(PUTBAR)
  5D47   C8           		INY
  5D48   A9   00      		LDA #$00
  5D4A   91   AA      		STA (TEMPN1),Y
  5D4C   C8           		INY
  5D4D   91   AA      		STA (TEMPN1),Y	;(PUTBAR)
  5D4F   A2   BC      		LDX #TEMPX1	;INDEX
  5D51   A9   0B      		LDA #FPACK
  5D53   20   F0   53 		JSR PUTTYP
  5D56   A9   BE      		LDA #TEMPX2
  5D58   A0   BC      		LDY #TEMPX1
  5D5A   A6   C1      		LDX ANSN3
  5D5C   20   A8   5D 		JSR PTFTXT	;(X,Y,A)
  5D5F   A9   00      		LDA #$00
  5D61   85   18      		STA SIZE1
  5D63   85   19      		STA SIZE1+1
  5D65   85   1A      		STA SIZE2
  5D67   85   1B      		STA SIZE2+1
  5D69   60           	RTS3:	RTS
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-112
LOGO	MISCELLANEOUS AND EVALUATOR UTILITY ROUTINES

  5D6A   46   A7      	TYPACS:	LSR TEMPNH+1
  5D6C   66   A6      		ROR TEMPNH
  5D6E   46   A7      		LSR TEMPNH+1
  5D70   66   A6      		ROR TEMPNH
  5D72   18           		CLC
  5D73   A5   A6      		LDA TEMPNH
  5D75   69   60      		ADC #TYPBAS&$FF
  5D77   85   A6      		STA TEMPNH
  5D79   A5   A7      		LDA TEMPNH+1
  5D7B   69   C2      		ADC #TYPBAS^
  5D7D   85   A7      		STA TEMPNH+1
  5D7F   A0   00      		LDY #$00
  5D81   B1   A6      		LDA (TEMPNH),Y
  5D83   60           		RTS
                      
  5D84   B5   01      	GETTYP:	LDA $01,X
  5D86   F0   1D      		BEQ GETTPE
  5D88   B5   00      		LDA $00,X
  5D8A   85   A6      		STA TEMPNH
  5D8C   B5   01      		LDA $01,X
  5D8E   85   A7      		STA TEMPNH+1
  5D90   20   6A   5D 		JSR TYPACS
  5D93   C9   01      		CMP #ATOM
  5D95   F0   04      		BEQ GETTP4
  5D97   C9   07      		CMP #SATOM
  5D99   D0   0A      		BNE GETTPE
  5D9B   A8           	GETTP4:	TAY
  5D9C   B5   00      		LDA $00,X
  5D9E   29   03      		AND #$03
  5DA0   F0   04      		BEQ GETTPF
  5DA2   18           		CLC
  5DA3   69   07      		ADC #$07
  5DA5   60           	GETTPE:	RTS
  5DA6   98           	GETTPF:	TYA
  5DA7   60           		RTS
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-113
LOGO	MISCELLANEOUS AND EVALUATOR UTILITY ROUTINES

  5DA8   84   C2      	PTFTXT:	STY ANSNX	;FUNTEXT
  5DAA   85   C1      		STA ANSN3	;NARGS
  5DAC   86   B8      		STX TEMPN7	;ATOMM
  5DAE   20   84   5D 		JSR GETTYP
  5DB1   C9   01      		CMP #ATOM
  5DB3   F0   07      		BEQ PTFTX2
  5DB5   A4   B8      		LDY TEMPN7
  5DB7   A9   0C      		LDA #XUBL
  5DB9   4C   47   61 		JMP ERROR
  5DBC   A6   B8      	PTFTX2:	LDX TEMPN7
  5DBE   B5   00      		LDA $00,X
  5DC0   85   A6      		STA TEMPNH	;TEMPNH is ATOMM
  5DC2   B5   01      		LDA $01,X
  5DC4   85   A7      		STA TEMPNH+1
  5DC6   A0   02      		LDY #$02
  5DC8   B1   A6      		LDA (TEMPNH),Y
  5DCA   85   B4      		STA TEMPN5	;TEMPN5 is CELL
  5DCC   C8           		INY
  5DCD   B1   A6      		LDA (TEMPNH),Y
  5DCF   85   B5      		STA TEMPN5+1	;(CDR)
  5DD1   A0   00      		LDY #$00
  5DD3   B1   B4      		LDA (TEMPN5),Y
  5DD5   85   B6      		STA TEMPN6	;TEMPN6 is FUNCT
  5DD7   C8           		INY
  5DD8   B1   B4      		LDA (TEMPN5),Y
  5DDA   85   B7      		STA TEMPN6+1	;(CAR)
  5DDC   D0   40      		BNE PTFTX3
  5DDE   A6   C2      		LDX ANSNX	;FUNTEXT ptr.
  5DE0   B5   00      		LDA $00,X
  5DE2   85   88      		STA MARK1
  5DE4   B5   01      		LDA $01,X
  5DE6   85   89      		STA MARK1+1
  5DE8   A9   04      		LDA #$04
  5DEA   85   BA      		STA TEMPN8
  5DEC   A9   00      		LDA #$00
  5DEE   85   BB      		STA TEMPN8+1
  5DF0   A0   BA      		LDY #TEMPN8
  5DF2   A2   B6      		LDX #TEMPN6
  5DF4   20   23   5B 		JSR GETWDS
  5DF7   A0   01      		LDY #$01
  5DF9   A5   B7      		LDA TEMPN6+1	;FUNCT
  5DFB   F0   42      		BEQ PTFER
  5DFD   91   B4      		STA (TEMPN5),Y	;CELL
  5DFF   88           		DEY
  5E00   A5   B6      		LDA TEMPN6
  5E02   91   B4      		STA (TEMPN5),Y	;(RPLACA)
  5E04   A2   B6      		LDX #TEMPN6
  5E06   A9   06      		LDA #UFUN
  5E08   20   F0   53 		JSR PUTTYP
  5E0B   A0   06      		LDY #$06
  5E0D   A6   B8      		LDX TEMPN7	;ATOMM
  5E0F   B5   00      		LDA $00,X
  5E11   91   B6      		STA (TEMPN6),Y
  5E13   C8           		INY
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-114
LOGO	MISCELLANEOUS AND EVALUATOR UTILITY ROUTINES

  5E14   B5   01      		LDA $01,X
  5E16   91   B6      		STA (TEMPN6),Y	;(PUTBAR)
  5E18   A9   00      		LDA #$00
  5E1A   85   88      		STA MARK1
  5E1C   85   89      		STA MARK1+1
  5E1E   A0   00      	PTFTX3:	LDY #$00
  5E20   98           		TYA
  5E21   91   B6      		STA (TEMPN6),Y
  5E23   C8           		INY
  5E24   91   B6      		STA (TEMPN6),Y	;(PUTBAR)
  5E26   C8           		INY
  5E27   A6   C2      		LDX ANSNX
  5E29   B5   00      		LDA $00,X	;FUNTEXT
  5E2B   91   B6      		STA (TEMPN6),Y
  5E2D   C8           		INY
  5E2E   B5   01      		LDA $01,X
  5E30   91   B6      		STA (TEMPN6),Y	;(PUTBAR)
  5E32   C8           		INY
  5E33   A6   C1      		LDX ANSN3	;NARGS
  5E35   B5   00      		LDA $00,X
  5E37   91   B6      		STA (TEMPN6),Y
  5E39   C8           		INY
  5E3A   B5   01      		LDA $01,X
  5E3C   91   B6      		STA (TEMPN6),Y	;(PUTBAR)
  5E3E   60           	PTFTXE:	RTS
  5E3F   4C   B3   53 	PTFER:	JMP CONSR	;(No Nodes, most likely) "No storage left" zapcode
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-115
LOGO	MISCELLANEOUS AND EVALUATOR UTILITY ROUTINES

  5E42   85   C0      	UNSTUF:	STA ANSN2	;ANSN2 is TEXTP
  5E44   84   B3      		STY ANSN1	;ANSN1 is BODY ptr. (X is FUN ptr.)
  5E46   B5   00      		LDA $00,X
  5E48   85   A6      		STA TEMPNH
  5E4A   B5   01      		LDA $01,X
  5E4C   85   A7      		STA TEMPNH+1
  5E4E   A0   02      		LDY #$02
  5E50   B1   A6      		LDA (TEMPNH),Y
  5E52   85   AA      		STA TEMPN1	;TEMPN1 is INDEX
  5E54   C8           		INY
  5E55   B1   A6      		LDA (TEMPNH),Y
  5E57   85   AB      		STA TEMPN1+1	;(CDR)
  5E59   A2   AA      		LDX #TEMPN1
  5E5B   20   84   5D 		JSR GETTYP
  5E5E   C9   0B      		CMP #FPACK
  5E60   F0   0B      		BEQ USTF2
  5E62   A6   B3      	USTF1:	LDX ANSN1
  5E64   A5   AA      		LDA TEMPN1
  5E66   95   00      		STA $00,X
  5E68   A5   AB      		LDA TEMPN1+1
  5E6A   95   01      		STA $01,X
  5E6C   60           	USTFE1:	RTS
  5E6D   A9   00      	USTF2:	LDA #$00
  5E6F   85   88      		STA MARK1
  5E71   85   89      		STA MARK1+1
  5E73   A5   14      		LDA SP
  5E75   85   B0      		STA TEMPN4	;TEMPN4 is STACK
  5E77   A5   15      		LDA SP+1
  5E79   85   B1      		STA TEMPN4+1
  5E7B   A0   00      	USTFW2:	LDY #$00
  5E7D   B1   AA      		LDA (TEMPN1),Y
  5E7F   85   AC      		STA TEMPN2	;TEMPN2 is PTR
  5E81   C8           		INY
  5E82   B1   AA      		LDA (TEMPN1),Y
  5E84   85   AD      		STA TEMPN2+1	;(GETBAR)
  5E86   C8           		INY
  5E87   B1   AA      		LDA (TEMPN1),Y
  5E89   85   AE      		STA TEMPN3	;TEMPN3 is ENDPTR
  5E8B   C8           		INY
  5E8C   B1   AA      		LDA (TEMPN1),Y
  5E8E   85   AF      		STA TEMPN3+1	;(GETBAR)
  5E90   A5   AF      	USTFW:	LDA TEMPN3+1
  5E92   F0   16      		BEQ USTFWE
  5E94   20   12   54 		JSR STKTST
  5E97   A2   AC      		LDX #TEMPN2
  5E99   20   25   52 		JSR PUSHP
  5E9C   18           		CLC
  5E9D   A5   AA      		LDA TEMPN1
  5E9F   69   02      		ADC #$02
  5EA1   85   AA      		STA TEMPN1
  5EA3   90   D6      		BCC USTFW2
  5EA5   E6   AB      		INC TEMPN1+1
  5EA7   4C   7B   5E 		JMP USTFW2
  5EAA   A5   AC      	USTFWE:	LDA TEMPN2
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-116
LOGO	MISCELLANEOUS AND EVALUATOR UTILITY ROUTINES

  5EAC   85   AE      		STA TEMPN3
  5EAE   A5   AD      		LDA TEMPN2+1
  5EB0   85   AF      		STA TEMPN3+1
  5EB2   A5   B0      	USTFX:	LDA TEMPN4
  5EB4   C5   14      		CMP SP
  5EB6   D0   06      		BNE USTFX1
  5EB8   A5   B1      		LDA TEMPN4+1
  5EBA   C5   15      		CMP SP+1
  5EBC   F0   74      		BEQ USTFXE
  5EBE   A2   AC      	USTFX1:	LDX #TEMPN2
  5EC0   20   6C   52 		JSR POP
  5EC3   A9   00      		LDA #$00
  5EC5   85   8A      		STA MARK2
  5EC7   85   8B      		STA MARK2+1
  5EC9   A5   AE      	USTFY:	LDA TEMPN3
  5ECB   C5   AC      		CMP TEMPN2
  5ECD   D0   06      		BNE USTFY1
  5ECF   A5   AF      		LDA TEMPN3+1
  5ED1   C5   AD      		CMP TEMPN2+1
  5ED3   F0   24      		BEQ USTFYE
  5ED5   38           	USTFY1:	SEC
  5ED6   A5   AE      		LDA TEMPN3
  5ED8   E9   02      		SBC #$02
  5EDA   85   AE      		STA TEMPN3
  5EDC   B0   02      		BCS USTFY2
  5EDE   C6   AF      		DEC TEMPN3+1
  5EE0   A0   00      	USTFY2:	LDY #$00
  5EE2   B1   AE      		LDA (TEMPN3),Y
  5EE4   85   A8      		STA TEMPN
  5EE6   C8           		INY
  5EE7   B1   AE      		LDA (TEMPN3),Y
  5EE9   85   A9      		STA TEMPN+1	;(GETBAR)
  5EEB   A9   00      		LDA #LIST
  5EED   A2   8A      		LDX #MARK2
  5EEF   86   B2      		STX ANSN
  5EF1   A0   A8      		LDY #TEMPN
  5EF3   20   14   53 		JSR CONS
  5EF6   4C   C9   5E 		JMP USTFY
  5EF9   A2   8A      	USTFYE:	LDX #MARK2
  5EFB   A5   B0      		LDA TEMPN4
  5EFD   C5   14      		CMP SP
  5EFF   D0   0E      		BNE USTFX2
  5F01   A5   B1      		LDA TEMPN4+1
  5F03   C5   15      		CMP SP+1
  5F05   D0   08      		BNE USTFX2
  5F07   A9   00      		LDA #LIST
  5F09   20   F0   53 		JSR PUTTYP
  5F0C   4C   24   5F 		JMP USTFX3
  5F0F   A9   0C      	USTFX2:	LDA #FLIST
  5F11   20   F0   53 		JSR PUTTYP
  5F14   A5   C0      		LDA ANSN2
  5F16   F0   0C      		BEQ USTFX3
  5F18   A0   02      		LDY #$02
  5F1A   B1   8A      		LDA (MARK2),Y
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-117
LOGO	MISCELLANEOUS AND EVALUATOR UTILITY ROUTINES

  5F1C   AA           		TAX
  5F1D   C8           		INY
  5F1E   B1   8A      		LDA (MARK2),Y
  5F20   85   8B      		STA MARK2+1
  5F22   86   8A      		STX MARK2	;(CDR)
  5F24   A2   88      	USTFX3:	LDX #MARK1
  5F26   86   B2      		STX ANSN
  5F28   A0   8A      		LDY #MARK2
  5F2A   A9   00      		LDA #LIST
  5F2C   20   14   53 		JSR CONS
  5F2F   4C   AA   5E 		JMP USTFWE
  5F32   A6   B3      	USTFXE:	LDX ANSN1	;BODY
  5F34   A5   88      		LDA MARK1
  5F36   95   00      		STA $00,X
  5F38   A5   89      		LDA MARK1+1
  5F3A   95   01      		STA $01,X
  5F3C   A9   00      		LDA #$00
  5F3E   4C   2F   51 		JMP CLMK2	;Clear MARK1, MARK2
  5F41   60           	USTFE:	RTS
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-118
LOGO	MISCELLANEOUS AND EVALUATOR UTILITY ROUTINES

  5F42   86   B3      	DEFUN:	STX ANSN1	;ANSN1 is LISTT
  5F44   84   C0      		STY ANSN2	;ANSN2 is ATOMM
  5F46   B5   01      		LDA $01,X
  5F48   D0   05      		BNE DEFUN1
  5F4A   A6   C0      		LDX ANSN2
  5F4C   4C   73   56 		JMP UNFUNC
  5F4F   20   53   52 	DEFUN1:	JSR VPUSHP
  5F52   A9   0A      		LDA #LININC
  5F54   85   B0      		STA TEMPN4	;TEMPN4 is NUMBER
  5F56   A9   00      		LDA #$00
  5F58   85   B1      		STA TEMPN4+1
  5F5A   A5   16      		LDA VSP
  5F5C   85   AA      		STA TEMPN1	;TEMPN1 is PTR
  5F5E   A5   17      		LDA VSP+1
  5F60   85   AB      		STA TEMPN1+1
  5F62   A6   B3      		LDX ANSN1
  5F64   B5   00      		LDA $00,X
  5F66   85   A8      		STA TEMPN
  5F68   B5   01      		LDA $01,X
  5F6A   85   A9      		STA TEMPN+1
  5F6C   A0   00      		LDY #$00
  5F6E   B1   A8      		LDA (TEMPN),Y
  5F70   85   AC      		STA TEMPN2
  5F72   C8           		INY
  5F73   B1   A8      		LDA (TEMPN),Y
  5F75   85   AD      		STA TEMPN2+1	;(CAR)
  5F77   A2   AC      		LDX #TEMPN2
  5F79   20   53   52 		JSR VPUSHP
  5F7C   A0   02      		LDY #$02
  5F7E   B1   A8      		LDA (TEMPN),Y
  5F80   85   AC      		STA TEMPN2	;TEMPN2 is TLIST
  5F82   C8           		INY
  5F83   B1   A8      		LDA (TEMPN),Y
  5F85   85   AD      		STA TEMPN2+1	;(CDR)
  5F87   A5   AD      	DEFUNW:	LDA TEMPN2+1
  5F89   F0   40      		BEQ DEFNWE
  5F8B   A0   00      		LDY #$00
  5F8D   B1   AC      		LDA (TEMPN2),Y
  5F8F   85   AE      		STA TEMPN3	;TEMPN3 is T1
  5F91   C8           		INY
  5F92   B1   AC      		LDA (TEMPN2),Y
  5F94   85   AF      		STA TEMPN3+1	;(CAR)
  5F96   A2   AE      		LDX #TEMPN3
  5F98   20   84   5D 		JSR GETTYP
  5F9B   C9   00      		CMP #LIST
  5F9D   D0   5A      		BNE DEFNER
  5F9F   A2   AE      		LDX #TEMPN3
  5FA1   86   B2      		STX ANSN
  5FA3   A0   B0      		LDY #TEMPN4
  5FA5   A9   0C      		LDA #FLIST
  5FA7   20   14   53 		JSR CONS
  5FAA   A2   AE      		LDX #TEMPN3
  5FAC   20   53   52 		JSR VPUSHP
  5FAF   A0   02      		LDY #$02
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-119
LOGO	MISCELLANEOUS AND EVALUATOR UTILITY ROUTINES

  5FB1   B1   AC      		LDA (TEMPN2),Y
  5FB3   AA           		TAX
  5FB4   C8           		INY
  5FB5   B1   AC      		LDA (TEMPN2),Y
  5FB7   85   AD      		STA TEMPN2+1
  5FB9   86   AC      		STX TEMPN2	;(CDR)
  5FBB   18           		CLC
  5FBC   A5   B0      		LDA TEMPN4
  5FBE   69   0A      		ADC #LININC
  5FC0   85   B0      		STA TEMPN4
  5FC2   90   C3      		BCC DEFUNW
  5FC4   E6   B1      		INC TEMPN4+1
  5FC6   10   BF      		BPL DEFUNW
  5FC8   4C   87   4E 		JMP EDLERR
  5FCB   A9   00      	DEFNWE:	LDA #$00
  5FCD   A6   B3      		LDX ANSN1	;LISTT
  5FCF   95   00      		STA $00,X
  5FD1   95   01      		STA $01,X
  5FD3   A5   AA      	DEFUNX:	LDA TEMPN1
  5FD5   C5   16      		CMP VSP
  5FD7   D0   06      		BNE DEFNX1
  5FD9   A5   AB      		LDA TEMPN1+1
  5FDB   C5   17      		CMP VSP+1
  5FDD   F0   13      		BEQ DEFNXE
  5FDF   A2   AE      	DEFNX1:	LDX #TEMPN3
  5FE1   20   85   52 		JSR VPOP
  5FE4   A6   B3      		LDX ANSN1
  5FE6   86   B2      		STX ANSN
  5FE8   A0   AE      		LDY #TEMPN3
  5FEA   A9   00      		LDA #LIST
  5FEC   20   14   53 		JSR CONS
  5FEF   4C   D3   5F 		JMP DEFUNX
  5FF2   A6   B3      	DEFNXE:	LDX ANSN1
  5FF4   A5   C0      		LDA ANSN2
  5FF6   4C   0A   5C 		JMP STUFF
  5FF9   A6   B3      	DEFNER:	LDX ANSN1
  5FFB   4C   EC   7E 		JMP STTLR4	;(ERROR XWTA,CURTOK)
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-120
LOGO	MISCELLANEOUS AND EVALUATOR UTILITY ROUTINES

  5FFE   86   B3      	INTERN:	STX ANSN1	;ANSN1 IS STRING PTR.
  6000   84   C0      		STY ANSN2	;ANSN2 IS ANS PTR.
  6002   20   53   52 		JSR VPUSHP
  6005   A5   92      		LDA OBLIST	;OBFIND starts
  6007   85   B0      		STA TEMPN4
  6009   A5   93      		LDA OBLIST+1
  600B   85   B1      		STA TEMPN4+1	;TEMPN4 IS OB_PTR
  600D   F0   5F      		BEQ OBFNFE
  600F   A0   00      	OBFW:	LDY #$00
  6011   A6   C0      		LDX ANSN2
  6013   B1   B0      		LDA (TEMPN4),Y
  6015   95   00      		STA $00,X
  6017   C8           		INY
  6018   B1   B0      		LDA (TEMPN4),Y
  601A   95   01      		STA $01,X	;(CAR) TO ANS
  601C   A0   B4      		LDY #TEMPN5	;TEMPN5 IS PNAME
  601E   20   88   59 		JSR GETPNM
  6021   A6   B3      		LDX ANSN1	;MATCH2 starts (STRING1 IS TEMPN5)
  6023   B5   00      		LDA $00,X
  6025   85   A6      		STA TEMPNH
  6027   B5   01      		LDA $01,X
  6029   85   A7      		STA TEMPNH+1	;TEMPNH IS STRING2
  602B   A5   A7      	MTC2W:	LDA TEMPNH+1
  602D   D0   09      		BNE MTC2W1
  602F   A5   B5      		LDA TEMPN5+1	;IF STRING2 IS 0 AND STRING1 ISN'T, NOT FOUND
  6031   D0   2D      		BNE OBFNF
  6033   A2   B4      		LDX #TEMPN5
  6035   4C   85   52 		JMP VPOP	;Pop the Vpushed string
  6038   A0   00      	MTC2W1:	LDY #$00
  603A   B1   A6      		LDA (TEMPNH),Y
  603C   D1   B4      		CMP (TEMPN5),Y
  603E   D0   20      		BNE OBFNF
  6040   C8           		INY
  6041   B1   A6      		LDA (TEMPNH),Y
  6043   D1   B4      		CMP (TEMPN5),Y
  6045   D0   19      		BNE OBFNF
  6047   C8           		INY
  6048   B1   A6      		LDA (TEMPNH),Y
  604A   AA           		TAX
  604B   C8           		INY
  604C   B1   A6      		LDA (TEMPNH),Y
  604E   85   A7      		STA TEMPNH+1
  6050   86   A6      		STX TEMPNH	;(CDR)
  6052   88           		DEY
  6053   B1   B4      		LDA (TEMPN5),Y
  6055   AA           		TAX
  6056   C8           		INY
  6057   B1   B4      		LDA (TEMPN5),Y
  6059   85   B5      		STA TEMPN5+1
  605B   86   B4      		STX TEMPN5	;(CDR)
  605D   4C   2B   60 		JMP MTC2W	;TRY NEXT TWO CHARACTERS
  6060   A0   02      	OBFNF:	LDY #$02	;TRY NEXT OBLIST OBJECT
  6062   B1   B0      		LDA (TEMPN4),Y	;(OB_PTR)
  6064   AA           		TAX
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-121
LOGO	MISCELLANEOUS AND EVALUATOR UTILITY ROUTINES

  6065   C8           		INY
  6066   B1   B0      		LDA (TEMPN4),Y
  6068   85   B1      		STA TEMPN4+1
  606A   86   B0      		STX TEMPN4	;(CDR)
  606C   D0   A1      		BNE OBFW
  606E   A6   B3      	OBFNFE:	LDX ANSN1	;IT'S NOT ON THE OBLIST
  6070   20   85   52 		JSR VPOP	;GET STRING BACK
  6073   A5   59      		LDA SOBLST	;SOBFIND starts
  6075   A6   C0      		LDX ANSN2	;ANS BECOMES SOBLIST POINTER
  6077   95   00      		STA $00,X
  6079   A5   5A      		LDA SOBLST+1
  607B   95   01      		STA $01,X
  607D   A6   C0      	SBFW:	LDX ANSN2	;OBJECT POINTER
  607F   B5   00      	SBFWX:	LDA $00,X
  6081   C5   5B      		CMP SOBTOP
  6083   D0   31      		BNE SBFW1
  6085   B5   01      		LDA $01,X
  6087   C5   5C      		CMP SOBTOP+1
  6089   D0   2B      		BNE SBFW1
  608B   A6   B3      	SBFWEN:	LDX ANSN1	;STRING
  608D   A0   00      	INTRNX:	LDY #$00	;Not found anywhere
  608F   84   AB      		STY TEMPN1+1
  6091   C8           		INY
  6092   84   AA      		STY TEMPN1
  6094   A5   C0      		LDA ANSN2
  6096   85   B2      		STA ANSN
  6098   A0   AA      		LDY #TEMPN1	;(NOVALUE)
  609A   A9   00      		LDA #LIST
  609C   20   14   53 		JSR CONS
  609F   A5   C0      		LDA ANSN2
  60A1   85   B2      		STA ANSN	;(ANS)
  60A3   AA           		TAX
  60A4   A0   AA      		LDY #TEMPN1	;(NOVALUE)
  60A6   A9   01      		LDA #ATOM
  60A8   20   14   53 		JSR CONS
  60AB   A9   00      		LDA #LIST
  60AD   A2   92      		LDX #OBLIST
  60AF   86   B2      		STX ANSN
  60B1   A4   C0      		LDY ANSN2	;ANS
  60B3   4C   14   53 		JMP CONS
  60B6   B5   00      	SBFW1:	LDA $00,X
  60B8   85   A6      		STA TEMPNH
  60BA   B5   01      		LDA $01,X
  60BC   85   A7      		STA TEMPNH+1
  60BE   A0   02      		LDY #$02
  60C0   B1   A6      		LDA (TEMPNH),Y
  60C2   C8           		INY
  60C3   18           		CLC
  60C4   69   03      		ADC #$03
  60C6   85   AC      		STA TEMPN2	;TEMPN2 IS SOBNAME
  60C8   B1   A6      		LDA (TEMPNH),Y
  60CA   69   00      		ADC #$00
  60CC   85   AD      		STA TEMPN2+1	;(CDR)
  60CE   A6   B3      		LDX ANSN1	;ANSN1 POINTS TO STRING
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-122
LOGO	MISCELLANEOUS AND EVALUATOR UTILITY ROUTINES

  60D0   B5   00      		LDA $00,X
  60D2   85   A6      		STA TEMPNH
  60D4   B5   01      		LDA $01,X
  60D6   85   A7      		STA TEMPNH+1	;TEMPNH BECOMES PNAME
  60D8   A5   A6      	MTC1W:	LDA TEMPNH
  60DA   D0   04      		BNE MTC1W1
  60DC   A5   A7      		LDA TEMPNH+1
  60DE   F0   3F      		BEQ SBFNF
  60E0   A0   00      	MTC1W1:	LDY #$00
  60E2   B1   A6      		LDA (TEMPNH),Y
  60E4   85   A8      		STA TEMPN	;TEMPN IS TEMP
  60E6   C8           		INY
  60E7   B1   A6      		LDA (TEMPNH),Y
  60E9   85   A9      		STA TEMPN+1	;(CAR)
  60EB   88           		DEY
  60EC   B1   AC      		LDA (TEMPN2),Y
  60EE   C5   A8      		CMP TEMPN
  60F0   D0   2D      		BNE SBFNF
  60F2   E6   AC      		INC TEMPN2
  60F4   D0   02      		BNE ADHK21
  60F6   E6   AD      		INC TEMPN2+1
  60F8   B1   AC      	ADHK21:	LDA (TEMPN2),Y
  60FA   C5   A9      		CMP TEMPN+1
  60FC   D0   21      		BNE SBFNF
  60FE   A0   02      		LDY #$02
  6100   B1   A6      		LDA (TEMPNH),Y	;TEMPNH IS PNAME
  6102   AA           		TAX
  6103   C8           		INY
  6104   B1   A6      		LDA (TEMPNH),Y
  6106   85   A7      		STA TEMPNH+1
  6108   86   A6      		STX TEMPNH	;(CDR)
  610A   A0   00      		LDY #$00
  610C   B1   AC      		LDA (TEMPN2),Y
  610E   F0   0E      		BEQ MTC1WF
  6110   E6   AC      		INC TEMPN2
  6112   D0   02      		BNE MTC1WE
  6114   E6   AD      		INC TEMPN2+1
  6116   A5   A7      	MTC1WE:	LDA TEMPNH+1
  6118   D0   C6      		BNE MTC1W1
  611A   B1   AC      		LDA (TEMPN2),Y
  611C   D0   01      		BNE SBFNF
  611E   60           	MTC1WF:	RTS
  611F   18           	SBFNF:	CLC		;NOT THIS SOBLIST OBJECT
  6120   A6   C0      		LDX ANSN2	;ANS
  6122   B5   00      		LDA $00,X
  6124   69   04      		ADC #$04
  6126   95   00      		STA $00,X
  6128   90   02      		BCC SBFWJ
  612A   F6   01      		INC $01,X
  612C   4C   7F   60 	SBFWJ:	JMP SBFWX
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-123
LOGO	MISCELLANEOUS AND EVALUATOR UTILITY ROUTINES

                      	;Note - the only temporary variables which can be passed to ERROR
                      	;as pointers are TEMPN6, TEMPN7, TEMPX1, and TEMPX2. PTRXOK and
                      	;PTRYOK insure that the X or Y args point to safe temporaries.
                      
  612F   B5   00      	PTRXOK:	LDA $00,X
  6131   85   BE      		STA TEMPX2
  6133   B5   01      		LDA $01,X
  6135   85   BF      		STA TEMPX2+1
  6137   A2   BE      		LDX #TEMPX2
  6139   60           		RTS
                      
  613A   B9   00   00 	PTRYOK:	LDA $00,Y
  613D   85   BE      		STA TEMPX2
  613F   B9   01   00 		LDA $01,Y
  6142   85   BF      		STA TEMPX2+1
  6144   A0   BE      		LDY #TEMPX2
  6146   60           		RTS
                      
  6147   85   10      	ERROR:	STA ERRFLG
  6149   48           		PHA
  614A   85   C0      		STA ANSN2
  614C   06   C0      		ASL ANSN2	;Error pointers are stored two bytes apart
  614E   86   C1      		STX ANSN3
  6150   84   B3      		STY ANSN1
  6152   A5   09      		LDA GRPHCS
  6154   F0   03      		BEQ ERRO1
  6156   AD   53   C0 		LDA $C053	;If FULL Graphics, make MIXED
  6159   20   60   72 	ERRO1:	JSR RSTIO
  615C   20   23   51 		JSR CLMK5	;Clear all the MARK pointers
  615F   20   5D   83 		JSR EXTEDT	;Zap out of EDIT or CHANGE mode if necessary
  6162   68           		PLA
  6163   A6   11      		LDX RETADR
  6165   9A           		TXS		;Restore all necessary return addresses
  6166   C9   13      		CMP #XZAP
  6168   F0   44      		BEQ ERRZ1
  616A   C9   1A      		CMP #XARGTB
  616C   F0   46      		BEQ ERRZ2
  616E   18           		CLC		;The Error-table holds pointers to the error-strings
  616F   A9   D8      		LDA #ERRTBL&$FF
  6171   65   C0      		ADC ANSN2
  6173   85   BA      		STA TEMPN8
  6175   A9   D0      		LDA #ERRTBL^
  6177   69   00      		ADC #$00
  6179   85   BB      		STA TEMPN8+1
  617B   AD   83   C0 		LDA GETRM2	;Ghost-memory bank 2, error table
  617E   E6   55      		INC BANK4K
  6180   A0   00      		LDY #$00
  6182   B1   BA      		LDA (TEMPN8),Y
  6184   AA           		TAX
  6185   C8           		INY
  6186   B1   BA      		LDA (TEMPN8),Y
  6188   85   BB      		STA TEMPN8+1
  618A   86   BA      		STX TEMPN8
  618C   AD   83   C0 	ERRW:	LDA GETRM2	;Ghost-memory bank 2, error messages
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-124
LOGO	MISCELLANEOUS AND EVALUATOR UTILITY ROUTINES

  618F   E6   55      		INC BANK4K
  6191   A0   00      		LDY #$00
  6193   B1   BA      		LDA (TEMPN8),Y
  6195   AE   8B   C0 		LDX GETRM1	;Ghost-memory bank 2 disable
  6198   AE   8B   C0 		LDX GETRM1
  619B   C6   55      		DEC BANK4K
  619D   AA           		TAX
  619E   F0   2F      		BEQ ERRW2
  61A0   C9   FF      		CMP #$FF
  61A2   F0   3A      		BEQ ERRWE
  61A4   C9   01      		CMP #$01
  61A6   F0   22      		BEQ ERRW1
  61A8   20   84   72 		JSR TPCHR
  61AB   4C   D6   61 		JMP ERRW4
  61AE   20   2B   62 	ERRZ1:	JSR ZAPMSG
  61B1   4C   DE   61 		JMP ERRWE
  61B4   A6   C1      	ERRZ2:	LDX ANSN3
  61B6   20   42   67 		JSR TYPFIX
  61B9   A2   EE      		LDX #ERRM4&$FF
  61BB   A0   DA      		LDY #ERRM4^
  61BD   20   95   54 		JSR PRTSTR
  61C0   A9   00      		LDA #$00
  61C2   A6   B3      		LDX ANSN1
  61C4   20   F9   65 		JSR LTYPE
  61C7   4C   DE   61 		JMP ERRWE
  61CA   A6   C1      	ERRW1:	LDX ANSN3
  61CC   4C   D1   61 		JMP ERRW3
  61CF   A6   B3      	ERRW2:	LDX ANSN1
  61D1   A9   00      	ERRW3:	LDA #$00
  61D3   20   F9   65 		JSR LTYPE
  61D6   E6   BA      	ERRW4:	INC TEMPN8
  61D8   D0   B2      		BNE ERRW
  61DA   E6   BB      		INC TEMPN8+1
  61DC   D0   AE      		BNE ERRW	;(Always)
  61DE   A5   7C      	ERRWE:	LDA LEVNUM
  61E0   D0   04      		BNE ERRWE1
  61E2   A5   7D      		LDA LEVNUM+1
  61E4   F0   34      		BEQ ERR1
  61E6   20   5B   72 	ERRWE1:	JSR BREAK1
  61E9   A2   D5      		LDX #ERRM1&$FF
  61EB   A0   DA      		LDY #ERRM1^
  61ED   20   95   54 		JSR PRTSTR
  61F0   A2   7C      		LDX #LEVNUM
  61F2   20   42   67 		JSR TYPFIX
  61F5   A2   DF      		LDX #ERRM2&$FF
  61F7   A0   DA      		LDY #ERRM2^
  61F9   20   95   54 		JSR PRTSTR
  61FC   A2   74      		LDX #LINNUM
  61FE   20   42   67 		JSR TYPFIX
  6201   A2   E9      		LDX #ERRM3&$FF
  6203   A0   DA      		LDY #ERRM3^
  6205   20   95   54 		JSR PRTSTR
  6208   A0   06      		LDY #$06	;(SF_UFUN = 6.)
  620A   B1   6C      		LDA (FRAME),Y
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-125
LOGO	MISCELLANEOUS AND EVALUATOR UTILITY ROUTINES

  620C   85   BA      		STA TEMPN8
  620E   C8           		INY
  620F   B1   6C      		LDA (FRAME),Y
  6211   85   BB      		STA TEMPN8+1	;(CAR)
  6213   A9   00      		LDA #$00
  6215   A2   BA      		LDX #TEMPN8
  6217   20   F9   65 		JSR LTYPE
  621A   20   5B   72 	ERR1:	JSR BREAK1
  621D   A5   12      		LDA ERRRET
  621F   A4   13      		LDY ERRRET+1
  6221   20   41   4A 		JSR RSTERR
  6224   85   A6      		STA TEMPNH
  6226   84   A7      		STY TEMPNH+1
  6228   6C   A6   00 		JMP (TEMPNH)
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-126
LOGO	MISCELLANEOUS AND EVALUATOR UTILITY ROUTINES

                      	;ZAPMSG is a special case of ERROR, for error XZAP. It displays the
                      	;appropriate error message.
                      
  622B   20   5B   72 	ZAPMSG:	JSR BREAK1
  622E   20   5B   72 		JSR BREAK1
  6231   A5   C1      		LDA ANSN3
  6233   C9   01      		CMP #XNSTRN
  6235   F0   0F      		BEQ ZPC1
  6237   C9   00      		CMP #XNSTOR
  6239   F0   0B      		BEQ ZPC1
  623B   C9   02      		CMP #XSTOP
  623D   F0   0E      		BEQ ZPC2
  623F   C9   03      		CMP #XEXCED
  6241   F0   11      		BEQ ZPC3
  6243   20   CD   51 		JSR SYSBUG
  6246   A2   8B      	ZPC1:	LDX #ZPMSG1&$FF
  6248   A0   DA      		LDY #ZPMSG1^	;"No Storage Left!"
  624A   4C   95   54 		JMP PRTSTR
  624D   A2   9D      	ZPC2:	LDX #ZPMSG2&$FF
  624F   A0   DA      		LDY #ZPMSG2^	;"Stopped!"
  6251   4C   95   54 		JMP PRTSTR
  6254   A2   A7      	ZPC3:	LDX #ZPMSG3&$FF
  6256   A0   DA      		LDY #ZPMSG3^	;"Evaluator Overflow"
  6258   4C   95   54 		JMP PRTSTR
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-127
LOGO	GARBAGE COLLECTOR

                      	.SBTTL	Garbage Collector
  625B   BA           	GARCOL:	TSX
  625C   86   11      		STX RETADR
  625E   A9   91      		LDA #GCLERR&$FF
  6260   85   12      		STA ERRRET
  6262   A9   63      		LDA #GCLERR^
  6264   85   13      		STA ERRRET+1
  6266   20   5C   65 		JSR SWAPT1
  6269   A5   59      		LDA SOBLST
  626B   85   AE      		STA TEMPN3	;TEMPN3 is INDEX
  626D   A5   5A      		LDA SOBLST+1
  626F   85   AF      		STA TEMPN3+1
  6271   A2   AE      	GCLP2:	LDX #TEMPN3
  6273   20   FC   63 		JSR MARK
  6276   18           		CLC
  6277   A5   AE      		LDA TEMPN3
  6279   69   04      		ADC #$04
  627B   85   AE      		STA TEMPN3
  627D   90   02      		BCC GCLP2A
  627F   E6   AF      		INC TEMPN3+1
  6281   A5   AE      	GCLP2A:	LDA TEMPN3
  6283   C5   5B      		CMP SOBTOP
  6285   D0   EA      		BNE GCLP2
  6287   A5   AF      		LDA TEMPN3+1
  6289   C5   5C      		CMP SOBTOP+1
  628B   D0   E4      		BNE GCLP2
  628D   A9   F7      		LDA #VPDLBA&$FF
  628F   85   AE      		STA TEMPN3
  6291   A9   1F      		LDA #VPDLBA^
  6293   85   AF      		STA TEMPN3+1
  6295   A5   AE      	GCLP3:	LDA TEMPN3
  6297   C5   16      		CMP VSP
  6299   D0   06      		BNE GCLP3X
  629B   A5   AF      		LDA TEMPN3+1
  629D   C5   17      		CMP VSP+1
  629F   F0   1B      		BEQ GCLP3A
  62A1   A0   00      	GCLP3X:	LDY #$00
  62A3   B1   AE      		LDA (TEMPN3),Y
  62A5   85   A8      		STA TEMPN
  62A7   C8           		INY
  62A8   B1   AE      		LDA (TEMPN3),Y
  62AA   85   A9      		STA TEMPN+1	;(GETBAR)
  62AC   20   04   64 		JSR MARKX	;Expects TEMPN as node
  62AF   38           		SEC
  62B0   A5   AE      		LDA TEMPN3
  62B2   E9   02      		SBC #$02
  62B4   85   AE      		STA TEMPN3
  62B6   B0   DD      		BCS GCLP3
  62B8   C6   AF      		DEC TEMPN3+1
  62BA   D0   D9      		BNE GCLP3	;(Always)
  62BC   A5   6C      	GCLP3A:	LDA FRAME
  62BE   85   AE      		STA TEMPN3	;TEMPN3 is FRAMEPTR
  62C0   A5   6D      		LDA FRAME+1
  62C2   F0   49      		BEQ GCOL1
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-128
LOGO	GARBAGE COLLECTOR

  62C4   85   AF      		STA TEMPN3+1
  62C6   A0   0E      	GCLP4:	LDY #$0E	;(SF_NUMBER_BINDINGS = 14.)
  62C8   B1   AE      		LDA (TEMPN3),Y
  62CA   F0   33      		BEQ GCLP5E
  62CC   85   B3      		STA ANSN1	;ANSN1 is NARGS
  62CE   18           		CLC
  62CF   A5   AE      		LDA TEMPN3
  62D1   69   12      		ADC #$12	;PTR1 points to first binding pair
  62D3   85   B0      		STA TEMPN4	;TEMPN4 is PTR1
  62D5   A5   AF      		LDA TEMPN3+1
  62D7   69   00      		ADC #$00
  62D9   85   B1      		STA TEMPN4+1
  62DB   A0   02      	GCLP5:	LDY #$02
  62DD   B1   B0      		LDA (TEMPN4),Y	;See if it's a fun/frame pair
  62DF   6A           		ROR A
  62E0   B0   0E      		BCS GCLP5A
  62E2   A0   00      		LDY #$00	;Nope, get value and mark
  62E4   B1   B0      		LDA (TEMPN4),Y
  62E6   85   A8      		STA TEMPN
  62E8   C8           		INY
  62E9   B1   B0      		LDA (TEMPN4),Y
  62EB   85   A9      		STA TEMPN+1
  62ED   20   04   64 		JSR MARKX	;Expects TEMPN as node
  62F0   18           	GCLP5A:	CLC
  62F1   A5   B0      		LDA TEMPN4
  62F3   69   04      		ADC #$04
  62F5   85   B0      		STA TEMPN4
  62F7   90   02      		BCC GCLP5B
  62F9   E6   B1      		INC TEMPN4+1
  62FB   C6   B3      	GCLP5B:	DEC ANSN1
  62FD   D0   DC      		BNE GCLP5
  62FF   A0   00      	GCLP5E:	LDY #$00	;(SF_PREVIOUS_FRAME)
  6301   B1   AE      		LDA (TEMPN3),Y
  6303   AA           		TAX
  6304   C8           		INY
  6305   B1   AE      		LDA (TEMPN3),Y
  6307   85   AF      		STA TEMPN3+1
  6309   86   AE      		STX TEMPN3	;(GETBAR)
  630B   D0   B9      		BNE GCLP4
  630D   A9   88      	GCOL1:	LDA #GCVST	;Mark all G.C.-protected variables
  630F   85   B3      		STA ANSN1
  6311   A6   B3      	GCOL1L:	LDX ANSN1
  6313   20   FC   63 		JSR MARK
  6316   E6   B3      		INC ANSN1
  6318   E6   B3      		INC ANSN1
  631A   A5   B3      		LDA ANSN1
  631C   C9   9E      		CMP #GCVEND
  631E   D0   F1      		BNE GCOL1L
  6320   A2   18      		LDX #SIZE1
  6322   A0   1C      		LDY #AREA1
  6324   20   C3   63 		JSR MARKA
  6327   A2   1A      		LDX #SIZE2
  6329   A0   1E      		LDY #AREA2
  632B   20   C3   63 		JSR MARKA
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-129
LOGO	GARBAGE COLLECTOR

  632E   A9   00      		LDA #$00
  6330   85   5F      		STA FRLIST
  6332   85   60      		STA FRLIST+1
  6334   85   C3      		STA NNODES
  6336   85   C4      		STA NNODES+1
  6338   A9   00      		LDA #BIGBAS&$FF
  633A   85   A6      		STA TEMPNH
  633C   A9   D0      		LDA #BIGBAS^
  633E   85   A7      		STA TEMPNH+1	;Nodespace pointer
  6340   A9   60      		LDA #SINODS&$FF
  6342   85   A8      		STA TEMPN
  6344   A9   F6      		LDA #SINODS^
  6346   85   A9      		STA TEMPN+1	;Typebase pointer
  6348   A0   00      	GCLP6:	LDY #$00
  634A   B1   A8      		LDA (TEMPN),Y
  634C   2A           		ROL A		;Type bit
  634D   B0   16      		BCS GCLP6C
  634F   A0   02      		LDY #$02
  6351   A5   5F      		LDA FRLIST
  6353   91   A6      		STA (TEMPNH),Y
  6355   C8           		INY
  6356   A5   60      		LDA FRLIST+1
  6358   91   A6      		STA (TEMPNH),Y	;(RPLACD)
  635A   A5   A6      		LDA TEMPNH
  635C   85   5F      		STA FRLIST
  635E   A5   A7      		LDA TEMPNH+1
  6360   85   60      		STA FRLIST+1
  6362   4C   6B   63 		JMP GCLP6F
  6365   E6   C3      	GCLP6C:	INC NNODES
  6367   D0   02      		BNE GCLP6F
  6369   E6   C4      		INC NNODES+1
  636B   18           	GCLP6F:	CLC
  636C   A5   A6      		LDA TEMPNH
  636E   69   04      		ADC #$04
  6370   85   A6      		STA TEMPNH
  6372   90   02      		BCC GCLP6D
  6374   E6   A7      		INC TEMPNH+1
  6376   E6   A8      	GCLP6D:	INC TEMPN
  6378   D0   02      		BNE GCLP6E
  637A   E6   A9      		INC TEMPN+1
  637C   A5   A8      	GCLP6E:	LDA TEMPN
  637E   C9   F8      		CMP #TYPEND&$FF
  6380   D0   C6      		BNE GCLP6
  6382   A5   A9      		LDA TEMPN+1
  6384   C9   FF      		CMP #TYPEND^
  6386   D0   C0      		BNE GCLP6
  6388   20   A0   63 		JSR CLRMRK
  638B   20   6A   65 		JSR SWAPT2
  638E   4C   41   4A 		JMP RSTERR
  6391   A9   00      	GCLERR:	LDA #$00
  6393   85   5F      		STA FRLIST
  6395   85   60      		STA FRLIST+1
  6397   20   A0   63 		JSR CLRMRK
  639A   20   6A   65 		JSR SWAPT2
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-130
LOGO	GARBAGE COLLECTOR

  639D   4C   D2   47 		JMP ERROR1
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-131
LOGO	GARBAGE COLLECTOR

  63A0   A9   60      	CLRMRK:	LDA #SINODS&$FF
  63A2   85   A6      		STA TEMPNH
  63A4   A9   F6      		LDA #SINODS^
  63A6   85   A7      		STA TEMPNH+1	;TEMPN is pointer to Typebase
  63A8   A0   00      		LDY #$00
  63AA   B1   A6      	GCLP1:	LDA (TEMPNH),Y
  63AC   29   7F      		AND #$7F	;Set Mark bit to 0 (False)
  63AE   91   A6      		STA (TEMPNH),Y
  63B0   E6   A6      		INC TEMPNH
  63B2   D0   02      		BNE GCLP1A
  63B4   E6   A7      		INC TEMPNH+1
  63B6   A5   A6      	GCLP1A:	LDA TEMPNH
  63B8   C9   F8      		CMP #TYPEND&$FF
  63BA   D0   EE      		BNE GCLP1
  63BC   A5   A7      		LDA TEMPNH+1
  63BE   C9   FF      		CMP #TYPEND^
  63C0   D0   E8      		BNE GCLP1
  63C2   60           	MRKRTS:	RTS
                      
  63C3   B5   00      	MARKA:	LDA $00,X
  63C5   85   A8      		STA TEMPN
  63C7   B5   01      		LDA $01,X
  63C9   85   A9      		STA TEMPN+1	;TEMPN is SIZE
  63CB   B9   00   00 		LDA $00,Y
  63CE   85   A6      		STA TEMPNH
  63D0   B9   01   00 		LDA $01,Y
  63D3   85   A7      		STA TEMPNH+1
  63D5   20   6A   5D 		JSR TYPACS	;TEMPNH becomes address of typecodes
  63D8   A5   A9      	MRKAW:	LDA TEMPN+1
  63DA   30   E6      		BMI MRKRTS
  63DC   D0   04      		BNE MRKAW1
  63DE   A5   A8      		LDA TEMPN
  63E0   F0   E0      		BEQ MRKRTS
  63E2   B1   A6      	MRKAW1:	LDA (TEMPNH),Y
  63E4   09   80      		ORA #$80	;Mark the word
  63E6   91   A6      		STA (TEMPNH),Y
  63E8   E6   A6      		INC TEMPNH
  63EA   D0   02      		BNE MRKAW2
  63EC   E6   A7      		INC TEMPNH+1
  63EE   38           	MRKAW2:	SEC
  63EF   A5   A8      		LDA TEMPN
  63F1   E9   01      		SBC #$01
  63F3   85   A8      		STA TEMPN
  63F5   B0   E1      		BCS MRKAW
  63F7   C6   A9      		DEC TEMPN+1
  63F9   4C   D8   63 		JMP MRKAW
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-132
LOGO	GARBAGE COLLECTOR

  63FC   B5   00      	MARK:	LDA $00,X
  63FE   85   A8      		STA TEMPN
  6400   B5   01      		LDA $01,X
  6402   85   A9      		STA TEMPN+1	;TEMPN is INDEX
  6404   A2   FF      	MARKX:	LDX #$FF
  6406   A0   FF      		LDY #$FF
  6408   20   3C   52 		JSR PUSH
  640B   A9   FF      	MRKW:	LDA #$FF
  640D   C5   A8      		CMP TEMPN
  640F   D0   04      		BNE MRKW1
  6411   C5   A9      		CMP TEMPN+1
  6413   F0   AD      		BEQ MRKRTS
  6415   A5   A9      	MRKW1:	LDA TEMPN+1
  6417   F0   0E      		BEQ MRKW3
  6419   85   A7      		STA TEMPNH+1
  641B   A5   A8      		LDA TEMPN
  641D   85   A6      		STA TEMPNH
  641F   20   6A   5D 		JSR TYPACS
  6422   85   B2      		STA ANSN
  6424   2A           		ROL A
  6425   90   0B      		BCC MRKW2
  6427   20   B0   52 	MRKW3:	JSR STKTS1
  642A   A2   A8      		LDX #TEMPN
  642C   20   6C   52 		JSR POP
  642F   4C   0B   64 		JMP MRKW
  6432   A5   B2      	MRKW2:	LDA ANSN
  6434   09   80      		ORA #$80
  6436   91   A6      		STA (TEMPNH),Y
  6438   29   7F      		AND #$7F
  643A   C9   00      		CMP #LIST
  643C   F0   45      		BEQ MRKCL
  643E   C9   02      		CMP #STRING
  6440   F0   2B      		BEQ MRKCF
  6442   C9   03      		CMP #FIX
  6444   F0   E1      		BEQ MRKW3
  6446   C9   04      		CMP #FLO
  6448   F0   DD      		BEQ MRKW3
  644A   C9   0C      		CMP #FLIST
  644C   F0   1F      		BEQ MRKCF
  644E   C9   06      		CMP #UFUN
  6450   F0   48      		BEQ MRKCU
  6452   C9   07      		CMP #SATOM
  6454   F0   28      		BEQ MRKCS
  6456   C9   01      		CMP #ATOM
  6458   F0   29      		BEQ MRKCL
  645A   C9   09      		CMP #DATOM
  645C   F0   25      		BEQ MRKCL
  645E   C9   0A      		CMP #LATOM
  6460   F0   21      		BEQ MRKCL
  6462   C9   08      		CMP #QATOM
  6464   F0   1D      		BEQ MRKCL
  6466   C9   0B      		CMP #FPACK
  6468   F0   47      		BEQ MRKCP
  646A   20   CD   51 		JSR SYSBUG
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-133
LOGO	GARBAGE COLLECTOR

  646D   A0   02      	MRKCF:	LDY #$02
  646F   B1   A8      	MRKCN:	LDA (TEMPN),Y
  6471   AA           		TAX
  6472   C8           		INY
  6473   B1   A8      		LDA (TEMPN),Y
  6475   F0   B0      		BEQ MRKW3
  6477   A8           		TAY
  6478   20   3C   52 	MRKCF1:	JSR PUSH
  647B   4C   27   64 		JMP MRKW3
  647E   A0   00      	MRKCS:	LDY #$00
  6480   4C   6F   64 		JMP MRKCN
  6483   A5   A8      	MRKCL:	LDA TEMPN
  6485   29   FC      		AND #$FC
  6487   85   A8      		STA TEMPN
  6489   A0   00      		LDY #$00
  648B   B1   A8      		LDA (TEMPN),Y
  648D   AA           		TAX
  648E   C8           		INY
  648F   B1   A8      		LDA (TEMPN),Y
  6491   F0   DA      		BEQ MRKCF
  6493   A8           		TAY
  6494   20   3C   52 	MRKCL1:	JSR PUSH
  6497   4C   6D   64 		JMP MRKCF
  649A   18           	MRKCU:	CLC
  649B   A5   A8      		LDA TEMPN
  649D   69   04      		ADC #$04
  649F   85   A6      		STA TEMPNH
  64A1   A5   A9      		LDA TEMPN+1
  64A3   69   00      		ADC #$00
  64A5   85   A7      		STA TEMPNH+1
  64A7   20   6A   5D 		JSR TYPACS
  64AA   09   80      		ORA #$80
  64AC   91   A6      		STA (TEMPNH),Y
  64AE   4C   6D   64 		JMP MRKCF
  64B1   A0   01      	MRKCP:	LDY #$01
  64B3   84   B2      		STY ANSN	;ANSN is FIRSTLINE
  64B5   88           		DEY
  64B6   B1   A8      	MRKCP1:	LDA (TEMPN),Y
  64B8   85   AA      		STA TEMPN1	;TEMPN1 is LINE
  64BA   C8           		INY
  64BB   B1   A8      		LDA (TEMPN),Y
  64BD   85   AB      		STA TEMPN1+1	;(GETBAR)
  64BF   C8           		INY
  64C0   B1   A8      		LDA (TEMPN),Y
  64C2   85   AC      		STA TEMPN2	;TEMPN2 is LINE_END
  64C4   C8           		INY
  64C5   B1   A8      		LDA (TEMPN),Y
  64C7   85   AD      		STA TEMPN2+1	;(GETBAR)
  64C9   A5   AD      	MRKPW:	LDA TEMPN2+1
  64CB   D0   17      		BNE MRKPW1
  64CD   18           		CLC
  64CE   A5   A8      		LDA TEMPN
  64D0   69   02      		ADC #$02
  64D2   85   A6      		STA TEMPNH
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-134
LOGO	GARBAGE COLLECTOR

  64D4   A5   A9      		LDA TEMPN+1
  64D6   69   00      		ADC #$00
  64D8   85   A7      		STA TEMPNH+1
  64DA   20   6A   5D 		JSR TYPACS
  64DD   09   80      		ORA #$80
  64DF   91   A6      		STA (TEMPNH),Y
  64E1   4C   27   64 		JMP MRKW3
  64E4   18           	MRKPW1:	CLC
  64E5   A5   A8      		LDA TEMPN
  64E7   69   02      		ADC #$02
  64E9   85   A6      		STA TEMPNH
  64EB   A5   A9      		LDA TEMPN+1
  64ED   69   00      		ADC #$00
  64EF   85   A7      		STA TEMPNH+1
  64F1   20   6A   5D 		JSR TYPACS
  64F4   09   80      		ORA #$80
  64F6   91   A6      		STA (TEMPNH),Y
  64F8   A5   AA      		LDA TEMPN1
  64FA   85   A6      		STA TEMPNH
  64FC   A5   AB      		LDA TEMPN1+1
  64FE   85   A7      		STA TEMPNH+1
  6500   20   6A   5D 		JSR TYPACS
  6503   09   80      		ORA #$80
  6505   91   A6      		STA (TEMPNH),Y
  6507   A5   B2      		LDA ANSN
  6509   D0   0B      		BNE MRKPW2
  650B   18           		CLC
  650C   A5   AA      		LDA TEMPN1
  650E   69   02      		ADC #$02
  6510   85   AA      		STA TEMPN1
  6512   90   02      		BCC MRKPW2
  6514   E6   AB      		INC TEMPN1+1
  6516   A9   00      	MRKPW2:	LDA #$00
  6518   85   B2      		STA ANSN
  651A   A5   AA      	MRKPX:	LDA TEMPN1
  651C   C5   AC      		CMP TEMPN2
  651E   D0   13      		BNE MRKPX1
  6520   A5   AB      		LDA TEMPN1+1
  6522   C5   AD      		CMP TEMPN2+1
  6524   D0   0D      		BNE MRKPX1
  6526   18           	MRKPXE:	CLC
  6527   A5   A8      		LDA TEMPN
  6529   69   02      		ADC #$02
  652B   85   A8      		STA TEMPN
  652D   90   87      		BCC MRKCP1
  652F   E6   A9      		INC TEMPN+1
  6531   D0   83      		BNE MRKCP1	;(Always)
  6533   A5   AA      	MRKPX1:	LDA TEMPN1
  6535   85   A6      		STA TEMPNH
  6537   A5   AB      		LDA TEMPN1+1
  6539   85   A7      		STA TEMPNH+1
  653B   20   6A   5D 		JSR TYPACS
  653E   09   80      		ORA #$80
  6540   91   A6      		STA (TEMPNH),Y
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-135
LOGO	GARBAGE COLLECTOR

  6542   B1   AA      		LDA (TEMPN1),Y
  6544   AA           		TAX
  6545   C8           		INY
  6546   B1   AA      		LDA (TEMPN1),Y
  6548   A8           		TAY
  6549   20   3C   52 		JSR PUSH
  654C   20   B0   52 		JSR STKTS1
  654F   18           		CLC
  6550   A5   AA      		LDA TEMPN1
  6552   69   02      		ADC #$02
  6554   85   AA      		STA TEMPN1
  6556   90   C2      		BCC MRKPX
  6558   E6   AB      		INC TEMPN1+1
  655A   D0   BE      		BNE MRKPX	;(Always)
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-136
LOGO	GARBAGE COLLECTOR

  655C   A0   0F      	SWAPT1:	LDY #TMPNUM-1
  655E   A2   A6      		LDX #TMPSTT
  6560   B5   00      	SWPLP1:	LDA $00,X
  6562   99   2A   03 		STA TMPTAB,Y
  6565   E8           		INX
  6566   88           		DEY
  6567   10   F7      		BPL SWPLP1
  6569   60           		RTS
                      
  656A   A0   0F      	SWAPT2:	LDY #TMPNUM-1
  656C   A2   A6      		LDX #TMPSTT
  656E   B9   2A   03 	SWPLP2:	LDA TMPTAB,Y
  6571   95   00      		STA $00,X
  6573   E8           		INX
  6574   88           		DEY
  6575   10   F7      		BPL SWPLP2
  6577   60           		RTS
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-137
LOGO	GARBAGE COLLECTOR

  6578   84   C0      	MAKPNM:	STY ANSN2	;ANS
  657A   86   B3      		STX ANSN1	;ARG
  657C   20   84   5D 		JSR GETTYP
  657F   A6   B3      		LDX ANSN1
  6581   C9   01      		CMP #ATOM
  6583   F0   2A      		BEQ MKPN1
  6585   C9   07      		CMP #SATOM
  6587   F0   26      		BEQ MKPN1
  6589   48           		PHA		;Save type
  658A   B5   00      		LDA $00,X	;Assume it's a fixnum or flonum
  658C   85   AC      		STA TEMPN2
  658E   B5   01      		LDA $01,X
  6590   85   AD      		STA TEMPN2+1
  6592   A2   03      		LDX #$03
  6594   A0   00      		LDY #$00
  6596   B1   AC      	MKP2L1:	LDA (TEMPN2),Y
  6598   99   A2   00 		STA NARG1,Y
  659B   C8           		INY
  659C   CA           		DEX
  659D   10   F7      		BPL MKP2L1
  659F   68           		PLA		;Retrieve type
  65A0   AA           		TAX
  65A1   A5   C0      		LDA ANSN2
  65A3   48           		PHA		;Save ANS pointer
  65A4   E0   03      		CPX #FIX
  65A6   F0   0C      		BEQ MKPN2
  65A8   E0   04      		CPX #FLO
  65AA   F0   0E      		BEQ MKPN3
  65AC   4C   EC   7E 		JMP STTLR4	;(ERROR XWTA,CURTOK)
  65AF   A4   C0      	MKPN1:	LDY ANSN2
  65B1   4C   88   59 		JMP GETPNM
  65B4   20   71   67 	MKPN2:	JSR CVBFIX	;Get string on PDL
  65B7   4C   BD   65 		JMP CNSPDL	;CONS string from PDL
  65BA   20   AA   67 	MKPN3:	JSR CVFLO	;Get the string on PDL
                      
                      	;CONS a string from the characters on the PDL, ANSN1 holds counter, ANS on stack.
  65BD   A2   00      	CNSPDL:	LDX #$00
  65BF   86   88      		STX MARK1
  65C1   86   89      		STX MARK1+1
  65C3   A5   B3      		LDA ANSN1
  65C5   6A           		ROR A
  65C6   90   05      		BCC CSPD1
  65C8   20   3C   52 		JSR PUSH	;If odd no. characters, push a 0 to make it even
  65CB   E6   B3      		INC ANSN1
  65CD   20   9E   52 	CSPD1:	JSR POPB	;Pop two characters
  65D0   85   A9      		STA TEMPN+1
  65D2   20   9E   52 		JSR POPB
  65D5   85   A8      		STA TEMPN
  65D7   A2   88      		LDX #MARK1
  65D9   86   B2      		STX ANSN
  65DB   A0   A8      		LDY #TEMPN
  65DD   A9   02      		LDA #STRING
  65DF   20   14   53 		JSR CONS	;Cons a node
  65E2   C6   B3      		DEC ANSN1
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-138
LOGO	GARBAGE COLLECTOR

  65E4   C6   B3      		DEC ANSN1
  65E6   D0   E5      		BNE CSPD1	;Continue if not done
  65E8   68           		PLA		;Retrieve ANS pointer
  65E9   AA           		TAX
  65EA   A5   88      		LDA MARK1
  65EC   95   00      		STA $00,X
  65EE   A5   89      		LDA MARK1+1
  65F0   95   01      		STA $01,X
  65F2   A9   00      		LDA #$00
  65F4   85   88      		STA MARK1
  65F6   85   89      		STA MARK1+1
  65F8   60           		RTS
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-139
LOGO	GARBAGE COLLECTOR

  65F9   85   B0      	LTYPE:	STA TEMPN4	;TOPLEVELP
  65FB   B5   00      		LDA $00,X
  65FD   85   B4      		STA TEMPN5
  65FF   B5   01      		LDA $01,X
  6601   85   B5      		STA TEMPN5+1	;THING
  6603   A2   41      		LDX #LTPRTS&$FF
  6605   A0   67      		LDY #LTPRTS^
  6607   20   3C   52 		JSR PUSH
  660A   A2   B4      	PRTHNG:	LDX #TEMPN5
  660C   20   84   5D 		JSR GETTYP
  660F   C9   00      		CMP #LIST
  6611   F0   5A      		BEQ LTPLS
  6613   C9   01      		CMP #ATOM
  6615   F0   33      		BEQ LTPA
  6617   C9   07      		CMP #SATOM
  6619   F0   35      		BEQ LTPS
  661B   C9   09      		CMP #DATOM
  661D   F0   26      		BEQ LTPD
  661F   C9   08      		CMP #QATOM
  6621   F0   1E      		BEQ LTPQ
  6623   C9   0A      		CMP #LATOM
  6625   F0   2F      		BEQ LTPL
  6627   48           		PHA		;Assuming Fix or Flo, save typecode
  6628   A0   00      		LDY #$00	;and prep. for TYPFIX/FLO
  662A   A2   03      		LDX #$03
  662C   B1   B4      	LTYPL1:	LDA (TEMPN5),Y
  662E   99   A2   00 		STA NARG1,Y
  6631   C8           		INY
  6632   CA           		DEX
  6633   10   F7      		BPL LTYPL1
  6635   68           		PLA
  6636   C9   03      		CMP #FIX
  6638   F0   27      		BEQ LTPF
  663A   C9   04      		CMP #FLO
  663C   F0   29      		BEQ LTPF1
  663E   20   CD   51 		JSR SYSBUG
  6641   A9   22      	LTPQ:	LDA #'"
  6643   D0   02      		BNE LTPD1	;(Always)
  6645   A9   3A      	LTPD:	LDA #':
  6647   20   84   72 	LTPD1:	JSR TPCHR
  664A   20   D5   66 	LTPA:	JSR TYPATM
  664D   4C   1E   41 		JMP POPJ
  6650   20   25   67 	LTPS:	JSR TPSATM
  6653   4C   1E   41 		JMP POPJ
  6656   20   D5   66 	LTPL:	JSR TYPATM
  6659   A9   3A      		LDA #':
  665B   20   84   72 		JSR TPCHR
  665E   4C   1E   41 		JMP POPJ
  6661   20   48   67 	LTPF:	JSR TPBFIX
  6664   4C   1E   41 		JMP POPJ
  6667   20   A4   67 	LTPF1:	JSR TYPFLO
  666A   4C   1E   41 		JMP POPJ
  666D   A9   01      	LTPLS:	LDA #$01
  666F   85   B1      		STA TEMPN4+1	;NOSPACE
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-140
LOGO	GARBAGE COLLECTOR

  6671   A5   B0      		LDA TEMPN4	;TOPLEVELP
  6673   D0   05      		BNE PLSTLP
  6675   A9   5B      		LDA #'[
  6677   20   84   72 		JSR TPCHR
  667A   20   12   54 	PLSTLP:	JSR STKTST
  667D   A5   B5      		LDA TEMPN5+1
  667F   D0   0E      		BNE PLLP1
  6681   A5   B0      		LDA TEMPN4	;TOPLEVELP
  6683   D0   07      		BNE PLLP2
  6685   85   B1      		STA TEMPN4+1	;Print a space after Sublists
  6687   A9   5D      		LDA #']
  6689   20   84   72 		JSR TPCHR
  668C   4C   1E   41 	PLLP2:	JMP POPJ
  668F   A5   B1      	PLLP1:	LDA TEMPN4+1	;NOSPACE
  6691   D0   05      		BNE PLLP1A
  6693   A9   20      		LDA #$20	;(Space)
  6695   20   84   72 		JSR TPCHR
  6698   A2   B4      	PLLP1A:	LDX #TEMPN5
  669A   20   25   52 		JSR PUSHP
  669D   A6   B0      		LDX TEMPN4
  669F   20   3C   52 		JSR PUSH
  66A2   A0   00      		LDY #$00
  66A4   84   B0      		STY TEMPN4
  66A6   84   B1      		STY TEMPN4+1
  66A8   B1   B4      		LDA (TEMPN5),Y
  66AA   AA           		TAX
  66AB   C8           		INY
  66AC   B1   B4      		LDA (TEMPN5),Y
  66AE   85   B5      		STA TEMPN5+1
  66B0   86   B4      		STX TEMPN5	;(CAR)
  66B2   A2   BC      		LDX #TPP1&$FF
  66B4   A0   66      		LDY #TPP1^
  66B6   20   3C   52 		JSR PUSH
  66B9   4C   0A   66 		JMP PRTHNG
  66BC   20   9E   52 	TPP1:	JSR POPB
  66BF   85   B0      		STA TEMPN4
  66C1   A2   B4      		LDX #TEMPN5
  66C3   20   6C   52 		JSR POP
  66C6   A0   02      		LDY #$02
  66C8   B1   B4      		LDA (TEMPN5),Y
  66CA   AA           		TAX
  66CB   C8           		INY
  66CC   B1   B4      		LDA (TEMPN5),Y
  66CE   85   B5      		STA TEMPN5+1
  66D0   86   B4      		STX TEMPN5	;(CDR)
  66D2   4C   7A   66 		JMP PLSTLP
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-141
LOGO	GARBAGE COLLECTOR

  66D5   A5   B4      	TYPATM:	LDA TEMPN5
  66D7   29   FC      		AND #$FC
  66D9   85   B4      		STA TEMPN5
  66DB   A2   B4      		LDX #TEMPN5
  66DD   A0   B4      		LDY #TEMPN5
  66DF   20   88   59 		JSR GETPNM	;Returns with A nonzero if Funny-pname
  66E2   85   B2      		STA ANSN
  66E4   F0   09      		BEQ TPATMW
  66E6   A5   57      		LDA INDEV
  66E8   F0   05      		BEQ TPATMW
  66EA   A9   27      		LDA #$27	;(Single Quote)
  66EC   20   84   72 		JSR TPCHR
  66EF   A5   B5      	TPATMW:	LDA TEMPN5+1
  66F1   F0   25      		BEQ TPTMWE
  66F3   A0   00      		LDY #$00
  66F5   B1   B4      		LDA (TEMPN5),Y
  66F7   85   A6      		STA TEMPNH
  66F9   C8           		INY
  66FA   B1   B4      		LDA (TEMPN5),Y
  66FC   85   A7      		STA TEMPNH+1	;(CAR)
  66FE   C8           		INY
  66FF   B1   B4      		LDA (TEMPN5),Y
  6701   AA           		TAX
  6702   C8           		INY
  6703   B1   B4      		LDA (TEMPN5),Y
  6705   85   B5      		STA TEMPN5+1
  6707   86   B4      		STX TEMPN5	;(CDR)
  6709   A5   A6      		LDA TEMPNH
  670B   20   84   72 		JSR TPCHR
  670E   A5   A7      		LDA TEMPNH+1
  6710   F0   06      		BEQ TPTMWE
  6712   20   84   72 		JSR TPCHR
  6715   4C   EF   66 		JMP TPATMW
  6718   A5   B2      	TPTMWE:	LDA ANSN
  671A   F0   25      		BEQ LTPRTS
  671C   A5   57      		LDA INDEV
  671E   F0   21      		BEQ LTPRTS
  6720   A9   27      		LDA #$27	;(Single Quote)
  6722   4C   84   72 		JMP TPCHR
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-142
LOGO	GARBAGE COLLECTOR

  6725   A0   02      	TPSATM:	LDY #$02
  6727   B1   B4      		LDA (TEMPN5),Y
  6729   AA           		TAX
  672A   C8           		INY
  672B   B1   B4      		LDA (TEMPN5),Y
  672D   85   B5      		STA TEMPN5+1
  672F   86   B4      		STX TEMPN5	;(CDR)
  6731   A0   03      		LDY #$03
  6733   B1   B4      	TPSTMW:	LDA (TEMPN5),Y
  6735   F0   0A      		BEQ LTPRTS
  6737   84   B2      		STY ANSN
  6739   20   84   72 		JSR TPCHR
  673C   A4   B2      		LDY ANSN
  673E   C8           		INY
  673F   D0   F2      		BNE TPSTMW	;(Always)
  6741   60           	LTPRTS:	RTS
                      
                      	;Types a two-byte fixnum, always positive.
  6742   20   5F   67 	TYPFIX:	JSR CVFIX	;Get string on PDL
  6745   4C   4B   67 		JMP PRTPDL	;Type string on PDL
                      
                      	;Types a four-byte fixnum in NARG1.
  6748   20   71   67 	TPBFIX:	JSR CVBFIX	;Get string on PDL
                      
                      	;Type the string on the PDL, ANSN1 holds character count.
  674B   A9   00      	PRTPDL:	LDA #$00
  674D   48           		PHA		;Push stop indicator
  674E   20   9E   52 	PRTPL1:	JSR POPB	;Pop chars off PDL and onto stack
  6751   48           		PHA
  6752   C6   B3      		DEC ANSN1
  6754   D0   F8      		BNE PRTPL1
  6756   68           	PRTPL2:	PLA		;Pop chars from stack and type them
  6757   F0   E8      		BEQ LTPRTS	;until stop indicator popped
  6759   20   84   72 		JSR TPCHR
  675C   4C   56   67 		JMP PRTPL2
                      
                      	;Converts a two-byte fixnum to  a string on the PDL
  675F   B5   00      	CVFIX:	LDA $00,X
  6761   85   A2      		STA NARG1
  6763   B5   01      		LDA $01,X
  6765   85   A3      		STA NARG1+1	;NARG1 is the number to type
  6767   A9   00      		LDA #$00
  6769   85   B3      		STA ANSN1	;Character counter
  676B   85   A4      	CVFIXX:	STA NARG1+2	;(Alternate entry point)
  676D   85   A5      		STA NARG1+3
  676F   F0   16      		BEQ CVFX2	;(Always)
                      
                      	;Get 4-byte fixnum in NARG1 to string on PDL
  6771   A9   00      	CVBFIX:	LDA #$00
  6773   85   B3      		STA ANSN1	;Character counter
  6775   A5   A5      		LDA NARG1+3
  6777   10   0C      		BPL CVFX1
  6779   A2   A2      		LDX #NARG1
  677B   20   D1   78 		JSR COMPL
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-143
LOGO	GARBAGE COLLECTOR

  677E   A2   2D      		LDX #'-
  6780   20   3C   52 		JSR PUSH
  6783   E6   B3      		INC ANSN1
  6785   A9   00      	CVFX1:	LDA #$00
  6787   85   B2      	CVFX2:	STA ANSN	;ANSN is digit counter
  6789   20   E1   78 	CVBNMR:	JSR XDVD10	;Divide NARG1 by ten and get remainder
  678C   48           		PHA		;Push remainder digit
  678D   E6   B2      		INC ANSN	;Increment digit counter
  678F   A2   03      		LDX #$03
  6791   B5   A2      	CVBL1:	LDA NARG1,X
  6793   D0   F4      		BNE CVBNMR
  6795   CA           		DEX
  6796   10   F9      		BPL CVBL1
  6798   68           	CVBNMF:	PLA		;Pop a digit
  6799   AA           		TAX
  679A   20   3C   52 		JSR PUSH	;Push it
  679D   E6   B3      		INC ANSN1
  679F   C6   B2      		DEC ANSN
  67A1   D0   F5      		BNE CVBNMF
  67A3   60           		RTS
                      
                      	;Type the flonum in NARG1.
  67A4   20   AA   67 	TYPFLO:	JSR CVFLO	;Get String on PDL
  67A7   4C   4B   67 		JMP PRTPDL	;Type string on PDL
                      
                      	;Converts flonum NARG1 to characters on PDL
  67AA   A9   00      	CVFLO:	LDA #$00
  67AC   85   B3      		STA ANSN1	;Counts number of characters pushed
  67AE   85   C0      		STA ANSN2	;ODE
  67B0   A2   03      		LDX #$03
  67B2   B5   A2      	TPFLL1:	LDA NARG1,X
  67B4   D0   11      		BNE TPFL1
  67B6   CA           		DEX
  67B7   10   F9      		BPL TPFLL1
  67B9   E6   B3      		INC ANSN1
  67BB   A2   30      		LDX #'0		;If NARG1 = 0, push "0." and return
  67BD   20   3C   52 		JSR PUSH
  67C0   E6   B3      		INC ANSN1
  67C2   A2   2E      		LDX #'.
  67C4   4C   3C   52 		JMP PUSH
  67C7   A5   A3      	TPFL1:	LDA NARG1+1
  67C9   10   0A      		BPL TPFL2	;If NARG1 negative, invert and push "-"
  67CB   20   F3   69 		JSR FCOMPL
  67CE   E6   B3      		INC ANSN1
  67D0   A2   2D      		LDX #'-
  67D2   20   3C   52 		JSR PUSH
  67D5   A5   A2      	TPFL2:	LDA NARG1	;Now get 1 <= NARG1 < 10
  67D7   10   2A      		BPL TPFLS1	;Exponent too small, so multiply number
  67D9   C9   84      		CMP #$84
  67DB   B0   0A      		BCS TPFLG1	;Exponent greater than 3, so too big
  67DD   C9   83      		CMP #$83
  67DF   D0   2B      		BNE GINTP1	;Ok if 0,1, or 2
  67E1   A5   A3      		LDA NARG1+1	;Else if 3,
  67E3   C9   50      		CMP #$50	;Make sure X < 10 (01.01 0000 Bin)
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-144
LOGO	GARBAGE COLLECTOR

  67E5   90   25      		BCC GINTP1
  67E7   A0   3C      	TPFLG1:	LDY #A1L
  67E9   20   F3   4C 		JSR XN1TOY	;Save NARG1, so it's now XNUM
  67EC   20   6E   4D 	TPFLL2:	JSR FDVD10	;So divide by 10
  67EF   E6   C0      		INC ANSN2	;Increment ODE
  67F1   A5   A2      		LDA NARG1
  67F3   C9   84      		CMP #$84
  67F5   B0   F5      		BCS TPFLL2
  67F7   C9   83      		CMP #$83
  67F9   D0   16      		BNE GINTP2
  67FB   A5   A3      		LDA NARG1+1
  67FD   C9   50      		CMP #$50
  67FF   B0   EB      		BCS TPFLL2
  6801   90   0E      		BCC GINTP2
  6803   20   61   4D 	TPFLS1:	JSR MULN10	;NARG1 too small, so multiply by 10
  6806   C6   C0      		DEC ANSN2	;Decrement ODE
  6808   A5   A2      		LDA NARG1
  680A   10   F7      		BPL TPFLS1
  680C   A0   3C      	GINTP1:	LDY #A1L
  680E   20   F3   4C 		JSR XN1TOY
  6811   20   92   68 	GINTP2:	JSR GETINT
  6814   A0   3C      		LDY #A1L
  6816   20   FF   4C 		JSR XYTON1
  6819   A5   C0      		LDA ANSN2
  681B   85   C2      		STA ANSNX	;NDE
  681D   10   37      		BPL TPFLG2
  681F   C9   FF      		CMP #$FF
  6821   90   37      		BCC TPFLF1	;NARG1 < 0.1, use floating pt. format (N)
                      
  6823   85   C1      	TPFLR:	STA ANSN3	;Counter for Exp+1 iterations
  6825   E6   C1      		INC ANSN3
  6827   F0   07      		BEQ TPFLR1
  6829   20   AF   68 	TPFLL5:	JSR GTDECH
  682C   C6   C1      		DEC ANSN3
  682E   D0   F9      		BNE TPFLL5
  6830   A2   2E      	TPFLR1:	LDX #'.
  6832   20   3C   52 		JSR PUSH	;Push decimal pt.
  6835   E6   B3      		INC ANSN1
  6837   38           		SEC
  6838   A9   06      		LDA #$06
  683A   E5   C0      		SBC ANSN2
  683C   85   C1      		STA ANSN3	;Counter for 6-Exp iterations
  683E   F0   07      		BEQ POPTZS
  6840   20   AF   68 	TPFLL6:	JSR GTDECH
  6843   C6   C1      		DEC ANSN3
  6845   D0   F9      		BNE TPFLL6
  6847   20   9E   52 	POPTZS:	JSR POPB	;Pop all trailing zeroes
  684A   C6   B3      		DEC ANSN1
  684C   C9   30      		CMP #'0
  684E   F0   F7      		BEQ POPTZS
  6850   AA           		TAX
  6851   E6   B3      		INC ANSN1
  6853   4C   3C   52 		JMP PUSH	;Done
                      
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-145
LOGO	GARBAGE COLLECTOR

  6856   C9   07      	TPFLG2:	CMP #$07
  6858   90   C9      		BCC TPFLR	;NARG1 < 10000000, use regular format
  685A   20   AF   68 	TPFLF1:	JSR GTDECH	;Floating pt. format, call Get-Decimal-Char for digit
  685D   A2   2E      		LDX #'.
  685F   20   3C   52 		JSR PUSH	;Push a "."
  6862   E6   B3      		INC ANSN1
  6864   A9   06      		LDA #$06	;Counter for six iterations
  6866   85   C1      		STA ANSN3
  6868   20   AF   68 	TPFLL3:	JSR GTDECH	;Get another decimal digit
  686B   C6   C1      		DEC ANSN3
  686D   D0   F9      		BNE TPFLL3
  686F   20   47   68 		JSR POPTZS	;Pop all trailing zeros
  6872   A5   C0      		LDA ANSN2
  6874   10   0A      		BPL TPFLEP
  6876   49   FF      		EOR #$FF	;If Exp negative, invert
  6878   85   C0      		STA ANSN2
  687A   E6   C0      		INC ANSN2	;(Complement and increment)
  687C   A2   4E      		LDX #'N		;and push "N"
  687E   D0   02      		BNE TPFLEX	;(Always)
  6880   A2   45      	TPFLEP:	LDX #'E		;Exp positive, push "E"
  6882   20   3C   52 	TPFLEX:	JSR PUSH
  6885   E6   B3      		INC ANSN1
  6887   A5   C0      		LDA ANSN2
  6889   85   A2      		STA NARG1
  688B   A9   00      		LDA #$00
  688D   85   A3      		STA NARG1+1
  688F   4C   6B   67 		JMP CVFIXX	;Routine converts (2-byte) ARG1 into string on PDL
                      
  6892   A9   00      	GETINT:	LDA #$00	;Gets the integer part of NARG1
  6894   85   AA      		STA TEMPN1	;INTP
  6896   A5   A2      	GETL1:	LDA NARG1
  6898   F0   14      		BEQ GTDR
  689A   C9   80      		CMP #$80	;Done if Binary-exp is 0
  689C   F0   08      		BEQ GTD1
  689E   06   A3      		ASL NARG1+1	;Rotate NARG1 mantissa into TEMPN1
  68A0   26   AA      		ROL TEMPN1
  68A2   C6   A2      		DEC NARG1	;Decrement Binary-exp
  68A4   D0   F0      		BNE GETL1	;(Always)
  68A6   06   A3      	GTD1:	ASL NARG1+1
  68A8   26   AA      		ROL TEMPN1	;Shift two more bits into TEMPN1
  68AA   06   A3      		ASL NARG1+1
  68AC   26   AA      		ROL TEMPN1
  68AE   60           	GTDR:	RTS
                      
                      	;Gets the most significant decimal digit of NARG1, then positions it for next one.
  68AF   18           	GTDECH:	CLC
  68B0   A5   AA      		LDA TEMPN1
  68B2   69   30      		ADC #'0
  68B4   AA           		TAX
  68B5   20   3C   52 		JSR PUSH
  68B8   E6   B3      		INC ANSN1
  68BA   A5   C2      		LDA ANSNX
  68BC   30   43      		BMI GTDC1
  68BE   F0   41      		BEQ GTDC1
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-146
LOGO	GARBAGE COLLECTOR

  68C0   85   AB      		STA TEMPN1+1
  68C2   A0   3C      		LDY #A1L
  68C4   20   F3   4C 		JSR XN1TOY
  68C7   A5   AA      		LDA TEMPN1
  68C9   85   A2      		STA NARG1
  68CB   A9   00      		LDA #$00
  68CD   85   A3      		STA NARG1+1
  68CF   85   A4      		STA NARG1+2
  68D1   85   A5      		STA NARG1+3
  68D3   20   2C   69 		JSR FLOTN1
  68D6   20   61   4D 	GTDL1:	JSR MULN10
  68D9   C6   AB      		DEC TEMPN1+1
  68DB   D0   F9      		BNE GTDL1
  68DD   A0   3C      		LDY #A1L
  68DF   20   87   8E 		JSR XYTON2
  68E2   20   A5   69 		JSR FSUBX
  68E5   A0   3C      		LDY #A1L
  68E7   20   F3   4C 		JSR XN1TOY
  68EA   C6   C2      		DEC ANSNX
  68EC   F0   0B      		BEQ GTDL3E
  68EE   A5   C2      		LDA ANSNX
  68F0   85   AB      		STA TEMPN1+1
  68F2   20   6E   4D 	GTDL3:	JSR FDVD10
  68F5   C6   AB      		DEC TEMPN1+1
  68F7   D0   F9      		BNE GTDL3
  68F9   20   92   68 	GTDL3E:	JSR GETINT
  68FC   A0   3C      		LDY #A1L
  68FE   4C   FF   4C 		JMP XYTON1
  6901   A5   AA      	GTDC1:	LDA TEMPN1
  6903   85   9E      		STA NARG2
  6905   A9   00      		LDA #$00
  6907   85   9F      		STA NARG2+1
  6909   85   A0      		STA NARG2+2
  690B   85   A1      		STA NARG2+3
  690D   20   23   69 		JSR FLOTN2
  6910   20   A2   69 		JSR FSUB
  6913   20   61   4D 		JSR MULN10
  6916   A0   3C      		LDY #A1L
  6918   20   F3   4C 		JSR XN1TOY
  691B   20   92   68 		JSR GETINT
  691E   A0   3C      		LDY #A1L
  6920   4C   FF   4C 		JMP XYTON1
                      	;Execution diagram, flonum-to-string conversion:
                      	;ODE := 0
                      	;IF NUM <= 1 THEN DO NUM := NUM * 10, ODE := ODE - 1, UNTIL NUM >= 1, INTP = INT(NUM)
                      	;   ELSE IF NUM >= 10 THEN XNUM := NUM, DO XNUM := XNUM / 10, ODE := ODE + 1, UNTIL XNUM < 10,
                      	;		INTP := INT(XNUM)
                      	;NDE := ODE
                      	;IF ODE > 6 OR ODE < -1 THEN GET-DIG, PUSH("."), REPEAT 6 GET-DIG, POP-TZS, PR-EXP
                      	;   ELSE REPEAT ODE+1 GET-DIG, PUSH("."), REPEAT 6-ODE GET-DIG, POP-TZS
                      	;
                      	;GET-DIG:
                      	;	PUSH(INTP)
                      	;	IF NDE > 0 THEN REPEAT NDE INTP := INTP * 10, NDE := NDE - 1,
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-147
LOGO	GARBAGE COLLECTOR

                      	;		NUM := NUM - INTP, XNUM := NUM, REPEAT NDE XNUM := XNUM / 10,
                      	;		INTP := INT(XNUM)
                      	;	ELSE NUM := NUM - INTP, NUM := NUM * 10, INTP := INT(NUM)
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-148
LOGO	GARBAGE COLLECTOR

                      	;Floating Point routines:
                      
                      	;(NARG1 and NARG2 are X/M1 and X/M2 respectively, E is TEMPNH, SIGN is ANSN.)
                      
  6923   20   7A   69 	FLOTN2:	JSR SWAP
  6926   20   2C   69 		JSR FLOTN1
  6929   4C   7A   69 		JMP SWAP
                      
  692C   A5   A5      	FLOTN1:	LDA NARG1+3
  692E   10   0B      		BPL XFLOAT
  6930   A2   A2      		LDX #NARG1
  6932   20   D1   78 		JSR COMPL
  6935   20   3B   69 		JSR XFLOAT
  6938   4C   F3   69 		JMP FCOMPL
                      
  693B   A9   9E      	XFLOAT:	LDA #$9E
  693D   85   B2      		STA ANSN	;Shift counter (exponent)
  693F   A5   A5      	XFLT1:	LDA NARG1+3
  6941   C9   C0      		CMP #$C0
  6943   30   0C      		BMI XFLT2
  6945   06   A2      		ASL NARG1
  6947   26   A3      		ROL NARG1+1	;Rotate left to left-justify
  6949   26   A4      		ROL NARG1+2
  694B   26   A5      		ROL NARG1+3
  694D   C6   B2      		DEC ANSN
  694F   D0   EE      		BNE XFLT1	;Stop if exponent is zero
  6951   A5   A3      	XFLT2:	LDA NARG1+1	;Reverse LSB, MSB for floating pt. format
  6953   A4   A5      		LDY NARG1+3
  6955   84   A3      		STY NARG1+1
  6957   85   A5      		STA NARG1+3
  6959   A5   B2      		LDA ANSN
  695B   85   A2      		STA NARG1	;Put in exponent
  695D   60           		RTS
                      
                      	;Add M1 and M2, result in M1.
  695E   18           	ADD:	CLC		;Clear carry
  695F   A2   02      		LDX #$02	;Index for 3-byte add
  6961   B5   A3      	ADD1:	LDA NARG1+1,X
  6963   75   9F      		ADC NARG2+1,X	;Add a byte of Mant2 to Mant1
  6965   95   A3      		STA NARG1+1,X
  6967   CA           		DEX		;Index to next more signif. byte
  6968   10   F7      		BPL ADD1	;Loop until done
  696A   60           		RTS		;Return
                      
                      	;Makes X/M1 and X/M2 positive. Returns with LSB of SIGN equal to XOR of
                      	;signs of original numbers. Copies (positive) mantissa of X/M1 into E.
  696B   06   B2      	MD1:	ASL ANSN	;Clear LSB of Sign
  696D   20   70   69 		JSR ABSWAP	;Abs. val. of M1, then swap with M2
  6970   24   A3      	ABSWAP:	BIT NARG1+1	;Is Mant1 negative...
  6972   10   05      		BPL ABSWP1	;No, swap with Mant2 and return
  6974   20   F3   69 		JSR FCOMPL	;Yes, complement it.
  6977   E6   B2      		INC ANSN	;Increment sign, complementing LSB
  6979   38           	ABSWP1:	SEC		;Set carry for return to MUL/DIV
                      
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-149
LOGO	GARBAGE COLLECTOR

                      	;Swaps X/M1 and X/M2 and leaves a copy of M1 in E.
  697A   A2   04      	SWAP:	LDX #$04	;Index for 4-byte swap
  697C   94   A5      	SWAP1:	STY TEMPNH-1,X
  697E   B5   A1      		LDA NARG1-1,X	;Swap a byte of Exp/Mant1 with
  6980   B4   9D      		LDY NARG2-1,X	;Exp/Mant2 and leave a copy of
  6982   94   A1      		STY NARG1-1,X	;Mant1 in E (3 bytes). (E+3 is destroyed.)
  6984   95   9D      		STA NARG2-1,X
  6986   CA           		DEX		;Advance index to next byte
  6987   D0   F3      		BNE SWAP1	;Loop until done
  6989   60           		RTS		;Return
                      
                      	;Normalize M1 and X1 to standard format floating pt. (left-justified mantissa,
                      	;exponent tells how much so).
  698A   A5   A3      	NORM1:	LDA NARG1+1	;High-order Mant1 byte
  698C   C9   C0      		CMP #$C0	;Are Upper two bits unequal...
  698E   30   0C      		BMI RTS1	;Yes, return with Mant1 normalized.
  6990   C6   A2      		DEC NARG1	;Decrement X1
  6992   06   A5      		ASL NARG1+3
  6994   26   A4      		ROL NARG1+2	;Shift Mant1 3 bytes left
  6996   26   A3      		ROL NARG1+1
  6998   A5   A2      	FNORM:	LDA NARG1	;Is Exp1 zero...
  699A   D0   EE      		BNE NORM1	;No, continue normalizing.
  699C   60           	RTS1:	RTS		;Return
                      
                      	;Floating pt. add. X/M1 becomes X/M2 + X/M1.
  699D   20   BD   69 	FADD:	JSR FADD1
  69A0   18           		CLC		;If it returns, then no overflow
  69A1   60           		RTS
                      
  69A2   20   7A   69 	FSUB:	JSR SWAP	;It does M2-M1, we want M1-M2
  69A5   20   B7   69 	FSUBX:	JSR FSUB1
  69A8   18           		CLC
  69A9   60           		RTS
                      
  69AA   20   DB   69 	FMUL:	JSR FMULT
  69AD   18           		CLC
  69AE   60           		RTS
                      
  69AF   20   7A   69 	FDIV:	JSR SWAP	;It does M2/M1, we want M1/M2.
  69B2   20   01   6A 		JSR FDIVD
  69B5   18           		CLC
  69B6   60           		RTS
                      
                      	;Floating pt. subtract. X/M1 becomes X/M2 - X/M1.
  69B7   20   F3   69 	FSUB1:	JSR FCOMPL	;Complement Mant1, clears carry unless 0
  69BA   20   CA   69 	SWPALN:	JSR ALNSWP	;Right shift Mant1 or swap
                      
  69BD   A5   9E      	FADD1:	LDA NARG2
  69BF   C5   A2      		CMP NARG1	;Compare Exp1 with Exp2
  69C1   D0   F7      		BNE SWPALN	;If unequal, swap addends or align mantissas
  69C3   20   5E   69 		JSR ADD		;Add aligned mantissas
                      
                      	;Cleans up after complementing mantissa, or after adding mantissas.
  69C6   50   D0      	ADDEND:	BVC FNORM	;No overflow, normalize result
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-150
LOGO	GARBAGE COLLECTOR

  69C8   70   05      		BVS RTLOG	;(Always) Overflow - shift M1 right, carry into Sign
                      
                      	;Either swap mantissas (for another alignment) or do an alignment. Carry bit
                      	;resultants determine which to do each time over.
  69CA   90   AE      	ALNSWP:	BCC SWAP	;Swap if carry clear, else shift right arith.
                      
                      	;Shifts mantissa right, towards pure fixnum.
  69CC   A5   A3      	RTAR:	LDA NARG1+1	;Sign of M1 into carry for
  69CE   0A           		ASL A		;right arith. shift
                      
                      	;Make upper two bits of mantissa unequal by shifting M1 right.
                      	;Also shifts LSB of M1 into MSB of E.
  69CF   E6   A2      	RTLOG:	INC NARG1	;Increment X1 to adjust for right shift
  69D1   F0   77      		BEQ OVFL	;Exp1 out of range
  69D3   A2   FA      	RTLOG1:	LDX #$FA	;Index for 6 byte right shift
  69D5   76   A9      	ROR1:	ROR TEMPNH+3,X	;(M1 and E must be contiguous)
  69D7   E8           		INX		;Next byte of shift
  69D8   D0   FB      		BNE ROR1	;Loop until done
  69DA   60           		RTS		;Return
                      
                      	;Floating pt. multiply. X/M1 becomes X/M1 * X/M2.
  69DB   20   6B   69 	FMULT:	JSR MD1		;Absolute value of Mant1, Mant2.
  69DE   65   A2      		ADC NARG1	;Add Exp1 to Exp2 for product Exp
  69E0   20   31   6A 		JSR MD2		;Check product exp. and prepare for multiply
  69E3   18           		CLC		;Clear carry for first bit
  69E4   20   D3   69 	FMUL1:	JSR RTLOG1	;M1 and E right (product and multiplier)
  69E7   90   03      		BCC FMUL2	;If carry clear, skip partial product
  69E9   20   5E   69 		JSR ADD		;Add multiplicand to product
  69EC   88           	FMUL2:	DEY		;Next multiply iteration
  69ED   10   F5      		BPL FMUL1	;Loop until done
                      
  69EF   46   B2      	MDEND:	LSR ANSN	;Test Sign LSB
  69F1   90   A5      	NORMX:	BCC FNORM	;If even, normalize product, else complement
                      
                      	;Complement the mantissa of M1.
  69F3   38           	FCOMPL:	SEC		;Set carry for subtract
  69F4   A2   03      		LDX #$03	;Index for 3-byte subtract
  69F6   A9   00      	COMPL1:	LDA #$00	;Clear A
  69F8   F5   A2      		SBC NARG1,X	;Subtract byte of Exp1
  69FA   95   A2      		STA NARG1,X	;Restore it
  69FC   CA           		DEX		;Next more significant byte
  69FD   D0   F7      		BNE COMPL1	;Loop until done
  69FF   F0   C5      		BEQ ADDEND
                      
                      	;Floating pt. multiply. X/M1 becomes X/M1 / X/M2.
  6A01   20   6B   69 	FDIVD:	JSR MD1		;Take abs. val. of Mant1, Mant2
  6A04   E5   A2      		SBC NARG1	;Subtract Exp1 from Exp2
  6A06   20   31   6A 		JSR MD2		;Save as quotient exp.
  6A09   38           	DIV1:	SEC		;Set carry for subtract
  6A0A   A2   02      		LDX #$02	;Index for 3-byte subtraction
  6A0C   B5   9F      	DIV2:	LDA NARG2+1,X
  6A0E   F5   A6      		SBC TEMPNH,X	;Subtract a byte of E from Mant2
  6A10   48           		PHA		;Save on stack
  6A11   CA           		DEX		;Next more significant byte
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-151
LOGO	GARBAGE COLLECTOR

  6A12   10   F8      		BPL DIV2	;Loop until done
  6A14   A2   FD      		LDX #$FD	;Index for 3-byte conditional move
  6A16   68           	DIV3:	PLA		;Pull byte of difference off stack
  6A17   90   02      		BCC DIV4	;If M2 smaller than E then don't restore M2
  6A19   95   A2      		STA NARG2+4,X
  6A1B   E8           	DIV4:	INX		;Next less significant byte
  6A1C   D0   F8      		BNE DIV3	;Loop until done
  6A1E   26   A5      		ROL NARG1+3
  6A20   26   A4      		ROL NARG1+2	;Roll quotient left, carry into LSB
  6A22   26   A3      		ROL NARG1+1
  6A24   06   A1      		ASL NARG2+3
  6A26   26   A0      		ROL NARG2+2	;Shift dividend left
  6A28   26   9F      		ROL NARG2+1
  6A2A   B0   1E      		BCS OVFL	;Overflow is due to un-normalized divisor
  6A2C   88           		DEY		;Next divide iteration
  6A2D   D0   DA      		BNE DIV1	;Loop until done 23 iterations
  6A2F   F0   BE      		BEQ MDEND	;(Always) Normalize quotient and correct sign
                      
                      	;Prepare for multiply or divide, check result's exponent.
  6A31   86   A5      	MD2:	STX NARG1+3
  6A33   86   A4      		STX NARG1+2	;Clear Mant1 (3 bytes) for MUL/DIV
  6A35   86   A3      		STX NARG1+1
  6A37   B0   0D      		BCS OVCHK	;If calculation set carry, check for overflow
  6A39   30   04      		BMI MD3		;If negative, then no underflow
  6A3B   68           		PLA		;Pop one return level (undeflow, answer is 0)
  6A3C   68           		PLA
  6A3D   90   B2      		BCC NORMX	;Clear X1 and return
  6A3F   49   80      	MD3:	EOR #$80	;Complement sign bit of exponent
  6A41   85   A2      		STA NARG1	;Store it.
  6A43   A0   17      		LDY #$17	;Count 24. (MUL) or 23. (DIV) iterations
  6A45   60           		RTS		;Return
                      
  6A46   10   F7      	OVCHK:	BPL MD3		;If positive exponent, then no overflow.
  6A48   68           		PLA
  6A49   68           		PLA		;Pop past MD2 call
                      
  6A4A   68           	OVFL:	PLA	;Overflow, pop past first function call
  6A4B   68           		PLA
  6A4C   38           		SEC	;Indicate overflow
  6A4D   60           		RTS
                      
                      	;Changes the argument in (X) from Flonum to four-byte Fixnum.
  6A4E   20   7A   69 	XINT2:	JSR SWAP	;Pos or neg, only NARG2
  6A51   20   57   6A 		JSR XINT1
  6A54   4C   7A   69 		JMP SWAP
                      
  6A57   A5   A2      	XINT1:	LDA NARG1	;Pos or neg, only NARG1
  6A59   30   0B      		BMI FFIXP
  6A5B   A9   00      		LDA #$00	;Negative exponent gives zero result
  6A5D   85   A2      		STA NARG1
  6A5F   85   A3      		STA NARG1+1
  6A61   85   A4      		STA NARG1+2
  6A63   85   A5      		STA NARG1+3
  6A65   60           	FFIXR:	RTS
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-152
LOGO	GARBAGE COLLECTOR

  6A66   C9   9F      	FFIXP:	CMP #$9F
  6A68   B0   31      		BCS OVFL1	;Exponent too high, overflow
  6A6A   A5   A3      		LDA NARG1+1
  6A6C   10   0B      		BPL FFIXP1
  6A6E   20   F3   69 		JSR FCOMPL
  6A71   20   79   6A 		JSR FFIXP1
  6A74   A2   A2      		LDX #NARG1
  6A76   4C   D1   78 		JMP COMPL
  6A79   A5   A2      	FFIXP1:	LDA NARG1
  6A7B   85   B2      		STA ANSN
  6A7D   A9   00      		LDA #$00
  6A7F   85   A2      		STA NARG1	;Init LSB to zero
  6A81   A5   A3      		LDA NARG1+1
  6A83   A4   A5      		LDY NARG1+3	;Switch LSB, MSB for fixnum format
  6A85   84   A3      		STY NARG1+1
  6A87   85   A5      		STA NARG1+3
  6A89   A5   B2      	FFIX1:	LDA ANSN
  6A8B   C9   9E      		CMP #$9E
  6A8D   F0   D6      		BEQ FFIXR	;Done when Exp=30. (4 bytes, binary point two places in)
  6A8F   46   A5      		LSR NARG1+3
  6A91   66   A4      		ROR NARG1+2	;Rotate to right-justify
  6A93   66   A3      		ROR NARG1+1
  6A95   66   A2      		ROR NARG1
  6A97   E6   B2      		INC ANSN
  6A99   D0   EE      		BNE FFIX1	;(Always)
  6A9B   A9   20      	OVFL1:	LDA #XOFLOW
  6A9D   4C   47   61 		JMP ERROR
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-153
LOGO	SCREEN EDITOR

                      	.SBTTL	Screen Editor
                      
                      	;increment the point (EPOINT,EPOINT+1).
                      
  6AA0   E6   C5      	INCPNT:	INC EPOINT
  6AA2   D0   02      		BNE INCPT2
  6AA4   E6   C6      		INC EPOINT+1
  6AA6   60           	INCPT2:	RTS
                      
                      	;decrement the point.
                      
  6AA7   A5   C5      	DECPNT:	LDA EPOINT
  6AA9   38           		SEC
  6AAA   E9   01      		SBC #$01
  6AAC   85   C5      		STA EPOINT
  6AAE   B0   02      		BCS DECPT2
  6AB0   C6   C6      		DEC EPOINT+1
  6AB2   60           	DECPT2:	RTS
                      
                      	;set the point to the beginning of the buffer.
                      
  6AB3   A9   00      	PNTBEG:	LDA #EDBUF&$FF
  6AB5   85   C5      		STA EPOINT
  6AB7   A9   20      		LDA #EDBUF^
  6AB9   85   C6      		STA EPOINT+1
  6ABB   60           		RTS
                      
                      	;place cursor at top of screen
                      
  6ABC   A9   00      	TOPSCR:	LDA #$00	;cursor at top of screen
  6ABE   85   28      		STA BASLIN	;baseline for top of screen
  6AC0   85   24      		STA CH
  6AC2   85   25      		STA CV
  6AC4   A9   04      		LDA #$04
  6AC6   85   29      		STA BASLIN+1
  6AC8   60           		RTS
                      
                      	;output char in AC to EDBUF at point. Increments point. Does NOT
                      	;increment last-char-in-buffer pointer. Returns without modifying if
                      	;at end of buffer.
                      
  6AC9   AA           	EDOUT:	TAX		;save char
  6ACA   84   35      		STY YSAV1
  6ACC   A5   C6      		LDA EPOINT+1
  6ACE   C9   3F      		CMP #EBFEND^
  6AD0   90   08      		BCC EDOUT1
  6AD2   D0   0E      		BNE EDORTS
  6AD4   A5   C5      		LDA EPOINT
  6AD6   C9   FB      		CMP #EBFEND&$FF	;Are we at end of edit buffer...
  6AD8   B0   08      		BCS EDORTS	;if so, quit
  6ADA   A0   00      	EDOUT1:	LDY #$00
  6ADC   8A           		TXA
  6ADD   91   C5      		STA (EPOINT),Y	;if not, store char and inc pointer
  6ADF   20   A0   6A 		JSR INCPNT
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-154
LOGO	SCREEN EDITOR

  6AE2   A4   35      	EDORTS:	LDY YSAV1
  6AE4   60           	NULOUT:	RTS
                      
                      	;top level loop in the editor; listens for characters; outputs them to
                      	;the screen and the edit buffer; accepts commands and has them
                      	;processed.
                      
  6AE5   20   B0   75 	CHGLOP:	JSR RDKEY	;get char from kbd
  6AE8   C9   03      		CMP #$03	;^C means finished
  6AEA   F0   30      		BEQ CHGLPC	;read function into Logo and return.
  6AEC   C9   02      		CMP #$02	;^B means previous screen
  6AEE   F0   26      		BEQ CHGLPB
  6AF0   C9   04      		CMP #$04	;^D is delete char under cursor
  6AF2   F0   2B      		BEQ CHGLPD
  6AF4   C9   06      		CMP #$06	;^F means forward screen
  6AF6   F0   2D      		BEQ CHGLPF
  6AF8   C9   08      		CMP #$08	;^H means back char
  6AFA   F0   2F      		BEQ CHGLPH
  6AFC   C9   0C      		CMP #$0C	;^L means center point on screen
  6AFE   F0   31      		BEQ CHGLPL
  6B00   C9   0F      		CMP #$0F	;^O means open line
  6B02   F0   33      		BEQ CHGLPO
  6B04   C9   10      		CMP #$10	;^P means up line
  6B06   F0   35      		BEQ CHGLPP
  6B08   C9   15      		CMP #$15	;^U means forward char
  6B0A   F0   37      		BEQ CHGLPU
  6B0C   C9   1B      		CMP #$1B	;ESC means rubout
  6B0E   F0   39      		BEQ CHGLRB
  6B10   20   27   6D 		JSR INSERT	;not a command - insert it
  6B13   4C   E5   6A 		JMP CHGLOP
  6B16   20   3A   6E 	CHGLPB:	JSR PRVSCR
  6B19   4C   E5   6A 		JMP CHGLOP
  6B1C   4C   4F   6B 	CHGLPC:	JMP EDDONE
  6B1F   20   69   6E 	CHGLPD: JSR DELETE	;the return address CHGLOP was pushed
  6B22   4C   E5   6A 		JMP CHGLOP
  6B25   20   1C   6E 	CHGLPF:	JSR NXTSCR	;for these above (space bum)
  6B28   4C   E5   6A 		JMP CHGLOP
  6B2B   20   19   6F 	CHGLPH:	JSR BACKUP
  6B2E   4C   E5   6A 		JMP CHGLOP
  6B31   20   17   6E 	CHGLPL:	JSR CENTER
  6B34   4C   E5   6A 		JMP CHGLOP
  6B37   20   1B   70 	CHGLPO:	JSR OPLINE
  6B3A   4C   E5   6A 		JMP CHGLOP
  6B3D   20   64   6F 	CHGLPP:	JSR UPLINE
  6B40   4C   E5   6A 		JMP CHGLOP
  6B43   20   CE   6E 	CHGLPU:	JSR FORCHR
  6B46   4C   E5   6A 		JMP CHGLOP
  6B49   20   52   6E 	CHGLRB:	JSR RUBOUT
  6B4C   4C   E5   6A 		JMP CHGLOP
                      
                      	;EDDONE will read the editor-defined code back into Logo.
                      
  6B4F   A0   00      	EDDONE:	LDY #$00
  6B51   A9   0D      		LDA #$0D	;Carriage return at end, just in case none there
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-155
LOGO	SCREEN EDITOR

  6B53   91   C7      		STA (ENDBUF),Y
  6B55   E6   C7      		INC ENDBUF
  6B57   D0   02      		BNE EDDON2
  6B59   E6   C8      		INC ENDBUF+1
  6B5B   A2   75      	EDDON2:	LDX #ERDBK1&$FF
  6B5D   A0   6B      		LDY #ERDBK1^
  6B5F   20   3C   52 		JSR PUSH	;Return address from SREAD2
  6B62   20   B3   6A 		JSR PNTBEG	;point to beginning
  6B65   20   6D   72 		JSR CLRCBF
  6B68   20   7B   72 		JSR RESETT	;Clear the output device
  6B6B   A2   77      		LDX #WAITM&$FF
  6B6D   A0   DB      		LDY #WAITM^
  6B6F   20   95   54 		JSR PRTSTR
  6B72   4C   61   44 		JMP SREAD1
                      
  6B75   20   60   72 	ERDBK1:	JSR RSTIO
  6B78   4C   1E   41 		JMP POPJ
                      
                      	;this function will display the buffer beginning at the point on the
                      	;screen, beginning at CH, CV (should be consistent with BASLIN). It
                      	;will stop if there is nothing more in the buffer, or when there is no
                      	;more room on the screen. Updates TEMPN8 (last-char-displayed
                      	;pointer). EDSPBF will check as it displays for the point and will set
                      	;CV, CH accordingly. If you would like it to turn on the cursor at a
                      	;place other than the point, set A4L,A4H to it and call EDPBUF.
                      
  6B7B   A5   C5      	EDSPBF:	LDA EPOINT
  6B7D   85   42      		STA A4L
  6B7F   A5   C6      		LDA EPOINT+1
  6B81   85   43      		STA A4H
  6B83   A5   25      	EDPBUF:	LDA CV
  6B85   85   3E      		STA A2L
  6B87   A5   24      		LDA CH
  6B89   85   3F      		STA A2H
  6B8B   A5   C6      	EDSPLP:	LDA EPOINT+1
  6B8D   C5   C8      		CMP ENDBUF+1
  6B8F   90   08      		BCC EDSPB1
  6B91   D0   4D      		BNE EDPRTS
  6B93   A5   C5      		LDA EPOINT
  6B95   C5   C7      		CMP ENDBUF
  6B97   B0   47      		BCS EDPRTS	;quit if no more in buffer
  6B99   A0   00      	EDSPB1:	LDY #$00
  6B9B   B1   C5      		LDA (EPOINT),Y	;get char
  6B9D   C9   0D      		CMP #$0D	;#$0D = CR
  6B9F   F0   37      		BEQ EDSPCR
  6BA1   A6   24      		LDX CH
  6BA3   E8           		INX
  6BA4   E4   21      		CPX WNDWTH	;if at end of line and next char is a
  6BA6   90   13      		BCC EDPCHR	;cr, then no !. otherwise yes.
  6BA8   48           		PHA
  6BA9   A9   21      		LDA #'!
  6BAB   20   00   75 		JSR COUT	;output continuation line char
  6BAE   68           		PLA
  6BAF   A6   25      		LDX CV		;when we output the continuation char COUT
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-156
LOGO	SCREEN EDITOR

  6BB1   4C   B7   6B 		JMP EDPCR1	;inc'ed CV, so don't now.
  6BB4   A6   25      	EDOPCR:	LDX CV
  6BB6   E8           		INX		;if we output the CR (or char on next line),
  6BB7   E4   23      	EDPCR1:	CPX WNDBTM	;will we have exceeded the screen length...
  6BB9   B0   25      		BCS EDPRTS	;yes, quit while we're not ahead
  6BBB   A6   C5      	EDPCHR:	LDX EPOINT
  6BBD   E4   42      		CPX A4L
  6BBF   D0   0E      		BNE EDPCH2
  6BC1   A6   C6      		LDX EPOINT+1	;if we're at point then set CV, CH so we can
  6BC3   E4   43      		CPX A4H		;display the cursor in the right place when
  6BC5   D0   08      		BNE EDPCH2	;we come back
  6BC7   A6   25      		LDX CV
  6BC9   86   3E      		STX A2L
  6BCB   A6   24      		LDX CH
  6BCD   86   3F      		STX A2H
  6BCF   20   00   75 	EDPCH2:	JSR COUT	;output char; back for more
  6BD2   20   A0   6A 		JSR INCPNT
  6BD5   4C   8B   6B 		JMP EDSPLP
  6BD8   48           	EDSPCR:	PHA
  6BD9   20   8F   75 		JSR CLREOL
  6BDC   68           		PLA
  6BDD   4C   B4   6B 		JMP EDOPCR
  6BE0   20   EA   74 	EDPRTS:	JSR CLREOP
  6BE3   A6   C5      		LDX EPOINT
  6BE5   E4   42      		CPX A4L
  6BE7   D0   0E      		BNE EDPRS2
  6BE9   A6   C6      		LDX EPOINT+1	;if we're at point then set CV, CH so we can
  6BEB   E4   43      		CPX A4H		;display the cursor in the right place when
  6BED   D0   08      		BNE EDPRS2	;we come back
  6BEF   A6   25      		LDX CV
  6BF1   86   3E      		STX A2L
  6BF3   A6   24      		LDX CH
  6BF5   86   3F      		STX A2H
  6BF7   A0   00      	EDPRS2:	LDY #$00
  6BF9   B1   C5      		LDA (EPOINT),Y
  6BFB   C9   0D      		CMP #$0D	;if it was a CR then it was displayed even if
  6BFD   D0   03      		BNE EDPRS3	;we couldn't COUT it, so INCPNT so TEMPN8 is
  6BFF   20   A0   6A 		JSR INCPNT	;correct.
  6C02   A5   C5      	EDPRS3:	LDA EPOINT	;point is now at location after last char on
  6C04   85   BA      		STA TEMPN8	;screen; store in char-after-last-char-pointer
  6C06   A5   C6      		LDA EPOINT+1
  6C08   85   BB      		STA TEMPN8+1
  6C0A   A5   3F      		LDA A2H
  6C0C   85   24      		STA CH
  6C0E   A5   3E      		LDA A2L
  6C10   85   25      		STA CV
  6C12   20   75   75 		JSR BCALCA	;have CV in AC already
  6C15   A5   42      		LDA A4L
  6C17   85   C5      		STA EPOINT
  6C19   A5   43      		LDA A4H
  6C1B   85   C6      		STA EPOINT+1
  6C1D   60           		RTS
                      
  6C1E   A5   57      	CHGSTP:	LDA INDEV
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-157
LOGO	SCREEN EDITOR

  6C20   D0   3F      		BNE CHGSR1	;Error if already editing with CHANGE
  6C22   A5   7C      	CHGST1:	LDA LEVNUM
  6C24   D0   40      		BNE CHGSR2
  6C26   A5   7D      		LDA LEVNUM+1
  6C28   D0   3C      		BNE CHGSR2
  6C2A   A5   62      		LDA TOKPTR+1
  6C2C   F0   41      		BEQ CHGNON
  6C2E   A0   00      		LDY #$00
  6C30   B1   61      		LDA (TOKPTR),Y
  6C32   85   A2      		STA ARG1
  6C34   C8           		INY
  6C35   B1   61      		LDA (TOKPTR),Y
  6C37   85   A3      		STA ARG1+1	;(GETTOK)
  6C39   A2   A2      		LDX #ARG1
  6C3B   20   84   5D 		JSR GETTYP
  6C3E   C9   07      		CMP #SATOM
  6C40   F0   27      		BEQ CHGSR4
  6C42   C9   01      		CMP #ATOM
  6C44   D0   26      		BNE CHGSR5
  6C46   A2   A2      		LDX #ARG1
  6C48   A9   AA      		LDA #TEMPN1
  6C4A   20   92   56 		JSR GETFUN
  6C4D   A5   AB      		LDA TEMPN1+1
  6C4F   F0   2D      		BEQ CHGNEW
  6C51   20   E3   6C 	CHGOLD:	JSR CHGIN1
  6C54   A2   01      		LDX #$01
  6C56   A9   A2      		LDA #ARG1
  6C58   20   52   85 		JSR POTEXT	;store function text in EDBUF
  6C5B   20   C3   6C 		JSR CHGIN2
  6C5E   4C   78   6C 		JMP CHGIN3
  6C61   A9   15      	CHGSR1:	LDA #XEDT
  6C63   4C   47   61 		JMP ERROR
  6C66   4C   DD   7E 	CHGSR2:	JMP STTLR2	;(ERROR XETL)
  6C69   4C   6B   84 	CHGSR4:	JMP SPO5S	;(ERROR XUBL,ARG1)
  6C6C   4C   15   7C 	CHGSR5:	JMP SMAKE2	;(ERROR XWTA,ARG1,CURTOK)
                      
                      	;Gets the text of the function pointed to (indirectly) by AC into the
                      	;edit buffer. Sets point to beginning of buffer, buffer-end to (you
                      	;guessed it) last char sent to buffer.
                      
  6C6F   20   E3   6C 	CHGNON:	JSR CHGIN1
  6C72   20   B3   6A 		JSR PNTBEG	;set point to beginning of buffer
  6C75   20   C3   6C 		JSR CHGIN2
  6C78   20   7B   6B 	CHGIN3:	JSR EDSPBF	;call edit-display-buffer
  6C7B   4C   E5   6A 		JMP CHGLOP	;call text and command handling loop
                      
  6C7E   20   E3   6C 	CHGNEW:	JSR CHGIN1
  6C81   A2   6E      		LDX #TOMSG&$FF
  6C83   A0   DB      		LDY #TOMSG^
  6C85   20   95   54 		JSR PRTSTR
  6C88   A2   A2      		LDX #ARG1
  6C8A   A9   01      		LDA #$01
  6C8C   20   F9   65 		JSR LTYPE
  6C8F   A2   61      	CHGNLP:	LDX #TOKPTR
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-158
LOGO	SCREEN EDITOR

  6C91   20   8D   55 		JSR TFKADV
  6C94   A5   62      		LDA TOKPTR+1
  6C96   F0   1A      		BEQ CHGN2
  6C98   A0   00      		LDY #$00
  6C9A   B1   61      		LDA (TOKPTR),Y
  6C9C   85   A2      		STA ARG1
  6C9E   C8           		INY
  6C9F   B1   61      		LDA (TOKPTR),Y
  6CA1   85   A3      		STA ARG1+1
  6CA3   A9   20      		LDA #$20
  6CA5   20   84   72 		JSR TPCHR
  6CA8   A9   00      		LDA #$00
  6CAA   A2   A2      		LDX #ARG1
  6CAC   20   F9   65 		JSR LTYPE
  6CAF   4C   8F   6C 		JMP CHGNLP
  6CB2   A5   C5      	CHGN2:	LDA EPOINT
  6CB4   85   42      		STA A4L
  6CB6   A5   C6      		LDA EPOINT+1
  6CB8   85   43      		STA A4H
  6CBA   20   C3   6C 		JSR CHGIN2
  6CBD   20   83   6B 		JSR EDPBUF
  6CC0   4C   E5   6A 		JMP CHGLOP
                      
  6CC3   20   5A   74 	CHGIN2:	JSR SETVID	;make output device be screen again
  6CC6   A5   C5      		LDA EPOINT
  6CC8   85   C7      		STA ENDBUF	;save end of buffer
  6CCA   A5   C6      		LDA EPOINT+1
  6CCC   85   C8      		STA ENDBUF+1
  6CCE   20   B3   6A 	CHGX1:	JSR PNTBEG
  6CD1   A9   17      		LDA #$17	;Window bottom to allow display of
  6CD3   85   23      		STA WNDBTM	;"Apple Logo Editor" crock
  6CD5   A9   20      		LDA #EDBUF^	;store location of first char displayed
  6CD7   85   B9      		STA TEMPN7+1	;on screen (at beginning of buffer)
  6CD9   A9   00      		LDA #EDBUF&$FF
  6CDB   85   B8      		STA TEMPN7
  6CDD   20   BC   6A 		JSR TOPSCR
  6CE0   4C   F2   6C 		JMP CHGNYM	;print editor name
                      
  6CE3   A9   C9      	CHGIN1:	LDA #EDOUT&$FF	;location of edbuf output
  6CE5   85   36      		STA CSWL
  6CE7   A9   6A      		LDA #EDOUT^	;routine (for TPCHR)
  6CE9   85   37      		STA CSWH
  6CEB   A9   01      		LDA #BUFFER
  6CED   85   57      		STA INDEV
  6CEF   4C   B3   6A 		JMP PNTBEG	;initialize point for EDOUT
                      
  6CF2   20   41   74 	CHGNYM:	JSR SETREV	;print the "Apple Logo Screen Editor" thing on
  6CF5   A5   24      		LDA CH		;the bottom line.
  6CF7   48           		PHA
  6CF8   A5   25      		LDA CV		;save current screen location
  6CFA   48           		PHA
  6CFB   A5   28      		LDA BASLIN	;save old baseline
  6CFD   48           		PHA
  6CFE   A5   29      		LDA BASLIN+1
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-159
LOGO	SCREEN EDITOR

  6D00   48           		PHA
  6D01   A9   00      		LDA #$00
  6D03   85   24      		STA CH		;far left
  6D05   A9   23      		LDA #$23
  6D07   85   25      		STA CV		;bottom of screen
  6D09   A9   D0      		LDA #$D0	;slight speed bum -- we know we want
  6D0B   85   28      		STA BASLIN	;the bottom of the screen, so instead
  6D0D   A9   07      		LDA #$07	;of calculating it via BCALC, we load
  6D0F   85   29      		STA BASLIN+1	;it up.
  6D11   A2   45      		LDX #CHGMSG&$FF
  6D13   A0   DB      		LDY #CHGMSG^
  6D15   20   95   54 		JSR PRTSTR
  6D18   68           		PLA
  6D19   85   29      		STA BASLIN+1
  6D1B   68           		PLA
  6D1C   85   28      		STA BASLIN
  6D1E   68           		PLA
  6D1F   85   25      		STA CV
  6D21   68           		PLA
  6D22   85   24      		STA CH
  6D24   4C   49   74 		JMP SETNRM
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-160
LOGO	SCREEN EDITOR

                      	;Command subroutines. It is the responsibility of a command to do its
                      	;own redisplay, leave CH and CV indicating the position of the point
                      	;on the screen, and the appropriate value in BASLIN before returning
                      	;to CHGLOP. The cursor will be turned on by CHGLOP, however.
                      	;Any command (that does anything) must update the database. The
                      	;database consists of the edit buffer (EDBUF), whose contents must be
                      	;updated by insertions/deletions; the point (EPOINT,EPOINT+1); the
                      	;location in the EDBUF of the first character displayed on the screen
                      	;(TEMPN7,TEMPN7+1); the location in the EDBUF AFTER the last character
                      	;displayed on the screen (TEMPN8,TEMPN8+1), and the location AFTER
                      	;the last character in the EDBUF (ENDBUF,ENDBUF+1).
                      
  6D27   48           	INSERT:	PHA		;save char
  6D28   20   63   6D 		JSR MVDOWN	;move the buffer (starting at point) down one.
  6D2B   68           		PLA
  6D2C   48           		PHA
  6D2D   20   C9   6A 		JSR EDOUT	;put the char in the edit buffer
  6D30   68           		PLA
  6D31   C9   0D      		CMP #$0D
  6D33   F0   26      		BEQ INSRCR
  6D35   A6   24      		LDX CH
  6D37   E8           		INX
  6D38   E4   21      		CPX WNDWTH	;Are we at end of line...
  6D3A   90   19      		BCC INSRT2	;no, output straight
  6D3C   48           		PHA
  6D3D   A9   21      		LDA #'!		;output a line continuation char.
  6D3F   20   00   75 		JSR COUT
  6D42   68           		PLA		;recover char
  6D43   A6   25      		LDX CV		;if we output the line cont. char then COUT
  6D45   4C   4B   6D 		JMP INSRT0	;has inc'ed CV, so don't do it again.
  6D48   A6   25      	INSRT1:	LDX CV
  6D4A   E8           		INX
  6D4B   E4   23      	INSRT0:	CPX WNDBTM	;are we at end of screen...
  6D4D   D0   06      		BNE INSRT2
  6D4F   48           		PHA		;yes, redisplay instead of EDSPBF
  6D50   20   17   6E 		JSR CENTER	;^L type redisplay
  6D53   68           		PLA
  6D54   60           	INSRTS:	RTS
  6D55   20   00   75 	INSRT2:	JSR COUT	;output char to screen
  6D58   4C   7B   6B 		JMP EDSPBF	;redisplay buffer from point down
  6D5B   48           	INSRCR:	PHA
  6D5C   20   8F   75 		JSR CLREOL
  6D5F   68           		PLA
  6D60   4C   48   6D 		JMP INSRT1
                      
                      	;move the contents of the edit buffer after point down one until
                      	;reaching end of buffer contents (NOT end of buffer). Increments end
                      	;of buffer contents pointer. Bashes AC,Y.
                      
  6D63   A5   C7      	MVDOWN:	LDA ENDBUF
  6D65   38           		SEC
  6D66   E9   01      		SBC #$01
  6D68   85   3C      		STA A1L
  6D6A   A5   C8      		LDA ENDBUF+1
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-161
LOGO	SCREEN EDITOR

  6D6C   E9   00      		SBC #$00
  6D6E   85   3D      		STA A1H
  6D70   A0   01      		LDY #$01
  6D72   A5   3D      	MVLOOP:	LDA A1H
  6D74   C5   C6      		CMP EPOINT+1
  6D76   90   1B      		BCC MVRTS
  6D78   D0   06      		BNE MVCONT
  6D7A   A5   3C      		LDA A1L
  6D7C   C5   C5      		CMP EPOINT
  6D7E   90   13      		BCC MVRTS
  6D80   88           	MVCONT:	DEY
  6D81   B1   3C      		LDA (A1L),Y
  6D83   C8           		INY
  6D84   91   3C      		STA (A1L),Y
  6D86   A5   3C      		LDA A1L
  6D88   38           		SEC
  6D89   E9   01      		SBC #$01
  6D8B   85   3C      		STA A1L
  6D8D   B0   E3      		BCS MVLOOP
  6D8F   C6   3D      		DEC A1H
  6D91   90   DF      		BCC MVLOOP	;(Always)
  6D93   E6   C7      	MVRTS:	INC ENDBUF
  6D95   D0   02      		BNE MVRTS1
  6D97   E6   C8      		INC ENDBUF+1
  6D99   60           	MVRTS1:	RTS
                      
                      	;RDSPNT repositions the text on the screen around the point. The AC
                      	;should hold the number of lines before the point one wants redisplay
                      	;to start from. So, for ^L it should hold 12; for M-V it should hold
                      	;23. RDSPNT will get confused if given a buffer that contains more
                      	;than 256*39 contiguous chars without a carriage-return in them,
                      	;because we have a one-bite physical line counter. You change it. Sets
                      	;first and last char on screen pointers.
                      
  6D9A   85   3D      	RDSPNT:	STA A1H		;store the number of lines one wants before
  6D9C   A0   00      		LDY #$00	;point on screen
  6D9E   84   3C      		STY A1L		;zero char-counter
  6DA0   84   3E      		STY A2L 	;zero line-counter
  6DA2   A5   C6      		LDA EPOINT+1
  6DA4   85   43      		STA A4H		;save for recovery by EDPBUF
  6DA6   A5   C5      		LDA EPOINT
  6DA8   85   42      		STA A4L
  6DAA   38           		SEC
  6DAB   E5   24      		SBC CH		;get to beginning of screen line
  6DAD   85   C5      		STA EPOINT
  6DAF   B0   02      		BCS RDSPT2
  6DB1   C6   C6      		DEC EPOINT+1
  6DB3   20   A7   6A 	RDSPT2:	JSR DECPNT
  6DB6   A9   20      		LDA #EDBUF^
  6DB8   C5   C6      		CMP EPOINT+1
  6DBA   90   0C      		BCC RDSPT3	;if EDBUF is less than point, you're in
  6DBC   A9   00      		LDA #EDBUF&$FF	;buffer, otherwise at beginning or before
  6DBE   C5   C5      		CMP EPOINT	;if at beginning or before (horrors) quit
  6DC0   90   06      		BCC RDSPT3	;else continue
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-162
LOGO	SCREEN EDITOR

  6DC2   20   B3   6A 		JSR PNTBEG
  6DC5   4C   D6   6D 		JMP COUNTM
  6DC8   B1   C5      	RDSPT3:	LDA (EPOINT),Y
  6DCA   C9   0D      		CMP #$0D	;CR
  6DCC   F0   08      		BEQ COUNTM	;if so, see if we have enough lines now
  6DCE   E6   3C      		INC A1L		;else bump char counter
  6DD0   A5   3C      		LDA A1L
  6DD2   C9   27      		CMP #$27	;do we have a full line...
  6DD4   D0   DD      		BNE RDSPT2	;no, go back for more
  6DD6   84   3C      	COUNTM:	STY A1L		;zero char counter
  6DD8   E6   3E      		INC A2L		;bump line counter
  6DDA   A5   3E      		LDA A2L		;lines gotten
  6DDC   C5   3D      		CMP A1H		;lines wanted
  6DDE   F0   29      		BEQ REDISP	;if same, we done won, go redisplay.
  6DE0   B0   0E      		BCS CNTDWN
  6DE2   A5   C6      		LDA EPOINT+1
  6DE4   C9   20      		CMP #EDBUF^
  6DE6   D0   CB      		BNE RDSPT2	;if too few and at beginning of buffer,
  6DE8   A5   C5      		LDA EPOINT
  6DEA   C9   00      		CMP #EDBUF&$FF	;redisplay anyway
  6DEC   F0   1B      		BEQ REDISP
  6DEE   D0   C3      		BNE RDSPT2	;else go for more
  6DF0   A5   3E      	CNTDWN:	LDA A2L		;faster than a multiply, usually
  6DF2   38           		SEC
  6DF3   E5   3D      		SBC A1H		;# of extra lines
  6DF5   85   40      		STA A3L
  6DF7   A5   C5      	CNTLOP:	LDA EPOINT
  6DF9   18           		CLC
  6DFA   69   27      		ADC #$27	;move down a screen line of chars
  6DFC   90   02      		BCC CNTLP2
  6DFE   E6   C6      		INC EPOINT+1
  6E00   A5   40      	CNTLP2:	LDA A3L
  6E02   38           		SEC
  6E03   E9   01      		SBC #$01	;dec line counter
  6E05   85   40      		STA A3L
  6E07   D0   EE      		BNE CNTLOP	;go for more if not zero
  6E09   20   BC   6A 	REDISP:	JSR TOPSCR	;physical cursor at top of screen
  6E0C   A5   C5      		LDA EPOINT
  6E0E   85   B8      		STA TEMPN7	;make first-char-on-screen point
  6E10   A5   C6      		LDA EPOINT+1
  6E12   85   B9      		STA TEMPN7+1
  6E14   4C   83   6B 		JMP EDPBUF	;redisplay and restore point
                      
                      	;redisplay screen around point. Sets CV, CH, BASLIN,
                      	;first-char-on-screen, char-after-last-char-on-screen.
  6E17   A9   0C      	CENTER:	LDA #$0C	;#$0C = 12.
  6E19   4C   9A   6D 		JMP RDSPNT	;redisplay for point on 13th line
                      
                      	;NXTSCR moves to the next screenful in the buffer and displays it,
                      	;setting point to the character after the last char on the previous
                      	;screenful (thus it will be at top of screen).
                      
  6E1C   A5   BB      	NXTSCR:	LDA TEMPN8+1
  6E1E   C5   C8      		CMP ENDBUF+1
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-163
LOGO	SCREEN EDITOR

  6E20   D0   06      		BNE NXTSC2
  6E22   A5   BA      		LDA TEMPN8
  6E24   C5   C7      		CMP ENDBUF
  6E26   F0   3E      		BEQ RCMPLN	;complain if no next screen
  6E28   A5   BA      	NXTSC2:	LDA TEMPN8
  6E2A   85   C5      		STA EPOINT	;point
  6E2C   85   B8      		STA TEMPN7	;first char on screen
  6E2E   A5   BB      		LDA TEMPN8+1
  6E30   85   C6      		STA EPOINT+1
  6E32   85   B9      		STA TEMPN7+1
  6E34   20   BC   6A 		JSR TOPSCR
  6E37   4C   7B   6B 		JMP EDSPBF	;display
                      
                      	;PRVSCR moves to the previous screenful in the buffer, leaves point at
                      	;the top.
                      
  6E3A   A5   B8      	PRVSCR:	LDA TEMPN7
  6E3C   85   C5      		STA EPOINT	;make point be beginning of screen
  6E3E   A5   B9      		LDA TEMPN7+1
  6E40   85   C6      		STA EPOINT+1
  6E42   A9   17      		LDA #$17	;redisplay 23 lines before it
  6E44   20   9A   6D 		JSR RDSPNT
  6E47   A5   B8      		LDA TEMPN7
  6E49   85   C5      		STA EPOINT	;make point be beginning of screen
  6E4B   A5   B9      		LDA TEMPN7+1
  6E4D   85   C6      		STA EPOINT+1
  6E4F   4C   BC   6A 		JMP TOPSCR	;cursor at top of screen
                      
                      	;RUBOUT deletes char behind cursor, redisplays.
  6E52   A5   C6      	RUBOUT:	LDA EPOINT+1
  6E54   C9   20      		CMP #EDBUF^
  6E56   90   0E      		BCC RCMPLN	;are we before or at beginning...
  6E58   D0   06      		BNE RUBOT2
  6E5A   A9   00      		LDA #EDBUF&$FF	;I know the switch is unorthodox, sorry
  6E5C   C5   C5      		CMP EPOINT
  6E5E   B0   06      		BCS RCMPLN
  6E60   20   19   6F 	RUBOT2:	JSR BACKUP
  6E63   4C   77   6E 		JMP DELET2
  6E66   4C   0A   75 	RCMPLN:	JMP BELL	;complain if so.
                      
                      	;DELETE deletes char under cursor, redisplays.
  6E69   A5   C8      	DELETE:	LDA ENDBUF+1
  6E6B   C5   C6      		CMP EPOINT+1
  6E6D   90   F7      		BCC RCMPLN	;if at buffer end, complain
  6E6F   D0   06      		BNE DELET2
  6E71   A5   C5      		LDA EPOINT
  6E73   C5   C7      		CMP ENDBUF
  6E75   B0   EF      		BCS RCMPLN
  6E77   A9   01      	DELET2:	LDA #$01	;only moving stuff up one place
  6E79   85   3C      		STA A1L
  6E7B   A9   00      		LDA #$00
  6E7D   85   3D      		STA A1H
  6E7F   A9   3C      		LDA #A1L&$FF
  6E81   20   87   6E 		JSR MOVEUP
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-164
LOGO	SCREEN EDITOR

  6E84   4C   7B   6B 		JMP EDSPBF
                      
                      	;MOVEUP takes the location of an arg in AC,Y and moves the argth char
                      	;after the point into the point, the arg+1th into the point+1, and so
                      	;on until the buffer end is reached. Then it sets the end of buffer
                      	;pointer to the point before restoring it. Better make plenty damned
                      	;sure that MOVEUP is used carefully so that end-of-buffer-pointer
                      	;doesn't become too small.
  6E87   AA           	MOVEUP:	TAX
  6E88   A5   C5      		LDA EPOINT	;we are saving point to restore it later
  6E8A   48           		PHA
  6E8B   85   6A      		STA TEMPX3	;in TEMPX3 for source
  6E8D   A5   C6      		LDA EPOINT+1
  6E8F   48           		PHA
  6E90   85   6B      		STA TEMPX3+1
  6E92   B5   00      		LDA $00,X
  6E94   18           		CLC
  6E95   65   6A      		ADC TEMPX3	;and add to point for source address
  6E97   85   6A      		STA TEMPX3
  6E99   B5   01      		LDA $01,X
  6E9B   65   6B      		ADC TEMPX3+1
  6E9D   85   6B      		STA TEMPX3+1
  6E9F   A5   6B      	MVULOP:	LDA TEMPX3+1
  6EA1   C5   C8      		CMP ENDBUF+1	;are we looking at end-of-buffer...
  6EA3   90   08      		BCC MVULP2	;no, continue
  6EA5   D0   18      		BNE MVURTS	;past, return
  6EA7   A5   6A      		LDA TEMPX3
  6EA9   C5   C7      		CMP ENDBUF
  6EAB   B0   12      		BCS MVURTS	;past or end, return
  6EAD   A0   00      	MVULP2:	LDY #$00
  6EAF   B1   6A      		LDA (TEMPX3),Y	;source
  6EB1   91   C5      		STA (EPOINT),Y	;dest
  6EB3   20   A0   6A 		JSR INCPNT	;inc dest
  6EB6   E6   6A      		INC TEMPX3	;inc source
  6EB8   D0   E5      		BNE MVULOP
  6EBA   E6   6B      		INC TEMPX3+1
  6EBC   4C   9F   6E 		JMP MVULOP
  6EBF   A5   C5      	MVURTS:	LDA EPOINT
  6EC1   85   C7      		STA ENDBUF	;new end-of-buffer
  6EC3   A5   C6      		LDA EPOINT+1
  6EC5   85   C8      		STA ENDBUF+1
  6EC7   68           		PLA
  6EC8   85   C6      		STA EPOINT+1
  6ECA   68           		PLA
  6ECB   85   C5      		STA EPOINT	;recover point
  6ECD   60           		RTS		;that's all, folks
                      
                      	;FORCHR moves forward one character, bells if at end of buffer.
  6ECE   A5   C6      	FORCHR: LDA EPOINT+1
  6ED0   C5   C8      		CMP ENDBUF+1
  6ED2   90   08      		BCC FORCH2	;if at buffer end complain
  6ED4   D0   23      		BNE FCMPLN
  6ED6   A5   C5      		LDA EPOINT
  6ED8   C5   C7      		CMP ENDBUF
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-165
LOGO	SCREEN EDITOR

  6EDA   B0   1D      		BCS FCMPLN
  6EDC   A5   BA      	FORCH2:	LDA TEMPN8	;!!**CROCK**!! THIS CAUSES REDISPLAY WHEN
  6EDE   38           		SEC		;YOU TRY FORWARD ON NEXT TO LAST CHAR IN
  6EDF   E9   01      		SBC #$01	;BUFFER!!! SHOULD CHECK CV,CH OR (EPOINT).
  6EE1   85   40      		STA A3L		;see if on last char on screen
  6EE3   A5   BB      		LDA TEMPN8+1
  6EE5   E9   00      		SBC #$00
  6EE7   85   41      		STA A3H
  6EE9   C5   C6      		CMP EPOINT+1
  6EEB   D0   0F      		BNE FORCH3
  6EED   A5   40      		LDA A3L
  6EEF   C5   C5      		CMP EPOINT
  6EF1   D0   09      		BNE FORCH3
  6EF3   20   A0   6A 		JSR INCPNT	;yes, inc point and center
  6EF6   4C   17   6E 		JMP CENTER
  6EF9   4C   0A   75 	FCMPLN:	JMP BELL
  6EFC   A0   00      	FORCH3:	LDY #$00
  6EFE   B1   C5      		LDA (EPOINT),Y
  6F00   C9   0D      		CMP #$0D
  6F02   D0   0A      		BNE FORCH5
  6F04   84   24      	FORCH4:	STY CH		;if on a CR, we know we're not at end of
  6F06   E6   25      		INC CV		;screen by now, so zero CH, inc CV.
  6F08   20   73   75 		JSR BCALC	;must calc new baseline
  6F0B   4C   A0   6A 		JMP INCPNT
  6F0E   A5   24      	FORCH5:	LDA CH
  6F10   C9   26      		CMP #$26	;at right before "!"
  6F12   F0   F0      		BEQ FORCH4
  6F14   E6   24      		INC CH
  6F16   4C   A0   6A 		JMP INCPNT
                      
                      	;BACKUP backs CH and CV up, decs point. No redisplay, unless page
                      	;boundary crossed, or previous char is a CR. Don't call it unless the
                      	;database is consistent; i.e., CV and CH are at the point on the
                      	;screen.
  6F19   A9   20      	BACKUP:	LDA #EDBUF^	;check if at beginning of buffer
  6F1B   C5   C6      		CMP EPOINT+1
  6F1D   90   08      		BCC BACK2	;no, win
  6F1F   D0   D8      		BNE FCMPLN	;yes, complain, quit
  6F21   A9   00      		LDA #EDBUF&$FF
  6F23   C5   C5      		CMP EPOINT
  6F25   B0   D2      		BCS FCMPLN
  6F27   20   A7   6A 	BACK2:	JSR DECPNT
  6F2A   A5   25      		LDA CV		;see if we're at beginning of screen
  6F2C   D0   07      		BNE BACK3
  6F2E   A5   24      		LDA CH
  6F30   D0   03      		BNE BACK3
  6F32   4C   17   6E 		JMP CENTER	;center
  6F35   A5   24      	BACK3:	LDA CH
  6F37   D0   28      		BNE BACK5
  6F39   A0   00      		LDY #$00
  6F3B   B1   C5      		LDA (EPOINT),Y
  6F3D   C9   0D      		CMP #$0D	;#$0D = CR
  6F3F   D0   16      		BNE BACK4
  6F41   A5   C5      		LDA EPOINT
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-166
LOGO	SCREEN EDITOR

  6F43   85   42      		STA A4L		;when we back over a cr we call
  6F45   A5   C6      		LDA EPOINT+1	;EDPBUF so as to save space (by
  6F47   85   43      		STA A4H		;not having code here to count down a
  6F49   A5   B8      		LDA TEMPN7	;line)
  6F4B   85   C5      		STA EPOINT
  6F4D   A5   B9      		LDA TEMPN7+1
  6F4F   85   C6      		STA EPOINT+1
  6F51   20   BC   6A 		JSR TOPSCR
  6F54   4C   83   6B 		JMP EDPBUF	;don't need redisplay, space bum
  6F57   C6   25      	BACK4:	DEC CV
  6F59   A9   26      		LDA #$26	;just before the "!"
  6F5B   85   24      		STA CH
  6F5D   20   73   75 		JSR BCALC
  6F60   60           		RTS
  6F61   C6   24      	BACK5:	DEC CH
  6F63   60           		RTS
                      
                      	;UPLINE moves to the previous line, maintaining horizontal position if
                      	;that line's length allows it. Does redisplay. Bashes A4L, A4H, A3L,
                      	;A3H.
                      
  6F64   A0   00      	UPLINE:	LDY #$00
  6F66   84   42      		STY A4L		;zero char counters - A3L, A3H for desired
  6F68   84   40      		STY A3L		;line's length; A4L, A4H for current line's
  6F6A   84   43      		STY A4H		;length up to current char
  6F6C   84   41      		STY A3H
  6F6E   A5   C5      		LDA EPOINT	;complain if at beginning of buffer
  6F70   C9   00      		CMP #EDBUF&$FF
  6F72   D0   06      		BNE UPLOP1
  6F74   A5   C6      		LDA EPOINT+1
  6F76   C9   20      		CMP #EDBUF^
  6F78   F0   1E      		BEQ UCMPLN
  6F7A   20   A7   6A 	UPLOP1:	JSR DECPNT	;dec point; we are searching (while counting
  6F7D   A5   C5      		LDA EPOINT	;chars) for the beginning of this line.
  6F7F   C9   00      		CMP #EDBUF&$FF
  6F81   D0   06      		BNE UPLOP2	;complain if you encounter the buffer
  6F83   A5   C6      		LDA EPOINT+1	;beginning while doing this, because this
  6F85   C9   20      		CMP #EDBUF^	;means there was no previous line.
  6F87   F0   0F      		BEQ UCMPLN
  6F89   B1   C5      	UPLOP2:	LDA (EPOINT),Y
  6F8B   C9   0D      		CMP #$0D	;if we are on a CR we have gotten as far as we
  6F8D   F0   0C      		BEQ GETNXT	;want, found Nirvana, all that stuff. Go check
  6F8F   E6   42      		INC A4L		;out the previous line; else inc counter and
  6F91   D0   E7      		BNE UPLOP1	;go back for more.
  6F93   E6   43      		INC A4H
  6F95   4C   7A   6F 		JMP UPLOP1
  6F98   4C   0A   75 	UCMPLN:	JMP BELL	;complain
  6F9B   A5   C5      	GETNXT:	LDA EPOINT	;if at buffer beginning we are done and should
  6F9D   C9   00      		CMP #EDBUF&$FF	;go do compares.
  6F9F   D0   09      		BNE GTNXT2
  6FA1   A5   C6      		LDA EPOINT+1
  6FA3   C9   20      		CMP #EDBUF^
  6FA5   F0   18      		BEQ GTDOWN	;if we get to buffer beginning count back
  6FA7   20   A7   6A 		JSR DECPNT	;down
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-167
LOGO	SCREEN EDITOR

  6FAA   B1   C5      	GTNXT2:	LDA (EPOINT),Y
  6FAC   C9   0D      		CMP #$0D	;also count back down if we found a CR, but
  6FAE   D0   06      		BNE GTNXT3	;first inc pint to be on real beginning of
  6FB0   20   A0   6A 		JSR INCPNT	;line.
  6FB3   4C   BF   6F 		JMP GTDOWN
  6FB6   E6   40      	GTNXT3:	INC A3L		;else inc counter and go fer more.
  6FB8   D0   E1      		BNE GETNXT
  6FBA   E6   41      		INC A3H
  6FBC   4C   9B   6F 		JMP GETNXT
  6FBF   A5   43      	GTDOWN:	LDA A4H		;in GTDOWN (maw faw) what we are doing is
  6FC1   C5   41      		CMP A3H		;comparing the lengths of the desired line
  6FC3   90   0A      		BCC OLDWIN	;and the old line. If that of the desired
  6FC5   D0   18      		BNE NEWWIN	;is the lesser, we will move down it the
  6FC7   A5   42      		LDA A4L		;length of the old one. Otherwise we will
  6FC9   C5   40      		CMP A3L		;go to its end.
  6FCB   90   02      		BCC OLDWIN
  6FCD   B0   10      		BCS NEWWIN
  6FCF   A5   C5      	OLDWIN:	LDA EPOINT
  6FD1   18           		CLC
  6FD2   65   42      		ADC A4L		;add length to point
  6FD4   85   C5      		STA EPOINT
  6FD6   A5   C6      		LDA EPOINT+1
  6FD8   65   43      		ADC A4H
  6FDA   85   C6      		STA EPOINT+1
  6FDC   4C   EC   6F 		JMP GTRDSP
  6FDF   A5   C5      	NEWWIN:	LDA EPOINT
  6FE1   18           		CLC
  6FE2   65   40      		ADC A3L		;add length to point
  6FE4   85   C5      		STA EPOINT
  6FE6   A5   C6      		LDA EPOINT+1
  6FE8   65   41      		ADC A3H
  6FEA   85   C6      		STA EPOINT+1
  6FEC   C5   B9      	GTRDSP:	CMP TEMPN7+1
  6FEE   90   25      		BCC UCENTR	;now we see if we are off the screen
  6FF0   D0   08      		BNE GTRDP2
  6FF2   A5   C5      		LDA EPOINT
  6FF4   C5   B8      		CMP TEMPN7
  6FF6   90   1D      		BCC UCENTR	;if before beginning CENTER
  6FF8   F0   1E      		BEQ UTPSCR	;if exactly at top no redisplay necessary
  6FFA   A5   C6      	GTRDP2:	LDA EPOINT+1
  6FFC   C5   BB      		CMP TEMPN8+1
  6FFE   90   0A      		BCC GTRDP3	;if in bounds call EDPBUF
  7000   D0   13      		BNE UCENTR	;if after (need to check because this
  7002   A5   C5      		LDA EPOINT	;routine also used by NXTLIN), CENTER.
  7004   C5   BA      		CMP TEMPN8
  7006   90   02      		BCC GTRDP3
  7008   B0   0B      		BCS UCENTR	;always
  700A   A5   C5      	GTRDP3:	LDA EPOINT	;point stored for recovery by EDPBUF
  700C   85   42      		STA A4L
  700E   A5   C6      		LDA EPOINT+1
  7010   85   43      		STA A4H
  7012   4C   09   6E 		JMP REDISP
  7015   4C   17   6E 	UCENTR:	JMP CENTER
  7018   4C   BC   6A 	UTPSCR:	JMP TOPSCR
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-168
LOGO	SCREEN EDITOR

                      
                      	;OPLINE inserts a CR at point w/o inc'ing point.
  701B   A5   C6      	OPLINE:	LDA EPOINT+1
  701D   C9   3F      		CMP #EBFEND^
  701F   90   08      		BCC OPLIN1
  7021   D0   12      		BNE OPLRTS
  7023   A5   C5      		LDA EPOINT
  7025   C9   FB      		CMP #EBFEND&$FF	;Are we at end of edit buffer...
  7027   B0   0C      		BCS OPLRTS	;if so, quit
  7029   20   63   6D 	OPLIN1:	JSR MVDOWN
  702C   A0   00      		LDY #$00
  702E   A9   0D      		LDA #$0D
  7030   91   C5      		STA (EPOINT),Y	;insert CR at point
  7032   4C   7B   6B 		JMP EDSPBF	;redisplay from here down.
  7035   60           	OPLRTS:	RTS
                      
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-169
LOGO	FILE SYSTEM

                      	.SBTTL	File System
  7036   A2   A2      	SDELET:	LDX #ARG1
  7038   20   85   52 		JSR VPOP
  703B   20   84   5D 		JSR GETTYP
  703E   C9   07      		CMP #SATOM
  7040   F0   27      		BEQ SDELR2
  7042   C9   01      		CMP #ATOM
  7044   D0   26      		BNE SDELR3
  7046   20   AE   70 		JSR DOSSTP
  7049   A2   A2      		LDX #DELETM&$FF
  704B   A0   DB      		LDY #DELETM^
  704D   20   95   54 		JSR PRTSTR
  7050   A2   A2      		LDX #ARG1
  7052   A9   01      		LDA #$01
  7054   20   13   72 		JSR DTPATM	;Type atom DOS-style
  7057   A2   B6      		LDX #LOGOM&$FF
  7059   A0   DB      		LDY #LOGOM^
  705B   20   95   54 		JSR PRTSTR
  705E   A9   8D      		LDA #$8D
  7060   20   84   72 		JSR TPCHR
  7063   20   C7   70 		JSR UNDSTP
  7066   4C   1E   41 		JMP POPJ
  7069   4C   6B   84 	SDELR2:	JMP SPO5S	;(ERROR XUBL,ARG1)
  706C   4C   15   7C 	SDELR3:	JMP SMAKE2	;(ERROR XWTA,ARG1,CURTOK)
                      
                      	;file routines should call this to set up error return from DOS.
  706F   A5   D8      	STDERR:	LDA DOSERR
  7071   09   80      		ORA #$80	;high bit on for DOSERR flag
  7073   85   D8      		STA DOSERR
  7075   A9   80      		LDA #DERROR&$FF
  7077   8D   5A   9D 		STA DSERET
  707A   A9   70      		LDA #DERROR^
  707C   8D   5B   9D 		STA DSERET+1
  707F   60           		RTS
                      
                      	;DOS error routine comes here
  7080   20   60   72 	DERROR:	JSR RSTIO
  7083   A5   DE      		LDA DERCOD	;DOS error code
  7085   C9   04      		CMP #$04
  7087   F0   11      		BEQ WTPROT	;write-protected file
  7089   C9   06      		CMP #$06
  708B   F0   12      		BEQ FLNFND	;file not found
  708D   C9   09      		CMP #$09
  708F   F0   13      		BEQ DSKFUL	;disk full
  7091   C9   0A      		CMP #$0A
  7093   F0   14      		BEQ LCKFIL	;attempt to overwrite a locked file
  7095   A9   25      	IOERRR:	LDA #XIOR	;i/o error
  7097   4C   47   61 		JMP ERROR
  709A   A9   26      	WTPROT:	LDA #XWTP
  709C   4C   47   61 		JMP ERROR
  709F   A9   27      	FLNFND:	LDA #XFNF
  70A1   4C   47   61 		JMP ERROR
  70A4   A9   28      	DSKFUL:	LDA #XDKF
  70A6   4C   47   61 		JMP ERROR
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-170
LOGO	FILE SYSTEM

  70A9   A9   29      	LCKFIL:	LDA #XLKF
  70AB   4C   47   61 		JMP ERROR
                      
                      	;set up magic things for DOS
  70AE   A9   40      	DOSSTP:	LDA #$40	;magic number for Applesoft
  70B0   8D   B6   AA 		STA DLNGFG	;store in DOS language flag
  70B3   A5   7F      		LDA DSPFL2
  70B5   85   6A      		STA TEMPX3
  70B7   A9   00      		LDA #$00
  70B9   85   7F      		STA DSPFL2	;store things not = to $FF
  70BB   85   33      		STA DSPFL1	;or apple val for ], in these, respectively.
  70BD   20   6F   70 		JSR STDERR	;set up return address for DOS error
  70C0   20   52   72 		JSR SAPOUT	;store APOUT in CSWL so DOS prints properly
  70C3   20   51   A8 		JSR DOSEAT	;let DOS eat these
  70C6   60           		RTS
                      
                      	;unset up magic things for DOS
  70C7   A5   6A      	UNDSTP:	LDA TEMPX3
  70C9   85   7F      		STA DSPFL2
  70CB   4C   60   72 		JMP RSTIO
                      
  70CE   A5   57      	SSAVE:	LDA INDEV
  70D0   D0   66      		BNE SAVSR1	;Error if editing with ALEC
  70D2   A5   09      		LDA GRPHCS
  70D4   F0   05      		BEQ SAVST1
  70D6   20   7B   72 		JSR RESETT
  70D9   C6   09      		DEC GRPHCS
  70DB   A2   A2      	SAVST1:	LDX #ARG1
  70DD   20   85   52 		JSR VPOP
  70E0   20   84   5D 		JSR GETTYP
  70E3   C9   07      		CMP #SATOM
  70E5   F0   56      		BEQ SAVSR2
  70E7   C9   01      		CMP #ATOM
  70E9   D0   55      		BNE SAVSR3
  70EB   20   E3   6C 		JSR CHGIN1	;output to buffer
  70EE   20   26   85 		JSR POFUNS	;get functions into buffer
  70F1   20   79   84 		JSR PONAMS	;get variables into buffer
  70F4   A5   C5      		LDA EPOINT
  70F6   85   C7      		STA ENDBUF
  70F8   A5   C6      		LDA EPOINT+1
  70FA   85   C8      		STA ENDBUF+1
  70FC   A9   00      		LDA #$00
  70FE   85   57      		STA INDEV	;Reset INDEV so quotes not printed on funny-pnames
  7100   20   AE   70 		JSR DOSSTP
  7103   A2   87      		LDX #SAVEM&$FF
  7105   A0   DB      		LDY #SAVEM^
  7107   20   95   54 		JSR PRTSTR
  710A   A2   A2      		LDX #ARG1
  710C   A9   01      		LDA #$01
  710E   20   13   72 		JSR DTPATM	;Type atom DOS-style
  7111   A2   B6      		LDX #LOGOM&$FF
  7113   A0   DB      		LDY #LOGOM^
  7115   20   95   54 		JSR PRTSTR
  7118   A2   8F      		LDX #SAVEM2&$FF
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-171
LOGO	FILE SYSTEM

  711A   A0   DB      		LDY #SAVEM2^
  711C   20   95   54 		JSR PRTSTR	;write file
  711F   20   43   71 		JSR DPRLEN	;Give it file's length
  7122   A9   8D      		LDA #$8D
  7124   20   84   72 		JSR TPCHR	;let it go
  7127   20   B3   6A 		JSR PNTBEG
  712A   A9   00      		LDA #EDBUF&$FF
  712C   85   C7      		STA ENDBUF
  712E   A9   20      		LDA #EDBUF^
  7130   85   C8      		STA ENDBUF+1	;zero ENDBUF so RETRIEVE not possible
  7132   20   C7   70 		JSR UNDSTP
  7135   4C   1E   41 		JMP POPJ
  7138   A9   1D      	SAVSR1:	LDA #XNWE	;can't hack files from editor
  713A   4C   47   61 		JMP ERROR
  713D   4C   6B   84 	SAVSR2:	JMP SPO5S	;(ERROR XUBL,ARG1)
  7140   4C   15   7C 	SAVSR3:	JMP SMAKE2	;(ERROR XWTA,ARG1,CURTOK)
                      
  7143   38           	DPRLEN:	SEC
  7144   A5   C7      		LDA ENDBUF
  7146   E9   00      		SBC #$00
  7148   85   A8      		STA TEMPN
  714A   A5   C8      		LDA ENDBUF+1
  714C   E9   20      		SBC #$20
  714E   85   A9      		STA TEMPN+1
  7150   20   55   71 		JSR DPR2HX
  7153   A5   A8      		LDA TEMPN
                      
  7155   48           	DPR2HX:	PHA
  7156   4A           		LSR A
  7157   4A           		LSR A
  7158   4A           		LSR A
  7159   4A           		LSR A
  715A   20   5E   71 		JSR DPRHEX
  715D   68           		PLA
                      
  715E   29   0F      	DPRHEX:	AND #$0F
  7160   C9   0A      		CMP #$0A
  7162   90   02      		BCC DPRH1
  7164   69   06      		ADC #$06
  7166   09   B0      	DPRH1:	ORA #$B0
  7168   4C   84   72 		JMP TPCHR
                      
  716B   A5   57      	SREAD:	LDA INDEV
  716D   D0   C9      		BNE SAVSR1	;Error if editing with ALEC
  716F   A5   09      		LDA GRPHCS
  7171   F0   05      		BEQ SRDF1
  7173   20   7B   72 		JSR RESETT
  7176   C6   09      		DEC GRPHCS
  7178   A2   A2      	SRDF1:	LDX #ARG1
  717A   20   85   52 		JSR VPOP
  717D   20   84   5D 		JSR GETTYP
  7180   C9   07      		CMP #SATOM
  7182   F0   B9      		BEQ SAVSR2
  7184   C9   01      		CMP #ATOM
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-172
LOGO	FILE SYSTEM

  7186   D0   B8      		BNE SAVSR3
  7188   20   AE   70 		JSR DOSSTP
  718B   A2   9A      		LDX #LOADM&$FF
  718D   A0   DB      		LDY #LOADM^
  718F   20   95   54 		JSR PRTSTR
  7192   A2   A2      		LDX #ARG1
  7194   A9   01      		LDA #$01
  7196   20   13   72 		JSR DTPATM	;Type atom DOS-style
  7199   A2   B6      		LDX #LOGOM&$FF
  719B   A0   DB      		LDY #LOGOM^
  719D   20   95   54 		JSR PRTSTR
  71A0   A9   8D      		LDA #$8D
  71A2   20   84   72 		JSR TPCHR
  71A5   20   C7   70 		JSR UNDSTP
  71A8   18           		CLC
  71A9   AD   60   AA 		LDA FILLEN
  71AC   69   00      		ADC #EDBUF&$FF
  71AE   85   C7      		STA ENDBUF	;recover buffer length from file length
  71B0   AD   61   AA 		LDA FILLEN+1
  71B3   69   20      		ADC #EDBUF^
  71B5   85   C8      		STA ENDBUF+1
  71B7   A9   01      		LDA #BUFFER
  71B9   85   57      		STA INDEV
  71BB   A2   CE      		LDX #SRDF2&$FF
  71BD   A0   71      		LDY #SRDF2^
  71BF   20   3C   52 		JSR PUSH	;Return address from SREAD2
  71C2   20   B3   6A 		JSR PNTBEG	;point to beginning
  71C5   20   6D   72 		JSR CLRCBF
  71C8   20   7B   72 		JSR RESETT	;Clear the output device
  71CB   4C   61   44 		JMP SREAD1
                      
  71CE   20   60   72 	SRDF2:	JSR RSTIO
  71D1   A9   00      		LDA #EDBUF&$FF
  71D3   85   C7      		STA ENDBUF
  71D5   A9   20      		LDA #EDBUF^
  71D7   85   C8      		STA ENDBUF+1
  71D9   4C   1E   41 		JMP POPJ
                      
  71DC   20   AE   70 	SCATLG:	JSR DOSSTP
  71DF   AD   ED   FD 		LDA APCOUT
  71E2   48           		PHA
  71E3   AD   EE   FD 		LDA APCOUT+1
  71E6   48           		PHA
  71E7   AD   EF   FD 		LDA APCOUT+2
  71EA   48           		PHA		;Holy Mother of God, forgive us for this
  71EB   A9   6C      		LDA #$6C	;JMP
  71ED   8D   ED   FD 		STA APCOUT
  71F0   A9   36      		LDA #$36	;(CSWL) Dear God, forgive me
  71F2   8D   EE   FD 		STA APCOUT+1
  71F5   A9   00      		LDA #$00	;I'm sorry, DOS does a JSR $FDED here -
  71F7   8D   EF   FD 		STA APCOUT+2	;it depends on their monitor being in
  71FA   A2   AB      		LDX #CATLGM&$FF	;place...
  71FC   A0   DB      		LDY #CATLGM^
  71FE   20   95   54 		JSR PRTSTR
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-173
LOGO	FILE SYSTEM

  7201   68           		PLA
  7202   8D   EF   FD 		STA APCOUT+2
  7205   68           		PLA
  7206   8D   EE   FD 		STA APCOUT+1
  7209   68           		PLA
  720A   8D   ED   FD 		STA APCOUT
  720D   20   C7   70 		JSR UNDSTP
  7210   4C   1E   41 		JMP POPJ
                      
  7213   A5   A2      	DTPATM:	LDA ARG1
  7215   29   FC      		AND #$FC
  7217   85   A2      		STA ARG1
  7219   A2   A2      		LDX #ARG1
  721B   A0   B4      		LDY #TEMPN5
  721D   20   88   59 		JSR GETPNM
  7220   A5   B5      	DTPTMW:	LDA TEMPN5+1
  7222   F0   48      		BEQ RSTR
  7224   A0   00      		LDY #$00
  7226   B1   B4      		LDA (TEMPN5),Y
  7228   85   A6      		STA TEMPNH
  722A   C8           		INY
  722B   B1   B4      		LDA (TEMPN5),Y
  722D   85   A7      		STA TEMPNH+1	;(CAR)
  722F   C8           		INY
  7230   B1   B4      		LDA (TEMPN5),Y
  7232   AA           		TAX
  7233   C8           		INY
  7234   B1   B4      		LDA (TEMPN5),Y
  7236   85   B5      		STA TEMPN5+1
  7238   86   B4      		STX TEMPN5	;(CDR)
  723A   A5   A6      		LDA TEMPNH
  723C   09   80      		ORA #$80
  723E   20   84   72 		JSR TPCHR
  7241   A5   A7      		LDA TEMPNH+1
  7243   F0   27      		BEQ RSTR
  7245   09   80      		ORA #$80
  7247   20   84   72 		JSR TPCHR
  724A   4C   20   72 		JMP DTPTMW
                      
  724D   29   7F      	APOUT:	AND #$7F	;eat Apple idiot char codes, type Ascii
  724F   4C   00   75 		JMP COUT
                      
  7252   A9   4D      	SAPOUT:	LDA #APOUT&$FF
  7254   85   36      		STA CSWL
  7256   A9   72      		LDA #APOUT^
  7258   85   37      		STA CSWH
  725A   60           		RTS
                      
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-174
LOGO	MONITOR ROUTINES

                      	.SBTTL	Monitor Routines
  725B   A9   0D      	BREAK1:	LDA #$0D
  725D   4C   84   72 		JMP TPCHR
                      
                      	;Reset I/O to default drivers (INDEV, OUTDEV = 0).
  7260   20   5A   74 	RSTIO:	JSR SETVID
  7263   20   4E   74 		JSR SETKBD
  7266   A9   00      		LDA #KBD
  7268   85   57      		STA INDEV
  726A   85   58      		STA OUTDEV
  726C   60           	RSTR:	RTS
                      
  726D   A9   00      	CLRCBF:	LDA #$00	;(?Clear entire input buffer)
  726F   85   69      		STA CHBUF
  7271   60           		RTS
                      
  7272   A5   69      	GTBUF:	LDA CHBUF	;(?Remove and return oldest character in buffer)
  7274   48           		PHA
  7275   A9   00      		LDA #$00	;(Returns zero if buffer empty)
  7277   85   69      		STA CHBUF
  7279   68           		PLA
  727A   60           		RTS
                      
                      	;Clear the display/output.
  727B   20   ED   75 	RESETT:	JSR SETTXT
  727E   20   49   74 		JSR SETNRM
  7281   4C   E0   74 		JMP HOME
                      
  7284   6C   36   00 	TPCHR:	JMP (CSWL)
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-175
LOGO	MONITOR ROUTINES

                      	;Modified Monitor for Apple-LOGO
                      
  7287   90   04      	SCRN2:	BCC RTMSKZ
  7289   4A           		LSR A
  728A   4A           		LSR A
  728B   4A           		LSR A
  728C   4A           		LSR A
  728D   29   0F      	RTMSKZ:	AND #$0F
  728F   60           		RTS
                      
  7290   98           	PRNTYX:	TYA
  7291   20   C1   73 	PRNTAX:	JSR PRBYTE
  7294   8A           	PRNTX:	TXA
  7295   4C   C1   73 		JMP PRBYTE
                      
  7298   A6   3A      	INSDS1:	LDX PCL
  729A   A4   3B      		LDY PCH
  729C   20   91   73 		JSR PRYX2
                      
  729F   A2   03      	PRBLNK:	LDX #$03
  72A1   A9   20      	PRBL2:	LDA #$20
  72A3   20   84   72 	PRBL3:	JSR TPCHR
  72A6   CA           		DEX
  72A7   D0   F8      		BNE PRBL2
  72A9   60           		RTS
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-176
LOGO	MONITOR ROUTINES

  72AA   48           	MONBRK:	PHA
  72AB   AD   8B   C0 		LDA GETRM1
  72AE   AD   8B   C0 		LDA GETRM1
  72B1   A9   00      		LDA #$00
  72B3   85   55      		STA BANK4K
  72B5   20   49   74 		JSR SETNRM
  72B8   20   5A   74 		JSR SETVID
  72BB   20   4E   74 		JSR SETKBD
  72BE   68           		PLA
  72BF   28           		PLP
  72C0   20   D1   74 		JSR SAVE
  72C3   68           		PLA
  72C4   85   3A      		STA PCL
  72C6   68           		PLA
  72C7   85   3B      		STA PCH
  72C9   A9   01      		LDA #$01
  72CB   85   54      		STA MONFLG
  72CD   20   98   72 	OLDBRK:	JSR INSDS1
  72D0   20   55   73 		JSR RGDSP1
  72D3   D8           	MON:	CLD
  72D4   20   0A   75 		JSR BELL
  72D7   20   5B   72 	MONZ:	JSR BREAK1
  72DA   A9   2A      		LDA #'*
  72DC   20   84   72 		JSR TPCHR
  72DF   20   08   76 		JSR GETLN
  72E2   20   4D   73 		JSR ZMODE
  72E5   20   19   73 	NXTITM:	JSR GETNMB
  72E8   84   34      		STY YSAV
  72EA   A0   0F      		LDY #MONNUM
  72EC   88           	CHRSRC:	DEY
  72ED   30   E4      		BMI MON
  72EF   D9   BF   94 		CMP CHRTBL,Y
  72F2   D0   F8      		BNE CHRSRC
  72F4   20   37   73 		JSR TOSUB
  72F7   A4   34      		LDY YSAV
  72F9   4C   E5   72 		JMP NXTITM
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-177
LOGO	MONITOR ROUTINES

  72FC   A2   03      	DIG:	LDX #$03
  72FE   0A           		ASL A
  72FF   0A           		ASL A
  7300   0A           		ASL A
  7301   0A           		ASL A
  7302   0A           	NXTBIT:	ASL A
  7303   26   3E      		ROL A2L
  7305   26   3F      		ROL A2H
  7307   CA           		DEX
  7308   10   F8      		BPL NXTBIT
  730A   A5   31      	NXTBAS:	LDA MODE
  730C   D0   06      		BNE NXTBS2
  730E   B5   3F      		LDA A2H,X
  7310   95   3D      		STA A1H,X
  7312   95   41      		STA A3H,X
  7314   E8           	NXTBS2:	INX
  7315   F0   F3      		BEQ NXTBAS
  7317   D0   06      		BNE NXTCHR
  7319   A2   00      	GETNMB:	LDX #$00
  731B   86   3E      		STX A2L
  731D   86   3F      		STX A2H
  731F   B9   00   02 	NXTCHR:	LDA LINARY,Y
  7322   C8           		INY
  7323   C9   30      		CMP #'0
  7325   90   2A      		BCC NTDIG
  7327   C9   3A      		CMP #':
  7329   90   D1      		BCC DIG
  732B   C9   41      		CMP #'A
  732D   90   22      		BCC NTDIG
  732F   C9   47      		CMP #'G
  7331   B0   1E      		BCS NTDIG
  7333   69   09      		ADC #$09
  7335   D0   C5      		BNE DIG		;(Always)
                      
  7337   98           	TOSUB:	TYA
  7338   0A           		ASL A
  7339   A8           		TAY
  733A   B9   CE   94 		LDA SUBTBL,Y
  733D   85   2A      		STA BSLTMP
  733F   C8           		INY
  7340   B9   CE   94 		LDA SUBTBL,Y
  7343   85   2B      		STA BSLTMP+1
  7345   A5   31      		LDA MODE
  7347   20   4D   73 		JSR ZMODE
  734A   6C   2A   00 		JMP (BSLTMP)
                      
  734D   A0   00      	ZMODE:	LDY #$00
  734F   84   31      		STY MODE
  7351   60           	NTDIG:	RTS
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-178
LOGO	MONITOR ROUTINES

  7352   20   5B   72 	REGDSP:	JSR BREAK1
  7355   A9   45      	RGDSP1:	LDA #ACC
  7357   85   40      		STA A3L
  7359   A9   00      		LDA #ACC^
  735B   85   41      		STA A3H
  735D   A2   FB      		LDX #$FB
  735F   A9   20      	RDSP1:	LDA #$20
  7361   20   84   72 		JSR TPCHR
  7364   BD   F1   93 		LDA RTBL-$FB,X
  7367   20   84   72 		JSR TPCHR
  736A   A9   3D      		LDA #'=
  736C   20   84   72 		JSR TPCHR
  736F   B5   4A      		LDA ACC+5,X
  7371   20   C1   73 		JSR PRBYTE
  7374   E8           		INX
  7375   30   E8      		BMI RDSP1
  7377   60           		RTS
                      
  7378   E6   42      	NXTA4:	INC A4L
  737A   D0   02      		BNE NXTA1
  737C   E6   43      		INC A4H
  737E   A5   3C      	NXTA1:	LDA A1L
  7380   C5   3E      		CMP A2L
  7382   A5   3D      		LDA A1H
  7384   E5   3F      		SBC A2H
  7386   E6   3C      		INC A1L
  7388   D0   02      		BNE RTS4B
  738A   E6   3D      		INC A1H
  738C   60           	RTS4B:	RTS
                      
  738D   A4   3D      	PRA1:	LDY A1H
  738F   A6   3C      		LDX A1L
  7391   20   5B   72 	PRYX2:	JSR BREAK1
  7394   20   90   72 		JSR PRNTYX
  7397   A0   00      		LDY #$00
  7399   A9   2D      		LDA #'-
  739B   4C   84   72 		JMP TPCHR
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-179
LOGO	MONITOR ROUTINES

  739E   A5   3C      	XAM8:	LDA A1L
  73A0   09   07      		ORA #$07
  73A2   85   3E      		STA A2L
  73A4   A5   3D      		LDA A1H
  73A6   85   3F      		STA A2H
  73A8   A5   3C      	MD8CHK:	LDA A1L
  73AA   29   07      		AND #$07
  73AC   D0   03      		BNE DATAOT
  73AE   20   8D   73 	XAM:	JSR PRA1
  73B1   A9   20      	DATAOT:	LDA #$20
  73B3   20   84   72 		JSR TPCHR
  73B6   B1   3C      		LDA (A1L),Y
  73B8   20   C1   73 		JSR PRBYTE
  73BB   20   7E   73 		JSR NXTA1
  73BE   90   E8      		BCC MD8CHK
  73C0   60           	RTS4C:	RTS
                      
  73C1   48           	PRBYTE:	PHA
  73C2   4A           		LSR A
  73C3   4A           		LSR A
  73C4   4A           		LSR A
  73C5   4A           		LSR A
  73C6   20   CC   73 		JSR PRHEXZ
  73C9   68           		PLA
  73CA   29   0F      	PRHEX:	AND #$0F
  73CC   18           	PRHEXZ:	CLC
  73CD   69   30      		ADC #'0
  73CF   C9   3A      		CMP #':
  73D1   90   02      		BCC PRHEXC
  73D3   69   06      		ADC #$06
  73D5   4C   84   72 	PRHEXC:	JMP TPCHR
                      
  73D8   C6   34      	BL1:	DEC YSAV
  73DA   F0   C2      		BEQ XAM8
  73DC   CA           	BLANK:	DEX
  73DD   D0   16      		BNE SETMDZ
  73DF   C9   3A      		CMP #':
  73E1   D0   CB      		BNE XAM
  73E3   85   31      	STOR:	STA MODE
  73E5   A5   3E      		LDA A2L
  73E7   91   40      		STA (A3L),Y
  73E9   E6   40      		INC A3L
  73EB   D0   02      		BNE RTS5
  73ED   E6   41      		INC A3H
  73EF   60           	RTS5:	RTS
                      
  73F0   A4   34      	SETMOD:	LDY YSAV
  73F2   B9   FF   01 		LDA LINARY-1,Y
  73F5   85   31      	SETMDZ:	STA MODE
  73F7   60           		RTS
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-180
LOGO	MONITOR ROUTINES

  73F8   A2   01      	LT:	LDX #$01
  73FA   B5   3E      	LT2:	LDA A2L,X
  73FC   95   42      		STA A4L,X
  73FE   95   44      		STA A5L,X
  7400   CA           		DEX
  7401   10   F7      		BPL LT2
  7403   60           		RTS
                      
  7404   B1   3C      	MOVE:	LDA (A1L),Y
  7406   91   42      		STA (A4L),Y
  7408   20   78   73 		JSR NXTA4
  740B   90   F7      		BCC MOVE
  740D   60           		RTS
                      
  740E   B1   3C      	VFY:	LDA (A1L),Y
  7410   D1   42      		CMP (A4L),Y
  7412   F0   1C      		BEQ VFYOK
  7414   20   8D   73 		JSR PRA1
  7417   B1   3C      		LDA (A1L),Y
  7419   20   C1   73 		JSR PRBYTE
  741C   A9   20      		LDA #$20
  741E   20   84   72 		JSR TPCHR
  7421   A9   28      		LDA #'(
  7423   20   84   72 		JSR TPCHR
  7426   B1   42      		LDA (A4L),Y
  7428   20   C1   73 		JSR PRBYTE
  742B   A9   29      		LDA #')
  742D   20   84   72 		JSR TPCHR
  7430   20   78   73 	VFYOK:	JSR NXTA4
  7433   90   D9      		BCC VFY
  7435   60           		RTS
                      
  7436   8A           	A1PC:	TXA
  7437   F0   07      		BEQ A1PCRT
  7439   B5   3C      	A1PCLP:	LDA A1L,X
  743B   95   3A      		STA PCL,X
  743D   CA           		DEX
  743E   10   F9      		BPL A1PCLP
  7440   60           	A1PCRT:	RTS
                      
                      
  7441   A0   3F      	SETREV:	LDY #$3F
  7443   D0   06      		BNE SETIFL
  7445   A0   7F      	SETINV:	LDY #$7F
  7447   D0   02      		BNE SETIFL
  7449   A0   FF      	SETNRM:	LDY #$FF
  744B   84   32      	SETIFL:	STY INVFLG
  744D   60           		RTS
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-181
LOGO	MONITOR ROUTINES

  744E   A9   00      	SETKBD:	LDA #$00
  7450   85   3E      		STA A2L
  7452   A0   B8      	INPRT:	LDY #KEYIN&$FF
  7454   A9   75      		LDA #KEYIN^
  7456   A2   38      		LDX #KSWL
  7458   D0   0A      		BNE IOPRT	;(Always)
  745A   A9   00      	SETVID:	LDA #$00
  745C   85   3E      		STA A2L
  745E   A0   00      	OUTPRT:	LDY #COUT&$FF
  7460   A9   75      		LDA #COUT^
  7462   A2   36      		LDX #CSWL
  7464   95   01      	IOPRT:	STA $01,X
  7466   A5   3E      		LDA A2L
  7468   29   0F      		AND #$0F
  746A   F0   06      		BEQ IOPRT1
  746C   09   00      		ORA #IOADR^
  746E   95   01      		STA $01,X
  7470   A0   00      		LDY #$00
  7472   94   00      	IOPRT1:	STY $00,X
  7474   60           		RTS
                      
  7475   20   36   74 	GO:	JSR A1PC
  7478   20   C6   74 		JSR RESTOR
  747B   A9   00      		LDA #$00
  747D   85   54      		STA MONFLG
  747F   6C   3A   00 		JMP (PCL)
                      
  7482   A5   55      	BSWTCH:	LDA BANK4K
  7484   D0   10      		BNE BSW1
  7486   E6   55      		INC BANK4K
  7488   AD   83   C0 		LDA GETRM2
  748B   AD   83   C0 		LDA GETRM2
  748E   A9   32      		LDA #'2
  7490   20   84   72 		JSR TPCHR
  7493   4C   5B   72 		JMP BREAK1
  7496   C6   55      	BSW1:	DEC BANK4K
  7498   AD   8B   C0 		LDA GETRM1
  749B   AD   8B   C0 		LDA GETRM1
  749E   A9   31      		LDA #'1
  74A0   20   84   72 		JSR TPCHR
  74A3   4C   5B   72 		JMP BREAK1
                      
  74A6   4C   52   73 	REGZ:	JMP REGDSP
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-182
LOGO	MONITOR ROUTINES

  74A9   AD   8A   C0 	XMON:	LDA KILRAM
  74AC   A9   4C      		LDA #$4C	;(JMP instruction code)
  74AE   8D   F8   03 		STA USRADR
  74B1   A9   AA      		LDA #MONBRK&$FF
  74B3   8D   F9   03 		STA USRADR+1
  74B6   A9   72      		LDA #MONBRK^
  74B8   8D   FA   03 		STA USRADR+2
  74BB   4C   59   FF 		JMP SYSMON	;User can re-enter this monitor with control-Y
                      
  74BE   20   D8   73 	CRMON:	JSR BL1
  74C1   68           		PLA
  74C2   68           		PLA
  74C3   4C   D7   72 		JMP MONZ
                      
  74C6   A5   48      	RESTOR:	LDA STATUS
  74C8   48           		PHA
  74C9   A5   45      		LDA A5H
  74CB   A6   46      	RESTR1:	LDX XREG
  74CD   A4   47      		LDY YREG
  74CF   28           		PLP
  74D0   60           		RTS
                      
  74D1   85   45      	SAVE:	STA ACC
  74D3   86   46      	SAV1:	STX XREG
  74D5   84   47      		STY YREG
  74D7   08           		PHP
  74D8   68           		PLA
  74D9   85   48      		STA STATUS
  74DB   BA           		TSX
  74DC   86   49      		STX SPNT
  74DE   D8           		CLD
  74DF   60           		RTS
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-183
LOGO	MONITOR ROUTINES

                      	;HOME - Home the cursor and clear the screen
                      
  74E0   A5   22      	HOME:	LDA WNDTOP
  74E2   85   25      		STA CV
  74E4   A0   00      		LDY #$00
  74E6   84   24      		STY CH
  74E8   F0   04      		BEQ CLEOP1	;(always branches)
                      
                      	;CLREOP - Clear to end-of-page
                      
  74EA   A4   24      	CLREOP:	LDY CH
  74EC   A5   25      		LDA CV
  74EE   48           	CLEOP1:	PHA
  74EF   20   75   75 		JSR BCALCA
  74F2   20   91   75 		JSR CLEOL1
  74F5   A0   00      		LDY #$00
  74F7   68           		PLA
  74F8   69   00      		ADC #$00
  74FA   C5   23      		CMP WNDBTM
  74FC   90   F0      		BCC CLEOP1
  74FE   B0   73      		BCS BCALC
                      
                      	;COUT - Output the character in A to the screen
                      
  7500   48           	COUT:	PHA
  7501   84   35      		STY YSAV1
  7503   20   1D   75 		JSR COUT1
  7506   68           		PLA
  7507   A4   35      		LDY YSAV1
  7509   60           		RTS
                      
  750A   A9   40      	BELL:	LDA #$40
  750C   20   5A   77 		JSR WAIT
  750F   A0   C0      		LDY #$C0
  7511   A9   0C      	BELL1:	LDA #$0C
  7513   20   5A   77 		JSR WAIT
  7516   AD   30   C0 		LDA SPKR
  7519   88           		DEY
  751A   D0   F5      		BNE BELL1
  751C   60           	BRTS:	RTS
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-184
LOGO	MONITOR ROUTINES

  751D   C9   0D      	COUT1:	CMP #$0D
  751F   F0   7A      		BEQ CROUT
  7521   C9   07      		CMP #$07
  7523   F0   E5      		BEQ BELL	;bell on output of ^G
  7525   09   80      		ORA #$80	;Assume non-flashing first
  7527   25   32      		AND INVFLG	;Flash or Invert if set
  7529   C9   E0      		CMP #$E0
  752B   90   02      		BCC COUTZ
  752D   29   DF      		AND #$DF	;Make it uppercase
  752F   A4   24      	COUTZ:	LDY CH
  7531   91   28      		STA (BASLIN),Y
  7533   E6   24      		INC CH		;Advance Horizontally
  7535   A5   24      		LDA CH
  7537   C5   21      		CMP WNDWTH
  7539   90   E1      		BCC BRTS
  753B   A9   00      	CR:	LDA #$00
  753D   85   24      		STA CH
  753F   E6   25      	LF:	INC CV
  7541   A5   25      		LDA CV
  7543   C5   23      		CMP WNDBTM
  7545   90   2E      		BCC BCALCA	;Finish if scrolling unnecessary
  7547   C6   25      		DEC CV
  7549   A5   22      	SCROLL:	LDA WNDTOP
  754B   48           		PHA
  754C   20   75   75 		JSR BCALCA
  754F   A5   28      	SCRL1:	LDA BASLIN
  7551   85   2A      		STA BSLTMP
  7553   A5   29      		LDA BASLIN+1
  7555   85   2B      		STA BSLTMP+1
  7557   A4   21      		LDY WNDWTH
  7559   88           		DEY
  755A   68           		PLA
  755B   69   01      		ADC #$01
  755D   C5   23      		CMP WNDBTM
  755F   B0   0D      		BCS SCRL3
  7561   48           		PHA
  7562   20   75   75 		JSR BCALCA
  7565   B1   28      	SCRL2:	LDA (BASLIN),Y	;Shift a line up one, character by character
  7567   91   2A      		STA (BSLTMP),Y
  7569   88           		DEY
  756A   10   F9      		BPL SCRL2	;Next character
  756C   30   E1      		BMI SCRL1	;Next line
  756E   A0   00      	SCRL3:	LDY #$00
  7570   20   91   75 		JSR CLEOL1	;Clear the bottom line, then calculate new base
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-185
LOGO	MONITOR ROUTINES

  7573   A5   25      	BCALC:	LDA CV
  7575   48           	BCALCA:	PHA
  7576   4A           		LSR A
  7577   29   03      		AND #$03
  7579   09   04      		ORA #$04
  757B   85   29      		STA BASLIN+1
  757D   68           		PLA
  757E   29   18      		AND #$18
  7580   90   02      		BCC BCALC2
  7582   69   7F      		ADC #$7F
  7584   85   28      	BCALC2:	STA BASLIN
  7586   0A           		ASL A
  7587   0A           		ASL A
  7588   05   28      		ORA BASLIN
  758A   65   20      		ADC WNDLFT
  758C   85   28      		STA BASLIN
  758E   60           		RTS
                      
                      	;CLREOL - Clear to end-of-line
                      
  758F   A4   24      	CLREOL:	LDY CH
  7591   A9   A0      	CLEOL1:	LDA #$A0	;(Space, non-flashing, non-inverted)
  7593   91   28      	CLEOL2:	STA (BASLIN),Y
  7595   C8           		INY
  7596   C4   21      		CPY WNDWTH
  7598   90   F9      		BCC CLEOL2
  759A   60           		RTS
                      
                      	;CROUT - Output a Carriage return; suppress output if necessary
                      
  759B   20   8F   75 	CROUT:	JSR CLREOL
  759E   20   D9   75 		JSR TSTCHR
  75A1   90   98      		BCC CR
  75A3   C9   13      		CMP #LSTKEY
  75A5   D0   94      		BNE CR
  75A7   2C   10   C0 		BIT KPCLR
  75AA   20   4C   77 		JSR RWAIT
  75AD   4C   3B   75 		JMP CR
                      
  75B0   20   72   72 	RDKEY:	JSR GTBUF	;Get character from the buffer if non-empty
  75B3   D0   18      		BNE KRTS
  75B5   6C   38   00 		JMP (KSWL)
                      
  75B8   A4   24      	KEYIN:	LDY CH
  75BA   B1   28      		LDA (BASLIN),Y
  75BC   48           		PHA
  75BD   29   7F      		AND #$7F
  75BF   09   40      		ORA #$40
  75C1   91   28      		STA (BASLIN),Y	;Make cursor position flash
  75C3   20   CE   75 		JSR RDKEY1
  75C6   85   2A      		STA BSLTMP
  75C8   68           		PLA
  75C9   91   28      		STA (BASLIN),Y
  75CB   A5   2A      		LDA BSLTMP
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-186
LOGO	MONITOR ROUTINES

  75CD   60           	KRTS:	RTS
                      
  75CE   E6   4A      	RDKEY1:	INC RNDL
  75D0   20   D9   75 		JSR TSTCHR
  75D3   90   F9      		BCC RDKEY1
  75D5   2C   10   C0 		BIT KPCLR
  75D8   60           		RTS
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-187
LOGO	MONITOR ROUTINES

                      	;Check for input character. Return with carry set and character in A if
                      	;character pending, else carry clear. Supplies "[" for replacement character.
  75D9   2C   00   C0 	TSTCHR:	BIT KPFLAG	;KBD device, check special locations
  75DC   10   0D      		BPL KNONE
  75DE   AD   00   C0 		LDA KPFLAG
  75E1   29   7F      		AND #$7F
  75E3   C9   5E      		CMP #LBRAK
  75E5   D0   02      		BNE TRTS
  75E7   A9   5B      		LDA #'[
  75E9   38           	TRTS:	SEC
  75EA   60           		RTS
  75EB   18           	KNONE:	CLC		;Return carry clear if no character
  75EC   60           		RTS
                      
                      	;SETTXT - Set text mode
                      
  75ED   AD   54   C0 	SETTXT:	LDA $C054	;Primary page
  75F0   AD   51   C0 		LDA $C051	;Set text mode
  75F3   A9   00      		LDA #$00
  75F5   85   22      		STA WNDTOP
  75F7   85   20      		STA WNDLFT
  75F9   A9   18      		LDA #$18
  75FB   85   23      		STA WNDBTM
  75FD   A9   28      		LDA #$28
  75FF   85   21      		STA WNDWTH
  7601   A9   17      		LDA #$17
  7603   85   25      		STA CV
  7605   4C   75   75 		JMP BCALCA
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-188
LOGO	MONITOR ROUTINES

                      	;GETLN - Gets a line of input from the keyboard. Looks for LOGO interrupt
                      	; characters, and recognizes the left-bracket alias character. Returns
                      	; number of characters (not including terminator) in X.
                      
  7608   A2   00      	GETLN:	LDX #$00	;X is LINARY index
  760A   20   B0   75 		JSR RDKEY	;Get an ascii value from keyboard
  760D   C9   10      		CMP #PULCHR	;(Pull back last line), Check at first character
  760F   D0   0F      		BNE NPRVLN
  7611   BD   00   02 	PREVLN:	LDA LINARY,X	;get char from line-array
  7614   F0   7E      		BEQ GNXTX	;done if null char
  7616   C9   0D      		CMP #$0D
  7618   F0   7A      		BEQ GNXTX	;or carriage-return encountered
  761A   20   84   72 		JSR TPCHR	;output char to screen
  761D   E8           		INX		;next char
  761E   D0   F1      		BNE PREVLN	;(Always)
  7620   A8           	NPRVLN:	TAY
  7621   8A           		TXA		;If first character, clear line array
  7622   CA           	GTLN1L:	DEX
  7623   9D   00   02 		STA LINARY,X
  7626   D0   FA      		BNE GTLN1L
  7628   98           		TYA
  7629   D0   03      		BNE GTLN1X	;(Always)
  762B   20   B0   75 	NEXTC:	JSR RDKEY	;Get an ascii value from keyboard
  762E   C9   1B      	GTLN1X:	CMP #$1B	;(ESC)
  7630   F0   26      		BEQ GRUBOT	;do a getln rubout
  7632   C9   04      		CMP #$04	;(^D)
  7634   F0   6A      		BEQ GDELET	;do a getln delete
  7636   C9   15      		CMP #$15	;(Forward arrow)
  7638   D0   3A      		BNE GTLN1C
  763A   BD   00   02 		LDA LINARY,X	;Get character under cursor
  763D   F0   04      		BEQ GTLNX1
  763F   C9   0D      		CMP #$0D
  7641   D0   02      		BNE GTLNX2
  7643   A9   20      	GTLNX1:	LDA #$20
  7645   9D   00   02 	GTLNX2:	STA LINARY,X
  7648   20   84   72 		JSR TPCHR	;Echo character
  764B   E0   F8      		CPX #$F8
  764D   90   03      		BCC GETLN3
  764F   20   0A   75 		JSR BELL
  7652   E8           	GETLN3:	INX
  7653   D0   D6      		BNE NEXTC
  7655   4C   CE   76 		JMP CANCEL
  7658   8A           	GRUBOT:	TXA
  7659   F0   D0      		BEQ NEXTC
  765B   CA           		DEX
  765C   C6   24      		DEC CH
  765E   10   40      		BPL GDELET
  7660   A5   21      		LDA WNDWTH
  7662   85   24      		STA CH
  7664   C6   24      		DEC CH
  7666   A5   22      		LDA WNDTOP
  7668   C5   25      		CMP CV
  766A   B0   34      		BCS GDELET
  766C   C6   25      		DEC CV
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-189
LOGO	MONITOR ROUTINES

  766E   20   73   75 		JSR BCALC
  7671   4C   A0   76 		JMP GDELET
  7674   C9   08      	GTLN1C:	CMP #$08	;(Back arrow)
  7676   F0   03      		BEQ BCKSPC
  7678   4C   D9   76 		JMP GTLN1D
  767B   8A           	BCKSPC:	TXA
  767C   F0   AD      		BEQ NEXTC
  767E   CA           		DEX
  767F   C6   24      		DEC CH
  7681   10   A8      		BPL NEXTC
  7683   A5   21      		LDA WNDWTH
  7685   85   24      		STA CH
  7687   C6   24      		DEC CH
  7689   A5   22      		LDA WNDTOP
  768B   C5   25      		CMP CV
  768D   B0   9C      		BCS NEXTC
  768F   C6   25      		DEC CV
  7691   20   73   75 		JSR BCALC
  7694   E0   00      	GNXTX:	CPX #$00
  7696   F0   05      		BEQ GNXTC
  7698   A9   00      		LDA #$00
  769A   9D   01   02 		STA LINARY+1,X
  769D   4C   2B   76 	GNXTC:	JMP NEXTC
  76A0   8A           	GDELET:	TXA
  76A1   48           		PHA		;save location in LINARY
  76A2   A5   24      		LDA CH		;and location on screen
  76A4   48           		PHA
  76A5   A5   25      		LDA CV
  76A7   48           		PHA
  76A8   E8           	GDLTLP:	INX		;get next char in LINARY
  76A9   BD   00   02 		LDA LINARY,X
  76AC   9D   FF   01 		STA LINARY-1,X	;store in previous location
  76AF   F0   0A      		BEQ GDLDON	;if null done
  76B1   C9   0D      		CMP #$0D
  76B3   F0   F3      		BEQ GDLTLP
  76B5   20   84   72 		JSR TPCHR	;type out
  76B8   4C   A8   76 		JMP GDLTLP
  76BB   A9   20      	GDLDON:	LDA #$20	;found a null, print a space at line
  76BD   20   84   72 		JSR TPCHR	;end
  76C0   68           		PLA
  76C1   85   25      		STA CV
  76C3   68           		PLA
  76C4   85   24      		STA CH
  76C6   20   73   75 		JSR BCALC
  76C9   68           		PLA
  76CA   AA           		TAX
  76CB   4C   2B   76 		JMP NEXTC
  76CE   A9   5C      	CANCEL:	LDA #'\
  76D0   20   84   72 		JSR TPCHR
  76D3   20   5B   72 		JSR BREAK1
  76D6   4C   08   76 		JMP GETLN
  76D9   C9   18      	GTLN1D:	CMP #$18	;(Cancel line)
  76DB   F0   F1      		BEQ CANCEL
  76DD   A4   54      		LDY MONFLG
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-190
LOGO	MONITOR ROUTINES

  76DF   D0   20      		BNE GTLN2A	;Don't check for interrupt characters if in monitor
  76E1   A4   57      		LDY INDEV
  76E3   D0   1C      		BNE GTLN2A	;or if evaluating the edit buffer
  76E5   C9   07      		CMP #STPKEY
  76E7   F0   60      		BEQ GTLNR1
  76E9   C9   1A      		CMP #PAUSKY
  76EB   F0   6A      		BEQ GTLNR2
  76ED   C9   06      		CMP #FULCHR
  76EF   F0   0A      		BEQ GTLNR3
  76F1   C9   0C      		CMP #MIXCHR
  76F3   D0   0C      		BNE GTLN2A
  76F5   20   51   54 		JSR STPMIX
  76F8   4C   2B   76 		JMP NEXTC
  76FB   20   49   54 	GTLNR3:	JSR STPFUL
  76FE   4C   2B   76 		JMP NEXTC
  7701   BC   00   02 	GTLN2A:	LDY LINARY,X
  7704   9D   00   02 		STA LINARY,X
  7707   C9   0D      		CMP #$0D
  7709   F0   3B      		BEQ GCR
  770B   20   84   72 		JSR TPCHR
  770E   8A           		TXA
  770F   48           		PHA		;save location in LINARY
  7710   A5   24      		LDA CH		;and location on screen
  7712   48           		PHA
  7713   A5   25      		LDA CV
  7715   48           		PHA
  7716   BD   01   02 	GINSL1:	LDA LINARY+1,X	;get next location
  7719   48           		PHA		;Save value
  771A   98           		TYA		;Get previous location
  771B   F0   19      		BEQ GINSDN	;if null done
  771D   C9   0D      		CMP #$0D
  771F   F0   15      		BEQ GINSDN
  7721   9D   01   02 		STA LINARY+1,X	;store in next location
  7724   20   84   72 		JSR TPCHR	;type out
  7727   68           		PLA
  7728   A8           		TAY
  7729   E0   F8      		CPX #$F8
  772B   90   03      		BCC GINSL2
  772D   20   0A   75 		JSR BELL
  7730   E8           	GINSL2:	INX
  7731   D0   E3      		BNE GINSL1
  7733   4C   CE   76 		JMP CANCEL
  7736   68           	GINSDN:	PLA		;Discard null
  7737   68           		PLA
  7738   85   25      		STA CV
  773A   68           		PLA
  773B   85   24      		STA CH
  773D   68           		PLA
  773E   AA           		TAX
  773F   E8           		INX
  7740   20   73   75 		JSR BCALC
  7743   4C   2B   76 		JMP NEXTC
  7746   4C   5B   72 	GCR:	JMP BREAK1
  7749   4C   3B   54 	GTLNR1:	JMP STPPK1
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-191
LOGO	MONITOR ROUTINES

                      
  774C   20   B0   75 	RWAIT:	JSR RDKEY
  774F   C9   07      		CMP #STPKEY
  7751   F0   F6      		BEQ GTLNR1
  7753   C9   1A      		CMP #PAUSKY
  7755   D0   0E      		BNE WRTS
  7757   4C   36   54 	GTLNR2:	JMP STPPKZ
                      
  775A   38           	WAIT:	SEC
  775B   48           	WAIT1:	PHA
  775C   E9   01      	WAIT2:	SBC #$01
  775E   D0   FC      		BNE WAIT2
  7760   68           		PLA
  7761   E9   01      		SBC #$01
  7763   D0   F6      		BNE WAIT1
  7765   60           	WRTS:	RTS
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-192
LOGO	SYSTEM FUNCTIONS

                      	.SBTTL	System Functions
                      	;	Arithmetic Functions:
                      
  7766   AD   28   03 	SUNDIF:	LDA INFDIF
  7769   85   63      		STA CURTOK	;(For possible error message in GT1NUM)
  776B   AD   29   03 		LDA INFDIF+1
  776E   85   64      		STA CURTOK+1
  7770   20   55   58 		JSR GT1NUM
  7773   B0   0A      		BCS SNDIF2
  7775   A2   A2      		LDX #NARG1
  7777   20   D1   78 		JSR COMPL
  777A   A0   A2      		LDY #NARG1
  777C   4C   BD   57 		JMP OTPFIX
  777F   20   F3   69 	SNDIF2:	JSR FCOMPL	;Complements flonum in NARG1.
  7782   4C   B7   57 		JMP OTPFL1
                      
  7785   20   24   58 	SSUM:	JSR GT2NUM
  7788   B0   21      		BCS SSUMF
  778A   A5   A5      		LDA NARG1+3
  778C   85   AA      		STA TEMPN1
  778E   18           		CLC
  778F   A2   FC      		LDX #$FC
  7791   B5   A6      	SSMLP1:	LDA NARG1+4,X
  7793   75   A2      		ADC NARG2+4,X
  7795   95   A6      		STA NARG1+4,X
  7797   E8           		INX
  7798   30   F7      		BMI SSMLP1
  779A   A5   A1      		LDA NARG2+3
  779C   45   AA      		EOR TEMPN1
  779E   30   13      		BMI SSUMOK	;Different signs, never an overflow
  77A0   A5   A5      		LDA NARG1+3
  77A2   45   A1      		EOR NARG2+3
  77A4   10   0D      		BPL SSUMOK	;Overflow if result not same sign as one argument
  77A6   A9   20      	ROFLOW:	LDA #XOFLOW
  77A8   4C   47   61 		JMP ERROR
  77AB   20   9D   69 	SSUMF:	JSR FADD	;Floating pt. addition
  77AE   B0   F6      		BCS ROFLOW
  77B0   4C   B7   57 		JMP OTPFL1
  77B3   A0   A2      	SSUMOK:	LDY #NARG1
  77B5   4C   BD   57 		JMP OTPFIX
                      
  77B8   20   24   58 	SDIF:	JSR GT2NUM
  77BB   B0   1E      		BCS SDIFF
  77BD   A5   A5      		LDA NARG1+3
  77BF   85   AA      		STA TEMPN1
  77C1   38           		SEC
  77C2   A2   FC      		LDX #$FC
  77C4   B5   A6      	SDIFL1:	LDA NARG1+4,X
  77C6   F5   A2      		SBC NARG2+4,X
  77C8   95   A6      		STA NARG1+4,X
  77CA   E8           		INX
  77CB   30   F7      		BMI SDIFL1
  77CD   A5   AA      		LDA TEMPN1
  77CF   45   A1      		EOR NARG2+3
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-193
LOGO	SYSTEM FUNCTIONS

  77D1   10   E0      		BPL SSUMOK	;Same signs, never an overflow
  77D3   A5   A5      		LDA NARG1+3
  77D5   45   AA      		EOR TEMPN1
  77D7   30   CD      		BMI ROFLOW	;Different signs, overflow
  77D9   10   D8      		BPL SSUMOK	;(Always)
  77DB   20   A2   69 	SDIFF:	JSR FSUB	;Floating pt. subtraction
  77DE   B0   C6      		BCS ROFLOW
  77E0   4C   B7   57 		JMP OTPFL1
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-194
LOGO	SYSTEM FUNCTIONS

  77E3   20   24   58 	SPROD:	JSR GT2NUM
  77E6   B0   62      		BCS SPRODF
  77E8   A5   A5      		LDA NARG1+3
  77EA   45   A1      		EOR NARG2+3
  77EC   85   B2      		STA ANSN
  77EE   A5   A5      		LDA NARG1+3
  77F0   10   05      		BPL SPRD1
  77F2   A2   A2      		LDX #NARG1
  77F4   20   D1   78 		JSR COMPL
  77F7   A5   A1      	SPRD1:	LDA NARG2+3
  77F9   10   05      		BPL SPRD2
  77FB   A2   9E      		LDX #NARG2
  77FD   20   D1   78 		JSR COMPL
  7800   A9   00      	SPRD2:	LDA #$00
  7802   A2   03      		LDX #$03
  7804   95   A8      	SPRDL1:	STA TEMPN,X
  7806   CA           		DEX
  7807   10   FB      		BPL SPRDL1
  7809   A0   20      		LDY #$20	;Bit counter
  780B   46   A1      	MUL2:	LSR NARG2+3
  780D   66   A0      		ROR NARG2+2
  780F   66   9F      		ROR NARG2+1
  7811   66   9E      		ROR NARG2
  7813   90   0F      		BCC MUL4
  7815   18           		CLC
  7816   A2   FC      		LDX #$FC
  7818   B5   AC      	SPRDL2:	LDA TEMPN+4,X	;Add multiplicand (NARG1) to partial product (TEMPN, TEMPN1)
  781A   75   A6      		ADC NARG1+4,X
  781C   95   AC      		STA TEMPN+4,X
  781E   E8           		INX
  781F   30   F7      		BMI SPRDL2
  7821   AA           		TAX
  7822   30   2E      		BMI SPRODR
  7824   06   A2      	MUL4:	ASL NARG1
  7826   26   A3      		ROL NARG1+1
  7828   26   A4      		ROL NARG1+2
  782A   26   A5      		ROL NARG1+3
  782C   10   0B      		BPL MUL4A
  782E   A2   03      		LDX #$03	;Sig. bit dropped from NARG1, so bit counter better be 0
  7830   B5   9E      	MUL4B:	LDA NARG2,X
  7832   D0   1E      		BNE SPRODR	;It isn't, error
  7834   CA           		DEX
  7835   10   F9      		BPL MUL4B
  7837   30   03      		BMI MUL4C	;(Always) It is, so we're done
  7839   88           	MUL4A:	DEY
  783A   D0   CF      		BNE MUL2	;Next bit
  783C   A5   B2      	MUL4C:	LDA ANSN
  783E   10   05      		BPL MULEND
  7840   A2   A8      		LDX #TEMPN
  7842   20   D1   78 		JSR COMPL
  7845   A0   A8      	MULEND:	LDY #TEMPN
  7847   4C   BD   57 		JMP OTPFIX
  784A   20   AA   69 	SPRODF:	JSR FMUL	;Floating pt. multiply
  784D   B0   03      		BCS SPRODR
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-195
LOGO	SYSTEM FUNCTIONS

  784F   4C   B7   57 		JMP OTPFL1
  7852   4C   A6   77 	SPRODR:	JMP ROFLOW
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-196
LOGO	SYSTEM FUNCTIONS

  7855   20   24   58 	SDIVID:	JSR GT2NUM
  7858   B0   0E      		BCS SDIVF
  785A   A2   03      		LDX #$03
  785C   B5   9E      	SDVLP1:	LDA NARG2,X
  785E   D0   10      		BNE SDVD1
  7860   CA           		DEX
  7861   10   F9      		BPL SDVLP1
  7863   A9   1C      		LDA #XDBZ
  7865   4C   47   61 		JMP ERROR
  7868   20   AF   69 	SDIVF:	JSR FDIV	;Floating pt. divide
  786B   B0   E5      		BCS SPRODR
  786D   4C   B7   57 		JMP OTPFL1
  7870   A2   03      	SDVD1:	LDX #$03
  7872   B5   A2      	SDVLP2:	LDA NARG1,X
  7874   D0   08      		BNE SDVD1A
  7876   CA           		DEX
  7877   10   F9      		BPL SDVLP2
  7879   A0   A2      		LDY #NARG1
  787B   4C   BD   57 		JMP OTPFIX	;Answer is zero if numerator is zero
  787E   A9   00      	SDVD1A:	LDA #$00
  7880   85   B2      		STA ANSN	;SIGN
  7882   A5   A5      		LDA NARG1+3
  7884   10   07      		BPL SDVD2
  7886   A2   A2      		LDX #NARG1
  7888   20   D1   78 		JSR COMPL
  788B   E6   B2      		INC ANSN
  788D   A5   A1      	SDVD2:	LDA NARG2+3
  788F   10   0B      		BPL SDVD3
  7891   A2   9E      		LDX #NARG2
  7893   20   D1   78 		JSR COMPL
  7896   A5   B2      		LDA ANSN
  7898   49   01      		EOR #$01
  789A   85   B2      		STA ANSN
  789C   20   ED   78 	SDVD3:	JSR XDIVID	;NARG2 is divisor, NARG1 is dividend, then quotient
  789F   A5   B2      		LDA ANSN
  78A1   F0   05      		BEQ SDVD4
  78A3   A2   A2      		LDX #NARG1
  78A5   20   D1   78 		JSR COMPL
  78A8   A0   A2      	SDVD4:	LDY #NARG1
  78AA   4C   BD   57 		JMP OTPFIX
                      
  78AD   AD   26   03 	SUNSUM:	LDA INFSUM
  78B0   85   63      		STA CURTOK	;(For possible error message in GT1NUM)
  78B2   AD   27   03 		LDA INFSUM+1
  78B5   85   64      		STA CURTOK+1
  78B7   20   55   58 		JSR GT1NUM
  78BA   B0   05      		BCS SNSM1
  78BC   A0   A2      		LDY #NARG1
  78BE   4C   BD   57 		JMP OTPFIX
  78C1   4C   B7   57 	SNSM1:	JMP OTPFL1
                      
  78C4   20   55   58 	SINT:	JSR GT1NUM
  78C7   90   03      		BCC SINT1
  78C9   20   57   6A 		JSR XINT1
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-197
LOGO	SYSTEM FUNCTIONS

  78CC   A0   A2      	SINT1:	LDY #NARG1
  78CE   4C   BD   57 		JMP OTPFIX
                      
  78D1   A0   03      	COMPL:	LDY #$03
  78D3   38           		SEC
  78D4   B5   00      	CMPL1:	LDA $00,X
  78D6   49   FF      		EOR #$FF	;Complement
  78D8   69   00      		ADC #$00	;and increment.
  78DA   95   00      		STA $00,X
  78DC   E8           		INX
  78DD   88           		DEY
  78DE   10   F4      		BPL CMPL1
  78E0   60           		RTS
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-198
LOGO	SYSTEM FUNCTIONS

                      	;Divides NARG1 by 10.
  78E1   A9   0A      	XDVD10:	LDA #$0A
  78E3   85   9E      		STA NARG2
  78E5   A9   00      		LDA #$00
  78E7   85   9F      		STA NARG2+1
  78E9   85   A0      		STA NARG2+2
  78EB   85   A1      		STA NARG2+3
                      
                      	;Fast and clean division routine, assumes positive numbers.
                      	;Dividend in NARG1, divisor in NARG2.
                      	;NARG1 becomes quotient.
  78ED   A9   00      	XDIVID:	LDA #$00		;Zero temp. quotient (A1L-A2H)
  78EF   A2   03      		LDX #$03
  78F1   95   3C      	XDLP1:	STA A1L,X
  78F3   95   A8      		STA TEMPN,X
  78F5   CA           		DEX
  78F6   10   F9      		BPL XDLP1
  78F8   E6   A8      		INC TEMPN		;Initialize bitholder (TEMPN,TEMPN1)
  78FA   06   A8      	NORM:	ASL TEMPN		;Normalize the bitholder...
  78FC   26   A9      		ROL TEMPN+1
  78FE   26   AA      		ROL TEMPN1
  7900   26   AB      		ROL TEMPN1+1
  7902   06   9E      		ASL NARG2
  7904   26   9F      		ROL NARG2+1		;and the divisor
  7906   26   A0      		ROL NARG2+2
  7908   26   A1      		ROL NARG2+3
  790A   10   EE      		BPL NORM		;to the left side
  790C   30   01      		BMI SHFT		;(Always)
  790E   68           	SHFTX:	PLA			;(Discard intermediate result)
  790F   46   AB      	SHFT:	LSR TEMPN1+1		;Back 'em off one
  7911   66   AA      		ROR TEMPN1
  7913   66   A9      		ROR TEMPN+1
  7915   66   A8      		ROR TEMPN
  7917   46   A1      		LSR NARG2+3
  7919   66   A0      		ROR NARG2+2
  791B   66   9F      		ROR NARG2+1
  791D   66   9E      		ROR NARG2
  791F   A2   03      		LDX #$03
  7921   B5   A8      	XDLP2:	LDA TEMPN,X
  7923   D0   05      		BNE DV2			;If bitholder is zero, done
  7925   CA           		DEX
  7926   10   F9      		BPL XDLP2
  7928   30   2D      		BMI DONE		;(Always)
  792A   38           	DV2:	SEC			;Subtract divisor from dividend
  792B   A5   A2      		LDA NARG1
  792D   E5   9E      		SBC NARG2
  792F   48           		PHA
  7930   A5   A3      		LDA NARG1+1
  7932   E5   9F      		SBC NARG2+1
  7934   AA           		TAX
  7935   A5   A4      		LDA NARG1+2
  7937   E5   A0      		SBC NARG2+2
  7939   A8           		TAY
  793A   A5   A5      		LDA NARG1+3
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-199
LOGO	SYSTEM FUNCTIONS

  793C   E5   A1      		SBC NARG2+3
  793E   90   CE      		BCC SHFTX		;If borrow, don't save remainder
  7940   85   A5      		STA NARG1+3		;or add to result
  7942   84   A4      		STY NARG1+2
  7944   86   A3      		STX NARG1+1
  7946   68           		PLA
  7947   85   A2      		STA NARG1
  7949   18           		CLC
  794A   A2   FC      		LDX #$FC
  794C   B5   40      	XDLP3:	LDA A1L+4,X		;Add bitholder to result
  794E   75   AC      		ADC TEMPN+4,X
  7950   95   40      		STA A1L+4,X
  7952   E8           		INX
  7953   30   F7      		BMI XDLP3
  7955   10   B8      		BPL SHFT		;(Always)
  7957   A5   A2      	DONE:	LDA NARG1
  7959   48           		PHA
  795A   A0   3C      		LDY #A1L
  795C   20   FF   4C 		JSR XYTON1
  795F   68           		PLA
  7960   18           		CLC
  7961   69   30      		ADC #'0
  7963   60           		RTS
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-200
LOGO	SYSTEM FUNCTIONS

                      	;	Boolean Functions:
                      
  7964   20   24   58 	SGRTR:	JSR GT2NUM
  7967   B0   2C      	SGRTRX:	BCS SGRTRF
  7969   A5   A5      	SGRTR1:	LDA NARG1+3
  796B   30   14      		BMI SGRTRM
  796D   A5   A1      		LDA NARG2+3
  796F   30   21      		BMI JTRU	;POS > NEG
  7971   A2   03      	SGRTRP:	LDX #$03
  7973   B5   9E      	SGRLP1:	LDA NARG2,X
  7975   D5   A2      		CMP NARG1,X
  7977   90   19      		BCC JTRU
  7979   D0   03      		BNE JFLS
  797B   CA           		DEX
  797C   10   F5      		BPL SGRLP1
  797E   4C   2F   7A 	JFLS:	JMP VPLFLS
  7981   A5   A1      	SGRTRM:	LDA NARG2+3
  7983   10   F9      		BPL JFLS	;NEG not > POS
  7985   29   7F      		AND #$7F	;Both negative, strip sign bit and compare
  7987   85   A1      		STA NARG2+3
  7989   A5   A5      		LDA NARG1+3
  798B   29   7F      		AND #$7F
  798D   85   A5      		STA NARG1+3
  798F   4C   71   79 		JMP SGRTRP
  7992   4C   25   7A 	JTRU:	JMP VPLTRU
  7995   A5   A3      	SGRTRF:	LDA NARG1+1
  7997   30   06      		BMI SGRTFM
  7999   A5   9F      		LDA NARG2+1
  799B   30   F5      		BMI JTRU	;POS > NEG
  799D   10   04      		BPL SGRTF1
  799F   A5   9F      	SGRTFM:	LDA NARG2+1
  79A1   10   DB      		BPL JFLS	;NEG not > POS
  79A3   20   A5   69 	SGRTF1:	JSR FSUBX	;Both same sign - subtract NARG1 from NARG2
  79A6   A5   A3      		LDA NARG1+1	;If NARG1 negative, then it was larger
  79A8   30   E8      		BMI JTRU
  79AA   10   D2      		BPL JFLS
                      
  79AC   20   24   58 	SLESS:	JSR GT2NUM
  79AF   20   7A   69 		JSR SWAP	;Switch the args and call S_GREATER
  79B2   4C   67   79 		JMP SGRTRX
                      
  79B5   A2   A2      	SNOT:	LDX #ARG1
  79B7   20   85   52 		JSR VPOP
  79BA   20   FF   79 		JSR GTBOOL
  79BD   98           		TYA
  79BE   D0   65      		BNE VPLTRU
  79C0   4C   2F   7A 		JMP VPLFLS
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-201
LOGO	SYSTEM FUNCTIONS

  79C3   A2   9E      	SBOTH:	LDX #ARG2
  79C5   20   85   52 		JSR VPOP
  79C8   A2   A2      		LDX #ARG1
  79CA   20   85   52 		JSR VPOP
  79CD   20   FF   79 		JSR GTBOOL
  79D0   84   B3      		STY ANSN1
  79D2   A2   9E      		LDX #ARG2
  79D4   20   FF   79 		JSR GTBOOL
  79D7   98           		TYA
  79D8   D0   55      		BNE VPLFLS
  79DA   A5   B3      		LDA ANSN1
  79DC   D0   51      		BNE VPLFLS
  79DE   4C   25   7A 		JMP VPLTRU
                      
  79E1   A2   9E      	SEITHR:	LDX #ARG2
  79E3   20   85   52 		JSR VPOP
  79E6   A2   A2      		LDX #ARG1
  79E8   20   85   52 		JSR VPOP
  79EB   20   FF   79 		JSR GTBOOL
  79EE   84   B3      		STY ANSN1
  79F0   A2   9E      		LDX #ARG2
  79F2   20   FF   79 		JSR GTBOOL
  79F5   98           		TYA
  79F6   F0   2D      		BEQ VPLTRU
  79F8   A5   B3      		LDA ANSN1
  79FA   F0   29      		BEQ VPLTRU
  79FC   4C   2F   7A 		JMP VPLFLS
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-202
LOGO	SYSTEM FUNCTIONS

  79FF   B5   00      	GTBOOL:	LDA $00,X
  7A01   A0   00      		LDY #$00
  7A03   C5   4E      		CMP LTRUE
  7A05   D0   07      		BNE GTBL1
  7A07   B5   01      		LDA $01,X
  7A09   C5   4F      		CMP LTRUE+1
  7A0B   D0   01      		BNE GTBL1
  7A0D   60           	GTRTS:	RTS
  7A0E   C8           	GTBL1:	INY
  7A0F   B5   00      		LDA $00,X
  7A11   C5   50      		CMP LFALSE
  7A13   D0   06      		BNE GTBL2
  7A15   B5   01      		LDA $01,X
  7A17   C5   51      		CMP LFALSE+1
  7A19   F0   F2      		BEQ GTRTS
  7A1B   A4   B2      	GTBL2:	LDY ANSN
  7A1D   20   3A   61 		JSR PTRYOK
  7A20   A9   0E      		LDA #XNTF
  7A22   4C   47   61 		JMP ERROR
                      
  7A25   A2   4E      	VPLTRU:	LDX #LTRUE
  7A27   20   53   52 		JSR VPUSHP
  7A2A   E6   07      		INC OTPUTN
  7A2C   4C   1E   41 		JMP POPJ
                      
  7A2F   A2   50      	VPLFLS:	LDX #LFALSE
  7A31   20   53   52 		JSR VPUSHP
  7A34   E6   07      		INC OTPUTN
  7A36   4C   1E   41 		JMP POPJ
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-203
LOGO	SYSTEM FUNCTIONS

                      	;	List Manipulation Functions:
                      
  7A39   86   B2      	GTLSTC:	STX ANSN
  7A3B   B5   00      		LDA $00,X
  7A3D   85   A6      		STA TEMPNH
  7A3F   B5   01      		LDA $01,X
  7A41   85   A7      		STA TEMPNH+1	;PTR
  7A43   A0   02      		LDY #$02
  7A45   B1   A6      	GTLC2:	LDA (TEMPNH),Y
  7A47   AA           		TAX
  7A48   F0   0B      		BEQ GTLC3
  7A4A   C8           		INY
  7A4B   B1   A6      		LDA (TEMPNH),Y
  7A4D   85   A7      	GTLC2A:	STA TEMPNH+1
  7A4F   86   A6      		STX TEMPNH	;(CDR)
  7A51   88           		DEY
  7A52   4C   45   7A 		JMP GTLC2
  7A55   C8           	GTLC3:	INY
  7A56   B1   A6      		LDA (TEMPNH),Y
  7A58   D0   F3      		BNE GTLC2A
  7A5A   A6   B2      		LDX ANSN
  7A5C   A5   A6      		LDA TEMPNH
  7A5E   95   00      		STA $00,X
  7A60   A5   A7      		LDA TEMPNH+1
  7A62   95   01      		STA $01,X
  7A64   60           		RTS
                      
  7A65   A2   9E      	SFPUT:	LDX #ARG2
  7A67   20   85   52 		JSR VPOP
  7A6A   A2   A2      		LDX #ARG1
  7A6C   20   85   52 		JSR VPOP
  7A6F   A2   9E      		LDX #ARG2
  7A71   20   84   5D 		JSR GETTYP
  7A74   C9   00      		CMP #LIST
  7A76   D0   0C      		BNE SFPT1
  7A78   A2   9E      		LDX #ARG2
  7A7A   A0   A2      		LDY #ARG1
  7A7C   84   B2      		STY ANSN
  7A7E   20   14   53 		JSR CONS
  7A81   4C   13   7E 		JMP OTPRG1
  7A84   A2   9E      	SFPT1:	LDX #ARG2
  7A86   A0   63      		LDY #CURTOK
  7A88   A9   0B      		LDA #XWTA
  7A8A   4C   47   61 		JMP ERROR
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-204
LOGO	SYSTEM FUNCTIONS

  7A8D   A2   9E      	SLPUT:	LDX #ARG2
  7A8F   20   85   52 		JSR VPOP
  7A92   A2   A2      		LDX #ARG1
  7A94   20   85   52 		JSR VPOP
  7A97   A2   9E      		LDX #ARG2
  7A99   20   84   5D 		JSR GETTYP
  7A9C   C9   00      		CMP #LIST
  7A9E   D0   E4      		BNE SFPT1
  7AA0   A5   A3      		LDA ARG1+1
  7AA2   D0   0F      		BNE SLPUT1
  7AA4   A9   A2      		LDA #ARG1
  7AA6   85   B2      		STA ANSN
  7AA8   A0   9E      		LDY #ARG2
  7AAA   A9   00      		LDA #$00	;(Type LIST)
  7AAC   AA           		TAX
  7AAD   20   14   53 		JSR CONS
  7AB0   4C   13   7E 		JMP OTPRG1
  7AB3   A5   9E      	SLPUT1:	LDA ARG2
  7AB5   D0   12      		BNE SLPUT2
  7AB7   A5   9F      		LDA ARG2+1
  7AB9   D0   0E      		BNE SLPUT2
  7ABB   A9   A2      		LDA #ARG1
  7ABD   85   B2      		STA ANSN
  7ABF   A8           		TAY
  7AC0   A2   00      		LDX #$00
  7AC2   8A           		TXA		;(Type LIST)
  7AC3   20   14   53 		JSR CONS
  7AC6   4C   13   7E 		JMP OTPRG1
  7AC9   A5   A2      	SLPUT2:	LDA ARG1
  7ACB   85   8A      		STA MARK2	;Protect the last element
  7ACD   A5   A3      		LDA ARG1+1
  7ACF   85   8B      		STA MARK2+1
  7AD1   A5   9E      		LDA ARG2
  7AD3   85   8C      		STA MARK3	;Protect the original list (or what's left of it)
  7AD5   A5   9F      		LDA ARG2+1
  7AD7   85   8D      		STA MARK3+1
  7AD9   A0   00      		LDY #$00
  7ADB   B1   8C      		LDA (MARK3),Y
  7ADD   85   AA      		STA TEMPN1
  7ADF   C8           		INY
  7AE0   B1   8C      		LDA (MARK3),Y
  7AE2   85   AB      		STA TEMPN1+1	;(CAR) First element
  7AE4   C8           		INY
  7AE5   B1   8C      		LDA (MARK3),Y
  7AE7   AA           		TAX
  7AE8   C8           		INY
  7AE9   B1   8C      		LDA (MARK3),Y
  7AEB   85   8D      		STA MARK3+1
  7AED   86   8C      		STX MARK3	;(CDR)
  7AEF   A9   88      		LDA #MARK1	;Pointer to start of new list
  7AF1   85   B2      		STA ANSN
  7AF3   A2   00      		LDX #$00
  7AF5   8A           		TXA
  7AF6   A0   AA      		LDY #TEMPN1
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-205
LOGO	SYSTEM FUNCTIONS

  7AF8   20   14   53 		JSR CONS
  7AFB   A5   88      		LDA MARK1
  7AFD   85   AC      		STA TEMPN2	;Pointer to newest node
  7AFF   A5   89      		LDA MARK1+1
  7B01   85   AD      		STA TEMPN2+1
  7B03   A5   8D      	SLPTW:	LDA MARK3+1	;Make a new list, element by element
  7B05   F0   35      		BEQ SLPT2
  7B07   A0   00      		LDY #$00
  7B09   B1   8C      		LDA (MARK3),Y
  7B0B   85   AA      		STA TEMPN1	;Get an element
  7B0D   C8           		INY
  7B0E   B1   8C      		LDA (MARK3),Y
  7B10   85   AB      		STA TEMPN1+1	;(CAR)
  7B12   C8           		INY
  7B13   B1   8C      		LDA (MARK3),Y
  7B15   AA           		TAX
  7B16   C8           		INY
  7B17   B1   8C      		LDA (MARK3),Y
  7B19   85   8D      		STA MARK3+1
  7B1B   86   8C      		STX MARK3	;(CDR) Advance element pointer
  7B1D   A9   A8      		LDA #TEMPN	;New pointer to newest node
  7B1F   85   B2      		STA ANSN
  7B21   A2   00      		LDX #$00
  7B23   8A           		TXA		;(Type LIST)
  7B24   A0   AA      		LDY #TEMPN1
  7B26   20   14   53 		JSR CONS
  7B29   A0   02      		LDY #$02
  7B2B   A5   A8      		LDA TEMPN
  7B2D   91   AC      		STA (TEMPN2),Y	;Pointer to last node
  7B2F   AA           		TAX
  7B30   C8           		INY
  7B31   A5   A9      		LDA TEMPN+1
  7B33   91   AC      		STA (TEMPN2),Y	;(CDR) Link new node onto list
  7B35   85   AD      		STA TEMPN2+1
  7B37   86   AC      		STX TEMPN2
  7B39   4C   03   7B 		JMP SLPTW
  7B3C   A9   A8      	SLPT2:	LDA #TEMPN
  7B3E   85   B2      		STA ANSN
  7B40   A2   00      		LDX #$00
  7B42   8A           		TXA		;(Type LIST)
  7B43   A0   A2      		LDY #ARG1
  7B45   20   14   53 		JSR CONS	;Get a pointer to first argument
  7B48   A0   02      		LDY #$02
  7B4A   A5   A8      		LDA TEMPN
  7B4C   91   AC      		STA (TEMPN2),Y
  7B4E   C8           		INY
  7B4F   A5   A9      		LDA TEMPN+1
  7B51   91   AC      		STA (TEMPN2),Y	;(RPLACD) Link final node on
  7B53   4C   68   7B 		JMP SSN2	;MARK1 points to our new list
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-206
LOGO	SYSTEM FUNCTIONS

  7B56   A5   05      	SSNTNC:	LDA NARGS
  7B58   10   04      		BPL SSN1
  7B5A   49   FF      		EOR #$FF	;NARGS := - NARGS - 1
  7B5C   85   05      		STA NARGS
  7B5E   A9   00      	SSN1:	LDA #$00
  7B60   85   88      		STA MARK1
  7B62   85   89      		STA MARK1+1
  7B64   A5   05      	SSNW:	LDA NARGS
  7B66   D0   10      		BNE SSNWA
  7B68   A5   88      	SSN2:	LDA MARK1
  7B6A   85   A2      		STA ARG1
  7B6C   A5   89      		LDA MARK1+1
  7B6E   85   A3      		STA ARG1+1
  7B70   A9   00      		LDA #$00
  7B72   20   2B   51 		JSR CLMK3
  7B75   4C   13   7E 		JMP OTPRG1
  7B78   A2   8A      	SSNWA:	LDX #MARK2
  7B7A   20   85   52 		JSR VPOP
  7B7D   20   84   5D 		JSR GETTYP
  7B80   C9   00      		CMP #LIST
  7B82   F0   0E      		BEQ SSNW1
  7B84   A2   88      		LDX #MARK1
  7B86   86   B2      		STX ANSN
  7B88   A0   8A      		LDY #MARK2
  7B8A   A9   00      		LDA #LIST
  7B8C   20   14   53 		JSR CONS
  7B8F   4C   F1   7B 		JMP SSNW2
  7B92   A5   16      	SSNW1:	LDA VSP
  7B94   85   AA      		STA TEMPN1
  7B96   A5   17      		LDA VSP+1
  7B98   85   AB      		STA TEMPN1+1
  7B9A   A9   E6      		LDA #SSNERR&$FF
  7B9C   85   12      		STA ERRRET
  7B9E   A9   7B      		LDA #SSNERR^
  7BA0   85   13      		STA ERRRET+1
  7BA2   BA           		TSX
  7BA3   86   11      		STX RETADR	;Save all necessary return addresses
  7BA5   A5   8B      	SSNX:	LDA MARK2+1
  7BA7   F0   1E      		BEQ SSNY
  7BA9   A0   00      		LDY #$00
  7BAB   B1   8A      		LDA (MARK2),Y
  7BAD   85   8C      		STA MARK3
  7BAF   C8           		INY
  7BB0   B1   8A      		LDA (MARK2),Y
  7BB2   85   8D      		STA MARK3+1	;(CAR)
  7BB4   C8           		INY
  7BB5   B1   8A      		LDA (MARK2),Y
  7BB7   AA           		TAX
  7BB8   C8           		INY
  7BB9   B1   8A      		LDA (MARK2),Y
  7BBB   85   8B      		STA MARK2+1
  7BBD   86   8A      		STX MARK2	;(CDR)
  7BBF   A2   8C      		LDX #MARK3
  7BC1   20   53   52 		JSR VPUSHP
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-207
LOGO	SYSTEM FUNCTIONS

  7BC4   4C   A5   7B 		JMP SSNX
  7BC7   A5   AA      	SSNY:	LDA TEMPN1
  7BC9   C5   16      		CMP VSP
  7BCB   D0   06      		BNE SSNY1
  7BCD   A5   AB      		LDA TEMPN1+1
  7BCF   C5   17      		CMP VSP+1
  7BD1   F0   1E      		BEQ SSNW2
  7BD3   A2   8C      	SSNY1:	LDX #MARK3
  7BD5   20   85   52 		JSR VPOP
  7BD8   A2   88      		LDX #MARK1
  7BDA   86   B2      		STX ANSN
  7BDC   A0   8C      		LDY #MARK3
  7BDE   A9   00      		LDA #LIST
  7BE0   20   14   53 		JSR CONS
  7BE3   4C   C7   7B 		JMP SSNY
  7BE6   A5   AA      	SSNERR:	LDA TEMPN1
  7BE8   85   16      		STA VSP
  7BEA   A5   AB      		LDA TEMPN1+1
  7BEC   85   17      		STA VSP+1
  7BEE   4C   D2   47 		JMP ERROR1
  7BF1   C6   05      	SSNW2:	DEC NARGS
  7BF3   4C   64   7B 		JMP SSNW
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-208
LOGO	SYSTEM FUNCTIONS

                      	;	Miscellaneous Functions:
                      
  7BF6   A2   9E      	SMAKE:	LDX #ARG2
  7BF8   20   85   52 		JSR VPOP
  7BFB   A2   A2      		LDX #ARG1
  7BFD   20   85   52 		JSR VPOP
  7C00   20   84   5D 		JSR GETTYP
  7C03   C9   01      		CMP #ATOM
  7C05   F0   04      		BEQ SMAKE1
  7C07   C9   07      		CMP #SATOM
  7C09   D0   0A      		BNE SMAKE2
  7C0B   A2   9E      	SMAKE1:	LDX #ARG2
  7C0D   A0   A2      		LDY #ARG1
  7C0F   20   E9   52 		JSR PUTVAL
  7C12   4C   1E   41 		JMP POPJ
  7C15   A2   A2      	SMAKE2:	LDX #ARG1
  7C17   A0   63      		LDY #CURTOK
  7C19   A9   0B      		LDA #XWTA
  7C1B   4C   47   61 		JMP ERROR
                      
  7C1E   A5   7C      	SOUTPT:	LDA LEVNUM
  7C20   D0   04      		BNE SOTPT2
  7C22   A5   7D      		LDA LEVNUM+1
  7C24   F0   09      		BEQ SOTPT1
  7C26   A9   01      	SOTPT2:	LDA #$01
  7C28   85   0C      		STA STPFLG
  7C2A   85   07      		STA OTPUTN
  7C2C   4C   1E   41 		JMP POPJ
  7C2F   A0   63      	SOTPT1:	LDY #CURTOK
  7C31   A9   0D      		LDA #XNTL
  7C33   4C   47   61 		JMP ERROR
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-209
LOGO	SYSTEM FUNCTIONS

  7C36   A5   7C      	SSTOP:	LDA LEVNUM
  7C38   D0   04      		BNE SSTOP1
  7C3A   A5   7D      		LDA LEVNUM+1
  7C3C   F0   F1      		BEQ SOTPT1
  7C3E   A9   01      	SSTOP1:	LDA #$01
  7C40   85   0C      		STA STPFLG
  7C42   4C   1E   41 		JMP POPJ
                      
  7C45   A9   00      	SCOMMT:	LDA #$00
  7C47   85   61      		STA TOKPTR
  7C49   85   62      		STA TOKPTR+1
  7C4B   A5   06      		LDA EXPOUT
  7C4D   D0   03      		BNE SCMMT1
  7C4F   4C   1E   41 		JMP POPJ
  7C52   A9   02      	SCMMT1:	LDA #XEOL
  7C54   4C   47   61 		JMP ERROR
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-210
LOGO	SYSTEM FUNCTIONS

  7C57   A9   4F      	SDEBUG:	LDA #'O
  7C59   20   84   72 		JSR TPCHR
  7C5C   A5   0A      		LDA DBUGSW
  7C5E   D0   0D      		BNE SDBG1
  7C60   E6   0A      		INC DBUGSW
  7C62   A9   4E      		LDA #'N
  7C64   20   84   72 		JSR TPCHR
  7C67   20   5B   72 		JSR BREAK1
  7C6A   4C   1E   41 		JMP POPJ
  7C6D   C6   0A      	SDBG1:	DEC DBUGSW
  7C6F   A9   46      		LDA #'F
  7C71   20   84   72 		JSR TPCHR
  7C74   A9   46      		LDA #'F
  7C76   20   84   72 		JSR TPCHR
  7C79   20   5B   72 		JSR BREAK1
  7C7C   4C   1E   41 		JMP POPJ
                      
  7C7F   A9   01      	SCNTIN:	LDA #$01
  7C81   85   0C      		STA STPFLG
  7C83   85   0D      		STA DCOFLG
  7C85   4C   1E   41 		JMP POPJ
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-211
LOGO	SYSTEM FUNCTIONS

  7C88   E6   82      	SIF:	INC IFLEVL
  7C8A   D0   07      		BNE SIFA
  7C8C   E6   83      		INC IFLEVL+1
  7C8E   D0   03      		BNE SIFA
  7C90   4C   FB   42 		JMP EXCED
  7C93   20   E0   43 	SIFA:	JSR GTNXTK
  7C96   A5   65      		LDA NEXTOK
  7C98   CD   12   03 		CMP LTHEN
  7C9B   D0   0C      		BNE SIF1
  7C9D   A5   66      		LDA NEXTOK+1
  7C9F   CD   13   03 		CMP LTHEN+1
  7CA2   D0   05      		BNE SIF1
  7CA4   A2   61      		LDX #TOKPTR
  7CA6   20   75   55 		JSR TTKADV
  7CA9   A2   A2      	SIF1:	LDX #ARG1
  7CAB   20   85   52 		JSR VPOP
  7CAE   20   FF   79 		JSR GTBOOL
  7CB1   C0   00      		CPY #$00
  7CB3   D0   03      		BNE SIF2
  7CB5   4C   1E   41 	SIF3A:	JMP POPJ
  7CB8   A2   65      	SIF2:	LDX #NEXTOK
  7CBA   20   4A   5A 		JSR EXIFSC
  7CBD   A5   61      		LDA TOKPTR
  7CBF   D0   04      		BNE SIF3
  7CC1   A5   62      		LDA TOKPTR+1
  7CC3   F0   F0      		BEQ SIF3A
  7CC5   A5   65      	SIF3:	LDA NEXTOK
  7CC7   CD   08   03 		CMP LELSE
  7CCA   D0   E9      		BNE SIF3A
  7CCC   A5   66      		LDA NEXTOK+1
  7CCE   CD   09   03 		CMP LELSE+1
  7CD1   D0   E2      		BNE SIF3A
  7CD3   A2   61      		LDX #TOKPTR
  7CD5   20   75   55 		JSR TTKADV
  7CD8   4C   1E   41 		JMP POPJ
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-212
LOGO	SYSTEM FUNCTIONS

  7CDB   38           	SELSE:	SEC
  7CDC   A5   82      		LDA IFLEVL
  7CDE   E9   01      		SBC #$01
  7CE0   85   82      		STA IFLEVL
  7CE2   A5   83      		LDA IFLEVL+1
  7CE4   E9   00      		SBC #$00
  7CE6   85   83      		STA IFLEVL+1
  7CE8   90   17      		BCC SELSE1
  7CEA   A5   82      		LDA IFLEVL
  7CEC   D0   0B      		BNE SELSE2
  7CEE   A5   83      		LDA IFLEVL+1
  7CF0   D0   07      		BNE SELSE2
  7CF2   85   61      		STA TOKPTR
  7CF4   85   62      		STA TOKPTR+1
  7CF6   4C   1E   41 		JMP POPJ
  7CF9   A2   AC      	SELSE2:	LDX #TEMPN2
  7CFB   20   4A   5A 		JSR EXIFSC
  7CFE   4C   1E   41 		JMP POPJ
  7D01   A9   0F      	SELSE1:	LDA #XELS
  7D03   4C   47   61 		JMP ERROR
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-213
LOGO	SYSTEM FUNCTIONS

  7D06   20   15   54 	SGO:	JSR STPPEK
  7D09   A2   A2      		LDX #ARG1
  7D0B   20   85   52 		JSR VPOP
  7D0E   20   84   5D 		JSR GETTYP
  7D11   C9   01      		CMP #ATOM
  7D13   F0   07      		BEQ SGO1
  7D15   C9   07      		CMP #SATOM
  7D17   F0   03      		BEQ SGO1
  7D19   4C   E5   7D 		JMP SRUN1
  7D1C   A9   0A      	SGO1:	LDA #LATOM
  7D1E   A2   A2      		LDX #ARG1
  7D20   20   F0   53 		JSR PUTTYP
  7D23   A5   70      		LDA FBODY
  7D25   85   78      		STA GOPTR
  7D27   A5   71      		LDA FBODY+1
  7D29   85   79      		STA GOPTR+1
  7D2B   A2   78      		LDX #GOPTR
  7D2D   20   43   57 		JSR ULNADV
  7D30   A5   78      	SGOW:	LDA GOPTR
  7D32   D0   04      		BNE SGOW1
  7D34   A5   79      		LDA GOPTR+1
  7D36   F0   42      		BEQ SGOR
  7D38   A2   AA      	SGOW1:	LDX #TEMPN1
  7D3A   A0   78      		LDY #GOPTR
  7D3C   20   0B   56 		JSR GTTULN
  7D3F   A0   00      		LDY #$00
  7D41   B1   AA      		LDA (TEMPN1),Y
  7D43   85   A8      		STA TEMPN
  7D45   C8           		INY
  7D46   B1   AA      		LDA (TEMPN1),Y
  7D48   85   A9      		STA TEMPN+1	;(GETTOK)
  7D4A   A2   AA      		LDX #TEMPN1
  7D4C   20   75   55 		JSR TTKADV
  7D4F   A0   00      		LDY #$00
  7D51   B1   AA      		LDA (TEMPN1),Y
  7D53   AA           		TAX
  7D54   C8           		INY
  7D55   B1   AA      		LDA (TEMPN1),Y
  7D57   85   AB      		STA TEMPN1+1
  7D59   86   AA      		STX TEMPN1	;(GETTOK)
  7D5B   A5   A2      		LDA ARG1
  7D5D   C5   AA      		CMP TEMPN1
  7D5F   D0   06      		BNE SGOW2
  7D61   A5   A3      		LDA ARG1+1
  7D63   C5   AB      		CMP TEMPN1+1
  7D65   F0   08      		BEQ SGOE1
  7D67   A2   78      	SGOW2:	LDX #GOPTR
  7D69   20   43   57 		JSR ULNADV
  7D6C   4C   30   7D 		JMP SGOW
  7D6F   A5   A8      	SGOE1:	LDA TEMPN
  7D71   85   74      		STA LINNUM
  7D73   A5   A9      		LDA TEMPN+1
  7D75   85   75      		STA LINNUM+1
  7D77   4C   1E   41 		JMP POPJ
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-214
LOGO	SYSTEM FUNCTIONS

  7D7A   A0   A2      	SGOR:	LDY #ARG1
  7D7C   A9   14      		LDA #XLNF
  7D7E   4C   47   61 		JMP ERROR
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-215
LOGO	SYSTEM FUNCTIONS

  7D81   A2   9E      	SRPEAT:	LDX #ARG2
  7D83   20   85   52 		JSR VPOP
  7D86   20   62   58 		JSR GT1FIX
  7D89   A5   A3      		LDA ARG1+1
  7D8B   30   58      		BMI SRUN1
  7D8D   20   7A   69 		JSR SWAP	;Swap ARG1 and ARG2
  7D90   A2   A2      		LDX #ARG1
  7D92   20   84   5D 		JSR GETTYP
  7D95   C9   00      		CMP #LIST
  7D97   D0   4C      		BNE SRUN1
  7D99   A5   9E      	SRPLOP:	LDA ARG2
  7D9B   D0   07      		BNE SRPLP1
  7D9D   A5   9F      		LDA ARG2+1
  7D9F   D0   03      		BNE SRPLP1
  7DA1   4C   1E   41 		JMP POPJ
  7DA4   38           	SRPLP1:	SEC
  7DA5   A5   9E      		LDA ARG2
  7DA7   E9   01      		SBC #$01
  7DA9   85   9E      		STA ARG2
  7DAB   B0   02      		BCS SRPLP2
  7DAD   C6   9F      		DEC ARG2+1
  7DAF   20   15   54 	SRPLP2:	JSR STPPEK
  7DB2   A2   9E      		LDX #ARG2
  7DB4   20   25   52 		JSR PUSHP
  7DB7   A2   A2      		LDX #ARG1
  7DB9   20   25   52 		JSR PUSHP
  7DBC   A2   C6      		LDX #SREPT1&$FF
  7DBE   A0   7D      		LDY #SREPT1^
  7DC0   20   3C   52 		JSR PUSH
  7DC3   4C   1B   44 		JMP RUNHAN
                      
  7DC6   A2   A2      	SREPT1:	LDX #ARG1
  7DC8   20   6C   52 		JSR POP
  7DCB   A2   9E      		LDX #ARG2
  7DCD   20   6C   52 		JSR POP
  7DD0   4C   99   7D 		JMP SRPLOP
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-216
LOGO	SYSTEM FUNCTIONS

  7DD3   20   15   54 	SRUN:	JSR STPPEK
  7DD6   A2   A2      		LDX #ARG1
  7DD8   20   85   52 		JSR VPOP
  7DDB   20   84   5D 		JSR GETTYP
  7DDE   C9   00      		CMP #LIST
  7DE0   D0   03      		BNE SRUN1
  7DE2   4C   1B   44 		JMP RUNHAN
  7DE5   4C   15   7C 	SRUN1:	JMP SMAKE2	;(ERROR XWTA,ARG1,CURTOK)
                      
  7DE8   A2   9E      	STHING:	LDX #ARG2
  7DEA   20   85   52 		JSR VPOP
  7DED   20   84   5D 		JSR GETTYP
  7DF0   C9   01      		CMP #ATOM
  7DF2   F0   09      		BEQ STH1
  7DF4   C9   07      		CMP #SATOM
  7DF6   F0   05      		BEQ STH1
  7DF8   A2   9E      		LDX #ARG2
  7DFA   4C   EF   7E 		JMP STLR4A
  7DFD   A2   A2      	STH1:	LDX #ARG1
  7DFF   A0   9E      		LDY #ARG2
  7E01   20   D1   52 		JSR GETVAL
  7E04   A5   A3      		LDA ARG1+1
  7E06   D0   0B      		BNE OTPRG1
  7E08   A5   A2      		LDA ARG1
  7E0A   F0   07      		BEQ OTPRG1
  7E0C   A0   9E      		LDY #ARG2
  7E0E   A9   04      		LDA #XHNV
  7E10   4C   47   61 		JMP ERROR
  7E13   E6   07      	OTPRG1:	INC OTPUTN
  7E15   A2   A2      		LDX #ARG1
  7E17   20   53   52 		JSR VPUSHP
  7E1A   4C   1E   41 		JMP POPJ
                      
  7E1D   A2   9E      	SPTHNG:	LDX #ARG2
  7E1F   20   85   52 		JSR VPOP
  7E22   20   84   5D 		JSR GETTYP
  7E25   C9   01      		CMP #ATOM
  7E27   F0   07      		BEQ SPTH1
  7E29   C9   07      		CMP #SATOM
  7E2B   F0   03      		BEQ SPTH1
  7E2D   4C   2F   7A 	SPTH2:	JMP VPLFLS
  7E30   A2   A2      	SPTH1:	LDX #ARG1
  7E32   A0   9E      		LDY #ARG2
  7E34   20   D1   52 		JSR GETVAL
  7E37   A5   A3      		LDA ARG1+1
  7E39   D0   04      		BNE SPTH3
  7E3B   A5   A2      		LDA ARG1
  7E3D   D0   EE      		BNE SPTH2
  7E3F   4C   25   7A 	SPTH3:	JMP VPLTRU
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-217
LOGO	SYSTEM FUNCTIONS

  7E42   A2   A2      	SPWRDP:	LDX #ARG1
  7E44   20   85   52 		JSR VPOP
  7E47   20   84   5D 		JSR GETTYP
  7E4A   C9   01      		CMP #ATOM
  7E4C   F0   F1      		BEQ SPTH3
  7E4E   C9   07      		CMP #SATOM
  7E50   F0   ED      		BEQ SPTH3
  7E52   C9   03      		CMP #FIX
  7E54   F0   E9      		BEQ SPTH3
  7E56   C9   04      		CMP #FLO
  7E58   F0   E5      		BEQ SPTH3
  7E5A   4C   2F   7A 		JMP VPLFLS
                      
  7E5D   38           	SNODES:	SEC
  7E5E   A9   98      		LDA #TYPLEN&$FF
  7E60   E5   C3      		SBC NNODES
  7E62   85   AA      		STA TEMPN1
  7E64   A9   09      		LDA #TYPLEN^
  7E66   E5   C4      		SBC NNODES+1
  7E68   85   AB      		STA TEMPN1+1
  7E6A   A0   AA      		LDY #TEMPN1
  7E6C   4C   A2   57 		JMP OTPFX1
                      
  7E6F   A9   3C      	SREQU:	LDA #RPRMPT
  7E71   20   84   72 		JSR TPCHR
  7E74   A2   98      		LDX #ILINE
  7E76   20   53   52 		JSR VPUSHP	;Save ILINE
  7E79   A2   98      		LDX #ILINE
  7E7B   20   DA   49 		JSR READLN
  7E7E   98           		TYA
  7E7F   F0   03      		BEQ SREQU1	;Y zero means OK
  7E81   4C   D2   47 		JMP ERROR1
  7E84   A5   98      	SREQU1:	LDA ILINE	;Restore ILINE
  7E86   85   A2      		STA ARG1
  7E88   A5   99      		LDA ILINE+1
  7E8A   85   A3      		STA ARG1+1
  7E8C   A2   98      		LDX #ILINE
  7E8E   20   85   52 		JSR VPOP
  7E91   4C   13   7E 		JMP OTPRG1
                      
  7E94   20   5B   62 	SGCOLL:	JSR GARCOL
  7E97   4C   1E   41 	SGCE:	JMP POPJ
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-218
LOGO	SYSTEM FUNCTIONS

  7E9A   A5   57      	SRETRV:	LDA INDEV
  7E9C   D0   16      		BNE SRTRE
  7E9E   A5   C7      		LDA ENDBUF
  7EA0   C9   00      		CMP #EDBUF&$FF
  7EA2   D0   06      		BNE SCHG1
  7EA4   A5   C8      		LDA ENDBUF+1
  7EA6   C9   20      		CMP #EDBUF^
  7EA8   F0   ED      		BEQ SGCE	;Buffer never used, so ignore
  7EAA   A9   01      	SCHG1:	LDA #BUFFER
  7EAC   85   57      		STA INDEV
  7EAE   20   CE   6C 		JSR CHGX1
  7EB1   4C   78   6C 		JMP CHGIN3
  7EB4   A9   15      	SRTRE:	LDA #XEDT
  7EB6   4C   47   61 		JMP ERROR
                      
  7EB9   A5   09      	SCHNGE:	LDA GRPHCS
  7EBB   F0   05      		BEQ SCHNG2
  7EBD   20   7B   72 		JSR RESETT	;Nodisplay, get the text page back
  7EC0   C6   09      		DEC GRPHCS
  7EC2   4C   1E   6C 	SCHNG2:	JMP CHGSTP	;get arg to CHG
                      
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-219
LOGO	SYSTEM FUNCTIONS

  7EC5   A5   08      	STITLE:	LDA EDSW
  7EC7   F0   0F      		BEQ STTLR1
  7EC9   A5   7C      		LDA LEVNUM
  7ECB   D0   10      		BNE STTLR2
  7ECD   A5   7D      		LDA LEVNUM+1
  7ECF   D0   0C      		BNE STTLR2
  7ED1   A5   62      		LDA TOKPTR+1
  7ED3   D0   21      		BNE STTL1
  7ED5   4C   1E   41 		JMP POPJ
  7ED8   A9   18      	STTLR1:	LDA #XNED
  7EDA   4C   47   61 		JMP ERROR
  7EDD   A9   17      	STTLR2:	LDA #XETL
  7EDF   4C   47   61 		JMP ERROR
  7EE2   A0   AE      	STTLR3:	LDY #TEMPN3
  7EE4   20   3A   61 		JSR PTRYOK
  7EE7   A9   0C      		LDA #XUBL
  7EE9   4C   47   61 		JMP ERROR
  7EEC   20   2F   61 	STTLR4:	JSR PTRXOK
  7EEF   A0   63      	STLR4A:	LDY #CURTOK
  7EF1   A9   0B      		LDA #XWTA
  7EF3   4C   47   61 		JMP ERROR
  7EF6   A0   00      	STTL1:	LDY #$00
  7EF8   B1   61      		LDA (TOKPTR),Y
  7EFA   85   AE      		STA TEMPN3	;(ATOMM)
  7EFC   C8           		INY
  7EFD   B1   61      		LDA (TOKPTR),Y
  7EFF   85   AF      		STA TEMPN3+1	;(CAR)
  7F01   C8           		INY
  7F02   B1   61      		LDA (TOKPTR),Y
  7F04   AA           		TAX
  7F05   C8           		INY
  7F06   B1   61      		LDA (TOKPTR),Y
  7F08   85   62      		STA TOKPTR+1
  7F0A   85   AB      		STA TEMPN1+1	;(ARGLIST)
  7F0C   86   61      		STX TOKPTR	;(CDR)
  7F0E   86   AA      		STX TEMPN1
  7F10   A2   AE      		LDX #TEMPN3
  7F12   20   84   5D 		JSR GETTYP
  7F15   C9   07      		CMP #SATOM
  7F17   F0   C9      		BEQ STTLR3
  7F19   C9   01      		CMP #ATOM
  7F1B   D0   CF      		BNE STTLR4
  7F1D   A5   AE      		LDA TEMPN3
  7F1F   C5   84      		CMP EDTATM
  7F21   D0   06      		BNE STTL2
  7F23   A5   AF      		LDA TEMPN3+1
  7F25   C5   85      		CMP EDTATM+1
  7F27   F0   1F      		BEQ STTL3
  7F29   A2   84      	STTL2:	LDX #EDTATM
  7F2B   A9   AC      		LDA #TEMPN2	;(FUN)
  7F2D   20   92   56 		JSR GETFUN
  7F30   A2   84      		LDX #EDTATM
  7F32   20   73   56 		JSR UNFUNC
  7F35   A5   AE      		LDA TEMPN3
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-220
LOGO	SYSTEM FUNCTIONS

  7F37   85   84      		STA EDTATM
  7F39   85   86      		STA PODEFL
  7F3B   A5   AF      		LDA TEMPN3+1
  7F3D   85   85      		STA EDTATM+1
  7F3F   85   87      		STA PODEFL+1
  7F41   A0   AC      		LDY #TEMPN2
  7F43   A2   84      		LDX #EDTATM
  7F45   20   EB   57 		JSR PUTFUN
  7F48   A9   00      	STTL3:	LDA #$00
  7F4A   85   B3      		STA ANSN1
  7F4C   A5   62      	STTLW:	LDA TOKPTR+1
  7F4E   F0   3B      		BEQ STTLWE
  7F50   A0   00      		LDY #$00
  7F52   B1   61      		LDA (TOKPTR),Y
  7F54   85   A8      		STA TEMPN
  7F56   C8           		INY
  7F57   B1   61      		LDA (TOKPTR),Y
  7F59   85   A9      		STA TEMPN+1	;(CAR)
  7F5B   C8           		INY
  7F5C   B1   61      		LDA (TOKPTR),Y
  7F5E   AA           		TAX
  7F5F   C8           		INY
  7F60   B1   61      		LDA (TOKPTR),Y
  7F62   85   62      		STA TOKPTR+1
  7F64   86   61      		STX TOKPTR	;(CDR)
  7F66   A5   A8      		LDA TEMPN
  7F68   CD   02   03 		CMP COMMNT
  7F6B   D0   07      		BNE STTLW2
  7F6D   A5   A9      		LDA TEMPN+1
  7F6F   CD   03   03 		CMP COMMNT+1
  7F72   F0   D8      		BEQ STTLW
  7F74   A2   A8      	STTLW2:	LDX #TEMPN
  7F76   20   84   5D 		JSR GETTYP
  7F79   C9   01      		CMP #ATOM
  7F7B   F0   09      		BEQ STTLW3
  7F7D   C9   07      		CMP #SATOM
  7F7F   F0   05      		BEQ STTLW3
  7F81   A2   A8      		LDX #TEMPN
  7F83   4C   EC   7E 		JMP STTLR4
  7F86   E6   B3      	STTLW3:	INC ANSN1
  7F88   4C   4C   7F 		JMP STTLW
  7F8B   A0   00      	STTLWE:	LDY #$00
  7F8D   84   61      		STY TOKPTR
  7F8F   84   62      		STY TOKPTR+1
  7F91   A5   AA      		LDA TEMPN1
  7F93   91   9A      		STA (EDBOD),Y
  7F95   C8           		INY
  7F96   A5   AB      		LDA TEMPN1+1
  7F98   91   9A      		STA (EDBOD),Y	;(RPLACA)
  7F9A   A2   84      		LDX #EDTATM
  7F9C   A9   AA      		LDA #TEMPN1
  7F9E   20   92   56 		JSR GETFUN
  7FA1   A0   04      		LDY #$04
  7FA3   A5   B3      		LDA ANSN1
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-221
LOGO	SYSTEM FUNCTIONS

  7FA5   91   AA      		STA (TEMPN1),Y	;(PUTNGS)
  7FA7   4C   1E   41 	SERR4:	JMP POPJ
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-222
LOGO	SYSTEM FUNCTIONS

  7FAA   A2   A2      	SPRINT:	LDX #ARG1
  7FAC   20   85   52 		JSR VPOP
  7FAF   A9   01      		LDA #$01
  7FB1   20   F9   65 		JSR LTYPE
  7FB4   20   5B   72 		JSR BREAK1
  7FB7   4C   1E   41 		JMP POPJ
                      
  7FBA   A2   A2      	STYPE:	LDX #ARG1
  7FBC   20   85   52 		JSR VPOP
  7FBF   A9   01      		LDA #$01
  7FC1   20   F9   65 		JSR LTYPE
  7FC4   4C   1E   41 		JMP POPJ
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-223
LOGO	SYSTEM FUNCTIONS

  7FC7   A2   9E      	SDEFIN:	LDX #ARG2
  7FC9   20   85   52 		JSR VPOP
  7FCC   A2   A2      		LDX #ARG1
  7FCE   20   85   52 		JSR VPOP
  7FD1   20   84   5D 		JSR GETTYP
  7FD4   C9   01      		CMP #ATOM
  7FD6   D0   27      		BNE SDFNR1
  7FD8   A2   9E      		LDX #ARG2
  7FDA   20   84   5D 		JSR GETTYP
  7FDD   C9   00      		CMP #LIST
  7FDF   D0   21      		BNE SDFNR2
  7FE1   A0   00      		LDY #$00
  7FE3   B1   9E      		LDA (ARG2),Y
  7FE5   85   A8      		STA TEMPN
  7FE7   C8           		INY
  7FE8   B1   9E      		LDA (ARG2),Y
  7FEA   85   A9      		STA TEMPN+1	;(CAR)
  7FEC   A2   A8      		LDX #TEMPN
  7FEE   20   84   5D 		JSR GETTYP
  7FF1   C9   00      		CMP #LIST
  7FF3   D0   0D      		BNE SDFNR2
  7FF5   A0   A2      		LDY #ARG1
  7FF7   A2   9E      		LDX #ARG2
  7FF9   20   42   5F 		JSR DEFUN
  7FFC   4C   1E   41 		JMP POPJ
  7FFF   4C   15   7C 	SDFNR1:	JMP SMAKE2
  8002   4C   84   7A 	SDFNR2:	JMP SFPT1
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-224
LOGO	SYSTEM FUNCTIONS

  8005   A2   A2      	STEXT:	LDX #ARG1
  8007   20   85   52 		JSR VPOP
  800A   20   84   5D 		JSR GETTYP
  800D   C9   01      		CMP #ATOM
  800F   D0   EE      		BNE SDFNR1
  8011   A2   A2      		LDX #ARG1
  8013   A9   B4      		LDA #TEMPN5	;FUN is TEMPN5
  8015   20   92   56 		JSR GETFUN
  8018   A5   B5      		LDA TEMPN5+1
  801A   D0   07      		BNE STEXT1
  801C   85   B6      		STA TEMPN6	;BODY is TEMPN6
  801E   85   B7      		STA TEMPN6+1
  8020   4C   CE   80 		JMP STEXT3
  8023   A0   02      	STEXT1:	LDY #$02
  8025   B1   B4      		LDA (TEMPN5),Y
  8027   85   B6      		STA TEMPN6
  8029   C8           		INY
  802A   B1   B4      		LDA (TEMPN5),Y
  802C   85   B7      		STA TEMPN6+1	;(CDR)
  802E   A2   B6      		LDX #TEMPN6
  8030   20   84   5D 		JSR GETTYP
  8033   C9   00      		CMP #LIST
  8035   F0   0C      		BEQ STXT1A
  8037   A0   B6      	STXT1B:	LDY #TEMPN6
  8039   A2   B4      		LDX #TEMPN5
  803B   A9   01      		LDA #$01
  803D   20   42   5E 		JSR UNSTUF
  8040   4C   CE   80 		JMP STEXT3
  8043   A5   B6      	STXT1A:	LDA TEMPN6
  8045   85   B4      		STA TEMPN5
  8047   A5   B7      		LDA TEMPN6+1
  8049   85   B5      		STA TEMPN5+1
  804B   A5   16      		LDA VSP
  804D   85   AA      		STA TEMPN1	;TEMPN1 is STACK
  804F   A5   17      		LDA VSP+1
  8051   85   AB      		STA TEMPN1+1
  8053   A0   00      		LDY #$00
  8055   B1   B4      		LDA (TEMPN5),Y
  8057   85   AC      		STA TEMPN2	;TEMPN2 is LINE
  8059   C8           		INY
  805A   B1   B4      		LDA (TEMPN5),Y
  805C   85   AD      		STA TEMPN2+1	;(CAR)
  805E   C8           		INY
  805F   B1   B4      		LDA (TEMPN5),Y
  8061   AA           		TAX
  8062   C8           		INY
  8063   B1   B4      		LDA (TEMPN5),Y
  8065   85   B5      		STA TEMPN5+1
  8067   86   B4      		STX TEMPN5	;(CDR)
  8069   A2   AC      		LDX #TEMPN2
  806B   20   53   52 		JSR VPUSHP
  806E   A5   B5      	STXTW:	LDA TEMPN5+1
  8070   F0   29      		BEQ STXTWE
  8072   A0   00      		LDY #$00
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-225
LOGO	SYSTEM FUNCTIONS

  8074   B1   B4      		LDA (TEMPN5),Y
  8076   85   AC      		STA TEMPN2
  8078   C8           		INY
  8079   B1   B4      		LDA (TEMPN5),Y
  807B   85   AD      		STA TEMPN2+1	;(CAR)
  807D   C8           		INY
  807E   B1   B4      		LDA (TEMPN5),Y
  8080   AA           		TAX
  8081   C8           		INY
  8082   B1   B4      		LDA (TEMPN5),Y
  8084   85   B5      		STA TEMPN5+1
  8086   86   B4      		STX TEMPN5	;(CDR)
  8088   88           		DEY
  8089   B1   AC      		LDA (TEMPN2),Y
  808B   AA           		TAX
  808C   C8           		INY
  808D   B1   AC      		LDA (TEMPN2),Y
  808F   85   AD      		STA TEMPN2+1
  8091   86   AC      		STX TEMPN2	;(CDR)
  8093   A2   AC      		LDX #TEMPN2
  8095   20   53   52 		JSR VPUSHP
  8098   4C   6E   80 		JMP STXTW
  809B   A9   00      	STXTWE:	LDA #$00
  809D   85   88      		STA MARK1
  809F   85   89      		STA MARK1+1
  80A1   A5   AA      	STXTX:	LDA TEMPN1
  80A3   C5   16      		CMP VSP
  80A5   D0   06      		BNE STXTX1
  80A7   A5   AB      		LDA TEMPN1+1
  80A9   C5   17      		CMP VSP+1
  80AB   F0   13      		BEQ STXTXE
  80AD   A2   AC      	STXTX1:	LDX #TEMPN2
  80AF   20   85   52 		JSR VPOP
  80B2   A2   88      		LDX #MARK1
  80B4   86   B2      		STX ANSN
  80B6   A0   AC      		LDY #TEMPN2
  80B8   A9   00      		LDA #LIST
  80BA   20   14   53 		JSR CONS
  80BD   4C   A1   80 		JMP STXTX
  80C0   A5   88      	STXTXE:	LDA MARK1
  80C2   85   B6      		STA TEMPN6
  80C4   A5   89      		LDA MARK1+1
  80C6   85   B7      		STA TEMPN6+1
  80C8   A9   00      		LDA #$00
  80CA   85   88      		STA MARK1
  80CC   85   89      		STA MARK1+1
  80CE   A2   B6      	STEXT3:	LDX #TEMPN6
  80D0   20   53   52 		JSR VPUSHP
  80D3   E6   07      		INC OTPUTN
  80D5   4C   1E   41 		JMP POPJ
  80D8   4C   15   7C 	SDFNRR:	JMP SMAKE2	;(ERROR XWTA,ARG1,CURTOK)
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-226
LOGO	SYSTEM FUNCTIONS

  80DB   A2   A2      	SFIRST:	LDX #ARG1
  80DD   20   85   52 		JSR VPOP
  80E0   20   84   5D 		JSR GETTYP
  80E3   C9   00      		CMP #LIST
  80E5   F0   12      		BEQ SFRST1
  80E7   C9   01      		CMP #ATOM
  80E9   F0   1D      		BEQ SFRST2
  80EB   C9   07      		CMP #SATOM
  80ED   F0   19      		BEQ SFRST2
  80EF   C9   03      		CMP #FIX
  80F1   F0   15      		BEQ SFRST2
  80F3   C9   04      		CMP #FLO
  80F5   F0   11      		BEQ SFRST2
  80F7   D0   DF      		BNE SDFNRR	;(Always)
  80F9   A0   00      	SFRST1:	LDY #$00
  80FB   B1   A2      		LDA (ARG1),Y
  80FD   AA           		TAX
  80FE   C8           		INY
  80FF   B1   A2      		LDA (ARG1),Y
  8101   85   A3      		STA ARG1+1
  8103   86   A2      		STX ARG1	;(CAR)
  8105   4C   13   7E 		JMP OTPRG1
  8108   A5   A3      	SFRST2:	LDA ARG1+1
  810A   F0   CC      		BEQ SDFNRR
  810C   A0   B6      	SFRST3:	LDY #TEMPN6	;TEMPN6 is TEMP
  810E   A2   A2      		LDX #ARG1
  8110   20   78   65 		JSR MAKPNM
  8113   A0   00      		LDY #$00
  8115   B1   B6      		LDA (TEMPN6),Y
  8117   AA           		TAX
  8118   C8           		INY
  8119   B1   B6      		LDA (TEMPN6),Y
  811B   85   B7      		STA TEMPN6+1
  811D   86   B6      		STX TEMPN6	;(CAR)
  811F   86   B4      		STX TEMPN5
  8121   A2   00      		LDX #$00
  8123   86   B5      		STX TEMPN5+1
  8125   A9   B6      		LDA #TEMPN6
  8127   85   B2      		STA ANSN
  8129   A0   B4      		LDY #TEMPN5
  812B   A9   02      		LDA #STRING
  812D   20   14   53 		JSR CONS
  8130   A0   A2      		LDY #ARG1
  8132   A2   B6      		LDX #TEMPN6
  8134   20   FE   5F 		JSR INTERN
  8137   4C   13   7E 		JMP OTPRG1
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-227
LOGO	SYSTEM FUNCTIONS

  813A   A2   A2      	SLAST:	LDX #ARG1
  813C   20   85   52 		JSR VPOP
  813F   20   84   5D 		JSR GETTYP
  8142   C9   00      		CMP #LIST
  8144   F0   13      		BEQ SLST1
  8146   C9   01      		CMP #ATOM
  8148   F0   23      		BEQ SLST2
  814A   C9   07      		CMP #SATOM
  814C   F0   1F      		BEQ SLST2
  814E   C9   03      		CMP #FIX
  8150   F0   1B      		BEQ SLST2
  8152   C9   04      		CMP #FLO
  8154   F0   17      		BEQ SLST2
  8156   4C   FF   7F 		JMP SDFNR1
  8159   A2   A2      	SLST1:	LDX #ARG1
  815B   20   39   7A 		JSR GTLSTC
  815E   A0   00      		LDY #$00
  8160   B1   A2      		LDA (ARG1),Y
  8162   AA           		TAX
  8163   C8           		INY
  8164   B1   A2      		LDA (ARG1),Y
  8166   85   A3      		STA ARG1+1
  8168   86   A2      		STX ARG1	;(CAR)
  816A   4C   13   7E 		JMP OTPRG1
  816D   A0   9E      	SLST2:	LDY #ARG2
  816F   A2   A2      		LDX #ARG1
  8171   20   78   65 		JSR MAKPNM
  8174   A2   9E      		LDX #ARG2
  8176   20   39   7A 		JSR GTLSTC
  8179   A0   01      		LDY #$01
  817B   B1   9E      		LDA (ARG2),Y
  817D   F0   12      		BEQ SLST3
  817F   85   A8      		STA TEMPN	;(CAR)
  8181   88           		DEY
  8182   84   A9      		STY TEMPN+1
  8184   A9   9E      		LDA #ARG2
  8186   85   B2      		STA ANSN
  8188   A2   00      		LDX #$00
  818A   A0   A8      		LDY #TEMPN
  818C   A9   02      		LDA #STRING
  818E   20   14   53 		JSR CONS
  8191   A2   9E      	SLST3:	LDX #ARG2
  8193   A0   A2      		LDY #ARG1
  8195   20   FE   5F 		JSR INTERN
  8198   4C   13   7E 		JMP OTPRG1
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-228
LOGO	SYSTEM FUNCTIONS

  819B   A5   4E      	SEQUAL:	LDA LTRUE
  819D   85   BE      		STA TEMPX2	;TEMPX2 is PRED
  819F   A5   4F      		LDA LTRUE+1
  81A1   85   BF      		STA TEMPX2+1
  81A3   A2   9E      		LDX #ARG2
  81A5   20   85   52 		JSR VPOP
  81A8   A2   A2      		LDX #ARG1
  81AA   20   85   52 		JSR VPOP
  81AD   E6   07      		INC OTPUTN
  81AF   A5   14      		LDA SP
  81B1   85   BA      		STA TEMPN8
  81B3   A5   15      		LDA SP+1
  81B5   85   BB      		STA TEMPN8+1
  81B7   A2   C2      		LDX #SEQEND&$FF
  81B9   A0   82      		LDY #SEQEND^
  81BB   20   3C   52 		JSR PUSH
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-229
LOGO	SYSTEM FUNCTIONS

  81BE   A2   9E      	EQ:	LDX #ARG2
  81C0   20   84   5D 		JSR GETTYP
  81C3   85   B2      		STA ANSN
  81C5   A2   A2      		LDX #ARG1
  81C7   20   84   5D 		JSR GETTYP
  81CA   85   C2      		STA ANSNX
  81CC   C9   00      		CMP #LIST
  81CE   F0   2C      		BEQ EQL
  81D0   C9   03      		CMP #FIX
  81D2   F0   31      		BEQ EQF
  81D4   C9   04      		CMP #FLO
  81D6   F0   2D      		BEQ EQF
  81D8   C9   01      		CMP #ATOM
  81DA   F0   54      		BEQ EQA
  81DC   A5   C2      	EQO:	LDA ANSNX
  81DE   C5   B2      		CMP ANSN
  81E0   D0   0C      		BNE EQFF
  81E2   A5   A2      	EQO1:	LDA ARG1
  81E4   C5   9E      		CMP ARG2
  81E6   D0   06      		BNE EQFF
  81E8   A5   A3      		LDA ARG1+1
  81EA   C5   9F      		CMP ARG2+1
  81EC   F0   0B      		BEQ EQPOP
  81EE   A5   50      	EQFF:	LDA LFALSE
  81F0   85   BE      		STA TEMPX2	;PRED
  81F2   A5   51      		LDA LFALSE+1
  81F4   85   BF      		STA TEMPX2+1
  81F6   4C   C2   82 		JMP SEQEND
  81F9   4C   1E   41 	EQPOP:	JMP POPJ
  81FC   A5   B2      	EQL:	LDA ANSN
  81FE   C9   00      		CMP #LIST
  8200   D0   EC      		BNE EQFF
  8202   4C   4B   82 		JMP EQLIST
  8205   A2   A2      	EQF:	LDX #ARG1	;ARG1 is a Fixnum
  8207   20   F1   58 		JSR GTNM2	;(GETNUM) Get first arg in NARG1
  820A   A2   9E      		LDX #ARG2
  820C   20   DC   58 		JSR GETNUM	;Get second arg in NARG2
  820F   90   DD      		BCC EQFF	;Not a number
  8211   C5   C2      	EQFC:	CMP ANSNX	;See if same type...
  8213   F0   0D      		BEQ EQF1	;Yes, skip conversion
  8215   C9   04      		CMP #FLO	;If NARG2 is Flonum,
  8217   F0   06      		BEQ EQF2	;then correct
  8219   20   23   69 		JSR FLOTN2	;Else NARG2 is Fixnum, convert to flt. pt.
  821C   4C   22   82 		JMP EQF1
  821F   20   2C   69 	EQF2:	JSR FLOTN1	;Convert NARG1 to floating pt.
  8222   A2   03      	EQF1:	LDX #$03
  8224   B5   A2      	EQFLP:	LDA NARG1,X
  8226   D5   9E      		CMP NARG2,X
  8228   D0   C4      		BNE EQFF
  822A   CA           		DEX
  822B   10   F7      		BPL EQFLP
  822D   4C   1E   41 		JMP POPJ
  8230   A5   B2      	EQA:	LDA ANSN
  8232   C9   03      		CMP #FIX
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-230
LOGO	SYSTEM FUNCTIONS

  8234   F0   04      		BEQ EQA1
  8236   C9   04      		CMP #FLO
  8238   D0   A2      		BNE EQO
  823A   85   C2      	EQA1:	STA ANSNX
  823C   A2   9E      		LDX #NARG2
  823E   20   F1   58 		JSR GTNM2
  8241   20   DA   58 		JSR GTNUM1
  8244   90   A8      		BCC EQFF
  8246   C5   C2      		CMP ANSNX
  8248   4C   11   82 		JMP EQFC
  824B   A5   A3      	EQLIST:	LDA ARG1+1
  824D   D0   07      		BNE EQLST1
  824F   A5   9F      		LDA ARG2+1
  8251   D0   9B      		BNE EQFF
  8253   4C   1E   41 		JMP POPJ
  8256   A5   9F      	EQLST1:	LDA ARG2+1
  8258   F0   94      		BEQ EQFF
  825A   A2   A2      		LDX #ARG1
  825C   20   25   52 		JSR PUSHP
  825F   A2   9E      		LDX #ARG2
  8261   20   25   52 		JSR PUSHP
  8264   A0   00      		LDY #$00
  8266   B1   A2      		LDA (ARG1),Y
  8268   AA           		TAX
  8269   C8           		INY
  826A   B1   A2      		LDA (ARG1),Y
  826C   85   A3      		STA ARG1+1
  826E   86   A2      		STX ARG1	;(CAR)
  8270   88           		DEY
  8271   B1   9E      		LDA (ARG2),Y
  8273   AA           		TAX
  8274   C8           		INY
  8275   B1   9E      		LDA (ARG2),Y
  8277   85   9F      		STA ARG2+1
  8279   86   9E      		STX ARG2	;(CAR)
  827B   20   12   54 		JSR STKTST
  827E   A2   88      		LDX #EL1&$FF
  8280   A0   82      		LDY #EL1^
  8282   20   3C   52 		JSR PUSH
  8285   4C   BE   81 		JMP EQ
  8288   A2   9E      	EL1:	LDX #ARG2
  828A   20   6C   52 		JSR POP
  828D   A2   A2      		LDX #ARG1
  828F   20   6C   52 		JSR POP
  8292   A0   02      		LDY #$02
  8294   B1   A2      		LDA (ARG1),Y
  8296   AA           		TAX
  8297   C8           		INY
  8298   B1   A2      		LDA (ARG1),Y
  829A   85   A3      		STA ARG1+1
  829C   86   A2      		STX ARG1	;(CDR)
  829E   A2   A2      		LDX #ARG1
  82A0   20   84   5D 		JSR GETTYP
  82A3   C9   00      		CMP #LIST
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-231
LOGO	SYSTEM FUNCTIONS

  82A5   D0   18      		BNE EL1R
  82A7   A0   02      		LDY #$02
  82A9   B1   9E      		LDA (ARG2),Y
  82AB   AA           		TAX
  82AC   C8           		INY
  82AD   B1   9E      		LDA (ARG2),Y
  82AF   85   9F      		STA ARG2+1
  82B1   86   9E      		STX ARG2	;(CDR)
  82B3   A2   9E      		LDX #ARG2
  82B5   20   84   5D 		JSR GETTYP
  82B8   C9   00      		CMP #LIST
  82BA   D0   03      		BNE EL1R
  82BC   4C   4B   82 		JMP EQLIST
  82BF   20   CD   51 	EL1R:	JSR SYSBUG
  82C2   A2   BE      	SEQEND:	LDX #TEMPX2	;PRED
  82C4   20   53   52 		JSR VPUSHP
  82C7   A5   BA      		LDA TEMPN8
  82C9   85   14      		STA SP
  82CB   A5   BB      		LDA TEMPN8+1
  82CD   85   15      		STA SP+1
  82CF   4C   1E   41 		JMP POPJ
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-232
LOGO	SYSTEM FUNCTIONS

  82D2   A5   09      	STO:	LDA GRPHCS
  82D4   F0   05      		BEQ STO2
  82D6   20   7B   72 		JSR RESETT
  82D9   C6   09      		DEC GRPHCS
  82DB   A5   57      	STO2:	LDA INDEV
  82DD   D0   03      		BNE STO1
  82DF   4C   22   6C 		JMP CHGST1	;Not in EDIT-eval loop, so call screen editor
  82E2   20   D6   5A 	STO1:	JSR EDTSTP	;In edit-eval loop
  82E5   A9   01      		LDA #BUFFER
  82E7   85   08      		STA EDSW
  82E9   A9   BE      		LDA #TEMPX2	;FUN is TEMPX2
  82EB   A2   A2      		LDX #ARG1
  82ED   20   92   56 		JSR GETFUN
  82F0   A5   BF      		LDA TEMPX2+1
  82F2   F0   05      		BEQ STO1A
  82F4   A2   A2      		LDX #ARG1
  82F6   20   73   56 		JSR UNFUNC
  82F9   A9   00      	STO1A:	LDA #$00
  82FB   85   05      		STA NARGS
  82FD   A5   61      		LDA TOKPTR
  82FF   85   88      		STA MARK1
  8301   A5   62      		LDA TOKPTR+1
  8303   85   89      		STA MARK1+1
  8305   F0   31      		BEQ STOWE
  8307   A5   62      	STOW:	LDA TOKPTR+1
  8309   F0   2D      		BEQ STOWE
  830B   A0   00      		LDY #$00
  830D   B1   61      		LDA (TOKPTR),Y
  830F   85   BE      		STA TEMPX2	;TEMPX2 is TOKEN
  8311   C8           		INY
  8312   B1   61      		LDA (TOKPTR),Y
  8314   85   BF      		STA TEMPX2+1	;(GETTOK)
  8316   A2   BE      	STOW2:	LDX #TEMPX2
  8318   20   84   5D 		JSR GETTYP
  831B   C9   01      		CMP #ATOM
  831D   F0   0D      		BEQ STOW3
  831F   C9   07      		CMP #SATOM
  8321   F0   09      		BEQ STOW3
  8323   C9   09      		CMP #DATOM
  8325   F0   05      		BEQ STOW3
  8327   A2   BE      		LDX #TEMPX2
  8329   4C   EF   7E 		JMP STLR4A
  832C   A2   61      	STOW3:	LDX #TOKPTR
  832E   20   75   55 		JSR TTKADV
  8331   E6   05      		INC NARGS
  8333   D0   D2      		BNE STOW
  8335   4C   FB   42 		JMP EXCED
  8338   A2   00      	STOWE:	LDX #$00
  833A   86   BD      		STX TEMPX1+1
  833C   A9   9A      		LDA #EDBOD
  833E   85   B2      		STA ANSN
  8340   8A           		TXA		;(Type LIST)
  8341   A0   88      		LDY #MARK1
  8343   20   14   53 		JSR CONS
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-233
LOGO	SYSTEM FUNCTIONS

  8346   A0   9A      		LDY #EDBOD
  8348   A2   84      		LDX #EDTATM
  834A   A5   05      		LDA NARGS
  834C   85   BC      		STA TEMPX1
  834E   A9   BC      		LDA #TEMPX1
  8350   20   A8   5D 		JSR PTFTXT
  8353   4C   1E   41 		JMP POPJ
  8356   A9   16      	STOERR:	LDA #XDEF
  8358   A0   A2      		LDY #ARG1
  835A   4C   47   61 		JMP ERROR
                      
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-234
LOGO	SYSTEM FUNCTIONS

  835D   A9   00      	EXTEDT:	LDA #$00
  835F   85   08      		STA EDSW
  8361   85   9A      		STA EDBOD
  8363   85   9B      		STA EDBOD+1
  8365   85   84      		STA EDTATM
  8367   85   85      		STA EDTATM+1
  8369   60           	RTS9:	RTS
                      
  836A   20   D6   5A 	SEDIT:	JSR EDTSTP
  836D   A9   01      		LDA #$01
  836F   85   08      		STA EDSW
  8371   A9   B4      		LDA #TEMPN5	;FUN
  8373   A2   A2      		LDX #ARG1
  8375   20   92   56 		JSR GETFUN
  8378   A5   B5      		LDA TEMPN5+1
  837A   D0   07      		BNE SEDIT1
  837C   A9   03      		LDA #XUDF
  837E   A0   A2      		LDY #ARG1
  8380   4C   47   61 		JMP ERROR
  8383   A9   00      	SEDIT1:	LDA #$00
  8385   A2   B4      		LDX #TEMPN5
  8387   A0   9A      		LDY #EDBOD
  8389   20   42   5E 		JSR UNSTUF
  838C   A0   00      		LDY #$00
  838E   B1   9A      		LDA (EDBOD),Y
  8390   85   AA      		STA TEMPN1	;ARGS
  8392   C8           		INY
  8393   B1   9A      		LDA (EDBOD),Y
  8395   85   AB      		STA TEMPN1+1	;(CAR)
  8397   A2   BC      		LDX #TEMPX1
  8399   A0   AA      		LDY #TEMPN1
  839B   20   32   56 		JSR GETLEN
  839E   A9   BC      		LDA #TEMPX1
  83A0   A0   9A      		LDY #EDBOD
  83A2   A2   A2      		LDX #ARG1
  83A4   20   A8   5D 		JSR PTFTXT
  83A7   20   41   4A 		JSR RSTERR
  83AA   4C   1E   41 		JMP POPJ
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-235
LOGO	SYSTEM FUNCTIONS

  83AD   A5   08      	SEND:	LDA EDSW
  83AF   D0   03      		BNE SEND1	;if edit switch off, give
  83B1   4C   D8   7E 		JMP STTLR1	;(ERROR XNED)
  83B4   A5   7C      	SEND1:	LDA LEVNUM	;if not at top level, complain.
  83B6   D0   1F      		BNE SENDR
  83B8   A5   7D      		LDA LEVNUM+1
  83BA   D0   1B      		BNE SENDR
  83BC   A9   84      		LDA #EDTATM
  83BE   A2   9A      		LDX #EDBOD
  83C0   20   0A   5C 		JSR STUFF	;try to put the function def together
  83C3   A9   00      		LDA #$00
  83C5   A2   84      		LDX #EDTATM
  83C7   20   F9   65 		JSR LTYPE
  83CA   A2   FF      		LDX #SENDM&$FF	;" DEFINED"
  83CC   A0   DA      		LDY #SENDM^
  83CE   20   95   54 		JSR PRTSTR
  83D1   20   5D   83 	SEND2:	JSR EXTEDT
  83D4   4C   1E   41 		JMP POPJ
  83D7   4C   DD   7E 	SENDR:	JMP STTLR2	;(ERROR XETL)
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-236
LOGO	SYSTEM FUNCTIONS

  83DA   A5   62      	SPO:	LDA TOKPTR+1
  83DC   D0   07      		BNE SPO1
  83DE   A5   87      		LDA PODEFL+1
  83E0   D0   52      		BNE SPO1A
  83E2   4C   1E   41 		JMP POPJ
  83E5   A0   00      	SPO1:	LDY #$00
  83E7   B1   61      		LDA (TOKPTR),Y
  83E9   85   A2      		STA ARG1
  83EB   C8           		INY
  83EC   B1   61      		LDA (TOKPTR),Y
  83EE   85   A3      		STA ARG1+1	;(GETTOK)
  83F0   A2   61      		LDX #TOKPTR
  83F2   20   75   55 		JSR TTKADV
  83F5   A6   A2      		LDX ARG1
  83F7   A4   A3      		LDY ARG1+1
  83F9   EC   00   03 		CPX ALL
  83FC   D0   12      		BNE SPO2
  83FE   CC   01   03 		CPY ALL+1
  8401   D0   0D      		BNE SPO2
  8403   A9   01      		LDA #$01
  8405   20   26   85 		JSR POFUNS
  8408   A9   01      	SPON:	LDA #$01
  840A   20   79   84 		JSR PONAMS
  840D   4C   1E   41 		JMP POPJ
  8410   EC   16   03 	SPO2:	CPX NAMES
  8413   D0   05      		BNE SPO3
  8415   CC   17   03 		CPY NAMES+1
  8418   F0   EE      		BEQ SPON
  841A   EC   24   03 	SPO3:	CPX TITLES
  841D   D0   2A      		BNE SPO4
  841F   CC   25   03 		CPY TITLES+1
  8422   D0   25      		BNE SPO4
  8424   A9   00      	SPOTS:	LDA #$00
  8426   20   26   85 		JSR POFUNS
  8429   4C   1E   41 		JMP POPJ
  842C   A5   A2      	SPO5A:	LDA ARG1
  842E   85   86      		STA PODEFL
  8430   A5   A3      		LDA ARG1+1
  8432   85   87      		STA PODEFL+1
  8434   A2   86      	SPO1A:	LDX #PODEFL
  8436   A9   AA      		LDA #TEMPN1
  8438   20   92   56 		JSR GETFUN
  843B   A5   AB      		LDA TEMPN1+1
  843D   F0   33      		BEQ PFERR
  843F   A2   01      		LDX #$01
  8441   A9   86      		LDA #PODEFL
  8443   20   52   85 		JSR POTEXT
  8446   4C   1E   41 		JMP POPJ
  8449   EC   1E   03 	SPO4:	CPX PROCS
  844C   D0   0D      		BNE SPO5
  844E   CC   1F   03 		CPY PROCS+1
  8451   D0   08      		BNE SPO5
  8453   A9   01      		LDA #$01
  8455   20   26   85 		JSR POFUNS
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-237
LOGO	SYSTEM FUNCTIONS

  8458   4C   1E   41 		JMP POPJ
  845B   A2   A2      	SPO5:	LDX #ARG1
  845D   20   84   5D 		JSR GETTYP
  8460   C9   01      		CMP #ATOM
  8462   F0   C8      		BEQ SPO5A
  8464   C9   07      		CMP #SATOM
  8466   F0   03      		BEQ SPO5S
  8468   4C   15   7C 		JMP SMAKE2	;(ERROR XWTA,ARG1,CURTOK)
  846B   A0   A2      	SPO5S:	LDY #ARG1
  846D   A9   0C      		LDA #XUBL
  846F   4C   47   61 		JMP ERROR
  8472   A0   86      	PFERR:	LDY #PODEFL
  8474   A9   21      		LDA #XNDF
  8476   4C   47   61 		JMP ERROR
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-238
LOGO	SYSTEM FUNCTIONS

  8479   A5   92      	PONAMS:	LDA OBLIST
  847B   85   BA      		STA TEMPN8
  847D   A5   93      		LDA OBLIST+1
  847F   85   BB      		STA TEMPN8+1	;TEMPN8 is OBLIST pointer
  8481   A5   BB      	PONW1:	LDA TEMPN8+1
  8483   F0   1C      		BEQ PONW1E	;See if done
  8485   A0   00      		LDY #$00
  8487   B1   BA      		LDA (TEMPN8),Y
  8489   85   B6      		STA TEMPN6	;Get name pointer
  848B   C8           		INY
  848C   B1   BA      		LDA (TEMPN8),Y
  848E   85   B7      		STA TEMPN6+1	;(CAR)
  8490   C8           		INY
  8491   B1   BA      		LDA (TEMPN8),Y
  8493   AA           		TAX
  8494   C8           		INY
  8495   B1   BA      		LDA (TEMPN8),Y
  8497   85   BB      		STA TEMPN8+1
  8499   86   BA      		STX TEMPN8	;(CDR) to next OBLIST object
  849B   20   C6   84 		JSR PON1	;Print the name and value
  849E   4C   81   84 		JMP PONW1
  84A1   A5   59      	PONW1E:	LDA SOBLST
  84A3   85   B6      		STA TEMPN6	;TEMPN6 is SOBLIST pointer
  84A5   A5   5A      		LDA SOBLST+1
  84A7   85   B7      		STA TEMPN6+1
  84A9   A5   B6      	PONW2:	LDA TEMPN6
  84AB   C5   5B      		CMP SOBTOP
  84AD   D0   07      		BNE PONW2A	;See if done
  84AF   A5   B7      		LDA TEMPN6+1
  84B1   C5   5C      		CMP SOBTOP+1
  84B3   D0   01      		BNE PONW2A
  84B5   60           	PONRTS:	RTS
  84B6   20   C6   84 	PONW2A:	JSR PON1	;Print the name and value
  84B9   18           		CLC
  84BA   A5   B6      		LDA TEMPN6
  84BC   69   04      		ADC #$04
  84BE   85   B6      		STA TEMPN6
  84C0   90   E7      		BCC PONW2
  84C2   E6   B7      		INC TEMPN6+1
  84C4   D0   E3      		BNE PONW2	;(Always)
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-239
LOGO	SYSTEM FUNCTIONS

  84C6   A2   B8      	PON1:	LDX #TEMPN7	;TEMPN7 is value
  84C8   A0   B6      		LDY #TEMPN6	;TEMPN6 is NAME
  84CA   20   D1   52 		JSR GETVAL
  84CD   A5   B9      		LDA TEMPN7+1
  84CF   D0   04      		BNE PON1A
  84D1   A5   B8      		LDA TEMPN7
  84D3   D0   E0      		BNE PONRTS	;Skip if NOVALUE
  84D5   A5   57      	PON1A:	LDA INDEV
  84D7   D0   1D      		BNE PON1B	;Use "MAKE" if not screen output
  84D9   A9   22      		LDA #'"
  84DB   20   84   72 		JSR TPCHR
  84DE   A9   00      		LDA #$00
  84E0   A2   B6      		LDX #TEMPN6
  84E2   20   F9   65 		JSR LTYPE
  84E5   A2   09      		LDX #PNMSG1&$FF		;"IS "
  84E7   A0   DB      		LDY #PNMSG1^
  84E9   20   95   54 		JSR PRTSTR
  84EC   A9   00      		LDA #$00
  84EE   A2   B8      		LDX #TEMPN7
  84F0   20   F9   65 		JSR LTYPE
  84F3   4C   5B   72 		JMP BREAK1
  84F6   A2   0E      	PON1B:	LDX #PNMSG2&$FF		;"MAKE "
  84F8   A0   DB      		LDY #PNMSG2^
  84FA   20   95   54 		JSR PRTSTR
  84FD   A9   22      		LDA #'"
  84FF   20   84   72 		JSR TPCHR
  8502   A9   00      		LDA #$00
  8504   A2   B6      		LDX #TEMPN6
  8506   20   F9   65 		JSR LTYPE
  8509   A9   20      		LDA #$20
  850B   20   84   72 		JSR TPCHR
  850E   A2   B8      		LDX #TEMPN7
  8510   20   84   5D 		JSR GETTYP
  8513   C9   01      		CMP #ATOM
  8515   D0   05      		BNE PON1C
  8517   A9   22      		LDA #'"
  8519   20   84   72 		JSR TPCHR
  851C   A9   00      	PON1C:	LDA #$00
  851E   A2   B8      		LDX #TEMPN7
  8520   20   F9   65 		JSR LTYPE
  8523   4C   5B   72 		JMP BREAK1
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-240
LOGO	SYSTEM FUNCTIONS

  8526   85   C0      	POFUNS:	STA ANSN2	;ANSN2 is FULL
  8528   A5   92      		LDA OBLIST
  852A   85   BE      		STA TEMPX2	;TEMPN7 is OBLIST pointer
  852C   A5   93      		LDA OBLIST+1
  852E   85   BF      		STA TEMPX2+1
  8530   A0   03      	POFNSW:	LDY #$03
  8532   B1   BE      		LDA (TEMPX2),Y
  8534   48           		PHA
  8535   88           		DEY
  8536   B1   BE      		LDA (TEMPX2),Y
  8538   48           		PHA
  8539   88           		DEY
  853A   B1   BE      		LDA (TEMPX2),Y
  853C   AA           		TAX
  853D   88           		DEY
  853E   B1   BE      		LDA (TEMPX2),Y
  8540   85   BE      		STA TEMPX2
  8542   86   BF      		STX TEMPX2+1
  8544   A9   BE      		LDA #TEMPX2
  8546   20   54   85 		JSR PTEXTX
  8549   68           		PLA
  854A   85   BE      		STA TEMPX2
  854C   68           		PLA
  854D   85   BF      		STA TEMPX2+1
  854F   D0   DF      		BNE POFNSW
  8551   60           		RTS
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-241
LOGO	SYSTEM FUNCTIONS

  8552   86   C0      	POTEXT:	STX ANSN2	;ANSN2 is FULL
  8554   85   B3      	PTEXTX:	STA ANSN1	;Save ATOMM (Entry point for POFUNS)
  8556   AA           		TAX
  8557   A9   B6      		LDA #TEMPN6	;TEMPN6 becomes FUN
  8559   20   92   56 		JSR GETFUN
  855C   A5   B7      		LDA TEMPN6+1
  855E   F0   73      		BEQ PTXRTS
  8560   A2   6E      		LDX #TOMSG&$FF	;"TO "
  8562   A0   DB      		LDY #TOMSG^
  8564   20   95   54 		JSR PRTSTR
  8567   A6   B3      		LDX ANSN1	;Retrieve ATOMM
  8569   A9   00      		LDA #$00
  856B   20   F9   65 		JSR LTYPE	;Print the title
  856E   A0   02      		LDY #$02
  8570   B1   B6      		LDA (TEMPN6),Y
  8572   AA           		TAX
  8573   C8           		INY
  8574   B1   B6      		LDA (TEMPN6),Y
  8576   85   B7      		STA TEMPN6+1
  8578   86   B6      		STX TEMPN6	;(CDR)
  857A   A2   B6      		LDX #TEMPN6
  857C   20   84   5D 		JSR GETTYP
  857F   C9   00      		CMP #LIST
  8581   F0   0A      		BEQ POTXTL
  8583   C9   0B      		CMP #FPACK
  8585   D0   03      		BNE PTXERR
  8587   4C   47   86 		JMP POTXTF
  858A   20   CD   51 	PTXERR:	JSR SYSBUG
  858D   A0   00      	POTXTL:	LDY #$00
  858F   B1   B6      		LDA (TEMPN6),Y
  8591   85   BA      		STA TEMPN8	;TEMPN8 is LINE
  8593   C8           		INY
  8594   B1   B6      		LDA (TEMPN6),Y
  8596   85   BB      		STA TEMPN8+1	;(CAR)
  8598   C8           		INY
  8599   B1   B6      		LDA (TEMPN6),Y
  859B   AA           		TAX
  859C   C8           		INY
  859D   B1   B6      		LDA (TEMPN6),Y
  859F   85   B7      		STA TEMPN6+1
  85A1   86   B6      		STX TEMPN6	;(CDR)
  85A3   A5   BB      	PTXLW:	LDA TEMPN8+1
  85A5   F0   25      		BEQ PTXLWE
  85A7   A0   00      		LDY #$00
  85A9   B1   BA      		LDA (TEMPN8),Y
  85AB   85   BC      		STA TEMPX1
  85AD   C8           		INY
  85AE   B1   BA      		LDA (TEMPN8),Y
  85B0   85   BD      		STA TEMPX1+1	;(CAR)
  85B2   C8           		INY
  85B3   B1   BA      		LDA (TEMPN8),Y
  85B5   AA           		TAX
  85B6   C8           		INY
  85B7   B1   BA      		LDA (TEMPN8),Y
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-242
LOGO	SYSTEM FUNCTIONS

  85B9   85   BB      		STA TEMPN8+1
  85BB   86   BA      		STX TEMPN8
  85BD   A9   20      		LDA #$20	;(Space)
  85BF   20   84   72 		JSR TPCHR
  85C2   A9   00      		LDA #$00
  85C4   A2   BC      		LDX #TEMPX1
  85C6   20   F9   65 		JSR LTYPE
  85C9   4C   A3   85 		JMP PTXLW
  85CC   20   5B   72 	PTXLWE:	JSR BREAK1
  85CF   A5   C0      		LDA ANSN2	;FULL
  85D1   D0   01      		BNE PTXLX
  85D3   60           	PTXRTS:	RTS
  85D4   A5   B7      	PTXLX:	LDA TEMPN6+1
  85D6   D0   07      		BNE PTXLX1
  85D8   A2   72      	PTXEND:	LDX #ENDMSG&$FF
  85DA   A0   DB      		LDY #ENDMSG^
  85DC   4C   95   54 		JMP PRTSTR
  85DF   A0   00      	PTXLX1:	LDY #$00
  85E1   B1   B6      		LDA (TEMPN6),Y
  85E3   85   BA      		STA TEMPN8
  85E5   C8           		INY
  85E6   B1   B6      		LDA (TEMPN6),Y
  85E8   85   BB      		STA TEMPN8+1	;(CAR)
  85EA   C8           		INY
  85EB   B1   B6      		LDA (TEMPN6),Y
  85ED   AA           		TAX
  85EE   C8           		INY
  85EF   B1   B6      		LDA (TEMPN6),Y
  85F1   85   B7      		STA TEMPN6+1
  85F3   86   B6      		STX TEMPN6	;(CDR)
  85F5   A0   00      		LDY #$00
  85F7   B1   BA      		LDA (TEMPN8),Y
  85F9   85   BC      		STA TEMPX1
  85FB   C8           		INY
  85FC   B1   BA      		LDA (TEMPN8),Y
  85FE   85   BD      		STA TEMPX1+1	;(CAR)
  8600   C8           		INY
  8601   B1   BA      		LDA (TEMPN8),Y
  8603   AA           		TAX
  8604   C8           		INY
  8605   B1   BA      		LDA (TEMPN8),Y
  8607   85   BB      		STA TEMPN8+1
  8609   86   BA      		STX TEMPN8	;(CDR)
  860B   A5   57      		LDA INDEV
  860D   D0   09      		BNE PTXLY	;If screen editor, no line numbers
  860F   A5   08      		LDA EDSW
  8611   F0   05      		BEQ PTXLY	;else if not other editor, no line numbers
  8613   A2   BC      	PTXLX2:	LDX #TEMPX1
  8615   20   42   67 		JSR TYPFIX
  8618   A5   BB      	PTXLY:	LDA TEMPN8+1
  861A   F0   25      		BEQ PTXLYE
  861C   A0   00      		LDY #$00
  861E   B1   BA      		LDA (TEMPN8),Y
  8620   85   BC      		STA TEMPX1
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-243
LOGO	SYSTEM FUNCTIONS

  8622   C8           		INY
  8623   B1   BA      		LDA (TEMPN8),Y
  8625   85   BD      		STA TEMPX1+1	;(CAR)
  8627   C8           		INY
  8628   B1   BA      		LDA (TEMPN8),Y
  862A   AA           		TAX
  862B   C8           		INY
  862C   B1   BA      		LDA (TEMPN8),Y
  862E   85   BB      		STA TEMPN8+1
  8630   86   BA      		STX TEMPN8
  8632   A9   20      		LDA #$20	;(Space)
  8634   20   84   72 		JSR TPCHR
  8637   A9   00      		LDA #$00
  8639   A2   BC      		LDX #TEMPX1
  863B   20   F9   65 		JSR LTYPE
  863E   4C   18   86 		JMP PTXLY
  8641   20   5B   72 	PTXLYE:	JSR BREAK1
  8644   4C   D4   85 		JMP PTXLX
  8647   A0   00      	POTXTF:	LDY #$00
  8649   B1   B6      		LDA (TEMPN6),Y
  864B   85   BA      		STA TEMPN8	;TEMPN8 is PTR
  864D   C8           		INY
  864E   B1   B6      		LDA (TEMPN6),Y
  8650   85   BB      		STA TEMPN8+1	;(GETBAR)
  8652   C8           		INY
  8653   B1   B6      		LDA (TEMPN6),Y
  8655   85   B8      		STA TEMPN7	;TEMPN7 is ENDPTR
  8657   C8           		INY
  8658   B1   B6      		LDA (TEMPN6),Y
  865A   85   B9      		STA TEMPN7+1	;(GETBAR)
  865C   18           		CLC
  865D   A5   B6      		LDA TEMPN6
  865F   69   02      		ADC #$02
  8661   85   B6      		STA TEMPN6
  8663   90   02      		BCC PTXFW
  8665   E6   B7      		INC TEMPN6+1
  8667   A5   B8      	PTXFW:	LDA TEMPN7
  8669   C5   BA      		CMP TEMPN8
  866B   D0   06      		BNE PTXFW1
  866D   A5   B9      		LDA TEMPN7+1
  866F   C5   BB      		CMP TEMPN8+1
  8671   F0   25      		BEQ PTXFWE
  8673   A0   00      	PTXFW1:	LDY #$00
  8675   B1   BA      		LDA (TEMPN8),Y
  8677   85   BC      		STA TEMPX1
  8679   C8           		INY
  867A   B1   BA      		LDA (TEMPN8),Y
  867C   85   BD      		STA TEMPX1+1	;(GETBAR)
  867E   18           		CLC
  867F   A5   BA      		LDA TEMPN8
  8681   69   02      		ADC #$02
  8683   85   BA      		STA TEMPN8
  8685   90   02      		BCC PTXFW2
  8687   E6   BB      		INC TEMPN8+1
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-244
LOGO	SYSTEM FUNCTIONS

  8689   A9   20      	PTXFW2:	LDA #$20
  868B   20   84   72 		JSR TPCHR
  868E   A9   00      		LDA #$00
  8690   A2   BC      		LDX #TEMPX1
  8692   20   F9   65 		JSR LTYPE
  8695   4C   67   86 		JMP PTXFW
  8698   20   5B   72 	PTXFWE:	JSR BREAK1
  869B   A5   C0      		LDA ANSN2
  869D   D0   01      		BNE PTXFX
  869F   60           		RTS
  86A0   A5   B9      	PTXFX:	LDA TEMPN7+1
  86A2   D0   03      		BNE PTXFX1
  86A4   4C   D8   85 		JMP PTXEND
  86A7   A5   B8      	PTXFX1:	LDA TEMPN7
  86A9   85   BA      		STA TEMPN8
  86AB   A5   B9      		LDA TEMPN7+1
  86AD   85   BB      		STA TEMPN8+1
  86AF   A0   02      		LDY #$02
  86B1   B1   B6      		LDA (TEMPN6),Y
  86B3   85   B8      		STA TEMPN7
  86B5   C8           		INY
  86B6   B1   B6      		LDA (TEMPN6),Y
  86B8   85   B9      		STA TEMPN7+1	;(GETBAR)
  86BA   18           		CLC
  86BB   A5   B6      		LDA TEMPN6
  86BD   69   02      		ADC #$02
  86BF   85   B6      		STA TEMPN6
  86C1   90   02      		BCC PTXFX2
  86C3   E6   B7      		INC TEMPN6+1
  86C5   A5   B9      	PTXFX2:	LDA TEMPN7+1
  86C7   D0   03      		BNE PTXFX3
  86C9   4C   D8   85 		JMP PTXEND
  86CC   A0   00      	PTXFX3:	LDY #$00
  86CE   B1   BA      		LDA (TEMPN8),Y
  86D0   85   BC      		STA TEMPX1
  86D2   C8           		INY
  86D3   B1   BA      		LDA (TEMPN8),Y
  86D5   85   BD      		STA TEMPX1+1	;(GETBAR)
  86D7   18           		CLC
  86D8   A5   BA      		LDA TEMPN8
  86DA   69   02      		ADC #$02
  86DC   85   BA      		STA TEMPN8
  86DE   90   02      		BCC PTXFX4
  86E0   E6   BB      		INC TEMPN8+1
  86E2   A5   57      	PTXFX4:	LDA INDEV
  86E4   D0   09      		BNE PTXFY	;No line numbers if screen-editor
  86E6   A5   08      		LDA EDSW
  86E8   F0   05      		BEQ PTXFY	;or if not in otherr editor
  86EA   A2   BC      	PTXFX5:	LDX #TEMPX1
  86EC   20   42   67 		JSR TYPFIX
  86EF   A5   B8      	PTXFY:	LDA TEMPN7
  86F1   C5   BA      		CMP TEMPN8
  86F3   D0   06      		BNE PTXFY1
  86F5   A5   B9      		LDA TEMPN7+1
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-245
LOGO	SYSTEM FUNCTIONS

  86F7   C5   BB      		CMP TEMPN8+1
  86F9   F0   25      		BEQ PTXFYE
  86FB   A0   00      	PTXFY1:	LDY #$00
  86FD   B1   BA      		LDA (TEMPN8),Y
  86FF   85   BC      		STA TEMPX1
  8701   C8           		INY
  8702   B1   BA      		LDA (TEMPN8),Y
  8704   85   BD      		STA TEMPX1+1	;(GETBAR)
  8706   18           		CLC
  8707   A5   BA      		LDA TEMPN8
  8709   69   02      		ADC #$02
  870B   85   BA      		STA TEMPN8
  870D   90   02      		BCC PTXFY2
  870F   E6   BB      		INC TEMPN8+1
  8711   A9   20      	PTXFY2:	LDA #$20
  8713   20   84   72 		JSR TPCHR
  8716   A9   00      		LDA #$00
  8718   A2   BC      		LDX #TEMPX1
  871A   20   F9   65 		JSR LTYPE
  871D   4C   EF   86 		JMP PTXFY
  8720   20   5B   72 	PTXFYE:	JSR BREAK1
  8723   4C   A0   86 		JMP PTXFX
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-246
LOGO	SYSTEM FUNCTIONS

  8726   A5   6D      	STRCBK:	LDA FRAME+1
  8728   D0   0A      		BNE TCBK1
  872A   A2   14      		LDX #TBMSG1&$FF
  872C   A0   DB      		LDY #TBMSG1^
  872E   20   95   54 		JSR PRTSTR
  8731   4C   DA   87 		JMP TCBKWE
  8734   A2   2D      	TCBK1:	LDX #TBMSG2&$FF
  8736   A0   DB      		LDY #TBMSG2^
  8738   20   95   54 		JSR PRTSTR
  873B   A9   01      		LDA #$01
  873D   85   B3      		STA ANSN1	;ANSN1 is FIRST
  873F   A5   6C      		LDA FRAME
  8741   85   BC      		STA TEMPX1	;TEMPX1 is FR
  8743   A5   6D      		LDA FRAME+1
  8745   85   BD      		STA TEMPX1+1
  8747   A5   6E      		LDA XFRAME
  8749   85   BE      		STA TEMPX2	;TEMPX2 is XFR
  874B   A5   6F      		LDA XFRAME+1
  874D   85   BF      		STA TEMPX2+1
  874F   A5   BD      	TCBKW:	LDA TEMPX1+1
  8751   D0   03      		BNE TCBKW1
  8753   4C   DA   87 		JMP TCBKWE
  8756   18           	TCBKW1:	CLC
  8757   A5   BC      		LDA TEMPX1
  8759   69   12      		ADC #$12	;(SF_BINDINGS = 18.)
  875B   85   B6      		STA TEMPN6	;TEMPN6 is PTR
  875D   A5   BD      		LDA TEMPX1+1
  875F   69   00      		ADC #$00
  8761   85   B7      		STA TEMPN6+1
  8763   38           		SEC
  8764   A5   BE      		LDA TEMPX2
  8766   E9   02      		SBC #$02	;PTR1 (TEMPN7) points to top binding (name)
  8768   85   B8      		STA TEMPN7
  876A   A5   BF      		LDA TEMPX2+1
  876C   E9   00      		SBC #$00
  876E   85   B9      		STA TEMPN7+1
  8770   A5   B9      	TCBKX:	LDA TEMPN7+1
  8772   C5   B7      		CMP TEMPN6+1
  8774   90   4B      		BCC TCBKXE
  8776   D0   06      		BNE TCBKX1
  8778   A5   B8      		LDA TEMPN7
  877A   C5   B6      		CMP TEMPN6
  877C   90   43      		BCC TCBKXE
  877E   A0   00      	TCBKX1:	LDY #$00
  8780   B1   B8      		LDA (TEMPN7),Y
  8782   85   A6      		STA TEMPNH
  8784   C8           		INY
  8785   B1   B8      		LDA (TEMPN7),Y
  8787   85   A7      		STA TEMPNH+1	;(GETBAR)
  8789   A5   A6      		LDA TEMPNH
  878B   6A           		ROR A
  878C   90   25      		BCC TCBKX2
  878E   A5   B3      		LDA ANSN1
  8790   D0   0D      		BNE TCBKX3
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-247
LOGO	SYSTEM FUNCTIONS

  8792   A9   2C      		LDA #',
  8794   20   84   72 		JSR TPCHR
  8797   A9   20      		LDA #$20
  8799   20   84   72 		JSR TPCHR
  879C   4C   A1   87 		JMP TCBKX4
  879F   C6   B3      	TCBKX3:	DEC ANSN1
  87A1   A0   05      	TCBKX4:	LDY #$05
  87A3   B1   A6      		LDA (TEMPNH),Y
  87A5   85   BA      		STA TEMPN8
  87A7   C8           		INY
  87A8   B1   A6      		LDA (TEMPNH),Y
  87AA   85   BB      		STA TEMPN8+1	;(GETBAR)
  87AC   A9   00      		LDA #$00
  87AE   A2   BA      		LDX #TEMPN8
  87B0   20   F9   65 		JSR LTYPE
  87B3   38           	TCBKX2:	SEC
  87B4   A5   B8      		LDA TEMPN7
  87B6   E9   04      		SBC #$04
  87B8   85   B8      		STA TEMPN7
  87BA   B0   B4      		BCS TCBKX
  87BC   C6   B9      		DEC TEMPN7+1
  87BE   4C   70   87 		JMP TCBKX
  87C1   A0   03      	TCBKXE:	LDY #$03	;(SF_XFRAME = 2.)
  87C3   B1   BC      		LDA (TEMPX1),Y
  87C5   85   BF      		STA TEMPX2+1
  87C7   88           		DEY
  87C8   B1   BC      		LDA (TEMPX1),Y
  87CA   85   BE      		STA TEMPX2	;(GETBAR)
  87CC   88           		DEY		;(SF_PREV_FRAME = 0)
  87CD   B1   BC      		LDA (TEMPX1),Y
  87CF   AA           		TAX
  87D0   88           		DEY
  87D1   B1   BC      		LDA (TEMPX1),Y
  87D3   85   BC      		STA TEMPX1
  87D5   86   BD      		STX TEMPX1+1	;(GETBAR)
  87D7   4C   4F   87 		JMP TCBKW
  87DA   20   5B   72 	TCBKWE:	JSR BREAK1
  87DD   4C   1E   41 		JMP POPJ
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-248
LOGO	SYSTEM FUNCTIONS

  87E0   A5   62      	SERASE:	LDA TOKPTR+1
  87E2   D0   03      		BNE SERAS1
  87E4   4C   52   7C 		JMP SCMMT1	;(ERROR XEOL)
  87E7   A0   00      	SERAS1:	LDY #$00
  87E9   B1   61      		LDA (TOKPTR),Y
  87EB   85   A2      		STA ARG1
  87ED   C8           		INY
  87EE   B1   61      		LDA (TOKPTR),Y
  87F0   85   A3      		STA ARG1+1	;(GETTOK)
  87F2   A2   61      		LDX #TOKPTR
  87F4   20   75   55 		JSR TTKADV
  87F7   A5   08      		LDA EDSW
  87F9   D0   59      		BNE SERASB
  87FB   A6   A2      		LDX ARG1
  87FD   A4   A3      		LDY ARG1+1
  87FF   EC   00   03 		CPX ALL
  8802   D0   0B      		BNE ECMP2
  8804   CC   01   03 		CPY ALL+1
  8807   D0   06      		BNE ECMP2
  8809   20   6E   4F 		JSR REINIT
  880C   4C   65   40 		JMP TOPLOP
  880F   EC   16   03 	ECMP2:	CPX NAMES
  8812   D0   0B      		BNE ECMP3
  8814   CC   17   03 		CPY NAMES+1
  8817   D0   06      		BNE ECMP3
  8819   20   A1   88 		JSR ERNAMS
  881C   4C   1E   41 		JMP POPJ
  881F   EC   24   03 	ECMP3:	CPX TITLES
  8822   D0   05      		BNE ECMP4
  8824   CC   25   03 		CPY TITLES+1
  8827   F0   0A      		BEQ SERPS
  8829   EC   1E   03 	ECMP4:	CPX PROCS
  882C   D0   0B      		BNE SERAP
  882E   CC   1F   03 		CPY PROCS+1
  8831   D0   06      		BNE SERAP
  8833   20   76   88 	SERPS:	JSR ERPROS
  8836   4C   1E   41 		JMP POPJ
  8839   A2   A2      	SERAP:	LDX #ARG1
  883B   20   84   5D 		JSR GETTYP
  883E   C9   01      		CMP #ATOM
  8840   D0   08      		BNE SERAR1
  8842   A2   A2      		LDX #ARG1
  8844   20   73   56 		JSR UNFUNC
  8847   4C   1E   41 		JMP POPJ
  884A   C9   03      	SERAR1:	CMP #FIX
  884C   D0   03      		BNE SERAR2
  884E   4C   D8   7E 		JMP STTLR1	;(ERROR XNED)
  8851   4C   15   7C 	SERAR2:	JMP SMAKE2	;(ERROR XWTA,ARG1,CURTOK)
  8854   A2   A2      	SERASB:	LDX #ARG1
  8856   20   84   5D 		JSR GETTYP
  8859   C9   03      		CMP #FIX
  885B   D0   14      		BNE SERAR3
  885D   A0   00      		LDY #$00
  885F   B1   A2      		LDA (ARG1),Y
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-249
LOGO	SYSTEM FUNCTIONS

  8861   AA           		TAX
  8862   C8           		INY
  8863   B1   A2      		LDA (ARG1),Y
  8865   85   A3      		STA ARG1+1
  8867   86   A2      		STX ARG1	;(CAR)
  8869   A2   A2      		LDX #ARG1
  886B   20   D7   56 		JSR LDELET
  886E   4C   1E   41 		JMP POPJ
  8871   A9   1D      	SERAR3:	LDA #XNWE
  8873   4C   47   61 		JMP ERROR
                      
  8876   A5   92      	ERPROS:	LDA OBLIST
  8878   85   A8      		STA TEMPN
  887A   A5   93      		LDA OBLIST+1
  887C   85   A9      		STA TEMPN+1
  887E   A5   A9      	ERPRSW:	LDA TEMPN+1
  8880   F0   1E      		BEQ RTS30
  8882   A0   00      		LDY #$00
  8884   B1   A8      		LDA (TEMPN),Y
  8886   85   AA      		STA TEMPN1
  8888   C8           		INY
  8889   B1   A8      		LDA (TEMPN),Y
  888B   85   AB      		STA TEMPN1+1	;(CAR)
  888D   C8           		INY
  888E   B1   A8      		LDA (TEMPN),Y
  8890   AA           		TAX
  8891   C8           		INY
  8892   B1   A8      		LDA (TEMPN),Y
  8894   85   A9      		STA TEMPN+1
  8896   86   A8      		STX TEMPN	;(CDR)
  8898   A2   AA      		LDX #TEMPN1
  889A   20   73   56 		JSR UNFUNC
  889D   4C   7E   88 		JMP ERPRSW
  88A0   60           	RTS30:	RTS
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-250
LOGO	SYSTEM FUNCTIONS

  88A1   A5   92      	ERNAMS:	LDA OBLIST
  88A3   85   A8      		STA TEMPN
  88A5   A5   93      		LDA OBLIST+1
  88A7   85   A9      		STA TEMPN+1	;TEMPN is OBLIST pointer
  88A9   A2   00      		LDX #$00
  88AB   86   AB      		STX TEMPN1+1	;TEMPN1 is NOVALUE
  88AD   E8           		INX
  88AE   86   AA      		STX TEMPN1
  88B0   A5   A9      	ERNMSW:	LDA TEMPN+1
  88B2   F0   20      		BEQ ERNMWE
  88B4   A0   00      		LDY #$00
  88B6   B1   A8      		LDA (TEMPN),Y
  88B8   85   AC      		STA TEMPN2	;TEMPN2 is NAME
  88BA   C8           		INY
  88BB   B1   A8      		LDA (TEMPN),Y
  88BD   85   AD      		STA TEMPN2+1	;(CAR)
  88BF   C8           		INY
  88C0   B1   A8      		LDA (TEMPN),Y
  88C2   AA           		TAX
  88C3   C8           		INY
  88C4   B1   A8      		LDA (TEMPN),Y
  88C6   85   A9      		STA TEMPN+1
  88C8   86   A8      		STX TEMPN	;(CDR)
  88CA   A2   AA      		LDX #TEMPN1
  88CC   A0   AC      		LDY #TEMPN2
  88CE   20   E9   52 		JSR PUTVAL
  88D1   4C   B0   88 		JMP ERNMSW
  88D4   A5   59      	ERNMWE:	LDA SOBLST
  88D6   85   A8      		STA TEMPN
  88D8   A5   5A      		LDA SOBLST+1
  88DA   85   A9      		STA TEMPN+1
  88DC   A5   A8      	ERNMX:	LDA TEMPN
  88DE   C5   5B      		CMP SOBTOP
  88E0   D0   06      		BNE ERNMX1
  88E2   A5   A9      		LDA TEMPN+1
  88E4   C5   5C      		CMP SOBTOP+1
  88E6   F0   B8      		BEQ RTS30
  88E8   A2   AA      	ERNMX1:	LDX #TEMPN1
  88EA   A0   A8      		LDY #TEMPN
  88EC   20   E9   52 		JSR PUTVAL
  88EF   18           		CLC
  88F0   A5   A8      		LDA TEMPN
  88F2   69   04      		ADC #$04
  88F4   85   A8      		STA TEMPN
  88F6   90   E4      		BCC ERNMX
  88F8   E6   A9      		INC TEMPN+1
  88FA   4C   DC   88 		JMP ERNMX
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-251
LOGO	SYSTEM FUNCTIONS

  88FD   A2   A2      	SBTFST:	LDX #ARG1
  88FF   20   85   52 		JSR VPOP
  8902   20   84   5D 		JSR GETTYP
  8905   C9   00      		CMP #LIST
  8907   F0   13      		BEQ SBFL
  8909   C9   07      		CMP #SATOM
  890B   F0   22      		BEQ SBFA
  890D   C9   01      		CMP #ATOM
  890F   F0   1E      		BEQ SBFA
  8911   C9   03      		CMP #FIX
  8913   F0   1A      		BEQ SBFA
  8915   C9   04      		CMP #FLO
  8917   F0   16      		BEQ SBFA
  8919   4C   15   7C 	SBFR:	JMP SMAKE2	;(ERROR XWTA,ARG1,CURTOK)
  891C   A5   A3      	SBFL:	LDA ARG1+1
  891E   F0   F9      		BEQ SBFR
  8920   A0   02      		LDY #$02
  8922   B1   A2      		LDA (ARG1),Y
  8924   AA           		TAX
  8925   C8           		INY
  8926   B1   A2      		LDA (ARG1),Y
  8928   85   A3      		STA ARG1+1
  892A   86   A2      		STX ARG1	;(CDR)
  892C   4C   13   7E 		JMP OTPRG1
  892F   A2   A2      	SBFA:	LDX #ARG1
  8931   A0   9E      		LDY #ARG2	;ARG2 is OLD_PTR
  8933   20   78   65 		JSR MAKPNM
  8936   A2   9E      		LDX #ARG2
  8938   20   53   52 		JSR VPUSHP
  893B   A0   00      		LDY #$00
  893D   84   B3      		STY ANSN1
  893F   B1   9E      		LDA (ARG2),Y
  8941   85   AA      		STA TEMPN1	;TEMPN1 is OLD_CAR
  8943   C8           		INY
  8944   B1   9E      		LDA (ARG2),Y
  8946   85   AB      		STA TEMPN1+1	;(CAR)
  8948   D0   08      		BNE SBFA1A
  894A   A5   AA      		LDA TEMPN1
  894C   F0   CB      		BEQ SBFR
  894E   A5   AB      	SBFA1:	LDA TEMPN1+1
  8950   F0   32      		BEQ SBFB
  8952   A2   00      	SBFA1A:	LDX #$00
  8954   A5   AB      		LDA TEMPN1+1
  8956   85   AA      		STA TEMPN1
  8958   86   AB      		STX TEMPN1+1
  895A   A0   AA      		LDY #TEMPN1
  895C   A9   AC      		LDA #TEMPN2
  895E   85   B2      		STA ANSN
  8960   8A           		TXA		;(LIST)
  8961   20   14   53 		JSR CONS
  8964   A5   B3      		LDA ANSN1
  8966   D0   09      		BNE SBFC
  8968   A2   AC      		LDX #TEMPN2
  896A   20   53   52 		JSR VPUSHP
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-252
LOGO	SYSTEM FUNCTIONS

  896D   E6   B3      		INC ANSN1	;BEG_OF_PNAME
  896F   D0   0B      		BNE SBFC1	;(Always)
  8971   A0   02      	SBFC:	LDY #$02
  8973   A5   AC      		LDA TEMPN2
  8975   91   A8      		STA (TEMPN),Y	;TEMPN is NEW_PTR
  8977   C8           		INY
  8978   A5   AD      		LDA TEMPN2+1
  897A   91   A8      		STA (TEMPN),Y	;(RPLACD)
  897C   A5   AC      	SBFC1:	LDA TEMPN2
  897E   85   A8      		STA TEMPN
  8980   A5   AD      		LDA TEMPN2+1
  8982   85   A9      		STA TEMPN+1
  8984   A0   02      	SBFB:	LDY #$02
  8986   B1   9E      		LDA (ARG2),Y
  8988   AA           		TAX
  8989   C8           		INY
  898A   B1   9E      		LDA (ARG2),Y
  898C   86   9E      		STX ARG2
  898E   85   9F      		STA ARG2+1	;(CDR)
  8990   F0   1A      		BEQ SBFD
  8992   A5   AA      	SBFB1:	LDA TEMPN1
  8994   AA           		TAX
  8995   A0   00      		LDY #$00
  8997   B1   9E      		LDA (ARG2),Y
  8999   85   AA      		STA TEMPN1	;(OLD_CAR)
  899B   C8           		INY
  899C   B1   9E      		LDA (ARG2),Y
  899E   85   AB      		STA TEMPN1+1	;(CAR)
  89A0   88           		DEY
  89A1   8A           		TXA
  89A2   91   A8      		STA (TEMPN),Y
  89A4   C8           		INY
  89A5   A5   AA      		LDA TEMPN1
  89A7   91   A8      		STA (TEMPN),Y
  89A9   4C   4E   89 		JMP SBFA1
  89AC   A2   9E      	SBFD:	LDX #ARG2
  89AE   20   85   52 		JSR VPOP
  89B1   A5   B3      		LDA ANSN1
  89B3   D0   08      		BNE SBFD1
  89B5   A9   00      		LDA #$00
  89B7   85   9E      		STA ARG2
  89B9   85   9F      		STA ARG2+1
  89BB   F0   05      		BEQ SBFD2	;(Always)
  89BD   A2   A2      	SBFD1:	LDX #ARG1	;(OLD_CAR, discard)
  89BF   20   85   52 		JSR VPOP
  89C2   A2   9E      	SBFD2:	LDX #ARG2
  89C4   A0   A2      		LDY #ARG1
  89C6   20   FE   5F 		JSR INTERN
  89C9   4C   13   7E 		JMP OTPRG1
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-253
LOGO	SYSTEM FUNCTIONS

  89CC   20   62   58 	SPEEK:	JSR GT1FIX
  89CF   A0   00      		LDY #$00
  89D1   B1   A2      		LDA (NARG1),Y
  89D3   85   A2      		STA NARG1
  89D5   84   A3      		STY NARG1+1
  89D7   A0   A2      		LDY #NARG1
  89D9   4C   A2   57 		JMP OTPFX1
                      
  89DC   20   8F   58 	SPOKE:	JSR GT2FIX	;First argument is location
  89DF   A0   00      		LDY #$00
  89E1   A5   9F      		LDA NARG2+1
  89E3   D0   07      		BNE SPKERR
  89E5   A5   9E      		LDA NARG2
  89E7   91   A2      		STA (NARG1),Y
  89E9   4C   1E   41 		JMP POPJ
  89EC   4C   84   7A 	SPKERR:	JMP SFPT1	;Error, ARG2 too big
                      
  89EF   A9   00      	SRANDM:	LDA #$00
  89F1   85   A7      		STA TEMPNH+1
  89F3   85   A9      		STA TEMPN+1
  89F5   A9   91      		LDA #RANDA	;Multiply 8-bit Random number by
  89F7   85   A6      		STA TEMPNH	;transform constant "A"
  89F9   A0   08      		LDY #$08
  89FB   46   52      	RMUL2:	LSR RANDOM
  89FD   90   07      		BCC RMUL4
  89FF   18           		CLC
  8A00   A5   A7      	RMUL3:	LDA TEMPNH+1
  8A02   65   A6      		ADC TEMPNH
  8A04   85   A7      		STA TEMPNH+1
  8A06   06   A6      	RMUL4:	ASL TEMPNH
  8A08   88           		DEY
  8A09   D0   F0      		BNE RMUL2
  8A0B   18           		CLC
  8A0C   A5   A7      		LDA TEMPNH+1
  8A0E   69   2B      		ADC #RANDC	;Add transform constant "C"
  8A10   85   52      		STA RANDOM
  8A12   C9   0A      	RNDLP1:	CMP #$0A	;Get a digit modulo 10.
  8A14   90   04      		BCC RNDM1
  8A16   E9   0A      		SBC #$0A
  8A18   B0   F8      		BCS RNDLP1	;(Always)
  8A1A   85   A8      	RNDM1:	STA TEMPN
  8A1C   A0   A8      		LDY #TEMPN
  8A1E   4C   A2   57 		JMP OTPFX1
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-254
LOGO	SYSTEM FUNCTIONS

  8A21   A5   4A      	SRNDMZ:	LDA RNDL
  8A23   85   52      		STA RANDOM
  8A25   4C   1E   41 		JMP POPJ
                      
  8A28   A9   00      	SCTYI:	LDA #$00
  8A2A   85   A9      		STA TEMPN+1
  8A2C   20   72   72 		JSR GTBUF
  8A2F   85   A8      		STA TEMPN
  8A31   A9   9E      		LDA #ARG2
  8A33   85   B2      		STA ANSN
  8A35   A0   A8      		LDY #TEMPN
  8A37   A2   00      		LDX #$00
  8A39   A9   02      		LDA #STRING	;(String typecode)
  8A3B   20   14   53 		JSR CONS	;Cons a cell with the character in it
  8A3E   A2   9E      		LDX #ARG2
  8A40   A0   A2      		LDY #ARG1
  8A42   20   FE   5F 		JSR INTERN	;Intern the character
  8A45   4C   13   7E 		JMP OTPRG1	;And output it
                      
  8A48   20   8F   58 	SCURSR:	JSR GT2FIX
  8A4B   A5   A3      		LDA NARG1+1	;Horizontal position 0 - 39.
  8A4D   D0   1E      		BNE SCRSR1
  8A4F   A5   A2      		LDA NARG1
  8A51   C9   29      		CMP #$29
  8A53   B0   18      		BCS SCRSR1
  8A55   A5   9F      		LDA NARG2+1	;Vertical position 0 - 23.
  8A57   D0   14      		BNE SCRSR1
  8A59   A5   9E      		LDA NARG2
  8A5B   C9   19      		CMP #$19
  8A5D   B0   0E      		BCS SCRSR1
  8A5F   A5   A2      		LDA NARG1
  8A61   85   24      		STA CH
  8A63   A5   9E      		LDA NARG2
  8A65   85   25      		STA CV
  8A67   20   75   75 		JSR BCALCA
  8A6A   4C   1E   41 		JMP POPJ
  8A6D   A9   22      	SCRSR1:	LDA #XCRSR	;"Position off of screen"
  8A6F   4C   47   61 		JMP ERROR
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-255
LOGO	SYSTEM FUNCTIONS

       8A7D           	SCALLR	=SCALL1-1
                      
  8A72   20   62   58 	SCALL:	JSR GT1FIX
  8A75   A9   8A      		LDA #SCALLR^
  8A77   48           		PHA		;Push return address for RTS
  8A78   A9   7D      		LDA #SCALLR&$FF
  8A7A   48           		PHA
  8A7B   6C   A2   00 		JMP (NARG1)
  8A7E   4C   1E   41 	SCALL1:	JMP POPJ
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-256
LOGO	SYSTEM FUNCTIONS

  8A81   A5   05      	SWORD:	LDA NARGS
  8A83   10   04      		BPL SWRD1
  8A85   49   FF      		EOR #$FF
  8A87   85   05      		STA NARGS
  8A89   A9   00      	SWRD1:	LDA #$00
  8A8B   85   90      		STA MARK5
  8A8D   85   91      		STA MARK5+1
  8A8F   A5   05      		LDA NARGS
  8A91   0A           		ASL A
  8A92   85   C2      		STA ANSNX
  8A94   18           		CLC
  8A95   A5   16      		LDA VSP
  8A97   65   C2      		ADC ANSNX
  8A99   85   B6      		STA TEMPN6
  8A9B   A5   17      		LDA VSP+1
  8A9D   69   00      		ADC #$00
  8A9F   85   B7      		STA TEMPN6+1
  8AA1   A5   05      	SWRDW:	LDA NARGS
  8AA3   F0   29      		BEQ SWRD2
  8AA5   A0   00      		LDY #$00
  8AA7   B1   B6      		LDA (TEMPN6),Y
  8AA9   85   8C      		STA MARK3
  8AAB   C8           		INY
  8AAC   B1   B6      		LDA (TEMPN6),Y
  8AAE   85   8D      		STA MARK3+1
  8AB0   38           		SEC
  8AB1   A5   B6      		LDA TEMPN6
  8AB3   E9   02      		SBC #$02
  8AB5   85   B6      		STA TEMPN6
  8AB7   B0   02      		BCS SWRDW1
  8AB9   C6   B6      		DEC TEMPN6
  8ABB   C6   05      	SWRDW1:	DEC NARGS
  8ABD   A0   8E      		LDY #MARK4
  8ABF   A2   8C      		LDX #MARK3
  8AC1   20   78   65 		JSR MAKPNM
  8AC4   A5   8F      		LDA MARK4+1
  8AC6   F0   D9      		BEQ SWRDW
  8AC8   20   E8   8A 		JSR CONCAT	;MARK5 := (Concatenate MARK5 MARK4)
  8ACB   4C   A1   8A 		JMP SWRDW
  8ACE   18           	SWRD2:	CLC
  8ACF   A5   16      		LDA VSP
  8AD1   65   C2      		ADC ANSNX
  8AD3   85   16      		STA VSP
  8AD5   90   02      		BCC SWRD3
  8AD7   E6   17      		INC VSP+1
  8AD9   A2   90      	SWRD3:	LDX #MARK5
  8ADB   A0   A2      		LDY #ARG1
  8ADD   20   FE   5F 		JSR INTERN
  8AE0   A9   00      		LDA #$00
  8AE2   20   23   51 		JSR CLMK5
  8AE5   4C   13   7E 		JMP OTPRG1
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-257
LOGO	SYSTEM FUNCTIONS

  8AE8   A5   91      	CONCAT:	LDA MARK5+1
  8AEA   D0   09      		BNE CNCT1
  8AEC   A5   8E      		LDA MARK4	;MARK5 is Lnil, so make
  8AEE   A6   8F      		LDX MARK4+1	;MARK5 a copy of second word and return
  8AF0   A0   90      		LDY #MARK5
  8AF2   4C   87   8B 		JMP COPY
  8AF5   A5   90      	CNCT1:	LDA MARK5
  8AF7   A6   91      		LDX MARK5+1
  8AF9   A0   AE      		LDY #TEMPN3	;Make TEMPN3 a copy of MARK5
  8AFB   20   87   8B 		JSR COPY
  8AFE   A5   AE      		LDA TEMPN3
  8B00   85   B0      		STA TEMPN4	;Save the first word's pointer in TEMPN4
  8B02   A5   AF      		LDA TEMPN3+1
  8B04   85   B1      		STA TEMPN4+1
  8B06   A2   AE      		LDX #TEMPN3	;Get the last cell of first word (TEMPN3)
  8B08   20   39   7A 		JSR GTLSTC
  8B0B   A0   01      		LDY #$01
  8B0D   B1   AE      		LDA (TEMPN3),Y
  8B0F   F0   1D      		BEQ CNCODD
  8B11   A5   8E      		LDA MARK4	;Even no. chars. in first word
  8B13   A6   8F      		LDX MARK4+1
  8B15   A0   B4      		LDY #TEMPN5	;Make TEMPN5 a copy of second word
  8B17   20   87   8B 		JSR COPY
  8B1A   A0   02      		LDY #$02
  8B1C   A5   B4      		LDA TEMPN5
  8B1E   91   AE      		STA (TEMPN3),Y	;Link second word onto first
  8B20   C8           		INY
  8B21   A5   B5      		LDA TEMPN5+1
  8B23   91   AE      		STA (TEMPN3),Y
  8B25   A5   B0      	CNCTWE:	LDA TEMPN4	;Restore pointer to new word
  8B27   85   90      		STA MARK5
  8B29   A5   B1      		LDA TEMPN4+1
  8B2B   85   91      		STA MARK5+1
  8B2D   60           		RTS
  8B2E   A0   00      	CNCODD:	LDY #$00	;Odd no. chars. in first word
  8B30   84   AB      		STY TEMPN1+1
  8B32   B1   8E      		LDA (MARK4),Y	;Get first char. of second word
  8B34   C8           		INY
  8B35   91   AE      		STA (TEMPN3),Y	;Append it to end of first word
  8B37   B1   8E      		LDA (MARK4),Y
  8B39   85   AA      		STA TEMPN1	;TEMPN1 holds second char. of second word
  8B3B   A5   8F      	CNCTW:	LDA MARK4+1
  8B3D   F0   E6      		BEQ CNCTWE
  8B3F   A0   02      		LDY #$02
  8B41   B1   8E      		LDA (MARK4),Y
  8B43   AA           		TAX
  8B44   C8           		INY
  8B45   B1   8E      		LDA (MARK4),Y
  8B47   85   8F      		STA MARK4+1	;Advance second word char-ptr
  8B49   86   8E      		STX MARK4
  8B4B   A5   AA      		LDA TEMPN1	;If even-numbered char. of second word nil, exit
  8B4D   F0   D6      		BEQ CNCTWE	;(already appended odd-numbered char. preceeding)
  8B4F   A5   8F      		LDA MARK4+1
  8B51   D0   04      		BNE CNCTW1
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-258
LOGO	SYSTEM FUNCTIONS

  8B53   85   AB      		STA TEMPN1+1	;Zero last character (because odd no.)
  8B55   F0   0B      		BEQ CNCTW2	;(Always) Just add last char. if end of second word
  8B57   A0   00      	CNCTW1:	LDY #$00
  8B59   B1   8E      		LDA (MARK4),Y
  8B5B   85   AB      		STA TEMPN1+1	;Get odd-numbered (3,5,...) char.
  8B5D   C8           		INY
  8B5E   B1   8E      		LDA (MARK4),Y
  8B60   85   B3      		STA ANSN1	;Get next even-numbered (4,6,...) char.
  8B62   A9   A8      	CNCTW2:	LDA #TEMPN
  8B64   85   B2      		STA ANSN
  8B66   A0   AA      		LDY #TEMPN1
  8B68   A9   00      		LDA #$00
  8B6A   AA           		TAX
  8B6B   A9   02      		LDA #STRING
  8B6D   20   14   53 		JSR CONS	;Cons new cell
  8B70   A0   02      		LDY #$02
  8B72   A5   A8      		LDA TEMPN
  8B74   91   AE      		STA (TEMPN3),Y
  8B76   AA           		TAX
  8B77   C8           		INY
  8B78   A5   A9      		LDA TEMPN+1
  8B7A   91   AE      		STA (TEMPN3),Y	;Append to new word
  8B7C   85   AF      		STA TEMPN3+1
  8B7E   86   AE      		STX TEMPN3	;New new-word end pointer
  8B80   A5   B3      		LDA ANSN1
  8B82   85   AA      		STA TEMPN1	;Last even char. becomes new odd char.
  8B84   4C   3B   8B 		JMP CNCTW
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-259
LOGO	SYSTEM FUNCTIONS

  8B87   84   B3      	COPY:	STY ANSN1	;Y is STR1
  8B89   85   AA      		STA TEMPN1	;Make (ANSN1) point to a copy of (vXA)
  8B8B   86   AB      		STX TEMPN1+1
  8B8D   8A           		TXA
  8B8E   D0   07      		BNE COPY1
  8B90   99   00   00 		STA $00,Y	;If (vAX) is Lnil, make (ANSN1) Lnil
  8B93   99   00   00 		STA $00,Y
  8B96   60           		RTS
  8B97   84   B2      	COPY1:	STY ANSN	;Cons up an empty cell
  8B99   A9   00      		LDA #$00
  8B9B   AA           		TAX
  8B9C   A8           		TAY
  8B9D   A9   02      		LDA #STRING
  8B9F   20   14   53 		JSR CONS
  8BA2   A6   B3      		LDX ANSN1
  8BA4   20   53   52 		JSR VPUSHP	;Vpush forming string
  8BA7   A6   B3      	COPYW:	LDX ANSN1
  8BA9   B5   00      		LDA $00,X
  8BAB   85   AC      		STA TEMPN2
  8BAD   B5   01      		LDA $01,X
  8BAF   85   AD      		STA TEMPN2+1	;TEMPN2 points to empty last cell of copy
  8BB1   A0   00      		LDY #$00
  8BB3   B1   AA      		LDA (TEMPN1),Y
  8BB5   91   AC      		STA (TEMPN2),Y	;Copy two characters into cell
  8BB7   C8           		INY
  8BB8   B1   AA      		LDA (TEMPN1),Y
  8BBA   91   AC      		STA (TEMPN2),Y
  8BBC   C8           		INY
  8BBD   B1   AA      		LDA (TEMPN1),Y
  8BBF   AA           		TAX
  8BC0   C8           		INY
  8BC1   B1   AA      		LDA (TEMPN1),Y
  8BC3   85   AB      		STA TEMPN1+1	;Advance char-ptr of original
  8BC5   86   AA      		STX TEMPN1
  8BC7   AA           		TAX
  8BC8   F0   21      		BEQ COPYWE	;Exit if end of original
  8BCA   A9   A8      		LDA #TEMPN
  8BCC   85   B2      		STA ANSN
  8BCE   A9   00      		LDA #$00
  8BD0   AA           		TAX
  8BD1   A8           		TAY
  8BD2   A9   02      		LDA #STRING
  8BD4   20   14   53 		JSR CONS	;Cons a new cell
  8BD7   A0   02      		LDY #$02
  8BD9   A6   B3      		LDX ANSN1
  8BDB   A5   A8      		LDA TEMPN
  8BDD   91   AC      		STA (TEMPN2),Y
  8BDF   95   00      		STA $00,X
  8BE1   C8           		INY
  8BE2   A5   A9      		LDA TEMPN+1
  8BE4   91   AC      		STA (TEMPN2),Y	;Link new cell on to end of copy
  8BE6   95   01      		STA $01,X	;Advance copy's last-cell ptr
  8BE8   4C   A7   8B 		JMP COPYW
  8BEB   A6   B3      	COPYWE:	LDX ANSN1	;Vpop copy's beginning pointer
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-260
LOGO	SYSTEM FUNCTIONS

  8BED   4C   85   52 		JMP VPOP
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-261
LOGO	SYSTEM FUNCTIONS

  8BF0   A2   A2      	SBTLST:	LDX #ARG1
  8BF2   20   85   52 		JSR VPOP
  8BF5   20   84   5D 		JSR GETTYP
  8BF8   C9   00      		CMP #LIST
  8BFA   F0   2F      		BEQ BTLSTL
  8BFC   C9   01      		CMP #ATOM
  8BFE   F0   0F      		BEQ BTLSTA
  8C00   C9   07      		CMP #SATOM
  8C02   F0   0B      		BEQ BTLSTA
  8C04   C9   03      		CMP #FIX
  8C06   F0   07      		BEQ BTLSTA
  8C08   C9   04      		CMP #FLO
  8C0A   F0   03      		BEQ BTLSTA
  8C0C   4C   15   7C 	BTLSTR:	JMP SMAKE2
  8C0F   A0   B4      	BTLSTA:	LDY #TEMPN5
  8C11   A2   A2      		LDX #ARG1
  8C13   20   78   65 		JSR MAKPNM
  8C16   A9   01      		LDA #ATOM
  8C18   85   C0      		STA ANSN2
  8C1A   A0   00      		LDY #$00
  8C1C   B1   B4      		LDA (TEMPN5),Y
  8C1E   F0   EC      		BEQ BTLSTR
  8C20   A5   B4      		LDA TEMPN5
  8C22   85   A2      		STA ARG1
  8C24   A5   B5      		LDA TEMPN5+1
  8C26   85   A3      		STA ARG1+1
  8C28   4C   31   8C 		JMP BTLSTX
  8C2B   85   C0      	BTLSTL:	STA ANSN2
  8C2D   A5   A3      		LDA ARG1+1
  8C2F   F0   DB      		BEQ BTLSTR
  8C31   A9   00      	BTLSTX:	LDA #$00
  8C33   85   B3      		STA ANSN1	;NEW_LIST
  8C35   A2   A2      		LDX #ARG1
  8C37   20   53   52 		JSR VPUSHP
  8C3A   A0   03      	BTLSW:	LDY #$03
  8C3C   B1   A2      		LDA (ARG1),Y
  8C3E   F0   54      		BEQ BTLSWE
  8C40   A0   00      		LDY #$00
  8C42   B1   A2      		LDA (ARG1),Y
  8C44   85   AA      		STA TEMPN1	;TEMP_CAR
  8C46   C8           		INY
  8C47   B1   A2      		LDA (ARG1),Y
  8C49   85   AB      		STA TEMPN1+1
  8C4B   A9   A8      		LDA #TEMPN	;TEMP
  8C4D   85   B2      		STA ANSN
  8C4F   A0   AA      		LDY #TEMPN1
  8C51   A9   00      		LDA #$00
  8C53   AA           		TAX
  8C54   20   14   53 		JSR CONS
  8C57   A5   C0      		LDA ANSN2
  8C59   C9   01      		CMP #ATOM
  8C5B   D0   07      		BNE BTLSW1
  8C5D   A2   A8      		LDX #TEMPN
  8C5F   A9   02      		LDA #STRING
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-262
LOGO	SYSTEM FUNCTIONS

  8C61   20   F0   53 		JSR PUTTYP
  8C64   A5   B3      	BTLSW1:	LDA ANSN1
  8C66   D0   0D      		BNE BTLSW2
  8C68   A2   A8      		LDX #TEMPN
  8C6A   20   53   52 		JSR VPUSHP
  8C6D   A6   A8      		LDX TEMPN
  8C6F   A5   A9      		LDA TEMPN+1
  8C71   E6   B3      		INC ANSN1
  8C73   D0   0C      		BNE BTLSW3	;(Always)
  8C75   A0   02      	BTLSW2:	LDY #$02
  8C77   A5   A8      		LDA TEMPN
  8C79   91   AC      		STA (TEMPN2),Y
  8C7B   AA           		TAX
  8C7C   C8           		INY
  8C7D   A5   A9      		LDA TEMPN+1
  8C7F   91   AC      		STA (TEMPN2),Y
  8C81   85   AD      	BTLSW3:	STA TEMPN2+1
  8C83   86   AC      		STX TEMPN2
  8C85   A0   02      		LDY #$02
  8C87   B1   A2      		LDA (ARG1),Y
  8C89   AA           		TAX
  8C8A   C8           		INY
  8C8B   B1   A2      		LDA (ARG1),Y
  8C8D   85   A3      		STA ARG1+1
  8C8F   86   A2      		STX ARG1
  8C91   4C   3A   8C 		JMP BTLSW
  8C94   A5   C0      	BTLSWE:	LDA ANSN2
  8C96   C9   00      		CMP #LIST
  8C98   D0   19      		BNE BTLWE1
  8C9A   A5   B3      		LDA ANSN1
  8C9C   D0   08      		BNE BTLWL1
  8C9E   A9   00      		LDA #$00
  8CA0   85   A2      		STA ARG1
  8CA2   85   A3      		STA ARG1+1
  8CA4   F0   05      		BEQ BTLWL2	;(Always)
  8CA6   A2   A2      	BTLWL1:	LDX #ARG1
  8CA8   20   85   52 		JSR VPOP
  8CAB   A2   AA      	BTLWL2:	LDX #TEMPN1
  8CAD   20   85   52 		JSR VPOP
  8CB0   4C   13   7E 		JMP OTPRG1
  8CB3   A0   00      	BTLWE1:	LDY #$00
  8CB5   B1   A2      		LDA (ARG1),Y
  8CB7   85   AA      		STA TEMPN1
  8CB9   C8           		INY
  8CBA   B1   A2      		LDA (ARG1),Y
  8CBC   85   AB      		STA TEMPN1+1
  8CBE   F0   2B      		BEQ BTLWE2
  8CC0   A9   A8      		LDA #TEMPN
  8CC2   85   B2      		STA ANSN
  8CC4   A9   00      		LDA #$00
  8CC6   AA           		TAX
  8CC7   85   AB      		STA TEMPN1+1
  8CC9   A0   AA      		LDY #TEMPN1
  8CCB   20   14   53 		JSR CONS
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-263
LOGO	SYSTEM FUNCTIONS

  8CCE   A5   B3      		LDA ANSN1
  8CD0   D0   0B      		BNE BTLWE3
  8CD2   A5   A8      		LDA TEMPN
  8CD4   85   A2      		STA ARG1
  8CD6   A5   A9      		LDA TEMPN+1
  8CD8   85   A3      		STA ARG1+1
  8CDA   4C   FC   8C 		JMP BTLWE5
  8CDD   A0   02      	BTLWE3:	LDY #$02
  8CDF   A5   A8      		LDA TEMPN
  8CE1   91   AC      		STA (TEMPN2),Y
  8CE3   C8           		INY
  8CE4   A5   A9      		LDA TEMPN+1
  8CE6   91   AC      		STA (TEMPN2),Y
  8CE8   4C   F7   8C 		JMP BTLWE4
  8CEB   A5   B3      	BTLWE2:	LDA ANSN1
  8CED   D0   08      		BNE BTLWE4
  8CEF   A9   00      		LDA #$00
  8CF1   85   A2      		STA ARG1
  8CF3   85   A3      		STA ARG1+1
  8CF5   F0   05      		BEQ BTLWE5	;(Always)
  8CF7   A2   A2      	BTLWE4:	LDX #ARG1
  8CF9   20   85   52 		JSR VPOP
  8CFC   A2   A8      	BTLWE5:	LDX #TEMPN
  8CFE   20   85   52 		JSR VPOP
  8D01   A0   9E      		LDY #ARG2
  8D03   A2   A2      		LDX #ARG1
  8D05   20   FE   5F 		JSR INTERN
  8D08   A2   9E      		LDX #ARG2
  8D0A   20   53   52 		JSR VPUSHP
  8D0D   E6   07      		INC OTPUTN
  8D0F   4C   1E   41 		JMP POPJ
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-264
LOGO	SYSTEM FUNCTIONS

  8D12   A2   A2      	SLISTP:	LDX #ARG1
  8D14   20   85   52 		JSR VPOP
  8D17   20   84   5D 		JSR GETTYP
  8D1A   C9   00      		CMP #LIST
  8D1C   D0   1E      		BNE NTLST
  8D1E   4C   25   7A 	YESLST:	JMP VPLTRU
                      
  8D21   A2   A2      	SNMBRP:	LDX #ARG1
  8D23   20   85   52 		JSR VPOP
  8D26   20   84   5D 		JSR GETTYP
  8D29   C9   03      		CMP #FIX
  8D2B   F0   F1      		BEQ YESLST
  8D2D   C9   04      		CMP #FLO
  8D2F   F0   ED      		BEQ YESLST
  8D31   C9   01      		CMP #ATOM
  8D33   D0   07      		BNE NTLST
  8D35   A2   A2      		LDX #ARG1
  8D37   20   07   59 		JSR ATMTFX
  8D3A   B0   E2      		BCS YESLST
  8D3C   4C   2F   7A 	NTLST:	JMP VPLFLS
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-265
LOGO	SYSTEM FUNCTIONS

  8D3F   A2   A2      	SEMPTP:	LDX #ARG1
  8D41   20   85   52 		JSR VPOP
  8D44   20   84   5D 		JSR GETTYP
  8D47   C9   00      		CMP #LIST
  8D49   F0   16      		BEQ SEMPT1
  8D4B   C9   01      		CMP #ATOM
  8D4D   D0   ED      		BNE NTLST
  8D4F   A0   02      		LDY #$02
  8D51   B1   A2      		LDA (ARG1),Y
  8D53   AA           		TAX
  8D54   C8           		INY
  8D55   B1   A2      		LDA (ARG1),Y
  8D57   85   A3      		STA ARG1+1
  8D59   86   A2      		STX ARG1
  8D5B   B1   A2      		LDA (ARG1),Y
  8D5D   D0   DD      		BNE NTLST
  8D5F   F0   BD      		BEQ YESLST
  8D61   A5   A3      	SEMPT1:	LDA ARG1+1
  8D63   D0   D7      		BNE NTLST
  8D65   F0   B7      		BEQ YESLST
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-266
LOGO	SYSTEM FUNCTIONS

  8D67   A5   05      	SLIST:	LDA NARGS
  8D69   10   04      		BPL SLIST1
  8D6B   49   FF      		EOR #$FF
  8D6D   85   05      		STA NARGS
  8D6F   A9   88      	SLIST1:	LDA #MARK1
  8D71   85   B2      		STA ANSN
  8D73   A9   00      		LDA #$00
  8D75   85   88      		STA MARK1
  8D77   85   89      		STA MARK1+1
  8D79   A5   05      		LDA NARGS
  8D7B   F0   14      		BEQ SLSTWE
  8D7D   A2   8A      	SLISTW:	LDX #MARK2
  8D7F   20   85   52 		JSR VPOP
  8D82   A2   88      		LDX #MARK1
  8D84   86   B2      		STX ANSN
  8D86   A0   8A      		LDY #MARK2
  8D88   A9   00      		LDA #$00	;(Type LIST)
  8D8A   20   14   53 		JSR CONS
  8D8D   C6   05      		DEC NARGS
  8D8F   D0   EC      		BNE SLISTW
  8D91   A5   88      	SLSTWE:	LDA MARK1
  8D93   85   A2      		STA ARG1
  8D95   A5   89      		LDA MARK1+1
  8D97   85   A3      		STA ARG1+1
  8D99   A9   00      		LDA #$00
  8D9B   20   2F   51 		JSR CLMK2
  8D9E   4C   13   7E 		JMP OTPRG1
                      
  8DA1   20   6D   72 	SCLINP:	JSR CLRCBF	;Clear input buffer and character strobe
  8DA4   4C   1E   41 		JMP POPJ
                      
  8DA7   20   E0   74 	SCLEAR:	JSR HOME
  8DAA   4C   1E   41 		JMP POPJ
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-267
LOGO	TURTLE-GRAPHICS ROUTINES

                      	.SBTTL	Turtle-Graphics Routines
                      
  8DAD   A5   57      	SCS:	LDA INDEV
  8DAF   D0   3D      		BNE SCS2
  8DB1   A5   09      		LDA GRPHCS
  8DB3   D0   21      		BNE SCS1
  8DB5   A9   00      		LDA #EDBUF&$FF	;Tell RETRIEVE that buffer is not retrievable
  8DB7   85   C7      		STA ENDBUF
  8DB9   A9   20      		LDA #EDBUF^
  8DBB   85   C8      		STA ENDBUF+1
  8DBD   AD   54   C0 		LDA $C054	;INIT Routine, set for primary page
  8DC0   AD   57   C0 		LDA $C057
  8DC3   AD   53   C0 		LDA $C053
  8DC6   AD   50   C0 		LDA $C050
  8DC9   A9   14      		LDA #$14
  8DCB   85   22      		STA WNDTOP	;Set for 4 lines text
  8DCD   20   E0   74 		JSR HOME
  8DD0   E6   09      		INC GRPHCS	;Indicate Graphics mode
  8DD2   A9   7F      		LDA #$7F
  8DD4   85   DF      		STA COLR	;Color is "White1"
  8DD6   A9   01      	SCS1:	LDA #$01
  8DD8   85   C9      		STA PEN
  8DDA   85   CA      		STA TSHOWN	;turtle shown
  8DDC   20   F0   90 		JSR TTLHOM
  8DDF   20   8A   94 		JSR GETX
  8DE2   20   95   94 		JSR GETY
  8DE5   20   6C   92 		JSR GPOSN	;Set initial POSN point for future GLINE's
  8DE8   20   4D   92 		JSR GCLEAR
  8DEB   20   75   90 		JSR GSHWT1
  8DEE   4C   1E   41 	SCS2:	JMP POPJ
                      
  8DF1   20   7B   72 	SNDSPL:	JSR RESETT	;Nodisplay, get the text page back
  8DF4   A9   00      		LDA #$00
  8DF6   85   09      		STA GRPHCS
  8DF8   4C   1E   41 		JMP POPJ
                      
  8DFB   20   E5   90 	SPENUP:	JSR GCHK
  8DFE   A9   00      		LDA #$00	;Penup
  8E00   85   C9      		STA PEN
  8E02   4C   1E   41 		JMP POPJ
                      
  8E05   20   E5   90 	SPENDN:	JSR GCHK
  8E08   A9   01      		LDA #$01	;Pendown
  8E0A   85   C9      		STA PEN
  8E0C   4C   1E   41 		JMP POPJ
                      
  8E0F   20   E5   90 	SHOME:	JSR GCHK
  8E12   20   75   90 		JSR GSHWT1	;Erase turtle if it's there
  8E15   20   F0   90 		JSR TTLHOM
  8E18   20   8A   94 		JSR GETX
  8E1B   20   95   94 		JSR GETY
  8E1E   20   64   90 		JSR GDLINE
  8E21   4C   1E   41 		JMP POPJ
                      
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-268
LOGO	TURTLE-GRAPHICS ROUTINES

  8E24   20   E5   90 	SXCOR:	JSR GCHK	;Xcor
  8E27   A0   CB      		LDY #XCOR
  8E29   4C   B9   57 		JMP OTPFLO
                      
  8E2C   20   E5   90 	SYCOR:	JSR GCHK	;Ycor
  8E2F   A0   CF      		LDY #YCOR
  8E31   4C   B9   57 		JMP OTPFLO
                      
  8E34   20   E5   90 	SHDING:	JSR GCHK	;Heading
  8E37   A0   D3      		LDY #HEADNG
  8E39   4C   B9   57 		JMP OTPFLO
                      
  8E3C   20   E5   90 	SRT:	JSR GCHK
  8E3F   20   75   90 		JSR GSHWT1
  8E42   A2   A2      		LDX #NARG1	;Right
  8E44   20   85   52 		JSR VPOP
  8E47   20   5A   58 		JSR GT1NMX
  8E4A   B0   03      		BCS SRT1
  8E4C   20   2C   69 		JSR FLOTN1
  8E4F   20   58   8E 	SRT1:	JSR SRTX
  8E52   20   75   90 		JSR GSHWT1	;Show it again if necessary
  8E55   4C   1E   41 		JMP POPJ
                      
  8E58   A0   D3      	SRTX:	LDY #HEADNG
  8E5A   20   87   8E 		JSR XYTON2
  8E5D   20   9D   69 		JSR FADD
  8E60   4C   E6   8F 		JMP GSETHX
                      
  8E63   20   E5   90 	SLT:	JSR GCHK
  8E66   20   75   90 		JSR GSHWT1
  8E69   A2   A2      		LDX #NARG1	;Left
  8E6B   20   85   52 		JSR VPOP
  8E6E   20   5A   58 		JSR GT1NMX
  8E71   B0   03      		BCS SLT1
  8E73   20   2C   69 		JSR FLOTN1
  8E76   A0   D3      	SLT1:	LDY #HEADNG
  8E78   20   87   8E 		JSR XYTON2
  8E7B   20   A5   69 		JSR FSUBX
  8E7E   20   E6   8F 		JSR GSETHX
  8E81   20   75   90 		JSR GSHWT1
  8E84   4C   1E   41 		JMP POPJ
                      
  8E87   A2   FC      	XYTON2:	LDX #$FC
  8E89   B9   00   00 	XYN2L:	LDA $00,Y
  8E8C   95   A2      		STA NARG2+4,X
  8E8E   C8           		INY
  8E8F   E8           		INX
  8E90   30   F7      		BMI XYN2L
  8E92   60           		RTS
                      
  8E93   A2   FC      	XN2TOY:	LDX #$FC
  8E95   B5   A2      	XN2YL:	LDA NARG2+4,X
  8E97   99   00   00 		STA $00,Y
  8E9A   C8           		INY
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-269
LOGO	TURTLE-GRAPHICS ROUTINES

  8E9B   E8           		INX
  8E9C   30   F7      		BMI XN2YL
  8E9E   60           		RTS
                      
  8E9F   20   E5   90 	STS:	JSR GCHK	;Turtlestate
  8EA2   A9   00      		LDA #$00
  8EA4   85   88      		STA MARK1
  8EA6   85   89      		STA MARK1+1
  8EA8   A5   CA      		LDA TSHOWN
  8EAA   20   E9   8E 		JSR CONSTF
  8EAD   A5   C9      		LDA PEN
  8EAF   20   E9   8E 		JSR CONSTF
  8EB2   A9   D3      		LDA #HEADNG
  8EB4   20   D1   8E 		JSR CONSNM
  8EB7   A9   CF      		LDA #YCOR
  8EB9   20   D1   8E 		JSR CONSNM
  8EBC   A9   CB      		LDA #XCOR
  8EBE   20   D1   8E 		JSR CONSNM
  8EC1   A2   88      		LDX #MARK1
  8EC3   20   53   52 		JSR VPUSHP
  8EC6   E6   07      		INC OTPUTN
  8EC8   A9   00      		LDA #$00
  8ECA   85   88      		STA MARK1
  8ECC   85   89      		STA MARK1+1
  8ECE   4C   1E   41 		JMP POPJ
                      
  8ED1   AA           	CONSNM:	TAX
  8ED2   A8           		TAY
  8ED3   E8           		INX
  8ED4   E8           		INX
  8ED5   A9   BC      		LDA #TEMPX1
  8ED7   85   B2      		STA ANSN
  8ED9   A9   04      		LDA #FLO
  8EDB   20   14   53 		JSR CONS	;CONS the number
  8EDE   A0   BC      		LDY #TEMPX1
  8EE0   A2   88      	CNSNM1:	LDX #MARK1
  8EE2   86   B2      		STX ANSN
  8EE4   A9   00      		LDA #LIST
  8EE6   4C   14   53 		JMP CONS	;CONS the node
                      
  8EE9   D0   04      	CONSTF:	BNE CNSTF1
  8EEB   A0   50      		LDY #LFALSE
  8EED   D0   F1      		BNE CNSNM1	;(Always)
  8EEF   A0   4E      	CNSTF1:	LDY #LTRUE
  8EF1   D0   ED      		BNE CNSNM1	;(Always)
                      
  8EF3   20   E5   90 	SSETX:	JSR GCHK
  8EF6   20   75   90 		JSR GSHWT1
  8EF9   A2   A2      		LDX #NARG1	;Setx
  8EFB   20   85   52 		JSR VPOP
  8EFE   20   C5   8F 		JSR GSETX
  8F01   20   95   94 		JSR GETY
  8F04   20   64   90 		JSR GDLINE
  8F07   4C   1E   41 		JMP POPJ
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-270
LOGO	TURTLE-GRAPHICS ROUTINES

                      
  8F0A   20   E5   90 	SSETY:	JSR GCHK
  8F0D   20   75   90 		JSR GSHWT1
  8F10   A2   A2      		LDX #NARG1	;Sety
  8F12   20   85   52 		JSR VPOP
  8F15   20   A0   94 		JSR GSAVX
  8F18   20   D3   8F 		JSR GSETY
  8F1B   20   8A   94 		JSR GETX
  8F1E   20   64   90 		JSR GDLINE
  8F21   4C   1E   41 		JMP POPJ
                      
  8F24   20   E5   90 	SSETXY:	JSR GCHK
  8F27   20   75   90 		JSR GSHWT1
  8F2A   A2   BE      		LDX #TEMPX2
  8F2C   20   85   52 		JSR VPOP
  8F2F   A2   A2      		LDX #NARG1
  8F31   20   85   52 		JSR VPOP
  8F34   20   C5   8F 		JSR GSETX
  8F37   A5   BE      		LDA TEMPX2
  8F39   85   A2      		STA NARG1
  8F3B   A5   BF      		LDA TEMPX2+1
  8F3D   85   A3      		STA NARG1+1
  8F3F   20   D3   8F 		JSR GSETY
  8F42   20   64   90 		JSR GDLINE
  8F45   4C   1E   41 		JMP POPJ
                      
  8F48   20   E5   90 	SSETH:	JSR GCHK
  8F4B   20   75   90 		JSR GSHWT1
  8F4E   A2   A2      		LDX #NARG1
  8F50   20   85   52 		JSR VPOP
  8F53   20   DE   8F 		JSR GSETH
  8F56   20   75   90 		JSR GSHWT1
  8F59   4C   1E   41 		JMP POPJ
                      
  8F5C   20   E5   90 	SSETT:	JSR GCHK
  8F5F   20   75   90 		JSR GSHWT1
  8F62   A2   BE      		LDX #TEMPX2
  8F64   20   85   52 		JSR VPOP	;Setturtle
  8F67   20   84   5D 		JSR GETTYP
  8F6A   C9   00      		CMP #LIST
  8F6C   D0   54      		BNE SSETTR
  8F6E   A9   FB      		LDA #$FB	;Index for dispatching
  8F70   85   C2      		STA ANSNX
  8F72   A5   BF      	SSETTL:	LDA TEMPX2+1
  8F74   F0   0C      		BEQ SSETTD
  8F76   A5   C2      		LDA ANSNX
  8F78   F0   08      		BEQ SSETTD
  8F7A   20   88   8F 		JSR SSTTLL
  8F7D   E6   C2      		INC ANSNX
  8F7F   4C   72   8F 		JMP SSETTL
  8F82   20   64   90 	SSETTD:	JSR GDLINE
  8F85   4C   1E   41 		JMP POPJ
                      
  8F88   A0   00      	SSTTLL:	LDY #$00
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-271
LOGO	TURTLE-GRAPHICS ROUTINES

  8F8A   B1   BE      		LDA (TEMPX2),Y
  8F8C   85   A2      		STA ARG1
  8F8E   C8           		INY
  8F8F   B1   BE      		LDA (TEMPX2),Y
  8F91   85   A3      		STA ARG1+1
  8F93   C8           		INY
  8F94   B1   BE      		LDA (TEMPX2),Y
  8F96   AA           		TAX
  8F97   C8           		INY
  8F98   B1   BE      		LDA (TEMPX2),Y
  8F9A   85   BF      		STA TEMPX2+1
  8F9C   86   BE      		STX TEMPX2
  8F9E   A2   A2      		LDX #ARG1
  8FA0   A4   C2      		LDY ANSNX
  8FA2   C8           		INY
  8FA3   F0   0B      		BEQ SSTTS
  8FA5   C8           		INY
  8FA6   F0   11      		BEQ SSTTP
  8FA8   C8           		INY
  8FA9   F0   33      		BEQ GSETH
  8FAB   C8           		INY
  8FAC   F0   25      		BEQ GSETY
  8FAE   D0   15      		BNE GSETX
  8FB0   20   FF   79 	SSTTS:	JSR GTBOOL
  8FB3   98           		TYA
  8FB4   49   FF      		EOR #$FF
  8FB6   85   CA      		STA TSHOWN
  8FB8   60           		RTS
  8FB9   20   FF   79 	SSTTP:	JSR GTBOOL
  8FBC   98           		TYA
  8FBD   49   FF      		EOR #$FF
  8FBF   85   C9      		STA PEN
  8FC1   60           		RTS
  8FC2   4C   15   7C 	SSETTR:	JMP SMAKE2	;Error XWTA,ARG1,CURTOK
                      
  8FC5   20   5A   58 	GSETX:	JSR GT1NMX	;Set X
  8FC8   B0   03      		BCS GSTX1
  8FCA   20   2C   69 		JSR FLOTN1
  8FCD   20   01   94 	GSTX1:	JSR XCHK
  8FD0   4C   A0   94 		JMP GSAVX
                      
  8FD3   20   5A   58 	GSETY:	JSR GT1NMX	;Set Y
  8FD6   B0   03      		BCS GSTY1
  8FD8   20   2C   69 		JSR FLOTN1
  8FDB   4C   48   94 	GSTY1:	JMP YCHK
                      
  8FDE   20   5A   58 	GSETH:	JSR GT1NMX	;Setheading
  8FE1   B0   03      		BCS GSETHX
  8FE3   20   2C   69 		JSR FLOTN1
  8FE6   A5   A2      	GSETHX:	LDA NARG1
  8FE8   C9   8F      		CMP #$8F
  8FEA   B0   43      		BCS GSETHR
  8FEC   A9   00      		LDA #$00
  8FEE   85   B3      		STA ANSN1
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-272
LOGO	TURTLE-GRAPHICS ROUTINES

  8FF0   A5   A3      		LDA NARG1+1	;Normalize to within +/- 180.
  8FF2   10   05      		BPL SSETDL	;Go to decrement-loop if positive
  8FF4   20   F3   69 		JSR FCOMPL
  8FF7   E6   B3      		INC ANSN1
  8FF9   A5   A2      	SSETDL:	LDA NARG1
  8FFB   C9   87      		CMP #$87
  8FFD   90   24      		BCC SSETH2
  8FFF   D0   12      		BNE SSETD
  9001   A5   A3      		LDA NARG1+1
  9003   30   1E      		BMI SSETH2	;If negative,  OK
  9005   C9   5A      		CMP #$5A	;Check the high byte
  9007   90   1A      		BCC SSETH2
  9009   D0   08      		BNE SSETD
  900B   A5   A4      		LDA NARG1+2
  900D   D0   04      		BNE SSETD
  900F   A5   A5      		LDA NARG1+3
  9011   F0   10      		BEQ SSETH2
  9013   A2   03      	SSETD:	LDX #$03
  9015   BD   F5   94 	SETHL:	LDA FCIRC,X	;Constant, 360.
  9018   95   9E      		STA NARG2,X
  901A   CA           		DEX
  901B   10   F8      		BPL SETHL
  901D   20   A2   69 		JSR FSUB	;Subtract 360 degrees
  9020   4C   F9   8F 		JMP SSETDL
  9023   A5   B3      	SSETH2:	LDA ANSN1
  9025   F0   03      		BEQ SSETH3
  9027   20   F3   69 		JSR FCOMPL
  902A   A0   D3      	SSETH3:	LDY #HEADNG
  902C   4C   F3   4C 		JMP XN1TOY
  902F   A9   20      	GSETHR:	LDA #XOFLOW
  9031   4C   47   61 		JMP ERROR
                      
  9034   20   E5   90 	SSHOWT:	JSR GCHK
  9037   A5   CA      		LDA TSHOWN
  9039   D0   05      		BNE SSHWTR
  903B   E6   CA      		INC TSHOWN
  903D   20   7A   90 		JSR XORDRW
  9040   4C   1E   41 	SSHWTR:	JMP POPJ
                      
  9043   20   E5   90 	SHIDET:	JSR GCHK
  9046   A5   CA      		LDA TSHOWN
  9048   F0   F6      		BEQ SSHWTR
  904A   C6   CA      		DEC TSHOWN
  904C   20   7A   90 		JSR XORDRW
  904F   4C   1E   41 		JMP POPJ
                      
  9052   20   E5   90 	SFULL:	JSR GCHK
  9055   AD   52   C0 		LDA $C052
  9058   4C   1E   41 		JMP POPJ
                      
  905B   20   E5   90 	SMIX:	JSR GCHK
  905E   AD   53   C0 		LDA $C053
  9061   4C   1E   41 		JMP POPJ
                      
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-273
LOGO	TURTLE-GRAPHICS ROUTINES

  9064   A5   C9      	GDLINE:	LDA PEN
  9066   D0   06      		BNE GDLIN1
  9068   20   6C   92 		JSR GPOSN	;Just do a GPOSN if pen is up
  906B   4C   75   90 		JMP GSHWT1
  906E   A9   00      	GDLIN1:	LDA #$00
  9070   85   C2      		STA ANSNX
  9072   20   ED   93 		JSR GLINE
                      
  9075   A5   CA      	GSHWT1:	LDA TSHOWN
  9077   D0   01      		BNE XORDRW
  9079   60           		RTS
                      
  907A   20   A0   94 	XORDRW:	JSR GSAVX	;Save new value of X, in case turtle is out-of-bounds
  907D   A2   13      		LDX #$13	;Draw the turtle, XOR mode
  907F   B5   CB      	XRDRL1:	LDA XCOR,X	;Save XCOR,YCOR,HEADNG,hires vars on stack
  9081   48           		PHA
  9082   CA           		DEX
  9083   10   FA      		BPL XRDRL1
  9085   A9   01      		LDA #$01
  9087   85   C2      		STA ANSNX	;Set up XOR mode
  9089   A9   06      		LDA #TTLC1	;Move to tip
  908B   20   D8   90 		JSR SETARG
  908E   20   3E   91 		JSR SFDX
  9091   20   6C   92 		JSR GPOSN
  9094   A9   A0      		LDA #TTLA1	;Turn right to draw first side
  9096   20   D8   90 		JSR SETARG
  9099   20   58   8E 		JSR SRTX
  909C   A9   12      		LDA #TTLC2	;Draw first side
  909E   20   D8   90 		JSR SETARG
  90A1   20   3E   91 		JSR SFDX
  90A4   20   ED   93 		JSR GLINE
  90A7   A9   6E      		LDA #TTLA2	;Turn right to draw rear
  90A9   20   D8   90 		JSR SETARG
  90AC   20   58   8E 		JSR SRTX
  90AF   A9   0C      		LDA #TTLC3	;Draw rear
  90B1   20   D8   90 		JSR SETARG
  90B4   20   3E   91 		JSR SFDX
  90B7   20   ED   93 		JSR GLINE
  90BA   A9   6E      		LDA #TTLA2	;Turn right to draw second side
  90BC   20   D8   90 		JSR SETARG
  90BF   20   58   8E 		JSR SRTX
  90C2   A9   12      		LDA #TTLC2	;Draw second side
  90C4   20   D8   90 		JSR SETARG
  90C7   20   3E   91 		JSR SFDX
  90CA   20   ED   93 		JSR GLINE
  90CD   C6   C2      		DEC ANSNX
  90CF   A2   EC      		LDX #$EC
  90D1   68           	XRDRL2:	PLA		;Restore XCOR,YCOR,HEADNG,hires vars from stack
  90D2   95   DF      		STA XCOR+20,X
  90D4   E8           		INX
  90D5   30   FA      		BMI XRDRL2
  90D7   60           	XRDR:	RTS
                      
  90D8   85   A2      	SETARG:	STA NARG1
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-274
LOGO	TURTLE-GRAPHICS ROUTINES

  90DA   A9   00      		LDA #$00
  90DC   85   A3      		STA NARG1+1
  90DE   85   A4      		STA NARG1+2
  90E0   85   A5      		STA NARG1+3
  90E2   4C   2C   69 		JMP FLOTN1
                      
  90E5   A5   09      	GCHK:	LDA GRPHCS	;Checks to see if Graphics mode
  90E7   D0   EE      		BNE XRDR
  90E9   A9   23      		LDA #XYNT
  90EB   A0   63      		LDY #CURTOK
  90ED   4C   47   61 		JMP ERROR	;If not, error "You need a turtle"
                      
  90F0   A2   CB      	TTLHOM:	LDX #XCOR
  90F2   20   F8   90 		JSR CLRFLT
  90F5   20   F8   90 		JSR CLRFLT
                      
  90F8   A9   00      	CLRFLT:	LDA #$00	;Clear a 4-byte argument
  90FA   A0   03      		LDY #$03
  90FC   95   00      	TTLL1:	STA $00,X
  90FE   E8           		INX
  90FF   88           		DEY
  9100   10   FA      		BPL TTLL1
  9102   60           		RTS
                      
  9103   20   E5   90 	SBK:	JSR GCHK
  9106   20   75   90 		JSR GSHWT1
  9109   A2   A2      		LDX #NARG1
  910B   20   85   52 		JSR VPOP	;Forward
  910E   20   5A   58 		JSR GT1NMX
  9111   B0   03      		BCS SBK1
  9113   20   2C   69 		JSR FLOTN1
  9116   20   F3   69 	SBK1:	JSR FCOMPL
  9119   20   3E   91 		JSR SFDX
  911C   20   64   90 		JSR GDLINE
  911F   4C   1E   41 		JMP POPJ
                      
  9122   20   E5   90 	SFD:	JSR GCHK
  9125   20   75   90 		JSR GSHWT1
  9128   A2   A2      		LDX #NARG1
  912A   20   85   52 		JSR VPOP	;Forward
  912D   20   5A   58 		JSR GT1NMX
  9130   B0   03      		BCS SFD1
  9132   20   2C   69 		JSR FLOTN1
  9135   20   3E   91 	SFD1:	JSR SFDX
  9138   20   64   90 		JSR GDLINE
  913B   4C   1E   41 		JMP POPJ
                      
  913E   A0   BC      	SFDX:	LDY #TEMPX1
  9140   20   F3   4C 		JSR XN1TOY	;Save Length in TEMPX1,2
  9143   20   A6   91 		JSR GETHED
  9146   A5   A2      		LDA NARG1
  9148   48           		PHA		;Save table index
  9149   20   01   92 		JSR MULSIN
  914C   A0   B8      		LDY #TEMPN7
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-275
LOGO	TURTLE-GRAPHICS ROUTINES

  914E   20   87   8E 		JSR XYTON2	;Restore interpolation fraction
  9151   20   AA   69 		JSR FMUL	;Get interpolation correction
  9154   A0   B4      		LDY #TEMPN5
  9156   20   87   8E 		JSR XYTON2	;Get uncorrected table value...
  9159   20   9D   69 		JSR FADD	;and correct it!
  915C   A0   BC      		LDY #TEMPX1
  915E   20   87   8E 		JSR XYTON2	;Get length back
  9161   20   AA   69 		JSR FMUL	;Multiply Length by fraction
  9164   A5   B3      		LDA ANSN1	;X-Incr. sign
  9166   F0   03      		BEQ SFDP1
  9168   20   F3   69 		JSR FCOMPL
  916B   A0   CB      	SFDP1:	LDY #XCOR	;Get XCOR in NARG2
  916D   20   87   8E 		JSR XYTON2
  9170   20   9D   69 		JSR FADD	;Add XCOR and NARG1 (X-incr.)
  9173   20   01   94 		JSR XCHK
  9176   68           		PLA		;Retrieve NARG1
  9177   85   A2      		STA NARG1
  9179   20   FC   91 		JSR MULCOS
  917C   A0   B8      		LDY #TEMPN7
  917E   20   87   8E 		JSR XYTON2	;Restore interpolation fraction
  9181   20   AA   69 		JSR FMUL	;Get interpolation correction
  9184   A0   AE      		LDY #TEMPN3
  9186   20   87   8E 		JSR XYTON2	;Get uncorrected table value...
  9189   20   A5   69 		JSR FSUBX	;and correct it!
  918C   A0   BC      		LDY #TEMPX1
  918E   20   87   8E 		JSR XYTON2	;Get length back
  9191   20   AA   69 		JSR FMUL	;Multiply Length by fraction
  9194   A5   C0      		LDA ANSN2	;Y-Incr. sign
  9196   F0   03      		BEQ SFDP2
  9198   20   F3   69 		JSR FCOMPL
  919B   A0   CF      	SFDP2:	LDY #YCOR
  919D   20   87   8E 		JSR XYTON2	;Get YCOR in NARG2
  91A0   20   9D   69 		JSR FADD	;Add YCOR and NARG1 (Y-incr.)
  91A3   4C   48   94 		JMP YCHK
                      
  91A6   A9   00      	GETHED:	LDA #$00
  91A8   85   B3      		STA ANSN1
  91AA   85   C0      		STA ANSN2
  91AC   A0   D3      		LDY #HEADNG
  91AE   20   87   8E 		JSR XYTON2	;Get HEADING in NARG2
  91B1   A0   D3      		LDY #HEADNG
  91B3   20   FF   4C 		JSR XYTON1	;And in NARG1
  91B6   20   57   6A 		JSR XINT1	;Make it integer...
  91B9   20   2C   69 		JSR FLOTN1	;then floating again, zapping fraction bits
  91BC   20   A5   69 		JSR FSUBX	;which remain after subtract
  91BF   A0   B8      		LDY #TEMPN7
  91C1   20   F3   4C 		JSR XN1TOY	;Save fraction for interpolating
  91C4   A0   D3      		LDY #HEADNG
  91C6   20   FF   4C 		JSR XYTON1	;Get heading back for munching
  91C9   A5   A3      		LDA NARG1+1
  91CB   10   05      		BPL HDPOS
  91CD   20   F3   69 		JSR FCOMPL
  91D0   E6   B3      		INC ANSN1	;Sign of X incr.
  91D2   A5   A2      	HDPOS:	LDA NARG1	;See if it's > 90.
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-276
LOGO	TURTLE-GRAPHICS ROUTINES

  91D4   C9   86      		CMP #$86
  91D6   90   21      		BCC HDYPOS
  91D8   D0   10      		BNE HDYNEG
  91DA   A5   A3      		LDA NARG1+1
  91DC   C9   5A      		CMP #$5A
  91DE   90   19      		BCC HDYPOS
  91E0   D0   08      		BNE HDYNEG
  91E2   A5   A4      		LDA NARG1+2
  91E4   D0   04      		BNE HDYNEG
  91E6   A5   A5      		LDA NARG1+3
  91E8   F0   0F      		BEQ HDYPOS
  91EA   A2   03      	HDYNEG:	LDX #$03
  91EC   BD   F9   94 	HDYNL:	LDA FCIRC1,X
  91EF   95   9E      		STA NARG2,X
  91F1   CA           		DEX
  91F2   10   F8      		BPL HDYNL
  91F4   20   A5   69 		JSR FSUBX	;Subtract from 180. if > 90.
  91F7   E6   C0      		INC ANSN2
  91F9   4C   57   6A 	HDYPOS:	JMP XINT1	;Make Heading integer
                      
  91FC   18           	MULCOS:	CLC		;Indexes 90-ANGLE-1 entry and following entry
  91FD   A9   5A      		LDA #$5A
  91FF   E5   A2      		SBC NARG1
                      
  9201   0A           	MULSIN:	ASL A		;Multiply by 2 for offset
  9202   48           		PHA		;Save index
  9203   A8           		TAY
  9204   C8           		INY
  9205   C8           		INY
  9206   AD   83   C0 		LDA GETRM2
  9209   E6   55      		INC BANK4K	;Enable bank 2 ghost-memory
  920B   B9   BA   DB 		LDA SINTB1,Y	;Get the table's entry
  920E   85   A2      		STA NARG1
  9210   B9   BB   DB 		LDA SINTB1+1,Y
  9213   85   A3      		STA NARG1+1
  9215   B9   72   DC 		LDA SINTB2,Y
  9218   85   A4      		STA NARG1+2
  921A   B9   73   DC 		LDA SINTB2+1,Y
  921D   85   A5      		STA NARG1+3
  921F   A0   B4      		LDY #TEMPN5
  9221   20   F3   4C 		JSR XN1TOY	;Save table value
  9224   68           		PLA		;Retrieve index
  9225   A8           		TAY
  9226   C8           		INY
  9227   C8           		INY
  9228   B9   BC   DB 		LDA SINTB1+2,Y	;Get the next entry for interpolating
  922B   85   9E      		STA NARG2
  922D   B9   BD   DB 		LDA SINTB1+3,Y
  9230   85   9F      		STA NARG2+1
  9232   B9   74   DC 		LDA SINTB2+2,Y
  9235   85   A0      		STA NARG2+2
  9237   B9   75   DC 		LDA SINTB2+3,Y
  923A   85   A1      		STA NARG2+3
  923C   A0   AE      		LDY #TEMPN3
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-277
LOGO	TURTLE-GRAPHICS ROUTINES

  923E   20   93   8E 		JSR XN2TOY	;Save table value
  9241   20   A5   69 		JSR FSUBX	;Get difference of entries in NARG1
  9244   AD   8B   C0 		LDA GETRM1
  9247   AD   8B   C0 		LDA GETRM1
  924A   C6   55      		DEC BANK4K	;Re-enable bank 1 ghost-memory
  924C   60           		RTS
                      
  924D   A9   00      	GCLEAR:	LDA #$00	;CLEAR Routine
  924F   85   AE      		STA TEMPN3
  9251   A9   20      		LDA #$20
  9253   85   A7      		STA TEMPNH+1
  9255   A0   00      		LDY #$00
  9257   84   A6      		STY TEMPNH
  9259   A5   AE      	D01B:	LDA TEMPN3
  925B   91   A6      		STA (TEMPNH),Y
  925D   20   D8   92 		JSR D0A2
  9260   C8           		INY
  9261   D0   F6      		BNE D01B
  9263   E6   A7      		INC TEMPNH+1
  9265   A5   A7      		LDA TEMPNH+1
  9267   29   1F      		AND #$1F
  9269   D0   EE      		BNE D01B
  926B   60           		RTS
                      
  926C   20   AA   94 	GPOSN:	JSR GNORM
  926F   A5   DF      		LDA COLR
  9271   85   B3      		STA ANSN1
  9273   A6   A0      		LDX NARG2+2
  9275   A4   A1      		LDY NARG2+3
  9277   A5   9E      		LDA NARG2
                      
  9279   85   DA      	D02E:	STA GRP2
  927B   86   D8      		STX GRP0
  927D   84   D9      		STY GRP1
  927F   48           		PHA
  9280   29   C0      		AND #$C0
  9282   85   DC      		STA GTMP4
  9284   4A           		LSR A
  9285   4A           		LSR A
  9286   05   DC      		ORA GTMP4
  9288   85   DC      		STA GTMP4
  928A   68           		PLA
  928B   85   DD      		STA GTMP4+1
  928D   0A           		ASL A
  928E   0A           		ASL A
  928F   0A           		ASL A
  9290   26   DD      		ROL GTMP4+1
  9292   0A           		ASL A
  9293   26   DD      		ROL GTMP4+1
  9295   0A           		ASL A
  9296   66   DC      		ROR GTMP4
  9298   A5   DD      		LDA GTMP4+1
  929A   29   1F      		AND #$1F
  929C   09   20      		ORA #$20
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-278
LOGO	TURTLE-GRAPHICS ROUTINES

  929E   85   DD      		STA GTMP4+1
  92A0   8A           		TXA
  92A1   C0   00      		CPY #$00
  92A3   F0   05      		BEQ D063
  92A5   A0   23      		LDY #$23
  92A7   69   04      		ADC #$04
  92A9   C8           	D062:	INY
  92AA   E9   07      	D063:	SBC #$07
  92AC   B0   FB      		BCS D062
  92AE   84   DB      		STY GRP5
  92B0   AA           		TAX
  92B1   BD   DA   92 		LDA D1EA-256,X
  92B4   85   D7      		STA GANSN2
  92B6   98           		TYA
  92B7   4A           		LSR A
  92B8   A5   B3      		LDA ANSN1
  92BA   85   AE      	D075:	STA TEMPN3
  92BC   B0   1A      		BCS D0A2
  92BE   60           		RTS
                      
  92BF   10   23      	D088:	BPL D0AE
  92C1   A5   D7      		LDA GANSN2
  92C3   4A           		LSR A
  92C4   B0   05      		BCS D094
  92C6   49   C0      		EOR #$C0
  92C8   85   D7      	D091:	STA GANSN2
  92CA   60           		RTS
                      
  92CB   88           	D094:	DEY
  92CC   10   02      		BPL D099
  92CE   A0   27      		LDY #$27
  92D0   A9   C0      	D099:	LDA #$C0
  92D2   85   D7      	D09B:	STA GANSN2
  92D4   84   DB      		STY GRP5
  92D6   A5   AE      		LDA TEMPN3
  92D8   0A           	D0A2:	ASL A
  92D9   C9   C0      		CMP #$C0
  92DB   10   06      		BPL D0AD
  92DD   A5   AE      		LDA TEMPN3
  92DF   49   7F      		EOR #$7F
  92E1   85   AE      		STA TEMPN3
  92E3   60           	D0AD:	RTS
                      
  92E4   A5   D7      	D0AE:	LDA GANSN2
  92E6   0A           		ASL A
  92E7   49   80      		EOR #$80
  92E9   30   DD      		BMI D091
  92EB   A9   81      		LDA #$81
  92ED   C8           		INY
  92EE   C0   28      		CPY #$28
  92F0   90   E0      		BCC D09B
  92F2   A0   00      		LDY #$00
  92F4   B0   DC      		BCS D09B	;(Always taken)
                      
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-279
LOGO	TURTLE-GRAPHICS ROUTINES

  92F6   30   2F      	D0F9:	BMI D12B
  92F8   18           		CLC
  92F9   A5   DD      		LDA GTMP4+1
  92FB   2C   DA   93 		BIT D1EA
  92FE   D0   22      		BNE D125
  9300   06   DC      		ASL GTMP4
  9302   B0   1A      		BCS D121
  9304   2C   EC   93 		BIT D0F3
  9307   F0   05      		BEQ D111
  9309   69   1F      		ADC #$1F
  930B   38           		SEC
  930C   B0   12      		BCS D123
                      
  930E   69   23      	D111:	ADC #$23
  9310   48           		PHA
  9311   A5   DC      		LDA GTMP4
  9313   69   B0      		ADC #$B0
  9315   B0   02      		BCS D11C
  9317   69   F0      		ADC #$F0
  9319   85   DC      	D11C:	STA GTMP4
  931B   68           		PLA
  931C   B0   02      		BCS D123
  931E   69   1F      	D121:	ADC #$1F
  9320   66   DC      	D123:	ROR GTMP4
  9322   69   FC      	D125:	ADC #$FC
  9324   85   DD      	D127:	STA GTMP4+1
  9326   60           		RTS
                      
  9327   A5   DD      	D12B:	LDA GTMP4+1
  9329   69   04      	D12D:	ADC #$04
  932B   2C   DA   93 		BIT D1EA
  932E   D0   F4      		BNE D127
  9330   06   DC      		ASL GTMP4
  9332   90   18      		BCC D151
  9334   69   E0      		ADC #$E0
  9336   18           		CLC
  9337   2C   2A   93 		BIT D12D+1
  933A   F0   12      		BEQ D153
  933C   A5   DC      		LDA GTMP4
  933E   69   50      		ADC #$50
  9340   49   F0      		EOR #$F0
  9342   F0   02      		BEQ D14A
  9344   49   F0      		EOR #$F0
  9346   85   DC      	D14A:	STA GTMP4
  9348   A9   20      		LDA #$20
  934A   90   02      		BCC D153
  934C   69   E0      	D151:	ADC #$E0
  934E   66   DC      	D153:	ROR GTMP4
  9350   90   D2      		BCC D127	;(Always branches)
                      
  9352   48           	D164:	PHA
  9353   38           		SEC
  9354   E5   D8      		SBC GRP0
  9356   48           		PHA
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-280
LOGO	TURTLE-GRAPHICS ROUTINES

  9357   8A           		TXA
  9358   E5   D9      		SBC GRP1
  935A   85   B7      		STA TEMPN6+1
  935C   B0   0A      		BCS D17C
  935E   68           		PLA
  935F   49   FF      		EOR #$FF
  9361   69   01      		ADC #$01
  9363   48           		PHA
  9364   A9   00      		LDA #$00
  9366   E5   B7      		SBC TEMPN6+1
  9368   85   B5      	D17C:	STA TEMPN5+1
  936A   85   B9      		STA TEMPN7+1
  936C   68           		PLA
  936D   85   B4      		STA TEMPN5
  936F   85   B8      		STA TEMPN7
  9371   68           		PLA
  9372   85   D8      		STA GRP0
  9374   86   D9      		STX GRP1
  9376   98           		TYA
  9377   18           		CLC
  9378   E5   DA      		SBC GRP2
  937A   90   04      		BCC D197
  937C   49   FF      		EOR #$FF
  937E   69   FE      		ADC #$FE
  9380   85   B6      	D197:	STA TEMPN6
  9382   84   DA      		STY GRP2
  9384   66   B7      		ROR TEMPN6+1
  9386   38           		SEC
  9387   E5   B4      		SBC TEMPN5
  9389   AA           		TAX
  938A   A9   FF      		LDA #$FF
  938C   E5   B5      		SBC TEMPN5+1
  938E   85   AF      		STA TEMPN3+1
  9390   A4   DB      		LDY GRP5
  9392   B0   05      		BCS D1B2	;(Always taken)
  9394   0A           	D1AD:	ASL A
  9395   20   BF   92 		JSR D088
  9398   38           		SEC
  9399   A5   B8      	D1B2:	LDA TEMPN7
  939B   65   B6      		ADC TEMPN6
  939D   85   B8      		STA TEMPN7
  939F   A5   B9      		LDA TEMPN7+1
  93A1   E9   00      		SBC #$00
  93A3   85   B9      	D1BC:	STA TEMPN7+1
  93A5   A5   C2      		LDA ANSNX
  93A7   F0   04      		BEQ XORHK1
  93A9   A9   FF      		LDA #$FF
  93AB   D0   04      		BNE XORHK2
  93AD   B1   DC      	XORHK1:	LDA (GTMP4),Y
  93AF   45   AE      		EOR TEMPN3
  93B1   25   D7      	XORHK2:	AND GANSN2
  93B3   51   DC      		EOR (GTMP4),Y
  93B5   91   DC      		STA (GTMP4),Y
  93B7   E8           		INX
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-281
LOGO	TURTLE-GRAPHICS ROUTINES

  93B8   D0   05      		BNE D1CF
  93BA   E6   AF      		INC TEMPN3+1
  93BC   D0   01      		BNE D1CF
  93BE   60           		RTS
  93BF   A5   B7      	D1CF:	LDA TEMPN6+1
  93C1   B0   D1      		BCS D1AD
  93C3   20   F6   92 		JSR D0F9
  93C6   18           		CLC
  93C7   A5   B8      		LDA TEMPN7
  93C9   65   B4      		ADC TEMPN5
  93CB   85   B8      		STA TEMPN7
  93CD   A5   B9      		LDA TEMPN7+1
  93CF   65   B5      		ADC TEMPN5+1
  93D1   50   D0      		BVC D1BC	;(Always taken)
                      
  93D3   81           		$81
  93D4   82           		$82
  93D5   84           		$84
  93D6   88           		$88
  93D7   90           		$90
  93D8   A0           		$A0
  93D9   C0           		$C0
                      
  93DA   1C           	D1EA:	$1C
                      
  93DB   FF           	D1EB:	$FF
  93DC   FE           	D1EC:	$FE
  93DD   FA           		$FA
  93DE   F4           		$F4
  93DF   EC           		$EC
  93E0   E1           		$E1
  93E1   D4           		$D4
  93E2   C5           		$C5
  93E3   B4           		$B4
  93E4   A1           		$A1
  93E5   8D           		$8D
  93E6   78           		$78
  93E7   61           		$61
  93E8   49           		$49
  93E9   31           		$31
  93EA   18           		$18
  93EB   FF           		$FF
                      
  93EC   03           	D0F3:	$03
                      
  93ED   20   AA   94 	GLINE:	JSR GNORM
  93F0   A5   DB      		LDA GRP5
  93F2   4A           		LSR A
  93F3   A5   DF      		LDA COLR
  93F5   20   BA   92 		JSR D075
  93F8   A6   A1      		LDX NARG2+3
  93FA   A5   A0      		LDA NARG2+2
  93FC   A4   9E      		LDY NARG2
  93FE   4C   52   93 		JMP D164
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-282
LOGO	TURTLE-GRAPHICS ROUTINES

                      
  9401   A0   3C      	XCHK:	LDY #A1L
  9403   20   F3   4C 		JSR XN1TOY
  9406   20   57   6A 		JSR XINT1
  9409   A2   A2      		LDX #NARG1
  940B   20   7B   58 		JSR CHKINT
  940E   B0   33      		BCS D3AC1
  9410   A5   A3      		LDA NARG1+1
  9412   30   0A      		BMI XCHKM
  9414   D0   2D      		BNE D3AC1
  9416   A5   A2      		LDA NARG1
  9418   C9   8C      		CMP #$8C
  941A   B0   27      		BCS D3AC1
  941C   90   0A      		BCC XRTS
  941E   C9   FF      	XCHKM:	CMP #$FF
  9420   D0   21      		BNE D3AC1
  9422   A5   A2      		LDA NARG1
  9424   C9   74      		CMP #$74
  9426   90   1B      		BCC D3AC1
  9428   A2   03      	XRTS:	LDX #$03
  942A   B5   3C      	XCHL:	LDA A1L,X
  942C   95   CB      		STA XCOR,X
  942E   CA           		DEX
  942F   10   F9      		BPL XCHL
  9431   A5   A2      	STOX:	LDA NARG1
  9433   85   C5      		STA EPOINT
  9435   A5   A3      		LDA NARG1+1
  9437   85   C6      		STA EPOINT+1
  9439   60           		RTS
                      
  943A   A2   03      	D3AC:	LDX #$03
  943C   B5   40      	D3ACL:	LDA A3L,X
  943E   95   CB      		STA XCOR,X
  9440   CA           		DEX
  9441   10   F9      		BPL D3ACL
                      
  9443   A9   24      	D3AC1:	LDA #XOOB	;Error "Out of Bounds"
  9445   4C   47   61 		JMP ERROR
                      
  9448   A0   3C      	YCHK:	LDY #A1L
  944A   20   F3   4C 		JSR XN1TOY
  944D   A2   03      		LDX #$03
  944F   BD   FD   94 	YCHL1:	LDA GRPHK1,X
  9452   95   9E      		STA NARG2,X
  9454   CA           		DEX
  9455   10   F8      		BPL YCHL1
  9457   20   AA   69 		JSR FMUL	;First multiply by 0.8
  945A   20   57   6A 		JSR XINT1
  945D   A2   A2      		LDX #NARG1
  945F   20   7B   58 		JSR CHKINT
  9462   B0   D6      		BCS D3AC
  9464   A5   A3      		LDA NARG1+1
  9466   30   0A      		BMI YCHKM
  9468   D0   D0      		BNE D3AC
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-283
LOGO	TURTLE-GRAPHICS ROUTINES

  946A   A5   A2      		LDA NARG1
  946C   C9   60      		CMP #$60
  946E   90   0C      		BCC YRTS
  9470   B0   C8      		BCS D3AC
  9472   C9   FF      	YCHKM:	CMP #$FF
  9474   D0   C4      		BNE D3AC
  9476   A5   A2      		LDA NARG1
  9478   C9   A0      		CMP #$A0
  947A   90   BE      		BCC D3AC
  947C   A2   03      	YRTS:	LDX #$03
  947E   B5   3C      	YCHL:	LDA A1L,X
  9480   95   CF      		STA YCOR,X
  9482   CA           		DEX
  9483   10   F9      		BPL YCHL
  9485   A5   A2      	STOY:	LDA NARG1
  9487   85   44      		STA A5L
  9489   60           		RTS
                      
  948A   A0   CB      	GETX:	LDY #XCOR
  948C   20   FF   4C 		JSR XYTON1
  948F   20   57   6A 		JSR XINT1
  9492   4C   31   94 		JMP STOX
                      
  9495   A0   CF      	GETY:	LDY #YCOR
  9497   20   FF   4C 		JSR XYTON1
  949A   20   57   6A 		JSR XINT1
  949D   4C   85   94 		JMP STOY
                      
  94A0   A2   03      	GSAVX:	LDX #$03
  94A2   B5   CB      	GSVXL:	LDA XCOR,X
  94A4   95   40      		STA A3L,X
  94A6   CA           		DEX
  94A7   10   F9      		BPL GSVXL
  94A9   60           		RTS
                      
  94AA   38           	GNORM:	SEC
  94AB   A9   5F      		LDA #$5F
  94AD   E5   44      		SBC A5L		;Subtract Ycoord from 95.
  94AF   85   9E      		STA NARG2
  94B1   18           	GNORM2:	CLC
  94B2   A5   C5      		LDA EPOINT
  94B4   69   8C      		ADC #$8C	;Add 140. to Xcoord
  94B6   85   A0      		STA NARG2+2
  94B8   A5   C6      		LDA EPOINT+1
  94BA   69   00      		ADC #$00
  94BC   85   A1      		STA NARG2+3
  94BE   60           	GNORM1:	RTS
                      
       94BF           	ZZZZZZ=.			;(Label quickly noticeable in symbol table)
                      	;	End of program portion.
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-284
LOGO	TURTLE-GRAPHICS ROUTINES

                      	;	Monitor data:
                      
  94BF   56   4D   3C 	CHRTBL:	.ASCII "VM<NIG S:."
  94C2   4E   49   47 
  94C5   20   53   3A 
  94C8   2E           
  94C9   05           		$05	;^E
  94CA   0D           		$0D	;(Carriage-return)
  94CB   10           		$10	;^P
  94CC   0B           		$0B	;^K
  94CD   02           		$02	;^B
                      
  94CE   0E   74      	SUBTBL:	.ADDR	VFY
  94D0   04   74      		.ADDR	MOVE
  94D2   F8   73      		.ADDR	LT
  94D4   49   74      		.ADDR	SETNRM
  94D6   45   74      		.ADDR	SETINV
  94D8   75   74      		.ADDR	GO
  94DA   DC   73      		.ADDR	BLANK
  94DC   82   74      		.ADDR	BSWTCH
  94DE   F0   73      		.ADDR	SETMOD
  94E0   F0   73      		.ADDR	SETMOD
  94E2   A6   74      		.ADDR	REGZ
  94E4   BE   74      		.ADDR	CRMON
  94E6   5E   74      		.ADDR	OUTPRT
  94E8   52   74      		.ADDR	INPRT
  94EA   A9   74      		.ADDR	XMON
                      
  94EC   41   58   59 	RTBL:	.ASCII "AXYPS"
  94EF   50   53      
                      
  94F1   83           	FLT10:	$83	;Floating-point constant, 10.0
  94F2   50           		$50
  94F3   00           		$00
  94F4   00           		$00
                      
  94F5   88           	FCIRC:	$88	;Floating-point constant, 360.0
  94F6   5A           		$5A
  94F7   00           		$00
  94F8   00           		$00
                      
  94F9   87           	FCIRC1:	$87	;Floating-point constant, 180.0
  94FA   5A           		$5A
  94FB   00           		$00
  94FC   00           		$00
                      
  94FD   7F           	GRPHK1:	$7F	;Floating-point constant, 0.8
  94FE   66           		$66
  94FF   66           		$66
  9500   66           		$66
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-285
LOGO	SYSTEM TABLES

                      	.SBTTL	System Tables
                      
       3000           	.=SYSTAB*$100		;Original load area
                      
                      	;	System Function address table:
                      	;	(Ghost-memory bank 2)
                      
  3000   CD   51      		.ADDR	SYSBUG		;For INULL, in case of indexing error
  3002   1D   7E      		.ADDR	SPTHNG
  3004   81   8A      		.ADDR	SWORD
  3006   42   7E      		.ADDR	SPWRDP
  3008   AD   78      		.ADDR	SUNSUM
  300A   66   77      		.ADDR	SUNDIF
  300C   F6   7B      		.ADDR	SMAKE
  300E   1E   7C      		.ADDR	SOUTPT
  3010   36   7C      		.ADDR	SSTOP
  3012   AA   7F      		.ADDR	SPRINT
  3014   BA   7F      		.ADDR	STYPE
  3016   C7   7F      		.ADDR	SDEFIN
  3018   57   7C      		.ADDR	SDEBUG
  301A   7F   7C      		.ADDR	SCNTIN
  301C   36   54      		.ADDR	STPPKZ
  301E   DB   7C      		.ADDR	SELSE
  3020   56   7B      		.ADDR	SSNTNC
  3022   C3   79      		.ADDR	SBOTH
  3024   E1   79      		.ADDR	SEITHR
  3026   02   46      		.ADDR	XXSFR1	;Then
  3028   B5   79      		.ADDR	SNOT
  302A   02   43      		.ADDR	PARLOP	;Left-parenthesis
  302C   07   46      		.ADDR	XXSFR2	;Right-parenthesis
  302E   88   7C      		.ADDR	SIF
  3030   D3   7D      		.ADDR	SRUN
  3032   06   7D      		.ADDR	SGO
  3034   E9   51      		.ADDR	SBPT
  3036   2A   40      		.ADDR	LOGO1	;Goodbye
  3038   94   7E      		.ADDR	SGCOLL
  303A   5D   7E      		.ADDR	SNODES
  303C   FD   88      		.ADDR	SBTFST
  303E   DB   80      		.ADDR	SFIRST
  3040   F0   8B      		.ADDR	SBTLST
  3042   3A   81      		.ADDR	SLAST
  3044   D2   82      		.ADDR	STO
  3046   6A   83      		.ADDR	SEDIT
  3048   AD   83      		.ADDR	SEND
  304A   05   80      		.ADDR	STEXT
  304C   22   91      		.ADDR	SFD
  304E   03   91      		.ADDR	SBK
  3050   3C   8E      		.ADDR	SRT
  3052   63   8E      		.ADDR	SLT
  3054   67   8D      		.ADDR	SLIST
  3056   AD   8D      		.ADDR	SCS
  3058   0F   8E      		.ADDR	SHOME
  305A   FB   8D      		.ADDR	SPENUP
  305C   05   8E      		.ADDR	SPENDN
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-286
LOGO	SYSTEM TABLES

  305E   3F   8D      		.ADDR	SEMPTP
  3060   34   90      		.ADDR	SSHOWT
  3062   43   90      		.ADDR	SHIDET
  3064   9F   8E      		.ADDR	STS
  3066   C5   7E      		.ADDR	STITLE
  3068   65   7A      		.ADDR	SFPUT
  306A   DA   83      		.ADDR	SPO
  306C   0C   46      		.ADDR	XXSFR3	;All
  306E   0C   46      		.ADDR	XXSFR3	;Names
  3070   E0   87      		.ADDR	SERASE
  3072   6B   71      		.ADDR	SREAD
  3074   CE   70      		.ADDR	SSAVE
  3076   6F   7E      		.ADDR	SREQU
  3078   E8   7D      		.ADDR	STHING
  307A   9A   7E      		.ADDR	SRETRV
  307C   85   77      		.ADDR	SSUM
  307E   B8   77      		.ADDR	SDIF
  3080   E3   77      		.ADDR	SPROD
  3082   55   78      		.ADDR	SDIVID
  3084   64   79      		.ADDR	SGRTR
  3086   AC   79      		.ADDR	SLESS
  3088   45   7C      		.ADDR	SCOMMT
  308A   9B   81      		.ADDR	SEQUAL
  308C   26   87      		.ADDR	STRCBK
  308E   24   84      		.ADDR	SPOTS
  3090   0C   46      		.ADDR	XXSFR3	;Titles
  3092   0C   46      		.ADDR	XXSFR3	;Procedures
  3094   CC   89      		.ADDR	SPEEK
  3096   DC   89      		.ADDR	SPOKE
  3098   85   77      		.ADDR	SSUM
  309A   B8   77      		.ADDR	SDIF
  309C   E3   77      		.ADDR	SPROD
  309E   55   78      		.ADDR	SDIVID
  30A0   64   79      		.ADDR	SGRTR
  30A2   AC   79      		.ADDR	SLESS
  30A4   9B   81      		.ADDR	SEQUAL
  30A6   8D   7A      		.ADDR	SLPUT
  30A8   EF   89      		.ADDR	SRANDM
  30AA   28   8A      		.ADDR	SCTYI
  30AC   48   8A      		.ADDR	SCURSR
  30AE   21   8A      		.ADDR	SRNDMZ
  30B0   72   8A      		.ADDR	SCALL
  30B2   12   8D      		.ADDR	SLISTP
  30B4   21   8D      		.ADDR	SNMBRP
  30B6   A1   8D      		.ADDR	SCLINP
  30B8   B9   7E      		.ADDR	SCHNGE
  30BA   81   7D      		.ADDR	SRPEAT
  30BC   F3   8E      		.ADDR	SSETX
  30BE   0A   8F      		.ADDR	SSETY
  30C0   24   8F      		.ADDR	SSETXY
  30C2   48   8F      		.ADDR	SSETH
  30C4   5C   8F      		.ADDR	SSETT
  30C6   24   8E      		.ADDR	SXCOR
  30C8   2C   8E      		.ADDR	SYCOR
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-287
LOGO	SYSTEM TABLES

  30CA   34   8E      		.ADDR	SHDING
  30CC   F1   8D      		.ADDR	SNDSPL
  30CE   A7   8D      		.ADDR	SCLEAR
  30D0   C4   78      		.ADDR	SINT
  30D2   52   90      		.ADDR	SFULL
  30D4   5B   90      		.ADDR	SMIX
  30D6   36   70      		.ADDR	SDELET
  30D8   DC   71      		.ADDR	SCATLG
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-288
LOGO	SYSTEM TABLES

                      	;	Error-string address table:
                      
       D0D8           	ERRTBL=.+TDIFF-2	;(Ghost-memory bank 2)
                      
  30DA   2C   D1      		.ADDR	XXUOP+TDIFF
  30DC   4C   D1      		.ADDR	XXEOL+TDIFF
  30DE   63   D1      		.ADDR	XXUDF+TDIFF
  30E0   80   D1      		.ADDR	XXHNV+TDIFF
  30E2   8F   D1      		.ADDR	XXTMO+TDIFF
  30E4   A8   D1      		.ADDR	XXNOP+TDIFF
  30E6   B8   D1      		.ADDR	XXRPN+TDIFF
  30E8   C5   D1      		.ADDR	XXIFX+TDIFF
  30EA   E2   D1      		.ADDR	XXVNA+TDIFF
  30EC   FA   D1      		.ADDR	XXTIP+TDIFF
  30EE   16   D2      		.ADDR	XXWTA+TDIFF
  30F0   30   D2      		.ADDR	XXUBL+TDIFF
  30F2   42   D2      		.ADDR	XXNTL+TDIFF
  30F4   6D   D2      		.ADDR	XXNTF+TDIFF
  30F6   92   D2      		.ADDR	XXELS+TDIFF
  30F8   A7   D2      		.ADDR	XXBRK+TDIFF
  30FA   BB   D2      		.ADDR	XXLAB+TDIFF
  30FC   E3   D2      		.ADDR	XXTHN+TDIFF
  30FE   00   00      		.ADDR	0
  3100   F8   D2      		.ADDR	XXLNF+TDIFF
  3102   11   D3      		.ADDR	XXEDT+TDIFF
  3104   32   D3      		.ADDR	XXDEF+TDIFF
  3106   47   D3      		.ADDR	XXETL+TDIFF
  3108   66   D3      		.ADDR	XXNED+TDIFF
  310A   7E   D3      		.ADDR	XXOPO+TDIFF
  310C   00   00      		.ADDR	0
  310E   A1   D3      		.ADDR	XXTML+TDIFF
  3110   BB   D3      		.ADDR	XXDBZ+TDIFF
  3112   D7   D3      		.ADDR	XXNWE+TDIFF
  3114   FC   D3      		.ADDR	XXLNT+TDIFF
  3116   10   D4      		.ADDR	XXILN+TDIFF
  3118   24   D4      		.ADDR	XXOFL+TDIFF
  311A   38   D4      		.ADDR	XXNDF+TDIFF
  311C   49   D4      		.ADDR	XXCRS+TDIFF
  311E   6A   D4      		.ADDR	XXYNT+TDIFF
  3120   84   D4      		.ADDR	XXOOB+TDIFF
  3122   99   D4      		.ADDR	XXIOR+TDIFF
  3124   A3   D4      		.ADDR	XXWTP+TDIFF
  3126   BF   D4      		.ADDR	XXFNF+TDIFF
  3128   CE   D4      		.ADDR	XXDKF+TDIFF
  312A   EE   D4      		.ADDR	XXLKF+TDIFF
                      
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-289
LOGO	SYSTEM TABLES

                      	;	Error Messages:
                      	;	(Ghost-memory bank 2)
                      
  312C   59   6F   75 	XXUOP:	.ASCII "You don't say what to do with "
  312F   20   64   6F 
  3132   6E   27   74 
  3135   20   73   61 
  3138   79   20   77 
  313B   68   61   74 
  313E   20   74   6F 
  3141   20   64   6F 
  3144   20   77   69 
  3147   74   68   20 
  314A   00           		$00
  314B   FF           		$FF
  314C   55   6E   65 	XXEOL:	.ASCII "Unexpected end of line"
  314F   78   70   65 
  3152   63   74   65 
  3155   64   20   65 
  3158   6E   64   20 
  315B   6F   66   20 
  315E   6C   69   6E 
  3161   65           
  3162   FF           		$FF
  3163   59   6F   75 	XXUDF:	.ASCII "You haven't told me how to "
  3166   20   68   61 
  3169   76   65   6E 
  316C   27   74   20 
  316F   74   6F   6C 
  3172   64   20   6D 
  3175   65   20   68 
  3178   6F   77   20 
  317B   74   6F   20 
  317E   00           		$00
  317F   FF           		$FF
  3180   00           	XXHNV:	$00
  3181   20   68   61 		.ASCII " has no value"
  3184   73   20   6E 
  3187   6F   20   76 
  318A   61   6C   75 
  318D   65           
  318E   FF           		$FF
  318F   00           	XXTMO:	$00
  3190   20   6F   75 		.ASCII " output too many things"
  3193   74   70   75 
  3196   74   20   74 
  3199   6F   6F   20 
  319C   6D   61   6E 
  319F   79   20   74 
  31A2   68   69   6E 
  31A5   67   73      
  31A7   FF           		$FF
  31A8   00           	XXNOP:	$00
  31A9   20   64   69 		.ASCII " didn't output"
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-290
LOGO	SYSTEM TABLES

  31AC   64   6E   27 
  31AF   74   20   6F 
  31B2   75   74   70 
  31B5   75   74      
  31B7   FF           		$FF
  31B8   55   6E   65 	XXRPN:	.ASCII "Unexpected )"
  31BB   78   70   65 
  31BE   63   74   65 
  31C1   64   20   29 
  31C4   FF           		$FF
  31C5   54   68   65 	XXIFX:	.ASCII "There's nothing before the "
  31C8   72   65   27 
  31CB   73   20   6E 
  31CE   6F   74   68 
  31D1   69   6E   67 
  31D4   20   62   65 
  31D7   66   6F   72 
  31DA   65   20   74 
  31DD   68   65   20 
  31E0   00           		$00
  31E1   FF           		$FF
  31E2   59   6F   75 	XXVNA:	.ASCII "You need ( )'s around "
  31E5   20   6E   65 
  31E8   65   64   20 
  31EB   28   20   29 
  31EE   27   73   20 
  31F1   61   72   6F 
  31F4   75   6E   64 
  31F7   20           
  31F8   00           		$00
  31F9   FF           		$FF
  31FA   54   6F   6F 	XXTIP:	.ASCII "Too much inside parenthesis"
  31FD   20   6D   75 
  3200   63   68   20 
  3203   69   6E   73 
  3206   69   64   65 
  3209   20   70   61 
  320C   72   65   6E 
  320F   74   68   65 
  3212   73   69   73 
  3215   FF           		$FF
  3216   00           	XXWTA:	$00
  3217   20   64   6F 		.ASCII " doesn't like "
  321A   65   73   6E 
  321D   27   74   20 
  3220   6C   69   6B 
  3223   65   20      
  3225   01           		$01
  3226   20   61   73 		.ASCII " as input"
  3229   20   69   6E 
  322C   70   75   74 
  322F   FF           		$FF
  3230   00           	XXUBL:	$00
  3231   20   69   73 		.ASCII " is used by LOGO"
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-291
LOGO	SYSTEM TABLES

  3234   20   75   73 
  3237   65   64   20 
  323A   62   79   20 
  323D   4C   4F   47 
  3240   4F           
  3241   FF           		$FF
  3242   00           	XXNTL:	$00
  3243   20   73   68 		.ASCII " should only be called inside a procedure"
  3246   6F   75   6C 
  3249   64   20   6F 
  324C   6E   6C   79 
  324F   20   62   65 
  3252   20   63   61 
  3255   6C   6C   65 
  3258   64   20   69 
  325B   6E   73   69 
  325E   64   65   20 
  3261   61   20   70 
  3264   72   6F   63 
  3267   65   64   75 
  326A   72   65      
  326C   FF           		$FF
  326D   00           	XXNTF:	$00
  326E   20   77   61 		.ASCII " was given instead of TRUE or FALSE"
  3271   73   20   67 
  3274   69   76   65 
  3277   6E   20   69 
  327A   6E   73   74 
  327D   65   61   64 
  3280   20   6F   66 
  3283   20   54   52 
  3286   55   45   20 
  3289   6F   72   20 
  328C   46   41   4C 
  328F   53   45      
  3291   FF           		$FF
  3292   45   4C   53 	XXELS:	.ASCII "ELSE is out of place"
  3295   45   20   69 
  3298   73   20   6F 
  329B   75   74   20 
  329E   6F   66   20 
  32A1   70   6C   61 
  32A4   63   65      
  32A6   FF           		$FF
  32A7   49   20   77 	XXBRK:	.ASCII "I was told to pause"
  32AA   61   73   20 
  32AD   74   6F   6C 
  32B0   64   20   74 
  32B3   6F   20   70 
  32B6   61   75   73 
  32B9   65           
  32BA   FF           		$FF
  32BB   54   68   65 	XXLAB:	.ASCII "There's a label in the middle of a line"
  32BE   72   65   27 
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-292
LOGO	SYSTEM TABLES

  32C1   73   20   61 
  32C4   20   6C   61 
  32C7   62   65   6C 
  32CA   20   69   6E 
  32CD   20   74   68 
  32D0   65   20   6D 
  32D3   69   64   64 
  32D6   6C   65   20 
  32D9   6F   66   20 
  32DC   61   20   6C 
  32DF   69   6E   65 
  32E2   FF           		$FF
  32E3   54   48   45 	XXTHN:	.ASCII "THEN is out of place"
  32E6   4E   20   69 
  32E9   73   20   6F 
  32EC   75   74   20 
  32EF   6F   66   20 
  32F2   70   6C   61 
  32F5   63   65      
  32F7   FF           		$FF
  32F8   49   20   63 	XXLNF:	.ASCII "I can't find the label "
  32FB   61   6E   27 
  32FE   74   20   66 
  3301   69   6E   64 
  3304   20   74   68 
  3307   65   20   6C 
  330A   61   62   65 
  330D   6C   20      
  330F   00           		$00
  3310   FF           		$FF
  3311   59   6F   75 	XXEDT:	.ASCII "You're already editing something"
  3314   27   72   65 
  3317   20   61   6C 
  331A   72   65   61 
  331D   64   79   20 
  3320   65   64   69 
  3323   74   69   6E 
  3326   67   20   73 
  3329   6F   6D   65 
  332C   74   68   69 
  332F   6E   67      
  3331   FF           		$FF
  3332   00           	XXDEF:	$00
  3333   20   69   73 		.ASCII " is already defined"
  3336   20   61   6C 
  3339   72   65   61 
  333C   64   79   20 
  333F   64   65   66 
  3342   69   6E   65 
  3345   64           
  3346   FF           		$FF
  3347   59   6F   75 	XXETL:	.ASCII "You can only edit at top level"
  334A   20   63   61 
  334D   6E   20   6F 
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-293
LOGO	SYSTEM TABLES

  3350   6E   6C   79 
  3353   20   65   64 
  3356   69   74   20 
  3359   61   74   20 
  335C   74   6F   70 
  335F   20   6C   65 
  3362   76   65   6C 
  3365   FF           		$FF
  3366   59   6F   75 	XXNED:	.ASCII "You're not in Edit mode"
  3369   27   72   65 
  336C   20   6E   6F 
  336F   74   20   69 
  3372   6E   20   45 
  3375   64   69   74 
  3378   20   6D   6F 
  337B   64   65      
  337D   FF           		$FF
  337E   59   6F   75 	XXOPO:	.ASCII "You can only say "
  3381   20   63   61 
  3384   6E   20   6F 
  3387   6E   6C   79 
  338A   20   73   61 
  338D   79   20      
  338F   00           		$00
  3390   20   74   6F 		.ASCII " to PO, ER, etc."
  3393   20   50   4F 
  3396   2C   20   45 
  3399   52   2C   20 
  339C   65   74   63 
  339F   2E           
  33A0   FF           		$FF
  33A1   54   6F   6F 	XXTML:	.ASCII "Too many display commands"
  33A4   20   6D   61 
  33A7   6E   79   20 
  33AA   64   69   73 
  33AD   70   6C   61 
  33B0   79   20   63 
  33B3   6F   6D   6D 
  33B6   61   6E   64 
  33B9   73           
  33BA   FF           		$FF
  33BB   59   6F   75 	XXDBZ:	.ASCII "You tried to divide by zero"
  33BE   20   74   72 
  33C1   69   65   64 
  33C4   20   74   6F 
  33C7   20   64   69 
  33CA   76   69   64 
  33CD   65   20   62 
  33D0   79   20   7A 
  33D3   65   72   6F 
  33D6   FF           		$FF
  33D7   59   6F   75 	XXNWE:	.ASCII "You can't do that while in Edit mode"
  33DA   20   63   61 
  33DD   6E   27   74 
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-294
LOGO	SYSTEM TABLES

  33E0   20   64   6F 
  33E3   20   74   68 
  33E6   61   74   20 
  33E9   77   68   69 
  33EC   6C   65   20 
  33EF   69   6E   20 
  33F2   45   64   69 
  33F5   74   20   6D 
  33F8   6F   64   65 
  33FB   FF           		$FF
  33FC   4C   69   6E 	XXLNT:	.ASCII "Line number too big"
  33FF   65   20   6E 
  3402   75   6D   62 
  3405   65   72   20 
  3408   74   6F   6F 
  340B   20   62   69 
  340E   67           
  340F   FF           		$FF
  3410   49   6C   6C 	XXILN:	.ASCII "Illegal line number"
  3413   65   67   61 
  3416   6C   20   6C 
  3419   69   6E   65 
  341C   20   6E   75 
  341F   6D   62   65 
  3422   72           
  3423   FF           		$FF
  3424   41   72   69 	XXOFL:	.ASCII "Arithmetic overflow"
  3427   74   68   6D 
  342A   65   74   69 
  342D   63   20   6F 
  3430   76   65   72 
  3433   66   6C   6F 
  3436   77           
  3437   FF           		$FF
  3438   00           	XXNDF:	$00
  3439   20   69   73 		.ASCII " is not defined"
  343C   20   6E   6F 
  343F   74   20   64 
  3442   65   66   69 
  3445   6E   65   64 
  3448   FF           		$FF
  3449   43   75   72 	XXCRS:	.ASCII "Cursor coordinates off of screen"
  344C   73   6F   72 
  344F   20   63   6F 
  3452   6F   72   64 
  3455   69   6E   61 
  3458   74   65   73 
  345B   20   6F   66 
  345E   66   20   6F 
  3461   66   20   73 
  3464   63   72   65 
  3467   65   6E      
  3469   FF           		$FF
  346A   59   6F   75 	XXYNT:	.ASCII "You need a turtle to do "
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-295
LOGO	SYSTEM TABLES

  346D   20   6E   65 
  3470   65   64   20 
  3473   61   20   74 
  3476   75   72   74 
  3479   6C   65   20 
  347C   74   6F   20 
  347F   64   6F   20 
  3482   00           		$00
  3483   FF           		$FF
  3484   54   75   72 	XXOOB:	.ASCII "Turtle Out-of-Bounds"
  3487   74   6C   65 
  348A   20   4F   75 
  348D   74   2D   6F 
  3490   66   2D   42 
  3493   6F   75   6E 
  3496   64   73      
  3498   FF           		$FF
  3499   49   2F   4F 	XXIOR:	.ASCII "I/O Error"
  349C   20   45   72 
  349F   72   6F   72 
  34A2   FF           		$FF
  34A3   54   68   65 	XXWTP:	.ASCII "The file is write-protected"
  34A6   20   66   69 
  34A9   6C   65   20 
  34AC   69   73   20 
  34AF   77   72   69 
  34B2   74   65   2D 
  34B5   70   72   6F 
  34B8   74   65   63 
  34BB   74   65   64 
  34BE   FF           		$FF
  34BF   46   69   6C 	XXFNF:	.ASCII "File not found"
  34C2   65   20   6E 
  34C5   6F   74   20 
  34C8   66   6F   75 
  34CB   6E   64      
  34CD   FF           		$FF
  34CE   59   6F   75 	XXDKF:	.ASCII "You have a write-protected disk"
  34D1   20   68   61 
  34D4   76   65   20 
  34D7   61   20   77 
  34DA   72   69   74 
  34DD   65   2D   70 
  34E0   72   6F   74 
  34E3   65   63   74 
  34E6   65   64   20 
  34E9   64   69   73 
  34EC   6B           
  34ED   FF           		$FF
  34EE   54   68   65 	XXLKF:	.ASCII "The file is locked"
  34F1   20   66   69 
  34F4   6C   65   20 
  34F7   69   73   20 
  34FA   6C   6F   63 
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-296
LOGO	SYSTEM TABLES

  34FD   6B   65   64 
  3500   FF           		$FF
                      
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-297
LOGO	SYSTEM TABLES

                      	;	Primitive table:
                      	;	(Ghost-memory bank 2)
                      
       D501           	PRMTAB	=.+TDIFF
                      
  3501   00           		0
  3502   00           		0
  3503   36           		IALL
  3504   41   4C   4C 		.ASCII "ALL "
  3507   20           
  3508   01           		1
  3509   00           		0
  350A   27           		IBACK
  350B   42   41   43 		.ASCII "BACK "
  350E   4B   20      
  3510   01           		1
  3511   05           		5
  3512   1E           		IBTFST
  3513   42   46   20 		.ASCII "BF "
  3516   01           		1
  3517   00           		0
  3518   27           		IBACK
  3519   42   4B   20 		.ASCII "BK "
  351C   01           		1
  351D   05           		5
  351E   20           		IBTLST
  351F   42   4C   20 		.ASCII "BL "
  3522   02           		2
  3523   01           		1
  3524   11           		IBOTH
  3525   42   4F   54 		.ASCII "BOTH "
  3528   48   20      
  352A   01           		1
  352B   05           		5
  352C   1E           		IBTFST
  352D   42   55   54 		.ASCII "BUTFIRST "
  3530   46   49   52 
  3533   53   54   20 
  3536   01           		1
  3537   05           		5
  3538   20           		IBTLST
  3539   42   55   54 		.ASCII "BUTLAST "
  353C   4C   41   53 
  353F   54   20      
  3541   00           		0
  3542   00           		0
  3543   6C           		ICATLG
  3544   43   41   54 		.ASCII "CATALOG "
  3547   41   4C   4F 
  354A   47   20      
  354C   00           		0
  354D   00           		0
  354E   23           		IEDIT
  354F   43   48   41 		.ASCII "CHANGE "
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-298
LOGO	SYSTEM TABLES

  3552   4E   47   45 
  3555   20           
  3556   00           		0
  3557   00           		0
  3558   23           		IEDIT
  3559   43   48   47 		.ASCII "CHG "
  355C   20           
  355D   00           		0
  355E   00           		0
  355F   67           		ICLEAR
  3560   43   4C   45 		.ASCII "CLEAR "
  3563   41   52   20 
  3566   00           		0
  3567   00           		0
  3568   5B           		ICLINP
  3569   43   4C   45 		.ASCII "CLEARINPUT "
  356C   41   52   49 
  356F   4E   50   55 
  3572   54   20      
  3574   00           		0
  3575   00           		0
  3576   2B           		ICS
  3577   43   4C   45 		.ASCII "CLEARSCREEN "
  357A   41   52   53 
  357D   43   52   45 
  3580   45   4E   20 
  3583   00           		0
  3584   00           		0
  3585   0D           		ICNTIN
  3586   43   4F   20 		.ASCII "CO "
  3589   00           		0
  358A   00           		0
  358B   0D           		ICNTIN
  358C   43   4F   4E 		.ASCII "CONTINUE "
  358F   54   49   4E 
  3592   55   45   20 
  3595   00           		0
  3596   00           		0
  3597   2B           		ICS
  3598   43   53   20 		.ASCII "CS "
  359B   02           		2
  359C   05           		5
  359D   56           		ICURSR
  359E   43   55   52 		.ASCII "CURSOR "
  35A1   53   4F   52 
  35A4   20           
  35A5   02           		2
  35A6   00           		0
  35A7   0B           		IDEFIN
  35A8   44   45   20 		.ASCII "DE "
  35AB   00           		0
  35AC   00           		0
  35AD   0C           		IDEBUG
  35AE   44   45   42 		.ASCII "DEBUG "
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-299
LOGO	SYSTEM TABLES

  35B1   55   47   20 
  35B4   02           		2
  35B5   00           		0
  35B6   0B           		IDEFIN
  35B7   44   45   46 		.ASCII "DEFINE "
  35BA   49   4E   45 
  35BD   20           
  35BE   01           		1
  35BF   00           		0
  35C0   6B           		IDELET
  35C1   44   45   4C 		.ASCII "DELETE "
  35C4   45   54   45 
  35C7   20           
  35C8   02           		2
  35C9   06           		6
  35CA   3F           		IDIF
  35CB   44   49   46 		.ASCII "DIFFERENCE "
  35CE   46   45   52 
  35D1   45   4E   43 
  35D4   45   20      
  35D6   00           		0
  35D7   00           		0
  35D8   5C           		ICHNGE
  35D9   45   44   20 		.ASCII "ED "
  35DC   00           		0
  35DD   00           		0
  35DE   5C           		ICHNGE
  35DF   45   44   49 		.ASCII "EDIT "
  35E2   54   20      
  35E4   02           		2
  35E5   01           		1
  35E6   12           		IEITHR
  35E7   45   49   54 		.ASCII "EITHER "
  35EA   48   45   52 
  35ED   20           
  35EE   00           		0
  35EF   01           		1
  35F0   0F           		IELSE
  35F1   45   4C   53 		.ASCII "ELSE "
  35F4   45   20      
  35F6   01           		1
  35F7   05           		5
  35F8   2F           		IEMPTP
  35F9   45   4D   50 		.ASCII "EMPTY? "
  35FC   54   59   3F 
  35FF   20           
  3600   00           		0
  3601   00           		0
  3602   24           		IEND
  3603   45   4E   44 		.ASCII "END "
  3606   20           
  3607   02           		2
  3608   03           		3
  3609   45           		IEQUAL
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-300
LOGO	SYSTEM TABLES

  360A   45   51   55 		.ASCII "EQUAL? "
  360D   41   4C   3F 
  3610   20           
  3611   00           		0
  3612   00           		0
  3613   38           		IERASE
  3614   45   52   20 		.ASCII "ER "
  3617   00           		0
  3618   00           		0
  3619   38           		IERASE
  361A   45   52   41 		.ASCII "ERASE "
  361D   53   45   20 
  3620   01           		1
  3621   05           		5
  3622   1F           		IFIRST
  3623   46   20      		.ASCII "F "
  3625   01           		1
  3626   00           		0
  3627   26           		IFORWD
  3628   46   44   20 		.ASCII "FD "
  362B   01           		1
  362C   05           		5
  362D   1F           		IFIRST
  362E   46   49   52 		.ASCII "FIRST "
  3631   53   54   20 
  3634   01           		1
  3635   00           		0
  3636   26           		IFORWD
  3637   46   4F   52 		.ASCII "FORWARD "
  363A   57   41   52 
  363D   44   20      
  363F   02           		2
  3640   00           		0
  3641   34           		IFPUT
  3642   46   50   55 		.ASCII "FPUT "
  3645   54   20      
  3647   00           		0
  3648   00           		0
  3649   69           		IFULL
  364A   46   55   4C 		.ASCII "FULL "
  364D   4C   20      
  364F   01           		1
  3650   00           		0
  3651   19           		IGO
  3652   47   4F   20 		.ASCII "GO "
  3655   00           		0
  3656   00           		0
  3657   1B           		IGDBYE
  3658   47   4F   4F 		.ASCII "GOODBYE "
  365B   44   42   59 
  365E   45   20      
  3660   02           		2
  3661   04           		4
  3662   42           		IGREAT
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-301
LOGO	SYSTEM TABLES

  3663   47   52   45 		.ASCII "GREATER? "
  3666   41   54   45 
  3669   52   3F   20 
  366C   00           		0
  366D   00           		0
  366E   31           		IHIDET
  366F   48   49   44 		.ASCII "HIDETURTLE "
  3672   45   54   55 
  3675   52   54   4C 
  3678   45   20      
  367A   00           		0
  367B   00           		0
  367C   65           		IHDING
  367D   48   45   41 		.ASCII "HEADING "
  3680   44   49   4E 
  3683   47   20      
  3685   00           		0
  3686   00           		0
  3687   2C           		IHOME
  3688   48   4F   4D 		.ASCII "HOME "
  368B   45   20      
  368D   00           		0
  368E   00           		0
  368F   31           		IHIDET
  3690   48   54   20 		.ASCII "HT "
  3693   01           		1
  3694   00           		0
  3695   17           		IIF
  3696   49   46   20 		.ASCII "IF "
  3699   01           		1
  369A   08           		8
  369B   68           		IINT
  369C   49   4E   54 		.ASCII "INT "
  369F   20           
  36A0   01           		1
  36A1   08           		8
  36A2   68           		IINT
  36A3   49   4E   54 		.ASCII "INTEGER "
  36A6   45   47   45 
  36A9   52   20      
  36AB   01           		1
  36AC   05           		5
  36AD   21           		ILAST
  36AE   4C   20      		.ASCII "L "
  36B0   01           		1
  36B1   05           		5
  36B2   21           		ILAST
  36B3   4C   41   53 		.ASCII "LAST "
  36B6   54   20      
  36B8   01           		1
  36B9   00           		0
  36BA   29           		ILEFT
  36BB   4C   45   46 		.ASCII "LEFT "
  36BE   54   20      
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-302
LOGO	SYSTEM TABLES

  36C0   02           		2
  36C1   04           		4
  36C2   43           		ILESS
  36C3   4C   45   53 		.ASCII "LESS? "
  36C6   53   3F   20 
  36C9   FD           		-3
  36CA   05           		5
  36CB   2A           		ILIST
  36CC   4C   49   53 		.ASCII "LIST "
  36CF   54   20      
  36D1   01           		1
  36D2   05           		5
  36D3   59           		ILISTP
  36D4   4C   49   53 		.ASCII "LIST? "
  36D7   54   3F   20 
  36DA   02           		2
  36DB   00           		0
  36DC   53           		ILPUT
  36DD   4C   50   55 		.ASCII "LPUT "
  36E0   54   20      
  36E2   01           		1
  36E3   00           		0
  36E4   29           		ILEFT
  36E5   4C   54   20 		.ASCII "LT "
  36E8   02           		2
  36E9   00           		0
  36EA   06           		IMAKE
  36EB   4D   41   4B 		.ASCII "MAKE "
  36EE   45   20      
  36F0   00           		0
  36F1   00           		0
  36F2   6A           		IMIX
  36F3   4D   49   58 		.ASCII "MIX "
  36F6   20           
  36F7   00           		0
  36F8   00           		0
  36F9   37           		INAMES
  36FA   4E   41   4D 		.ASCII "NAMES "
  36FD   45   53   20 
  3700   00           		0
  3701   00           		0
  3702   66           		INDSPL
  3703   4E   44   20 		.ASCII "ND "
  3706   00           		0
  3707   00           		0
  3708   66           		INDSPL
  3709   4E   4F   44 		.ASCII "NODISPLAY "
  370C   49   53   50 
  370F   4C   41   59 
  3712   20           
  3713   01           		1
  3714   02           		2
  3715   14           		INOT
  3716   4E   4F   54 		.ASCII "NOT "
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-303
LOGO	SYSTEM TABLES

  3719   20           
  371A   01           		1
  371B   05           		5
  371C   5A           		INMBRP
  371D   4E   55   4D 		.ASCII "NUMBER? "
  3720   42   45   52 
  3723   3F   20      
  3725   01           		1
  3726   00           		0
  3727   07           		IOTPUT
  3728   4F   50   20 		.ASCII "OP "
  372B   01           		1
  372C   00           		0
  372D   07           		IOTPUT
  372E   4F   55   54 		.ASCII "OUTPUT "
  3731   50   55   54 
  3734   20           
  3735   00           		0
  3736   00           		0
  3737   0E           		IPAUSE
  3738   50   41   55 		.ASCII "PAUSE "
  373B   53   45   20 
  373E   00           		0
  373F   00           		0
  3740   2E           		IPENDN
  3741   50   44   20 		.ASCII "PD "
  3744   00           		0
  3745   00           		0
  3746   2E           		IPENDN
  3747   50   45   4E 		.ASCII "PENDOWN "
  374A   44   4F   57 
  374D   4E   20      
  374F   00           		0
  3750   00           		0
  3751   2D           		IPENUP
  3752   50   45   4E 		.ASCII "PENUP "
  3755   55   50   20 
  3758   00           		0
  3759   00           		0
  375A   35           		IPO
  375B   50   4F   20 		.ASCII "PO "
  375E   00           		0
  375F   00           		0
  3760   47           		IPOTS
  3761   50   4F   54 		.ASCII "POTS "
  3764   53   20      
  3766   01           		1
  3767   00           		0
  3768   09           		IPRINT
  3769   50   52   20 		.ASCII "PR "
  376C   01           		1
  376D   00           		0
  376E   09           		IPRINT
  376F   50   52   49 		.ASCII "PRINT "
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-304
LOGO	SYSTEM TABLES

  3772   4E   54   20 
  3775   01           		1
  3776   05           		5
  3777   0A           		ITYPE
  3778   50   52   49 		.ASCII "PRINT1 "
  377B   4E   54   31 
  377E   20           
  377F   00           		0
  3780   00           		0
  3781   35           		IPO
  3782   50   52   49 		.ASCII "PRINTOUT "
  3785   4E   54   4F 
  3788   55   54   20 
  378B   00           		0
  378C   00           		0
  378D   49           		IPROCS
  378E   50   52   4F 		.ASCII "PROCEDURES "
  3791   43   45   44 
  3794   55   52   45 
  3797   53   20      
  3799   02           		2
  379A   07           		7
  379B   40           		IPROD
  379C   50   52   4F 		.ASCII "PRODUCT "
  379F   44   55   43 
  37A2   54   20      
  37A4   00           		0
  37A5   00           		0
  37A6   2D           		IPENUP
  37A7   50   55   20 		.ASCII "PU "
  37AA   02           		2
  37AB   07           		7
  37AC   41           		IQUOT
  37AD   51   55   4F 		.ASCII "QUOTIENT "
  37B0   54   49   45 
  37B3   4E   54   20 
  37B6   00           		0
  37B7   00           		0
  37B8   54           		IRANDM
  37B9   52   41   4E 		.ASCII "RANDOM "
  37BC   44   4F   4D 
  37BF   20           
  37C0   00           		0
  37C1   00           		0
  37C2   57           		IRNDMZ
  37C3   52   41   4E 		.ASCII "RANDOMIZE "
  37C6   44   4F   4D 
  37C9   49   5A   45 
  37CC   20           
  37CD   00           		0
  37CE   00           		0
  37CF   55           		ICTYI
  37D0   52   43   20 		.ASCII "RC "
  37D3   01           		1
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-305
LOGO	SYSTEM TABLES

  37D4   00           		0
  37D5   39           		IREAD
  37D6   52   45   41 		.ASCII "READ "
  37D9   44   20      
  37DB   00           		0
  37DC   00           		0
  37DD   55           		ICTYI
  37DE   52   45   41 		.ASCII "READCHARACTER "
  37E1   44   43   48 
  37E4   41   52   41 
  37E7   43   54   45 
  37EA   52   20      
  37EC   02           		2
  37ED   00           		0
  37EE   5D           		IRPEAT
  37EF   52   45   50 		.ASCII "REPEAT "
  37F2   45   41   54 
  37F5   20           
  37F6   00           		0
  37F7   00           		0
  37F8   3B           		IREQST
  37F9   52   45   51 		.ASCII "REQUEST "
  37FC   55   45   53 
  37FF   54   20      
  3801   00           		0
  3802   00           		0
  3803   3D           		IRETRV
  3804   52   45   54 		.ASCII "RETRIEVE "
  3807   52   49   45 
  380A   56   45   20 
  380D   01           		1
  380E   00           		0
  380F   28           		IRIGHT
  3810   52   49   47 		.ASCII "RIGHT "
  3813   48   54   20 
  3816   00           		0
  3817   00           		0
  3818   3B           		IREQST
  3819   52   51   20 		.ASCII "RQ "
  381C   01           		1
  381D   00           		0
  381E   28           		IRIGHT
  381F   52   54   20 		.ASCII "RT "
  3822   01           		1
  3823   00           		0
  3824   18           		IRUN
  3825   52   55   4E 		.ASCII "RUN "
  3828   20           
  3829   01           		1
  382A   00           		0
  382B   3A           		ISAVE
  382C   53   41   56 		.ASCII "SAVE "
  382F   45   20      
  3831   FD           		-3
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-306
LOGO	SYSTEM TABLES

  3832   05           		5
  3833   10           		ISNTNC
  3834   53   45   20 		.ASCII "SE "
  3837   FD           		-3
  3838   05           		5
  3839   10           		ISNTNC
  383A   53   45   4E 		.ASCII "SENTENCE "
  383D   54   45   4E 
  3840   43   45   20 
  3843   01           		1
  3844   00           		0
  3845   61           		ISETH
  3846   53   45   54 		.ASCII "SETH "
  3849   48   20      
  384B   01           		1
  384C   00           		0
  384D   61           		ISETH
  384E   53   45   54 		.ASCII "SETHEADING "
  3851   48   45   41 
  3854   44   49   4E 
  3857   47   20      
  3859   01           		1
  385A   00           		0
  385B   62           		ISETT
  385C   53   45   54 		.ASCII "SETT "
  385F   54   20      
  3861   01           		1
  3862   00           		0
  3863   62           		ISETT
  3864   53   45   54 		.ASCII "SETTURTLE "
  3867   54   55   52 
  386A   54   4C   45 
  386D   20           
  386E   01           		1
  386F   00           		0
  3870   5E           		ISETX
  3871   53   45   54 		.ASCII "SETX "
  3874   58   20      
  3876   02           		2
  3877   00           		0
  3878   60           		ISETXY
  3879   53   45   54 		.ASCII "SETXY "
  387C   58   59   20 
  387F   01           		1
  3880   00           		0
  3881   5F           		ISETY
  3882   53   45   54 		.ASCII "SETY "
  3885   59   20      
  3887   00           		0
  3888   00           		0
  3889   30           		ISHOWT
  388A   53   48   4F 		.ASCII "SHOWTURTLE "
  388D   57   54   55 
  3890   52   54   4C 
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-307
LOGO	SYSTEM TABLES

  3893   45   20      
  3895   00           		0
  3896   00           		0
  3897   30           		ISHOWT
  3898   53   54   20 		.ASCII "ST "
  389B   00           		0
  389C   00           		0
  389D   08           		ISTOP
  389E   53   54   4F 		.ASCII "STOP "
  38A1   50   20      
  38A3   02           		2
  38A4   06           		6
  38A5   3E           		ISUM
  38A6   53   55   4D 		.ASCII "SUM "
  38A9   20           
  38AA   00           		0
  38AB   00           		0
  38AC   46           		ITRCBK
  38AD   54   42   20 		.ASCII "TB "
  38B0   01           		1
  38B1   05           		5
  38B2   25           		ITEXT
  38B3   54   45   58 		.ASCII "TEXT "
  38B6   54   20      
  38B8   00           		0
  38B9   00           		0
  38BA   13           		ITHEN
  38BB   54   48   45 		.ASCII "THEN "
  38BE   4E   20      
  38C0   01           		1
  38C1   05           		5
  38C2   3C           		ITHING
  38C3   54   48   49 		.ASCII "THING "
  38C6   4E   47   20 
  38C9   01           		1
  38CA   05           		5
  38CB   01           		ITHNGP
  38CC   54   48   49 		.ASCII "THING? "
  38CF   4E   47   3F 
  38D2   20           
  38D3   00           		0
  38D4   00           		0
  38D5   33           		ITITLE
  38D6   54   49   20 		.ASCII "TI "
  38D9   00           		0
  38DA   00           		0
  38DB   33           		ITITLE
  38DC   54   49   54 		.ASCII "TITLE "
  38DF   4C   45   20 
  38E2   00           		0
  38E3   00           		0
  38E4   48           		ITITLS
  38E5   54   49   54 		.ASCII "TITLES "
  38E8   4C   45   53 
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-308
LOGO	SYSTEM TABLES

  38EB   20           
  38EC   00           		0
  38ED   00           		0
  38EE   22           		ITO
  38EF   54   4F   20 		.ASCII "TO "
  38F2   00           		0
  38F3   00           		0
  38F4   46           		ITRCBK
  38F5   54   52   41 		.ASCII "TRACEBACK "
  38F8   43   45   42 
  38FB   41   43   4B 
  38FE   20           
  38FF   00           		0
  3900   00           		0
  3901   32           		ITSTAT
  3902   54   53   20 		.ASCII "TS "
  3905   00           		0
  3906   00           		0
  3907   32           		ITSTAT
  3908   54   55   52 		.ASCII "TURTLESTATE "
  390B   54   4C   45 
  390E   53   54   41 
  3911   54   45   20 
  3914   FD           		-3
  3915   05           		5
  3916   02           		IWORD
  3917   57   4F   52 		.ASCII "WORD "
  391A   44   20      
  391C   01           		1
  391D   05           		5
  391E   03           		IWORDP
  391F   57   4F   52 		.ASCII "WORD? "
  3922   44   3F   20 
  3925   00           		0
  3926   00           		0
  3927   63           		IXCOR
  3928   58   43   4F 		.ASCII "XCOR "
  392B   52   20      
  392D   00           		0
  392E   00           		0
  392F   64           		IYCOR
  3930   59   43   4F 		.ASCII "YCOR "
  3933   52   20      
  3935   00           		0
  3936   00           		0
  3937   15           		ILPAR
  3938   28   20      		.ASCII "( "
  393A   00           		0
  393B   00           		0
  393C   16           		IRPAR
  393D   29   20      		.ASCII ") "
  393F   02           		2
  3940   07           		7
  3941   4E           		INPROD
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-309
LOGO	SYSTEM TABLES

  3942   2A   20      		.ASCII "* "
  3944   02           		2
  3945   06           		6
  3946   4C           		INSUM
  3947   2B   20      		.ASCII "+ "
  3949   02           		2
  394A   06           		6
  394B   4D           		INDIF
  394C   2D   20      		.ASCII "- "
  394E   00           		0
  394F   00           		0
  3950   1A           		IBPT
  3951   2E   42   50 		.ASCII ".BPT "
  3954   54   20      
  3956   01           		1
  3957   05           		5
  3958   58           		ICALL
  3959   2E   43   41 		.ASCII ".CALL "
  395C   4C   4C   20 
  395F   02           		2
  3960   00           		0
  3961   4B           		IPOKE
  3962   2E   44   45 		.ASCII ".DEPOSIT "
  3965   50   4F   53 
  3968   49   54   20 
  396B   01           		1
  396C   00           		0
  396D   4A           		IPEEK
  396E   2E   45   58 		.ASCII ".EXAMINE "
  3971   41   4D   49 
  3974   4E   45   20 
  3977   00           		0
  3978   00           		0
  3979   1C           		IGCOLL
  397A   2E   47   43 		.ASCII ".GCOLL "
  397D   4F   4C   4C 
  3980   20           
  3981   00           		0
  3982   00           		0
  3983   1D           		INODES
  3984   2E   4E   4F 		.ASCII ".NODES "
  3987   44   45   53 
  398A   20           
  398B   02           		2
  398C   07           		7
  398D   4F           		INQUOT
  398E   2F   20      		.ASCII "/ "
  3990   00           		0
  3991   00           		0
  3992   44           		ICOMNT
  3993   3B   20      		.ASCII "; "
  3995   02           		2
  3996   04           		4
  3997   51           		INLESS
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-310
LOGO	SYSTEM TABLES

  3998   3C   20      		.ASCII "< "
  399A   02           		2
  399B   03           		3
  399C   52           		INEQUL
  399D   3D   20      		.ASCII "= "
  399F   02           		2
  39A0   04           		4
  39A1   50           		INGRTR
  39A2   3E   20      		.ASCII "> "
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-311
LOGO	SYSTEM TABLES

                      	;	V-Primitive table:
                      	;	(Ghost-memory bank 2)
                      
       D9A4           	VPRMTB	=.+TDIFF
                      
  39A4   4C           		INSUM
  39A5   03   26      		.WORD INFSUM
  39A7   01           		1
  39A8   4D           		INDIF
  39A9   03   28      		.WORD INFDIF
  39AB   01           		1
  39AC   15           		ILPAR
  39AD   03   0E      		.WORD LPAR
  39AF   01           		1
  39B0   16           		IRPAR
  39B1   03   20      		.WORD RPAR
  39B3   01           		1
  39B4   17           		IIF
  39B5   03   0C      		.WORD LIF
  39B7   01           		1
  39B8   0F           		IELSE
  39B9   03   08      		.WORD LELSE
  39BB   01           		1
  39BC   13           		ITHEN
  39BD   03   12      		.WORD LTHEN
  39BF   01           		1
  39C0   37           		INAMES
  39C1   03   16      		.WORD NAMES
  39C3   01           		1
  39C4   36           		IALL
  39C5   03   00      		.WORD ALL
  39C7   01           		1
  39C8   48           		ITITLS
  39C9   03   24      		.WORD TITLES
  39CB   01           		1
  39CC   49           		IPROCS
  39CD   03   1E      		.WORD PROCS
  39CF   01           		1
  39D0   24           		IEND
  39D1   03   0A      		.WORD LEND
  39D3   01           		1
  39D4   35           		IPO
  39D5   03   18      		.WORD PO
  39D7   01           		1
  39D8   35           		IPO
  39D9   03   1C      		.WORD PRNTOT
  39DB   02           		2
  39DC   47           		IPOTS
  39DD   03   1A      		.WORD POTS
  39DF   01           		1
  39E0   38           		IERASE
  39E1   03   04      		.WORD ER
  39E3   01           		1
  39E4   38           		IERASE
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-312
LOGO	SYSTEM TABLES

  39E5   03   06      		.WORD ERASE
  39E7   02           		2
  39E8   33           		ITITLE
  39E9   03   22      		.WORD TI
  39EB   01           		1
  39EC   33           		ITITLE
  39ED   03   14      		.WORD LTITLE
  39EF   02           		2
  39F0   08           		ISTOP
  39F1   03   10      		.WORD LSTOP
  39F3   01           		1
  39F4   44           		ICOMNT
  39F5   03   02      		.WORD COMMNT
  39F7   01           		1
       D9F8           	VPRMTE	=.+TDIFF
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-313
LOGO	SYSTEM TABLES

                      	;	Miscellaneous text strings:
                      	;	(Ghost-memory page 2)
                      
       D9F8           	HELSTR=.+TDIFF
  39F8   57   65   6C 		.ASCII "Welcome to Apple Logo!"
  39FB   63   6F   6D 
  39FE   65   20   74 
  3A01   6F   20   41 
  3A04   70   70   6C 
  3A07   65   20   4C 
  3A0A   6F   67   6F 
  3A0D   21           
  3A0E   0D           		$0D
  3A0F   50   72   65 		.ASCII "Preliminary Version"
  3A12   6C   69   6D 
  3A15   69   6E   61 
  3A18   72   79   20 
  3A1B   56   65   72 
  3A1E   73   69   6F 
  3A21   6E           
  3A22   0D           		$0D
  3A23   41   73   73 		.ASCII "Assembled 8/06/80"	;(Use correct date when assembling)
  3A26   65   6D   62 
  3A29   6C   65   64 
  3A2C   20   38   2F 
  3A2F   30   36   2F 
  3A32   38   30      
  3A34   0D           		$0D
  3A35   00           		$00
       DA36           	LBUG1=.+TDIFF
  3A36   4C   4F   47 		.ASCII "LOGO bug; exiting..."
  3A39   4F   20   62 
  3A3C   75   67   3B 
  3A3F   20   65   78 
  3A42   69   74   69 
  3A45   6E   67   2E 
  3A48   2E   2E      
  3A4A   0D           		$0D
  3A4B   00           		$00
       DA4C           	RDRER1=.+TDIFF
  3A4C   52   65   61 		.ASCII "Reader error: Too many sublists"
  3A4F   64   65   72 
  3A52   20   65   72 
  3A55   72   6F   72 
  3A58   3A   20   54 
  3A5B   6F   6F   20 
  3A5E   6D   61   6E 
  3A61   79   20   73 
  3A64   75   62   6C 
  3A67   69   73   74 
  3A6A   73           
  3A6B   0D           		$0D
  3A6C   00           		$00
       DA6D           	RDRER2=.+TDIFF
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-314
LOGO	SYSTEM TABLES

  3A6D   59   6F   75 		.ASCII "You have mismatched brackets"
  3A70   20   68   61 
  3A73   76   65   20 
  3A76   6D   69   73 
  3A79   6D   61   74 
  3A7C   63   68   65 
  3A7F   64   20   62 
  3A82   72   61   63 
  3A85   6B   65   74 
  3A88   73           
  3A89   0D           		$0D
  3A8A   00           		$00
       DA8B           	ZPMSG1=.+TDIFF
  3A8B   4E   6F   20 		.ASCII "No storage left!"
  3A8E   73   74   6F 
  3A91   72   61   67 
  3A94   65   20   6C 
  3A97   65   66   74 
  3A9A   21           
  3A9B   0D           		$0D
  3A9C   00           		$00
       DA9D           	ZPMSG2=.+TDIFF
  3A9D   53   74   6F 		.ASCII "Stopped!"
  3AA0   70   70   65 
  3AA3   64   21      
  3AA5   0D           		$0D
  3AA6   00           		$00
       DAA7           	ZPMSG3=.+TDIFF
  3AA7   45   76   61 		.ASCII "Evaluator overflow!"
  3AAA   6C   75   61 
  3AAD   74   6F   72 
  3AB0   20   6F   76 
  3AB3   65   72   66 
  3AB6   6C   6F   77 
  3AB9   21           
  3ABA   0D           		$0D
  3ABB   00           		$00
       DABC           	WRNMSG=.+TDIFF
  3ABC   50   6C   65 		.ASCII "Please ERASE something:"
  3ABF   61   73   65 
  3AC2   20   45   52 
  3AC5   41   53   45 
  3AC8   20   73   6F 
  3ACB   6D   65   74 
  3ACE   68   69   6E 
  3AD1   67   3A      
  3AD3   0D           		$0D
  3AD4   00           		$00
       DAD5           	ERRM1=.+TDIFF
  3AD5   41   74   20 		.ASCII "At level "
  3AD8   6C   65   76 
  3ADB   65   6C   20 
  3ADE   00           		$00
       DADF           	ERRM2=.+TDIFF
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-315
LOGO	SYSTEM TABLES

  3ADF   20   69   6E 		.ASCII " in line "
  3AE2   20   6C   69 
  3AE5   6E   65   20 
  3AE8   00           		$00
       DAE9           	ERRM3=.+TDIFF
  3AE9   20   6F   66 		.ASCII " of "
  3AEC   20           
  3AED   00           		$00
       DAEE           	ERRM4=.+TDIFF
  3AEE   20   69   73 		.ASCII " is too big for "
  3AF1   20   74   6F 
  3AF4   6F   20   62 
  3AF7   69   67   20 
  3AFA   66   6F   72 
  3AFD   20           
  3AFE   00           		$00
       DAFF           	SENDM=.+TDIFF
  3AFF   20   64   65 		.ASCII " defined"
  3B02   66   69   6E 
  3B05   65   64      
  3B07   0D           		$0D
  3B08   00           		$00
       DB09           	PNMSG1=.+TDIFF
  3B09   20   69   73 		.ASCII " is "
  3B0C   20           
  3B0D   00           		$00
       DB0E           	PNMSG2=.+TDIFF
  3B0E   4D   41   4B 		.ASCII "MAKE "
  3B11   45   20      
  3B13   00           		$00
       DB14           	TBMSG1=.+TDIFF
  3B14   57   65   27 		.ASCII "We're now at top-level."
  3B17   72   65   20 
  3B1A   6E   6F   77 
  3B1D   20   61   74 
  3B20   20   74   6F 
  3B23   70   2D   6C 
  3B26   65   76   65 
  3B29   6C   2E      
  3B2B   0D           		$0D
  3B2C   00           		$00
       DB2D           	TBMSG2=.+TDIFF
  3B2D   57   65   27 		.ASCII "We're currently inside "
  3B30   72   65   20 
  3B33   63   75   72 
  3B36   72   65   6E 
  3B39   74   6C   79 
  3B3C   20   69   6E 
  3B3F   73   69   64 
  3B42   65   20      
  3B44   00           		$00
       DB45           	CHGMSG=.+TDIFF
  3B45   20   20   20 		.ASCII "        APPLE LOGO SCREEN EDITOR        "
  3B48   20   20   20 
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-316
LOGO	SYSTEM TABLES

  3B4B   20   20   41 
  3B4E   50   50   4C 
  3B51   45   20   4C 
  3B54   4F   47   4F 
  3B57   20   53   43 
  3B5A   52   45   45 
  3B5D   4E   20   45 
  3B60   44   49   54 
  3B63   4F   52   20 
  3B66   20   20   20 
  3B69   20   20   20 
  3B6C   20           
  3B6D   00           		$00
       DB6E           	TOMSG=.+TDIFF
  3B6E   54   4F   20 		.ASCII "TO "
  3B71   00           		$00
       DB72           	ENDMSG=.+TDIFF
  3B72   45   4E   44 		.ASCII "END"
  3B75   0D           		$0D
  3B76   00           		$00
       DB77           	WAITM=.+TDIFF
  3B77   50   6C   65 		.ASCII "Please wait..."
  3B7A   61   73   65 
  3B7D   20   77   61 
  3B80   69   74   2E 
  3B83   2E   2E      
  3B85   0D           		$0D
  3B86   00           		$00
       DB87           	SAVEM=.+TDIFF
  3B87   8D           		$8D
  3B88   84           		$84			;^D for DOS
  3B89   C2           		$C2			;B	these have their high
  3B8A   D3           		$D3			;S	bits turned on because
  3B8B   C1           		$C1			;A	that's the way that
  3B8C   D6           		$D6			;V	Apple does it and DOS
  3B8D   C5           		$C5			;E	understands it.
  3B8E   00           		$00
       DB8F           	SAVEM2=.+TDIFF
  3B8F   AC           		$AC			;,
  3B90   C1           		$C1			;A
  3B91   A4           		$A4			;$
  3B92   B2           		$B2			;2
  3B93   B0           		$B0			;0
  3B94   B0           		$B0			;0
  3B95   B0           		$B0			;0
  3B96   AC           		$AC			;,
  3B97   CC           		$CC			;L
  3B98   A4           		$A4			;$
  3B99   00           		$00
       DB9A           	LOADM=.+TDIFF
  3B9A   8D           		$8D
  3B9B   84           		$84		;^D for DOS
  3B9C   C2           		$C2		;B
  3B9D   CC           		$CC		;L
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-317
LOGO	SYSTEM TABLES

  3B9E   CF           		$CF		;O
  3B9F   C1           		$C1		;A
  3BA0   C4           		$C4		;D
  3BA1   00           		$00
       DBA2           	DELETM=.+TDIFF
  3BA2   8D           		$8D
  3BA3   84           		$84
  3BA4   C4           		$C4		;D
  3BA5   C5           		$C5		;E
  3BA6   CC           		$CC		;L
  3BA7   C5           		$C5		;E
  3BA8   D4           		$D4		;T
  3BA9   C5           		$C5		;E
  3BAA   00           		$00
       DBAB           	CATLGM=.+TDIFF
  3BAB   8D           		$8D
  3BAC   84           		$84
  3BAD   C3           		$C3		;C
  3BAE   C1           		$C1		;A
  3BAF   D4           		$D4		;T
  3BB0   C1           		$C1		;A
  3BB1   CC           		$CC		;L
  3BB2   CF           		$CF		;O
  3BB3   C7           		$C7		;G
  3BB4   8D           		$8D
  3BB5   00           		$00
       DBB6           	LOGOM=.+TDIFF
  3BB6   AE           		$AE
  3BB7   CC           		$CC
  3BB8   CF           		$CF
  3BB9   C7           		$C7
  3BBA   CF           		$CF
  3BBB   00           		$00
                      
                      	;Start of Sine table (91 4-byte flonums, first 2 bytes only)
       DBBA           	SINTB1=.-2+TDIFF
  3BBC   00           		$00
  3BBD   00           		$00
                      
  3BBE   7A           		$7A
  3BBF   47           		$47
                      
  3BC0   7B           		$7B
  3BC1   47           		$47
                      
  3BC2   7B           		$7B
  3BC3   6B           		$6B
                      
  3BC4   7C           		$7C
  3BC5   47           		$47
                      
  3BC6   7C           		$7C
  3BC7   59           		$59
                      
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-318
LOGO	SYSTEM TABLES

  3BC8   7C           		$7C
  3BC9   6B           		$6B
                      
  3BCA   7C           		$7C
  3BCB   7C           		$7C
                      
  3BCC   7D           		$7D
  3BCD   47           		$47
                      
  3BCE   7D           		$7D
  3BCF   50           		$50
                      
  3BD0   7D           		$7D
  3BD1   58           		$58
                      
  3BD2   7D           		$7D
  3BD3   61           		$61
                      
  3BD4   7D           		$7D
  3BD5   6A           		$6A
                      
  3BD6   7D           		$7D
  3BD7   73           		$73
                      
  3BD8   7D           		$7D
  3BD9   7B           		$7B
                      
  3BDA   7E           		$7E
  3BDB   42           		$42
                      
  3BDC   7E           		$7E
  3BDD   46           		$46
                      
  3BDE   7E           		$7E
  3BDF   4A           		$4A
                      
  3BE0   7E           		$7E
  3BE1   4F           		$4F
                      
  3BE2   7E           		$7E
  3BE3   53           		$53
                      
  3BE4   7E           		$7E
  3BE5   57           		$57
                      
  3BE6   7E           		$7E
  3BE7   5B           		$5B
                      
  3BE8   7E           		$7E
  3BE9   5F           		$5F
                      
  3BEA   7E           		$7E
  3BEB   64           		$64
                      
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-319
LOGO	SYSTEM TABLES

  3BEC   7E           		$7E
  3BED   68           		$68
                      
  3BEE   7E           		$7E
  3BEF   6C           		$6C
                      
  3BF0   7E           		$7E
  3BF1   70           		$70
                      
  3BF2   7E           		$7E
  3BF3   74           		$74
                      
  3BF4   7E           		$7E
  3BF5   78           		$78
                      
  3BF6   7E           		$7E
  3BF7   7C           		$7C
                      
  3BF8   7F           		$7F
  3BF9   40           		$40
                      
  3BFA   7F           		$7F
  3BFB   41           		$41
                      
  3BFC   7F           		$7F
  3BFD   43           		$43
                      
  3BFE   7F           		$7F
  3BFF   45           		$45
                      
  3C00   7F           		$7F
  3C01   47           		$47
                      
  3C02   7F           		$7F
  3C03   49           		$49
                      
  3C04   7F           		$7F
  3C05   4B           		$4B
                      
  3C06   7F           		$7F
  3C07   4D           		$4D
                      
  3C08   7F           		$7F
  3C09   4E           		$4E
                      
  3C0A   7F           		$7F
  3C0B   50           		$50
                      
  3C0C   7F           		$7F
  3C0D   52           		$52
                      
  3C0E   7F           		$7F
  3C0F   53           		$53
                      
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-320
LOGO	SYSTEM TABLES

  3C10   7F           		$7F
  3C11   55           		$55
                      
  3C12   7F           		$7F
  3C13   57           		$57
                      
  3C14   7F           		$7F
  3C15   58           		$58
                      
  3C16   7F           		$7F
  3C17   5A           		$5A
                      
  3C18   7F           		$7F
  3C19   5C           		$5C
                      
  3C1A   7F           		$7F
  3C1B   5D           		$5D
                      
  3C1C   7F           		$7F
  3C1D   5F           		$5F
                      
  3C1E   7F           		$7F
  3C1F   60           		$60
                      
  3C20   7F           		$7F
  3C21   62           		$62
                      
  3C22   7F           		$7F
  3C23   63           		$63
                      
  3C24   7F           		$7F
  3C25   64           		$64
                      
  3C26   7F           		$7F
  3C27   66           		$66
                      
  3C28   7F           		$7F
  3C29   67           		$67
                      
  3C2A   7F           		$7F
  3C2B   68           		$68
                      
  3C2C   7F           		$7F
  3C2D   6A           		$6A
                      
  3C2E   7F           		$7F
  3C2F   6B           		$6B
                      
  3C30   7F           		$7F
  3C31   6C           		$6C
                      
  3C32   7F           		$7F
  3C33   6D           		$6D
                      
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-321
LOGO	SYSTEM TABLES

  3C34   7F           		$7F
  3C35   6E           		$6E
                      
  3C36   7F           		$7F
  3C37   6F           		$6F
                      
  3C38   7F           		$7F
  3C39   71           		$71
                      
  3C3A   7F           		$7F
  3C3B   72           		$72
                      
  3C3C   7F           		$7F
  3C3D   73           		$73
                      
  3C3E   7F           		$7F
  3C3F   74           		$74
                      
  3C40   7F           		$7F
  3C41   74           		$74
                      
  3C42   7F           		$7F
  3C43   75           		$75
                      
  3C44   7F           		$7F
  3C45   76           		$76
                      
  3C46   7F           		$7F
  3C47   77           		$77
                      
  3C48   7F           		$7F
  3C49   78           		$78
                      
  3C4A   7F           		$7F
  3C4B   79           		$79
                      
  3C4C   7F           		$7F
  3C4D   79           		$79
                      
  3C4E   7F           		$7F
  3C4F   7A           		$7A
                      
  3C50   7F           		$7F
  3C51   7B           		$7B
                      
  3C52   7F           		$7F
  3C53   7B           		$7B
                      
  3C54   7F           		$7F
  3C55   7C           		$7C
                      
  3C56   7F           		$7F
  3C57   7C           		$7C
                      
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-322
LOGO	SYSTEM TABLES

  3C58   7F           		$7F
  3C59   7D           		$7D
                      
  3C5A   7F           		$7F
  3C5B   7D           		$7D
                      
  3C5C   7F           		$7F
  3C5D   7E           		$7E
                      
  3C5E   7F           		$7F
  3C5F   7E           		$7E
                      
  3C60   7F           		$7F
  3C61   7E           		$7E
                      
  3C62   7F           		$7F
  3C63   7F           		$7F
                      
  3C64   7F           		$7F
  3C65   7F           		$7F
                      
  3C66   7F           		$7F
  3C67   7F           		$7F
                      
  3C68   7F           		$7F
  3C69   7F           		$7F
                      
  3C6A   7F           		$7F
  3C6B   7F           		$7F
                      
  3C6C   7F           		$7F
  3C6D   7F           		$7F
                      
  3C6E   7F           		$7F
  3C6F   7F           		$7F
                      
  3C70   80           		$80
  3C71   40           		$40
                      
  3C72   80           		$80	;Extra entry for interpolation routine
  3C73   40           		$40
                      
                      	;Start of Sine table (91 4-byte flonums, second 2 bytes only)
       DC72           	SINTB2=.-2+TDIFF
  3C74   00           		$00
  3C75   00           		$00
                      
  3C76   7C           		$7C
  3C77   2D           		$2D
                      
  3C78   79           		$79
  3C79   63           		$63
                      
  3C7A   2F           		$2F
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-323
LOGO	SYSTEM TABLES

  3C7B   1D           		$1D
                      
  3C7C   6E           		$6E
  3C7D   3E           		$3E
                      
  3C7E   3F           		$3F
  3C7F   5B           		$5B
                      
  3C80   09           		$09
  3C81   82           		$82
                      
  3C82   CB           		$CB
  3C83   51           		$51
                      
  3C84   41           		$41
  3C85   B2           		$B2
                      
  3C86   18           		$18
  3C87   2E           		$2E
                      
  3C88   E8           		$E8
  3C89   6A           		$6A
                      
  3C8A   B1           		$B1
  3C8B   B7           		$B7
                      
  3C8C   73           		$73
  3C8D   67           		$67
                      
  3C8E   2C           		$2C
  3C8F   C9           		$C9
                      
  3C90   DD           		$DD
  3C91   30           		$30
                      
  3C92   41           		$41
  3C93   F7           		$F7
                      
  3C94   90           		$90
  3C95   2B           		$2B
                      
  3C96   D8           		$D8
  3C97   DF           		$DF
                      
  3C98   1B           		$1B
  3C99   BD           		$BD
                      
  3C9A   58           		$58
  3C9B   6F           		$6F
                      
  3C9C   8E           		$8E
  3C9D   A2           		$A2
                      
  3C9E   BE           		$BE
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-324
LOGO	SYSTEM TABLES

  3C9F   01           		$01
                      
  3CA0   E6           		$E6
  3CA1   38           		$38
                      
  3CA2   06           		$06
  3CA3   F5           		$F5
                      
  3CA4   1F           		$1F
  3CA5   E5           		$E5
                      
  3CA6   30           		$30
  3CA7   B6           		$B6
                      
  3CA8   39           		$39
  3CA9   17           		$17
                      
  3CAA   38           		$38
  3CAB   B9           		$B9
                      
  3CAC   2F           		$2F
  3CAD   4A           		$4A
                      
  3CAE   1C           		$1C
  3CAF   7C           		$7C
                      
  3CB0   00           		$00
  3CB1   00           		$00
                      
  3CB2   EC           		$EC
  3CB3   C5           		$C5
                      
  3CB4   D4           		$D4
  3CB5   65           		$65
                      
  3CB6   B6           		$B6
  3CB7   BB           		$BB
                      
  3CB8   93           		$93
  3CB9   A2           		$A2
                      
  3CBA   6A           		$6A
  3CBB   F4           		$F4
                      
  3CBC   3C           		$3C
  3CBD   8C           		$8C
                      
  3CBE   08           		$08
  3CBF   46           		$46
                      
  3CC0   CD           		$CD
  3CC1   FF           		$FF
                      
  3CC2   8D           		$8D
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-325
LOGO	SYSTEM TABLES

  3CC3   92           		$92
                      
  3CC4   46           		$46
  3CC5   DD           		$DD
                      
  3CC6   F9           		$F9
  3CC7   BE           		$BE
                      
  3CC8   A6           		$A6
  3CC9   12           		$12
                      
  3CCA   4B           		$4B
  3CCB   B9           		$B9
                      
  3CCC   EA           		$EA
  3CCD   91           		$91
                      
  3CCE   82           		$82
  3CCF   7A           		$7A
                      
  3CD0   13           		$13
  3CD1   54           		$54
                      
  3CD2   9D           		$9D
  3CD3   00           		$00
                      
  3CD4   1F           		$1F
  3CD5   5F           		$5F
                      
  3CD6   9A           		$9A
  3CD7   53           		$53
                      
  3CD8   0D           		$0D
  3CD9   BF           		$BF
                      
  3CDA   79           		$79
  3CDB   85           		$85
                      
  3CDC   DD           		$DD
  3CDD   89           		$89
                      
  3CDE   39           		$39
  3CDF   B0           		$B0
                      
  3CE0   8D           		$8D
  3CE1   DE           		$DE
                      
  3CE2   D9           		$D9
  3CE3   F9           		$F9
                      
  3CE4   1D           		$1D
  3CE5   E7           		$E7
                      
  3CE6   59           		$59
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-326
LOGO	SYSTEM TABLES

  3CE7   8F           		$8F
                      
  3CE8   8C           		$8C
  3CE9   D7           		$D7
                      
  3CEA   B7           		$B7
  3CEB   A8           		$A8
                      
  3CEC   D9           		$D9
  3CED   EC           		$EC
                      
  3CEE   F3           		$F3
  3CEF   8A           		$8A
                      
  3CF0   04           		$04
  3CF1   6D           		$6D
                      
  3CF2   0C           		$0C
  3CF3   80           		$80
                      
  3CF4   0B           		$0B
  3CF5   AF           		$AF
                      
  3CF6   01           		$01
  3CF7   E5           		$E5
                      
  3CF8   EF           		$EF
  3CF9   0F           		$0F
                      
  3CFA   D3           		$D3
  3CFB   1A           		$1A
                      
  3CFC   AD           		$AD
  3CFD   F6           		$F6
                      
  3CFE   7F           		$7F
  3CFF   90           		$90
                      
  3D00   47           		$47
  3D01   D9           		$D9
                      
  3D02   06           		$06
  3D03   C1           		$C1
                      
  3D04   BC           		$BC
  3D05   38           		$38
                      
  3D06   68           		$68
  3D07   32           		$32
                      
  3D08   0A           		$0A
  3D09   A0           		$A0
                      
  3D0A   A3           		$A3
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-327
LOGO	SYSTEM TABLES

  3D0B   75           		$75
                      
  3D0C   32           		$32
  3D0D   A6           		$A6
                      
  3D0E   B8           		$B8
  3D0F   29           		$29
                      
  3D10   33           		$33
  3D11   F1           		$F1
                      
  3D12   A5           		$A5
  3D13   F6           		$F6
                      
  3D14   0E           		$0E
  3D15   2E           		$2E
                      
  3D16   6C           		$6C
  3D17   92           		$92
                      
  3D18   C1           		$C1
  3D19   1B           		$1B
                      
  3D1A   0B           		$0B
  3D1B   C1           		$C1
                      
  3D1C   4C           		$4C
  3D1D   7E           		$7E
                      
  3D1E   83           		$83
  3D1F   4F           		$4F
                      
  3D20   B0           		$B0
  3D21   2E           		$2E
                      
  3D22   D3           		$D3
  3D23   18           		$18
                      
  3D24   EC           		$EC
  3D25   0A           		$0A
                      
  3D26   FB           		$FB
  3D27   02           		$02
                      
  3D28   00           		$00
  3D29   00           		$00
                      
  3D2A   00           		$00	;Extra entry for interpolation routine
  3D2B   00           		$00
                      
       3D2C           	ENDTAB=.	;End of Ghost-memory bank 2 storage
                      
       1FFA           	.=SYSTAB*$100-$1006
  1FFA   4C   00   40 		JMP LOGO	;Vector for BRUN to work from DOS
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-328
LOGO	SYSTEM TABLES

  1FFD   4C   2A   40 		JMP LOGO1	;Re-entry point for crash or GOODBYE
                      
       95F5           	.=$95F5		;(Causes assembler to signal error if program crashes into DOS)
  95F5   00           		$00
       0000           	.END
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-329
LOGO	SYMBOL TABLE

ABSWAP  6970    	ABSWP1  6979    	ACC   = 0045    	ADD     695E    
ADDDIG  4D19    	ADDEND  69C6    	ADDLP1  4D21    	ADDL1A  4D23    
ADDNML  4D0E    	ADDNUM  4D0B    	ADDTK1  4BC3    	ADDTK2  4BC1    
ADDTOK  4BC4    	ADD1    6961    	ADHAK4  4F62    	ADHAK5  5188    
ADHAK6  5192    	ADHAK7  519D    	ADHAK8  4FF6    	ADHAK9  5018    
ADHK11  51CC    	ADHK13  577B    	ADHK21  60F8    	ADHK55  5CA2    
ADHK7A  51A3    	ALL   = 0300    	ALLSTC  4D9D    	ALNSWP  69CA    
ALSTC1  4DBC    	ALSTC3  4DCB    	ALSTC4  4DC2    	AL1     424A    
AL2     426F    	AL2A    4285    	ANSN  = 00B2    	ANSNX = 00C2    
ANSN1 = 00B3    	ANSN2 = 00C0    	ANSN3 = 00C1    	APCOUT= FDED    
APOUT   724D    	AREA1 = 001C    	AREA2 = 001E    	ARGLOP  4228    
ARGLP1  422F    	ARG1  = 00A2    	ARG2  = 009E    	ATMTFX  5907    
ATMTXX  5909    	ATMT3   592A    	ATMT4   592D    	ATMT4A  5931    
ATMT4E  5957    	ATMT41  596C    	ATMT5   596F    	ATMT5L  5973    
ATM1    4B17    	ATM12A  4BD6    	ATM12B  4BCB    	ATM2    4B30    
ATOM  = 0001    	A1H   = 003D    	A1L   = 003C    	A1PC    7436    
A1PCLP  7439    	A1PCRT  7440    	A2H   = 003F    	A2L   = 003E    
A3H   = 0041    	A3L   = 0040    	A4H   = 0043    	A4L   = 0042    
A5H   = 0045    	A5L   = 0044    	BACKUP  6F19    	BACK2   6F27    
BACK3   6F35    	BACK4   6F57    	BACK5   6F61    	BANK4K= 0055    
BASARY= 0800    	BASLIN= 0028    	BBASX = CFFC    	BCALC   7573    
BCALCA  7575    	BCALC2  7584    	BCKSPC  767B    	BELL    750A    
BELL1   7511    	BIGBAS= D000    	BIGLEN= 2660    	BLANK   73DC    
BL1     73D8    	BREAK1  725B    	BRTS    751C    	BSLTMP= 002A    
BSWTCH  7482    	BSW1    7496    	BTLSTA  8C0F    	BTLSTL  8C2B    
BTLSTR  8C0C    	BTLSTX  8C31    	BTLSW   8C3A    	BTLSWE  8C94    
BTLSW1  8C64    	BTLSW2  8C75    	BTLSW3  8C81    	BTLWE1  8CB3    
BTLWE2  8CEB    	BTLWE3  8CDD    	BTLWE4  8CF7    	BTLWE5  8CFC    
BTLWL1  8CA6    	BTLWL2  8CAB    	BUFFER= 0001    	CANCEL  76CE    
CATLGM= DBAB    	CELPTR= 009C    	CENTER  6E17    	CH    = 0024    
CHBUF = 0069    	CHGIN1  6CE3    	CHGIN2  6CC3    	CHGIN3  6C78    
CHGLOP  6AE5    	CHGLPB  6B16    	CHGLPC  6B1C    	CHGLPD  6B1F    
CHGLPF  6B25    	CHGLPH  6B2B    	CHGLPL  6B31    	CHGLPO  6B37    
CHGLPP  6B3D    	CHGLPU  6B43    	CHGLRB  6B49    	CHGMSG= DB45    
CHGNEW  6C7E    	CHGNLP  6C8F    	CHGNON  6C6F    	CHGNYM  6CF2    
CHGN2   6CB2    	CHGOLD  6C51    	CHGSR1  6C61    	CHGSR2  6C66    
CHGSR4  6C69    	CHGSR5  6C6C    	CHGSTP  6C1E    	CHGST1  6C22    
CHGX1   6CCE    	CHKEVL  42A5    	CHKEV2  42B3    	CHKEV3  42BD    
CHKEV4  42C7    	CHKEV5  42D1    	CHKEV6  42DB    	CHKEV7  42E5    
CHKINT  587B    	CHKIN2  5885    	CHKIOK  5883    	CHKLNN  4098    
CHKNNT  588D    	CHRSRC  72EC    	CHRTBL  94BF    	CLEOL1  7591    
CLEOL2  7593    	CLEOP1  74EE    	CLMK1   5133    	CLMK2   512F    
CLMK3   512B    	CLMK4   5127    	CLMK5   5123    	CLRCBF  726D    
CLREOL  758F    	CLREOP  74EA    	CLRFLT  90F8    	CLRLP1  4F5A    
CLRMRK  63A0    	CLRNG1  4CCA    	CMPL1   78D4    	CNCODD  8B2E    
CNCTW   8B3B    	CNCTWE  8B25    	CNCTW1  8B57    	CNCTW2  8B62    
CNCT1   8AF5    	CNMR    4C94    	CNSNM1  8EE0    	CNSPDL  65BD    
CNSSTR  4B90    	CNSTF1  8EEF    	CNTDWN  6DF0    	CNTLOP  6DF7    
CNTLP2  6E00    	CNUML1  4BED    	CNUML2  4C95    	CNUM2A  4CA8    
CNUM2B  4CA1    	CNUM2C  4CB0    	CNUM2D  4CBB    	CNUM2R  4CC2    
CNUM2X  4CC6    	COLR  = 00DF    	COMMNT= 0302    	COMPL   78D1    
COMPL1  69F6    	CONCAT  8AE8    	CONS    5314    	CONSG1  539B    
CONSNM  8ED1    	CONSR   53B3    	CONSTF  8EE9    	CONST2  53A5    
CONS2   53BA    	CONS2A  53C0    	CONTIG  5BBD    	COPY    8B87    
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-330
LOGO	SYMBOL TABLE

COPYW   8BA7    	COPYWE  8BEB    	COPY1   8B97    	COUNTM  6DD6    
COUT    7500    	COUTZ   752F    	COUT1   751D    	CR      753B    
CRMON   74BE    	CROUT   759B    	CSPD1   65CD    	CSWH  = 0037    
CSWL  = 0036    	CURTOK= 0063    	CV    = 0025    	CVBFIX  6771    
CVBL1   6791    	CVBNMF  6798    	CVBNMR  6789    	CVFIX   675F    
CVFIXX  676B    	CVFLO   67AA    	CVFX1   6785    	CVFX2   6787    
DATAOT  73B1    	DATOM = 0009    	DBUGSW= 000A    	DCOFLG= 000D    
DECPNT  6AA7    	DECPT2  6AB2    	DEFNER  5FF9    	DEFNWE  5FCB    
DEFNXE  5FF2    	DEFNX1  5FDF    	DEFUN   5F42    	DEFUNW  5F87    
DEFUNX  5FD3    	DEFUN1  5F4F    	DELETE  6E69    	DELETM= DBA2    
DELET2  6E77    	DERCOD= 00DE    	DERROR  7080    	DIG     72FC    
DIGITP  4E45    	DIGN    4E49    	DIGP1   4E4B    	DIGY    4E43    
DIV1    6A09    	DIV2    6A0C    	DIV3    6A16    	DIV4    6A1B    
DLNGFG= AAB6    	DLTW    56EC    	DLTWE   5742    	DLTWF   572D    
DLTW1   5716    	DLTW2   56F0    	DONE    7957    	DOSEAT= A851    
DOSERR= 00D8    	DOSSTP  70AE    	DPRHEX  715E    	DPRH1   7166    
DPRLEN  7143    	DPR2HX  7155    	DSERET= 9D5A    	DSKFUL  70A4    
DSPFL1= 0033    	DSPFL2= 007F    	DTPATM  7213    	DTPTMW  7220    
DV2     792A    	D0AD    92E3    	D0AE    92E4    	D0A2    92D8    
D0F3    93EC    	D0F9    92F6    	D01B    9259    	D02E    9279    
D062    92A9    	D063    92AA    	D075    92BA    	D088    92BF    
D09B    92D2    	D091    92C8    	D094    92CB    	D099    92D0    
D1AD    9394    	D1BC    93A3    	D1B2    9399    	D1CF    93BF    
D1EA    93DA    	D1EB    93DB    	D1EC    93DC    	D11C    9319    
D111    930E    	D12B    9327    	D12D    9329    	D121    931E    
D123    9320    	D125    9322    	D127    9324    	D14A    9346    
D151    934C    	D153    934E    	D164    9352    	D17C    9368    
D197    9380    	D3AC    943A    	D3ACL   943C    	D3AC1   9443    
EBFEND= 3FFB    	ECMP2   880F    	ECMP3   881F    	ECMP4   8829    
EDBOD = 009A    	EDBUF = 2000    	EDDONE  6B4F    	EDDON2  6B5B    
EDIN    4471    	EDIN1   4487    	EDIN2   4473    	EDLERR  4E87    
EDLINE  4E4E    	EDL1    4EE9    	EDOPCR  6BB4    	EDORTS  6AE2    
EDOUT   6AC9    	EDOUT1  6ADA    	EDPBUF  6B83    	EDPCHR  6BBB    
EDPCH2  6BCF    	EDPCR1  6BB7    	EDPRS2  6BF7    	EDPRS3  6C02    
EDPRTS  6BE0    	EDSPBF  6B7B    	EDSPB1  6B99    	EDSPCR  6BD8    
EDSPLP  6B8B    	EDSW  = 0008    	EDTATM= 0084    	EDTSR1  5B12    
EDTSR2  5B17    	EDTSR3  5B1A    	EDTSR4  5B1D    	EDTSR5  5B20    
EDTSTP  5AD6    	EL1     8288    	EL1R    82BF    	EMPTWD  4B0B    
EMTWD1  4B09    	ENDBUF= 00C7    	ENDMSG= DB72    	ENDTAB= 3D2C    
EPOINT= 00C5    	EPRMPT= 003E    	EQ      81BE    	EQA     8230    
EQA1    823A    	EQF     8205    	EQFC    8211    	EQFF    81EE    
EQFLP   8224    	EQF1    8222    	EQF2    821F    	EQL     81FC    
EQLIST  824B    	EQLST1  8256    	EQO     81DC    	EQO1    81E2    
EQPOP   81F9    	ER    = 0304    	ERASE = 0306    	ERDBK1  6B75    
ERNAMS  88A1    	ERNMSW  88B0    	ERNMWE  88D4    	ERNMX   88DC    
ERNMX1  88E8    	ERPROS  8876    	ERPRSW  887E    	ERRFLG= 0010    
ERRM1 = DAD5    	ERRM2 = DADF    	ERRM3 = DAE9    	ERRM4 = DAEE    
ERROR   6147    	ERROR1  47D2    	ERROR2  4859    	ERRO1   6159    
ERRRET= 0012    	ERRTBL= D0D8    	ERRW    618C    	ERRWE   61DE    
ERRWE1  61E6    	ERRW1   61CA    	ERRW2   61CF    	ERRW3   61D1    
ERRW4   61D6    	ERRZ1   61AE    	ERRZ2   61B4    	ERR1    621A    
ERR1A   47E8    	ERR1B   4848    	ERR2A   486E    	ERR2A1  4865    
ERR2A2  4887    	EVAL    4141    	EVAL1   45B0    	EVEX1   42F3    
EVLEXP  4131    	EVLINE  40DE    	EVLIN1  4110    	EVLNO   42F1    
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-331
LOGO	SYMBOL TABLE

EVLN1   40F7    	EVLN1A  4126    	EVLN1P  4114    	EVLOK   42EF    
EVLUAT  40AD    	EVRETN  4557    	EVRET1  4561    	EVRET2  457D    
EVRTN1  455B    	EVWRAP  44DB    	EVW2    4500    	EW1     4585    
EW1A    45AA    	EXCED   42FB    	EXFW    5A54    	EXFWA1  5A6E    
EXFWC   5AB0    	EXFWD   5ABE    	EXFWE   5A62    	EXFWR   5A6D    
EXFW2   5A9B    	EXFW3   5AC6    	EXFW4   5AD0    	EXIFSC  5A4A    
EXIFWB  5A93    	EXPOUT= 0006    	EXTEDT  835D    	FADD    699D    
FADDGN  4D45    	FADDGX  4D2C    	FADDG1  4D59    	FADDG2  4D5A    
FADDIG  4D3F    	FADD1   69BD    	FADNML  4C2E    	FBODY = 0070    
FBODY1= 0072    	FCIRC   94F5    	FCIRC1  94F9    	FCKEN   4C5D    
FCMPLN  6EF9    	FCOMPL  69F3    	FCONS   5334    	FDIV    69AF    
FDIVD   6A01    	FDLNW   5502    	FDLNWE  554B    	FDLNWF  5557    
FDLNW3  5534    	FDVD10  4D6E    	FDV10L  4D70    	FFIXP   6A66    
FFIXP1  6A79    	FFIXR   6A65    	FFIX1   6A89    	FILLEN= AA60    
FINTK1  4B8A    	FIX   = 0003    	FLIST = 000C    	FLLIN   562B    
FLNFND  709F    	FLO   = 0004    	FLOTN1  692C    	FLOTN2  6923    
FLT10   94F1    	FMDECI  4C84    	FMUL    69AA    	FMULT   69DB    
FMUL1   69E4    	FMUL2   69EC    	FNCAL1  45BC    	FNDIGD  4C39    
FNDLIN  54E7    	FNORM   6998    	FORCHR  6ECE    	FORCH2  6EDC    
FORCH3  6EFC    	FORCH4  6F04    	FORCH5  6F0E    	FPACK = 000B    
FPTR  = 0076    	FRAME = 006C    	FRLIST= 005F    	FSUB    69A2    
FSUBX   69A5    	FSUB1   69B7    	FULCHR= 0006    	FUNCAL  45B5    
FUNCT = 0067    	FUNTYP= 000E    	FUN1    45D0    	FXDIG   4C77    
FXPOS   4C67    	GANSN2= 00D7    	GARCOL  625B    	GBDGR   5987    
GCHK    90E5    	GCLEAR  924D    	GCLERR  6391    	GCLP1   63AA    
GCLP1A  63B6    	GCLP2   6271    	GCLP2A  6281    	GCLP3   6295    
GCLP3A  62BC    	GCLP3X  62A1    	GCLP4   62C6    	GCLP5   62DB    
GCLP5A  62F0    	GCLP5B  62FB    	GCLP5E  62FF    	GCLP6   6348    
GCLP6C  6365    	GCLP6D  6376    	GCLP6E  637C    	GCLP6F  636B    
GCOL1   630D    	GCOL1L  6311    	GCR     7746    	GCVEND= 009E    
GCVST = 0088    	GDELET  76A0    	GDLDON  76BB    	GDLINE  9064    
GDLIN1  906E    	GDLTLP  76A8    	GETFUN  5692    	GETHED  91A6    
GETHIG  4E8C    	GETINT  6892    	GETLEN  5632    	GETLN   7608    
GETLN3  7652    	GETL1   6896    	GETNGS  5477    	GETNMB  7319    
GETNUM  58DC    	GETNXT  6F9B    	GETPNM  5988    	GETPRC  5301    
GETRM1= C08B    	GETRM2= C083    	GETTPE  5DA5    	GETTPF  5DA6    
GETTP4  5D9B    	GETTYP  5D84    	GETVAL  52D1    	GETWDS  5B23    
GETX    948A    	GETY    9495    	GHOMEM= 00D0    	GINSDN  7736    
GINSL1  7716    	GINSL2  7730    	GINTP1  680C    	GINTP2  6811    
GLENW   5642    	GLENW1  5646    	GLENW2  566B    	GLINE   93ED    
GNORM   94AA    	GNORM1  94BE    	GNORM2  94B1    	GNXTC   769D    
GNXTX   7694    	GO      7475    	GOBDIG  597F    	GOPTR = 0078    
GPOSN   926C    	GPRCS   5307    	GPRCU   5313    	GRPEND= 4000    
GRPHCS= 0009    	GRPHK1  94FD    	GRPSTT= 2000    	GRP0  = 00D8    
GRP1  = 00D9    	GRP2  = 00DA    	GRP5  = 00DB    	GRUBOT  7658    
GSAVX   94A0    	GSETH   8FDE    	GSETHR  902F    	GSETHX  8FE6    
GSETX   8FC5    	GSETY   8FD3    	GSHWT1  9075    	GSTX1   8FCD    
GSTY1   8FDB    	GSVXL   94A2    	GTBL1   7A0E    	GTBL2   7A1B    
GTBOOL  79FF    	GTBUF   7272    	GTDC1   6901    	GTDECH  68AF    
GTDL1   68D6    	GTDL3   68F2    	GTDL3E  68F9    	GTDOWN  6FBF    
GTDR    68AE    	GTD1    68A6    	GTERR1  584F    	GTERR2  5852    
GTFN1   56B0    	GTFN2   56CB    	GTFR    560A    	GTFULN  55DB    
GTF2    55F4    	GTHE    4EDC    	GTHW    4E9D    	GTH3    4ED1    
GTLC2   7A45    	GTLC2A  7A4D    	GTLC3   7A55    	GTLNR1  7749    
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-332
LOGO	SYMBOL TABLE

GTLNR2  7757    	GTLNR3  76FB    	GTLNX1  7643    	GTLNX2  7645    
GTLN1C  7674    	GTLN1D  76D9    	GTLN1L  7622    	GTLN1X  762E    
GTLN2A  7701    	GTLSTC  7A39    	GTMP4 = 00DC    	GTNG1   547B    
GTNG2   5488    	GTNML   58FC    	GTNMNO  58EF    	GTNM2   58F1    
GTNUM1  58DA    	GTNUM2  58C0    	GTNXTK  43E0    	GTNXT2  6FAA    
GTNXT3  6FB6    	GTPNW   59D5    	GTPNWE  59E5    	GTPN1   59A5    
GTPN2   59C4    	GTRDP2  6FFA    	GTRDP3  700A    	GTRDSP  6FEC    
GTRTS   7A0D    	GTSZND  5C6C    	GTSZW   5C38    	GTSZX   5C52    
GTSZX1  5C56    	GTSZX2  5C5C    	GTTULN  560B    	GTT1    5612    
GT1FIX  5862    	GT1FX1  5873    	GT1NMX  585A    	GT1NUM  5855    
GT2FIX  588F    	GT2FX1  58AC    	GT2FX2  58B8    	GT2NM1  5841    
GT2NM2  584A    	GT2NUM  5824    	GWELSE  5BF7    	GWIF2   5BD0    
GWIF3   5BDF    	GWIF4   5BEA    	GWRTS   5B5B    	GW1     5B43    
GW1A    5B37    	GW1W    5B55    	GW1WA   5B6B    	GW1W1   5B6F    
GW1X    5B77    	GW1X2   5B93    	GW1X3   5B9E    	HDPOS   91D2    
HDYNEG  91EA    	HDYNL   91EC    	HDYPOS  91F9    	HEADNG= 00D3    
HELSTR= D9F8    	HOME    74E0    	IALL  = 0036    	IBACK = 0027    
IBOTH = 0011    	IBPT  = 001A    	IBTFST= 001E    	IBTLST= 0020    
ICALL = 0058    	ICATLG= 006C    	ICHNGE= 005C    	ICLEAR= 0067    
ICLINP= 005B    	ICNTIN= 000D    	ICOMNT= 0044    	ICS   = 002B    
ICTYI = 0055    	ICURSR= 0056    	IDEBUG= 000C    	IDEFIN= 000B    
IDELET= 006B    	IDIF  = 003F    	IEDIT = 0023    	IEITHR= 0012    
IELSE = 000F    	IEMPTP= 002F    	IEND  = 0024    	IEQUAL= 0045    
IERASE= 0038    	IFIRST= 001F    	IFLEVL= 0082    	IFORWD= 0026    
IFPUT = 0034    	IFP1    54BB    	IFP2    54BD    	IFP3    54E5    
IFULL = 0069    	IGCOLL= 001C    	IGDBYE= 001B    	IGO   = 0019    
IGREAT= 0042    	IHDING= 0065    	IHIDET= 0031    	IHOME = 002C    
IIF   = 0017    	IINT  = 0068    	ILAST = 0021    	ILEFT = 0029    
ILESS = 0043    	ILINE = 0098    	ILIST = 002A    	ILISTP= 0059    
ILPAR = 0015    	ILPUT = 0053    	IMAKE = 0006    	IMIX  = 006A    
INAMES= 0037    	INCEXP  4D7B    	INCPNT  6AA0    	INCPT2  6AA6    
INCVE   49D9    	INCVSP  49C9    	INDEV = 0057    	INDIF = 004D    
INDSPL= 0066    	INEQUL= 0052    	INFDIF= 0328    	INFIXP  54B3    
INFSUM= 0326    	INGRTR= 0050    	INITLZ  4F3A    	INLESS= 0051    
INMBRP= 005A    	INODES= 001D    	INOT  = 0014    	INPROD= 004E    
INPRT   7452    	INQUOT= 004F    	INSDS1  7298    	INSERT  6D27    
INSRCR  6D5B    	INSRTS  6D54    	INSRT0  6D4B    	INSRT1  6D48    
INSRT2  6D55    	INSUM = 004C    	INTERN  5FFE    	INTRNX  608D    
INULL = 0000    	INVFLG= 0032    	IOADR = 00C0    	IOERRR  7095    
IOPRT   7464    	IOPRT1  7472    	IOTPUT= 0007    	IPAUSE= 000E    
IPEEK = 004A    	IPENDN= 002E    	IPENUP= 002D    	IPO   = 0035    
IPOKE = 004B    	IPOTS = 0047    	IPRINT= 0009    	IPROCS= 0049    
IPROD = 0040    	IQUOT = 0041    	IRANDM= 0054    	IREAD = 0039    
IREQST= 003B    	IRETRV= 003D    	IRIGHT= 0028    	IRNDMZ= 0057    
IRPAR = 0016    	IRPEAT= 005D    	IRQVEC= FFFE    	IRUN  = 0018    
ISAVE = 003A    	ISETH = 0061    	ISETT = 0062    	ISETX = 005E    
ISETXY= 0060    	ISETY = 005F    	ISHOWT= 0030    	ISNTNC= 0010    
ISTOP = 0008    	ISUM  = 003E    	ITEXT = 0025    	ITHEN = 0013    
ITHING= 003C    	ITHNGP= 0001    	ITITLE= 0033    	ITITLS= 0048    
ITO   = 0022    	ITRCBK= 0046    	ITSTAT= 0032    	ITYPE = 000A    
IUNDIF= 0005    	IUNSUM= 0004    	IWORD = 0002    	IWORDP= 0003    
IXCOR = 0063    	IYCOR = 0064    	JFLS    797E    	JTOP    4845    
JTRU    7992    	KBD   = 0000    	KEYIN   75B8    	KILRAM= C08A    
KNONE   75EB    	KPCLR = C010    	KPFLAG= C000    	KRTS    75CD    
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-333
LOGO	SYMBOL TABLE

KSWH  = 0039    	KSWL  = 0038    	LASTPP= 0328    	LATOM = 000A    
LBRAK = 005E    	LBUG1 = DA36    	LCKFIL  70A9    	LDELET  56D7    
LELSE = 0308    	LEND  = 030A    	LEVNUM= 007C    	LF      753F    
LFALSE= 0050    	LIF   = 030C    	LINARY= 0200    	LINERR  4E82    
LININC= 000A    	LINNUM= 0074    	LINPEK  5559    	LIST  = 0000    
LNIL  = 0000    	LOADM = DB9A    	LOGO    4000    	LOGOM = DBB6    
LOGO1   402A    	LPAR  = 030E    	LPK1    556B    	LSTKEY= 0013    
LSTOP = 0310    	LT      73F8    	LTHEN = 0312    	LTITLE= 0314    
LTPA    664A    	LTPD    6645    	LTPD1   6647    	LTPF    6661    
LTPF1   6667    	LTPL    6656    	LTPLS   666D    	LTPQ    6641    
LTPRTS  6741    	LTPS    6650    	LTRUE = 004E    	LTYPE   65F9    
LTYPL1  662C    	LT2     73FA    	MAKFLO  4C8A    	MAKPNM  6578    
MARK    63FC    	MARKA   63C3    	MARKX   6404    	MARK1 = 0088    
MARK2 = 008A    	MARK3 = 008C    	MARK4 = 008E    	MARK5 = 0090    
MDEND   69EF    	MD1     696B    	MD2     6A31    	MD3     6A3F    
MD8CHK  73A8    	MIXCHR= 000C    	MKPN1   65AF    	MKPN2   65B4    
MKPN3   65BA    	MKP2L1  6596    	MKSFUN  51A4    	MLN10L  4D63    
MODE  = 0031    	MON     72D3    	MONBRK  72AA    	MONFLG= 0054    
MONNUM= 000F    	MONZ    72D7    	MOVE    7404    	MOVEUP  6E87    
MOVLOP  4019    	MRKAW   63D8    	MRKAW1  63E2    	MRKAW2  63EE    
MRKCF   646D    	MRKCF1  6478    	MRKCL   6483    	MRKCL1  6494    
MRKCN   646F    	MRKCP   64B1    	MRKCP1  64B6    	MRKCS   647E    
MRKCU   649A    	MRKPW   64C9    	MRKPW1  64E4    	MRKPW2  6516    
MRKPX   651A    	MRKPXE  6526    	MRKPX1  6533    	MRKRTS  63C2    
MRKW    640B    	MRKW1   6415    	MRKW2   6432    	MRKW3   6427    
MTC1W   60D8    	MTC1WE  6116    	MTC1WF  611E    	MTC1W1  60E0    
MTC2W   602B    	MTC2W1  6038    	MULCOS  91FC    	MULEND  7845    
MULN10  4D61    	MULSIN  9201    	MUL2    780B    	MUL4    7824    
MUL4A   7839    	MUL4B   7830    	MUL4C   783C    	MVCONT  6D80    
MVDOWN  6D63    	MVLOOP  6D72    	MVRTS   6D93    	MVRTS1  6D99    
MVULOP  6E9F    	MVULP2  6EAD    	MVURTS  6EBF    	NAMES = 0316    
NARGS = 0005    	NARG1 = 00A2    	NARG2 = 009E    	NCNTIG  5BBB    
NCONS   534C    	NEST  = 007E    	NEWLIN= 0001    	NEWLST= 0002    
NEWWIN  6FDF    	NEXTC   762B    	NEXTOK= 0065    	NFLDG1  4C50    
NFLDIG  4C45    	NMIVEC= FFFA    	NMROL1  4CE1    	NMROR1  4CEA    
NNODES= 00C3    	NODLIM= 0966    	NODTST= 0032    	NORM    78FA    
NORMX   69F1    	NORM1   698A    	NOTNM1  5984    	NOTNM2  5986    
NOTNUM  4B54    	NPRVLN  7620    	NTDIG   7351    	NTFIX1  4C59    
NTFIX2  4C1F    	NTFIX3  4C1C    	NTFRST  4BB0    	NTFX2A  4C25    
NTLST   8D3C    	NTNUM   4C93    	NULOUT  6AE4    	NUMOK   4C1A    
NUMOVF  4D99    	NWARN   483B    	NXTA1   737E    	NXTA4   7378    
NXTBAS  730A    	NXTBIT  7302    	NXTBS2  7314    	NXTCHR  731F    
NXTCHS  4B66    	NXTE    4BEA    	NXTITM  72E5    	NXTSCR  6E1C    
NXTSC2  6E28    	NXTTWO  4B5D    	OBFNF   6060    	OBFNFE  606E    
OBFW    600F    	OBLIST= 0092    	OFSET1= 3400    	OLDBRK  72CD    
OLDWIN  6FCF    	OPLINE  701B    	OPLIN1  7029    	OPLRTS  7035    
OTPFIX  57BD    	OTPFLO  57B9    	OTPFL1  57B7    	OTPFXA  57D2    
OTPFX1  57A2    	OTPNUM  57D4    	OTPRG1  7E13    	OTPUTN= 0007    
OUTDEV= 0058    	OUTPRT  745E    	OVCHK   6A46    	OVFL    6A4A    
OVFL1   6A9B    	PARLOP  4302    	PARLP1  430F    	PARLP3  4339    
PARLP4  4318    	PAUSKY= 001A    	PCH   = 003B    	PCL   = 003A    
PDLBAS= 0E00    	PEN   = 00C9    	PFERR   8472    	PGMSTT= 4000    
PLLP1   668F    	PLLP1A  6698    	PLLP2   668C    	PLOP1   43EC    
PLOP1A  43FD    	PLOP1B  4416    	PLSTLP  667A    	PNMSG1= DB09    
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-334
LOGO	SYMBOL TABLE

PNMSG2= DB0E    	PNTBEG  6AB3    	PO    = 0318    	PODEFL= 0086    
POFNSW  8530    	POFUNS  8526    	PONAMS  8479    	PONRTS  84B5    
PONW1   8481    	PONW1E  84A1    	PONW2   84A9    	PONW2A  84B6    
PON1    84C6    	PON1A   84D5    	PON1B   84F6    	PON1C   851C    
POP     526C    	POPB    529E    	POPB1   52AB    	POPFRM  51EF    
POPJ    411E    	POPTZS  6847    	POP1    5279    	POTEXT  8552    
POTS  = 031A    	POTXTF  8647    	POTXTL  858D    	PPFM2   5202    
PPTTP   47F0    	PPTTP1  47F4    	PPTT2   4810    	PRA1    738D    
PRBLNK  729F    	PRBL2   72A1    	PRBL3   72A3    	PRBYTE  73C1    
PRDFLG= 0056    	PRDLIN  49DE    	PRDLNX  49F2    	PRD2    49E8    
PRD3    49EA    	PRECED= 0004    	PREVLN  7611    	PRHEX   73CA    
PRHEXC  73D5    	PRHEXZ  73CC    	PRMTAB= D501    	PRNTAX  7291    
PRNTOT= 031C    	PRNTX   7294    	PRNTYX  7290    	PROCS = 031E    
PRTHNG  660A    	PRTPDL  674B    	PRTPL1  674E    	PRTPL2  6756    
PRTS    5435    	PRTSTR  5495    	PRVSCR  6E3A    	PRYX2   7391    
PSHP1   523B    	PSHP2   5252    	PTEXTX  8554    	PTFER   5E3F    
PTFN1   57F6    	PTFN2   5800    	PTFTXE  5E3E    	PTFTXT  5DA8    
PTFTX2  5DBC    	PTFTX3  5E1E    	PTLN1   4F18    	PTRDEC  49BD    
PTRRTS  54AA    	PTRXOK  612F    	PTRYOK  613A    	PTSPNM  5459    
PTSTR1  54A0    	PTVBUG  49BA    	PTVTST  49AE    	PTXEND  85D8    
PTXERR  858A    	PTXFW   8667    	PTXFWE  8698    	PTXFW1  8673    
PTXFW2  8689    	PTXFX   86A0    	PTXFX1  86A7    	PTXFX2  86C5    
PTXFX3  86CC    	PTXFX4  86E2    	PTXFX5  86EA    	PTXFY   86EF    
PTXFYE  8720    	PTXFY1  86FB    	PTXFY2  8711    	PTXLW   85A3    
PTXLWE  85CC    	PTXLX   85D4    	PTXLX1  85DF    	PTXLX2  8613    
PTXLY   8618    	PTXLYE  8641    	PTXRTS  85D3    	PULCHR= 0010    
PUSH    523C    	PUSHP   5225    	PUTFUN  57EB    	PUTLIN  4EFF    
PUTTPE  53FF    	PUTTP2  5400    	PUTTYP  53F0    	PUTVAL  52E9    
QATOM = 0008    	QPRMPT= 003F    	RANDA = 0091    	RANDC = 002B    
RANDOM= 0052    	RCMPLN  6E66    	RDKEY   75B0    	RDKEY1  75CE    
RDLNW   4A14    	RDLNWE  4A1A    	RDL1    4A37    	RDL1A   4A33    
RDL1A1  4A1E    	RDL1A2  4A24    	RDL1B   4A39    	RDRER1= DA4C    
RDRER2= DA6D    	RDSPNT  6D9A    	RDSPT2  6DB3    	RDSPT3  6DC8    
RDSP1   735F    	READLN  49DA    	REDISP  6E09    	REDLN1  49ED    
REGCEL= 0003    	REGDSP  7352    	REGZ    74A6    	REINIT  4F6E    
RESETT  727B    	RESTOR  74C6    	RESTR1  74CB    	RETADR= 0011    
RGDSP1  7355    	RH1     444A    	RINLP2  5063    	RMUL2   89FB    
RMUL3   8A00    	RMUL4   8A06    	RNDL  = 004A    	RNDLP1  8A12    
RNDM1   8A1A    	ROFLOW  77A6    	ROR1    69D5    	RPAR  = 0320    
RPRMPT= 003C    	RSTBND  577C    	RSTBW   578C    	RSTBWE  57A1    
RSTERR  4A41    	RSTIO   7260    	RSTR    726C    	RSTVEC= FFFC    
RTAR    69CC    	RTBL    94EC    	RTLOG   69CF    	RTLOG1  69D3    
RTMSKZ  728D    	RTSA2X  59C3    	RTS1    699C    	RTS2    5B11    
RTS3    5D69    	RTS30   88A0    	RTS4B   738C    	RTS4C   73C0    
RTS5    73EF    	RTS9    8369    	RUBOT2  6E60    	RUBOUT  6E52    
RUNFLG= 000B    	RUNHAN  441B    	RWAIT   774C    	SAPOUT  7252    
SARLEN= 0600    	SARTOP= 005D    	SATOM = 0007    	SAVE    74D1    
SAVEM = DB87    	SAVEM2= DB8F    	SAVSR1  7138    	SAVSR2  713D    
SAVSR3  7140    	SAVST1  70DB    	SAV1    74D3    	SBFA    892F    
SBFA1   894E    	SBFA1A  8952    	SBFB    8984    	SBFB1   8992    
SBFC    8971    	SBFC1   897C    	SBFD    89AC    	SBFD1   89BD    
SBFD2   89C2    	SBFL    891C    	SBFNF   611F    	SBFR    8919    
SBFW    607D    	SBFWEN  608B    	SBFWJ   612C    	SBFWX   607F    
SBFW1   60B6    	SBHAK1  49C8    	SBK     9103    	SBK1    9116    
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-335
LOGO	SYMBOL TABLE

SBOTH   79C3    	SBPT    51E9    	SBST1A  5168    	SBTFST  88FD    
SBTLST  8BF0    	SBVLL1  5048    	SBVLPJ  5045    	SBVLP1  4FC9    
SBVRW   4FFE    	SBVRWE  502E    	SBVRW1  500D    	SCALL   8A72    
SCALLR= 8A7D    	SCALL1  8A7E    	SCATLG  71DC    	SCHG1   7EAA    
SCHNGE  7EB9    	SCHNG2  7EC2    	SCLEAR  8DA7    	SCLINP  8DA1    
SCMMT1  7C52    	SCNTIN  7C7F    	SCOMMT  7C45    	SCONS   5355    
SCONS1  536E    	SCONS2  5373    	SCRL1   754F    	SCRL2   7565    
SCRL3   756E    	SCRN2   7287    	SCROLL  7549    	SCRSR1  8A6D    
SCS     8DAD    	SCS1    8DD6    	SCS2    8DEE    	SCTYI   8A28    
SCURSR  8A48    	SDBG1   7C6D    	SDEBUG  7C57    	SDEFIN  7FC7    
SDELET  7036    	SDELR2  7069    	SDELR3  706C    	SDFNRR  80D8    
SDFNR1  7FFF    	SDFNR2  8002    	SDIF    77B8    	SDIFF   77DB    
SDIFL1  77C4    	SDIVF   7868    	SDIVID  7855    	SDVD1   7870    
SDVD1A  787E    	SDVD2   788D    	SDVD3   789C    	SDVD4   78A8    
SDVLP1  785C    	SDVLP2  7872    	SEDIT   836A    	SEDIT1  8383    
SEITHR  79E1    	SELSE   7CDB    	SELSE1  7D01    	SELSE2  7CF9    
SEMPTP  8D3F    	SEMPT1  8D61    	SEND    83AD    	SENDM = DAFF    
SENDR   83D7    	SEND1   83B4    	SEND2   83D1    	SEQEND  82C2    
SEQUAL  819B    	SERAP   8839    	SERAR1  884A    	SERAR2  8851    
SERAR3  8871    	SERASB  8854    	SERASE  87E0    	SERAS1  87E7    
SERPS   8833    	SERR4   7FA7    	SETARG  90D8    	SETHL   9015    
SETIFL  744B    	SETINV  7445    	SETKBD  744E    	SETMDZ  73F5    
SETMOD  73F0    	SETNRM  7449    	SETREV  7441    	SETTXT  75ED    
SETVID  745A    	SFD     9122    	SFDP1   916B    	SFDP2   919B    
SFDX    913E    	SFD1    9135    	SFIRST  80DB    	SFPT1   7A84    
SFPUT   7A65    	SFRST1  80F9    	SFRST2  8108    	SFRST3  810C    
SFULL   9052    	SFUN  = 0005    	SGCE    7E97    	SGCOLL  7E94    
SGO     7D06    	SGOE1   7D6F    	SGOR    7D7A    	SGOW    7D30    
SGOW1   7D38    	SGOW2   7D67    	SGO1    7D1C    	SGRLP1  7973    
SGRTFM  799F    	SGRTF1  79A3    	SGRTR   7964    	SGRTRF  7995    
SGRTRM  7981    	SGRTRP  7971    	SGRTRX  7967    	SGRTR1  7969    
SHDING  8E34    	SHFT    790F    	SHFTX   790E    	SHIDET  9043    
SHOME   8E0F    	SIF     7C88    	SIFA    7C93    	SIF1    7CA9    
SIF2    7CB8    	SIF3    7CC5    	SIF3A   7CB5    	SINODS= F660    
SINT    78C4    	SINTB1= DBBA    	SINTB2= DC72    	SINT1   78CC    
SIZE1 = 0018    	SIZE2 = 001A    	SKPPTH  59EE    	SKPPW   5A14    
SKPPW2  5A3B    	SLAST   813A    	SLESS   79AC    	SLFDLP  4DD8    
SLF1    4DFD    	SLF2    4DEB    	SLF3    4E0F    	SLIST   8D67    
SLISTP  8D12    	SLISTW  8D7D    	SLIST1  8D6F    	SLPTW   7B03    
SLPT2   7B3C    	SLPUT   7A8D    	SLPUT1  7AB3    	SLPUT2  7AC9    
SLSTWE  8D91    	SLST1   8159    	SLST2   816D    	SLST3   8191    
SLT     8E63    	SLT1    8E76    	SMAKE   7BF6    	SMAKE1  7C0B    
SMAKE2  7C15    	SMIX    905B    	SNDIF2  777F    	SNDSPL  8DF1    
SNMBRP  8D21    	SNODES  7E5D    	SNOT    79B5    	SNSM1   78C1    
SOBLP1  4FAD    	SOBLST= 0059    	SOBST1  5138    	SOBTOP= 005B    
SOTPT1  7C2F    	SOTPT2  7C26    	SOUTPT  7C1E    	SP    = 0014    
SPEEK   89CC    	SPENDN  8E05    	SPENUP  8DFB    	SPKERR  89EC    
SPKR  = C030    	SPNT  = 0049    	SPO     83DA    	SPOKE   89DC    
SPON    8408    	SPOTS   8424    	SPO1    83E5    	SPO1A   8434    
SPO2    8410    	SPO3    841A    	SPO4    8449    	SPO5    845B    
SPO5A   842C    	SPO5S   846B    	SPRDL1  7804    	SPRDL2  7818    
SPRD1   77F7    	SPRD2   7800    	SPRINT  7FAA    	SPROD   77E3    
SPRODF  784A    	SPRODR  7852    	SPTHNG  7E1D    	SPTH1   7E30    
SPTH2   7E2D    	SPTH3   7E3F    	SPWRDP  7E42    	SRANDM  89EF    
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-336
LOGO	SYMBOL TABLE

SRDEDL  44D3    	SRDF1   7178    	SRDF2   71CE    	SRD1A   44A6    
SRD1E   44BE    	SRD1F   44C8    	SREAD   716B    	SREAD1  4461    
SREAD2  449B    	SREAD3  449F    	SRED1A  4465    	SREPT1  7DC6    
SREQU   7E6F    	SREQU1  7E84    	SRETRV  7E9A    	SRNDMZ  8A21    
SRPEAT  7D81    	SRPLOP  7D99    	SRPLP1  7DA4    	SRPLP2  7DAF    
SRT     8E3C    	SRTRE   7EB4    	SRTX    8E58    	SRT1    8E4F    
SRUN    7DD3    	SRUN1   7DE5    	SSAVE   70CE    	SSETD   9013    
SSETDL  8FF9    	SSETH   8F48    	SSETH2  9023    	SSETH3  902A    
SSETT   8F5C    	SSETTD  8F82    	SSETTL  8F72    	SSETTR  8FC2    
SSETX   8EF3    	SSETXY  8F24    	SSETY   8F0A    	SSHOWT  9034    
SSHWTR  9040    	SSMLP1  7791    	SSNERR  7BE6    	SSNTNC  7B56    
SSNW    7B64    	SSNWA   7B78    	SSNW1   7B92    	SSNW2   7BF1    
SSNX    7BA5    	SSNY    7BC7    	SSNY1   7BD3    	SSN1    7B5E    
SSN2    7B68    	SSTOP   7C36    	SSTOP1  7C3E    	SSTTLL  8F88    
SSTTP   8FB9    	SSTTS   8FB0    	SSUM    7785    	SSUMF   77AB    
SSUMOK  77B3    	STATUS= 0048    	STDERR  706F    	STEXT   8005    
STEXT1  8023    	STEXT3  80CE    	STFFA   5C77    	STFFW   5CD7    
STFFWE  5D3C    	STFFW1  5CDB    	STFFX   5CF1    	STFFXE  5D23    
STFF1   5C80    	STFF2   5CB4    	STHING  7DE8    	STH1    7DFD    
STITLE  7EC5    	STKLEN= 11F9    	STKLIM= 0050    	STKTR   52C1    
STKTST  5412    	STKTS1  52B0    	STKTZ   52C2    	STLR4A  7EEF    
STO     82D2    	STOERR  8356    	STOR    73E3    	STOW    8307    
STOWE   8338    	STOW2   8316    	STOW3   832C    	STOX    9431    
STOY    9485    	STO1    82E2    	STO1A   82F9    	STO2    82DB    
STPFLG= 000C    	STPFUL  5449    	STPKEY= 0007    	STPMIX  5451    
STPPEK  5415    	STPPKZ  5436    	STPPK1  543B    	STPTR1  499B    
STRCBK  8726    	STRING= 0002    	STS     8E9F    	STTLR1  7ED8    
STTLR2  7EDD    	STTLR3  7EE2    	STTLR4  7EEC    	STTLW   7F4C    
STTLWE  7F8B    	STTLW2  7F74    	STTLW3  7F86    	STTL1   7EF6    
STTL2   7F29    	STTL3   7F48    	STUFF   5C0A    	STXTW   806E    
STXTWE  809B    	STXTX   80A1    	STXTXE  80C0    	STXTX1  80AD    
STXT1A  8043    	STXT1B  8037    	STYPE   7FBA    	SUBTBL  94CE    
SUNDIF  7766    	SUNSUM  78AD    	SWAP    697A    	SWAPT1  655C    
SWAPT2  656A    	SWAP1   697C    	SWORD   8A81    	SWPALN  69BA    
SWPLP1  6560    	SWPLP2  656E    	SWRDW   8AA1    	SWRDW1  8ABB    
SWRD1   8A89    	SWRD2   8ACE    	SWRD3   8AD9    	SXCOR   8E24    
SYCOR   8E2C    	SYSBUG  51CD    	SYSMON= FF59    	SYSTAB= 0030    
S1CONS  5363    	TBMSG1= DB14    	TBMSG2= DB2D    	TCBKW   874F    
TCBKWE  87DA    	TCBKW1  8756    	TCBKX   8770    	TCBKXE  87C1    
TCBKX1  877E    	TCBKX2  87B3    	TCBKX3  879F    	TCBKX4  87A1    
TCBK1   8734    	TDIFF = A000    	TEMPN = 00A8    	TEMPNH= 00A6    
TEMPN1= 00AA    	TEMPN2= 00AC    	TEMPN3= 00AE    	TEMPN4= 00B0    
TEMPN5= 00B4    	TEMPN6= 00B6    	TEMPN7= 00B8    	TEMPN8= 00BA    
TEMPX1= 00BC    	TEMPX2= 00BE    	TEMPX3= 006A    	TFKADV  558D    
TFK1    5593    	TFK2    55A9    	TFK2A   55B4    	TFK3    55C5    
TGTTOK  4A4E    	TGT1    4A58    	TGT2    4A66    	TGT3A   4AD2    
TGT3B   4AE1    	TGT3B1  4AEB    	TI    = 0322    	TITLES= 0324    
TKAORL  4ADA    	TKATM1  4B14    	TKATM2  4B02    	TKATOM  4AF8    
TKLBR   4A94    	TKNDL   4AC3    	TKRBR   4AA4    	TKRBR1  4AB6    
TLLEVS= 0080    	TMPNUM= 0010    	TMPSTT= 00A6    	TMPTAB= 032A    
TOKPTR= 0061    	TOMSG = DB6E    	TOPEDL  4090    	TOPLIN  4085    
TOPLOP  4065    	TOPSCR  6ABC    	TOSUB   7337    	TPATMW  66EF    
TPBFIX  6748    	TPCHR   7284    	TPFLEP  6880    	TPFLEX  6882    
TPFLF1  685A    	TPFLG1  67E7    	TPFLG2  6856    	TPFLL1  67B2    
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-337
LOGO	SYMBOL TABLE

TPFLL2  67EC    	TPFLL3  6868    	TPFLL5  6829    	TPFLL6  6840    
TPFLR   6823    	TPFLR1  6830    	TPFLS1  6803    	TPFL1   67C7    
TPFL2   67D5    	TPP1    66BC    	TPSATM  6725    	TPSTMW  6733    
TPTMWE  6718    	TRTS    75E9    	TSHOWN= 00CA    	TSTCHR  75D9    
TTKADV  5575    	TTKE    558C    	TTLA1 = 00A0    	TTLA2 = 006E    
TTLC1 = 0006    	TTLC2 = 0012    	TTLC3 = 000C    	TTLHOM  90F0    
TTLL1   90FC    	TYPACS  5D6A    	TYPATM  66D5    	TYPBAS= C260    
TYPEND= FFF8    	TYPFIX  6742    	TYPFLO  67A4    	TYPLEN= 0998    
UCENTR  7015    	UCMPLN  6F98    	UFRMAT= 000F    	UFUN  = 0006    
UF1     475F    	UF1A    476B    	UF1C    4777    	UF1D    477F    
UF2     47A0    	UF2A    47A2    	ULDV1   5751    	ULDV2   575D    
ULDV3   576F    	ULDV3A  5770    	ULNADV  5743    	ULNEND= 007A    
UNDIF = 0096    	UNDSTP  70C7    	UNFUNC  5673    	UNSTUF  5E42    
UNSUM = 0094    	UPLINE  6F64    	UPLOP1  6F7A    	UPLOP2  6F89    
USRADR= 03F8    	USTFE   5F41    	USTFE1  5E6C    	USTFW   5E90    
USTFWE  5EAA    	USTFW2  5E7B    	USTFX   5EB2    	USTFXE  5F32    
USTFX1  5EBE    	USTFX2  5F0F    	USTFX3  5F24    	USTFY   5EC9    
USTFYE  5EF9    	USTFY1  5ED5    	USTFY2  5EE0    	USTF1   5E62    
USTF2   5E6D    	UTPSCR  7018    	VAL1    43B2    	VAL1R   43D9    
VARGLP  435D    	VDT   = 0000    	VFY     740E    	VFYOK   7430    
VPDLBA= 1FF7    	VPLFLS  7A2F    	VPLTRU  7A25    	VPOP    5285    
VPOP1   5292    	VPRMTB= D9A4    	VPRMTE= D9F8    	VPSH1   526B    
VPUSHP  5253    	VRGLP1  4386    	VSP   = 0016    	WAIT    775A    
WAITM = DB77    	WAIT1   775B    	WAIT2   775C    	WNDBTM= 0023    
WNDLFT= 0020    	WNDTOP= 0022    	WNDWTH= 0021    	WRNMSG= DABC    
WRTS    7765    	WTPROT  709A    	XAM     73AE    	XAM8    739E    
XARGTB= 001A    	XBRK  = 0010    	XCASA   41C3    	XCASA1  41D7    
XCASA2  4206    	XCASA3  41F1    	XCASA4  41F9    	XCASA5  41EA    
XCASD   4195    	XCASF1  421F    	XCASL   4190    	XCASQ   41B3    
XCASQ1  41BB    	XCHK    9401    	XCHKM   941E    	XCHL    942A    
XCONS   537B    	XCONSG  5395    	XCONS2  5396    	XCOR  = 00CB    
XCRSR = 0022    	XDBZ  = 001C    	XDEF  = 0016    	XDIVID  78ED    
XDKF  = 0028    	XDLP1   78F1    	XDLP2   7921    	XDLP3   794C    
XDVD10  78E1    	XEDT  = 0015    	XELS  = 000F    	XEOL  = 0002    
XETL  = 0017    	XEVL1   414A    	XEVL2   4155    	XEVL3   415C    
XEXCED= 0003    	XFLOAT  693B    	XFLT1   693F    	XFLT2   6951    
XFNF  = 0027    	XFRAME= 006E    	XHNV  = 0004    	XIFX  = 0008    
XILN  = 001F    	XINT1   6A57    	XINT2   6A4E    	XIOR  = 0025    
XLABEL= 0011    	XLKF  = 0029    	XLNF  = 0014    	XLNTB = 001E    
XMON    74A9    	XNDF  = 0021    	XNED  = 0018    	XNOP  = 0006    
XNSTOR= 0000    	XNSTRN= 0001    	XNTF  = 000E    	XNTL  = 000D    
XNWE  = 001D    	XN1TOY  4CF3    	XN1YL   4CF5    	XN2TOY  8E93    
XN2YL   8E95    	XOFLOW= 0020    	XOOB  = 0024    	XOPO  = 0019    
XORDRW  907A    	XORHK1  93AD    	XORHK2  93B1    	XRDR    90D7    
XRDRL1  907F    	XRDRL2  90D1    	XREG  = 0046    	XRPN  = 0007    
XRTS    9428    	XSFNCL  45D6    	XSFNC1  45E7    	XSTOP = 0002    
XTAIL   4895    	XTAIL1  48AB    	XTAIL2  48B6    	XTAIL4  4995    
XTAIL5  4976    	XTALWA  48E6    	XTALWB  491E    	XTALW1  48EA    
XTALW2  4922    	XTHN  = 0012    	XTIP  = 000A    	XTLWAE  4915    
XTLWBE  495E    	XTML  = 001B    	XTMO  = 0005    	XUBL  = 000C    
XUDF  = 0003    	XUFNCL  4613    	XUFNW   4714    	XUFNWE  4754    
XUFN1   4676    	XUFN1A  468B    	XUFN2   465C    	XUFN3   4667    
XUFN5   466B    	XUFN6   4696    	XUFN6B  46E2    	XUFN6C  4700    
XUOP  = 0001    	XVNA  = 0009    	XWTA  = 000B    	XWTP  = 0026    
APPLE-LOGO	CROSS 6(33)  7-AUG-80  02:20  PAGE 1-338
LOGO	SYMBOL TABLE

XXBRK   32A7    	XXCRS   3449    	XXDBZ   33BB    	XXDEF   3332    
XXDKF   34CE    	XXEDT   3311    	XXELS   3292    	XXEOL   314C    
XXETL   3347    	XXFNF   34BF    	XXHNV   3180    	XXIFX   31C5    
XXILN   3410    	XXIOR   3499    	XXLAB   32BB    	XXLKF   34EE    
XXLNF   32F8    	XXLNT   33FC    	XXNDF   3438    	XXNED   3366    
XXNOP   31A8    	XXNTF   326D    	XXNTL   3242    	XXNWE   33D7    
XXOFL   3424    	XXOOB   3484    	XXOPO   337E    	XXRPN   31B8    
XXSFR1  4602    	XXSFR2  4607    	XXSFR3  460C    	XXTHN   32E3    
XXTIP   31FA    	XXTML   33A1    	XXTMO   318F    	XXUBL   3230    
XXUDF   3163    	XXUOP   312C    	XXVNA   31E2    	XXWTA   3216    
XXWTP   34A3    	XXYNT   346A    	XYNT  = 0023    	XYN1L   4D01    
XYN2L   8E89    	XYTON1  4CFF    	XYTON2  8E87    	XZAP  = 0013    
YCHK    9448    	YCHKM   9472    	YCHL    947E    	YCHL1   944F    
YCOR  = 00CF    	YESLST  8D1E    	YREG  = 0047    	YRTS    947C    
YSAV  = 0034    	YSAV1 = 0035    	ZAPMSG  622B    	ZMODE   734D    
ZPC1    6246    	ZPC2    624D    	ZPC3    6254    	ZPMSG1= DA8B    
ZPMSG2= DA9D    	ZPMSG3= DAA7    	ZZZZZZ= 94BF    	.     = 95F6    



 ERRORS DETECTED:  0

 *LOGO/PTP,LOGO=LOGO/M65
 RUN-TIME: 86 154 5 SECONDS
 CORE USED:  7K

