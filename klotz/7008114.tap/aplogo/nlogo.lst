APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42
NLOGO	TABLE OF CONTENTS

  	Assembly Data
  	Top Level
  	Evaluator Routines
  	Reader and Tokenizer
  	Initializations
  	Miscellaneous and Evaluator Utility Routines
  	Garbage Collector
  	Screen Editor
  	File System
  	Monitor Routines
  	System Functions
  	Turtle-Graphics Routines
  	System Tables
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1
NLOGO

     1	                    	;-*-MIDAS-*-
     2	                    
                      	.NLIST SEQ
                      	.ENABL LC
                      	.TITLE APPLE-LOGO
                      
                      	;  LOGO Language Interpreter for the Apple-II-Plus Personal Microcomputer
                      
                      	;  Written and developed by Stephen L. Hain, Patrick G. Sobalvarro,
                      	;  and the M.I.T. LOGO Group, at the Massachusetts Institute of
                      	;  Technology.
                      
                      	;  Property of the M.I.T. LOGO Laboratory,
                      	;  545 Technology Square, Cambridge, MA 02139.
                      	;  All rights reserved.
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-1
NLOGO	ASSEMBLY DATA

                      	.SBTTL	Assembly Data
                      	;	Page Zero Variables:
       0000           	LNIL	=0	;The NIL node
       0004           	PRECED	=4	;Current function's precedence
       0005           	NARGS	=5	;No. of arguments for current function
       0006           	EXPOUT	=6	;Output expected if nonzero
       0007           	OTPUTN	=7	;Number of outputs given
       0008           	EDSW	=8	;Edit mode if nonzero
       0009           	GRPHCS	=9	;Indicates graphics mode if nonzero
       000A           	DBUGSW	=10	;Debug mode if nonzero
       000B           	RUNFLG	=11	;Evaluating the RUN primitive if nonzero
       000C           	STPFLG	=12	;Stop executing current Ufun if nonzero
       000D           	DCOFLG	=13	;Return from current break-loop if nonzero
       000E           	FUNTYP	=14	;Typecode of current function
       000F           	UFRMAT	=15	;Format (List or Fpack) of current Ufun
       0010           	ERRFLG	=16	;Error code of last error
       0011           	RETADR	=17	;Holds stack pointer reset value for error recovery
       0012           	ERRRET	=18	;Holds program counter reset value for error recovery
       0014           	SP	=20	;Stack pointer
       0016           	VSP	=22	;Value-stack pointer
       0018           	SIZE1	=24	;Size of area pointed to by AREA1
       001A           	SIZE2	=26	;Size of area pointed to by AREA2
       001C           	AREA1	=28	;Pointer to g.c.-protected area of SIZE1 contiguous nodes
       001E           	AREA2	=30	;Pointer to g.c.-protected area of SIZE2 contiguous nodes
                      	;	Monitor variables:
       0020           	WNDLFT	=32
       0021           	WNDWTH	=33
       0022           	WNDTOP	=34
       0023           	WNDBTM	=35
       0024           	CH	=36
       0025           	CV	=37
                      		;DOS wants 38,39
       0028           	BASLIN	=40
       002A           	BSLTMP	=42
                      		;DOS wants 42,43,44,45,46,47
       0031           	MODE	=49
       0032           	INVFLG	=50
                      		;DOS wants 51
       0033           	DSPFL1	=51
       0034           	YSAV	=52
       0035           	YSAV1	=53	;(DOS wants 53,54,55,56,57)
       0036           	CSWL	=54
       0037           	CSWH	=55
       0038           	KSWL	=56
       0039           	KSWH	=57
       003A           	PCL	=58
       003B           	PCH	=59
       003C           	A1L	=60
       003D           	A1H	=61
       003E           	A2L	=62	;(DOS wants 62,63,64,65,66,67,68,69,70,71,72)
       003F           	A2H	=63
       0040           	A3L	=64
       0041           	A3H	=65
       0042           	A4L	=66
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-2
NLOGO	ASSEMBLY DATA

       0043           	A4H	=67
       0044           	A5L	=68
       0045           	A5H	=69
       0045           	ACC	=69
       0046           	XREG	=70
       0047           	YREG	=71
       0048           	STATUS	=72
       0049           	SPNT	=73
       004A           	RNDL	=74	;(DOS wants 74,75,76,77)
                      
       004E           	LTRUE	=78	;TRUE atom pointer
       0050           	LFALSE	=80	;FALSE atom pointer
                      
       0052           	RANDOM	=82	;Random number
       0054           	MONFLG	=84	;Flag indicates Monitor mode (if non-zero)
       0055           	BANK4K	=85	;High-RAM 4K bank select flag (0=first, 1=second)
       0056           	PRDFLG	=86	;Indicates READ_LINE is executing, for CONS
       0057           	INDEV	=87	;Input device code (zero is Apple standard I/O)
       0058           	OUTDEV	=88	;Output device code (zero is Apple standard I/O)
       0059           	SOBLST	=89	;Pointer to start of System Object List
       005B           	SOBTOP	=91	;Pointer to end of System Object List
       005D           	SARTOP	=93	;Pointer to end of System Array
       005F           	FRLIST	=95	;Pointer to start of Freelist
       0061           	TOKPTR	=97	;Token Pointer
       0063           	CURTOK	=99	;Curent Token pointer
       0065           	NEXTOK	=101	;Next Token pointer
       0067           	FUNCT	=103	;Points to current Function
       0069           	CHBUF	=105	;Character buffer
       006A           	TEMPX3	=106	;Temporary variable
       006C           	FRAME	=108	;Pointer to current stack frame
       006E           	XFRAME	=110	;Pointer to end of current stack frame
       0070           	FBODY	=112	;Pointer to full body of current Ufun
       0072           	FBODY1	=114	;Current Ufun body or System index
       0074           	LINNUM	=116	;Current Ufun line number
       0076           	FPTR	=118	;Pointer to remainder of Ufun being executed
       0078           	GOPTR	=120	;Pointer to location of Ufun to GO to
       007A           	ULNEND	=122	;Pointer to end of current line of Fpack Ufun
       007C           	LEVNUM	=124	;Ufun nesting level
       007E           	NEST	=126	;EVAL nesting of current EVLINE
       007F           	DSPFL2	=127	;(For DOS, gets saved, though)
       0080           	TLLEVS	=128	;Number of tail recursions included in LEVNUM
       0082           	IFLEVL	=130	;IF nesting level
       0084           	EDTATM	=132	;Pointer to atom of Ufun currently being edited
       0086           	PODEFL	=134	;Default Ufun atom for PO
       0088           	MARK1	=136	;Garbage collector protected variable
       008A           	MARK2	=138	;		"
       008C           	MARK3	=140	;		"
       008E           	MARK4	=142	;		"
       0090           	MARK5	=144	;		"
       0092           	OBLIST	=146	;Pointer to Object List
       0094           	UNSUM	=148	;Unary_Sum pointer
       0096           	UNDIF	=150	;Unary_Difference pointer
       0098           	ILINE	=152	;Pointer to current or last command line
       009A           	EDBOD	=154	;Pointer to body of Ufun (Flist type) currently being edited
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-3
NLOGO	ASSEMBLY DATA

       009C           	CELPTR	=156	;Garbage collector protected variable
       009E           	ARG2	=158	;Primitive's second argument
       009E           	NARG2	=158	;Primitive's second argument (numerical - 4 bytes)
       00A2           	ARG1	=162	;Primitive's first argument
       00A2           	NARG1	=162	;Primitive's first argument (numerical - 4 bytes)
       00A6           	TEMPNH	=166	;Temporary variable (must follow NARG1 for floating pt. routines)
       00A8           	TEMPN	=168	;	"
       00AA           	TEMPN1	=170	;	"
       00AC           	TEMPN2	=172	;	"
       00AE           	TEMPN3	=174	;	"
       00B0           	TEMPN4	=176	;	"
       00B2           	ANSN	=178	;	"
       00B3           	ANSN1	=179	;	"
       00B4           	TEMPN5	=180	;(Last swapped) Temporary variable
       00B6           	TEMPN6	=182	;Temporary variable
       00B8           	TEMPN7	=184	;	"
       00BA           	TEMPN8	=186	;	"
       00BC           	TEMPX1	=188	;	"
       00BE           	TEMPX2	=190	;	"
       00C0           	ANSN2	=192	;	"
       00C1           	ANSN3	=193	;	"
       00C2           	ANSNX	=194	;	"
       00C3           	NNODES	=195	;Number of nodes allocated
                      	;	Turtle-Graphics/Editor variables:
       00C5           	EPOINT	=197	;Editor point
       00C7           	ENDBUF	=199	;Location after last character in buffer
       00C9           	PEN	=201	;Indicates pen down if nonzero
       00CA           	TSHOWN	=202	;Indicates turtle shown if nonzero
       00CB           	XCOR	=203	;X-Coordinate, floating pt.
       00CF           	YCOR	=207	;Y-Coordinate, floating pt.
       00D3           	HEADNG	=211	;Heading, floating pt.
       00D7           	GANSN2	=215
       00D8           	GRP0	=216
       00D9           	GRP1	=217
       00DA           	GRP2	=218
       00DB           	GRP5	=219
       00DC           	GTMP4	=220
       00DE           	DERCOD	=222	;Error code location for DOS
       00DF           	COLR	=223	;Color
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-4
NLOGO	ASSEMBLY DATA

                      	;	LOGO primitive pointers (page 3):
       0300           	ALL	=$300
       0302           	COMMNT	=$302	;Comment
       0304           	ER	=$304
       0306           	ERASE	=$306
       0308           	LELSE	=$308	;Else
       030A           	LEND	=$30A	;End
       030C           	LIF	=$30C	;If
       030E           	LPAR	=$30E	;(Left-parenthesis)
       0310           	LSTOP	=$310	;Stop
       0312           	LTHEN	=$312	;Then
       0314           	LTITLE	=$314	;Title
       0316           	NAMES	=$316
       0318           	PO	=$318
       031A           	POTS	=$31A
       031C           	PRNTOT	=$31C	;Printout
       031E           	PROCS	=$31E	;Procedures
       0320           	RPAR	=$320	;(Right-parenthesis)
       0322           	TI	=$322
       0324           	TITLES	=$324
       0326           	INFSUM	=$326	;(Infix Sum)
       0328           	INFDIF	=$328	;(Infix Difference)
       0328           	LASTPP	=INFDIF
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-5
NLOGO	ASSEMBLY DATA

                      	;	Type code constants:
       0000           	LIST	=0	;List
       0001           	ATOM	=1	;Atom (either Qatom, Datom, Latom)
       0002           	STRING	=2	;Regular linked-list
       0003           	FIX	=3	;Integer (GT2NUM requires that FIX < FLO)
       0004           	FLO	=4	;Floating point number
       0005           	SFUN	=5	;System Function
       0006           	UFUN	=6	;User Function
       0007           	SATOM	=7	;System atom
       0008           	QATOM	=8	;Quoted atom
       0009           	DATOM	=9	;Dotted atom
       000A           	LATOM	=10	;Label atom
       000B           	FPACK	=11	;Packed Ufun
       000C           	FLIST	=12	;Regular Ufun format
                      	;	Tokenizer constants:
       0001           	NEWLIN	=1	;Start of input line
       0002           	NEWLST	=2	;Start of sublist
       0003           	REGCEL	=3	;Regular linked cell
                      	;	General constants:
       0006           	FULCHR	=$06	;Full-screen graphics character (Control-F)
       0007           	STPKEY	=$07	;Stop-key character code (Control-G)
       000C           	MIXCHR	=$0C	;Mixed-screen graphics character (Control-L)
       0010           	PULCHR	=$10	;Re-enter last line typed (Control-P)
       0013           	LSTKEY	=$13	;Interrupt output listing (Control-S)
       001A           	PAUSKY	=$1A	;Pause-key character code (Control-Z)
       003C           	RPRMPT	=$3C	;REQUEST prompt ("<")
       003E           	EPRMPT	=$3E	;Edit-mode prompt character (">")
       003F           	QPRMPT	=$3F	;Regular prompt character (Question-mark)
       005E           	LBRAK	=$5E	;Left-bracket replacement character
       0088           	GCVST	=MARK1	;Start of Garbage Collecor protected variable area
       009E           	GCVEND	=CELPTR+2	;End of Garbage Collector protected variable area
       000A           	LININC	=10	;Default line number increment
       000F           	MONNUM	=15	;Number of Monitor commands
       0091           	RANDA	=145	;Random transform constant "A"
       002B           	RANDC	=43	;Random transform constant "C"
       0006           	TTLC1	=6	;Turtle length constant, center to tip
       0012           	TTLC2	=18	;Turtle length constant, side
       000C           	TTLC3	=12	;Turtle length constant, rear
       00A0           	TTLA1	=160	;Turtle angle constant, first turn
       006E           	TTLA2	=110	;Turtle angle constant, base turns
                      	;	I/O Device constants:
       0000           	KBD	=0	;For Keyboard input
       0000           	VDT	=0	;For Screen output
       0001           	BUFFER	=1	;For buffer I/O
                      	;	Storage Parameters:
       0200           	LINARY	=$0200		;Input line buffer (page 2)
       0010           	TMPNUM	=TEMPN5-TMPSTT+2;Number of temporary bytes to swap
       00A6           	TMPSTT	=TEMPNH		;Start of page-zero swapped temporaries
       032A           	TMPTAB	=LASTPP+2	;Start of temporary storage area (page 3)
       2000           	GRPSTT	=$2000		;Start of hires graphics area
       4000           	GRPEND	=$4000		;End of Hires graphics area
       2000           	EDBUF	=$2000		;Start of editor buffer
       3FFB           	EBFEND	=$3FFB		;End of edit buffer (with room for CR and EOF marker)
       0030           	SYSTAB	=$30		;Page no. of System tables (after loading)
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-6
NLOGO	ASSEMBLY DATA

       00D0           	GHOMEM	=$D0		;Page no. of Ghost-memory
       A000           	TDIFF	=$A000		;Difference between above storage areas
                      	;	Mapped I/O locations:
       C08B           	GETRM1	=$C08B	;Enable high RAM (with first 4K bank)
       C083           	GETRM2	=$C083	;Enable high RAM (with second 4K bank)
       C08A           	KILRAM	=$C08A	;Deselect high RAM (enable Monitor/BASIC)
       C000           	KPFLAG	=$C000	;Keyboard input byte
       C010           	KPCLR	=$C010	;Keyboard clear strobe
       C030           	SPKR	=$C030	;Toggle speaker
       00C0           	IOADR	=$C0	;Start of I/O ROM area
                      	;	Interrupt Vector areas:
       FFFC           	RSTVEC	=$FFFC	;Location of RESET vector
       FFFE           	IRQVEC	=$FFFE	;Location of IRQ vector
       FFFA           	NMIVEC	=$FFFA	;Location of NMI vector (BRK command)
                      	;	System vectors:
       03F8           	USRADR	=$03F8	;User JMP location for ROM monitor
       FF59           	SYSMON	=$FF59	;ROM monitor entry point
                      	;	DOS sacred locations
       A851           	DOSEAT	=$A851	;DOS subroutine to give DOS control of input
       00D8           	DOSERR	=$00D8	;DOS onerr goto flag - set high bit to turn on
       9D5A           	DSERET	=$9D5A	;DOS error return address
       AAB6           	DLNGFG	=$AAB6	;DOS language flag -- stuff a $40 for Applesoft
       AA60           	FILLEN	=$AA60	;length of last file loaded
       FDED           	APCOUT	=$FDED	;location of COUT routine in monitor (DOS calls it)
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-7
NLOGO	ASSEMBLY DATA

                      	;	System Function Constants:
       0000           	INULL	=0
       0001           	ITHNGP	=1	;Thingp
       0002           	IWORD	=2
       0003           	IWORDP	=3
       0004           	IUNSUM	=4	;Unary_sum
       0005           	IUNDIF	=5	;Unary_difference
       0006           	IMAKE	=6
       0007           	IOTPUT	=7	;Output
       0008           	ISTOP	=8
       0009           	IPRINT	=9
       000A           	ITYPE	=10
       000B           	IDEFIN	=11	;Define
       000C           	IDEBUG	=12
       000D           	ICNTIN	=13	;Continue
       000E           	IPAUSE	=14
       000F           	IELSE	=15
       0010           	ISNTNC	=16	;Sentence
       0011           	IBOTH	=17
       0012           	IEITHR	=18	;Either
       0013           	ITHEN	=19
       0014           	INOT	=20
       0015           	ILPAR	=21	;(Left-parenthesis)
       0016           	IRPAR	=22	;(Right-parenthesis)
       0017           	IIF	=23
       0018           	IRUN	=24
       0019           	IGO	=25
       001A           	IBPT	=26	;.bpt
       001B           	IGDBYE	=27	;Goodbye
       001C           	IGCOLL	=28	;.gcoll
       001D           	INODES	=29	;.nodes
       001E           	IBTFST	=30	;Butfirst
       001F           	IFIRST	=31
       0020           	IBTLST	=32	;Butlast
       0021           	ILAST	=33
       0022           	ITO	=34
       0023           	IEDIT	=35
       0024           	IEND	=36
       0025           	ITEXT	=37
       0026           	IFORWD	=38	;Forward
       0027           	IBACK	=39
       0028           	IRIGHT	=40
       0029           	ILEFT	=41
       002A           	ILIST	=42
       002B           	ICS	=43
       002C           	IHOME	=44
       002D           	IPENUP	=45
       002E           	IPENDN	=46	;Pendown
       002F           	IEMPTP	=47
       0030           	ISHOWT	=48	;Showturtle
       0031           	IHIDET	=49	;Hideturtle
       0032           	ITSTAT	=50	;Turtlestate
       0033           	ITITLE	=51
       0034           	IFPUT	=52
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-8
NLOGO	ASSEMBLY DATA

       0035           	IPO	=53
       0036           	IALL	=54
       0037           	INAMES	=55
       0038           	IERASE	=56
       0039           	IREAD	=57
       003A           	ISAVE	=58
       003B           	IREQST	=59	;Request
       003C           	ITHING	=60
       003D           	IRETRV	=61	;Retrieve
       003E           	ISUM	=62
       003F           	IDIF	=63	;Difference
       0040           	IPROD	=64	;Product
       0041           	IQUOT	=65	;Quotient
       0042           	IGREAT	=66	;Greater
       0043           	ILESS	=67
       0044           	ICOMNT	=68	;Comment
       0045           	IEQUAL	=69
       0046           	ITRCBK	=70	;Traceback
       0047           	IPOTS	=71
       0048           	ITITLS	=72	;Titles
       0049           	IPROCS	=73	;Procedures
       004A           	IPEEK	=74
       004B           	IPOKE	=75
       004C           	INSUM	=76	;Infix Sum
       004D           	INDIF	=77	;Infix Difference
       004E           	INPROD	=78	;Infix Product
       004F           	INQUOT	=79	;Infix quotient
       0050           	INGRTR	=80	;Infix Greater
       0051           	INLESS	=81	;Infix Less
       0052           	INEQUL	=82	;Infix Equal
       0053           	ILPUT	=83
       0054           	IRANDM	=84	;Random
       0055           	ICTYI	=85
       0056           	ICURSR	=86	;Cursor
       0057           	IRNDMZ	=87	;Randomize
       0058           	ICALL	=88
       0059           	ILISTP	=89
       005A           	INMBRP	=90	;Numberp
       005B           	ICLINP	=91
       005C           	ICHNGE	=92
       005D           	IRPEAT	=93
       005E           	ISETX	=94
       005F           	ISETY	=95
       0060           	ISETXY	=96
       0061           	ISETH	=97
       0062           	ISETT	=98
       0063           	IXCOR	=99
       0064           	IYCOR	=100
       0065           	IHDING	=101	;Heading
       0066           	INDSPL	=102	;Nodisplay
       0067           	ICLEAR	=103
       0068           	IINT	=104
       0069           	IFULL	=105
       006A           	IMIX	=106
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-9
NLOGO	ASSEMBLY DATA

       006B           	IDELET	=107	;delete file
       006C           	ICATLG	=108	;list files
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-10
NLOGO	ASSEMBLY DATA

                      	;	Error Codes:
       0001           	XUOP	=1
       0002           	XEOL	=2
       0003           	XUDF	=3
       0004           	XHNV	=4
       0005           	XTMO	=5
       0006           	XNOP	=6
       0007           	XRPN	=7
       0008           	XIFX	=8
       0009           	XVNA	=9
       000A           	XTIP	=10
       000B           	XWTA	=11
       000C           	XUBL	=12
       000D           	XNTL	=13
       000E           	XNTF	=14
       000F           	XELS	=15
       0010           	XBRK	=16
       0011           	XLABEL	=17
       0012           	XTHN	=18
       0013           	XZAP	=19
       0014           	XLNF	=20
       0015           	XEDT	=21
       0016           	XDEF	=22
       0017           	XETL	=23
       0018           	XNED	=24
       0019           	XOPO	=25
       001A           	XARGTB	=26
       001B           	XTML	=27
       001C           	XDBZ	=28
       001D           	XNWE	=29
       001E           	XLNTB	=30
       001F           	XILN	=31
       0020           	XOFLOW	=32
       0021           	XNDF	=33
       0022           	XCRSR	=34
       0023           	XYNT	=35
       0024           	XOOB	=36
       0025           	XIOR	=37
       0026           	XWTP	=38
       0027           	XFNF	=39
       0028           	XDKF	=40
       0029           	XLKF	=41
                      
       0000           	XNSTOR	=0
       0001           	XNSTRN	=1
       0002           	XSTOP	=2
       0003           	XEXCED	=3
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-11
NLOGO	ASSEMBLY DATA

                      	;	Storage Parameters and Map:
                      
                      	;	Miscellaneous:	Page 0 - Variables
                      	;			Page 1 - Processor Stack
                      	;			Page 2 - Line-array
                      	;			Page 3 - Pointers, variable storage
                      	;			Pages 4 to 7 - Text/Color Graphics
                      	;			Pages 8 to 13 - System Array
                      	;			Pages 14 to 31 - Stacks
                      	;			Pages 32 to 63 - Hi-res/edit buffer
                      
                      	;	MISC.:    $0000 - $07FF: $ 800 bytes (2K bytes)
                      	;	SARRAY:   $0800 - $0DFF: $ 600 bytes (1.5K characters)
                      	;	PDL,VPDL: $0E00 - $1FF9: $11F9 bytes (about 2.25K words)
                      	;	HI-RES.:  $2000 - $3FFF: $2000 bytes (8K bytes)
                      	;	LOGO:     $4000 - $95FF: $5600 bytes (21.5K bytes)
                      	;	DOS:      $9600 - $BFFF: $2A00 bytes (10.5K bytes)
                      	;	I/O:      $C000 - $CFFF: $1000 bytes (4K bytes)
                      	;	BIGARRAY: $D000 - $F65F: $2660 bytes (2456. nodes)
                      	;	TYPBASE:  $F660 - $FFF7: $ 998 bytes
                      	;	UNUSED:   $FFF8 - $FFF9: $   2 bytes
                      	;	VECTORS:  $FFFA - $FFFF: $   6 bytes (3 vectors)
                      
                      	;	GHOSTMEM: $D000 - $DFFF: $1000 bytes (4K bytes)
                      
       4000           	PGMSTT	=$4000		;Program starts after High-res. graphics storage
       D000           	BIGBAS	=$D000		;Nodespace beginning
       CFFC           	BBASX	=BIGBAS-4
       2660           	BIGLEN	=$2660		;Nodespace length
       F660           	SINODS	=BIGBAS+BIGLEN	;Nodespace end
       3400           	OFSET1	=$3400		;Offset constant (BIGBAS/4)
       C260           	TYPBAS	=SINODS-OFSET1	;Typebase offset
       0998           	TYPLEN	=BIGLEN/4	;Typebase length
       FFF8           	TYPEND	=SINODS+TYPLEN	;Typebase end
       0032           	NODTST	=50		;Minimum free nodes for tokenizer
       0966           	NODLIM	=TYPLEN-NODTST	;Node allocation limit
       0800           	BASARY	=$800		;SARRAY beginning
       0600           	SARLEN	=$600		;SARRAY length
       11F9           	STKLEN	=$11F9		;Combined stack length
       0E00           	PDLBAS	=BASARY+SARLEN	;PDL beginning (grows upwards, Push-then-incr.)
       1FF7           	VPDLBA	=PDLBAS+STKLEN-2;VPDL beginning (grows downwards, Push-then-decr.)
       0050           	STKLIM	=80		;Minimum unused stack space before panicking
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-12
NLOGO	TOP LEVEL

                      	.SBTTL	Top Level
       4000           	.=PGMSTT
                      
                      	;Calling point for the LOGO Interpreter
                      
  4000   AD   83   C0 	LOGO:	LDA GETRM2	;Select Ghost-memory bank 2 for writing
  4003   AD   83   C0 		LDA GETRM2
  4006   A2   00      		LDX #$00
  4008   86   A6      		STX TEMPNH
  400A   86   A8      		STX TEMPN
  400C   E8           		INX
  400D   86   55      		STX BANK4K
  400F   A9   30      		LDA #SYSTAB	;Page no. of tables
  4011   85   A7      		STA TEMPNH+1
  4013   A9   D0      		LDA #GHOMEM	;Page no. of ghost-memory
  4015   85   A9      		STA TEMPN+1
  4017   A0   00      		LDY #$00
  4019   B1   A6      	MOVLOP:	LDA (TEMPNH),Y
  401B   91   A8      		STA (TEMPN),Y
  401D   C8           		INY
  401E   D0   F9      		BNE MOVLOP
  4020   E6   A7      		INC TEMPNH+1
  4022   E6   A9      		INC TEMPN+1
  4024   A9   3D      		LDA #ENDTAB^
  4026   C5   A7      		CMP TEMPNH+1	;See if last page transferred
  4028   B0   EF      		BCS MOVLOP
                      
                      	;Re-entry point for GOODBYE:
  402A   78           	LOGO1:	SEI		;Disable interrupts
  402B   D8           		CLD		;Disable decimal mode
  402C   A2   00      		LDX #$00
  402E   9A           		TXS		;Initialize processor stack
  402F   86   54      		STX MONFLG	;Disable monitor mode
  4031   86   00      		STX $00		;Define LNIL as $0000 at $0000
  4033   86   01      		STX $01
  4035   86   02      		STX $02
  4037   86   03      		STX $03
  4039   86   55      		STX BANK4K
  403B   AD   8B   C0 		LDA GETRM1
  403E   AD   8B   C0 		LDA GETRM1	;Disable Ghost-memory bank 2
  4041   A9   B6      		LDA #MONBRK&$FF
  4043   8D   FE   FF 		STA IRQVEC
  4046   8D   FA   FF 		STA NMIVEC	;Interrupts cause a break to Monitor
  4049   A9   72      		LDA #MONBRK^
  404B   8D   FF   FF 		STA IRQVEC+1
  404E   8D   FB   FF 		STA NMIVEC+1
  4051   A9   B6      		LDA #MONBRK&$FF	;?Vector to LOGO when debugged
  4053   8D   FC   FF 		STA RSTVEC	;RESET reinitializes LOGO
  4056   A9   72      		LDA #MONBRK^
  4058   8D   FD   FF 		STA RSTVEC+1
  405B   20   35   4F 		JSR INITLZ
  405E   A2   F8      		LDX #HELSTR&$FF
  4060   A0   D9      		LDY #HELSTR^
  4062   20   90   54 		JSR PRTSTR	;Types Hello-String
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-13
NLOGO	TOP LEVEL

  4065   A2   98      	TOPLOP:	LDX #ILINE
  4067   20   D9   49 		JSR PRDLIN	;Get a line
  406A   98           		TYA
  406B   D0   F8      		BNE TOPLOP	;Y nonzero means not OK
  406D   A5   99      		LDA ILINE+1
  406F   F0   F4      		BEQ TOPLOP	;Ignore if line is empty
  4071   85   62      		STA TOKPTR+1
  4073   A5   98      		LDA ILINE
  4075   85   61      		STA TOKPTR
  4077   A5   08      		LDA EDSW
  4079   F0   32      		BEQ EVLUAT	;Evaluate it if not in Edit mode
  407B   20   98   40 		JSR CHKLNN
  407E   F0   10      		BEQ TOPEDL	;If there's a line number, add it to the procedure
  4080   20   A5   42 		JSR CHKEVL	;Returns Carry set if Evaluatable
  4083   B0   28      		BCS EVLUAT
  4085   A2   98      	TOPLIN:	LDX #ILINE
  4087   86   B2      		STX ANSN
  4089   A9   0C      		LDA #FLIST
  408B   20   0F   53 		JSR CONS
  408E   A0   01      		LDY #$01
  4090   A2   98      	TOPEDL:	LDX #ILINE
  4092   20   49   4E 		JSR EDLINE
  4095   4C   65   40 		JMP TOPLOP
                      
  4098   A0   00      	CHKLNN:	LDY #$00
  409A   B1   61      		LDA (TOKPTR),Y
  409C   85   A8      		STA TEMPN
  409E   C8           		INY
  409F   B1   61      		LDA (TOKPTR),Y
  40A1   85   A9      		STA TEMPN+1	;(CAR)
  40A3   A2   A8      		LDX #TEMPN
  40A5   20   7F   5D 		JSR GETTYP
  40A8   A0   00      		LDY #$00	;(For EDLINE)
  40AA   C9   03      		CMP #FIX
  40AC   60           		RTS
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-14
NLOGO	EVALUATOR ROUTINES

                      	.SBTTL	Evaluator Routines
                      	;EVLUAT initializes the Evaluator variables, starts EVLINE.
                      
  40AD   A9   00      	EVLUAT:	LDA #PDLBAS&$FF
  40AF   85   14      		STA SP
  40B1   A9   0E      		LDA #PDLBAS^
  40B3   85   15      		STA SP+1	;SP := PDLBASE
  40B5   A9   F7      		LDA #VPDLBA&$FF
  40B7   85   16      		STA VSP
  40B9   A9   1F      		LDA #VPDLBA^
  40BB   85   17      		STA VSP+1	;VSP := VPDLBASE
  40BD   A9   00      		LDA #$00
  40BF   85   06      		STA EXPOUT	;EXPECTED_OUTPUT := 0
  40C1   85   0B      		STA RUNFLG	;RUN_FLAG := 0
  40C3   85   0C      		STA STPFLG	;STOP_FLAG := 0
  40C5   85   0D      		STA DCOFLG	;DONT_CONTINUE_FLAG := 0
  40C7   85   10      		STA ERRFLG	;ERROR_FLAG := 0
  40C9   85   7C      		STA LEVNUM
  40CB   85   7D      		STA LEVNUM+1	;LEVEL_NUMBER := 0
  40CD   85   74      		STA LINNUM
  40CF   85   75      		STA LINNUM+1	;LINE_NUMBER := 0
  40D1   85   6D      		STA FRAME+1	;FRAME := 0
  40D3   85   6F      		STA XFRAME+1	;XFRAME := 0
  40D5   85   0F      		STA UFRMAT	;UFORMAT := LIST
  40D7   A2   65      		LDX #TOPLOP&$FF
  40D9   A0   40      		LDY #TOPLOP^
  40DB   20   37   52 		JSR PUSH	;Top-level Return Address (TOPLOP)
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-15
NLOGO	EVALUATOR ROUTINES

                      	;EVLINE called with TOKPTR pointing to line of code to execute.
                      	; Pushes IFLEVEL and EXPOUT and then resets them.
                      
  40DE   20   0D   54 	EVLINE:	JSR STKTST
  40E1   A6   06      		LDX EXPOUT
  40E3   20   37   52 		JSR PUSH
  40E6   A2   82      		LDX #IFLEVL
  40E8   20   20   52 		JSR PUSHP
  40EB   A9   00      		LDA #$00
  40ED   85   06      		STA EXPOUT	;EXPECTED_OUTPUT := 0
  40EF   85   82      		STA IFLEVL	;IF_LEVEL := 0
  40F1   85   83      		STA IFLEVL+1
  40F3   A5   62      		LDA TOKPTR+1
  40F5   F0   1D      		BEQ EVLN1P
  40F7   A0   00      	EVLN1:	LDY #$00
  40F9   B1   61      		LDA (TOKPTR),Y
  40FB   85   A8      		STA TEMPN
  40FD   C8           		INY
  40FE   B1   61      		LDA (TOKPTR),Y
  4100   85   A9      		STA TEMPN+1	;(GETTOK)
  4102   A2   A8      		LDX #TEMPN
  4104   20   7F   5D 		JSR GETTYP
  4107   C9   0A      		CMP #LATOM
  4109   D0   05      		BNE EVLIN1
  410B   A2   61      		LDX #TOKPTR
  410D   20   70   55 		JSR TTKADV
                      
                      	;EVLIN1 keeps calling EVLEXP until EOL.
                      
  4110   A5   62      	EVLIN1:	LDA TOKPTR+1
  4112   D0   12      		BNE EVLN1A
  4114   A2   82      	EVLN1P:	LDX #IFLEVL
  4116   20   67   52 		JSR POP
  4119   20   99   52 		JSR POPB
  411C   85   06      		STA EXPOUT
  411E   A2   A8      	POPJ:	LDX #TEMPN
  4120   20   67   52 		JSR POP
  4123   6C   A8   00 		JMP (TEMPN)
  4126   A5   0C      	EVLN1A:	LDA STPFLG
  4128   D0   EA      		BNE EVLN1P
  412A   A2   10      		LDX #EVLIN1&$FF
  412C   A0   41      		LDY #EVLIN1^
  412E   20   37   52 		JSR PUSH	;PUSH (EVLIN1) Return Address
                      
                      	;EVLEXP calls EVAL with PRECED = 0. EVAL returns to EVEX1,
                      	;which restores old PRECED.
                      
  4131   A6   04      	EVLEXP:	LDX PRECED
  4133   20   37   52 		JSR PUSH	;Call PUSH (PRECEDENCE)
  4136   A9   00      		LDA #$00
  4138   85   04      		STA PRECED	;PRECEDENCE := 0
  413A   A2   F3      		LDX #EVEX1&$FF
  413C   A0   42      		LDY #EVEX1^
  413E   20   37   52 		JSR PUSH	;Call PUSH (EV_EX_1)
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-16
NLOGO	EVALUATOR ROUTINES

                      	;EVAL dispatches to either EVWRAP, PARLOP, UFUNCL, or SFUNCL.
                      	;All return eventually to EVWRAP.
                      
  4141   A2   63      	EVAL:	LDX #CURTOK	;Push CURTOK and increment NEST if FRAME <> 0
  4143   20   20   52 		JSR PUSHP
  4146   A5   6D      		LDA FRAME+1
  4148   F0   0B      		BEQ XEVL2
  414A   E6   7E      	XEVL1:	INC NEST
  414C   D0   07      		BNE XEVL2
  414E   E6   7F      		INC NEST+1
  4150   10   03      		BPL XEVL2
  4152   4C   FB   42 		JMP EXCED
  4155   A5   62      	XEVL2:	LDA TOKPTR+1
  4157   D0   03      		BNE XEVL3
  4159   4C   5E   7C 		JMP SCMMT1	;ERROR End-of-Line if EOL
  415C   A0   00      	XEVL3:	LDY #$00	;Get CURTOK and NEXTOK
  415E   B1   61      		LDA (TOKPTR),Y
  4160   85   63      		STA CURTOK
  4162   C8           		INY
  4163   B1   61      		LDA (TOKPTR),Y
  4165   85   64      		STA CURTOK+1	;(GETTOK)
  4167   A2   61      		LDX #TOKPTR
  4169   20   70   55 		JSR TTKADV
  416C   20   DB   43 		JSR GTNXTK
  416F   A2   63      		LDX #CURTOK
  4171   20   7F   5D 		JSR GETTYP	;Dispatch off Type of CURTOK
  4174   C9   07      		CMP #SATOM
  4176   F0   4B      		BEQ XCASA
  4178   C9   01      		CMP #ATOM
  417A   F0   47      		BEQ XCASA
  417C   C9   09      		CMP #DATOM
  417E   F0   15      		BEQ XCASD
  4180   C9   00      		CMP #LIST
  4182   F0   2F      		BEQ XCASQ	;(If LIST)
  4184   C9   08      		CMP #QATOM
  4186   F0   2B      		BEQ XCASQ
  4188   C9   03      		CMP #FIX
  418A   F0   27      		BEQ XCASQ
  418C   C9   04      		CMP #FLO
  418E   F0   23      		BEQ XCASQ
  4190   A9   11      	XCASL:	LDA #XLABEL	;ERROR, can't execute a label
  4192   4C   42   61 		JMP ERROR
  4195   A0   63      	XCASD:	LDY #CURTOK	;DATOM, so VPush it unless it's Novalue (then Error)
  4197   A2   A8      		LDX #TEMPN
  4199   20   CC   52 		JSR GETVAL
  419C   A2   A8      		LDX #TEMPN	;For VPUSHP in XCASQ1
  419E   A5   A9      		LDA TEMPN+1
  41A0   D0   19      		BNE XCASQ1
  41A2   A5   A8      		LDA TEMPN
  41A4   F0   15      		BEQ XCASQ1
  41A6   A5   63      		LDA CURTOK
  41A8   29   FC      		AND #$FC
  41AA   85   63      		STA CURTOK
  41AC   A0   63      		LDY #CURTOK
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-17
NLOGO	EVALUATOR ROUTINES

  41AE   A9   04      		LDA #XHNV
  41B0   4C   42   61 		JMP ERROR
  41B3   A5   63      	XCASQ:	LDA CURTOK	;QATOM, FIX, FLO, LIST: Just push it and set OTPUTN
  41B5   29   FC      		AND #$FC	;Strip off last two bits
  41B7   85   63      		STA CURTOK
  41B9   A2   63      		LDX #CURTOK
  41BB   20   4E   52 	XCASQ1:	JSR VPUSHP	;VPUSH (CURRENT_TOKEN)
  41BE   E6   07      		INC OTPUTN
  41C0   4C   D6   44 		JMP EVWRAP
  41C3   A2   63      	XCASA:	LDX #CURTOK	;ATOM, SATOM: It's some sort of Function
  41C5   A9   67      		LDA #FUNCT
  41C7   20   8D   56 		JSR GETFUN
  41CA   85   0E      		STA FUNTYP
  41CC   A5   68      		LDA FUNCT+1
  41CE   D0   07      		BNE XCASA1
  41D0   A0   63      		LDY #CURTOK
  41D2   A9   03      		LDA #XUDF
  41D4   4C   42   61 		JMP ERROR	;Error if GETFUN couldn't find it
  41D7   A5   0E      	XCASA1:	LDA FUNTYP
  41D9   A2   67      		LDX #FUNCT
  41DB   20   AE   54 		JSR INFIXP
  41DE   90   26      		BCC XCASA2
  41E0   C9   4C      		CMP #INSUM
  41E2   D0   0D      		BNE XCASA3
  41E4   A6   94      		LDX UNSUM
  41E6   A4   95      		LDY UNSUM+1
  41E8   D0   0F      		BNE XCASA4	;(Always)
  41EA   A0   63      	XCASA5:	LDY #CURTOK
  41EC   A9   08      		LDA #XIFX
  41EE   4C   42   61 		JMP ERROR
  41F1   C9   4D      	XCASA3:	CMP #INDIF
  41F3   D0   F5      		BNE XCASA5
  41F5   A6   96      		LDX UNDIF
  41F7   A4   97      		LDY UNDIF+1
  41F9   86   63      	XCASA4:	STX CURTOK
  41FB   84   64      		STY CURTOK+1
  41FD   A2   63      		LDX #CURTOK
  41FF   A9   67      		LDA #FUNCT
  4201   20   8D   56 		JSR GETFUN
  4204   85   0E      		STA FUNTYP
  4206   A6   04      	XCASA2:	LDX PRECED	;It should be a UFUN or SFUN
  4208   20   37   52 		JSR PUSH
  420B   A4   0E      		LDY FUNTYP
  420D   A2   67      		LDX #FUNCT
  420F   20   FC   52 		JSR GETPRC
  4212   85   04      		STA PRECED
  4214   A5   0E      		LDA FUNTYP
  4216   A2   67      		LDX #FUNCT
  4218   20   72   54 		JSR GETNGS
  421B   10   02      		BPL XCASF1
  421D   49   FF      		EOR #$FF	;NARGS := - NARGS - 1
  421F   85   05      	XCASF1:	STA NARGS
  4221   A2   AB      		LDX #EVAL1&$FF
  4223   A0   45      		LDY #EVAL1^
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-18
NLOGO	EVALUATOR ROUTINES

  4225   20   37   52 		JSR PUSH
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-19
NLOGO	EVALUATOR ROUTINES

  4228   A5   05      	ARGLOP:	LDA NARGS	;ARGLOP gets the args for a function
  422A   D0   03      		BNE ARGLP1
  422C   4C   1E   41 		JMP POPJ	;Exit if no args to be gotten
  422F   A6   05      	ARGLP1:	LDX NARGS
  4231   86   B2      		STX ANSN	;AL1 will push this
  4233   20   37   52 		JSR PUSH
  4236   A2   67      		LDX #FUNCT
  4238   20   20   52 		JSR PUSHP
  423B   A6   0E      		LDX FUNTYP
  423D   20   37   52 		JSR PUSH
  4240   A6   06      		LDX EXPOUT
  4242   20   37   52 		JSR PUSH
  4245   A2   82      		LDX #IFLEVL
  4247   20   20   52 		JSR PUSHP
                      
  424A   20   DB   43 	AL1:	JSR GTNXTK
  424D   A2   65      		LDX #NEXTOK
  424F   20   20   52 		JSR PUSHP
  4252   A6   B2      		LDX ANSN
  4254   20   37   52 		JSR PUSH
  4257   A6   04      		LDX PRECED
  4259   20   37   52 		JSR PUSH
  425C   A2   00      		LDX #$00
  425E   86   82      		STX IFLEVL
  4260   86   83      		STX IFLEVL+1
  4262   E8           		INX
  4263   86   06      		STX EXPOUT
  4265   A2   72      		LDX #AL2&$FF
  4267   A0   42      		LDY #AL2^
  4269   20   37   52 		JSR PUSH
  426C   4C   41   41 		JMP EVAL
  426F   4C   D4   43 	VL1RG:	JMP VAL1R	;Error if no output received
                      
  4272   20   99   52 	AL2:	JSR POPB
  4275   85   04      		STA PRECED
  4277   20   99   52 		JSR POPB
  427A   85   B2      		STA ANSN
  427C   A2   65      		LDX #NEXTOK
  427E   20   67   52 		JSR POP
  4281   A5   07      		LDA OTPUTN
  4283   F0   EA      		BEQ VL1RG
  4285   C6   B2      		DEC ANSN
  4287   D0   C1      		BNE AL1		;Get another arg if not done
  4289   A2   82      		LDX #IFLEVL
  428B   20   67   52 		JSR POP
  428E   20   99   52 		JSR POPB
  4291   85   06      		STA EXPOUT
  4293   20   99   52 		JSR POPB
  4296   85   0E      		STA FUNTYP
  4298   A2   67      		LDX #FUNCT
  429A   20   67   52 		JSR POP
  429D   20   99   52 		JSR POPB
  42A0   85   05      		STA NARGS
  42A2   4C   1E   41 		JMP POPJ
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-20
NLOGO	EVALUATOR ROUTINES

                      
  42A5   A6   A8      	CHKEVL:	LDX TEMPN
  42A7   A4   A9      		LDY TEMPN+1
  42A9   EC   1A   03 		CPX POTS
  42AC   D0   05      		BNE CHKEV2
  42AE   CC   1B   03 		CPY POTS+1
  42B1   F0   3C      		BEQ EVLOK
  42B3   EC   0A   03 	CHKEV2:	CPX LEND
  42B6   D0   05      		BNE CHKEV3
  42B8   CC   0B   03 		CPY LEND+1
  42BB   F0   32      		BEQ EVLOK
  42BD   EC   18   03 	CHKEV3:	CPX PO
  42C0   D0   05      		BNE CHKEV4
  42C2   CC   19   03 		CPY PO+1
  42C5   F0   28      		BEQ EVLOK
  42C7   EC   1C   03 	CHKEV4:	CPX PRNTOT
  42CA   D0   05      		BNE CHKEV5
  42CC   CC   1D   03 		CPY PRNTOT+1
  42CF   F0   1E      		BEQ EVLOK
  42D1   EC   14   03 	CHKEV5:	CPX LTITLE
  42D4   D0   05      		BNE CHKEV6
  42D6   CC   15   03 		CPY LTITLE+1
  42D9   F0   14      		BEQ EVLOK
  42DB   EC   06   03 	CHKEV6:	CPX ERASE
  42DE   D0   05      		BNE CHKEV7
  42E0   CC   07   03 		CPY ERASE+1
  42E3   F0   0A      		BEQ EVLOK
  42E5   EC   04   03 	CHKEV7:	CPX ER
  42E8   D0   07      		BNE EVLNO
  42EA   CC   05   03 		CPY ER+1
  42ED   D0   02      		BNE EVLNO
  42EF   38           	EVLOK:	SEC
  42F0   60           		RTS
  42F1   18           	EVLNO:	CLC
  42F2   60           		RTS
                      
  42F3   20   99   52 	EVEX1:	JSR POPB
  42F6   85   04      		STA PRECED
  42F8   4C   1E   41 		JMP POPJ
                      
  42FB   A9   13      	EXCED:	LDA #XZAP
  42FD   A2   03      		LDX #XEXCED
  42FF   4C   42   61 		JMP ERROR
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-21
NLOGO	EVALUATOR ROUTINES

  4302   A2   65      	PARLOP:	LDX #NEXTOK	;Executed when an LPAR is encountered
  4304   A9   67      		LDA #FUNCT
  4306   20   8D   56 		JSR GETFUN
  4309   85   0E      		STA FUNTYP
  430B   A5   68      		LDA FUNCT+1
  430D   F0   0D      		BEQ PARLP7
  430F   A5   0E      	PARLP1:	LDA FUNTYP
  4311   A2   67      		LDX #FUNCT
  4313   20   72   54 		JSR GETNGS
  4316   85   05      		STA NARGS
  4318   A5   05      	PARLP4:	LDA NARGS
  431A   30   1D      		BMI PARLP3
  431C   A6   06      	PARLP7:	LDX EXPOUT
  431E   20   37   52 		JSR PUSH
  4321   A2   82      		LDX #IFLEVL
  4323   20   20   52 		JSR PUSHP
  4326   A2   00      		LDX #$00
  4328   86   82      		STX IFLEVL	;IF_LEVEL := 0
  432A   86   83      		STX IFLEVL+1
  432C   E8           		INX
  432D   86   06      		STX EXPOUT
  432F   A2   E7      		LDX #PLOP1&$FF
  4331   A0   43      		LDY #PLOP1^
  4333   20   37   52 		JSR PUSH
  4336   4C   31   41 		JMP EVLEXP
  4339   A4   0E      	PARLP3:	LDY FUNTYP
  433B   A2   67      		LDX #FUNCT
  433D   20   FC   52 		JSR GETPRC
  4340   85   04      		STA PRECED
  4342   A5   65      		LDA NEXTOK
  4344   85   63      		STA CURTOK
  4346   A5   66      		LDA NEXTOK+1
  4348   85   64      		STA CURTOK+1	;CURRENT_TOKEN := NEXT_TOKEN
  434A   A2   61      		LDX #TOKPTR
  434C   20   70   55 		JSR TTKADV
  434F   A9   00      		LDA #$00
  4351   85   05      		STA NARGS	;NARGS := 0
  4353   A2   67      		LDX #FUNCT
  4355   20   20   52 		JSR PUSHP
  4358   A6   0E      		LDX FUNTYP
  435A   20   37   52 		JSR PUSH
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-22
NLOGO	EVALUATOR ROUTINES

  435D   20   DB   43 	VARGLP:	JSR GTNXTK
  4360   A5   65      		LDA NEXTOK
  4362   CD   20   03 		CMP RPAR
  4365   D0   1F      		BNE VRGLP1
  4367   A5   66      		LDA NEXTOK+1
  4369   CD   21   03 		CMP RPAR+1
  436C   D0   18      		BNE VRGLP1
  436E   20   99   52 		JSR POPB	;Call POP (FUNTYPE)
  4371   85   0E      		STA FUNTYP
  4373   A2   67      		LDX #FUNCT
  4375   20   67   52 		JSR POP
  4378   A2   61      		LDX #TOKPTR
  437A   20   70   55 		JSR TTKADV
  437D   A5   05      		LDA NARGS
  437F   49   FF      		EOR #$FF
  4381   85   05      		STA NARGS	;NARGS := - NARGS - 1
  4383   4C   B7   45 		JMP FNCAL1
  4386   A6   05      	VRGLP1:	LDX NARGS
  4388   20   37   52 		JSR PUSH
  438B   A2   65      		LDX #NEXTOK
  438D   20   20   52 		JSR PUSHP
  4390   A6   06      		LDX EXPOUT
  4392   20   37   52 		JSR PUSH
  4395   A2   82      		LDX #IFLEVL
  4397   20   20   52 		JSR PUSHP
  439A   A2   00      		LDX #$00
  439C   86   82      		STX IFLEVL	;IF_LEVEL := 0
  439E   86   83      		STX IFLEVL+1
  43A0   E8           		INX
  43A1   86   06      		STX EXPOUT
  43A3   A6   04      		LDX PRECED
  43A5   20   37   52 		JSR PUSH
  43A8   A2   B2      		LDX #VAL1&$FF
  43AA   A0   43      		LDY #VAL1^
  43AC   20   37   52 		JSR PUSH
  43AF   4C   41   41 		JMP EVAL
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-23
NLOGO	EVALUATOR ROUTINES

  43B2   20   99   52 	VAL1:	JSR POPB
  43B5   85   04      		STA PRECED
  43B7   A2   82      		LDX #IFLEVL
  43B9   20   67   52 		JSR POP
  43BC   20   99   52 		JSR POPB
  43BF   85   06      		STA EXPOUT
  43C1   A2   65      		LDX #NEXTOK
  43C3   20   67   52 		JSR POP
  43C6   20   99   52 		JSR POPB
  43C9   85   05      		STA NARGS
  43CB   A5   07      		LDA OTPUTN
  43CD   F0   05      		BEQ VAL1R
  43CF   E6   05      		INC NARGS
  43D1   4C   5D   43 		JMP VARGLP
  43D4   A9   06      	VAL1R:	LDA #XNOP
  43D6   A0   65      		LDY #NEXTOK
  43D8   4C   42   61 		JMP ERROR
                      
  43DB   A0   00      	GTNXTK:	LDY #$00
  43DD   B1   61      		LDA (TOKPTR),Y
  43DF   85   65      		STA NEXTOK
  43E1   C8           		INY
  43E2   B1   61      		LDA (TOKPTR),Y
  43E4   85   66      		STA NEXTOK+1	;(GETTOK)
  43E6   60           		RTS
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-24
NLOGO	EVALUATOR ROUTINES

                      	;PLOP1 cleans up after a parenthesized expression.
                      
  43E7   A2   82      	PLOP1:	LDX #IFLEVL
  43E9   20   67   52 		JSR POP
  43EC   20   99   52 		JSR POPB
  43EF   85   06      		STA EXPOUT
  43F1   A5   62      		LDA TOKPTR+1
  43F3   F0   1E      		BEQ SCMMTG
  43F5   20   DB   43 		JSR GTNXTK
  43F8   A5   65      		LDA NEXTOK
  43FA   CD   20   03 		CMP RPAR	;Next token must be an RPAR, else Error
  43FD   D0   0F      		BNE PLOP1B
  43FF   A5   66      		LDA NEXTOK+1
  4401   CD   21   03 		CMP RPAR+1
  4404   D0   08      		BNE PLOP1B
  4406   A2   61      		LDX #TOKPTR	;Everything OK, get the next token and exit
  4408   20   70   55 		JSR TTKADV
  440B   4C   1E   41 		JMP POPJ
  440E   A9   0A      	PLOP1B:	LDA #XTIP
  4410   4C   42   61 		JMP ERROR
  4413   4C   5E   7C 	SCMMTG:	JMP SCMMT1	;Error if EOL
                      
  4416   A6   0F      	RUNHAN:	LDX UFRMAT
  4418   20   37   52 		JSR PUSH
  441B   A2   7A      		LDX #ULNEND
  441D   20   20   52 		JSR PUSHP
  4420   A2   61      		LDX #TOKPTR
  4422   20   4E   52 		JSR VPUSHP
  4425   A5   A2      		LDA ARG1
  4427   85   61      		STA TOKPTR
  4429   A5   A3      		LDA ARG1+1
  442B   85   62      		STA TOKPTR+1
  442D   A6   0B      		LDX RUNFLG
  442F   20   37   52 		JSR PUSH
  4432   A2   00      		LDX #$00
  4434   86   07      		STX OTPUTN
  4436   86   0F      		STX UFRMAT
  4438   E8           		INX
  4439   86   0B      		STX RUNFLG
  443B   A2   45      		LDX #RH1&$FF
  443D   A0   44      		LDY #RH1^
  443F   20   37   52 		JSR PUSH
  4442   4C   DE   40 		JMP EVLINE
                      
  4445   20   99   52 	RH1:	JSR POPB
  4448   85   0B      		STA RUNFLG
  444A   A2   61      		LDX #TOKPTR
  444C   20   80   52 		JSR VPOP
  444F   A2   7A      		LDX #ULNEND
  4451   20   67   52 		JSR POP
  4454   20   99   52 		JSR POPB
  4457   85   0F      		STA UFRMAT
  4459   4C   1E   41 		JMP POPJ
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-25
NLOGO	EVALUATOR ROUTINES

  445C   A5   57      	SREAD1:	LDA INDEV	;If something reset INDEV to default,
  445E   F0   3A      		BEQ SREAD3	;then break out, don't check for EOF.
  4460   A5   C8      	SRED1A:	LDA ENDBUF+1
  4462   C5   C6      		CMP EPOINT+1
  4464   D0   06      		BNE EDIN
  4466   A5   C7      		LDA ENDBUF
  4468   C5   C5      		CMP EPOINT
  446A   F0   2A      		BEQ SREAD2
  446C   A2   00      	EDIN:	LDX #$00
  446E   A0   00      	EDIN2:	LDY #$00
  4470   B1   C5      		LDA (EPOINT),Y
  4472   9D   00   02 		STA LINARY,X
  4475   20   AC   6A 		JSR INCPNT
  4478   BD   00   02 		LDA LINARY,X
  447B   C9   0D      		CMP #$0D
  447D   F0   03      		BEQ EDIN1
  447F   E8           		INX
  4480   D0   EC      		BNE EDIN2
  4482   86   B8      	EDIN1:	STX TEMPN7
  4484   E6   58      		INC OUTDEV	;Nullify the TPCHR in PRDLIN (closing brackets, etc.)
  4486   A9   98      		LDA #ILINE
  4488   85   BE      		STA TEMPX2
  448A   20   ED   49 		JSR PRDLNX	;Read a line. If error, reset & go to SREAD2
  448D   C6   58      		DEC OUTDEV	;Re-enable TPCHR's
  448F   98           		TYA
  4490   F0   0F      		BEQ SRD1A	;Y zero means OK
  4492   A9   00      		LDA #$00
  4494   85   10      		STA ERRFLG
  4496   A9   00      	SREAD2:	LDA #KBD	;Break out of Read loop, reset INDEV
  4498   85   57      		STA INDEV	;to default.
  449A   85   08      	SREAD3:	STA EDSW
  449C   85   07      		STA OTPUTN	;OUTPUTN := 0
  449E   4C   1E   41 		JMP POPJ	;Return to S_READ1's superior
                      
  44A1   A5   99      	SRD1A:	LDA ILINE+1
  44A3   85   62      		STA TOKPTR+1
  44A5   F0   B9      		BEQ SRED1A
  44A7   A5   98      		LDA ILINE
  44A9   85   61      		STA TOKPTR
  44AB   A5   08      		LDA EDSW
  44AD   F0   0A      		BEQ SRD1E
  44AF   20   98   40 		JSR CHKLNN
  44B2   F0   1A      		BEQ SRDEDL	;If there's a line number, add it to the procedure
  44B4   20   A5   42 		JSR CHKEVL	;Returns Carry set if Evaluatable
  44B7   90   0A      		BCC SRD1F
  44B9   A2   5C      	SRD1E:	LDX #SREAD1&$FF
  44BB   A0   44      		LDY #SREAD1^
  44BD   20   37   52 		JSR PUSH
  44C0   4C   DE   40 		JMP EVLINE
  44C3   A2   98      	SRD1F:	LDX #ILINE
  44C5   86   B2      		STX ANSN
  44C7   A9   0C      		LDA #FLIST
  44C9   20   0F   53 		JSR CONS
  44CC   A0   01      		LDY #$01
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-26
NLOGO	EVALUATOR ROUTINES

  44CE   A2   98      	SRDEDL:	LDX #ILINE
  44D0   20   49   4E 		JSR EDLINE
  44D3   4C   5C   44 		JMP SREAD1
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-27
NLOGO	EVALUATOR ROUTINES

  44D6   A5   62      	EVWRAP:	LDA TOKPTR+1
  44D8   F0   78      		BEQ EVRETN
  44DA   A5   07      		LDA OTPUTN
  44DC   F0   74      		BEQ EVRETN
  44DE   A5   0C      		LDA STPFLG
  44E0   D0   70      		BNE EVRETN
  44E2   A0   00      		LDY #$00
  44E4   B1   61      		LDA (TOKPTR),Y
  44E6   85   63      		STA CURTOK
  44E8   C8           		INY
  44E9   B1   61      		LDA (TOKPTR),Y
  44EB   85   64      		STA CURTOK+1	;(GETTOK)
  44ED   A5   63      		LDA CURTOK
  44EF   CD   20   03 		CMP RPAR
  44F2   D0   07      		BNE EVW2
  44F4   A5   64      		LDA CURTOK+1
  44F6   CD   21   03 		CMP RPAR+1
  44F9   F0   57      		BEQ EVRETN
  44FB   A2   63      	EVW2:	LDX #CURTOK
  44FD   A9   67      		LDA #FUNCT
  44FF   20   8D   56 		JSR GETFUN
  4502   85   0E      		STA FUNTYP
  4504   A2   67      		LDX #FUNCT
  4506   20   AE   54 		JSR INFIXP
  4509   90   47      		BCC EVRETN
  450B   A4   0E      		LDY FUNTYP
  450D   A2   67      		LDX #FUNCT
  450F   20   FC   52 		JSR GETPRC
  4512   85   C0      		STA ANSN2
  4514   C5   04      		CMP PRECED
  4516   90   3A      		BCC EVRETN
  4518   F0   38      		BEQ EVRETN
  451A   A2   61      		LDX #TOKPTR
  451C   20   70   55 		JSR TTKADV
  451F   20   DB   43 		JSR GTNXTK
  4522   A2   65      		LDX #NEXTOK
  4524   20   20   52 		JSR PUSHP
  4527   A2   67      		LDX #FUNCT
  4529   20   20   52 		JSR PUSHP
  452C   A6   0E      		LDX FUNTYP
  452E   20   37   52 		JSR PUSH
  4531   A6   06      		LDX EXPOUT
  4533   20   37   52 		JSR PUSH
  4536   A2   82      		LDX #IFLEVL
  4538   20   20   52 		JSR PUSHP
  453B   A6   04      		LDX PRECED
  453D   20   37   52 		JSR PUSH
  4540   A9   01      		LDA #$01
  4542   85   06      		STA EXPOUT
  4544   A5   C0      		LDA ANSN2
  4546   85   04      		STA PRECED
  4548   A2   80      		LDX #EW1&$FF
  454A   A0   45      		LDY #EW1^
  454C   20   37   52 		JSR PUSH
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-28
NLOGO	EVALUATOR ROUTINES

  454F   4C   41   41 		JMP EVAL
                      
  4552   A5   6D      	EVRETN:	LDA FRAME+1
  4554   F0   06      		BEQ EVRET1
  4556   C6   7E      	EVRTN1:	DEC NEST
  4558   10   02      		BPL EVRET1
  455A   C6   7F      		DEC NEST+1
  455C   A5   07      	EVRET1:	LDA OTPUTN
  455E   F0   18      		BEQ EVRET2
  4560   A5   06      		LDA EXPOUT
  4562   D0   14      		BNE EVRET2
  4564   A5   0C      		LDA STPFLG
  4566   D0   10      		BNE EVRET2
  4568   A5   0B      		LDA RUNFLG
  456A   D0   0C      		BNE EVRET2
  456C   A2   65      		LDX #NEXTOK
  456E   20   80   52 		JSR VPOP
  4571   A0   65      		LDY #NEXTOK
  4573   A9   01      		LDA #XUOP
  4575   4C   42   61 		JMP ERROR
  4578   A2   63      	EVRET2:	LDX #CURTOK
  457A   20   67   52 		JSR POP
  457D   4C   1E   41 		JMP POPJ
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-29
NLOGO	EVALUATOR ROUTINES

                      	;EW1 pops everything EVWRAP pushed, checks for output (error if none),
                      	;then goes to FUNCAL with NARGS = 2.
                      
  4580   20   99   52 	EW1:	JSR POPB
  4583   85   04      		STA PRECED
  4585   A2   82      		LDX #IFLEVL
  4587   20   67   52 		JSR POP
  458A   20   99   52 		JSR POPB
  458D   85   06      		STA EXPOUT
  458F   20   99   52 		JSR POPB
  4592   85   0E      		STA FUNTYP
  4594   A2   67      		LDX #FUNCT
  4596   20   67   52 		JSR POP
  4599   A2   65      		LDX #NEXTOK
  459B   20   67   52 		JSR POP
  459E   A5   07      		LDA OTPUTN
  45A0   D0   03      		BNE EW1A
  45A2   4C   D4   43 		JMP VAL1R	;(ERROR XNOP,NEXTOK)
  45A5   A9   02      	EW1A:	LDA #$02
  45A7   85   05      		STA NARGS	;NARGS := 2
  45A9   D0   05      		BNE FUNCAL	;(Always)
                      
  45AB   20   99   52 	EVAL1:	JSR POPB	;Now that we have the args, get the old PRECED
  45AE   85   04      		STA PRECED	; back and do the function
                      
                      	;FUNCAL calls either SFUNCL (with FBODY1 = Funct. #) or UFUNCL (with FBODY1
                      	; pointing to text). Both return to EVWRAP. (FNCAL1 is same, except U&SFNCL
                      	; don't return to EVWRAP).
                      
  45B0   A2   D6      	FUNCAL:	LDX #EVWRAP&$FF
  45B2   A0   44      		LDY #EVWRAP^
  45B4   20   37   52 		JSR PUSH
  45B7   A5   0E      	FNCAL1:	LDA FUNTYP
  45B9   C9   05      		CMP #SFUN
  45BB   F0   0E      		BEQ FUN1
  45BD   A0   02      		LDY #$02	;UFUN, get text pointer
  45BF   B1   67      		LDA (FUNCT),Y
  45C1   85   72      		STA FBODY1
  45C3   C8           		INY
  45C4   B1   67      		LDA (FUNCT),Y
  45C6   85   73      		STA FBODY1+1	;(CDR)
  45C8   4C   0E   46 		JMP XUFNCL
  45CB   A0   02      	FUN1:	LDY #$02	;SFUN, get Function # from Sarray
  45CD   B1   67      		LDA (FUNCT),Y	;FBODY1 := SARRAY[FUNCT + SA_SINDEX] (SA_SINDEX = 2)
  45CF   85   72      		STA FBODY1
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-30
NLOGO	EVALUATOR ROUTINES

  45D1   A9   00      	XSFNCL:	LDA #$00
  45D3   85   07      		STA OTPUTN	;Default, no outputs
  45D5   A9   D0      		LDA #GHOMEM	;Page no. of dispatch addresses
  45D7   85   A9      		STA TEMPN+1
  45D9   A5   72      		LDA FBODY1
  45DB   0A           		ASL A
  45DC   85   A8      		STA TEMPN
  45DE   90   02      		BCC XSFNC1
  45E0   E6   A9      		INC TEMPN+1
  45E2   AD   83   C0 	XSFNC1:	LDA GETRM2	;Ghost-memory bank 2, System table
  45E5   E6   55      		INC BANK4K
  45E7   A0   00      		LDY #$00
  45E9   B1   A8      		LDA (TEMPN),Y
  45EB   85   A6      		STA TEMPNH
  45ED   C8           		INY
  45EE   B1   A8      		LDA (TEMPN),Y
  45F0   85   A7      		STA TEMPNH+1	;(CAR)
  45F2   AD   8B   C0 		LDA GETRM1	;Ghost-memory bank 2 disable
  45F5   AD   8B   C0 		LDA GETRM1
  45F8   C6   55      		DEC BANK4K
  45FA   6C   A6   00 		JMP (TEMPNH)	;Execute the routine
                      
                      	;FBODY1 contains a one-byte index to a table of pointers to system routines
                      	;The table starts at GHOMEM, and the index is multiplied by two for indexing
                      	;the sixteen-bit addresses. Adresses in the table are stored low byte first,
                      	;high byte next.
                      
                      	;For THEN, pointer points to XXSFR1
                      	;For RPAR, pointer points to XXSFR2
                      	;For LPAR, pointer points to PARLOP
                      	;For ALL, NAMES, TITLES, and PROCEDURES, pointers all point to XXSFR3
                      
  45FD   A9   12      	XXSFR1:	LDA #XTHN
  45FF   4C   42   61 		JMP ERROR
  4602   A9   07      	XXSFR2:	LDA #XRPN
  4604   4C   42   61 		JMP ERROR
  4607   A0   63      	XXSFR3:	LDY #CURTOK
  4609   A9   19      		LDA #XOPO
  460B   4C   42   61 		JMP ERROR
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-31
NLOGO	EVALUATOR ROUTINES

  460E   A0   76      	XUFNCL:	LDY #FPTR
  4610   A2   A8      		LDX #TEMPN	;Lastline
  4612   20   54   55 		JSR LINPEK
  4615   20   0D   54 		JSR STKTST
  4618   A2   7A      		LDX #ULNEND
  461A   20   20   52 		JSR PUSHP
  461D   A6   0F      		LDX UFRMAT
  461F   20   37   52 		JSR PUSH
  4622   A2   70      		LDX #FBODY
  4624   20   20   52 		JSR PUSHP
  4627   A2   76      		LDX #FPTR
  4629   20   20   52 		JSR PUSHP
  462C   A6   0B      		LDX RUNFLG
  462E   20   37   52 		JSR PUSH
  4631   A9   00      		LDA #$00
  4633   85   0C      		STA STPFLG
  4635   85   0B      		STA RUNFLG
  4637   85   79      		STA GOPTR+1	;GO_PTR := LNIL (0)
  4639   85   AB      		STA TEMPN1+1	;TEMP := LNIL (0)
  463B   A5   72      		LDA FBODY1
  463D   85   70      		STA FBODY
  463F   85   76      		STA FPTR
  4641   A5   73      		LDA FBODY1+1
  4643   85   71      		STA FBODY+1
  4645   85   77      		STA FPTR+1
  4647   A5   7E      		LDA NEST
  4649   D0   26      		BNE XUFN1
  464B   A5   7F      		LDA NEST+1
  464D   D0   22      		BNE XUFN1
  464F   A5   7C      		LDA LEVNUM
  4651   D0   04      		BNE XUFN2
  4653   A5   7D      		LDA LEVNUM+1
  4655   F0   1A      		BEQ XUFN1
  4657   A5   A9      	XUFN2:	LDA TEMPN+1	;Lastline
  4659   D0   07      		BNE XUFN3
  465B   A5   62      		LDA TOKPTR+1
  465D   D0   07      		BNE XUFN5
  465F   4C   86   46 		JMP XUFN1A
  4662   A5   62      	XUFN3:	LDA TOKPTR+1
  4664   F0   0B      		BEQ XUFN1
  4666   A0   00      	XUFN5:	LDY #$00
  4668   B1   61      		LDA (TOKPTR),Y
  466A   85   AA      		STA TEMPN1
  466C   C8           		INY
  466D   B1   61      		LDA (TOKPTR),Y
  466F   85   AB      		STA TEMPN1+1	;(GETTOK)
  4671   A2   70      	XUFN1:	LDX #FBODY
  4673   20   7F   5D 		JSR GETTYP
  4676   85   0F      		STA UFRMAT
  4678   A5   AA      		LDA TEMPN1
  467A   CD   10   03 		CMP LSTOP
  467D   D0   12      		BNE XUFN6
  467F   A5   AB      		LDA TEMPN1+1
  4681   CD   11   03 		CMP LSTOP+1
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-32
NLOGO	EVALUATOR ROUTINES

  4684   D0   0B      		BNE XUFN6
  4686   A5   6E      	XUFN1A:	LDA XFRAME
  4688   85   14      		STA SP
  468A   A5   6F      		LDA XFRAME+1
  468C   85   15      		STA SP+1
  468E   4C   90   48 		JMP XTAIL
  4691   A6   6C      	XUFN6:	LDX FRAME
  4693   A4   6D      		LDY FRAME+1
  4695   A5   14      		LDA SP
  4697   85   6C      		STA FRAME
  4699   A5   15      		LDA SP+1
  469B   85   6D      		STA FRAME+1	;FRAME points to PREV_FRAME
  469D   20   37   52 		JSR PUSH
  46A0   A2   6E      		LDX #XFRAME
  46A2   20   20   52 		JSR PUSHP
  46A5   A6   0F      		LDX UFRMAT
  46A7   20   37   52 		JSR PUSH
  46AA   A2   63      		LDX #CURTOK
  46AC   20   20   52 		JSR PUSHP
  46AF   A2   7E      		LDX #NEST
  46B1   20   20   52 		JSR PUSHP
  46B4   A2   74      		LDX #LINNUM
  46B6   20   20   52 		JSR PUSHP
  46B9   A2   61      		LDX #TOKPTR
  46BB   20   20   52 		JSR PUSHP
  46BE   A6   05      		LDX NARGS
  46C0   E8           		INX
  46C1   20   37   52 		JSR PUSH	;PUSH (NARGS+1)
  46C4   A2   80      		LDX #TLLEVS
  46C6   20   20   52 		JSR PUSHP
  46C9   A0   00      		LDY #$00
  46CB   B1   67      		LDA (FUNCT),Y
  46CD   AA           		TAX
  46CE   C8           		INY
  46CF   B1   67      		LDA (FUNCT),Y
  46D1   A8           		TAY		;(GET_FFRAME)
  46D2   20   37   52 		JSR PUSH
  46D5   A6   67      		LDX FUNCT
  46D7   A4   68      		LDY FUNCT+1
  46D9   E8           		INX
  46DA   D0   01      		BNE XUFN6B
  46DC   C8           		INY
  46DD   20   37   52 	XUFN6B:	JSR PUSH	;PUSH (FUNCT+1)
  46E0   A0   01      		LDY #$01
  46E2   84   80      		STY TLLEVS
  46E4   88           		DEY
  46E5   84   74      		STY LINNUM
  46E7   84   75      		STY LINNUM+1
  46E9   84   81      		STY TLLEVS+1
  46EB   88           		DEY
  46EC   84   7E      		STY NEST
  46EE   84   7F      		STY NEST+1
  46F0   E6   7C      		INC LEVNUM
  46F2   D0   07      		BNE XUFN6C
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-33
NLOGO	EVALUATOR ROUTINES

  46F4   E6   7D      		INC LEVNUM+1
  46F6   D0   03      		BNE XUFN6C
  46F8   4C   FB   42 		JMP EXCED
  46FB   C8           	XUFN6C:	INY
  46FC   A5   6C      		LDA FRAME
  46FE   91   67      		STA (FUNCT),Y
  4700   C8           		INY
  4701   A5   6D      		LDA FRAME+1
  4703   91   67      		STA (FUNCT),Y	;(PUT_FFRAME)
  4705   20   96   49 		JSR STPTR1
  4708   A0   70      		LDY #FBODY
  470A   A2   AA      		LDX #TEMPN1	;TEMPN1 gets ARGLIST
  470C   20   06   56 		JSR GTTULN
  470F   A5   AB      	XUFNW:	LDA TEMPN1+1
  4711   F0   3C      		BEQ XUFNWE
  4713   20   A9   49 		JSR PTVTST
  4716   A0   00      		LDY #$00
  4718   B1   AA      		LDA (TEMPN1),Y
  471A   85   AC      		STA TEMPN2	;TEMPN2 is VARNAM
  471C   C8           		INY
  471D   B1   AA      		LDA (TEMPN1),Y
  471F   85   AD      		STA TEMPN2+1	;(GETTOK)
  4721   A2   AA      		LDX #TEMPN1
  4723   20   70   55 		JSR TTKADV
  4726   A0   AC      		LDY #TEMPN2
  4728   A2   A8      		LDX #TEMPN	;TEMPN is TEMP1
  472A   20   CC   52 		JSR GETVAL
  472D   A2   A8      		LDX #TEMPN
  472F   20   20   52 		JSR PUSHP
  4732   A0   00      		LDY #$00
  4734   B1   B4      		LDA (TEMPN5),Y	;TEMPN5 is POINTER
  4736   85   A8      		STA TEMPN
  4738   C8           		INY
  4739   B1   B4      		LDA (TEMPN5),Y
  473B   85   A9      		STA TEMPN+1	;(GETBAR)
  473D   20   B8   49 		JSR PTRDEC
  4740   A2   A8      		LDX #TEMPN
  4742   A0   AC      		LDY #TEMPN2
  4744   20   E4   52 		JSR PUTVAL
  4747   A2   AC      		LDX #TEMPN2
  4749   20   20   52 		JSR PUSHP
  474C   4C   0F   47 		JMP XUFNW
  474F   A5   14      	XUFNWE:	LDA SP
  4751   85   6E      		STA XFRAME	;XFRAME points to location after last binding pair
  4753   A5   15      		LDA SP+1
  4755   85   6F      		STA XFRAME+1
  4757   20   C4   49 		JSR INCVSP
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-34
NLOGO	EVALUATOR ROUTINES

                      	;UF1 does a line of the procedure.
                      
  475A   A5   79      	UF1:	LDA GOPTR+1
  475C   D0   08      		BNE UF1A
  475E   A2   76      		LDX #FPTR
  4760   20   3E   57 		JSR ULNADV
  4763   4C   72   47 		JMP UF1C
  4766   A5   78      	UF1A:	LDA GOPTR	;GOPTR <> NIL, so FPTR := GOPTR, reset GOPTR.
  4768   85   76      		STA FPTR
  476A   A5   79      		LDA GOPTR+1
  476C   85   77      		STA FPTR+1
  476E   A9   00      		LDA #$00
  4770   85   79      		STA GOPTR+1
  4772   A5   0C      	UF1C:	LDA STPFLG
  4774   D0   27      		BNE UF2A
  4776   A5   77      		LDA FPTR+1
  4778   F0   21      		BEQ UF2
  477A   A0   76      	UF1D:	LDY #FPTR
  477C   A2   61      		LDX #TOKPTR
  477E   20   06   56 		JSR GTTULN
  4781   A0   00      		LDY #$00
  4783   B1   61      		LDA (TOKPTR),Y
  4785   85   74      		STA LINNUM
  4787   C8           		INY
  4788   B1   61      		LDA (TOKPTR),Y
  478A   85   75      		STA LINNUM+1	;(GETTOK)
  478C   A2   61      		LDX #TOKPTR
  478E   20   70   55 		JSR TTKADV
  4791   A2   5A      		LDX #UF1&$FF
  4793   A0   47      		LDY #UF1^
  4795   20   37   52 		JSR PUSH
  4798   4C   DE   40 		JMP EVLINE
                      
                      	;End of a procedure.
                      
  479B   85   07      	UF2:	STA OTPUTN
  479D   38           	UF2A:	SEC
  479E   A5   7C      		LDA LEVNUM
  47A0   E5   80      		SBC TLLEVS
  47A2   85   7C      		STA LEVNUM
  47A4   A5   7D      		LDA LEVNUM+1
  47A6   E5   81      		SBC TLLEVS+1
  47A8   85   7D      		STA LEVNUM+1
  47AA   A9   00      		LDA #$00
  47AC   85   0C      		STA STPFLG
  47AE   20   EA   51 		JSR POPFRM
  47B1   20   99   52 		JSR POPB
  47B4   85   0B      		STA RUNFLG
  47B6   A2   76      		LDX #FPTR
  47B8   20   67   52 		JSR POP
  47BB   A2   70      		LDX #FBODY
  47BD   20   67   52 		JSR POP
  47C0   20   99   52 		JSR POPB
  47C3   85   0F      		STA UFRMAT
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-35
NLOGO	EVALUATOR ROUTINES

  47C5   A2   7A      		LDX #ULNEND
  47C7   20   67   52 		JSR POP
  47CA   4C   1E   41 		JMP POPJ
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-36
NLOGO	EVALUATOR ROUTINES

  47CD   A2   00      	ERROR1:	LDX #$00
  47CF   86   0B      		STX RUNFLG
  47D1   A5   10      		LDA ERRFLG
  47D3   85   C2      		STA ANSNX
  47D5   86   10      		STX ERRFLG
  47D7   C9   13      		CMP #XZAP
  47D9   F0   10      		BEQ PPTTP
  47DB   A6   7C      		LDX LEVNUM
  47DD   D0   04      		BNE ERR1A
  47DF   A6   7D      		LDX LEVNUM+1
  47E1   F0   08      		BEQ PPTTP
  47E3   A4   0A      	ERR1A:	LDY DBUGSW
  47E5   D0   5C      		BNE ERR1B
  47E7   C9   10      		CMP #XBRK
  47E9   F0   58      		BEQ ERR1B
  47EB   A5   6D      	PPTTP:	LDA FRAME+1
  47ED   F0   1C      		BEQ PPTT2
  47EF   20   77   57 	PPTTP1:	JSR RSTBND
  47F2   A0   02      		LDY #$02	;(SF_XFRAME = 2.)
  47F4   B1   6C      		LDA (FRAME),Y
  47F6   85   6E      		STA XFRAME
  47F8   C8           		INY
  47F9   B1   6C      		LDA (FRAME),Y
  47FB   85   6F      		STA XFRAME+1	;(GETBAR)
  47FD   A0   00      		LDY #$00	;(SF_PREVIOUS_FRAME = 0)
  47FF   B1   6C      		LDA (FRAME),Y
  4801   AA           		TAX
  4802   C8           		INY
  4803   B1   6C      		LDA (FRAME),Y
  4805   85   6D      		STA FRAME+1	;(GETBAR)
  4807   86   6C      		STX FRAME
  4809   D0   E4      		BNE PPTTP1
  480B   A9   00      	PPTT2:	LDA #$00
  480D   85   7C      		STA LEVNUM
  480F   85   7D      		STA LEVNUM+1
  4811   A5   C2      		LDA ANSNX
  4813   C9   13      		CMP #XZAP
  4815   D0   29      		BNE JTOP
  4817   A5   C1      		LDA ANSN3
  4819   C9   01      		CMP #XNSTRN
  481B   D0   23      		BNE JTOP
  481D   A9   F7      		LDA #VPDLBA&$FF
  481F   85   16      		STA VSP		;If error was "out-of-nodes",
  4821   A9   1F      		LDA #VPDLBA^	;reset VPDL, do a garbage collect,
  4823   85   17      		STA VSP+1	;and check remaining nodes. If low,
  4825   20   58   62 		JSR GARCOL	;ask user to delete something.
  4828   A5   C4      		LDA NNODES+1
  482A   C9   09      		CMP #NODLIM^
  482C   90   12      		BCC JTOP
  482E   D0   06      		BNE NWARN
  4830   A5   C3      		LDA NNODES
  4832   C9   66      		CMP #NODLIM&$FF
  4834   90   0A      		BCC JTOP
  4836   20   67   72 	NWARN:	JSR BREAK1
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-37
NLOGO	EVALUATOR ROUTINES

  4839   A2   BC      		LDX #WRNMSG&$FF
  483B   A0   DA      		LDY #WRNMSG^	;"Please delete something"
  483D   20   90   54 		JSR PRTSTR
  4840   4C   65   40 	JTOP:	JMP TOPLOP
  4843   A9   00      	ERR1B:	LDA #$00
  4845   85   06      		STA EXPOUT	;(EXPOUT := 0)
  4847   18           		CLC
  4848   A5   6E      		LDA XFRAME
  484A   69   02      		ADC #$02	;Don't pop the top return address
  484C   85   14      		STA SP		;(RESET_EVAL)
  484E   A5   6F      		LDA XFRAME+1
  4850   69   00      		ADC #$00
  4852   85   15      		STA SP+1
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-38
NLOGO	EVALUATOR ROUTINES

  4854   A5   0D      	ERROR2:	LDA DCOFLG
  4856   F0   11      		BEQ ERR2A
  4858   A9   00      		LDA #$00
  485A   85   0C      		STA STPFLG
  485C   85   0D      		STA DCOFLG
  485E   85   62      		STA TOKPTR+1
  4860   A0   04      	ERR2A1:	LDY #$04	;(SF_FORMAT = 4.)
  4862   B1   6C      		LDA (FRAME),Y
  4864   85   0F      		STA UFRMAT	;(GETBAR)
  4866   4C   1E   41 		JMP POPJ
  4869   A5   0C      	ERR2A:	LDA STPFLG
  486B   D0   F3      		BNE ERR2A1	;Zap out of EVLINE without resetting stuff.
  486D   A9   4C      		LDA #'L		;Both flags = 0, it's a Pause.
  486F   20   90   72 		JSR TPCHR	;Type an "L"
  4872   A2   7C      		LDX #LEVNUM
  4874   20   3F   67 		JSR TYPFIX
  4877   A2   61      		LDX #TOKPTR
  4879   20   D9   49 		JSR PRDLIN	;Get a line
  487C   98           		TYA
  487D   F0   03      		BEQ ERR2A2	;Y zero means OK
  487F   4C   CD   47 		JMP ERROR1
  4882   A2   54      	ERR2A2:	LDX #ERROR2&$FF
  4884   A0   48      		LDY #ERROR2^
  4886   20   37   52 		JSR PUSH
  4889   A9   00      		LDA #LIST
  488B   85   0F      		STA UFRMAT
  488D   4C   DE   40 		JMP EVLINE
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-39
NLOGO	EVALUATOR ROUTINES

  4890   A2   00      	XTAIL:	LDX #$00
  4892   86   74      		STX LINNUM
  4894   86   75      		STX LINNUM+1
  4896   CA           		DEX
  4897   86   7E      		STX NEST
  4899   86   7F      		STX NEST+1
  489B   E6   7C      		INC LEVNUM
  489D   D0   07      		BNE XTAIL1
  489F   E6   7D      		INC LEVNUM+1
  48A1   D0   03      		BNE XTAIL1
  48A3   4C   FB   42 		JMP EXCED
  48A6   E6   80      	XTAIL1:	INC TLLEVS
  48A8   D0   07      		BNE XTAIL2
  48AA   E6   81      		INC TLLEVS+1
  48AC   D0   03      		BNE XTAIL2
  48AE   4C   FB   42 		JMP EXCED
  48B1   20   96   49 	XTAIL2:	JSR STPTR1	;POINTER is TEMPN1
  48B4   A0   0E      		LDY #$0E	;SF_NUMBER_BINDINGS (14.)
  48B6   B1   6C      		LDA (FRAME),Y
  48B8   85   AE      		STA TEMPN3	;BINDINGS
  48BA   A0   70      		LDY #FBODY
  48BC   A2   AC      		LDX #TEMPN2	;ARGLIST
  48BE   20   06   56 		JSR GTTULN	;GET_ULINE (ARG_LIST,FBODY,TRUE)
  48C1   A0   04      		LDY #$04	;(SF_FORMAT = 4.)
  48C3   A5   0F      		LDA UFRMAT
  48C5   91   6C      		STA (FRAME),Y	;(PUTBAR)
  48C7   A0   06      		LDY #$06	;(SF_UFUN = 6.)
  48C9   A5   63      		LDA CURTOK
  48CB   91   6C      		STA (FRAME),Y
  48CD   C8           		INY
  48CE   A5   64      		LDA CURTOK+1
  48D0   91   6C      		STA (FRAME),Y	;(PUTBAR)
  48D2   A0   00      		LDY #$00
  48D4   B1   67      		LDA (FUNCT),Y
  48D6   C5   6C      		CMP FRAME
  48D8   D0   3F      		BNE XTALWB
  48DA   C8           		INY
  48DB   B1   67      		LDA (FUNCT),Y	;(GET_FFRAME)
  48DD   C5   6D      		CMP FRAME+1
  48DF   D0   38      		BNE XTALWB
  48E1   A5   AD      	XTALWA:	LDA TEMPN2+1
  48E3   F0   2B      		BEQ XTLWAE
  48E5   20   A9   49 	XTALW1:	JSR PTVTST
  48E8   A0   00      		LDY #$00
  48EA   B1   AC      		LDA (TEMPN2),Y
  48EC   85   B0      		STA TEMPN4	;VAR_NAME
  48EE   C8           		INY
  48EF   B1   AC      		LDA (TEMPN2),Y
  48F1   85   B1      		STA TEMPN4+1	;(GETTOK)
  48F3   A2   AC      		LDX #TEMPN2
  48F5   20   70   55 		JSR TTKADV
  48F8   A0   00      		LDY #$00
  48FA   B1   B4      		LDA (TEMPN5),Y
  48FC   85   AA      		STA TEMPN1
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-40
NLOGO	EVALUATOR ROUTINES

  48FE   C8           		INY
  48FF   B1   B4      		LDA (TEMPN5),Y
  4901   85   AB      		STA TEMPN1+1	;(GETBAR)
  4903   20   B8   49 		JSR PTRDEC
  4906   A2   AA      		LDX #TEMPN1
  4908   A0   B0      		LDY #TEMPN4
  490A   20   E4   52 		JSR PUTVAL
  490D   4C   E1   48 		JMP XTALWA
  4910   A0   0E      	XTLWAE:	LDY #$0E	;(SF_NUMBER_BINDINGS = 14.)
  4912   A5   AE      		LDA TEMPN3
  4914   91   6C      		STA (FRAME),Y
  4916   4C   90   49 		JMP XTAIL4
  4919   A5   AD      	XTALWB:	LDA TEMPN2+1
  491B   F0   3C      		BEQ XTLWBE
  491D   20   A9   49 	XTALW2:	JSR PTVTST
  4920   A0   00      		LDY #$00
  4922   B1   AC      		LDA (TEMPN2),Y
  4924   85   B0      		STA TEMPN4
  4926   C8           		INY
  4927   B1   AC      		LDA (TEMPN2),Y
  4929   85   B1      		STA TEMPN4+1	;(GETTOK)
  492B   A2   AC      		LDX #TEMPN2
  492D   20   70   55 		JSR TTKADV
  4930   A0   B0      		LDY #TEMPN4
  4932   A2   AA      		LDX #TEMPN1
  4934   20   CC   52 		JSR GETVAL
  4937   A2   AA      		LDX #TEMPN1
  4939   20   20   52 		JSR PUSHP
  493C   A0   00      		LDY #$00
  493E   B1   B4      		LDA (TEMPN5),Y
  4940   85   AA      		STA TEMPN1
  4942   C8           		INY
  4943   B1   B4      		LDA (TEMPN5),Y
  4945   85   AB      		STA TEMPN1+1	;(GETBAR)
  4947   20   B8   49 		JSR PTRDEC
  494A   A2   AA      		LDX #TEMPN1
  494C   A0   B0      		LDY #TEMPN4
  494E   20   E4   52 		JSR PUTVAL
  4951   A2   B0      		LDX #TEMPN4
  4953   20   20   52 		JSR PUSHP
  4956   4C   19   49 		JMP XTALWB
  4959   A0   00      	XTLWBE:	LDY #$00
  495B   B1   67      		LDA (FUNCT),Y
  495D   85   AA      		STA TEMPN1
  495F   C8           		INY
  4960   B1   67      		LDA (FUNCT),Y
  4962   85   AB      		STA TEMPN1+1	;(GET_FFRAME)
  4964   A2   AA      		LDX #TEMPN1
  4966   20   20   52 		JSR PUSHP
  4969   A6   67      		LDX FUNCT
  496B   A4   68      		LDY FUNCT+1
  496D   E8           		INX
  496E   D0   01      		BNE XTAIL5
  4970   C8           		INY
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-41
NLOGO	EVALUATOR ROUTINES

  4971   20   37   52 	XTAIL5:	JSR PUSH	;PUSH (FUNCT+1)
  4974   A0   00      		LDY #$00
  4976   A5   6C      		LDA FRAME
  4978   91   67      		STA (FUNCT),Y
  497A   C8           		INY
  497B   A5   6D      		LDA FRAME+1
  497D   91   67      		STA (FUNCT),Y	;(PUT_FFRAME)
  497F   A0   0E      		LDY #$0E
  4981   38           		SEC		;Carry added in (BINDINGS + NARGS + 1)
  4982   A5   AE      		LDA TEMPN3
  4984   65   05      		ADC NARGS
  4986   91   6C      		STA (FRAME),Y
  4988   A5   14      		LDA SP
  498A   85   6E      		STA XFRAME
  498C   A5   15      		LDA SP+1
  498E   85   6F      		STA XFRAME+1	;XFRAME := SP (right above last binding pair)
  4990   20   C4   49 	XTAIL4:	JSR INCVSP
  4993   4C   5A   47 		JMP UF1
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-42
NLOGO	EVALUATOR ROUTINES

  4996   A5   05      	STPTR1:	LDA NARGS
  4998   0A           		ASL A
  4999   85   A6      		STA TEMPNH
  499B   18           		CLC
  499C   A5   16      		LDA VSP
  499E   65   A6      		ADC TEMPNH
  49A0   85   B4      		STA TEMPN5
  49A2   A5   17      		LDA VSP+1
  49A4   69   00      		ADC #$00
  49A6   85   B5      		STA TEMPN5+1	;POINTR := VSP + (NARGS * 2)
  49A8   60           		RTS
                      
  49A9   A5   17      	PTVTST:	LDA VSP+1
  49AB   C5   B5      		CMP TEMPN5+1
  49AD   D0   14      		BNE SBHAK1
  49AF   A5   16      		LDA VSP
  49B1   C5   B4      		CMP TEMPN5
  49B3   D0   0E      		BNE SBHAK1
  49B5   20   C8   51 	PTVBUG:	JSR SYSBUG	;Error if POINTER = VSP
                      
  49B8   38           	PTRDEC:	SEC
  49B9   A5   B4      		LDA TEMPN5
  49BB   E9   02      		SBC #$02
  49BD   85   B4      		STA TEMPN5
  49BF   B0   02      		BCS SBHAK1
  49C1   C6   B5      		DEC TEMPN5+1	;POINTR := POINTR - 2
  49C3   60           	SBHAK1:	RTS
                      
  49C4   A5   05      	INCVSP:	LDA NARGS
  49C6   0A           		ASL A
  49C7   85   A6      		STA TEMPNH
  49C9   18           		CLC
  49CA   A5   16      		LDA VSP
  49CC   65   A6      		ADC TEMPNH
  49CE   85   16      		STA VSP
  49D0   90   02      		BCC INCVE
  49D2   E6   17      		INC VSP+1	;VSP := VSP + NARGS * 2
  49D4   60           	INCVE:	RTS
                      
                      	;End of Evaluator Dispatches and Subroutines.
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-43
NLOGO	READER AND TOKENIZER

                      	.SBTTL	Reader and Tokenizer
                      
  49D5   86   BE      	READLN:	STX TEMPX2	;Input line pointer location
  49D7   D0   0F      		BNE REDLN1	;(Always)
  49D9   86   BE      	PRDLIN:	STX TEMPX2
  49DB   A5   08      		LDA EDSW
  49DD   F0   04      		BEQ PRD2
  49DF   A9   3E      		LDA #EPRMPT	;Edit-mode prompt
  49E1   D0   02      		BNE PRD3
  49E3   A9   3F      	PRD2:	LDA #QPRMPT	;Reqular prompt
  49E5   20   90   72 	PRD3:	JSR TPCHR
                      
  49E8   20   14   76 	REDLN1:	JSR GETLN	;Get a line into the Line buffer
  49EB   86   B8      		STX TEMPN7
  49ED   A0   00      	PRDLNX:	LDY #$00
  49EF   84   BA      		STY TEMPN8	;List-nesting counter
  49F1   84   BB      		STY TEMPN8+1	;Character buffer pointer
  49F3   84   9C      		STY CELPTR
  49F5   84   9D      		STY CELPTR+1
  49F7   A6   BE      		LDX TEMPX2
  49F9   94   00      		STY $00,X	;Initialize ANS to Lnil
  49FB   94   01      		STY $01,X
  49FD   C8           		INY
  49FE   84   56      		STY PRDFLG
  4A00   A9   32      		LDA #RDL1&$FF	;Error return address
  4A02   85   12      		STA ERRRET
  4A04   A9   4A      		LDA #RDL1^
  4A06   85   13      		STA ERRRET+1
  4A08   BA           		TSX
  4A09   86   11      		STX RETADR
  4A0B   A9   01      		LDA #NEWLIN
  4A0D   85   BF      		STA TEMPX2+1	;Current cell type
  4A0F   A5   BB      	RDLNW:	LDA TEMPN8+1	;Loop processes line, token by token
  4A11   C5   B8      		CMP TEMPN7
  4A13   D0   34      		BNE TGTTOK	;Process the next token
  4A15   A5   BA      	RDLNWE:	LDA TEMPN8	;Done, close all lists
  4A17   F0   15      		BEQ RDL1A
  4A19   A5   58      	RDL1A1:	LDA OUTDEV
  4A1B   D0   02      		BNE RDL1A2
  4A1D   A9   5D      		LDA #']		;Close the list (unless non-default output)
  4A1F   20   90   72 	RDL1A2:	JSR TPCHR
  4A22   A2   AA      		LDX #TEMPN1
  4A24   20   67   52 		JSR POP		;Discard pushed list pointers
  4A27   C6   BA      		DEC TEMPN8	;Decrement list nesting counter
  4A29   D0   EE      		BNE RDL1A1
  4A2B   20   67   72 		JSR BREAK1
  4A2E   A0   00      	RDL1A:	LDY #$00	;Y zero means OK
  4A30   F0   02      		BEQ RDL1B	;(Always)
  4A32   A0   01      	RDL1:	LDY #$01	;Y nonzero means error
  4A34   A9   00      	RDL1B:	LDA #$00
  4A36   85   9C      		STA CELPTR
  4A38   85   9D      		STA CELPTR+1
  4A3A   85   56      		STA PRDFLG
  4A3C   A2   00      	RSTERR:	LDX #$00	;General reset-error routine
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-44
NLOGO	READER AND TOKENIZER

  4A3E   86   11      		STX RETADR
  4A40   A2   CD      		LDX #ERROR1&$FF
  4A42   86   12      		STX ERRRET
  4A44   A2   47      		LDX #ERROR1^
  4A46   86   13      		STX ERRRET+1
  4A48   60           		RTS
  4A49   A9   00      	TGTTOK:	LDA #$00
  4A4B   85   C1      		STA ANSN3	;No typecode yet (for SLFDLP)
  4A4D   85   B9      		STA TEMPN7+1	;Funny-pname if non-zero
  4A4F   85   B1      		STA TEMPN4+1	;Indicates quoted atom if non-zero
  4A51   A6   BB      		LDX TEMPN8+1
  4A53   BD   00   02 	TGT1:	LDA LINARY,X
  4A56   C9   20      		CMP #$20
  4A58   D0   07      		BNE TGT2
  4A5A   E8           		INX
  4A5B   E4   B8      		CPX TEMPN7
  4A5D   D0   F4      		BNE TGT1	;Skip spaces
  4A5F   F0   B4      		BEQ RDLNWE
  4A61   86   BB      	TGT2:	STX TEMPN8+1
  4A63   C9   5D      		CMP #']
  4A65   F0   38      		BEQ TKRBR
  4A67   48           		PHA
  4A68   20   98   4D 		JSR ALLSTC
  4A6B   68           		PLA
  4A6C   C9   5B      		CMP #'[
  4A6E   F0   1F      		BEQ TKLBR
  4A70   20   D3   4D 		JSR SLFDLP
  4A73   90   49      		BCC TKNDL
  4A75   85   B4      		STA TEMPN5
  4A77   E6   BB      		INC TEMPN8+1
  4A79   A2   00      		LDX #$00
  4A7B   86   B5      		STX TEMPN5+1
  4A7D   A0   B4      		LDY #TEMPN5	;Cons up a pname
  4A7F   A9   B6      		LDA #TEMPN6
  4A81   85   B2      		STA ANSN
  4A83   A9   02      		LDA #STRING
  4A85   20   0F   53 		JSR CONS
  4A88   A9   01      		LDA #ATOM
  4A8A   85   C1      		STA ANSN3
  4A8C   4C   BF   4B 		JMP ADDTOK
  4A8F   E6   BA      	TKLBR:	INC TEMPN8	;Start list - increment list nesting counter
  4A91   E6   BB      		INC TEMPN8+1	;Skip to next character
  4A93   A2   9C      		LDX #CELPTR
  4A95   20   20   52 		JSR PUSHP	;Push the list-pointer cell
  4A98   A9   02      		LDA #NEWLST
  4A9A   85   BF      		STA TEMPX2+1	;Next cell allocated will be New-list type
  4A9C   4C   0F   4A 		JMP RDLNW	;Continue processing line
  4A9F   C6   BA      	TKRBR:	DEC TEMPN8	;End list - decrement list nesting counter
  4AA1   30   0E      		BMI TKRBR1	;Error if unbalanced brackets
  4AA3   E6   BB      		INC TEMPN8+1	;Skip to next character
  4AA5   A2   9C      		LDX #CELPTR
  4AA7   20   67   52 		JSR POP		;Pop list pointer
  4AAA   A9   03      		LDA #REGCEL
  4AAC   85   BF      		STA TEMPX2+1
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-45
NLOGO	READER AND TOKENIZER

  4AAE   4C   0F   4A 		JMP RDLNW	;Continue processing line
  4AB1   20   6C   72 	TKRBR1:	JSR RSTIO	;Reset I/O to master drivers
  4AB4   A2   6D      		LDX #RDRER2&$FF
  4AB6   A0   DA      		LDY #RDRER2^
  4AB8   20   90   54 		JSR PRTSTR	;Print "You have mismatched brackets" error
  4ABB   4C   32   4A 		JMP RDL1	;Error escape
  4ABE   C9   22      	TKNDL:	CMP #'"
  4AC0   D0   0B      		BNE TGT3A
  4AC2   E6   B1      		INC TEMPN4+1	;Quoted atom
  4AC4   E6   BB      		INC TEMPN8+1	;Skip to next character
  4AC6   A9   08      		LDA #QATOM
  4AC8   85   C1      		STA ANSN3
  4ACA   4C   E6   4A 		JMP TGT3B1	;Check for funny-pname
  4ACD   C9   27      	TGT3A:	CMP #$27	;(Single Quote)
  4ACF   D0   0B      		BNE TGT3B
  4AD1   E6   BB      		INC TEMPN8+1	;Skip to next character
  4AD3   E6   B9      		INC TEMPN7+1	;Token is a funny_pname
  4AD5   A9   01      	TKAORL:	LDA #ATOM	;Token is an Atom or Label
  4AD7   85   C1      		STA ANSN3
  4AD9   4C   F3   4A 		JMP TKATOM	;Tokenize it
  4ADC   C9   3A      	TGT3B:	CMP #':
  4ADE   D0   F5      		BNE TKAORL
  4AE0   E6   BB      		INC TEMPN8+1	;Dotted atom, skip to next character
  4AE2   A9   09      		LDA #DATOM
  4AE4   85   C1      		STA ANSN3
  4AE6   A6   BB      	TGT3B1:	LDX TEMPN8+1
  4AE8   BD   00   02 		LDA LINARY,X
  4AEB   C9   27      		CMP #$27
  4AED   D0   04      		BNE TKATOM
  4AEF   E6   B9      		INC TEMPN7+1	;Token is funny-pname
  4AF1   E6   BB      		INC TEMPN8+1	;Skip to next character
  4AF3   A6   BB      	TKATOM:	LDX TEMPN8+1
  4AF5   E4   B8      		CPX TEMPN7	;Check for empty word at end-of-line
  4AF7   F0   0D      		BEQ EMPTWD
  4AF9   A5   B9      		LDA TEMPN7+1
  4AFB   D0   52      		BNE NOTNUM	;Funny_pname, not fixnum then
  4AFD   BD   00   02 	TKATM2:	LDA LINARY,X
  4B00   C9   20      		CMP #$20	;Check for empty word inside line
  4B02   D0   0B      		BNE TKATM1
  4B04   E6   BB      	EMTWD1:	INC TEMPN8+1	;Skip space if necessary
  4B06   A9   00      	EMPTWD:	LDA #$00	;Empty word, link Lnil node onto input line
  4B08   85   B6      		STA TEMPN6
  4B0A   85   B7      		STA TEMPN6+1
  4B0C   4C   BF   4B 		JMP ADDTOK	;Link up token and continue
  4B0F   20   C5   4C 	TKATM1:	JSR CLRNG1	;Attempt to compute numerical value, clear indicators
  4B12   86   AC      	ATM1:	STX TEMPN2	;Save temporary character pointer
  4B14   E4   B8      		CPX TEMPN7
  4B16   F0   13      		BEQ ATM2	;End of line encountered, must be numerical
  4B18   BD   00   02 		LDA LINARY,X
  4B1B   20   D3   4D 		JSR SLFDLP
  4B1E   B0   0B      		BCS ATM2	;Self delimiter encountered, must be numerical
  4B20   20   E8   4B 		JSR CNUML1	;Process the next digit
  4B23   90   2A      		BCC NOTNUM	;Carry clear means not a number
  4B25   A6   AC      		LDX TEMPN2
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-46
NLOGO	READER AND TOKENIZER

  4B27   E8           		INX		;Get next digit
  4B28   4C   12   4B 		JMP ATM1
  4B2B   86   AC      	ATM2:	STX TEMPN2	;All characters processed - save character pointer
  4B2D   20   90   4C 		JSR CNUML2	;Finish numerical processing
  4B30   90   1D      		BCC NOTNUM
  4B32   A6   AC      		LDX TEMPN2
  4B34   86   BB      		STX TEMPN8+1	;Numerically ok, reset real charcater pointer
  4B36   A2   B6      		LDX #TEMPN6
  4B38   86   B2      		STX ANSN
  4B3A   A2   A4      		LDX #NARG1+2	;High word
  4B3C   A0   A2      		LDY #NARG1	;Low word
  4B3E   20   0F   53 		JSR CONS	;Cons a numerical cell with the value in it
  4B41   A0   00      		LDY #$00
  4B43   A5   B6      		LDA TEMPN6
  4B45   91   9C      		STA (CELPTR),Y	;Link the cell on to the input line
  4B47   C8           		INY
  4B48   A5   B7      		LDA TEMPN6+1
  4B4A   91   9C      		STA (CELPTR),Y
  4B4C   4C   0F   4A 		JMP RDLNW	;Continue processing line
  4B4F   A2   BC      	NOTNUM:	LDX #TEMPX1	;Not a fixnum - cons up a pname (original pointer)
  4B51   A9   00      		LDA #$00
  4B53   85   C2      		STA ANSNX	;Indicates end of pname if non-zero
  4B55   48           		PHA		;First time around, push zero
  4B56   F0   09      		BEQ NXTCHS	;(Always)
  4B58   A5   C2      	NXTTWO:	LDA ANSNX	;Next two characters
  4B5A   D0   63      		BNE ADDTOK	;Link up token if end of pname
  4B5C   A9   02      		LDA #$02
  4B5E   48           		PHA		;Not first time around, push 2
  4B5F   A2   B4      		LDX #TEMPN5	;Next pointer
  4B61   86   B2      	NXTCHS:	STX ANSN
  4B63   A6   BB      		LDX TEMPN8+1
  4B65   E4   B8      		CPX TEMPN7
  4B67   F0   55      		BEQ ADDTK1	;Finish token (end of line), even no. chars.
  4B69   BD   00   02 		LDA LINARY,X
  4B6C   85   AA      		STA TEMPN1	;First character in pair
  4B6E   20   D3   4D 		JSR SLFDLP
  4B71   B0   49      		BCS ADDTK2	;Finish token (delimiter hit), even no. chars.
  4B73   E8           		INX		;Skip to next character
  4B74   E4   B8      		CPX TEMPN7
  4B76   F0   0D      		BEQ FINTK1	;Finish token (end of line), odd no. chars.
  4B78   BD   00   02 		LDA LINARY,X
  4B7B   85   AB      		STA TEMPN1+1	;Second character in pair
  4B7D   20   D3   4D 		JSR SLFDLP
  4B80   B0   03      		BCS FINTK1	;Finish token (delimiter hit), odd no. chars.
  4B82   E8           		INX
  4B83   90   06      		BCC CNSSTR	;(Always) Cons new pair on to pname string
  4B85   A9   00      	FINTK1:	LDA #$00
  4B87   85   AB      		STA TEMPN1+1	;Odd no. chars. in pname, zero last character
  4B89   E6   C2      		INC ANSNX	;Indicates end of pname
  4B8B   86   BB      	CNSSTR:	STX TEMPN8+1	;Skip the last character (if not delimiter)
  4B8D   A0   AA      		LDY #TEMPN1
  4B8F   A2   00      		LDX #$00
  4B91   A9   02      		LDA #STRING
  4B93   20   0F   53 		JSR CONS	;Cons up the new pname pair
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-47
NLOGO	READER AND TOKENIZER

  4B96   68           		PLA
  4B97   A8           		TAY		;0 first time, 2 otherwise
  4B98   D0   11      		BNE NTFRST
  4B9A   A5   BC      		LDA TEMPX1
  4B9C   91   9C      		STA (CELPTR),Y	;(Linking garbage-collect-protects it)
  4B9E   AA           		TAX
  4B9F   C8           		INY
  4BA0   A5   BD      		LDA TEMPX1+1
  4BA2   91   9C      		STA (CELPTR),Y
  4BA4   85   B7      		STA TEMPN6+1
  4BA6   86   B6      		STX TEMPN6	;Atom pointer
  4BA8   4C   58   4B 		JMP NXTTWO	;Continue making the pname
  4BAB   A5   B4      	NTFRST:	LDA TEMPN5	;Link cell onto pname string
  4BAD   AA           		TAX
  4BAE   91   BC      		STA (TEMPX1),Y
  4BB0   C8           		INY
  4BB1   A5   B5      		LDA TEMPN5+1
  4BB3   91   BC      		STA (TEMPX1),Y	;(RPLACD)
  4BB5   85   BD      		STA TEMPX1+1
  4BB7   86   BC      		STX TEMPX1
  4BB9   4C   58   4B 		JMP NXTTWO	;Continue making the pname
  4BBC   86   BB      	ADDTK2:	STX TEMPN8+1	;In case colon or quote skipped
  4BBE   68           	ADDTK1:	PLA		;Pop chain indicator if loop exit
  4BBF   A2   B6      	ADDTOK:	LDX #TEMPN6
  4BC1   A0   BC      		LDY #TEMPX1
  4BC3   20   F9   5F 		JSR INTERN	;Intern atom
  4BC6   A5   C1      	ATM12B:	LDA ANSN3
  4BC8   C9   01      		CMP #ATOM
  4BCA   F0   05      		BEQ ATM12A
  4BCC   A2   BC      		LDX #TEMPX1
  4BCE   20   EB   53 		JSR PUTTYP	;Give atom a type if not Atom
  4BD1   A0   00      	ATM12A:	LDY #$00
  4BD3   A5   BC      		LDA TEMPX1
  4BD5   91   9C      		STA (CELPTR),Y	;Link atom onto input line
  4BD7   C8           		INY
  4BD8   A5   BD      		LDA TEMPX1+1
  4BDA   91   9C      		STA (CELPTR),Y
  4BDC   A5   B9      		LDA TEMPN7+1
  4BDE   F0   05      		BEQ NXTE
  4BE0   A2   BC      		LDX #TEMPX1
  4BE2   20   54   54 		JSR PTSPNM	;Put-strange-pname if funny-pname indicated
  4BE5   4C   0F   4A 	NXTE:	JMP RDLNW	;Continue processing line
                      
                      	;Process a character, number-building
  4BE8   A6   B4      	CNUML1:	LDX TEMPN5	;Flonum indicator
  4BEA   D0   54      		BNE NFLDIG	;Process next flonum character
  4BEC   20   40   4E 		JSR DIGITP	;Still a fixnum
  4BEF   90   63      		BCC NTFIX1	;Not a digit, isn't a fixnum then
  4BF1   E6   B7      		INC TEMPN6+1	;Indicate presence of digit
  4BF3   20   DC   4C 		JSR NMROL1	;Multiply by 2 first
  4BF6   30   1F      		BMI NTFIX3	;Not a fixnum if value overflow
  4BF8   48           		PHA		;Save digit
  4BF9   A0   3C      		LDY #A1L
  4BFB   20   EE   4C 		JSR XN1TOY	;Copy doubled number
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-48
NLOGO	READER AND TOKENIZER

  4BFE   68           		PLA
  4BFF   A8           		TAY
  4C00   20   DC   4C 		JSR NMROL1	;Multiplied by 4
  4C03   30   15      		BMI NTFIX2
  4C05   20   DC   4C 		JSR NMROL1	;Multiplied by 8
  4C08   30   10      		BMI NTFIX2
  4C0A   20   06   4D 		JSR ADDNUM	;Multiplied by 10.
  4C0D   30   0B      		BMI NTFIX2
  4C0F   98           		TYA		;Retrieve digit
  4C10   20   14   4D 		JSR ADDDIG	;Add value of current digit to subtotal
  4C13   30   05      		BMI NTFIX2
  4C15   38           	NUMOK:	SEC		;Indicate number OK
  4C16   60           		RTS
  4C17   48           	NTFIX3:	PHA		;Save digit
  4C18   D0   06      		BNE NTFX2A	;(Always)
  4C1A   48           	NTFIX2:	PHA		;Save digit
  4C1B   A0   3C      		LDY #A1L
  4C1D   20   FA   4C 		JSR XYTON1	;Fixnum overflow, doubled number is in A1L-A2H, transfer
  4C20   20   E5   4C 	NTFX2A:	JSR NMROR1	;Halve it
  4C23   E6   B4      		INC TEMPN5	;Indicate flonum (1)
  4C25   20   38   69 		JSR FLOTN1	;Convert to floating pt.
  4C28   68           		PLA		;Get the digit back
  4C29   E6   B7      	FADNML:	INC TEMPN6+1	;Indicate prescence of digit
  4C2B   20   5C   4D 		JSR MULN10	;Shift number before adding
  4C2E   20   3A   4D 		JSR FADDIG	;Add it to the number (left of point)
  4C31   4C   15   4C 		JMP NUMOK
  4C34   E6   B7      	FNDIGD:	INC TEMPN6+1	;Indicate presence of digit
  4C36   A6   BD      		LDX TEMPX1+1	;See if it's significant
  4C38   D0   DB      		BNE NUMOK	;No, ignore it
  4C3A   20   40   4D 		JSR FADDGN	;Yes, add it to the number (right of point)
  4C3D   4C   15   4C 		JMP NUMOK
  4C40   E0   02      	NFLDIG:	CPX #$02	;New flonum digit
  4C42   D0   07      		BNE NFLDG1
  4C44   20   40   4E 		JSR DIGITP	;In decimal mode
  4C47   B0   EB      		BCS FNDIGD	;If digit, add to number
  4C49   90   0D      		BCC FCKEN	;Else check for E or N
  4C4B   E0   03      	NFLDG1:	CPX #$03	;See if exponent mode
  4C4D   F0   23      		BEQ FXDIG
  4C4F   20   40   4E 		JSR DIGITP	;Normal mode, check for digit
  4C52   B0   D5      		BCS FADNML	;Add it if it is, else
  4C54   C9   2E      	NTFIX1:	CMP #'.		;See if digit is legal
  4C56   F0   27      		BEQ FMDECI
  4C58   C9   45      	FCKEN:	CMP #'E		;Check for E or N
  4C5A   F0   06      		BEQ FXPOS
  4C5C   C9   4E      		CMP #'N
  4C5E   D0   2E      		BNE NTNUM
  4C60   E6   B5      		INC TEMPN5+1	;Indicate negative exponent
  4C62   A5   B7      	FXPOS:	LDA TEMPN6+1
  4C64   F0   28      		BEQ NTNUM	;Check that a digit was typed (so ".Ex" is illegal)
  4C66   A6   B4      		LDX TEMPN5
  4C68   A9   03      		LDA #$03
  4C6A   85   B4      		STA TEMPN5	;Indicate exponent mode (3)
  4C6C   A9   00      		LDA #$00
  4C6E   85   B7      		STA TEMPN6+1	;Now, indicates exponent digit presence
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-49
NLOGO	READER AND TOKENIZER

  4C70   F0   13      		BEQ MAKFLO	;(Always)
  4C72   20   40   4E 	FXDIG:	JSR DIGITP	;Exponent mode, must be a digit
  4C75   90   18      		BCC CNMR
  4C77   E6   B7      		INC TEMPN6+1	;Indicate presence of exponent digit
  4C79   20   76   4D 		JSR INCEXP	;Exponentiate by vA
  4C7C   4C   15   4C 		JMP NUMOK
  4C7F   A6   B4      	FMDECI:	LDX TEMPN5
  4C81   A9   02      		LDA #$02
  4C83   85   B4      		STA TEMPN5	;Indicate decimal mode (2)
  4C85   8A           	MAKFLO:	TXA
  4C86   D0   8D      		BNE NUMOK	;Exit OK if flonum, else...
  4C88   20   38   69 		JSR FLOTN1	;make it one
  4C8B   4C   15   4C 		JMP NUMOK
  4C8E   18           	NTNUM:	CLC		;Not a number
  4C8F   60           	CNMR:	RTS
                      
                      	;Number gobbled, finish number-building.
  4C90   A6   B4      	CNUML2:	LDX TEMPN5
  4C92   F0   2D      		BEQ CNUM2X
  4C94   A5   B7      		LDA TEMPN6+1	;If floating pt., make sure that there's a digit
  4C96   F0   F6      		BEQ NTNUM
  4C98   A5   B6      		LDA TEMPN6	;Check placeholder counter
  4C9A   F0   07      		BEQ CNUM2A
  4C9C   20   69   4D 	CNUM2B:	JSR FDVD10	;Divide by 10. until back to correct decimal point location
  4C9F   C6   B6      		DEC TEMPN6
  4CA1   D0   F9      		BNE CNUM2B
  4CA3   A5   BC      	CNUM2A:	LDA TEMPX1	;Check for exponent
  4CA5   F0   16      		BEQ CNUM2R
  4CA7   A5   B5      		LDA TEMPN5+1	;Check its sign
  4CA9   D0   0B      		BNE CNUM2D
  4CAB   20   5C   4D 	CNUM2C:	JSR MULN10	;Multiply by 10 according to (positive) exponent value
  4CAE   B0   DE      		BCS NTNUM
  4CB0   C6   BC      		DEC TEMPX1
  4CB2   D0   F7      		BNE CNUM2C
  4CB4   F0   07      		BEQ CNUM2R	;(Always)
  4CB6   20   69   4D 	CNUM2D:	JSR FDVD10	;Divide by 10 according to (negative) exponent value
  4CB9   C6   BC      		DEC TEMPX1
  4CBB   D0   F9      		BNE CNUM2D
  4CBD   A9   04      	CNUM2R:	LDA #FLO
  4CBF   38           		SEC
  4CC0   60           		RTS
  4CC1   A9   03      	CNUM2X:	LDA #FIX
  4CC3   38           		SEC
  4CC4   60           		RTS
                      
  4CC5   A9   00      	CLRNG1:	LDA #$00
  4CC7   85   A2      		STA NARG1	;Initialize number to 0
  4CC9   85   A3      		STA NARG1+1
  4CCB   85   A4      		STA NARG1+2
  4CCD   85   A5      		STA NARG1+3
  4CCF   85   B4      		STA TEMPN5	;Flonum indicator
  4CD1   85   B5      		STA TEMPN5+1	;Exponent sign indicator
  4CD3   85   B6      		STA TEMPN6	;Fraction decimal shift (placeholder) counter
  4CD5   85   B7      		STA TEMPN6+1	;Indicates the presence of a mant. or exp. digit
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-50
NLOGO	READER AND TOKENIZER

  4CD7   85   BC      		STA TEMPX1	;Exponent counter
  4CD9   85   BD      		STA TEMPX1+1	;Significant digit indicator
  4CDB   60           		RTS
                      
  4CDC   06   A2      	NMROL1:	ASL NARG1	;Double number in NARG1
  4CDE   26   A3      		ROL NARG1+1
  4CE0   26   A4      		ROL NARG1+2
  4CE2   26   A5      		ROL NARG1+3
  4CE4   60           		RTS
                      
  4CE5   46   A5      	NMROR1:	LSR NARG1+3	;Halve number in NARG1
  4CE7   66   A4      		ROR NARG1+2
  4CE9   66   A3      		ROR NARG1+1
  4CEB   66   A2      		ROR NARG1
  4CED   60           		RTS
                      
  4CEE   A2   FC      	XN1TOY:	LDX #$FC
  4CF0   B5   A6      	XN1YL:	LDA NARG1+4,X
  4CF2   99   00   00 		STA $00,Y
  4CF5   C8           		INY
  4CF6   E8           		INX
  4CF7   30   F7      		BMI XN1YL
  4CF9   60           		RTS
                      
  4CFA   A2   FC      	XYTON1:	LDX #$FC
  4CFC   B9   00   00 	XYN1L:	LDA $00,Y
  4CFF   95   A6      		STA NARG1+4,X
  4D01   C8           		INY
  4D02   E8           		INX
  4D03   30   F7      		BMI XYN1L
  4D05   60           		RTS
                      
  4D06   A2   FC      	ADDNUM:	LDX #$FC	;Add A1L to NARG1
  4D08   18           		CLC
  4D09   B5   40      	ADDNML:	LDA A1L+4,X
  4D0B   75   A6      		ADC NARG1+4,X
  4D0D   95   A6      		STA NARG1+4,X
  4D0F   E8           		INX
  4D10   30   F7      		BMI ADDNML
  4D12   AA           		TAX
  4D13   60           		RTS
                      
  4D14   38           	ADDDIG:	SEC		;Add Ascii digit in A to NARG1
  4D15   E9   30      		SBC #'0
  4D17   18           		CLC
  4D18   A2   FC      		LDX #$FC
  4D1A   D0   02      		BNE ADDL1A	;(Always)
  4D1C   A9   00      	ADDLP1:	LDA #$00
  4D1E   75   A6      	ADDL1A:	ADC NARG1+4,X
  4D20   95   A6      		STA NARG1+4,X
  4D22   E8           		INX
  4D23   30   F7      		BMI ADDLP1
  4D25   AA           		TAX
  4D26   60           		RTS
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-51
NLOGO	READER AND TOKENIZER

                      
  4D27   38           	FADDGX:	SEC
  4D28   E9   30      		SBC #'0		;Get the digit's value
  4D2A   85   9E      		STA NARG2	;Add A to NARG1, floating pt.
  4D2C   A9   00      		LDA #$00
  4D2E   85   9F      		STA NARG2+1	;Put A in NARG2, make it floating pt., and add
  4D30   85   A0      		STA NARG2+2
  4D32   85   A1      		STA NARG2+3
  4D34   20   2F   69 		JSR FLOTN2
  4D37   4C   A9   69 		JMP FADD
                      
  4D3A   20   27   4D 	FADDIG:	JSR FADDGX
  4D3D   B0   55      		BCS NUMOVF
  4D3F   60           		RTS
                      
  4D40   48           	FADDGN:	PHA		;Add decimal digit to floating pt. number
  4D41   A0   3C      		LDY #A1L
  4D43   20   EE   4C 		JSR XN1TOY	;Save NARG1
  4D46   20   5C   4D 		JSR MULN10	;Multiply number by 10
  4D49   B0   09      		BCS FADDG1	;Overflow, digit will be insignificant
  4D4B   68           		PLA		;Get digit
  4D4C   20   27   4D 		JSR FADDGX	;and add it
  4D4F   B0   04      		BCS FADDG2	;If overflow, digit not significant
  4D51   E6   B6      		INC TEMPN6	;Else increment placeholder counter
  4D53   60           		RTS
  4D54   68           	FADDG1:	PLA		;Discard digit
  4D55   E6   BD      	FADDG2:	INC TEMPX1+1	;Indicate no more significant digits, restore NARG1
  4D57   A0   3C      		LDY #A1L
  4D59   4C   FA   4C 		JMP XYTON1
                      
  4D5C   A2   03      	MULN10:	LDX #$03	;Multiply NARG1 by 10., floating pt.
  4D5E   BD   FD   94 	MLN10L:	LDA FLT10,X	;Put 10. (floating pt. constant) in NARG2
  4D61   95   9E      		STA NARG2,X
  4D63   CA           		DEX
  4D64   10   F8      		BPL MLN10L
  4D66   4C   B6   69 		JMP FMUL	;and multiply (calling procedure checks for overflow)
                      
  4D69   A2   03      	FDVD10:	LDX #$03	;Divide NARG1 by 10., floating pt.
  4D6B   BD   FD   94 	FDV10L:	LDA FLT10,X	;Put 10. (floating pt. constant) in NARG2
  4D6E   95   9E      		STA NARG2,X
  4D70   CA           		DEX
  4D71   10   F8      		BPL FDV10L
  4D73   4C   BB   69 		JMP FDIV
                      
  4D76   38           	INCEXP:	SEC
  4D77   E9   30      		SBC #'0
  4D79   A8           		TAY		;Multiply exponent by ten and add new digit
  4D7A   06   BC      		ASL TEMPX1
  4D7C   30   16      		BMI NUMOVF
  4D7E   A5   BC      		LDA TEMPX1
  4D80   0A           		ASL A
  4D81   30   11      		BMI NUMOVF
  4D83   0A           		ASL A
  4D84   30   0E      		BMI NUMOVF
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-52
NLOGO	READER AND TOKENIZER

  4D86   65   BC      		ADC TEMPX1
  4D88   30   0A      		BMI NUMOVF
  4D8A   85   BC      		STA TEMPX1
  4D8C   98           		TYA
  4D8D   65   BC      		ADC TEMPX1
  4D8F   30   03      		BMI NUMOVF
  4D91   85   BC      		STA TEMPX1
  4D93   60           		RTS
                      
  4D94   68           	NUMOVF:	PLA		;Overflow, pop past subroutine
  4D95   68           		PLA
  4D96   18           		CLC		;Indicate not a number
  4D97   60           		RTS
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-53
NLOGO	READER AND TOKENIZER

  4D98   A9   A8      	ALLSTC:	LDA #TEMPN	;Allocate a new list cell
  4D9A   85   B2      		STA ANSN
  4D9C   A9   00      		LDA #$00
  4D9E   AA           		TAX
  4D9F   A8           		TAY
  4DA0   20   0F   53 		JSR CONS	;(Type list)
  4DA3   A0   00      		LDY #$00
  4DA5   A5   BF      		LDA TEMPX2+1
  4DA7   C9   01      		CMP #NEWLIN
  4DA9   D0   0C      		BNE ALSTC1
  4DAB   A6   BE      		LDX TEMPX2	;New line, ANS pointer points to cell
  4DAD   A5   A8      		LDA TEMPN
  4DAF   95   00      		STA $00,X
  4DB1   A5   A9      		LDA TEMPN+1
  4DB3   95   01      		STA $01,X
  4DB5   D0   0F      		BNE ALSTC3	;(Always)
  4DB7   C9   02      	ALSTC1:	CMP #NEWLST
  4DB9   F0   02      		BEQ ALSTC4	;For new-list, rplaca onto input line
  4DBB   C8           		INY		;Regular cell, link onto input line
  4DBC   C8           		INY
  4DBD   A5   A8      	ALSTC4:	LDA TEMPN
  4DBF   91   9C      		STA (CELPTR),Y	;Rplaca or Rplacd for new-list or regular-cell
  4DC1   C8           		INY
  4DC2   A5   A9      		LDA TEMPN+1
  4DC4   91   9C      		STA (CELPTR),Y
  4DC6   A5   A8      	ALSTC3:	LDA TEMPN
  4DC8   85   9C      		STA CELPTR	;New input line end pointer
  4DCA   A5   A9      		LDA TEMPN+1
  4DCC   85   9D      		STA CELPTR+1
  4DCE   A9   03      		LDA #REGCEL
  4DD0   85   BF      		STA TEMPX2+1	;Next cell allocated will be regular-cell
  4DD2   60           		RTS
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-54
NLOGO	READER AND TOKENIZER

  4DD3   A4   B9      	SLFDLP:	LDY TEMPN7+1	;Checks for self-delimiter
  4DD5   F0   0F      		BEQ SLF2	;Not funny-pname
  4DD7   C9   27      		CMP #$27	;If funny-pname, look for quote
  4DD9   D0   69      		BNE DIGN	;Not delimiter if no quote
  4DDB   E8           		INX
  4DDC   BD   00   02 		LDA LINARY,X
  4DDF   C9   27      		CMP #$27	;Look for pair of quotes
  4DE1   F0   61      		BEQ DIGN	;If pair, skip over one, not delimiter
  4DE3   4C   3E   4E 		JMP DIGY	;If no pair, the quote is a delimiter, skip it
  4DE6   A4   B1      	SLF2:	LDY TEMPN4+1	;Check for quoted atom
  4DE8   F0   0E      		BEQ SLF1
  4DEA   C9   20      		CMP #$20	;Quoted atoms can be terminated by a space,
  4DEC   F0   50      		BEQ DIGY
  4DEE   C9   5D      		CMP #']		;or a closing bracket,
  4DF0   F0   4C      		BEQ DIGY
  4DF2   C9   29      		CMP #')		;or a closing parenthesis.
  4DF4   F0   48      		BEQ DIGY
  4DF6   D0   4C      		BNE DIGN	;(Always)
  4DF8   A4   C1      	SLF1:	LDY ANSN3	;Check for type Atom
  4DFA   C0   01      		CPY #ATOM
  4DFC   D0   0C      		BNE SLF3
  4DFE   C9   3A      		CMP #':		;If Atom, check for colon (for Label atom)
  4E00   D0   08      		BNE SLF3
  4E02   E8           		INX		;If colon, skip over it and change type to Latom
  4E03   A0   0A      		LDY #LATOM
  4E05   84   C1      		STY ANSN3
  4E07   4C   3E   4E 		JMP DIGY
  4E0A   C9   20      	SLF3:	CMP #$20	;Compare character to all delimiters
  4E0C   F0   30      		BEQ DIGY
  4E0E   C9   3C      		CMP #'<
  4E10   F0   2C      		BEQ DIGY
  4E12   C9   3E      		CMP #'>
  4E14   F0   28      		BEQ DIGY
  4E16   C9   3D      		CMP #'=
  4E18   F0   24      		BEQ DIGY
  4E1A   C9   3B      		CMP #$3B	;(Semicolon)
  4E1C   F0   20      		BEQ DIGY
  4E1E   C9   29      		CMP #')
  4E20   F0   1C      		BEQ DIGY
  4E22   C9   28      		CMP #'(
  4E24   F0   18      		BEQ DIGY
  4E26   C9   2B      		CMP #'+
  4E28   F0   14      		BEQ DIGY
  4E2A   C9   2D      		CMP #'-
  4E2C   F0   10      		BEQ DIGY
  4E2E   C9   2A      		CMP #'*
  4E30   F0   0C      		BEQ DIGY
  4E32   C9   2F      		CMP #'/
  4E34   F0   08      		BEQ DIGY
  4E36   C9   5D      		CMP #']
  4E38   F0   04      		BEQ DIGY
  4E3A   C9   5B      		CMP #'[
  4E3C   D0   06      		BNE DIGN
  4E3E   38           	DIGY:	SEC		;Carry set means true
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-55
NLOGO	READER AND TOKENIZER

  4E3F   60           		RTS
                      
  4E40   C9   3A      	DIGITP:	CMP #':		;Checks to see if character is a digit (0-9)
  4E42   90   02      		BCC DIGP1
  4E44   18           	DIGN:	CLC		;Carry clear means not true
  4E45   60           		RTS
  4E46   C9   30      	DIGP1:	CMP #'0		;(Sets carry correctly)
  4E48   60           		RTS
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-56
NLOGO	READER AND TOKENIZER

  4E49   86   B3      	EDLINE:	STX ANSN1
  4E4B   B5   00      		LDA $00,X		;pointer to line
  4E4D   85   A6      		STA TEMPNH		;gets stored in TEMPNH
  4E4F   B5   01      		LDA $01,X
  4E51   85   A7      		STA TEMPNH+1
  4E53   98           		TYA
  4E54   D0   31      		BNE GETHIG		;Y nonzero for default line number
  4E56   B1   A6      		LDA (TEMPNH),Y
  4E58   85   B0      		STA TEMPN4		;TEMPN4 is the line pointer
  4E5A   C8           		INY
  4E5B   B1   A6      		LDA (TEMPNH),Y
  4E5D   85   B1      		STA TEMPN4+1		;(car line)
  4E5F   A0   02      		LDY #$02
  4E61   B1   B0      		LDA (TEMPN4),Y
  4E63   D0   1D      		BNE EDLERR
  4E65   C8           		INY
  4E66   B1   B0      		LDA (TEMPN4),Y
  4E68   D0   18      		BNE EDLERR
  4E6A   A0   00      		LDY #$00
  4E6C   B1   B0      		LDA (TEMPN4),Y
  4E6E   AA           		TAX
  4E6F   C8           		INY
  4E70   B1   B0      		LDA (TEMPN4),Y
  4E72   85   B1      		STA TEMPN4+1
  4E74   30   07      		BMI LINERR		;Line numbers limited to two bytes, positive
  4E76   86   B0      		STX TEMPN4
  4E78   D0   6A      		BNE EDL1
  4E7A   8A           		TXA
  4E7B   D0   67      		BNE EDL1
  4E7D   A9   1F      	LINERR:	LDA #XILN		;"Illegal Line Number"
  4E7F   4C   42   61 		JMP ERROR
  4E82   A9   1E      	EDLERR:	LDA #XLNTB		;"Line number too big"
  4E84   4C   42   61 		JMP ERROR
  4E87   A9   00      	GETHIG:	LDA #$00
  4E89   85   B0      		STA TEMPN4
  4E8B   85   B1      		STA TEMPN4+1
  4E8D   A0   02      		LDY #$02		;get body pointer
  4E8F   B1   9A      		LDA (EDBOD),Y		;skip args
  4E91   85   AE      		STA TEMPN3		;TEMPN3 is BODY ptr.
  4E93   C8           		INY
  4E94   B1   9A      		LDA (EDBOD),Y
  4E96   85   AF      		STA TEMPN3+1		;(cdr body)
  4E98   A5   AF      	GTHW:	LDA TEMPN3+1		;if it ain't LNIL,
  4E9A   F0   3B      		BEQ GTHE		;take the cdr again
  4E9C   A0   00      		LDY #$00
  4E9E   B1   AE      		LDA (TEMPN3),Y
  4EA0   85   AC      		STA TEMPN2		;TEMPN2 is Current Line
  4EA2   C8           		INY			;(car line) - put pointer
  4EA3   B1   AE      		LDA (TEMPN3),Y
  4EA5   85   AD      		STA TEMPN2+1		;to line num in TEMPN2
  4EA7   C8           		INY
  4EA8   B1   AE      		LDA (TEMPN3),Y
  4EAA   AA           		TAX			;get (cdr body)
  4EAB   C8           		INY
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-57
NLOGO	READER AND TOKENIZER

  4EAC   B1   AE      		LDA (TEMPN3),Y
  4EAE   85   AF      		STA TEMPN3+1
  4EB0   86   AE      		STX TEMPN3
  4EB2   A0   00      		LDY #$00
  4EB4   B1   AC      		LDA (TEMPN2),Y
  4EB6   AA           		TAX
  4EB7   C8           		INY			;(car line) -- this one
  4EB8   B1   AC      		LDA (TEMPN2),Y		;gets actual line number
  4EBA   85   AD      		STA TEMPN2+1
  4EBC   86   AC      		STX TEMPN2
  4EBE   A5   B1      		LDA TEMPN4+1
  4EC0   C5   AD      		CMP TEMPN2+1		;old greatest line #
  4EC2   90   08      		BCC GTH3		;old < new - replace
  4EC4   D0   D2      		BNE GTHW		;old > new, go back for next
  4EC6   A5   B0      		LDA TEMPN4
  4EC8   C5   AC      		CMP TEMPN2
  4ECA   B0   CC      		BCS GTHW		;old > new -- just go back
  4ECC   A5   AC      	GTH3:	LDA TEMPN2		;replace old highest line #
  4ECE   85   B0      		STA TEMPN4		;with new highest line number
  4ED0   A5   AD      		LDA TEMPN2+1
  4ED2   85   B1      		STA TEMPN4+1
  4ED4   4C   98   4E 		JMP GTHW		;look for more
  4ED7   18           	GTHE:	CLC
  4ED8   A5   B0      		LDA TEMPN4
  4EDA   69   0A      		ADC #LININC		;make default line number
  4EDC   85   B0      		STA TEMPN4
  4EDE   90   04      		BCC EDL1
  4EE0   E6   B1      		INC TEMPN4+1
  4EE2   30   9E      		BMI EDLERR
  4EE4   A0   00      	EDL1:	LDY #$00		;place line # in car of line
  4EE6   A5   B0      		LDA TEMPN4
  4EE8   91   A6      		STA (TEMPNH),Y
  4EEA   C8           		INY
  4EEB   A5   B1      		LDA TEMPN4+1
  4EED   91   A6      		STA (TEMPNH),Y		;(RPLACA)
  4EEF   A9   0C      		LDA #FLIST
  4EF1   A6   B3      		LDX ANSN1
  4EF3   20   EB   53 		JSR PUTTYP
  4EF6   A6   B3      		LDX ANSN1		;POINTER
  4EF8   A0   B0      		LDY #TEMPN4		;NUMBER
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-58
NLOGO	READER AND TOKENIZER

  4EFA   86   C0      	PUTLIN:	STX ANSN2	;POINTER (Y has NUMBER) -  Add line to body
  4EFC   A2   9A      		LDX #EDBOD
  4EFE   A9   AC      		LDA #TEMPN2	;Line to be gotten
  4F00   20   E2   54 		JSR FNDLIN
  4F03   90   0E      		BCC PTLN1	;Branch if not found
  4F05   A6   C0      		LDX ANSN2
  4F07   A0   00      		LDY #$00
  4F09   B5   00      		LDA $00,X
  4F0B   91   AC      		STA (TEMPN2),Y
  4F0D   C8           		INY
  4F0E   B5   01      		LDA $01,X
  4F10   91   AC      		STA (TEMPN2),Y	;(RPLACA)
  4F12   60           		RTS
  4F13   A0   02      	PTLN1:	LDY #$02
  4F15   B1   AC      		LDA (TEMPN2),Y
  4F17   85   AE      		STA TEMPN3
  4F19   C8           		INY
  4F1A   B1   AC      		LDA (TEMPN2),Y
  4F1C   85   AF      		STA TEMPN3+1	;(CDR)
  4F1E   A4   C0      		LDY ANSN2
  4F20   A2   AE      		LDX #TEMPN3
  4F22   86   B2      		STX ANSN
  4F24   A9   00      		LDA #LIST
  4F26   20   0F   53 		JSR CONS
  4F29   A0   02      		LDY #$02
  4F2B   A5   AE      		LDA TEMPN3
  4F2D   91   AC      		STA (TEMPN2),Y
  4F2F   C8           		INY
  4F30   A5   AF      		LDA TEMPN3+1
  4F32   91   AC      		STA (TEMPN2),Y	;(RPLACD)
  4F34   60           		RTS
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-59
NLOGO	INITIALIZATIONS

                      	.SBTTL	Initializations
  4F35   A9   00      	INITLZ:	LDA #$00
  4F37   85   09      		STA GRPHCS
  4F39   85   0A      		STA DBUGSW
  4F3B   85   08      		STA EDSW
  4F3D   85   9A      		STA EDBOD
  4F3F   85   9B      		STA EDBOD+1
  4F41   20   6C   72 		JSR RSTIO	;Set I/O to to default
  4F44   20   87   72 		JSR RESETT	;Clear screen, etc.
  4F47   20   9D   63 		JSR CLRMRK	;Reset G.C. Array (Typebase bits)
  4F4A   A9   00      		LDA #BASARY&$FF
  4F4C   85   A8      		STA TEMPN
  4F4E   A9   08      		LDA #BASARY^
  4F50   85   A9      		STA TEMPN+1
  4F52   A0   00      		LDY #$00
  4F54   98           		TYA		;Clear the SARRAY, 4 at a time
  4F55   91   A8      	CLRLP1:	STA (TEMPN),Y
  4F57   E6   A8      		INC TEMPN
  4F59   D0   02      		BNE ADHAK4
  4F5B   E6   A9      		INC TEMPN+1
  4F5D   A6   A8      	ADHAK4:	LDX TEMPN
  4F5F   E0   00      		CPX #PDLBAS&$FF	;PDL starts right after S_ARRAY
  4F61   D0   F2      		BNE CLRLP1
  4F63   A6   A9      		LDX TEMPN+1
  4F65   E0   0E      		CPX #PDLBAS^
  4F67   D0   EC      		BNE CLRLP1
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-60
NLOGO	INITIALIZATIONS

  4F69   A2   00      	REINIT:	LDX #$00
  4F6B   86   C3      		STX NNODES	;Node allocation counter
  4F6D   86   C4      		STX NNODES+1
  4F6F   86   87      		STX PODEFL+1
  4F71   20   79   72 		JSR CLRCBF
  4F74   A9   00      		LDA #BASARY&$FF
  4F76   85   5D      		STA SARTOP
  4F78   A9   08      		LDA #BASARY^
  4F7A   85   5E      		STA SARTOP+1
  4F7C   A9   00      		LDA #PDLBAS&$FF
  4F7E   85   14      		STA SP
  4F80   A9   0E      		LDA #PDLBAS^
  4F82   85   15      		STA SP+1
  4F84   A9   F7      		LDA #VPDLBA&$FF
  4F86   85   16      		STA VSP
  4F88   A9   1F      		LDA #VPDLBA^
  4F8A   85   17      		STA VSP+1
  4F8C   A9   00      		LDA #EDBUF&$FF	;Tell RETRIEVE that buffer is not retrievable
  4F8E   85   C7      		STA ENDBUF
  4F90   A9   20      		LDA #EDBUF^
  4F92   85   C8      		STA ENDBUF+1
  4F94   A9   00      		LDA #BIGBAS&$FF	;(FIRST_NODE)
  4F96   85   59      		STA SOBLST
  4F98   85   5B      		STA SOBTOP
  4F9A   A9   D0      		LDA #BIGBAS^
  4F9C   85   5A      		STA SOBLST+1	;SOBLIST := FIRST_NODE
  4F9E   85   5C      		STA SOBTOP+1	;SOBTOP is SOBPTR for now
  4FA0   A9   01      		LDA #PRMTAB&$FF	;Points to first byte of Primitive-table
  4FA2   85   A8      		STA TEMPN
  4FA4   A9   D5      		LDA #PRMTAB^
  4FA6   85   A9      		STA TEMPN+1
  4FA8   20   33   51 	SOBLP1:	JSR SOBST1
  4FAB   A5   A9      		LDA TEMPN+1
  4FAD   C9   D9      		CMP #VPRMTB^
  4FAF   D0   F7      		BNE SOBLP1
  4FB1   A5   A8      		LDA TEMPN
  4FB3   C9   A4      		CMP #VPRMTB&$FF
  4FB5   D0   F1      		BNE SOBLP1
  4FB7   38           		SEC
  4FB8   A5   5B      		LDA SOBTOP
  4FBA   E9   08      		SBC #$08
  4FBC   85   AA      		STA TEMPN1	;TEMPN1 is SOBTOP - 8, for comparison
  4FBE   A5   5C      		LDA SOBTOP+1
  4FC0   E9   00      		SBC #$00
  4FC2   85   AB      		STA TEMPN1+1
  4FC4   AD   83   C0 	SBVLP1:	LDA GETRM2	;Ghost-memory bank 2, VPrim table
  4FC7   E6   55      		INC BANK4K
  4FC9   A0   00      		LDY #$00
  4FCB   B1   A8      		LDA (TEMPN),Y
  4FCD   85   B2      		STA ANSN	;ANSN is INDEX constant
  4FCF   C8           		INY
  4FD0   B1   A8      		LDA (TEMPN),Y
  4FD2   85   AF      		STA TEMPN3+1	;TEMPN3 is Primitive's pointer address
  4FD4   C8           		INY
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-61
NLOGO	INITIALIZATIONS

  4FD5   B1   A8      		LDA (TEMPN),Y
  4FD7   85   AE      		STA TEMPN3
  4FD9   C8           		INY
  4FDA   B1   A8      		LDA (TEMPN),Y
  4FDC   85   C1      		STA ANSN3	;ANSN3 is INSTANCE counter
  4FDE   AD   8B   C0 		LDA GETRM1	;Ghost-memory disable
  4FE1   AD   8B   C0 		LDA GETRM1
  4FE4   C6   55      		DEC BANK4K
  4FE6   18           		CLC
  4FE7   A5   A8      		LDA TEMPN
  4FE9   69   04      		ADC #$04
  4FEB   85   A8      		STA TEMPN
  4FED   90   02      		BCC ADHAK8
  4FEF   E6   A9      		INC TEMPN+1
  4FF1   A9   FC      	ADHAK8:	LDA #BBASX&$FF
  4FF3   85   AC      		STA TEMPN2	;TEMPN2 is temporary VARNAM pointer
  4FF5   A9   CF      		LDA #BBASX^
  4FF7   85   AD      		STA TEMPN2+1
  4FF9   A5   AB      	SBVRW:	LDA TEMPN1+1
  4FFB   C5   AD      		CMP TEMPN2+1
  4FFD   D0   09      		BNE SBVRW1
  4FFF   A5   AA      		LDA TEMPN1
  5001   C5   AC      		CMP TEMPN2
  5003   D0   03      		BNE SBVRW1
  5005   20   C8   51 		JSR SYSBUG
  5008   18           	SBVRW1:	CLC
  5009   A5   AC      		LDA TEMPN2
  500B   69   04      		ADC #$04
  500D   85   AC      		STA TEMPN2
  500F   90   02      		BCC ADHAK9
  5011   E6   AD      		INC TEMPN2+1
  5013   A0   02      	ADHAK9:	LDY #$02
  5015   B1   AC      		LDA (TEMPN2),Y
  5017   85   A6      		STA TEMPNH
  5019   C8           		INY
  501A   B1   AC      		LDA (TEMPN2),Y
  501C   85   A7      		STA TEMPNH+1	;(CDR)
  501E   88           		DEY
  501F   B1   A6      		LDA (TEMPNH),Y
  5021   C5   B2      		CMP ANSN
  5023   D0   D4      		BNE SBVRW
  5025   C6   C1      		DEC ANSN3
  5027   D0   D0      		BNE SBVRW
  5029   A0   00      	SBVRWE:	LDY #$00
  502B   A5   AC      		LDA TEMPN2	;Put TEMPN2 in the right variable
  502D   91   AE      		STA (TEMPN3),Y
  502F   C8           		INY
  5030   A5   AD      		LDA TEMPN2+1
  5032   91   AE      		STA (TEMPN3),Y
  5034   A5   A9      		LDA TEMPN+1
  5036   C9   D9      		CMP #VPRMTE^
  5038   D0   06      		BNE SBVLPJ
  503A   A5   A8      		LDA TEMPN
  503C   C9   F8      		CMP #VPRMTE&$FF
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-62
NLOGO	INITIALIZATIONS

  503E   F0   03      		BEQ SBVLL1
  5040   4C   C4   4F 	SBVLPJ:	JMP SBVLP1
  5043   18           	SBVLL1:	CLC
  5044   A5   5B      		LDA SOBTOP
  5046   85   5F      		STA FRLIST
  5048   69   04      		ADC #$04
  504A   85   A8      		STA TEMPN
  504C   A5   5C      		LDA SOBTOP+1
  504E   85   60      		STA FRLIST+1
  5050   69   00      		ADC #$00
  5052   85   A9      		STA TEMPN+1
  5054   A0   02      		LDY #$02
  5056   A9   00      		LDA #$00
  5058   91   5B      		STA (SOBTOP),Y
  505A   C8           		INY
  505B   91   5B      		STA (SOBTOP),Y	;RPLACD (SOBTOP,LNIL)
  505D   88           		DEY
  505E   A5   5F      	RINLP2:	LDA FRLIST
  5060   91   A8      		STA (TEMPN),Y
  5062   C8           		INY
  5063   A5   60      		LDA FRLIST+1
  5065   91   A8      		STA (TEMPN),Y	;(RPLACD)
  5067   88           		DEY
  5068   18           		CLC
  5069   A5   A8      		LDA TEMPN
  506B   85   5F      		STA FRLIST
  506D   69   04      		ADC #$04
  506F   85   A8      		STA TEMPN
  5071   A5   A9      		LDA TEMPN+1
  5073   85   60      		STA FRLIST+1
  5075   69   00      		ADC #$00
  5077   85   A9      		STA TEMPN+1
  5079   C9   F6      		CMP #SINODS^	;(Ptr. to byte after last node)
  507B   D0   E1      		BNE RINLP2
  507D   A5   A8      		LDA TEMPN
  507F   C9   60      		CMP #SINODS&$FF
  5081   D0   DB      		BNE RINLP2
  5083   A2   00      		LDX #$00
  5085   86   AB      		STX TEMPN1+1
  5087   E8           		INX
  5088   86   AA      		STX TEMPN1	;Set to Novalue for MKSFUN
  508A   A2   94      		LDX #UNSUM
  508C   A9   04      		LDA #IUNSUM
  508E   20   9F   51 		JSR MKSFUN
  5091   A2   96      		LDX #UNDIF
  5093   A9   05      		LDA #IUNDIF
  5095   20   9F   51 		JSR MKSFUN
  5098   A9   00      		LDA #$00	;(LNIL)
  509A   20   1E   51 		JSR CLMK5
  509D   85   9C      		STA CELPTR
  509F   85   9D      		STA CELPTR+1	;CELL_PTR := LNIL
  50A1   85   93      		STA OBLIST+1	;OBLIST := LNIL
  50A3   85   18      		STA SIZE1
  50A5   85   19      		STA SIZE1+1	;SIZE1 := 0
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-63
NLOGO	INITIALIZATIONS

  50A7   85   1A      		STA SIZE2
  50A9   85   1B      		STA SIZE2+1	;SIZE2 := 0
  50AB   A9   55      		LDA #'U
  50AD   85   AC      		STA TEMPN2
  50AF   A9   45      		LDA #'E
  50B1   85   AD      		STA TEMPN2+1
  50B3   A2   00      		LDX #$00
  50B5   A0   AC      		LDY #TEMPN2
  50B7   A9   AE      		LDA #TEMPN3
  50B9   85   B2      		STA ANSN
  50BB   A9   02      		LDA #STRING
  50BD   20   0F   53 		JSR CONS	;"UE" of TRUE
  50C0   A9   54      		LDA #'T
  50C2   85   AC      		STA TEMPN2
  50C4   A9   52      		LDA #'R
  50C6   85   AD      		STA TEMPN2+1
  50C8   A0   AC      		LDY #TEMPN2
  50CA   A2   AE      		LDX #TEMPN3
  50CC   86   B2      		STX ANSN
  50CE   A9   02      		LDA #STRING
  50D0   20   0F   53 		JSR CONS	;"TR" of TRUE
  50D3   A2   AE      		LDX #TEMPN3
  50D5   A9   4E      		LDA #LTRUE
  50D7   85   C0      		STA ANSN2
  50D9   20   88   60 		JSR INTRNX
  50DC   A2   00      		LDX #$00
  50DE   86   AD      		STX TEMPN2+1
  50E0   A9   45      		LDA #'E
  50E2   85   AC      		STA TEMPN2
  50E4   A0   AC      		LDY #TEMPN2
  50E6   A9   AE      		LDA #TEMPN3
  50E8   85   B2      		STA ANSN
  50EA   A9   02      		LDA #STRING
  50EC   20   0F   53 		JSR CONS	;"E" of FALSE
  50EF   A9   4C      		LDA #'L
  50F1   85   AC      		STA TEMPN2
  50F3   A9   53      		LDA #'S
  50F5   85   AD      		STA TEMPN2+1
  50F7   A0   AC      		LDY #TEMPN2
  50F9   A2   AE      		LDX #TEMPN3
  50FB   86   B2      		STX ANSN
  50FD   A9   02      		LDA #STRING
  50FF   20   0F   53 		JSR CONS	;"LS" of FALSE
  5102   A9   46      		LDA #'F
  5104   85   AC      		STA TEMPN2
  5106   A9   41      		LDA #'A
  5108   85   AD      		STA TEMPN2+1
  510A   A0   AC      		LDY #TEMPN2
  510C   A2   AE      		LDX #TEMPN3
  510E   86   B2      		STX ANSN
  5110   A9   02      		LDA #STRING
  5112   20   0F   53 		JSR CONS	;"FA" of FALSE
  5115   A2   AE      		LDX #TEMPN3
  5117   A9   50      		LDA #LFALSE
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-64
NLOGO	INITIALIZATIONS

  5119   85   C0      		STA ANSN2
  511B   4C   88   60 		JMP INTRNX
                      
  511E   85   90      	CLMK5:	STA MARK5
  5120   85   91      		STA MARK5+1	;MARK5 := LNIL
  5122   85   8E      	CLMK4:	STA MARK4
  5124   85   8F      		STA MARK4+1	;MARK4 := LNIL
  5126   85   8C      	CLMK3:	STA MARK3
  5128   85   8D      		STA MARK3+1	;MARK3 := LNIL
  512A   85   8A      	CLMK2:	STA MARK2
  512C   85   8B      		STA MARK2+1	;MARK2 := LNIL
  512E   85   88      	CLMK1:	STA MARK1
  5130   85   89      		STA MARK1+1	;MARK1 := LNIL
  5132   60           		RTS
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-65
NLOGO	INITIALIZATIONS

  5133   A0   01      	SOBST1:	LDY #$01
  5135   98           		TYA
  5136   88           		DEY
  5137   91   5B      		STA (SOBTOP),Y
  5139   98           		TYA
  513A   C8           		INY
  513B   91   5B      		STA (SOBTOP),Y	;(RPLACA)
  513D   C8           		INY
  513E   A5   5D      		LDA SARTOP
  5140   91   5B      		STA (SOBTOP),Y
  5142   C8           		INY
  5143   A5   5E      		LDA SARTOP+1
  5145   91   5B      		STA (SOBTOP),Y	;(RPLACD)
  5147   A9   07      		LDA #SATOM
  5149   A2   5B      		LDX #SOBTOP
  514B   20   EB   53 		JSR PUTTYP
  514E   AD   83   C0 		LDA GETRM2	;Ghost-memory bank 2, Prim table
  5151   E6   55      		INC BANK4K
  5153   A0   00      		LDY #$00
  5155   B1   A8      		LDA (TEMPN),Y
  5157   91   5D      		STA (SARTOP),Y
  5159   C8           		INY
  515A   B1   A8      		LDA (TEMPN),Y
  515C   91   5D      		STA (SARTOP),Y
  515E   C8           		INY
  515F   B1   A8      		LDA (TEMPN),Y
  5161   91   5D      		STA (SARTOP),Y
  5163   C8           	SBST1A:	INY
  5164   B1   A8      		LDA (TEMPN),Y
  5166   91   5D      		STA (SARTOP),Y
  5168   C9   20      		CMP #$20	;See if the last byte was transferred
  516A   D0   F7      		BNE SBST1A	;Yes.
  516C   AD   8B   C0 		LDA GETRM1	;Ghost-memory bank 2 disable
  516F   AD   8B   C0 		LDA GETRM1
  5172   C6   55      		DEC BANK4K
  5174   A9   00      		LDA #$00
  5176   91   5D      		STA (SARTOP),Y
  5178   C8           		INY
  5179   18           		CLC
  517A   98           		TYA
  517B   65   5D      		ADC SARTOP
  517D   85   5D      		STA SARTOP
  517F   90   02      		BCC ADHAK5
  5181   E6   5E      		INC SARTOP+1
  5183   18           	ADHAK5:	CLC
  5184   98           		TYA
  5185   65   A8      		ADC TEMPN
  5187   85   A8      		STA TEMPN
  5189   90   02      		BCC ADHAK6
  518B   E6   A9      		INC TEMPN+1
  518D   18           	ADHAK6:	CLC
  518E   A5   5B      		LDA SOBTOP
  5190   69   04      		ADC #$04
  5192   85   5B      		STA SOBTOP
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-66
NLOGO	INITIALIZATIONS

  5194   90   02      		BCC ADHAK7
  5196   E6   5C      		INC SOBTOP+1
  5198   E6   C3      	ADHAK7:	INC NNODES
  519A   D0   02      		BNE ADHK7A
  519C   E6   C4      		INC NNODES+1
  519E   60           	ADHK7A:	RTS
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-67
NLOGO	INITIALIZATIONS

  519F   A0   02      	MKSFUN:	LDY #$02
  51A1   91   5D      		STA (SARTOP),Y
  51A3   88           		DEY
  51A4   A9   08      		LDA #$08	;(PREC = 8)
  51A6   91   5D      		STA (SARTOP),Y
  51A8   98           		TYA		;(NARGS = 1)
  51A9   88           		DEY
  51AA   91   5D      		STA (SARTOP),Y
  51AC   98           		TYA
  51AD   A0   03      		LDY #$03
  51AF   91   5D      		STA (SARTOP),Y
  51B1   86   B2      		STX ANSN
  51B3   A2   5D      		LDX #SARTOP
  51B5   A0   AA      		LDY #TEMPN1	;TEMPN1 Set to Novalue by the calling procedure
  51B7   A9   07      		LDA #SATOM
  51B9   20   0F   53 		JSR CONS
  51BC   18           		CLC
  51BD   A5   5D      		LDA SARTOP
  51BF   69   04      		ADC #$04
  51C1   85   5D      		STA SARTOP
  51C3   90   02      		BCC ADHK11
  51C5   E6   5E      		INC SARTOP+1
  51C7   60           	ADHK11:	RTS
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-68
NLOGO	MISCELLANEOUS AND EVALUATOR UTILITY ROUTINES

                      	.SBTTL	Miscellaneous and Evaluator Utility Routines
                      
                      	;SYSBUG prints an error message and exits.
                      
  51C8   85   02      	SYSBUG:	STA $02
  51CA   68           		PLA
  51CB   85   01      		STA $01		;Store calling point in locations $00,$01
  51CD   68           		PLA
  51CE   85   00      		STA $00
  51D0   8A           		TXA
  51D1   48           		PHA
  51D2   98           		TYA
  51D3   48           		PHA
  51D4   20   6C   72 		JSR RSTIO
  51D7   A2   36      		LDX #LBUG1&$FF
  51D9   A0   DA      		LDY #LBUG1^
  51DB   20   90   54 		JSR PRTSTR	;Print "LOGO BUG!"
  51DE   68           		PLA
  51DF   A8           		TAY
  51E0   68           		PLA
  51E1   AA           		TAX
  51E2   A5   02      		LDA $02
  51E4   00           	SBPT:	BRK
  51E5   EA           		NOP
  51E6   EA           		NOP
  51E7   4C   1E   41 		JMP POPJ	;Monitor "G" command re-enters here
                      
  51EA   20   77   57 	POPFRM:	JSR RSTBND
  51ED   A2   80      		LDX #TLLEVS
  51EF   20   67   52 		JSR POP
  51F2   38           		SEC
  51F3   A5   14      		LDA SP
  51F5   E9   02      		SBC #$02	;Skip SF_NUMBER_BINDINGS
  51F7   85   14      		STA SP
  51F9   B0   02      		BCS PPFM2
  51FB   C6   15      		DEC SP+1
  51FD   A2   61      	PPFM2:	LDX #TOKPTR
  51FF   20   67   52 		JSR POP
  5202   A2   74      		LDX #LINNUM
  5204   20   67   52 		JSR POP
  5207   A2   7E      		LDX #NEST
  5209   20   67   52 		JSR POP
  520C   A2   63      		LDX #CURTOK
  520E   20   67   52 		JSR POP
  5211   20   99   52 		JSR POPB
  5214   85   0F      		STA UFRMAT
  5216   A2   6E      		LDX #XFRAME
  5218   20   67   52 		JSR POP
  521B   A2   6C      		LDX #FRAME
  521D   4C   67   52 		JMP POP
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-69
NLOGO	MISCELLANEOUS AND EVALUATOR UTILITY ROUTINES

                      	;PUSHP is given the location of a page-zero variable in X,
                      	;and pushes the contents of the variable onto the LOGO stack.
                      
  5220   A0   00      	PUSHP:	LDY #$00
  5222   B5   00      		LDA $00,X
  5224   91   14      		STA (SP),Y
  5226   C8           		INY
  5227   B5   01      		LDA $01,X
  5229   91   14      		STA (SP),Y
  522B   18           		CLC
  522C   A5   14      		LDA SP
  522E   69   02      		ADC #$02
  5230   85   14      		STA SP
  5232   90   02      		BCC PSHP1
  5234   E6   15      		INC SP+1
  5236   60           	PSHP1:	RTS
                      
                      	;PUSH pushes onto the stack the sixteen-bit value in the X and Y registers.
                      
  5237   E6   4A      	PUSH:	INC RNDL
  5239   98           		TYA
  523A   A0   01      		LDY #$01
  523C   91   14      		STA (SP),Y
  523E   88           		DEY
  523F   8A           		TXA
  5240   91   14      		STA (SP),Y
  5242   18           		CLC
  5243   A5   14      		LDA SP
  5245   69   02      		ADC #$02
  5247   85   14      		STA SP
  5249   90   02      		BCC PSHP2
  524B   E6   15      		INC SP+1
  524D   60           	PSHP2:	RTS
                      
                      	;VPUSHP is given the address of a page-zero variable in X,
                      	;and pushes the contents of that variable onto the Value stack.
                      
  524E   E6   4A      	VPUSHP:	INC RNDL
  5250   A0   00      		LDY #$00
  5252   B5   00      		LDA $00,X
  5254   91   16      		STA (VSP),Y
  5256   C8           		INY
  5257   B5   01      		LDA $01,X
  5259   91   16      		STA (VSP),Y
  525B   38           		SEC
  525C   A5   16      		LDA VSP
  525E   E9   02      		SBC #$02
  5260   85   16      		STA VSP
  5262   B0   02      		BCS VPSH1
  5264   C6   17      		DEC VSP+1
  5266   60           	VPSH1:	RTS
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-70
NLOGO	MISCELLANEOUS AND EVALUATOR UTILITY ROUTINES

                      	;POP pops a value off of the LOGO stack and into the page-zero variable
                      	;whose address is in X.
                      
  5267   E6   4A      	POP:	INC RNDL
  5269   38           		SEC
  526A   A5   14      		LDA SP
  526C   E9   02      		SBC #$02
  526E   85   14      		STA SP
  5270   B0   02      		BCS POP1
  5272   C6   15      		DEC SP+1
  5274   A0   00      	POP1:	LDY #$00
  5276   B1   14      		LDA (SP),Y
  5278   95   00      		STA $00,X
  527A   C8           		INY
  527B   B1   14      		LDA (SP),Y
  527D   95   01      		STA $01,X
  527F   60           		RTS
                      
                      	;VPOP pops a value off of the Value stack and into the page-zero variable
                      	;whose address is in X. Doesn't destroy X.
                      
  5280   E6   4A      	VPOP:	INC RNDL
  5282   18           		CLC
  5283   A5   16      		LDA VSP
  5285   69   02      		ADC #$02
  5287   85   16      		STA VSP
  5289   90   02      		BCC VPOP1
  528B   E6   17      		INC VSP+1
  528D   A0   00      	VPOP1:	LDY #$00
  528F   B1   16      		LDA (VSP),Y
  5291   95   00      		STA $00,X
  5293   C8           		INY
  5294   B1   16      		LDA (VSP),Y
  5296   95   01      		STA $01,X
  5298   60           		RTS
                      
                      	;POPB pops a one-byte value off of the LOGO stack and returns with it in A.
                      
  5299   E6   4A      	POPB:	INC RNDL
  529B   38           		SEC
  529C   A5   14      		LDA SP
  529E   E9   02      		SBC #$02
  52A0   85   14      		STA SP
  52A2   B0   02      		BCS POPB1
  52A4   C6   15      		DEC SP+1
  52A6   A0   00      	POPB1:	LDY #$00
  52A8   B1   14      		LDA (SP),Y
  52AA   60           		RTS
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-71
NLOGO	MISCELLANEOUS AND EVALUATOR UTILITY ROUTINES

                      	;STKTS1 tests to see if the LOGO stack test limit has been exceeded,
                      	;and gives an error if so. It doesn't poll for interrupts.
                      
  52AB   A5   17      	STKTS1:	LDA VSP+1
  52AD   C5   15      		CMP SP+1
  52AF   90   0C      		BCC STKTZ
  52B1   D0   09      		BNE STKTR
  52B3   38           		SEC
  52B4   A5   16      		LDA VSP
  52B6   E5   14      		SBC SP
  52B8   C9   50      		CMP #STKLIM
  52BA   90   01      		BCC STKTZ
  52BC   60           	STKTR:	RTS
  52BD   A9   00      	STKTZ:	LDA #PDLBAS&$FF
  52BF   85   14      		STA SP
  52C1   A9   0E      		LDA #PDLBAS^
  52C3   85   15      		STA SP+1	;Reset the stack for reader/tokenizer
  52C5   A2   00      		LDX #XNSTOR	;(No Stack) "No storage left" zapcode
  52C7   A9   13      		LDA #XZAP
  52C9   4C   42   61 		JMP ERROR
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-72
NLOGO	MISCELLANEOUS AND EVALUATOR UTILITY ROUTINES

  52CC   B9   00   00 	GETVAL:	LDA $00,Y	;Get value into X's pointer from Y's pointer
  52CF   29   FC      		AND #$FC	;Strip off last two bits
  52D1   85   A6      		STA TEMPNH
  52D3   B9   01   00 		LDA $01,Y
  52D6   85   A7      		STA TEMPNH+1
  52D8   A0   00      		LDY #$00
  52DA   B1   A6      		LDA (TEMPNH),Y
  52DC   95   00      		STA $00,X
  52DE   C8           		INY
  52DF   B1   A6      		LDA (TEMPNH),Y
  52E1   95   01      		STA $01,X	;(CAR)
  52E3   60           		RTS
                      
  52E4   B9   00   00 	PUTVAL:	LDA $00,Y
  52E7   29   FC      		AND #$FC
  52E9   85   A6      		STA TEMPNH
  52EB   B9   01   00 		LDA $01,Y
  52EE   85   A7      		STA TEMPNH+1
  52F0   A0   00      		LDY #$00
  52F2   B5   00      		LDA $00,X
  52F4   91   A6      		STA (TEMPNH),Y
  52F6   C8           		INY
  52F7   B5   01      		LDA $01,X
  52F9   91   A6      		STA (TEMPNH),Y	;(RPLACA)
  52FB   60           		RTS
                      
                      	;GETPRC returns the precedence (in A) of the function in Y,
                      	;given the funtype in X.
                      
  52FC   A9   05      	GETPRC:	LDA #$05	;Assume Ufun, precedence 5
  52FE   C0   06      		CPY #UFUN
  5300   F0   0C      		BEQ GPRCU
  5302   B5   00      	GPRCS:	LDA $00,X
  5304   85   A6      		STA TEMPNH
  5306   B5   01      		LDA $01,X
  5308   85   A7      		STA TEMPNH+1
  530A   A0   01      		LDY #$01
  530C   B1   A6      		LDA (TEMPNH),Y
  530E   60           	GPRCU:	RTS
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-73
NLOGO	MISCELLANEOUS AND EVALUATOR UTILITY ROUTINES

                      	;CONS creates a new node from the freelist. X points to the Cdr,
                      	;Y to the Car, ANSN to the node's pointer, and A holds the typecode.
                      
  530F   48           	CONS:	PHA
  5310   C9   00      		CMP #LIST
  5312   F0   1B      		BEQ FCONS
  5314   C9   02      		CMP #STRING
  5316   F0   38      		BEQ SCONS
  5318   C9   03      		CMP #FIX
  531A   F0   2B      		BEQ NCONS
  531C   C9   04      		CMP #FLO
  531E   F0   27      		BEQ NCONS
  5320   C9   01      		CMP #ATOM
  5322   F0   2C      		BEQ SCONS
  5324   C9   0C      		CMP #FLIST
  5326   F0   28      		BEQ SCONS
  5328   C9   07      		CMP #SATOM
  532A   F0   32      		BEQ S1CONS
  532C   20   C8   51 		JSR SYSBUG
                      
                      	;"F" CONS - Protect both CAR and CDR. Used for Lists.
  532F   20   76   53 	FCONS:	JSR XCONS
  5332   A6   A6      		LDX TEMPNH
  5334   20   4E   52 		JSR VPUSHP	;VPUSHP Xcar
  5337   A6   A7      		LDX TEMPNH+1
  5339   20   4E   52 		JSR VPUSHP	;VPUSHP Xcdr
  533C   20   58   62 		JSR GARCOL
  533F   18           		CLC		;Reset the VPDL
  5340   A5   16      		LDA VSP
  5342   69   04      		ADC #$04
  5344   4C   6E   53 		JMP SCONS2
                      
                      	;"N" CONS - Doesn't protect either CAR or CDR. Used for numbers.
  5347   20   76   53 	NCONS:	JSR XCONS
  534A   20   58   62 		JSR GARCOL
  534D   4C   96   53 		JMP CONSG1
                      
                      	;"S" CONS - Protects only CDR. Used for strings.
  5350   20   76   53 	SCONS:	JSR XCONS
  5353   A6   A7      		LDX TEMPNH+1
  5355   20   4E   52 		JSR VPUSHP	;VPUSHP Xcdr
  5358   20   58   62 		JSR GARCOL
  535B   4C   69   53 		JMP SCONS1	;Reset the VPDL
                      
                      	;"S1" CONS - Protects only CAR. Used for Satoms.
  535E   20   76   53 	S1CONS:	JSR XCONS
  5361   A6   A6      		LDX TEMPNH
  5363   20   4E   52 		JSR VPUSHP
  5366   20   58   62 		JSR GARCOL
  5369   18           	SCONS1:	CLC
  536A   A5   16      		LDA VSP
  536C   69   02      		ADC #$02
  536E   85   16      	SCONS2:	STA VSP
  5370   90   24      		BCC CONSG1
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-74
NLOGO	MISCELLANEOUS AND EVALUATOR UTILITY ROUTINES

  5372   E6   17      		INC VSP+1
  5374   D0   20      		BNE CONSG1	;(Always)
                      
  5376   84   A6      	XCONS:	STY TEMPNH	;TEMPNH.L is XCAR
  5378   86   A7      		STX TEMPNH+1	;TEMPNH.H is XCDR
  537A   A5   60      		LDA FRLIST+1
  537C   F0   12      		BEQ XCONSG
  537E   A5   56      		LDA PRDFLG
  5380   D0   0F      		BNE XCONS2	;Don't check limit for READ_LINE callers
  5382   A5   C4      		LDA NNODES+1
  5384   C9   09      		CMP #NODLIM^
  5386   90   09      		BCC XCONS2
  5388   D0   06      		BNE XCONSG
  538A   A5   C3      		LDA NNODES
  538C   C9   66      		CMP #NODLIM&$FF
  538E   90   01      		BCC XCONS2
  5390   60           	XCONSG:	RTS
  5391   68           	XCONS2:	PLA
  5392   68           		PLA
  5393   4C   B5   53 		JMP CONS2
                      
  5396   A5   56      	CONSG1:	LDA PRDFLG
  5398   F0   06      		BEQ CONST2
  539A   A5   60      		LDA FRLIST+1
  539C   D0   17      		BNE CONS2
  539E   F0   0E      		BEQ CONSR
  53A0   A5   C4      	CONST2:	LDA NNODES+1
  53A2   C9   09      		CMP #NODLIM^
  53A4   90   0F      		BCC CONS2
  53A6   D0   06      		BNE CONSR
  53A8   A5   C3      		LDA NNODES
  53AA   C9   66      		CMP #NODLIM&$FF
  53AC   90   07      		BCC CONS2
  53AE   A2   01      	CONSR:	LDX #XNSTRN	;Error "No storage left" (No nodes)
  53B0   A9   13      		LDA #XZAP
  53B2   4C   42   61 		JMP ERROR
  53B5   E6   C3      	CONS2:	INC NNODES
  53B7   D0   02      		BNE CONS2A
  53B9   E6   C4      		INC NNODES+1	;Increment node counter
  53BB   A0   00      	CONS2A:	LDY #$00
  53BD   A6   A6      		LDX TEMPNH
  53BF   B5   00      		LDA $00,X
  53C1   91   5F      		STA (FRLIST),Y
  53C3   C8           		INY
  53C4   B5   01      		LDA $01,X
  53C6   91   5F      		STA (FRLIST),Y	;(RPLACA)
  53C8   C8           		INY
  53C9   A6   A7      		LDX TEMPNH+1
  53CB   B1   5F      		LDA (FRLIST),Y
  53CD   48           		PHA
  53CE   B5   00      		LDA $00,X
  53D0   91   5F      		STA (FRLIST),Y
  53D2   C8           		INY
  53D3   B1   5F      		LDA (FRLIST),Y
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-75
NLOGO	MISCELLANEOUS AND EVALUATOR UTILITY ROUTINES

  53D5   48           		PHA
  53D6   B5   01      		LDA $01,X
  53D8   91   5F      		STA (FRLIST),Y	;(RPLACD)
  53DA   A6   B2      		LDX ANSN
  53DC   A5   5F      		LDA FRLIST
  53DE   95   00      		STA $00,X
  53E0   A5   60      		LDA FRLIST+1
  53E2   95   01      		STA $01,X
  53E4   68           		PLA
  53E5   85   60      		STA FRLIST+1
  53E7   68           		PLA
  53E8   85   5F      		STA FRLIST
  53EA   68           		PLA		;GET TYPE
                      
  53EB   C9   0B      	PUTTYP:	CMP #LATOM+1
  53ED   B0   0C      		BCS PUTTP2
  53EF   C9   08      		CMP #QATOM
  53F1   90   08      		BCC PUTTP2
  53F3   E9   07      		SBC #$07
  53F5   18           		CLC
  53F6   75   00      		ADC $00,X
  53F8   95   00      		STA $00,X
  53FA   60           	PUTTPE:	RTS
  53FB   B4   01      	PUTTP2:	LDY $01,X
  53FD   F0   FB      		BEQ PUTTPE
  53FF   84   A7      		STY TEMPNH+1
  5401   B4   00      		LDY $00,X
  5403   84   A6      		STY TEMPNH
  5405   AA           		TAX
  5406   20   65   5D 		JSR TYPACS
  5409   8A           		TXA
  540A   91   A6      		STA (TEMPNH),Y
  540C   60           		RTS
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-76
NLOGO	MISCELLANEOUS AND EVALUATOR UTILITY ROUTINES

                      	;STKTST tests to see if the LOGO stack test limit has been exceeded,
                      	;and gives an error if so. Polls for interrupts.
  540D   20   AB   52 	STKTST:	JSR STKTS1
                      
                      	;STPPEK is the polling routine for user interrupts.
  5410   E6   4A      	STPPEK:	INC RNDL
  5412   20   E5   75 		JSR TSTCHR
  5415   90   19      		BCC PRTS
  5417   2C   10   C0 		BIT KPCLR
  541A   C9   07      		CMP #STPKEY
  541C   F0   18      		BEQ STPPK1
  541E   C9   1A      		CMP #PAUSKY
  5420   F0   0F      		BEQ STPPKZ
  5422   C9   13      		CMP #LSTKEY
  5424   F0   0A      		BEQ PRTS
  5426   C9   06      		CMP #FULCHR	;Full-screen graphics character
  5428   F0   1A      		BEQ STPFUL
  542A   C9   0C      		CMP #MIXCHR	;Mixed-screen graphics character
  542C   F0   1E      		BEQ STPMIX
  542E   85   69      		STA CHBUF	;(?Store character in buffer)
  5430   60           	PRTS:	RTS
  5431   A9   10      	STPPKZ:	LDA #XBRK
  5433   4C   42   61 		JMP ERROR
  5436   A2   CD      	STPPK1:	LDX #ERROR1&$FF
  5438   A0   47      		LDY #ERROR1^
  543A   20   37   52 		JSR PUSH
  543D   A2   02      		LDX #XSTOP	;Stop_key Zapcode
  543F   A9   13      		LDA #XZAP
  5441   4C   42   61 		JMP ERROR
  5444   A5   09      	STPFUL:	LDA GRPHCS
  5446   F0   E8      		BEQ PRTS
  5448   AD   52   C0 		LDA $C052
  544B   60           		RTS
  544C   A5   09      	STPMIX:	LDA GRPHCS
  544E   F0   E0      		BEQ PRTS
  5450   AD   53   C0 		LDA $C053
  5453   60           		RTS
                      
  5454   B5   00      	PTSPNM:	LDA $00,X
  5456   29   FC      		AND #$FC
  5458   85   A6      		STA TEMPNH
  545A   B5   01      		LDA $01,X
  545C   85   A7      		STA TEMPNH+1
  545E   A0   02      		LDY #$02
  5460   B1   A6      		LDA (TEMPNH),Y
  5462   AA           		TAX
  5463   C8           		INY
  5464   B1   A6      		LDA (TEMPNH),Y
  5466   85   A7      		STA TEMPNH+1
  5468   86   A6      		STX TEMPNH	;(CDR)
  546A   88           		DEY
  546B   B1   A6      		LDA (TEMPNH),Y
  546D   09   01      		ORA #$01
  546F   91   A6      		STA (TEMPNH),Y
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-77
NLOGO	MISCELLANEOUS AND EVALUATOR UTILITY ROUTINES

  5471   60           		RTS
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-78
NLOGO	MISCELLANEOUS AND EVALUATOR UTILITY ROUTINES

  5472   C9   05      	GETNGS:	CMP #SFUN
  5474   F0   0D      		BEQ GTNG2
  5476   B5   00      	GTNG1:	LDA $00,X
  5478   85   A6      		STA TEMPNH
  547A   B5   01      		LDA $01,X
  547C   85   A7      		STA TEMPNH+1
  547E   A0   04      		LDY #$04
  5480   B1   A6      		LDA (TEMPNH),Y	;(GETBAR)
  5482   60           		RTS
  5483   B5   00      	GTNG2:	LDA $00,X
  5485   85   A6      		STA TEMPNH
  5487   B5   01      		LDA $01,X
  5489   85   A7      		STA TEMPNH+1
  548B   A0   00      		LDY #$00
  548D   B1   A6      		LDA (TEMPNH),Y
  548F   60           		RTS
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-79
NLOGO	MISCELLANEOUS AND EVALUATOR UTILITY ROUTINES

                      	;PRTSTR prints the Ascii string whose address is in the X and Y registers.
                      	;The string is terminated with a 0.
                      
  5490   86   A6      	PRTSTR: STX TEMPNH
  5492   84   A7      		STY TEMPNH+1
  5494   AD   83   C0 		LDA GETRM2	;Ghost-memory bank 2, Text strings
  5497   E6   55      		INC BANK4K
  5499   A0   00      		LDY #$00
  549B   B1   A6      	PTSTR1:	LDA (TEMPNH),Y
  549D   F0   06      		BEQ PTRRTS
  549F   20   90   72 		JSR TPCHR
  54A2   C8           		INY
  54A3   D0   F6      		BNE PTSTR1	;(Always)
  54A5   AD   8B   C0 	PTRRTS:	LDA GETRM1	;Ghost-memory bank 2 disable
  54A8   AD   8B   C0 		LDA GETRM1
  54AB   C6   55      		DEC BANK4K
  54AD   60           		RTS
                      
  54AE   C9   05      	INFIXP:	CMP #SFUN
  54B0   D0   04      		BNE IFP1
  54B2   B5   01      		LDA $01,X
  54B4   D0   02      		BNE IFP2
  54B6   18           	IFP1:	CLC		;Not infix
  54B7   60           		RTS
  54B8   B5   00      	IFP2:	LDA $00,X
  54BA   85   A6      		STA TEMPNH
  54BC   B5   01      		LDA $01,X
  54BE   85   A7      		STA TEMPNH+1
  54C0   A0   02      		LDY #$02
  54C2   B1   A6      		LDA (TEMPNH),Y
  54C4   C9   4C      		CMP #INSUM
  54C6   F0   18      		BEQ IFP3
  54C8   C9   4D      		CMP #INDIF
  54CA   F0   14      		BEQ IFP3
  54CC   C9   4E      		CMP #INPROD
  54CE   F0   10      		BEQ IFP3
  54D0   C9   4F      		CMP #INQUOT
  54D2   F0   0C      		BEQ IFP3
  54D4   C9   50      		CMP #INGRTR
  54D6   F0   08      		BEQ IFP3
  54D8   C9   51      		CMP #INLESS
  54DA   F0   04      		BEQ IFP3
  54DC   C9   52      		CMP #INEQUL
  54DE   D0   D6      		BNE IFP1
  54E0   38           	IFP3:	SEC		;Infix.
  54E1   60           		RTS		;Return with proper index in A
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-80
NLOGO	MISCELLANEOUS AND EVALUATOR UTILITY ROUTINES

  54E2   85   B2      	FNDLIN:	STA ANSN	;LINE returned
  54E4   84   B3      		STY ANSN1	;NUMBER looked for
  54E6   B5   00      		LDA $00,X
  54E8   85   A8      		STA TEMPN	;TEMPN is LAST_LINE
  54EA   B5   01      		LDA $01,X
  54EC   85   A9      		STA TEMPN+1
  54EE   A6   B2      		LDX ANSN
  54F0   A0   02      		LDY #$02
  54F2   B1   A8      		LDA (TEMPN),Y
  54F4   95   00      		STA $00,X
  54F6   C8           		INY
  54F7   B1   A8      		LDA (TEMPN),Y
  54F9   95   01      		STA $01,X	;(CDR)
  54FB   F0   49      		BEQ FDLNWE
  54FD   A6   B2      	FDLNW:	LDX ANSN
  54FF   B5   00      		LDA $00,X
  5501   85   A6      		STA TEMPNH
  5503   B5   01      		LDA $01,X
  5505   85   A7      		STA TEMPNH+1
  5507   A0   00      		LDY #$00
  5509   B1   A6      		LDA (TEMPNH),Y
  550B   85   AA      		STA TEMPN1	;TEMPN1 is incremental ptr.
  550D   C8           		INY
  550E   B1   A6      		LDA (TEMPNH),Y
  5510   85   AB      		STA TEMPN1+1	;(CAR)
  5512   88           		DEY
  5513   B1   AA      		LDA (TEMPN1),Y
  5515   AA           		TAX
  5516   C8           		INY
  5517   B1   AA      		LDA (TEMPN1),Y
  5519   85   AB      		STA TEMPN1+1
  551B   86   AA      		STX TEMPN1	;(GETBAR)
  551D   A6   B3      		LDX ANSN1
  551F   A5   AB      		LDA TEMPN1+1
  5521   D5   01      		CMP $01,X
  5523   90   0A      		BCC FDLNW3
  5525   D0   1F      		BNE FDLNWE
  5527   A5   AA      		LDA TEMPN1
  5529   D5   00      		CMP $00,X
  552B   F0   25      		BEQ FDLNWF
  552D   B0   17      		BCS FDLNWE
  552F   A6   B2      	FDLNW3:	LDX ANSN
  5531   B5   00      		LDA $00,X
  5533   85   A8      		STA TEMPN
  5535   B5   01      		LDA $01,X
  5537   85   A9      		STA TEMPN+1
  5539   A0   02      		LDY #$02
  553B   B1   A8      		LDA (TEMPN),Y
  553D   95   00      		STA $00,X
  553F   C8           		INY
  5540   B1   A8      		LDA (TEMPN),Y
  5542   95   01      		STA $01,X	;(CDR)
  5544   D0   B7      		BNE FDLNW
  5546   A6   B2      	FDLNWE:	LDX ANSN
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-81
NLOGO	MISCELLANEOUS AND EVALUATOR UTILITY ROUTINES

  5548   A5   A8      		LDA TEMPN
  554A   95   00      		STA $00,X
  554C   A5   A9      		LDA TEMPN+1
  554E   95   01      		STA $01,X
  5550   18           		CLC		;Clear Carry means Not Found
  5551   60           		RTS
  5552   38           	FDLNWF:	SEC		;Set Carry means Found
  5553   60           		RTS
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-82
NLOGO	MISCELLANEOUS AND EVALUATOR UTILITY ROUTINES

  5554   B9   00   00 	LINPEK:	LDA $00,Y
  5557   85   A6      		STA TEMPNH	;BODY
  5559   B9   01   00 		LDA $01,Y
  555C   85   A7      		STA TEMPNH+1
  555E   A0   02      		LDY #$02
  5560   A5   0F      		LDA UFRMAT
  5562   F0   02      		BEQ LPK1
  5564   C8           		INY
  5565   C8           		INY
  5566   B1   A6      	LPK1:	LDA (TEMPNH),Y
  5568   95   00      		STA $00,X
  556A   C8           		INY
  556B   B1   A6      		LDA (TEMPNH),Y
  556D   95   01      		STA $01,X	;(CDR or GETBAR)
  556F   60           		RTS
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-83
NLOGO	MISCELLANEOUS AND EVALUATOR UTILITY ROUTINES

  5570   20   88   55 	TTKADV:	JSR TFKADV
  5573   A5   A6      		LDA TEMPNH
  5575   CD   02   03 		CMP COMMNT
  5578   D0   0D      		BNE TTKE
  557A   A5   A7      		LDA TEMPNH+1
  557C   CD   03   03 		CMP COMMNT+1
  557F   D0   06      		BNE TTKE
  5581   A9   00      		LDA #$00
  5583   95   00      		STA $00,X
  5585   95   01      		STA $01,X
  5587   60           	TTKE:	RTS
                      
  5588   A5   0F      	TFKADV:	LDA UFRMAT
  558A   C9   0B      		CMP #FPACK
  558C   F0   16      		BEQ TFK2
  558E   B5   00      	TFK1:	LDA $00,X
  5590   85   A6      		STA TEMPNH
  5592   B5   01      		LDA $01,X
  5594   85   A7      		STA TEMPNH+1
  5596   A0   02      		LDY #$02
  5598   B1   A6      		LDA (TEMPNH),Y
  559A   95   00      		STA $00,X
  559C   C8           		INY
  559D   B1   A6      		LDA (TEMPNH),Y
  559F   95   01      		STA $01,X	;(CDR)
  55A1   4C   C0   55 		JMP TFK3
  55A4   18           	TFK2:	CLC
  55A5   B5   00      		LDA $00,X
  55A7   69   02      		ADC #$02
  55A9   95   00      		STA $00,X
  55AB   90   02      		BCC TFK2A
  55AD   F6   01      		INC $01,X
  55AF   C5   7A      	TFK2A:	CMP ULNEND
  55B1   D0   0D      		BNE TFK3
  55B3   B5   01      		LDA $01,X
  55B5   C5   7B      		CMP ULNEND+1
  55B7   D0   07      		BNE TFK3
  55B9   A9   00      		LDA #$00
  55BB   95   00      		STA $00,X
  55BD   95   01      		STA $01,X
  55BF   60           		RTS
  55C0   B5   00      	TFK3:	LDA $00,X
  55C2   85   A6      		STA TEMPNH
  55C4   B5   01      		LDA $01,X
  55C6   85   A7      		STA TEMPNH+1
  55C8   A0   00      		LDY #$00
  55CA   B1   A6      		LDA (TEMPNH),Y
  55CC   48           		PHA
  55CD   C8           		INY
  55CE   B1   A6      		LDA (TEMPNH),Y
  55D0   85   A7      		STA TEMPNH+1
  55D2   68           		PLA
  55D3   85   A6      		STA TEMPNH	;(GETTOK)
  55D5   60           		RTS
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-84
NLOGO	MISCELLANEOUS AND EVALUATOR UTILITY ROUTINES

  55D6   B9   00   00 	GTFULN:	LDA $00,Y
  55D9   85   A6      		STA TEMPNH
  55DB   B9   01   00 		LDA $01,Y
  55DE   85   A7      		STA TEMPNH+1	;BODY
  55E0   A0   00      		LDY #$00
  55E2   B1   A6      		LDA (TEMPNH),Y
  55E4   95   00      		STA $00,X
  55E6   C8           		INY
  55E7   B1   A6      		LDA (TEMPNH),Y
  55E9   95   01      		STA $01,X	;(CAR or GETBAR)
  55EB   A5   0F      		LDA UFRMAT
  55ED   F0   16      		BEQ GTFR
  55EF   C8           	GTF2:	INY
  55F0   B1   A6      		LDA (TEMPNH),Y
  55F2   85   7A      		STA ULNEND
  55F4   C8           		INY
  55F5   B1   A6      		LDA (TEMPNH),Y
  55F7   85   7B      		STA ULNEND+1	;(GETBAR)
  55F9   B5   00      		LDA $00,X
  55FB   C5   7A      		CMP ULNEND
  55FD   D0   06      		BNE GTFR
  55FF   B5   01      		LDA $01,X
  5601   C5   7B      		CMP ULNEND+1
  5603   F0   21      		BEQ FLLIN
  5605   60           	GTFR:	RTS
                      
  5606   20   D6   55 	GTTULN:	JSR GTFULN
  5609   B5   01      		LDA $01,X
  560B   F0   F8      		BEQ GTFR
  560D   B5   00      	GTT1:	LDA $00,X
  560F   85   A6      		STA TEMPNH
  5611   B5   01      		LDA $01,X
  5613   85   A7      		STA TEMPNH+1
  5615   A0   00      		LDY #$00
  5617   B1   A6      		LDA (TEMPNH),Y
  5619   CD   02   03 		CMP COMMNT
  561C   D0   E7      		BNE GTFR
  561E   C8           		INY
  561F   B1   A6      		LDA (TEMPNH),Y
  5621   CD   03   03 		CMP COMMNT+1
  5624   D0   DF      		BNE GTFR
  5626   A9   00      	FLLIN:	LDA #$00
  5628   95   00      		STA $00,X
  562A   95   01      		STA $01,X
  562C   60           		RTS
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-85
NLOGO	MISCELLANEOUS AND EVALUATOR UTILITY ROUTINES

  562D   B9   00   00 	GETLEN:	LDA $00,Y
  5630   85   A6      		STA TEMPNH	;LIST
  5632   B9   01   00 		LDA $01,Y
  5635   85   A7      		STA TEMPNH+1
  5637   A9   00      		LDA #$00
  5639   95   00      		STA $00,X	;NARGS
  563B   95   01      		STA $01,X
  563D   A5   A7      	GLENW:	LDA TEMPNH+1
  563F   F0   C4      		BEQ GTFR
  5641   A0   00      	GLENW1:	LDY #$00
  5643   B1   A6      		LDA (TEMPNH),Y
  5645   85   A8      		STA TEMPN
  5647   C8           		INY
  5648   B1   A6      		LDA (TEMPNH),Y
  564A   85   A9      		STA TEMPN+1	;(CAR)
  564C   C8           		INY
  564D   B1   A6      		LDA (TEMPNH),Y
  564F   48           		PHA
  5650   C8           		INY
  5651   B1   A6      		LDA (TEMPNH),Y
  5653   85   A7      		STA TEMPNH+1
  5655   68           		PLA
  5656   85   A6      		STA TEMPNH	;(CDR)
  5658   A5   A8      		LDA TEMPN
  565A   CD   02   03 		CMP COMMNT
  565D   D0   07      		BNE GLENW2
  565F   A5   A9      		LDA TEMPN+1
  5661   CD   03   03 		CMP COMMNT+1
  5664   F0   9F      		BEQ GTFR
  5666   F6   00      	GLENW2:	INC $00,X
  5668   D0   D3      		BNE GLENW
  566A   F6   01      		INC $01,X
  566C   D0   CF      		BNE GLENW	;(Always)
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-86
NLOGO	MISCELLANEOUS AND EVALUATOR UTILITY ROUTINES

  566E   B5   00      	UNFUNC:	LDA $00,X
  5670   85   A6      		STA TEMPNH
  5672   B5   01      		LDA $01,X
  5674   85   A7      		STA TEMPNH+1
  5676   A0   02      		LDY #$02
  5678   B1   A6      		LDA (TEMPNH),Y
  567A   AA           		TAX
  567B   C8           		INY
  567C   B1   A6      		LDA (TEMPNH),Y
  567E   85   A7      		STA TEMPNH+1
  5680   86   A6      		STX TEMPNH	;(CDR)
  5682   A0   00      		LDY #$00
  5684   A9   01      		LDA #$01
  5686   91   A6      		STA (TEMPNH),Y
  5688   98           		TYA
  5689   C8           		INY
  568A   91   A6      		STA (TEMPNH),Y	;(RPLACA)
  568C   60           		RTS
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-87
NLOGO	MISCELLANEOUS AND EVALUATOR UTILITY ROUTINES

  568D   85   B2      	GETFUN:	STA ANSN	;Save ANS_FUNCT pointer
  568F   B5   00      		LDA $00,X
  5691   85   A8      		STA TEMPN	;Get OBJECT pointer
  5693   B5   01      		LDA $01,X
  5695   85   A9      		STA TEMPN+1
  5697   20   7F   5D 		JSR GETTYP
  569A   A6   B2      		LDX ANSN
  569C   A0   02      		LDY #$02
  569E   C9   01      		CMP #ATOM
  56A0   F0   09      		BEQ GTFN1
  56A2   C9   07      		CMP #SATOM
  56A4   F0   20      		BEQ GTFN2
  56A6   A9   00      		LDA #$00
  56A8   95   01      		STA $01,X
  56AA   60           		RTS
  56AB   B1   A8      	GTFN1:	LDA (TEMPN),Y
  56AD   48           		PHA
  56AE   C8           		INY
  56AF   B1   A8      		LDA (TEMPN),Y
  56B1   85   A9      		STA TEMPN+1
  56B3   68           		PLA
  56B4   85   A8      		STA TEMPN
  56B6   A0   00      		LDY #$00
  56B8   B1   A8      		LDA (TEMPN),Y
  56BA   48           		PHA
  56BB   C8           		INY
  56BC   B1   A8      		LDA (TEMPN),Y
  56BE   95   01      		STA $01,X
  56C0   68           		PLA
  56C1   95   00      		STA $00,X	;(CAR)
  56C3   A9   06      		LDA #UFUN
  56C5   60           		RTS
  56C6   B1   A8      	GTFN2:	LDA (TEMPN),Y
  56C8   95   00      		STA $00,X
  56CA   C8           		INY
  56CB   B1   A8      		LDA (TEMPN),Y
  56CD   95   01      		STA $01,X	;(CDR)
  56CF   A9   05      		LDA #SFUN
  56D1   60           		RTS
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-88
NLOGO	MISCELLANEOUS AND EVALUATOR UTILITY ROUTINES

  56D2   86   B2      	LDELET:	STX ANSN	;ANSN points to NUMBER
  56D4   A5   9A      		LDA EDBOD
  56D6   85   A8      		STA TEMPN	;TEMPN is LASTLINE
  56D8   A5   9B      		LDA EDBOD+1
  56DA   85   A9      		STA TEMPN+1
  56DC   A0   02      		LDY #$02
  56DE   B1   A8      		LDA (TEMPN),Y
  56E0   85   AA      		STA TEMPN1	;TEMPN1 is LINE
  56E2   C8           		INY
  56E3   B1   A8      		LDA (TEMPN),Y
  56E5   85   AB      		STA TEMPN1+1	;(CDR)
  56E7   A5   AB      	DLTW:	LDA TEMPN1+1
  56E9   F0   52      		BEQ DLTWE
  56EB   A0   00      	DLTW2:	LDY #$00
  56ED   B1   AA      		LDA (TEMPN1),Y
  56EF   85   A6      		STA TEMPNH	;TEMPNH is TEMP
  56F1   C8           		INY
  56F2   B1   AA      		LDA (TEMPN1),Y
  56F4   85   A7      		STA TEMPNH+1	;(CAR)
  56F6   88           		DEY
  56F7   B1   A6      		LDA (TEMPNH),Y
  56F9   AA           		TAX
  56FA   C8           		INY
  56FB   B1   A6      		LDA (TEMPNH),Y
  56FD   85   A7      		STA TEMPNH+1
  56FF   86   A6      		STX TEMPNH	;(CAR)
  5701   A6   B2      		LDX ANSN
  5703   D5   01      		CMP $01,X
  5705   90   0A      		BCC DLTW1
  5707   D0   34      		BNE DLTWE
  5709   A5   A6      		LDA TEMPNH
  570B   D5   00      		CMP $00,X
  570D   F0   19      		BEQ DLTWF
  570F   B0   2C      		BCS DLTWE
  5711   A5   AA      	DLTW1:	LDA TEMPN1
  5713   85   A8      		STA TEMPN
  5715   A5   AB      		LDA TEMPN1+1
  5717   85   A9      		STA TEMPN+1
  5719   A0   02      		LDY #$02
  571B   B1   AA      		LDA (TEMPN1),Y
  571D   AA           		TAX
  571E   C8           		INY
  571F   B1   AA      		LDA (TEMPN1),Y
  5721   85   AB      		STA TEMPN1+1
  5723   86   AA      		STX TEMPN1	;(CDR)
  5725   4C   E7   56 		JMP DLTW
  5728   A0   02      	DLTWF:	LDY #$02
  572A   B1   AA      		LDA (TEMPN1),Y
  572C   85   A6      		STA TEMPNH
  572E   C8           		INY
  572F   B1   AA      		LDA (TEMPN1),Y
  5731   85   A7      		STA TEMPNH+1	;(CDR)
  5733   88           		DEY
  5734   A5   A6      		LDA TEMPNH
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-89
NLOGO	MISCELLANEOUS AND EVALUATOR UTILITY ROUTINES

  5736   91   A8      		STA (TEMPN),Y
  5738   C8           		INY
  5739   A5   A7      		LDA TEMPNH+1
  573B   91   A8      		STA (TEMPN),Y	;(RPLACD)
  573D   60           	DLTWE:	RTS
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-90
NLOGO	MISCELLANEOUS AND EVALUATOR UTILITY ROUTINES

  573E   B5   00      	ULNADV:	LDA $00,X
  5740   85   A6      		STA TEMPNH
  5742   B5   01      		LDA $01,X
  5744   85   A7      		STA TEMPNH+1	;BODY
  5746   A0   02      		LDY #$02
  5748   A5   0F      		LDA UFRMAT
  574A   D0   0C      		BNE ULDV2
  574C   B1   A6      	ULDV1:	LDA (TEMPNH),Y
  574E   48           		PHA
  574F   C8           		INY
  5750   B1   A6      		LDA (TEMPNH),Y
  5752   95   01      		STA $01,X
  5754   68           		PLA
  5755   95   00      		STA $00,X	;(CDR)
  5757   60           		RTS
  5758   C8           	ULDV2:	INY
  5759   C8           		INY
  575A   B1   A6      		LDA (TEMPNH),Y
  575C   48           		PHA
  575D   C8           		INY
  575E   B1   A6      		LDA (TEMPNH),Y	;(GETBAR)
  5760   D0   08      		BNE ULDV3
  5762   68           		PLA
  5763   D0   06      		BNE ULDV3A
  5765   95   00      		STA $00,X
  5767   95   01      		STA $01,X
  5769   60           		RTS
  576A   68           	ULDV3:	PLA
  576B   18           	ULDV3A:	CLC
  576C   B5   00      		LDA $00,X
  576E   69   02      		ADC #$02
  5770   95   00      		STA $00,X
  5772   90   02      		BCC ADHK13
  5774   F6   01      		INC $01,X
  5776   60           	ADHK13:	RTS
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-91
NLOGO	MISCELLANEOUS AND EVALUATOR UTILITY ROUTINES

  5777   A5   6E      	RSTBND:	LDA XFRAME
  5779   85   14      		STA SP
  577B   A5   6F      		LDA XFRAME+1
  577D   85   15      		STA SP+1
  577F   A0   0E      		LDY #$0E	;(SF_NUMBER_BINDINGS = 14.)
  5781   B1   6C      		LDA (FRAME),Y
  5783   F0   17      		BEQ RSTBWE
  5785   85   B2      		STA ANSN	;(GETBAR)
  5787   A2   AA      	RSTBW:	LDX #TEMPN1
  5789   20   67   52 		JSR POP
  578C   A2   A8      		LDX #TEMPN
  578E   20   67   52 		JSR POP
  5791   A2   A8      		LDX #TEMPN
  5793   A0   AA      		LDY #TEMPN1
  5795   20   E4   52 		JSR PUTVAL
  5798   C6   B2      		DEC ANSN
  579A   D0   EB      		BNE RSTBW
  579C   60           	RSTBWE:	RTS
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-92
NLOGO	MISCELLANEOUS AND EVALUATOR UTILITY ROUTINES

  579D   A9   A8      	OTPFX1:	LDA #TEMPN	;Output a two-byte fixnum value (Y is ptr.)
  579F   85   B2      		STA ANSN
  57A1   A2   00      		LDX #$00
  57A3   A9   03      		LDA #FIX
  57A5   20   0F   53 		JSR CONS
  57A8   A2   A8      		LDX #TEMPN
  57AA   20   4E   52 		JSR VPUSHP
  57AD   E6   07      		INC OTPUTN
  57AF   4C   1E   41 		JMP POPJ
                      
  57B2   A0   A2      	OTPFL1:	LDY #NARG1
  57B4   A9   04      	OTPFLO:	LDA #FLO
  57B6   D0   17      		BNE OTPNUM	;(Always)
  57B8   B5   03      	OTPFIX:	LDA $03,X
  57BA   C9   80      		CMP #$80
  57BC   D0   0F      		BNE OTPFXA
  57BE   B5   02      		LDA $02,X
  57C0   D0   0B      		BNE OTPFXA
  57C2   B5   01      		LDA $01,X
  57C4   D0   07      		BNE OTPFXA
  57C6   B5   00      		LDA $00,X
  57C8   D0   03      		BNE OTPFXA
  57CA   4C   B2   77 		JMP ROFLOW	;Attempted to output -2^15, so Overflow Error
  57CD   A9   03      	OTPFXA:	LDA #FIX
  57CF   48           	OTPNUM:	PHA		;Save type
  57D0   A9   A8      		LDA #TEMPN	;Entered with type (Fix/Flo) in A
  57D2   85   B2      		STA ANSN
  57D4   98           		TYA
  57D5   AA           		TAX
  57D6   E8           		INX
  57D7   E8           		INX
  57D8   68           		PLA		;Retrieve type
  57D9   20   0F   53 		JSR CONS
  57DC   A2   A8      		LDX #TEMPN
  57DE   20   4E   52 		JSR VPUSHP
  57E1   E6   07      		INC OTPUTN
  57E3   4C   1E   41 		JMP POPJ
                      
  57E6   84   B2      	PUTFUN:	STY ANSN
  57E8   86   B3      		STX ANSN1
  57EA   20   7F   5D 		JSR GETTYP
  57ED   C9   01      		CMP #ATOM
  57EF   F0   0A      		BEQ PTFN2
  57F1   A4   B3      	PTFN1:	LDY ANSN1
  57F3   20   35   61 		JSR PTRYOK
  57F6   A9   0C      		LDA #XUBL
  57F8   4C   42   61 		JMP ERROR
  57FB   A6   B3      	PTFN2:	LDX ANSN1
  57FD   B5   00      		LDA $00,X
  57FF   85   A6      		STA TEMPNH
  5801   B5   01      		LDA $01,X
  5803   85   A7      		STA TEMPNH+1
  5805   A0   02      		LDY #$02
  5807   B1   A6      		LDA (TEMPNH),Y
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-93
NLOGO	MISCELLANEOUS AND EVALUATOR UTILITY ROUTINES

  5809   AA           		TAX
  580A   C8           		INY
  580B   B1   A6      		LDA (TEMPNH),Y
  580D   85   A7      		STA TEMPNH+1
  580F   86   A6      		STX TEMPNH	;(CDR)
  5811   A6   B2      		LDX ANSN
  5813   A0   00      		LDY #$00
  5815   B5   00      		LDA $00,X
  5817   91   A6      		STA (TEMPNH),Y
  5819   C8           		INY
  581A   B5   01      		LDA $01,X
  581C   91   A6      		STA (TEMPNH),Y	;(RPLACA)
  581E   60           		RTS
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-94
NLOGO	MISCELLANEOUS AND EVALUATOR UTILITY ROUTINES

                      	;Gets two numerical arguments. Coerces one to Real if not same type.
                      	;Returns with carry set if Flonum results.
  581F   A2   BE      	GT2NUM:	LDX #TEMPX2
  5821   20   80   52 		JSR VPOP
  5824   A2   A2      		LDX #NARG1
  5826   20   80   52 		JSR VPOP
  5829   20   D7   58 		JSR GETNUM	;GETNUM returns carry clear if argument non-numerical
  582C   90   1C      		BCC GTERR1
  582E   85   C1      		STA ANSN3	;Save first type
  5830   20   BB   58 		JSR GTNUM2	;Special GETNUM for NARG2
  5833   90   18      		BCC GTERR2
  5835   C5   C1      		CMP ANSN3
  5837   D0   03      		BNE GT2NM1
  5839   C9   04      		CMP #FLO	;(Sets carry if Flonum)
  583B   60           		RTS
  583C   C9   03      	GT2NM1:	CMP #FIX	;Assume ARG1 is the integer
  583E   D0   05      		BNE GT2NM2
  5840   20   2F   69 		JSR FLOTN2	;Nope, it was NARG2, convert to flt. pt.
  5843   38           		SEC
  5844   60           		RTS
  5845   20   38   69 	GT2NM2:	JSR FLOTN1	;Convert NARG1 to floating pt.
  5848   38           		SEC
  5849   60           		RTS
  584A   4C   21   7C 	GTERR1:	JMP SMAKE2	;(ERROR XWTA,ARG1,CURTOK)
  584D   4C   90   7A 	GTERR2:	JMP SFPT1	;(ERROR XWTA,ARG2,CURTOK)
                      
                      	;Gets a numerical argument. Returns with carry set if flonum.
  5850   A2   A2      	GT1NUM:	LDX #NARG1
  5852   20   80   52 		JSR VPOP
  5855   20   D5   58 	GT1NMX:	JSR GTNUM1	;Alt. entry
  5858   90   F0      		BCC GTERR1
  585A   C9   04      		CMP #FLO	;(Sets carry if Flonum)
  585C   60           		RTS
                      
                      	;Gets a numerical argument, changes to integer if Real.
                      	;Give an error if high bytes not zero.
  585D   A2   A2      	GT1FIX:	LDX #NARG1
  585F   20   80   52 		JSR VPOP
  5862   20   D7   58 		JSR GETNUM
  5865   90   E3      		BCC GTERR1
  5867   C9   03      		CMP #FIX
  5869   F0   03      		BEQ GT1FX1
  586B   20   63   6A 		JSR XINT1
  586E   A2   A2      	GT1FX1:	LDX #NARG1
  5870   20   76   58 		JSR CHKINT
  5873   B0   D5      		BCS GTERR1
  5875   60           		RTS
                      
  5876   B5   02      	CHKINT:	LDA $02,X
  5878   D0   06      		BNE CHKIN2
  587A   B5   03      		LDA $03,X
  587C   D0   0A      		BNE CHKNNT
  587E   18           	CHKIOK:	CLC
  587F   60           		RTS
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-95
NLOGO	MISCELLANEOUS AND EVALUATOR UTILITY ROUTINES

  5880   C9   FF      	CHKIN2:	CMP #$FF
  5882   D0   04      		BNE CHKNNT
  5884   D5   03      		CMP $03,X
  5886   F0   F6      		BEQ CHKIOK
  5888   38           	CHKNNT:	SEC
  5889   60           		RTS
                      
                      	;Gets two numerical arguments, changes either or both to integer if Real.
                      	;Gives an error if either arg. has high bytes non-zero.
  588A   A2   BE      	GT2FIX:	LDX #TEMPX2
  588C   20   80   52 		JSR VPOP
  588F   A2   A2      		LDX #NARG1
  5891   20   80   52 		JSR VPOP
  5894   20   D7   58 		JSR GETNUM
  5897   90   B1      		BCC GTERR1
  5899   C9   03      		CMP #FIX
  589B   F0   0A      		BEQ GT2FX1
  589D   20   63   6A 		JSR XINT1
  58A0   A2   A2      		LDX #NARG1
  58A2   20   76   58 		JSR CHKINT
  58A5   B0   A3      		BCS GTERR1
  58A7   20   BB   58 	GT2FX1:	JSR GTNUM2	;Special GETNUM for NARG2
  58AA   90   A1      		BCC GTERR2
  58AC   C9   03      		CMP #FIX
  58AE   F0   03      		BEQ GT2FX2
  58B0   20   5A   6A 		JSR XINT2
  58B3   A2   9E      	GT2FX2:	LDX #NARG2
  58B5   20   76   58 		JSR CHKINT
  58B8   B0   93      		BCS GTERR2
  58BA   60           		RTS
                      
                      	;GETNM2 saves NARG1 before calling GETNUM with NARG2, then restores NARG1.
                      
  58BB   A0   40      	GTNUM2:	LDY #A3L
  58BD   20   EE   4C 		JSR XN1TOY	;Save NARG1
  58C0   A5   BE      		LDA TEMPX2
  58C2   85   9E      		STA NARG2
  58C4   A5   BF      		LDA TEMPX2+1
  58C6   85   9F      		STA NARG2+1
  58C8   A2   9E      		LDX #NARG2
  58CA   20   D7   58 		JSR GETNUM
  58CD   48           		PHA		;Save type
  58CE   A0   40      		LDY #A3L
  58D0   20   FA   4C 		JSR XYTON1	;Restore NARG1
  58D3   68           		PLA		;Get type back
  58D4   60           		RTS
                      
                      	;Gets a numerical argument if possible. Returns with carry clear if successful.
                      	;Returns with type of argument (Fix/Flo) in A.
                      	;(Note: ATMTFX destroys previous values of NARG1 and NARG2. Call with NARG1 first,
                      	; then save it, then call with NARG2, then restore NARG1.)
                      
  58D5   A2   A2      	GTNUM1:	LDX #NARG1
  58D7   86   B3      	GETNUM:	STX ANSN1	;Address of argument
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-96
NLOGO	MISCELLANEOUS AND EVALUATOR UTILITY ROUTINES

  58D9   20   7F   5D 		JSR GETTYP
  58DC   A6   B3      		LDX ANSN1
  58DE   C9   01      		CMP #ATOM
  58E0   F0   22      		BEQ ATMTXX
  58E2   C9   03      		CMP #FIX
  58E4   F0   06      		BEQ GTNM2
  58E6   C9   04      		CMP #FLO
  58E8   F0   02      		BEQ GTNM2
  58EA   18           	GTNMNO:	CLC		;Carry clear means argument not OK
  58EB   60           		RTS
  58EC   48           	GTNM2:	PHA		;Save type
  58ED   B5   00      		LDA $00,X
  58EF   85   A6      		STA TEMPNH
  58F1   B5   01      		LDA $01,X
  58F3   85   A7      		STA TEMPNH+1
  58F5   A0   03      		LDY #$03
  58F7   B1   A6      	GTNML:	LDA (TEMPNH),Y
  58F9   95   03      		STA $03,X
  58FB   CA           		DEX
  58FC   88           		DEY
  58FD   10   F8      		BPL GTNML
  58FF   68           		PLA		;Retrieve type
  5900   38           		SEC		;Carry set means argument OK
  5901   60           		RTS
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-97
NLOGO	MISCELLANEOUS AND EVALUATOR UTILITY ROUTINES

                      	;Convert an atom to a Fixnum or Flonum if possible. Sets the carry
                      	;if successful. Returns type of number (Fix/Flo) in A.
                      	;(Note: Destroys previous values of NARG1 and NARG2.)
                      
  5902   86   B3      	ATMTFX:	STX ANSN1	;ANSN1 points to argument
  5904   A0   B0      	ATMTXX:	LDY #TEMPN4	;TEMPN4 becomes PNAME (Entry point for GETNUM)
  5906   20   83   59 		JSR GETPNM
  5909   A5   B1      		LDA TEMPN4+1
  590B   F0   DD      		BEQ GTNMNO
  590D   20   C5   4C 		JSR CLRNG1	;Initialize number to 0
  5910   A0   01      		LDY #$01
  5912   B1   B0      		LDA (TEMPN4),Y
  5914   85   B9      		STA TEMPN7+1
  5916   88           		DEY
  5917   84   C0      		STY ANSN2	;ANSN2 is SIGN
  5919   B1   B0      		LDA (TEMPN4),Y
  591B   85   B8      		STA TEMPN7	;(CAR) a pair of digits to TEMPN7
  591D   C9   2D      		CMP #'-
  591F   D0   04      		BNE ATMT3
  5921   E6   C0      		INC ANSN2	;ANSN2 is SIGN
  5923   D0   07      		BNE ATMT4A	;(Always)
  5925   20   7A   59 	ATMT3:	JSR GOBDIG
  5928   A6   B1      	ATMT4:	LDX TEMPN4+1
  592A   F0   26      		BEQ ATMT4E
  592C   A0   02      	ATMT4A:	LDY #$02
  592E   B1   B0      		LDA (TEMPN4),Y
  5930   AA           		TAX
  5931   C8           		INY
  5932   B1   B0      		LDA (TEMPN4),Y
  5934   85   B1      		STA TEMPN4+1
  5936   86   B0      		STX TEMPN4	;(CDR) PNAME to next two characters
  5938   A5   B9      		LDA TEMPN7+1
  593A   F0   EC      		BEQ ATMT4
  593C   20   7A   59 		JSR GOBDIG
  593F   A6   B1      		LDX TEMPN4+1
  5941   F0   0F      		BEQ ATMT4E
  5943   A0   01      		LDY #$01
  5945   B1   B0      		LDA (TEMPN4),Y
  5947   85   B9      		STA TEMPN7+1
  5949   88           		DEY
  594A   B1   B0      		LDA (TEMPN4),Y	;(CAR) next two characters
  594C   20   7A   59 		JSR GOBDIG
  594F   4C   28   59 		JMP ATMT4
  5952   20   90   4C 	ATMT4E:	JSR CNUML2
  5955   90   2A      		BCC NOTNM2
  5957   48           		PHA		;Save type
  5958   A6   C0      		LDX ANSN2
  595A   F0   0E      		BEQ ATMT5
  595C   A2   A2      		LDX #NARG1
  595E   A8           		TAY		;(Type of number is in A)
  595F   D0   06      		BNE ATMT41
  5961   20   DD   78 		JSR COMPL
  5964   4C   6A   59 		JMP ATMT5
  5967   20   FF   69 	ATMT41:	JSR FCOMPL
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-98
NLOGO	MISCELLANEOUS AND EVALUATOR UTILITY ROUTINES

  596A   A4   B3      	ATMT5:	LDY ANSN1	;ANSN1 is argument pointer
  596C   A2   FC      		LDX #$FC
  596E   B5   A6      	ATMT5L:	LDA NARG1+4,X	;NARG1 is NUMBER
  5970   99   00   00 		STA $00,Y
  5973   C8           		INY
  5974   E8           		INX
  5975   30   F7      		BMI ATMT5L
  5977   68           		PLA		;Retrieve type
  5978   38           		SEC		;Carry set means argument is a number
  5979   60           		RTS
                      
  597A   20   E8   4B 	GOBDIG:	JSR CNUML1
  597D   B0   03      		BCS GBDGR
  597F   68           	NOTNM1:	PLA		;Return back past ATMTFX
  5980   68           		PLA
  5981   18           	NOTNM2:	CLC		;Carry clear means argument non-numeric
  5982   60           	GBDGR:	RTS
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-99
NLOGO	MISCELLANEOUS AND EVALUATOR UTILITY ROUTINES

  5983   84   AB      	GETPNM:	STY TEMPN1+1	;TEMPN1.H is returned PNAME pointer
  5985   86   AA      		STX TEMPN1	;TEMPN1.L is ATOMM pointer
  5987   B5   00      		LDA $00,X
  5989   29   FC      		AND #$FC
  598B   95   00      		STA $00,X
  598D   20   7F   5D 		JSR GETTYP
  5990   A4   AA      		LDY TEMPN1
  5992   B6   00      		LDX $00,Y
  5994   86   A6      		STX TEMPNH	;TEMPNH becomes ATOMM
  5996   B6   01      		LDX $01,Y
  5998   86   A7      		STX TEMPNH+1
  599A   A0   02      		LDY #$02
  599C   C9   07      		CMP #SATOM
  599E   F0   1F      		BEQ GTPN2
  59A0   B1   A6      	GTPN1:	LDA (TEMPNH),Y	;(Y is $02)
  59A2   AA           		TAX
  59A3   C8           		INY
  59A4   B1   A6      		LDA (TEMPNH),Y
  59A6   85   A7      		STA TEMPNH+1
  59A8   86   A6      		STX TEMPNH	;(CDR)
  59AA   A6   AB      		LDX TEMPN1+1	;PNAME ptr.
  59AC   88           		DEY
  59AD   B1   A6      		LDA (TEMPNH),Y
  59AF   48           		PHA
  59B0   C8           		INY
  59B1   B1   A6      		LDA (TEMPNH),Y
  59B3   95   01      		STA $01,X
  59B5   68           		PLA
  59B6   A8           		TAY		;(CDR)
  59B7   29   FC      		AND #$FC
  59B9   95   00      		STA $00,X
  59BB   98           		TYA
  59BC   29   01      		AND #$01
  59BE   60           	RTSA2X:	RTS
  59BF   B1   A6      	GTPN2:	LDA (TEMPNH),Y	;(Y is $02)
  59C1   85   A8      		STA TEMPN	;TEMPN is INDEX
  59C3   C8           		INY
  59C4   B1   A6      		LDA (TEMPNH),Y
  59C6   85   A9      		STA TEMPN+1	;(CDR)
  59C8   A9   03      		LDA #$03
  59CA   85   AA      		STA TEMPN1
  59CC   A9   00      		LDA #$00
  59CE   85   B3      		STA ANSN1	;Character counter
  59D0   A4   AA      	GTPNW:	LDY TEMPN1
  59D2   B1   A8      		LDA (TEMPN),Y	;Gets INDEX + 3 (SA_PNAME)
  59D4   F0   0A      		BEQ GTPNWE
  59D6   AA           		TAX
  59D7   20   37   52 		JSR PUSH
  59DA   E6   B3      		INC ANSN1
  59DC   E6   AA      		INC TEMPN1
  59DE   D0   F0      		BNE GTPNW	;(Always)
  59E0   A5   AB      	GTPNWE:	LDA TEMPN1+1	;ANS pointer
  59E2   48           		PHA
  59E3   20   BA   65 		JSR CNSPDL
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-100
NLOGO	MISCELLANEOUS AND EVALUATOR UTILITY ROUTINES

  59E6   A9   00      		LDA #$00	;No Funny-pname SATOMs
  59E8   60           		RTS
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-101
NLOGO	MISCELLANEOUS AND EVALUATOR UTILITY ROUTINES

  59E9   A5   62      	SKPPTH:	LDA TOKPTR+1
  59EB   F0   D1      		BEQ RTSA2X
  59ED   A0   00      		LDY #$00
  59EF   B1   61      		LDA (TOKPTR),Y
  59F1   85   A8      		STA TEMPN
  59F3   C8           		INY
  59F4   B1   61      		LDA (TOKPTR),Y
  59F6   85   A9      		STA TEMPN+1	;(GETTOK)
  59F8   A2   61      		LDX #TOKPTR
  59FA   20   70   55 		JSR TTKADV
  59FD   A5   A8      		LDA TEMPN
  59FF   CD   0E   03 		CMP LPAR
  5A02   D0   BA      		BNE RTSA2X
  5A04   A5   A9      		LDA TEMPN+1
  5A06   CD   0F   03 		CMP LPAR+1
  5A09   D0   B3      		BNE RTSA2X
  5A0B   A9   01      		LDA #$01
  5A0D   85   B2      		STA ANSN	;ANSN is PAREN_COUNTER
  5A0F   A5   62      	SKPPW:	LDA TOKPTR+1
  5A11   F0   AB      		BEQ RTSA2X
  5A13   A0   00      		LDY #$00
  5A15   B1   61      		LDA (TOKPTR),Y
  5A17   85   A8      		STA TEMPN
  5A19   C8           		INY
  5A1A   B1   61      		LDA (TOKPTR),Y
  5A1C   85   A9      		STA TEMPN+1	;(GETTOK)
  5A1E   A2   61      		LDX #TOKPTR
  5A20   20   70   55 		JSR TTKADV
  5A23   A6   A8      		LDX TEMPN
  5A25   A4   A9      		LDY TEMPN+1
  5A27   EC   0E   03 		CPX LPAR
  5A2A   D0   0A      		BNE SKPPW2
  5A2C   CC   0F   03 		CPY LPAR+1
  5A2F   D0   05      		BNE SKPPW2
  5A31   E6   B2      		INC ANSN
  5A33   4C   0F   5A 		JMP SKPPW
  5A36   EC   20   03 	SKPPW2:	CPX RPAR
  5A39   D0   D4      		BNE SKPPW
  5A3B   CC   21   03 		CPY RPAR+1
  5A3E   D0   CF      		BNE SKPPW
  5A40   C6   B2      		DEC ANSN
  5A42   D0   CB      		BNE SKPPW
  5A44   60           		RTS
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-102
NLOGO	MISCELLANEOUS AND EVALUATOR UTILITY ROUTINES

  5A45   86   B3      	EXIFSC:	STX ANSN1	;ANSN1 is ANS
  5A47   A5   82      		LDA IFLEVL
  5A49   85   AA      		STA TEMPN1	;TEMPN2 is IF_COUNTER
  5A4B   A5   83      		LDA IFLEVL+1
  5A4D   85   AB      		STA TEMPN1+1
  5A4F   A5   AB      	EXFW:	LDA TEMPN1+1
  5A51   C5   83      		CMP IFLEVL+1
  5A53   90   08      		BCC EXFWE
  5A55   D0   12      		BNE EXFWA1
  5A57   A5   AA      		LDA TEMPN1
  5A59   C5   82      		CMP IFLEVL
  5A5B   B0   0C      		BCS EXFWA1
  5A5D   38           	EXFWE:	SEC
  5A5E   A5   82      		LDA IFLEVL
  5A60   E9   01      		SBC #$01
  5A62   85   82      		STA IFLEVL
  5A64   B0   02      		BCS EXFWR
  5A66   C6   83      		DEC IFLEVL+1
  5A68   60           	EXFWR:	RTS
  5A69   A5   62      	EXFWA1:	LDA TOKPTR+1
  5A6B   F0   F0      		BEQ EXFWE
  5A6D   A0   00      		LDY #$00
  5A6F   A6   B3      		LDX ANSN1
  5A71   B1   61      		LDA (TOKPTR),Y
  5A73   95   00      		STA $00,X
  5A75   C8           		INY
  5A76   B1   61      		LDA (TOKPTR),Y
  5A78   95   01      		STA $01,X	;(GETTOK)
  5A7A   A8           		TAY
  5A7B   B5   00      		LDA $00,X
  5A7D   AA           		TAX
  5A7E   EC   0C   03 		CPX LIF
  5A81   D0   13      		BNE EXFW2
  5A83   CC   0D   03 		CPY LIF+1
  5A86   D0   0E      		BNE EXFW2
  5A88   E6   AA      		INC TEMPN1
  5A8A   D0   02      		BNE EXIFWB
  5A8C   E6   AB      		INC TEMPN1+1
  5A8E   A2   61      	EXIFWB:	LDX #TOKPTR
  5A90   20   70   55 		JSR TTKADV
  5A93   4C   4F   5A 		JMP EXFW
  5A96   EC   08   03 	EXFW2:	CPX LELSE
  5A99   D0   26      		BNE EXFW3
  5A9B   CC   09   03 		CPY LELSE+1
  5A9E   D0   21      		BNE EXFW3
  5AA0   38           		SEC
  5AA1   A5   AA      		LDA TEMPN1
  5AA3   E9   01      		SBC #$01
  5AA5   85   AA      		STA TEMPN1
  5AA7   B0   02      		BCS EXFWC
  5AA9   C6   AB      		DEC TEMPN1+1
  5AAB   A5   AB      	EXFWC:	LDA TEMPN1+1
  5AAD   C5   83      		CMP IFLEVL+1
  5AAF   90   AC      		BCC EXFWE
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-103
NLOGO	MISCELLANEOUS AND EVALUATOR UTILITY ROUTINES

  5AB1   D0   06      		BNE EXFWD
  5AB3   A5   AA      		LDA TEMPN1
  5AB5   C5   82      		CMP IFLEVL
  5AB7   90   A4      		BCC EXFWE
  5AB9   A2   61      	EXFWD:	LDX #TOKPTR
  5ABB   20   70   55 		JSR TTKADV
  5ABE   4C   69   5A 		JMP EXFWA1
  5AC1   EC   20   03 	EXFW3:	CPX RPAR
  5AC4   D0   05      		BNE EXFW4
  5AC6   CC   21   03 		CPY RPAR+1
  5AC9   F0   92      		BEQ EXFWE
  5ACB   20   E9   59 	EXFW4:	JSR SKPPTH
  5ACE   4C   4F   5A 		JMP EXFW
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-104
NLOGO	MISCELLANEOUS AND EVALUATOR UTILITY ROUTINES

  5AD1   A5   08      	EDTSTP:	LDA EDSW
  5AD3   C9   01      		CMP #$01
  5AD5   F0   36      		BEQ EDTSR1	;Error if already in CHANGE (not EDIT) mode
  5AD7   A5   7C      		LDA LEVNUM
  5AD9   D0   37      		BNE EDTSR2
  5ADB   A5   7D      		LDA LEVNUM+1
  5ADD   D0   33      		BNE EDTSR2
  5ADF   A5   62      		LDA TOKPTR+1
  5AE1   F0   32      		BEQ EDTSR3
  5AE3   A0   00      		LDY #$00
  5AE5   B1   61      		LDA (TOKPTR),Y
  5AE7   85   A2      		STA ARG1
  5AE9   C8           		INY
  5AEA   B1   61      		LDA (TOKPTR),Y
  5AEC   85   A3      		STA ARG1+1	;(GETTOK)
  5AEE   A2   61      		LDX #TOKPTR
  5AF0   20   70   55 		JSR TTKADV
  5AF3   A2   A2      		LDX #ARG1
  5AF5   20   7F   5D 		JSR GETTYP
  5AF8   C9   07      		CMP #SATOM
  5AFA   F0   1C      		BEQ EDTSR4
  5AFC   C9   01      		CMP #ATOM
  5AFE   D0   1B      		BNE EDTSR5
  5B00   A5   A2      		LDA ARG1
  5B02   85   84      		STA EDTATM
  5B04   85   86      		STA PODEFL
  5B06   A5   A3      		LDA ARG1+1
  5B08   85   85      		STA EDTATM+1
  5B0A   85   87      		STA PODEFL+1
  5B0C   60           	RTS2:	RTS
  5B0D   A9   15      	EDTSR1:	LDA #XEDT
  5B0F   4C   42   61 		JMP ERROR
  5B12   4C   E9   7E 	EDTSR2:	JMP STTLR2	;(ERROR XETL)
  5B15   4C   5E   7C 	EDTSR3:	JMP SCMMT1	;(ERROR XEOL)
  5B18   4C   77   84 	EDTSR4:	JMP SPO5S	;(ERROR XUBL,ARG1)
  5B1B   4C   21   7C 	EDTSR5:	JMP SMAKE2	;(ERROR XWTA,ARG1,CURTOK)
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-105
NLOGO	MISCELLANEOUS AND EVALUATOR UTILITY ROUTINES

                      	;Tries to find a block of (Y) contiguous free words in nodespace.
                      	;If successful, return the start addr in (X). If not, return LNIL.
                      
  5B1E   86   B2      	GETWDS:	STX ANSN		;ANSN is ans
  5B20   84   B3      		STY ANSN1		;ANSN1 is size
  5B22   A9   00      		LDA #$00
  5B24   95   00      		STA $00,X		;zero ans
  5B26   95   01      		STA $01,X
  5B28   B9   00   00 		LDA $00,Y
  5B2B   D0   05      		BNE GW1A
  5B2D   B9   01   00 		LDA $01,Y
  5B30   F0   DA      		BEQ RTS2		;If size=0, just return with ANS = 0
  5B32   20   3E   5B 	GW1A:	JSR GW1			;try once
  5B35   A6   B2      		LDX ANSN
  5B37   B5   01      		LDA $01,X
  5B39   D0   D1      		BNE RTS2		;if found something, quit.
  5B3B   20   58   62 		JSR GARCOL		;otherwise, try again after a GC
                      
  5B3E   A9   00      	GW1:	LDA #$00
  5B40   85   A9      		STA TEMPN+1		;Zero lastptr (TEMPN)
  5B42   85   B1      		STA TEMPN4+1		;and lastptr1 (TEMPN4)
  5B44   A5   5F      		LDA FRLIST		;init ptr (TEMPN1) and
  5B46   85   AA      		STA TEMPN1		;ptr1 (TEMPN3) to freelist
  5B48   85   AE      		STA TEMPN3
  5B4A   A5   60      		LDA FRLIST+1
  5B4C   85   AB      		STA TEMPN1+1
  5B4E   85   AF      		STA TEMPN3+1
  5B50   A6   B2      	GW1W:	LDX ANSN
  5B52   B5   01      		LDA $01,X		;if ans neq LNIL, done
  5B54   F0   10      		BEQ GW1WA		;cuz found something
  5B56   A6   B3      	GWRTS:	LDX ANSN1
  5B58   18           		CLC
  5B59   A5   C3      		LDA NNODES
  5B5B   75   00      		ADC $00,X
  5B5D   85   C3      		STA NNODES		;Adjust allocation pointer
  5B5F   A5   C4      		LDA NNODES+1
  5B61   75   01      		ADC $01,X
  5B63   85   C4      		STA NNODES+1
  5B65   60           		RTS
  5B66   A5   AB      	GW1WA:	LDA TEMPN1+1		;if ptr1 = LNIL, done cuz been thru whole
  5B68   F0   A2      		BEQ RTS2		;freelist, found nothing
  5B6A   A9   00      	GW1W1:	LDA #$00
  5B6C   85   AC      		STA TEMPN2		;sofar (TEMPN2) := 0
  5B6E   85   AD      		STA TEMPN2+1
  5B70   85   C0      		STA ANSN2		;contig (ANSN2) := 0 (T)
  5B72   A6   B3      	GW1X:	LDX ANSN1
  5B74   A5   AD      		LDA TEMPN2+1
  5B76   D5   01      		CMP $01,X
  5B78   90   14      		BCC GW1X2		;if sofar >= size, go if2
  5B7A   D0   4F      		BNE GWIF2
  5B7C   A5   AC      		LDA TEMPN2
  5B7E   D5   00      		CMP $00,X
  5B80   B0   49      		BCS GWIF2
  5B82   A5   C0      		LDA ANSN2		;if contig = false, go else
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-106
NLOGO	MISCELLANEOUS AND EVALUATOR UTILITY ROUTINES

  5B84   D0   6C      		BNE GWELSE
  5B86   A5   AE      		LDA TEMPN3
  5B88   D0   04      		BNE GW1X2		;if ptr1 = LNIL, goto else
  5B8A   A5   AF      		LDA TEMPN3+1
  5B8C   F0   64      		BEQ GWELSE
  5B8E   18           	GW1X2:	CLC
  5B8F   A5   AC      		LDA TEMPN2
  5B91   69   02      		ADC #$02		;sofar := sofar + 2
  5B93   85   AC      		STA TEMPN2
  5B95   90   02      		BCC GW1X3
  5B97   E6   AD      		INC TEMPN2+1
  5B99   A0   02      	GW1X3:	LDY #$02
  5B9B   B1   AE      		LDA (TEMPN3),Y
  5B9D   85   A6      		STA TEMPNH		;temp (TEMPNH) := (cdr ptr1)
  5B9F   C8           		INY
  5BA0   B1   AE      		LDA (TEMPN3),Y
  5BA2   85   A7      		STA TEMPNH+1		;(CDR)
  5BA4   18           		CLC
  5BA5   A5   A6      		LDA TEMPNH		;add 4 to temp and see if
  5BA7   69   04      		ADC #$04		;result is = ptr1
  5BA9   AA           		TAX
  5BAA   A5   A7      		LDA TEMPNH+1
  5BAC   69   00      		ADC #$00
  5BAE   C5   AF      		CMP TEMPN3+1
  5BB0   D0   04      		BNE NCNTIG
  5BB2   E4   AE      		CPX TEMPN3
  5BB4   F0   02      		BEQ CONTIG		;if so, contig := 1 (false)
  5BB6   E6   C0      	NCNTIG:	INC ANSN2
  5BB8   A5   AE      	CONTIG:	LDA TEMPN3
  5BBA   85   B0      		STA TEMPN4		;lastptr1 := ptr1
  5BBC   A5   AF      		LDA TEMPN3+1
  5BBE   85   B1      		STA TEMPN4+1
  5BC0   A5   A6      		LDA TEMPNH
  5BC2   85   AE      		STA TEMPN3		;ptr1 := temp
  5BC4   A5   A7      		LDA TEMPNH+1
  5BC6   85   AF      		STA TEMPN3+1
  5BC8   4C   72   5B 		JMP GW1X		;round the while loop
  5BCB   A5   A9      	GWIF2:	LDA TEMPN+1		;if lastptr = LNIL, freelist := ptr1
  5BCD   D0   0B      		BNE GWIF3
  5BCF   A5   AE      		LDA TEMPN3
  5BD1   85   5F      		STA FRLIST		;freelist := ptr1
  5BD3   A5   AF      		LDA TEMPN3+1
  5BD5   85   60      		STA FRLIST+1
  5BD7   4C   E5   5B 		JMP GWIF4
  5BDA   A0   02      	GWIF3:	LDY #$02		;else (rplacd lasptr ptr1)
  5BDC   A5   AE      		LDA TEMPN3
  5BDE   91   A8      		STA (TEMPN),Y
  5BE0   C8           		INY
  5BE1   A5   AF      		LDA TEMPN3+1
  5BE3   91   A8      		STA (TEMPN),Y		;(rplacd)
  5BE5   A6   B2      	GWIF4:	LDX ANSN
  5BE7   A5   B0      		LDA TEMPN4
  5BE9   95   00      		STA $00,X		;ans := lastptr1
  5BEB   A5   B1      		LDA TEMPN4+1
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-107
NLOGO	MISCELLANEOUS AND EVALUATOR UTILITY ROUTINES

  5BED   95   01      		STA $01,X
  5BEF   4C   50   5B 		JMP GW1W		;back to top
  5BF2   A5   AE      	GWELSE:	LDA TEMPN3
  5BF4   85   AA      		STA TEMPN1		;ptr := ptr1
  5BF6   A5   AF      		LDA TEMPN3+1
  5BF8   85   AB      		STA TEMPN1+1
  5BFA   A5   B0      		LDA TEMPN4
  5BFC   85   A8      		STA TEMPN		;lastptr := lastptr1
  5BFE   A5   B1      		LDA TEMPN4+1
  5C00   85   A9      		STA TEMPN+1
  5C02   4C   50   5B 		JMP GW1W		;back to top
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-108
NLOGO	MISCELLANEOUS AND EVALUATOR UTILITY ROUTINES

  5C05   85   C1      	STUFF:	STA ANSN3		;try to associate the function (ATOM)
  5C07   86   C2      		STX ANSNX		;definition with the name (BODY).
  5C09   B5   00      		LDA $00,X
  5C0B   85   A6      		STA TEMPNH
  5C0D   B5   01      		LDA $01,X
  5C0F   85   A7      		STA TEMPNH+1		;TEMPNH is BODY
  5C11   A0   00      		LDY #$00
  5C13   B1   A6      		LDA (TEMPNH),Y
  5C15   85   B8      		STA TEMPN7
  5C17   C8           		INY
  5C18   B1   A6      		LDA (TEMPNH),Y
  5C1A   85   B9      		STA TEMPN7+1	;(CAR) to LINE
  5C1C   A2   BE      		LDX #TEMPX2	;TEMPX2 becomes NARGS
  5C1E   A0   B8      		LDY #TEMPN7
  5C20   20   2D   56 		JSR GETLEN
  5C23   A9   00      		LDA #$00
  5C25   85   B6      		STA TEMPN6	;TEMPN6 is SIZE
  5C27   85   B7      		STA TEMPN6+1
  5C29   A6   C2      		LDX ANSNX
  5C2B   B5   00      		LDA $00,X
  5C2D   85   A6      		STA TEMPNH	;TEMPNH is BODY
  5C2F   B5   01      		LDA $01,X
  5C31   85   A7      		STA TEMPNH+1
  5C33   A5   A7      	GTSZW:	LDA TEMPNH+1
  5C35   F0   30      		BEQ GTSZND
  5C37   A0   00      		LDY #$00
  5C39   B1   A6      		LDA (TEMPNH),Y
  5C3B   85   A8      		STA TEMPN
  5C3D   C8           		INY
  5C3E   B1   A6      		LDA (TEMPNH),Y
  5C40   85   A9      		STA TEMPN+1	;(CAR) to LINE (GETSIZ local)
  5C42   C8           		INY
  5C43   B1   A6      		LDA (TEMPNH),Y
  5C45   AA           		TAX
  5C46   C8           		INY
  5C47   B1   A6      		LDA (TEMPNH),Y
  5C49   85   A7      		STA TEMPNH+1
  5C4B   86   A6      		STX TEMPNH	;(CDR)
  5C4D   A5   A9      	GTSZX:	LDA TEMPN+1
  5C4F   F0   E2      		BEQ GTSZW
  5C51   E6   B6      	GTSZX1:	INC TEMPN6
  5C53   D0   02      		BNE GTSZX2
  5C55   E6   B7      		INC TEMPN6+1
  5C57   A0   02      	GTSZX2:	LDY #$02
  5C59   B1   A8      		LDA (TEMPN),Y
  5C5B   AA           		TAX
  5C5C   C8           		INY
  5C5D   B1   A8      		LDA (TEMPN),Y
  5C5F   85   A9      		STA TEMPN+1
  5C61   86   A8      		STX TEMPN	;(CDR)
  5C63   D0   EC      		BNE GTSZX1
  5C65   F0   CC      		BEQ GTSZW
  5C67   A2   B4      	GTSZND:	LDX #TEMPN5	;TEMPN5 becomes PTR
  5C69   A0   B6      		LDY #TEMPN6	;SIZE
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-109
NLOGO	MISCELLANEOUS AND EVALUATOR UTILITY ROUTINES

  5C6B   20   1E   5B 		JSR GETWDS
  5C6E   A5   B5      		LDA TEMPN5+1
  5C70   D0   09      		BNE STFF1
  5C72   A9   BE      	STFFA:	LDA #TEMPX2
  5C74   A4   C2      		LDY ANSNX
  5C76   A6   C1      		LDX ANSN3
  5C78   4C   A3   5D 		JMP PTFTXT	;PUT_FTEXT (FUNATOM, BODY, NARGS) (X,Y,A)
  5C7B   A5   B4      	STFF1:	LDA TEMPN5
  5C7D   85   1C      		STA AREA1
  5C7F   A5   B5      		LDA TEMPN5+1
  5C81   85   1D      		STA AREA1+1
  5C83   A5   B6      		LDA TEMPN6
  5C85   85   18      		STA SIZE1
  5C87   A5   B7      		LDA TEMPN6+1
  5C89   85   19      		STA SIZE1+1
  5C8B   A2   B6      		LDX #TEMPN6
  5C8D   A4   C2      		LDY ANSNX	;BODY
  5C8F   20   2D   56 		JSR GETLEN
  5C92   18           		CLC
  5C93   A5   B6      		LDA TEMPN6
  5C95   69   02      		ADC #$02
  5C97   85   B6      		STA TEMPN6
  5C99   90   02      		BCC ADHK55
  5C9B   E6   B7      		INC TEMPN6+1
  5C9D   A2   BC      	ADHK55:	LDX #TEMPX1	;TEMPX1 becomes INDEX
  5C9F   A0   B6      		LDY #TEMPN6
  5CA1   20   1E   5B 		JSR GETWDS
  5CA4   A5   BD      		LDA TEMPX1+1
  5CA6   D0   07      		BNE STFF2
  5CA8   85   18      		STA SIZE1
  5CAA   85   19      		STA SIZE1+1
  5CAC   4C   72   5C 		JMP STFFA
  5CAF   A5   BC      	STFF2:	LDA TEMPX1
  5CB1   85   1E      		STA AREA2
  5CB3   85   AA      		STA TEMPN1	;TEMPN1 is INDEX1
  5CB5   A5   BD      		LDA TEMPX1+1
  5CB7   85   1F      		STA AREA2+1
  5CB9   85   AB      		STA TEMPN1+1
  5CBB   18           		CLC
  5CBC   A5   B6      		LDA TEMPN6
  5CBE   69   02      		ADC #$02
  5CC0   85   1A      		STA SIZE2
  5CC2   A5   B7      		LDA TEMPN6+1
  5CC4   69   00      		ADC #$00
  5CC6   85   1B      		STA SIZE2+1
  5CC8   A6   C2      		LDX ANSNX
  5CCA   B5   00      		LDA $00,X
  5CCC   85   A6      		STA TEMPNH	;TEMPNH is BODY
  5CCE   B5   01      		LDA $01,X
  5CD0   85   A7      		STA TEMPNH+1
  5CD2   A5   A7      	STFFW:	LDA TEMPNH+1
  5CD4   F0   61      		BEQ STFFWE
  5CD6   A0   00      	STFFW1:	LDY #$00
  5CD8   A5   B4      		LDA TEMPN5	;PTR
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-110
NLOGO	MISCELLANEOUS AND EVALUATOR UTILITY ROUTINES

  5CDA   91   AA      		STA (TEMPN1),Y
  5CDC   C8           		INY
  5CDD   A5   B5      		LDA TEMPN5+1
  5CDF   91   AA      		STA (TEMPN1),Y	;(PUTBAR)
  5CE1   18           		CLC
  5CE2   A5   AA      		LDA TEMPN1
  5CE4   69   02      		ADC #$02
  5CE6   85   AA      		STA TEMPN1
  5CE8   90   02      		BCC STFFX
  5CEA   E6   AB      		INC TEMPN1+1
  5CEC   A5   B9      	STFFX:	LDA TEMPN7+1	;LINE
  5CEE   F0   2E      		BEQ STFFXE
  5CF0   A0   00      		LDY #$00
  5CF2   B1   B8      		LDA (TEMPN7),Y
  5CF4   85   AE      		STA TEMPN3	;TEMPN3 is TOKEN
  5CF6   C8           		INY
  5CF7   B1   B8      		LDA (TEMPN7),Y
  5CF9   85   AF      		STA TEMPN3+1	;(CAR)
  5CFB   C8           		INY
  5CFC   B1   B8      		LDA (TEMPN7),Y
  5CFE   AA           		TAX
  5CFF   C8           		INY
  5D00   B1   B8      		LDA (TEMPN7),Y
  5D02   85   B9      		STA TEMPN7+1
  5D04   86   B8      		STX TEMPN7	;(CDR)
  5D06   A0   00      		LDY #$00
  5D08   A5   AE      		LDA TEMPN3
  5D0A   91   B4      		STA (TEMPN5),Y
  5D0C   C8           		INY
  5D0D   A5   AF      		LDA TEMPN3+1
  5D0F   91   B4      		STA (TEMPN5),Y	;(PUTBAR)
  5D11   18           		CLC
  5D12   A5   B4      		LDA TEMPN5
  5D14   69   02      		ADC #$02
  5D16   85   B4      		STA TEMPN5
  5D18   90   D2      		BCC STFFX
  5D1A   E6   B5      		INC TEMPN5+1
  5D1C   D0   CE      		BNE STFFX	;(Always)
  5D1E   A0   03      	STFFXE:	LDY #$03
  5D20   B1   A6      		LDA (TEMPNH),Y
  5D22   AA           		TAX
  5D23   88           		DEY
  5D24   B1   A6      		LDA (TEMPNH),Y
  5D26   85   A6      		STA TEMPNH	;(CDR)
  5D28   86   A7      		STX TEMPNH+1
  5D2A   88           		DEY
  5D2B   B1   A6      		LDA (TEMPNH),Y
  5D2D   85   B9      		STA TEMPN7+1
  5D2F   88           		DEY
  5D30   B1   A6      		LDA (TEMPNH),Y
  5D32   85   B8      		STA TEMPN7	;(CAR)
  5D34   4C   D2   5C 		JMP STFFW
  5D37   A0   00      	STFFWE:	LDY #$00
  5D39   A5   B4      		LDA TEMPN5
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-111
NLOGO	MISCELLANEOUS AND EVALUATOR UTILITY ROUTINES

  5D3B   91   AA      		STA (TEMPN1),Y	;TEMPN1 is INDEX1
  5D3D   C8           		INY
  5D3E   A5   B5      		LDA TEMPN5+1
  5D40   91   AA      		STA (TEMPN1),Y	;(PUTBAR)
  5D42   C8           		INY
  5D43   A9   00      		LDA #$00
  5D45   91   AA      		STA (TEMPN1),Y
  5D47   C8           		INY
  5D48   91   AA      		STA (TEMPN1),Y	;(PUTBAR)
  5D4A   A2   BC      		LDX #TEMPX1	;INDEX
  5D4C   A9   0B      		LDA #FPACK
  5D4E   20   EB   53 		JSR PUTTYP
  5D51   A9   BE      		LDA #TEMPX2
  5D53   A0   BC      		LDY #TEMPX1
  5D55   A6   C1      		LDX ANSN3
  5D57   20   A3   5D 		JSR PTFTXT	;(X,Y,A)
  5D5A   A9   00      		LDA #$00
  5D5C   85   18      		STA SIZE1
  5D5E   85   19      		STA SIZE1+1
  5D60   85   1A      		STA SIZE2
  5D62   85   1B      		STA SIZE2+1
  5D64   60           	RTS3:	RTS
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-112
NLOGO	MISCELLANEOUS AND EVALUATOR UTILITY ROUTINES

  5D65   46   A7      	TYPACS:	LSR TEMPNH+1
  5D67   66   A6      		ROR TEMPNH
  5D69   46   A7      		LSR TEMPNH+1
  5D6B   66   A6      		ROR TEMPNH
  5D6D   18           		CLC
  5D6E   A5   A6      		LDA TEMPNH
  5D70   69   60      		ADC #TYPBAS&$FF
  5D72   85   A6      		STA TEMPNH
  5D74   A5   A7      		LDA TEMPNH+1
  5D76   69   C2      		ADC #TYPBAS^
  5D78   85   A7      		STA TEMPNH+1
  5D7A   A0   00      		LDY #$00
  5D7C   B1   A6      		LDA (TEMPNH),Y
  5D7E   60           		RTS
                      
  5D7F   B5   01      	GETTYP:	LDA $01,X
  5D81   F0   1D      		BEQ GETTPE
  5D83   B5   00      		LDA $00,X
  5D85   85   A6      		STA TEMPNH
  5D87   B5   01      		LDA $01,X
  5D89   85   A7      		STA TEMPNH+1
  5D8B   20   65   5D 		JSR TYPACS
  5D8E   C9   01      		CMP #ATOM
  5D90   F0   04      		BEQ GETTP4
  5D92   C9   07      		CMP #SATOM
  5D94   D0   0A      		BNE GETTPE
  5D96   A8           	GETTP4:	TAY
  5D97   B5   00      		LDA $00,X
  5D99   29   03      		AND #$03
  5D9B   F0   04      		BEQ GETTPF
  5D9D   18           		CLC
  5D9E   69   07      		ADC #$07
  5DA0   60           	GETTPE:	RTS
  5DA1   98           	GETTPF:	TYA
  5DA2   60           		RTS
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-113
NLOGO	MISCELLANEOUS AND EVALUATOR UTILITY ROUTINES

  5DA3   84   C2      	PTFTXT:	STY ANSNX	;FUNTEXT
  5DA5   85   C1      		STA ANSN3	;NARGS
  5DA7   86   B8      		STX TEMPN7	;ATOMM
  5DA9   20   7F   5D 		JSR GETTYP
  5DAC   C9   01      		CMP #ATOM
  5DAE   F0   07      		BEQ PTFTX2
  5DB0   A4   B8      		LDY TEMPN7
  5DB2   A9   0C      		LDA #XUBL
  5DB4   4C   42   61 		JMP ERROR
  5DB7   A6   B8      	PTFTX2:	LDX TEMPN7
  5DB9   B5   00      		LDA $00,X
  5DBB   85   A6      		STA TEMPNH	;TEMPNH is ATOMM
  5DBD   B5   01      		LDA $01,X
  5DBF   85   A7      		STA TEMPNH+1
  5DC1   A0   02      		LDY #$02
  5DC3   B1   A6      		LDA (TEMPNH),Y
  5DC5   85   B4      		STA TEMPN5	;TEMPN5 is CELL
  5DC7   C8           		INY
  5DC8   B1   A6      		LDA (TEMPNH),Y
  5DCA   85   B5      		STA TEMPN5+1	;(CDR)
  5DCC   A0   00      		LDY #$00
  5DCE   B1   B4      		LDA (TEMPN5),Y
  5DD0   85   B6      		STA TEMPN6	;TEMPN6 is FUNCT
  5DD2   C8           		INY
  5DD3   B1   B4      		LDA (TEMPN5),Y
  5DD5   85   B7      		STA TEMPN6+1	;(CAR)
  5DD7   D0   40      		BNE PTFTX3
  5DD9   A6   C2      		LDX ANSNX	;FUNTEXT ptr.
  5DDB   B5   00      		LDA $00,X
  5DDD   85   88      		STA MARK1
  5DDF   B5   01      		LDA $01,X
  5DE1   85   89      		STA MARK1+1
  5DE3   A9   04      		LDA #$04
  5DE5   85   BA      		STA TEMPN8
  5DE7   A9   00      		LDA #$00
  5DE9   85   BB      		STA TEMPN8+1
  5DEB   A0   BA      		LDY #TEMPN8
  5DED   A2   B6      		LDX #TEMPN6
  5DEF   20   1E   5B 		JSR GETWDS
  5DF2   A0   01      		LDY #$01
  5DF4   A5   B7      		LDA TEMPN6+1	;FUNCT
  5DF6   F0   42      		BEQ PTFER
  5DF8   91   B4      		STA (TEMPN5),Y	;CELL
  5DFA   88           		DEY
  5DFB   A5   B6      		LDA TEMPN6
  5DFD   91   B4      		STA (TEMPN5),Y	;(RPLACA)
  5DFF   A2   B6      		LDX #TEMPN6
  5E01   A9   06      		LDA #UFUN
  5E03   20   EB   53 		JSR PUTTYP
  5E06   A0   06      		LDY #$06
  5E08   A6   B8      		LDX TEMPN7	;ATOMM
  5E0A   B5   00      		LDA $00,X
  5E0C   91   B6      		STA (TEMPN6),Y
  5E0E   C8           		INY
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-114
NLOGO	MISCELLANEOUS AND EVALUATOR UTILITY ROUTINES

  5E0F   B5   01      		LDA $01,X
  5E11   91   B6      		STA (TEMPN6),Y	;(PUTBAR)
  5E13   A9   00      		LDA #$00
  5E15   85   88      		STA MARK1
  5E17   85   89      		STA MARK1+1
  5E19   A0   00      	PTFTX3:	LDY #$00
  5E1B   98           		TYA
  5E1C   91   B6      		STA (TEMPN6),Y
  5E1E   C8           		INY
  5E1F   91   B6      		STA (TEMPN6),Y	;(PUTBAR)
  5E21   C8           		INY
  5E22   A6   C2      		LDX ANSNX
  5E24   B5   00      		LDA $00,X	;FUNTEXT
  5E26   91   B6      		STA (TEMPN6),Y
  5E28   C8           		INY
  5E29   B5   01      		LDA $01,X
  5E2B   91   B6      		STA (TEMPN6),Y	;(PUTBAR)
  5E2D   C8           		INY
  5E2E   A6   C1      		LDX ANSN3	;NARGS
  5E30   B5   00      		LDA $00,X
  5E32   91   B6      		STA (TEMPN6),Y
  5E34   C8           		INY
  5E35   B5   01      		LDA $01,X
  5E37   91   B6      		STA (TEMPN6),Y	;(PUTBAR)
  5E39   60           	PTFTXE:	RTS
  5E3A   4C   AE   53 	PTFER:	JMP CONSR	;(No Nodes, most likely) "No storage left" zapcode
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-115
NLOGO	MISCELLANEOUS AND EVALUATOR UTILITY ROUTINES

  5E3D   85   C0      	UNSTUF:	STA ANSN2	;ANSN2 is TEXTP
  5E3F   84   B3      		STY ANSN1	;ANSN1 is BODY ptr. (X is FUN ptr.)
  5E41   B5   00      		LDA $00,X
  5E43   85   A6      		STA TEMPNH
  5E45   B5   01      		LDA $01,X
  5E47   85   A7      		STA TEMPNH+1
  5E49   A0   02      		LDY #$02
  5E4B   B1   A6      		LDA (TEMPNH),Y
  5E4D   85   AA      		STA TEMPN1	;TEMPN1 is INDEX
  5E4F   C8           		INY
  5E50   B1   A6      		LDA (TEMPNH),Y
  5E52   85   AB      		STA TEMPN1+1	;(CDR)
  5E54   A2   AA      		LDX #TEMPN1
  5E56   20   7F   5D 		JSR GETTYP
  5E59   C9   0B      		CMP #FPACK
  5E5B   F0   0B      		BEQ USTF2
  5E5D   A6   B3      	USTF1:	LDX ANSN1
  5E5F   A5   AA      		LDA TEMPN1
  5E61   95   00      		STA $00,X
  5E63   A5   AB      		LDA TEMPN1+1
  5E65   95   01      		STA $01,X
  5E67   60           	USTFE1:	RTS
  5E68   A9   00      	USTF2:	LDA #$00
  5E6A   85   88      		STA MARK1
  5E6C   85   89      		STA MARK1+1
  5E6E   A5   14      		LDA SP
  5E70   85   B0      		STA TEMPN4	;TEMPN4 is STACK
  5E72   A5   15      		LDA SP+1
  5E74   85   B1      		STA TEMPN4+1
  5E76   A0   00      	USTFW2:	LDY #$00
  5E78   B1   AA      		LDA (TEMPN1),Y
  5E7A   85   AC      		STA TEMPN2	;TEMPN2 is PTR
  5E7C   C8           		INY
  5E7D   B1   AA      		LDA (TEMPN1),Y
  5E7F   85   AD      		STA TEMPN2+1	;(GETBAR)
  5E81   C8           		INY
  5E82   B1   AA      		LDA (TEMPN1),Y
  5E84   85   AE      		STA TEMPN3	;TEMPN3 is ENDPTR
  5E86   C8           		INY
  5E87   B1   AA      		LDA (TEMPN1),Y
  5E89   85   AF      		STA TEMPN3+1	;(GETBAR)
  5E8B   A5   AF      	USTFW:	LDA TEMPN3+1
  5E8D   F0   16      		BEQ USTFWE
  5E8F   20   0D   54 		JSR STKTST
  5E92   A2   AC      		LDX #TEMPN2
  5E94   20   20   52 		JSR PUSHP
  5E97   18           		CLC
  5E98   A5   AA      		LDA TEMPN1
  5E9A   69   02      		ADC #$02
  5E9C   85   AA      		STA TEMPN1
  5E9E   90   D6      		BCC USTFW2
  5EA0   E6   AB      		INC TEMPN1+1
  5EA2   4C   76   5E 		JMP USTFW2
  5EA5   A5   AC      	USTFWE:	LDA TEMPN2
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-116
NLOGO	MISCELLANEOUS AND EVALUATOR UTILITY ROUTINES

  5EA7   85   AE      		STA TEMPN3
  5EA9   A5   AD      		LDA TEMPN2+1
  5EAB   85   AF      		STA TEMPN3+1
  5EAD   A5   B0      	USTFX:	LDA TEMPN4
  5EAF   C5   14      		CMP SP
  5EB1   D0   06      		BNE USTFX1
  5EB3   A5   B1      		LDA TEMPN4+1
  5EB5   C5   15      		CMP SP+1
  5EB7   F0   74      		BEQ USTFXE
  5EB9   A2   AC      	USTFX1:	LDX #TEMPN2
  5EBB   20   67   52 		JSR POP
  5EBE   A9   00      		LDA #$00
  5EC0   85   8A      		STA MARK2
  5EC2   85   8B      		STA MARK2+1
  5EC4   A5   AE      	USTFY:	LDA TEMPN3
  5EC6   C5   AC      		CMP TEMPN2
  5EC8   D0   06      		BNE USTFY1
  5ECA   A5   AF      		LDA TEMPN3+1
  5ECC   C5   AD      		CMP TEMPN2+1
  5ECE   F0   24      		BEQ USTFYE
  5ED0   38           	USTFY1:	SEC
  5ED1   A5   AE      		LDA TEMPN3
  5ED3   E9   02      		SBC #$02
  5ED5   85   AE      		STA TEMPN3
  5ED7   B0   02      		BCS USTFY2
  5ED9   C6   AF      		DEC TEMPN3+1
  5EDB   A0   00      	USTFY2:	LDY #$00
  5EDD   B1   AE      		LDA (TEMPN3),Y
  5EDF   85   A8      		STA TEMPN
  5EE1   C8           		INY
  5EE2   B1   AE      		LDA (TEMPN3),Y
  5EE4   85   A9      		STA TEMPN+1	;(GETBAR)
  5EE6   A9   00      		LDA #LIST
  5EE8   A2   8A      		LDX #MARK2
  5EEA   86   B2      		STX ANSN
  5EEC   A0   A8      		LDY #TEMPN
  5EEE   20   0F   53 		JSR CONS
  5EF1   4C   C4   5E 		JMP USTFY
  5EF4   A2   8A      	USTFYE:	LDX #MARK2
  5EF6   A5   B0      		LDA TEMPN4
  5EF8   C5   14      		CMP SP
  5EFA   D0   0E      		BNE USTFX2
  5EFC   A5   B1      		LDA TEMPN4+1
  5EFE   C5   15      		CMP SP+1
  5F00   D0   08      		BNE USTFX2
  5F02   A9   00      		LDA #LIST
  5F04   20   EB   53 		JSR PUTTYP
  5F07   4C   1F   5F 		JMP USTFX3
  5F0A   A9   0C      	USTFX2:	LDA #FLIST
  5F0C   20   EB   53 		JSR PUTTYP
  5F0F   A5   C0      		LDA ANSN2
  5F11   F0   0C      		BEQ USTFX3
  5F13   A0   02      		LDY #$02
  5F15   B1   8A      		LDA (MARK2),Y
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-117
NLOGO	MISCELLANEOUS AND EVALUATOR UTILITY ROUTINES

  5F17   AA           		TAX
  5F18   C8           		INY
  5F19   B1   8A      		LDA (MARK2),Y
  5F1B   85   8B      		STA MARK2+1
  5F1D   86   8A      		STX MARK2	;(CDR)
  5F1F   A2   88      	USTFX3:	LDX #MARK1
  5F21   86   B2      		STX ANSN
  5F23   A0   8A      		LDY #MARK2
  5F25   A9   00      		LDA #LIST
  5F27   20   0F   53 		JSR CONS
  5F2A   4C   A5   5E 		JMP USTFWE
  5F2D   A6   B3      	USTFXE:	LDX ANSN1	;BODY
  5F2F   A5   88      		LDA MARK1
  5F31   95   00      		STA $00,X
  5F33   A5   89      		LDA MARK1+1
  5F35   95   01      		STA $01,X
  5F37   A9   00      		LDA #$00
  5F39   4C   2A   51 		JMP CLMK2	;Clear MARK1, MARK2
  5F3C   60           	USTFE:	RTS
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-118
NLOGO	MISCELLANEOUS AND EVALUATOR UTILITY ROUTINES

  5F3D   86   B3      	DEFUN:	STX ANSN1	;ANSN1 is LISTT
  5F3F   84   C0      		STY ANSN2	;ANSN2 is ATOMM
  5F41   B5   01      		LDA $01,X
  5F43   D0   05      		BNE DEFUN1
  5F45   A6   C0      		LDX ANSN2
  5F47   4C   6E   56 		JMP UNFUNC
  5F4A   20   4E   52 	DEFUN1:	JSR VPUSHP
  5F4D   A9   0A      		LDA #LININC
  5F4F   85   B0      		STA TEMPN4	;TEMPN4 is NUMBER
  5F51   A9   00      		LDA #$00
  5F53   85   B1      		STA TEMPN4+1
  5F55   A5   16      		LDA VSP
  5F57   85   AA      		STA TEMPN1	;TEMPN1 is PTR
  5F59   A5   17      		LDA VSP+1
  5F5B   85   AB      		STA TEMPN1+1
  5F5D   A6   B3      		LDX ANSN1
  5F5F   B5   00      		LDA $00,X
  5F61   85   A8      		STA TEMPN
  5F63   B5   01      		LDA $01,X
  5F65   85   A9      		STA TEMPN+1
  5F67   A0   00      		LDY #$00
  5F69   B1   A8      		LDA (TEMPN),Y
  5F6B   85   AC      		STA TEMPN2
  5F6D   C8           		INY
  5F6E   B1   A8      		LDA (TEMPN),Y
  5F70   85   AD      		STA TEMPN2+1	;(CAR)
  5F72   A2   AC      		LDX #TEMPN2
  5F74   20   4E   52 		JSR VPUSHP
  5F77   A0   02      		LDY #$02
  5F79   B1   A8      		LDA (TEMPN),Y
  5F7B   85   AC      		STA TEMPN2	;TEMPN2 is TLIST
  5F7D   C8           		INY
  5F7E   B1   A8      		LDA (TEMPN),Y
  5F80   85   AD      		STA TEMPN2+1	;(CDR)
  5F82   A5   AD      	DEFUNW:	LDA TEMPN2+1
  5F84   F0   40      		BEQ DEFNWE
  5F86   A0   00      		LDY #$00
  5F88   B1   AC      		LDA (TEMPN2),Y
  5F8A   85   AE      		STA TEMPN3	;TEMPN3 is T1
  5F8C   C8           		INY
  5F8D   B1   AC      		LDA (TEMPN2),Y
  5F8F   85   AF      		STA TEMPN3+1	;(CAR)
  5F91   A2   AE      		LDX #TEMPN3
  5F93   20   7F   5D 		JSR GETTYP
  5F96   C9   00      		CMP #LIST
  5F98   D0   5A      		BNE DEFNER
  5F9A   A2   AE      		LDX #TEMPN3
  5F9C   86   B2      		STX ANSN
  5F9E   A0   B0      		LDY #TEMPN4
  5FA0   A9   0C      		LDA #FLIST
  5FA2   20   0F   53 		JSR CONS
  5FA5   A2   AE      		LDX #TEMPN3
  5FA7   20   4E   52 		JSR VPUSHP
  5FAA   A0   02      		LDY #$02
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-119
NLOGO	MISCELLANEOUS AND EVALUATOR UTILITY ROUTINES

  5FAC   B1   AC      		LDA (TEMPN2),Y
  5FAE   AA           		TAX
  5FAF   C8           		INY
  5FB0   B1   AC      		LDA (TEMPN2),Y
  5FB2   85   AD      		STA TEMPN2+1
  5FB4   86   AC      		STX TEMPN2	;(CDR)
  5FB6   18           		CLC
  5FB7   A5   B0      		LDA TEMPN4
  5FB9   69   0A      		ADC #LININC
  5FBB   85   B0      		STA TEMPN4
  5FBD   90   C3      		BCC DEFUNW
  5FBF   E6   B1      		INC TEMPN4+1
  5FC1   10   BF      		BPL DEFUNW
  5FC3   4C   82   4E 		JMP EDLERR
  5FC6   A9   00      	DEFNWE:	LDA #$00
  5FC8   A6   B3      		LDX ANSN1	;LISTT
  5FCA   95   00      		STA $00,X
  5FCC   95   01      		STA $01,X
  5FCE   A5   AA      	DEFUNX:	LDA TEMPN1
  5FD0   C5   16      		CMP VSP
  5FD2   D0   06      		BNE DEFNX1
  5FD4   A5   AB      		LDA TEMPN1+1
  5FD6   C5   17      		CMP VSP+1
  5FD8   F0   13      		BEQ DEFNXE
  5FDA   A2   AE      	DEFNX1:	LDX #TEMPN3
  5FDC   20   80   52 		JSR VPOP
  5FDF   A6   B3      		LDX ANSN1
  5FE1   86   B2      		STX ANSN
  5FE3   A0   AE      		LDY #TEMPN3
  5FE5   A9   00      		LDA #LIST
  5FE7   20   0F   53 		JSR CONS
  5FEA   4C   CE   5F 		JMP DEFUNX
  5FED   A6   B3      	DEFNXE:	LDX ANSN1
  5FEF   A5   C0      		LDA ANSN2
  5FF1   4C   05   5C 		JMP STUFF
  5FF4   A6   B3      	DEFNER:	LDX ANSN1
  5FF6   4C   F8   7E 		JMP STTLR4	;(ERROR XWTA,CURTOK)
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-120
NLOGO	MISCELLANEOUS AND EVALUATOR UTILITY ROUTINES

  5FF9   86   B3      	INTERN:	STX ANSN1	;ANSN1 IS STRING PTR.
  5FFB   84   C0      		STY ANSN2	;ANSN2 IS ANS PTR.
  5FFD   20   4E   52 		JSR VPUSHP
  6000   A5   92      		LDA OBLIST	;OBFIND starts
  6002   85   B0      		STA TEMPN4
  6004   A5   93      		LDA OBLIST+1
  6006   85   B1      		STA TEMPN4+1	;TEMPN4 IS OB_PTR
  6008   F0   5F      		BEQ OBFNFE
  600A   A0   00      	OBFW:	LDY #$00
  600C   A6   C0      		LDX ANSN2
  600E   B1   B0      		LDA (TEMPN4),Y
  6010   95   00      		STA $00,X
  6012   C8           		INY
  6013   B1   B0      		LDA (TEMPN4),Y
  6015   95   01      		STA $01,X	;(CAR) TO ANS
  6017   A0   B4      		LDY #TEMPN5	;TEMPN5 IS PNAME
  6019   20   83   59 		JSR GETPNM
  601C   A6   B3      		LDX ANSN1	;MATCH2 starts (STRING1 IS TEMPN5)
  601E   B5   00      		LDA $00,X
  6020   85   A6      		STA TEMPNH
  6022   B5   01      		LDA $01,X
  6024   85   A7      		STA TEMPNH+1	;TEMPNH IS STRING2
  6026   A5   A7      	MTC2W:	LDA TEMPNH+1
  6028   D0   09      		BNE MTC2W1
  602A   A5   B5      		LDA TEMPN5+1	;IF STRING2 IS 0 AND STRING1 ISN'T, NOT FOUND
  602C   D0   2D      		BNE OBFNF
  602E   A2   B4      		LDX #TEMPN5
  6030   4C   80   52 		JMP VPOP	;Pop the Vpushed string
  6033   A0   00      	MTC2W1:	LDY #$00
  6035   B1   A6      		LDA (TEMPNH),Y
  6037   D1   B4      		CMP (TEMPN5),Y
  6039   D0   20      		BNE OBFNF
  603B   C8           		INY
  603C   B1   A6      		LDA (TEMPNH),Y
  603E   D1   B4      		CMP (TEMPN5),Y
  6040   D0   19      		BNE OBFNF
  6042   C8           		INY
  6043   B1   A6      		LDA (TEMPNH),Y
  6045   AA           		TAX
  6046   C8           		INY
  6047   B1   A6      		LDA (TEMPNH),Y
  6049   85   A7      		STA TEMPNH+1
  604B   86   A6      		STX TEMPNH	;(CDR)
  604D   88           		DEY
  604E   B1   B4      		LDA (TEMPN5),Y
  6050   AA           		TAX
  6051   C8           		INY
  6052   B1   B4      		LDA (TEMPN5),Y
  6054   85   B5      		STA TEMPN5+1
  6056   86   B4      		STX TEMPN5	;(CDR)
  6058   4C   26   60 		JMP MTC2W	;TRY NEXT TWO CHARACTERS
  605B   A0   02      	OBFNF:	LDY #$02	;TRY NEXT OBLIST OBJECT
  605D   B1   B0      		LDA (TEMPN4),Y	;(OB_PTR)
  605F   AA           		TAX
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-121
NLOGO	MISCELLANEOUS AND EVALUATOR UTILITY ROUTINES

  6060   C8           		INY
  6061   B1   B0      		LDA (TEMPN4),Y
  6063   85   B1      		STA TEMPN4+1
  6065   86   B0      		STX TEMPN4	;(CDR)
  6067   D0   A1      		BNE OBFW
  6069   A6   B3      	OBFNFE:	LDX ANSN1	;IT'S NOT ON THE OBLIST
  606B   20   80   52 		JSR VPOP	;GET STRING BACK
  606E   A5   59      		LDA SOBLST	;SOBFIND starts
  6070   A6   C0      		LDX ANSN2	;ANS BECOMES SOBLIST POINTER
  6072   95   00      		STA $00,X
  6074   A5   5A      		LDA SOBLST+1
  6076   95   01      		STA $01,X
  6078   A6   C0      	SBFW:	LDX ANSN2	;OBJECT POINTER
  607A   B5   00      	SBFWX:	LDA $00,X
  607C   C5   5B      		CMP SOBTOP
  607E   D0   31      		BNE SBFW1
  6080   B5   01      		LDA $01,X
  6082   C5   5C      		CMP SOBTOP+1
  6084   D0   2B      		BNE SBFW1
  6086   A6   B3      	SBFWEN:	LDX ANSN1	;STRING
  6088   A0   00      	INTRNX:	LDY #$00	;Not found anywhere
  608A   84   AB      		STY TEMPN1+1
  608C   C8           		INY
  608D   84   AA      		STY TEMPN1
  608F   A5   C0      		LDA ANSN2
  6091   85   B2      		STA ANSN
  6093   A0   AA      		LDY #TEMPN1	;(NOVALUE)
  6095   A9   00      		LDA #LIST
  6097   20   0F   53 		JSR CONS
  609A   A5   C0      		LDA ANSN2
  609C   85   B2      		STA ANSN	;(ANS)
  609E   AA           		TAX
  609F   A0   AA      		LDY #TEMPN1	;(NOVALUE)
  60A1   A9   01      		LDA #ATOM
  60A3   20   0F   53 		JSR CONS
  60A6   A9   00      		LDA #LIST
  60A8   A2   92      		LDX #OBLIST
  60AA   86   B2      		STX ANSN
  60AC   A4   C0      		LDY ANSN2	;ANS
  60AE   4C   0F   53 		JMP CONS
  60B1   B5   00      	SBFW1:	LDA $00,X
  60B3   85   A6      		STA TEMPNH
  60B5   B5   01      		LDA $01,X
  60B7   85   A7      		STA TEMPNH+1
  60B9   A0   02      		LDY #$02
  60BB   B1   A6      		LDA (TEMPNH),Y
  60BD   C8           		INY
  60BE   18           		CLC
  60BF   69   03      		ADC #$03
  60C1   85   AC      		STA TEMPN2	;TEMPN2 IS SOBNAME
  60C3   B1   A6      		LDA (TEMPNH),Y
  60C5   69   00      		ADC #$00
  60C7   85   AD      		STA TEMPN2+1	;(CDR)
  60C9   A6   B3      		LDX ANSN1	;ANSN1 POINTS TO STRING
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-122
NLOGO	MISCELLANEOUS AND EVALUATOR UTILITY ROUTINES

  60CB   B5   00      		LDA $00,X
  60CD   85   A6      		STA TEMPNH
  60CF   B5   01      		LDA $01,X
  60D1   85   A7      		STA TEMPNH+1	;TEMPNH BECOMES PNAME
  60D3   A5   A6      	MTC1W:	LDA TEMPNH
  60D5   D0   04      		BNE MTC1W1
  60D7   A5   A7      		LDA TEMPNH+1
  60D9   F0   3F      		BEQ SBFNF
  60DB   A0   00      	MTC1W1:	LDY #$00
  60DD   B1   A6      		LDA (TEMPNH),Y
  60DF   85   A8      		STA TEMPN	;TEMPN IS TEMP
  60E1   C8           		INY
  60E2   B1   A6      		LDA (TEMPNH),Y
  60E4   85   A9      		STA TEMPN+1	;(CAR)
  60E6   88           		DEY
  60E7   B1   AC      		LDA (TEMPN2),Y
  60E9   C5   A8      		CMP TEMPN
  60EB   D0   2D      		BNE SBFNF
  60ED   E6   AC      		INC TEMPN2
  60EF   D0   02      		BNE ADHK21
  60F1   E6   AD      		INC TEMPN2+1
  60F3   B1   AC      	ADHK21:	LDA (TEMPN2),Y
  60F5   C5   A9      		CMP TEMPN+1
  60F7   D0   21      		BNE SBFNF
  60F9   A0   02      		LDY #$02
  60FB   B1   A6      		LDA (TEMPNH),Y	;TEMPNH IS PNAME
  60FD   AA           		TAX
  60FE   C8           		INY
  60FF   B1   A6      		LDA (TEMPNH),Y
  6101   85   A7      		STA TEMPNH+1
  6103   86   A6      		STX TEMPNH	;(CDR)
  6105   A0   00      		LDY #$00
  6107   B1   AC      		LDA (TEMPN2),Y
  6109   F0   0E      		BEQ MTC1WF
  610B   E6   AC      		INC TEMPN2
  610D   D0   02      		BNE MTC1WE
  610F   E6   AD      		INC TEMPN2+1
  6111   A5   A7      	MTC1WE:	LDA TEMPNH+1
  6113   D0   C6      		BNE MTC1W1
  6115   B1   AC      		LDA (TEMPN2),Y
  6117   D0   01      		BNE SBFNF
  6119   60           	MTC1WF:	RTS
  611A   18           	SBFNF:	CLC		;NOT THIS SOBLIST OBJECT
  611B   A6   C0      		LDX ANSN2	;ANS
  611D   B5   00      		LDA $00,X
  611F   69   04      		ADC #$04
  6121   95   00      		STA $00,X
  6123   90   02      		BCC SBFWJ
  6125   F6   01      		INC $01,X
  6127   4C   7A   60 	SBFWJ:	JMP SBFWX
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-123
NLOGO	MISCELLANEOUS AND EVALUATOR UTILITY ROUTINES

                      	;Note - the only temporary variables which can be passed to ERROR
                      	;as pointers are TEMPN6, TEMPN7, TEMPX1, and TEMPX2. PTRXOK and
                      	;PTRYOK insure that the X or Y args point to safe temporaries.
                      
  612A   B5   00      	PTRXOK:	LDA $00,X
  612C   85   BE      		STA TEMPX2
  612E   B5   01      		LDA $01,X
  6130   85   BF      		STA TEMPX2+1
  6132   A2   BE      		LDX #TEMPX2
  6134   60           		RTS
                      
  6135   B9   00   00 	PTRYOK:	LDA $00,Y
  6138   85   BE      		STA TEMPX2
  613A   B9   01   00 		LDA $01,Y
  613D   85   BF      		STA TEMPX2+1
  613F   A0   BE      		LDY #TEMPX2
  6141   60           		RTS
                      
  6142   85   10      	ERROR:	STA ERRFLG
  6144   48           		PHA
  6145   85   C0      		STA ANSN2
  6147   06   C0      		ASL ANSN2	;Error pointers are stored two bytes apart
  6149   86   C1      		STX ANSN3
  614B   84   B3      		STY ANSN1
  614D   A5   09      		LDA GRPHCS
  614F   F0   03      		BEQ ERRO1
  6151   AD   53   C0 		LDA $C053	;If FULL Graphics, make MIXED
  6154   20   6C   72 	ERRO1:	JSR RSTIO
  6157   20   69   83 		JSR EXTEDT	;Zap out of EDIT or CHANGE mode if necessary
  615A   68           		PLA
  615B   A6   11      		LDX RETADR
  615D   9A           		TXS		;Restore all necessary return addresses
  615E   C9   13      		CMP #XZAP
  6160   F0   44      		BEQ ERRZ1
  6162   C9   1A      		CMP #XARGTB
  6164   F0   46      		BEQ ERRZ2
  6166   18           		CLC		;The Error-table holds pointers to the error-strings
  6167   A9   D8      		LDA #ERRTBL&$FF
  6169   65   C0      		ADC ANSN2
  616B   85   BA      		STA TEMPN8
  616D   A9   D0      		LDA #ERRTBL^
  616F   69   00      		ADC #$00
  6171   85   BB      		STA TEMPN8+1
  6173   AD   83   C0 		LDA GETRM2	;Ghost-memory bank 2, error table
  6176   E6   55      		INC BANK4K
  6178   A0   00      		LDY #$00
  617A   B1   BA      		LDA (TEMPN8),Y
  617C   AA           		TAX
  617D   C8           		INY
  617E   B1   BA      		LDA (TEMPN8),Y
  6180   85   BB      		STA TEMPN8+1
  6182   86   BA      		STX TEMPN8
  6184   AD   83   C0 	ERRW:	LDA GETRM2	;Ghost-memory bank 2, error messages
  6187   E6   55      		INC BANK4K
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-124
NLOGO	MISCELLANEOUS AND EVALUATOR UTILITY ROUTINES

  6189   A0   00      		LDY #$00
  618B   B1   BA      		LDA (TEMPN8),Y
  618D   AE   8B   C0 		LDX GETRM1	;Ghost-memory bank 2 disable
  6190   AE   8B   C0 		LDX GETRM1
  6193   C6   55      		DEC BANK4K
  6195   AA           		TAX
  6196   F0   2F      		BEQ ERRW2
  6198   C9   FF      		CMP #$FF
  619A   F0   3A      		BEQ ERRWE
  619C   C9   01      		CMP #$01
  619E   F0   22      		BEQ ERRW1
  61A0   20   90   72 		JSR TPCHR
  61A3   4C   CE   61 		JMP ERRW4
  61A6   20   28   62 	ERRZ1:	JSR ZAPMSG
  61A9   4C   D6   61 		JMP ERRWE
  61AC   A6   C1      	ERRZ2:	LDX ANSN3
  61AE   20   3F   67 		JSR TYPFIX
  61B1   A2   EE      		LDX #ERRM4&$FF
  61B3   A0   DA      		LDY #ERRM4^
  61B5   20   90   54 		JSR PRTSTR
  61B8   A9   00      		LDA #$00
  61BA   A6   B3      		LDX ANSN1
  61BC   20   F6   65 		JSR LTYPE
  61BF   4C   D6   61 		JMP ERRWE
  61C2   A6   C1      	ERRW1:	LDX ANSN3
  61C4   4C   C9   61 		JMP ERRW3
  61C7   A6   B3      	ERRW2:	LDX ANSN1
  61C9   A9   00      	ERRW3:	LDA #$00
  61CB   20   F6   65 		JSR LTYPE
  61CE   E6   BA      	ERRW4:	INC TEMPN8
  61D0   D0   B2      		BNE ERRW
  61D2   E6   BB      		INC TEMPN8+1
  61D4   D0   AE      		BNE ERRW	;(Always)
  61D6   A9   00      	ERRWE:	LDA #$00
  61D8   20   1E   51 		JSR CLMK5	;Clear all the MARK pointers
  61DB   A5   7C      		LDA LEVNUM
  61DD   D0   04      		BNE ERRWE1
  61DF   A5   7D      		LDA LEVNUM+1
  61E1   F0   34      		BEQ ERR1
  61E3   20   67   72 	ERRWE1:	JSR BREAK1
  61E6   A2   D5      		LDX #ERRM1&$FF
  61E8   A0   DA      		LDY #ERRM1^
  61EA   20   90   54 		JSR PRTSTR
  61ED   A2   7C      		LDX #LEVNUM
  61EF   20   3F   67 		JSR TYPFIX
  61F2   A2   DF      		LDX #ERRM2&$FF
  61F4   A0   DA      		LDY #ERRM2^
  61F6   20   90   54 		JSR PRTSTR
  61F9   A2   74      		LDX #LINNUM
  61FB   20   3F   67 		JSR TYPFIX
  61FE   A2   E9      		LDX #ERRM3&$FF
  6200   A0   DA      		LDY #ERRM3^
  6202   20   90   54 		JSR PRTSTR
  6205   A0   06      		LDY #$06	;(SF_UFUN = 6.)
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-125
NLOGO	MISCELLANEOUS AND EVALUATOR UTILITY ROUTINES

  6207   B1   6C      		LDA (FRAME),Y
  6209   85   BA      		STA TEMPN8
  620B   C8           		INY
  620C   B1   6C      		LDA (FRAME),Y
  620E   85   BB      		STA TEMPN8+1	;(CAR)
  6210   A9   00      		LDA #$00
  6212   A2   BA      		LDX #TEMPN8
  6214   20   F6   65 		JSR LTYPE
  6217   20   67   72 	ERR1:	JSR BREAK1
  621A   A5   12      		LDA ERRRET
  621C   A4   13      		LDY ERRRET+1
  621E   20   3C   4A 		JSR RSTERR
  6221   85   A6      		STA TEMPNH
  6223   84   A7      		STY TEMPNH+1
  6225   6C   A6   00 		JMP (TEMPNH)
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-126
NLOGO	MISCELLANEOUS AND EVALUATOR UTILITY ROUTINES

                      	;ZAPMSG is a special case of ERROR, for error XZAP. It displays the
                      	;appropriate error message.
                      
  6228   20   67   72 	ZAPMSG:	JSR BREAK1
  622B   20   67   72 		JSR BREAK1
  622E   A5   C1      		LDA ANSN3
  6230   C9   01      		CMP #XNSTRN
  6232   F0   0F      		BEQ ZPC1
  6234   C9   00      		CMP #XNSTOR
  6236   F0   0B      		BEQ ZPC1
  6238   C9   02      		CMP #XSTOP
  623A   F0   0E      		BEQ ZPC2
  623C   C9   03      		CMP #XEXCED
  623E   F0   11      		BEQ ZPC3
  6240   20   C8   51 		JSR SYSBUG
  6243   A2   8B      	ZPC1:	LDX #ZPMSG1&$FF
  6245   A0   DA      		LDY #ZPMSG1^	;"No Storage Left!"
  6247   4C   90   54 		JMP PRTSTR
  624A   A2   9D      	ZPC2:	LDX #ZPMSG2&$FF
  624C   A0   DA      		LDY #ZPMSG2^	;"Stopped!"
  624E   4C   90   54 		JMP PRTSTR
  6251   A2   A7      	ZPC3:	LDX #ZPMSG3&$FF
  6253   A0   DA      		LDY #ZPMSG3^	;"Evaluator Overflow"
  6255   4C   90   54 		JMP PRTSTR
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-127
NLOGO	GARBAGE COLLECTOR

                      	.SBTTL	Garbage Collector
  6258   BA           	GARCOL:	TSX
  6259   86   11      		STX RETADR
  625B   A9   8E      		LDA #GCLERR&$FF
  625D   85   12      		STA ERRRET
  625F   A9   63      		LDA #GCLERR^
  6261   85   13      		STA ERRRET+1
  6263   20   59   65 		JSR SWAPT1
  6266   A5   59      		LDA SOBLST
  6268   85   AE      		STA TEMPN3	;TEMPN3 is INDEX
  626A   A5   5A      		LDA SOBLST+1
  626C   85   AF      		STA TEMPN3+1
  626E   A2   AE      	GCLP2:	LDX #TEMPN3
  6270   20   F9   63 		JSR MARK
  6273   18           		CLC
  6274   A5   AE      		LDA TEMPN3
  6276   69   04      		ADC #$04
  6278   85   AE      		STA TEMPN3
  627A   90   02      		BCC GCLP2A
  627C   E6   AF      		INC TEMPN3+1
  627E   A5   AE      	GCLP2A:	LDA TEMPN3
  6280   C5   5B      		CMP SOBTOP
  6282   D0   EA      		BNE GCLP2
  6284   A5   AF      		LDA TEMPN3+1
  6286   C5   5C      		CMP SOBTOP+1
  6288   D0   E4      		BNE GCLP2
  628A   A9   F7      		LDA #VPDLBA&$FF
  628C   85   AE      		STA TEMPN3
  628E   A9   1F      		LDA #VPDLBA^
  6290   85   AF      		STA TEMPN3+1
  6292   A5   AE      	GCLP3:	LDA TEMPN3
  6294   C5   16      		CMP VSP
  6296   D0   06      		BNE GCLP3X
  6298   A5   AF      		LDA TEMPN3+1
  629A   C5   17      		CMP VSP+1
  629C   F0   1B      		BEQ GCLP3A
  629E   A0   00      	GCLP3X:	LDY #$00
  62A0   B1   AE      		LDA (TEMPN3),Y
  62A2   85   A8      		STA TEMPN
  62A4   C8           		INY
  62A5   B1   AE      		LDA (TEMPN3),Y
  62A7   85   A9      		STA TEMPN+1	;(GETBAR)
  62A9   20   01   64 		JSR MARKX	;Expects TEMPN as node
  62AC   38           		SEC
  62AD   A5   AE      		LDA TEMPN3
  62AF   E9   02      		SBC #$02
  62B1   85   AE      		STA TEMPN3
  62B3   B0   DD      		BCS GCLP3
  62B5   C6   AF      		DEC TEMPN3+1
  62B7   D0   D9      		BNE GCLP3	;(Always)
  62B9   A5   6C      	GCLP3A:	LDA FRAME
  62BB   85   AE      		STA TEMPN3	;TEMPN3 is FRAMEPTR
  62BD   A5   6D      		LDA FRAME+1
  62BF   F0   49      		BEQ GCOL1
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-128
NLOGO	GARBAGE COLLECTOR

  62C1   85   AF      		STA TEMPN3+1
  62C3   A0   0E      	GCLP4:	LDY #$0E	;(SF_NUMBER_BINDINGS = 14.)
  62C5   B1   AE      		LDA (TEMPN3),Y
  62C7   F0   33      		BEQ GCLP5E
  62C9   85   B3      		STA ANSN1	;ANSN1 is NARGS
  62CB   18           		CLC
  62CC   A5   AE      		LDA TEMPN3
  62CE   69   12      		ADC #$12	;PTR1 points to first binding pair
  62D0   85   B0      		STA TEMPN4	;TEMPN4 is PTR1
  62D2   A5   AF      		LDA TEMPN3+1
  62D4   69   00      		ADC #$00
  62D6   85   B1      		STA TEMPN4+1
  62D8   A0   02      	GCLP5:	LDY #$02
  62DA   B1   B0      		LDA (TEMPN4),Y	;See if it's a fun/frame pair
  62DC   6A           		ROR A
  62DD   B0   0E      		BCS GCLP5A
  62DF   A0   00      		LDY #$00	;Nope, get value and mark
  62E1   B1   B0      		LDA (TEMPN4),Y
  62E3   85   A8      		STA TEMPN
  62E5   C8           		INY
  62E6   B1   B0      		LDA (TEMPN4),Y
  62E8   85   A9      		STA TEMPN+1
  62EA   20   01   64 		JSR MARKX	;Expects TEMPN as node
  62ED   18           	GCLP5A:	CLC
  62EE   A5   B0      		LDA TEMPN4
  62F0   69   04      		ADC #$04
  62F2   85   B0      		STA TEMPN4
  62F4   90   02      		BCC GCLP5B
  62F6   E6   B1      		INC TEMPN4+1
  62F8   C6   B3      	GCLP5B:	DEC ANSN1
  62FA   D0   DC      		BNE GCLP5
  62FC   A0   00      	GCLP5E:	LDY #$00	;(SF_PREVIOUS_FRAME)
  62FE   B1   AE      		LDA (TEMPN3),Y
  6300   AA           		TAX
  6301   C8           		INY
  6302   B1   AE      		LDA (TEMPN3),Y
  6304   85   AF      		STA TEMPN3+1
  6306   86   AE      		STX TEMPN3	;(GETBAR)
  6308   D0   B9      		BNE GCLP4
  630A   A9   88      	GCOL1:	LDA #GCVST	;Mark all G.C.-protected variables
  630C   85   B3      		STA ANSN1
  630E   A6   B3      	GCOL1L:	LDX ANSN1
  6310   20   F9   63 		JSR MARK
  6313   E6   B3      		INC ANSN1
  6315   E6   B3      		INC ANSN1
  6317   A5   B3      		LDA ANSN1
  6319   C9   9E      		CMP #GCVEND
  631B   D0   F1      		BNE GCOL1L
  631D   A2   18      		LDX #SIZE1
  631F   A0   1C      		LDY #AREA1
  6321   20   C0   63 		JSR MARKA
  6324   A2   1A      		LDX #SIZE2
  6326   A0   1E      		LDY #AREA2
  6328   20   C0   63 		JSR MARKA
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-129
NLOGO	GARBAGE COLLECTOR

  632B   A9   00      		LDA #$00
  632D   85   5F      		STA FRLIST
  632F   85   60      		STA FRLIST+1
  6331   85   C3      		STA NNODES
  6333   85   C4      		STA NNODES+1
  6335   A9   00      		LDA #BIGBAS&$FF
  6337   85   A6      		STA TEMPNH
  6339   A9   D0      		LDA #BIGBAS^
  633B   85   A7      		STA TEMPNH+1	;Nodespace pointer
  633D   A9   60      		LDA #SINODS&$FF
  633F   85   A8      		STA TEMPN
  6341   A9   F6      		LDA #SINODS^
  6343   85   A9      		STA TEMPN+1	;Typebase pointer
  6345   A0   00      	GCLP6:	LDY #$00
  6347   B1   A8      		LDA (TEMPN),Y
  6349   2A           		ROL A		;Type bit
  634A   B0   16      		BCS GCLP6C
  634C   A0   02      		LDY #$02
  634E   A5   5F      		LDA FRLIST
  6350   91   A6      		STA (TEMPNH),Y
  6352   C8           		INY
  6353   A5   60      		LDA FRLIST+1
  6355   91   A6      		STA (TEMPNH),Y	;(RPLACD)
  6357   A5   A6      		LDA TEMPNH
  6359   85   5F      		STA FRLIST
  635B   A5   A7      		LDA TEMPNH+1
  635D   85   60      		STA FRLIST+1
  635F   4C   68   63 		JMP GCLP6F
  6362   E6   C3      	GCLP6C:	INC NNODES
  6364   D0   02      		BNE GCLP6F
  6366   E6   C4      		INC NNODES+1
  6368   18           	GCLP6F:	CLC
  6369   A5   A6      		LDA TEMPNH
  636B   69   04      		ADC #$04
  636D   85   A6      		STA TEMPNH
  636F   90   02      		BCC GCLP6D
  6371   E6   A7      		INC TEMPNH+1
  6373   E6   A8      	GCLP6D:	INC TEMPN
  6375   D0   02      		BNE GCLP6E
  6377   E6   A9      		INC TEMPN+1
  6379   A5   A8      	GCLP6E:	LDA TEMPN
  637B   C9   F8      		CMP #TYPEND&$FF
  637D   D0   C6      		BNE GCLP6
  637F   A5   A9      		LDA TEMPN+1
  6381   C9   FF      		CMP #TYPEND^
  6383   D0   C0      		BNE GCLP6
  6385   20   9D   63 		JSR CLRMRK
  6388   20   67   65 		JSR SWAPT2
  638B   4C   3C   4A 		JMP RSTERR
  638E   A9   00      	GCLERR:	LDA #$00
  6390   85   5F      		STA FRLIST
  6392   85   60      		STA FRLIST+1
  6394   20   9D   63 		JSR CLRMRK
  6397   20   67   65 		JSR SWAPT2
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-130
NLOGO	GARBAGE COLLECTOR

  639A   4C   CD   47 		JMP ERROR1
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-131
NLOGO	GARBAGE COLLECTOR

  639D   A9   60      	CLRMRK:	LDA #SINODS&$FF
  639F   85   A6      		STA TEMPNH
  63A1   A9   F6      		LDA #SINODS^
  63A3   85   A7      		STA TEMPNH+1	;TEMPN is pointer to Typebase
  63A5   A0   00      		LDY #$00
  63A7   B1   A6      	GCLP1:	LDA (TEMPNH),Y
  63A9   29   7F      		AND #$7F	;Set Mark bit to 0 (False)
  63AB   91   A6      		STA (TEMPNH),Y
  63AD   E6   A6      		INC TEMPNH
  63AF   D0   02      		BNE GCLP1A
  63B1   E6   A7      		INC TEMPNH+1
  63B3   A5   A6      	GCLP1A:	LDA TEMPNH
  63B5   C9   F8      		CMP #TYPEND&$FF
  63B7   D0   EE      		BNE GCLP1
  63B9   A5   A7      		LDA TEMPNH+1
  63BB   C9   FF      		CMP #TYPEND^
  63BD   D0   E8      		BNE GCLP1
  63BF   60           	MRKRTS:	RTS
                      
  63C0   B5   00      	MARKA:	LDA $00,X
  63C2   85   A8      		STA TEMPN
  63C4   B5   01      		LDA $01,X
  63C6   85   A9      		STA TEMPN+1	;TEMPN is SIZE
  63C8   B9   00   00 		LDA $00,Y
  63CB   85   A6      		STA TEMPNH
  63CD   B9   01   00 		LDA $01,Y
  63D0   85   A7      		STA TEMPNH+1
  63D2   20   65   5D 		JSR TYPACS	;TEMPNH becomes address of typecodes
  63D5   A5   A9      	MRKAW:	LDA TEMPN+1
  63D7   30   E6      		BMI MRKRTS
  63D9   D0   04      		BNE MRKAW1
  63DB   A5   A8      		LDA TEMPN
  63DD   F0   E0      		BEQ MRKRTS
  63DF   B1   A6      	MRKAW1:	LDA (TEMPNH),Y
  63E1   09   80      		ORA #$80	;Mark the word
  63E3   91   A6      		STA (TEMPNH),Y
  63E5   E6   A6      		INC TEMPNH
  63E7   D0   02      		BNE MRKAW2
  63E9   E6   A7      		INC TEMPNH+1
  63EB   38           	MRKAW2:	SEC
  63EC   A5   A8      		LDA TEMPN
  63EE   E9   01      		SBC #$01
  63F0   85   A8      		STA TEMPN
  63F2   B0   E1      		BCS MRKAW
  63F4   C6   A9      		DEC TEMPN+1
  63F6   4C   D5   63 		JMP MRKAW
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-132
NLOGO	GARBAGE COLLECTOR

  63F9   B5   00      	MARK:	LDA $00,X
  63FB   85   A8      		STA TEMPN
  63FD   B5   01      		LDA $01,X
  63FF   85   A9      		STA TEMPN+1	;TEMPN is INDEX
  6401   A2   FF      	MARKX:	LDX #$FF
  6403   A0   FF      		LDY #$FF
  6405   20   37   52 		JSR PUSH
  6408   A9   FF      	MRKW:	LDA #$FF
  640A   C5   A8      		CMP TEMPN
  640C   D0   04      		BNE MRKW1
  640E   C5   A9      		CMP TEMPN+1
  6410   F0   AD      		BEQ MRKRTS
  6412   A5   A9      	MRKW1:	LDA TEMPN+1
  6414   F0   0E      		BEQ MRKW3
  6416   85   A7      		STA TEMPNH+1
  6418   A5   A8      		LDA TEMPN
  641A   85   A6      		STA TEMPNH
  641C   20   65   5D 		JSR TYPACS
  641F   85   B2      		STA ANSN
  6421   2A           		ROL A
  6422   90   0B      		BCC MRKW2
  6424   20   AB   52 	MRKW3:	JSR STKTS1
  6427   A2   A8      		LDX #TEMPN
  6429   20   67   52 		JSR POP
  642C   4C   08   64 		JMP MRKW
  642F   A5   B2      	MRKW2:	LDA ANSN
  6431   09   80      		ORA #$80
  6433   91   A6      		STA (TEMPNH),Y
  6435   29   7F      		AND #$7F
  6437   C9   00      		CMP #LIST
  6439   F0   45      		BEQ MRKCL
  643B   C9   02      		CMP #STRING
  643D   F0   2B      		BEQ MRKCF
  643F   C9   03      		CMP #FIX
  6441   F0   E1      		BEQ MRKW3
  6443   C9   04      		CMP #FLO
  6445   F0   DD      		BEQ MRKW3
  6447   C9   0C      		CMP #FLIST
  6449   F0   1F      		BEQ MRKCF
  644B   C9   06      		CMP #UFUN
  644D   F0   48      		BEQ MRKCU
  644F   C9   07      		CMP #SATOM
  6451   F0   28      		BEQ MRKCS
  6453   C9   01      		CMP #ATOM
  6455   F0   29      		BEQ MRKCL
  6457   C9   09      		CMP #DATOM
  6459   F0   25      		BEQ MRKCL
  645B   C9   0A      		CMP #LATOM
  645D   F0   21      		BEQ MRKCL
  645F   C9   08      		CMP #QATOM
  6461   F0   1D      		BEQ MRKCL
  6463   C9   0B      		CMP #FPACK
  6465   F0   47      		BEQ MRKCP
  6467   20   C8   51 		JSR SYSBUG
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-133
NLOGO	GARBAGE COLLECTOR

  646A   A0   02      	MRKCF:	LDY #$02
  646C   B1   A8      	MRKCN:	LDA (TEMPN),Y
  646E   AA           		TAX
  646F   C8           		INY
  6470   B1   A8      		LDA (TEMPN),Y
  6472   F0   B0      		BEQ MRKW3
  6474   A8           		TAY
  6475   20   37   52 	MRKCF1:	JSR PUSH
  6478   4C   24   64 		JMP MRKW3
  647B   A0   00      	MRKCS:	LDY #$00
  647D   4C   6C   64 		JMP MRKCN
  6480   A5   A8      	MRKCL:	LDA TEMPN
  6482   29   FC      		AND #$FC
  6484   85   A8      		STA TEMPN
  6486   A0   00      		LDY #$00
  6488   B1   A8      		LDA (TEMPN),Y
  648A   AA           		TAX
  648B   C8           		INY
  648C   B1   A8      		LDA (TEMPN),Y
  648E   F0   DA      		BEQ MRKCF
  6490   A8           		TAY
  6491   20   37   52 	MRKCL1:	JSR PUSH
  6494   4C   6A   64 		JMP MRKCF
  6497   18           	MRKCU:	CLC
  6498   A5   A8      		LDA TEMPN
  649A   69   04      		ADC #$04
  649C   85   A6      		STA TEMPNH
  649E   A5   A9      		LDA TEMPN+1
  64A0   69   00      		ADC #$00
  64A2   85   A7      		STA TEMPNH+1
  64A4   20   65   5D 		JSR TYPACS
  64A7   09   80      		ORA #$80
  64A9   91   A6      		STA (TEMPNH),Y
  64AB   4C   6A   64 		JMP MRKCF
  64AE   A0   01      	MRKCP:	LDY #$01
  64B0   84   B2      		STY ANSN	;ANSN is FIRSTLINE
  64B2   88           		DEY
  64B3   B1   A8      	MRKCP1:	LDA (TEMPN),Y
  64B5   85   AA      		STA TEMPN1	;TEMPN1 is LINE
  64B7   C8           		INY
  64B8   B1   A8      		LDA (TEMPN),Y
  64BA   85   AB      		STA TEMPN1+1	;(GETBAR)
  64BC   C8           		INY
  64BD   B1   A8      		LDA (TEMPN),Y
  64BF   85   AC      		STA TEMPN2	;TEMPN2 is LINE_END
  64C1   C8           		INY
  64C2   B1   A8      		LDA (TEMPN),Y
  64C4   85   AD      		STA TEMPN2+1	;(GETBAR)
  64C6   A5   AD      	MRKPW:	LDA TEMPN2+1
  64C8   D0   17      		BNE MRKPW1
  64CA   18           		CLC
  64CB   A5   A8      		LDA TEMPN
  64CD   69   02      		ADC #$02
  64CF   85   A6      		STA TEMPNH
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-134
NLOGO	GARBAGE COLLECTOR

  64D1   A5   A9      		LDA TEMPN+1
  64D3   69   00      		ADC #$00
  64D5   85   A7      		STA TEMPNH+1
  64D7   20   65   5D 		JSR TYPACS
  64DA   09   80      		ORA #$80
  64DC   91   A6      		STA (TEMPNH),Y
  64DE   4C   24   64 		JMP MRKW3
  64E1   18           	MRKPW1:	CLC
  64E2   A5   A8      		LDA TEMPN
  64E4   69   02      		ADC #$02
  64E6   85   A6      		STA TEMPNH
  64E8   A5   A9      		LDA TEMPN+1
  64EA   69   00      		ADC #$00
  64EC   85   A7      		STA TEMPNH+1
  64EE   20   65   5D 		JSR TYPACS
  64F1   09   80      		ORA #$80
  64F3   91   A6      		STA (TEMPNH),Y
  64F5   A5   AA      		LDA TEMPN1
  64F7   85   A6      		STA TEMPNH
  64F9   A5   AB      		LDA TEMPN1+1
  64FB   85   A7      		STA TEMPNH+1
  64FD   20   65   5D 		JSR TYPACS
  6500   09   80      		ORA #$80
  6502   91   A6      		STA (TEMPNH),Y
  6504   A5   B2      		LDA ANSN
  6506   D0   0B      		BNE MRKPW2
  6508   18           		CLC
  6509   A5   AA      		LDA TEMPN1
  650B   69   02      		ADC #$02
  650D   85   AA      		STA TEMPN1
  650F   90   02      		BCC MRKPW2
  6511   E6   AB      		INC TEMPN1+1
  6513   A9   00      	MRKPW2:	LDA #$00
  6515   85   B2      		STA ANSN
  6517   A5   AA      	MRKPX:	LDA TEMPN1
  6519   C5   AC      		CMP TEMPN2
  651B   D0   13      		BNE MRKPX1
  651D   A5   AB      		LDA TEMPN1+1
  651F   C5   AD      		CMP TEMPN2+1
  6521   D0   0D      		BNE MRKPX1
  6523   18           	MRKPXE:	CLC
  6524   A5   A8      		LDA TEMPN
  6526   69   02      		ADC #$02
  6528   85   A8      		STA TEMPN
  652A   90   87      		BCC MRKCP1
  652C   E6   A9      		INC TEMPN+1
  652E   D0   83      		BNE MRKCP1	;(Always)
  6530   A5   AA      	MRKPX1:	LDA TEMPN1
  6532   85   A6      		STA TEMPNH
  6534   A5   AB      		LDA TEMPN1+1
  6536   85   A7      		STA TEMPNH+1
  6538   20   65   5D 		JSR TYPACS
  653B   09   80      		ORA #$80
  653D   91   A6      		STA (TEMPNH),Y
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-135
NLOGO	GARBAGE COLLECTOR

  653F   B1   AA      		LDA (TEMPN1),Y
  6541   AA           		TAX
  6542   C8           		INY
  6543   B1   AA      		LDA (TEMPN1),Y
  6545   A8           		TAY
  6546   20   37   52 		JSR PUSH
  6549   20   AB   52 		JSR STKTS1
  654C   18           		CLC
  654D   A5   AA      		LDA TEMPN1
  654F   69   02      		ADC #$02
  6551   85   AA      		STA TEMPN1
  6553   90   C2      		BCC MRKPX
  6555   E6   AB      		INC TEMPN1+1
  6557   D0   BE      		BNE MRKPX	;(Always)
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-136
NLOGO	GARBAGE COLLECTOR

  6559   A0   0F      	SWAPT1:	LDY #TMPNUM-1
  655B   A2   A6      		LDX #TMPSTT
  655D   B5   00      	SWPLP1:	LDA $00,X
  655F   99   2A   03 		STA TMPTAB,Y
  6562   E8           		INX
  6563   88           		DEY
  6564   10   F7      		BPL SWPLP1
  6566   60           		RTS
                      
  6567   A0   0F      	SWAPT2:	LDY #TMPNUM-1
  6569   A2   A6      		LDX #TMPSTT
  656B   B9   2A   03 	SWPLP2:	LDA TMPTAB,Y
  656E   95   00      		STA $00,X
  6570   E8           		INX
  6571   88           		DEY
  6572   10   F7      		BPL SWPLP2
  6574   60           		RTS
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-137
NLOGO	GARBAGE COLLECTOR

  6575   84   C0      	MAKPNM:	STY ANSN2	;ANS
  6577   86   B3      		STX ANSN1	;ARG
  6579   20   7F   5D 		JSR GETTYP
  657C   A6   B3      		LDX ANSN1
  657E   C9   01      		CMP #ATOM
  6580   F0   2A      		BEQ MKPN1
  6582   C9   07      		CMP #SATOM
  6584   F0   26      		BEQ MKPN1
  6586   48           		PHA		;Save type
  6587   B5   00      		LDA $00,X	;Assume it's a fixnum or flonum
  6589   85   AC      		STA TEMPN2
  658B   B5   01      		LDA $01,X
  658D   85   AD      		STA TEMPN2+1
  658F   A2   03      		LDX #$03
  6591   A0   00      		LDY #$00
  6593   B1   AC      	MKP2L1:	LDA (TEMPN2),Y
  6595   99   A2   00 		STA NARG1,Y
  6598   C8           		INY
  6599   CA           		DEX
  659A   10   F7      		BPL MKP2L1
  659C   68           		PLA		;Retrieve type
  659D   AA           		TAX
  659E   A5   C0      		LDA ANSN2
  65A0   48           		PHA		;Save ANS pointer
  65A1   E0   03      		CPX #FIX
  65A3   F0   0C      		BEQ MKPN2
  65A5   E0   04      		CPX #FLO
  65A7   F0   0E      		BEQ MKPN3
  65A9   4C   F8   7E 		JMP STTLR4	;(ERROR XWTA,CURTOK)
  65AC   A4   C0      	MKPN1:	LDY ANSN2
  65AE   4C   83   59 		JMP GETPNM
  65B1   20   6E   67 	MKPN2:	JSR CVBFIX	;Get string on PDL
  65B4   4C   BA   65 		JMP CNSPDL	;CONS string from PDL
  65B7   20   A7   67 	MKPN3:	JSR CVFLO	;Get the string on PDL
                      
                      	;CONS a string from the characters on the PDL, ANSN1 holds counter, ANS on stack.
  65BA   A2   00      	CNSPDL:	LDX #$00
  65BC   86   88      		STX MARK1
  65BE   86   89      		STX MARK1+1
  65C0   A5   B3      		LDA ANSN1
  65C2   6A           		ROR A
  65C3   90   05      		BCC CSPD1
  65C5   20   37   52 		JSR PUSH	;If odd no. characters, push a 0 to make it even
  65C8   E6   B3      		INC ANSN1
  65CA   20   99   52 	CSPD1:	JSR POPB	;Pop two characters
  65CD   85   A9      		STA TEMPN+1
  65CF   20   99   52 		JSR POPB
  65D2   85   A8      		STA TEMPN
  65D4   A2   88      		LDX #MARK1
  65D6   86   B2      		STX ANSN
  65D8   A0   A8      		LDY #TEMPN
  65DA   A9   02      		LDA #STRING
  65DC   20   0F   53 		JSR CONS	;Cons a node
  65DF   C6   B3      		DEC ANSN1
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-138
NLOGO	GARBAGE COLLECTOR

  65E1   C6   B3      		DEC ANSN1
  65E3   D0   E5      		BNE CSPD1	;Continue if not done
  65E5   68           		PLA		;Retrieve ANS pointer
  65E6   AA           		TAX
  65E7   A5   88      		LDA MARK1
  65E9   95   00      		STA $00,X
  65EB   A5   89      		LDA MARK1+1
  65ED   95   01      		STA $01,X
  65EF   A9   00      		LDA #$00
  65F1   85   88      		STA MARK1
  65F3   85   89      		STA MARK1+1
  65F5   60           		RTS
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-139
NLOGO	GARBAGE COLLECTOR

  65F6   85   B0      	LTYPE:	STA TEMPN4	;TOPLEVELP
  65F8   B5   00      		LDA $00,X
  65FA   85   B4      		STA TEMPN5
  65FC   B5   01      		LDA $01,X
  65FE   85   B5      		STA TEMPN5+1	;THING
  6600   A2   3E      		LDX #LTPRTS&$FF
  6602   A0   67      		LDY #LTPRTS^
  6604   20   37   52 		JSR PUSH
  6607   A2   B4      	PRTHNG:	LDX #TEMPN5
  6609   20   7F   5D 		JSR GETTYP
  660C   C9   00      		CMP #LIST
  660E   F0   5A      		BEQ LTPLS
  6610   C9   01      		CMP #ATOM
  6612   F0   33      		BEQ LTPA
  6614   C9   07      		CMP #SATOM
  6616   F0   35      		BEQ LTPS
  6618   C9   09      		CMP #DATOM
  661A   F0   26      		BEQ LTPD
  661C   C9   08      		CMP #QATOM
  661E   F0   1E      		BEQ LTPQ
  6620   C9   0A      		CMP #LATOM
  6622   F0   2F      		BEQ LTPL
  6624   48           		PHA		;Assuming Fix or Flo, save typecode
  6625   A0   00      		LDY #$00	;and prep. for TYPFIX/FLO
  6627   A2   03      		LDX #$03
  6629   B1   B4      	LTYPL1:	LDA (TEMPN5),Y
  662B   99   A2   00 		STA NARG1,Y
  662E   C8           		INY
  662F   CA           		DEX
  6630   10   F7      		BPL LTYPL1
  6632   68           		PLA
  6633   C9   03      		CMP #FIX
  6635   F0   27      		BEQ LTPF
  6637   C9   04      		CMP #FLO
  6639   F0   29      		BEQ LTPF1
  663B   20   C8   51 		JSR SYSBUG
  663E   A9   22      	LTPQ:	LDA #'"
  6640   D0   02      		BNE LTPD1	;(Always)
  6642   A9   3A      	LTPD:	LDA #':
  6644   20   90   72 	LTPD1:	JSR TPCHR
  6647   20   D2   66 	LTPA:	JSR TYPATM
  664A   4C   1E   41 		JMP POPJ
  664D   20   22   67 	LTPS:	JSR TPSATM
  6650   4C   1E   41 		JMP POPJ
  6653   20   D2   66 	LTPL:	JSR TYPATM
  6656   A9   3A      		LDA #':
  6658   20   90   72 		JSR TPCHR
  665B   4C   1E   41 		JMP POPJ
  665E   20   45   67 	LTPF:	JSR TPBFIX
  6661   4C   1E   41 		JMP POPJ
  6664   20   A1   67 	LTPF1:	JSR TYPFLO
  6667   4C   1E   41 		JMP POPJ
  666A   A9   01      	LTPLS:	LDA #$01
  666C   85   B1      		STA TEMPN4+1	;NOSPACE
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-140
NLOGO	GARBAGE COLLECTOR

  666E   A5   B0      		LDA TEMPN4	;TOPLEVELP
  6670   D0   05      		BNE PLSTLP
  6672   A9   5B      		LDA #'[
  6674   20   90   72 		JSR TPCHR
  6677   20   0D   54 	PLSTLP:	JSR STKTST
  667A   A5   B5      		LDA TEMPN5+1
  667C   D0   0E      		BNE PLLP1
  667E   A5   B0      		LDA TEMPN4	;TOPLEVELP
  6680   D0   07      		BNE PLLP2
  6682   85   B1      		STA TEMPN4+1	;Print a space after Sublists
  6684   A9   5D      		LDA #']
  6686   20   90   72 		JSR TPCHR
  6689   4C   1E   41 	PLLP2:	JMP POPJ
  668C   A5   B1      	PLLP1:	LDA TEMPN4+1	;NOSPACE
  668E   D0   05      		BNE PLLP1A
  6690   A9   20      		LDA #$20	;(Space)
  6692   20   90   72 		JSR TPCHR
  6695   A2   B4      	PLLP1A:	LDX #TEMPN5
  6697   20   20   52 		JSR PUSHP
  669A   A6   B0      		LDX TEMPN4
  669C   20   37   52 		JSR PUSH
  669F   A0   00      		LDY #$00
  66A1   84   B0      		STY TEMPN4
  66A3   84   B1      		STY TEMPN4+1
  66A5   B1   B4      		LDA (TEMPN5),Y
  66A7   AA           		TAX
  66A8   C8           		INY
  66A9   B1   B4      		LDA (TEMPN5),Y
  66AB   85   B5      		STA TEMPN5+1
  66AD   86   B4      		STX TEMPN5	;(CAR)
  66AF   A2   B9      		LDX #TPP1&$FF
  66B1   A0   66      		LDY #TPP1^
  66B3   20   37   52 		JSR PUSH
  66B6   4C   07   66 		JMP PRTHNG
  66B9   20   99   52 	TPP1:	JSR POPB
  66BC   85   B0      		STA TEMPN4
  66BE   A2   B4      		LDX #TEMPN5
  66C0   20   67   52 		JSR POP
  66C3   A0   02      		LDY #$02
  66C5   B1   B4      		LDA (TEMPN5),Y
  66C7   AA           		TAX
  66C8   C8           		INY
  66C9   B1   B4      		LDA (TEMPN5),Y
  66CB   85   B5      		STA TEMPN5+1
  66CD   86   B4      		STX TEMPN5	;(CDR)
  66CF   4C   77   66 		JMP PLSTLP
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-141
NLOGO	GARBAGE COLLECTOR

  66D2   A5   B4      	TYPATM:	LDA TEMPN5
  66D4   29   FC      		AND #$FC
  66D6   85   B4      		STA TEMPN5
  66D8   A2   B4      		LDX #TEMPN5
  66DA   A0   B4      		LDY #TEMPN5
  66DC   20   83   59 		JSR GETPNM	;Returns with A nonzero if Funny-pname
  66DF   85   B2      		STA ANSN
  66E1   F0   09      		BEQ TPATMW
  66E3   A5   57      		LDA INDEV
  66E5   F0   05      		BEQ TPATMW
  66E7   A9   27      		LDA #$27	;(Single Quote)
  66E9   20   90   72 		JSR TPCHR
  66EC   A5   B5      	TPATMW:	LDA TEMPN5+1
  66EE   F0   25      		BEQ TPTMWE
  66F0   A0   00      		LDY #$00
  66F2   B1   B4      		LDA (TEMPN5),Y
  66F4   85   A6      		STA TEMPNH
  66F6   C8           		INY
  66F7   B1   B4      		LDA (TEMPN5),Y
  66F9   85   A7      		STA TEMPNH+1	;(CAR)
  66FB   C8           		INY
  66FC   B1   B4      		LDA (TEMPN5),Y
  66FE   AA           		TAX
  66FF   C8           		INY
  6700   B1   B4      		LDA (TEMPN5),Y
  6702   85   B5      		STA TEMPN5+1
  6704   86   B4      		STX TEMPN5	;(CDR)
  6706   A5   A6      		LDA TEMPNH
  6708   20   90   72 		JSR TPCHR
  670B   A5   A7      		LDA TEMPNH+1
  670D   F0   06      		BEQ TPTMWE
  670F   20   90   72 		JSR TPCHR
  6712   4C   EC   66 		JMP TPATMW
  6715   A5   B2      	TPTMWE:	LDA ANSN
  6717   F0   25      		BEQ LTPRTS
  6719   A5   57      		LDA INDEV
  671B   F0   21      		BEQ LTPRTS
  671D   A9   27      		LDA #$27	;(Single Quote)
  671F   4C   90   72 		JMP TPCHR
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-142
NLOGO	GARBAGE COLLECTOR

  6722   A0   02      	TPSATM:	LDY #$02
  6724   B1   B4      		LDA (TEMPN5),Y
  6726   AA           		TAX
  6727   C8           		INY
  6728   B1   B4      		LDA (TEMPN5),Y
  672A   85   B5      		STA TEMPN5+1
  672C   86   B4      		STX TEMPN5	;(CDR)
  672E   A0   03      		LDY #$03
  6730   B1   B4      	TPSTMW:	LDA (TEMPN5),Y
  6732   F0   0A      		BEQ LTPRTS
  6734   84   B2      		STY ANSN
  6736   20   90   72 		JSR TPCHR
  6739   A4   B2      		LDY ANSN
  673B   C8           		INY
  673C   D0   F2      		BNE TPSTMW	;(Always)
  673E   60           	LTPRTS:	RTS
                      
                      	;Types a two-byte fixnum, always positive.
  673F   20   5C   67 	TYPFIX:	JSR CVFIX	;Get string on PDL
  6742   4C   48   67 		JMP PRTPDL	;Type string on PDL
                      
                      	;Types a four-byte fixnum in NARG1.
  6745   20   6E   67 	TPBFIX:	JSR CVBFIX	;Get string on PDL
                      
                      	;Type the string on the PDL, ANSN1 holds character count.
  6748   A9   00      	PRTPDL:	LDA #$00
  674A   48           		PHA		;Push stop indicator
  674B   20   99   52 	PRTPL1:	JSR POPB	;Pop chars off PDL and onto stack
  674E   48           		PHA
  674F   C6   B3      		DEC ANSN1
  6751   D0   F8      		BNE PRTPL1
  6753   68           	PRTPL2:	PLA		;Pop chars from stack and type them
  6754   F0   E8      		BEQ LTPRTS	;until stop indicator popped
  6756   20   90   72 		JSR TPCHR
  6759   4C   53   67 		JMP PRTPL2
                      
                      	;Converts a two-byte fixnum to  a string on the PDL
  675C   B5   00      	CVFIX:	LDA $00,X
  675E   85   A2      		STA NARG1
  6760   B5   01      		LDA $01,X
  6762   85   A3      		STA NARG1+1	;NARG1 is the number to type
  6764   A9   00      		LDA #$00
  6766   85   B3      		STA ANSN1	;Character counter
  6768   85   A4      	CVFIXX:	STA NARG1+2	;(Alternate entry point)
  676A   85   A5      		STA NARG1+3
  676C   F0   16      		BEQ CVFX2	;(Always)
                      
                      	;Get 4-byte fixnum in NARG1 to string on PDL
  676E   A9   00      	CVBFIX:	LDA #$00
  6770   85   B3      		STA ANSN1	;Character counter
  6772   A5   A5      		LDA NARG1+3
  6774   10   0C      		BPL CVFX1
  6776   A2   A2      		LDX #NARG1
  6778   20   DD   78 		JSR COMPL
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-143
NLOGO	GARBAGE COLLECTOR

  677B   A2   2D      		LDX #'-
  677D   20   37   52 		JSR PUSH
  6780   E6   B3      		INC ANSN1
  6782   A9   00      	CVFX1:	LDA #$00
  6784   85   B2      	CVFX2:	STA ANSN	;ANSN is digit counter
  6786   20   ED   78 	CVBNMR:	JSR XDVD10	;Divide NARG1 by ten and get remainder
  6789   48           		PHA		;Push remainder digit
  678A   E6   B2      		INC ANSN	;Increment digit counter
  678C   A2   03      		LDX #$03
  678E   B5   A2      	CVBL1:	LDA NARG1,X
  6790   D0   F4      		BNE CVBNMR
  6792   CA           		DEX
  6793   10   F9      		BPL CVBL1
  6795   68           	CVBNMF:	PLA		;Pop a digit
  6796   AA           		TAX
  6797   20   37   52 		JSR PUSH	;Push it
  679A   E6   B3      		INC ANSN1
  679C   C6   B2      		DEC ANSN
  679E   D0   F5      		BNE CVBNMF
  67A0   60           		RTS
                      
                      	;Type the flonum in NARG1.
  67A1   20   A7   67 	TYPFLO:	JSR CVFLO	;Get String on PDL
  67A4   4C   48   67 		JMP PRTPDL	;Type string on PDL
                      
                      	;Converts flonum NARG1 to characters on PDL
  67A7   A5   C2      	CVFLO:	LDA ANSNX
  67A9   48           		PHA
  67AA   A9   00      		LDA #$00
  67AC   85   B3      		STA ANSN1	;Counts number of characters pushed
  67AE   85   C0      		STA ANSN2	;ODE
  67B0   A2   03      		LDX #$03
  67B2   B5   A2      	TPFLL1:	LDA NARG1,X
  67B4   D0   15      		BNE TPFL1
  67B6   CA           		DEX
  67B7   10   F9      		BPL TPFLL1
  67B9   E6   B3      		INC ANSN1
  67BB   A2   30      		LDX #'0		;If NARG1 = 0, push "0." and return
  67BD   20   37   52 		JSR PUSH
  67C0   E6   B3      		INC ANSN1
  67C2   A2   2E      		LDX #'.
  67C4   20   37   52 		JSR PUSH
  67C7   68           		PLA
  67C8   85   C2      		STA ANSNX
  67CA   60           		RTS
  67CB   A5   A3      	TPFL1:	LDA NARG1+1
  67CD   10   0A      		BPL TPFL2	;If NARG1 negative, invert and push "-"
  67CF   20   FF   69 		JSR FCOMPL
  67D2   E6   B3      		INC ANSN1
  67D4   A2   2D      		LDX #'-
  67D6   20   37   52 		JSR PUSH
  67D9   A5   A2      	TPFL2:	LDA NARG1	;Now get 1 <= NARG1 < 10
  67DB   10   2A      		BPL TPFLS1	;Exponent too small, so multiply number
  67DD   C9   84      		CMP #$84
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-144
NLOGO	GARBAGE COLLECTOR

  67DF   B0   0A      		BCS TPFLG1	;Exponent greater than 3, so too big
  67E1   C9   83      		CMP #$83
  67E3   D0   2B      		BNE GINTP1	;Ok if 0,1, or 2
  67E5   A5   A3      		LDA NARG1+1	;Else if 3,
  67E7   C9   50      		CMP #$50	;Make sure X < 10 (01.01 0000 Bin)
  67E9   90   25      		BCC GINTP1
  67EB   A0   3C      	TPFLG1:	LDY #A1L
  67ED   20   EE   4C 		JSR XN1TOY	;Save NARG1, so it's now XNUM
  67F0   20   69   4D 	TPFLL2:	JSR FDVD10	;So divide by 10
  67F3   E6   C0      		INC ANSN2	;Increment ODE
  67F5   A5   A2      		LDA NARG1
  67F7   C9   84      		CMP #$84
  67F9   B0   F5      		BCS TPFLL2
  67FB   C9   83      		CMP #$83
  67FD   D0   16      		BNE GINTP2
  67FF   A5   A3      		LDA NARG1+1
  6801   C9   50      		CMP #$50
  6803   B0   EB      		BCS TPFLL2
  6805   90   0E      		BCC GINTP2
  6807   20   5C   4D 	TPFLS1:	JSR MULN10	;NARG1 too small, so multiply by 10
  680A   C6   C0      		DEC ANSN2	;Decrement ODE
  680C   A5   A2      		LDA NARG1
  680E   10   F7      		BPL TPFLS1
  6810   A0   3C      	GINTP1:	LDY #A1L
  6812   20   EE   4C 		JSR XN1TOY
  6815   20   9E   68 	GINTP2:	JSR GETINT
  6818   A0   3C      		LDY #A1L
  681A   20   FA   4C 		JSR XYTON1
  681D   A5   C0      		LDA ANSN2
  681F   85   C2      		STA ANSNX	;NDE
  6821   10   3B      		BPL TPFLG2
  6823   C9   FF      		CMP #$FF
  6825   90   3B      		BCC TPFLF1	;NARG1 < 0.1, use floating pt. format (N)
                      
  6827   85   C1      	TPFLR:	STA ANSN3	;Counter for Exp+1 iterations
  6829   E6   C1      		INC ANSN3
  682B   F0   07      		BEQ TPFLR1
  682D   20   BB   68 	TPFLL5:	JSR GTDECH
  6830   C6   C1      		DEC ANSN3
  6832   D0   F9      		BNE TPFLL5
  6834   A2   2E      	TPFLR1:	LDX #'.
  6836   20   37   52 		JSR PUSH	;Push decimal pt.
  6839   E6   B3      		INC ANSN1
  683B   38           		SEC
  683C   A9   06      		LDA #$06
  683E   E5   C0      		SBC ANSN2
  6840   85   C1      		STA ANSN3	;Counter for 6-Exp iterations
  6842   F0   07      		BEQ POPTZS
  6844   20   BB   68 	TPFLL6:	JSR GTDECH
  6847   C6   C1      		DEC ANSN3
  6849   D0   F9      		BNE TPFLL6
  684B   20   99   52 	POPTZS:	JSR POPB	;Pop all trailing zeroes
  684E   C6   B3      		DEC ANSN1
  6850   C9   30      		CMP #'0
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-145
NLOGO	GARBAGE COLLECTOR

  6852   F0   F7      		BEQ POPTZS
  6854   AA           		TAX
  6855   E6   B3      		INC ANSN1
  6857   20   37   52 		JSR PUSH	;Done
  685A   68           		PLA
  685B   85   C2      		STA ANSNX
  685D   60           		RTS
                      
  685E   C9   07      	TPFLG2:	CMP #$07
  6860   90   C5      		BCC TPFLR	;NARG1 < 10000000, use regular format
  6862   20   BB   68 	TPFLF1:	JSR GTDECH	;Floating pt. format, call Get-Decimal-Char for digit
  6865   A2   2E      		LDX #'.
  6867   20   37   52 		JSR PUSH	;Push a "."
  686A   E6   B3      		INC ANSN1
  686C   A9   06      		LDA #$06	;Counter for six iterations
  686E   85   C1      		STA ANSN3
  6870   20   BB   68 	TPFLL3:	JSR GTDECH	;Get another decimal digit
  6873   C6   C1      		DEC ANSN3
  6875   D0   F9      		BNE TPFLL3
  6877   20   4B   68 		JSR POPTZS	;Pop all trailing zeros
  687A   A5   C0      		LDA ANSN2
  687C   10   0A      		BPL TPFLEP
  687E   49   FF      		EOR #$FF	;If Exp negative, invert
  6880   85   C0      		STA ANSN2
  6882   E6   C0      		INC ANSN2	;(Complement and increment)
  6884   A2   4E      		LDX #'N		;and push "N"
  6886   D0   02      		BNE TPFLEX	;(Always)
  6888   A2   45      	TPFLEP:	LDX #'E		;Exp positive, push "E"
  688A   20   37   52 	TPFLEX:	JSR PUSH
  688D   E6   B3      		INC ANSN1
  688F   A5   C0      		LDA ANSN2
  6891   85   A2      		STA NARG1
  6893   A9   00      		LDA #$00
  6895   85   A3      		STA NARG1+1
  6897   20   68   67 		JSR CVFIXX	;Routine converts (2-byte) ARG1 into string on PDL
  689A   68           		PLA
  689B   85   C2      		STA ANSNX
  689D   60           		RTS
                      
  689E   A9   00      	GETINT:	LDA #$00	;Gets the integer part of NARG1
  68A0   85   AA      		STA TEMPN1	;INTP
  68A2   A5   A2      	GETL1:	LDA NARG1
  68A4   F0   14      		BEQ GTDR
  68A6   C9   80      		CMP #$80	;Done if Binary-exp is 0
  68A8   F0   08      		BEQ GTD1
  68AA   06   A3      		ASL NARG1+1	;Rotate NARG1 mantissa into TEMPN1
  68AC   26   AA      		ROL TEMPN1
  68AE   C6   A2      		DEC NARG1	;Decrement Binary-exp
  68B0   D0   F0      		BNE GETL1	;(Always)
  68B2   06   A3      	GTD1:	ASL NARG1+1
  68B4   26   AA      		ROL TEMPN1	;Shift two more bits into TEMPN1
  68B6   06   A3      		ASL NARG1+1
  68B8   26   AA      		ROL TEMPN1
  68BA   60           	GTDR:	RTS
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-146
NLOGO	GARBAGE COLLECTOR

                      
                      	;Gets the most significant decimal digit of NARG1, then positions it for next one.
  68BB   18           	GTDECH:	CLC
  68BC   A5   AA      		LDA TEMPN1
  68BE   69   30      		ADC #'0
  68C0   AA           		TAX
  68C1   20   37   52 		JSR PUSH
  68C4   E6   B3      		INC ANSN1
  68C6   A5   C2      		LDA ANSNX
  68C8   30   43      		BMI GTDC1
  68CA   F0   41      		BEQ GTDC1
  68CC   85   AB      		STA TEMPN1+1
  68CE   A0   3C      		LDY #A1L
  68D0   20   EE   4C 		JSR XN1TOY
  68D3   A5   AA      		LDA TEMPN1
  68D5   85   A2      		STA NARG1
  68D7   A9   00      		LDA #$00
  68D9   85   A3      		STA NARG1+1
  68DB   85   A4      		STA NARG1+2
  68DD   85   A5      		STA NARG1+3
  68DF   20   38   69 		JSR FLOTN1
  68E2   20   5C   4D 	GTDL1:	JSR MULN10
  68E5   C6   AB      		DEC TEMPN1+1
  68E7   D0   F9      		BNE GTDL1
  68E9   A0   3C      		LDY #A1L
  68EB   20   93   8E 		JSR XYTON2
  68EE   20   B1   69 		JSR FSUBX
  68F1   A0   3C      		LDY #A1L
  68F3   20   EE   4C 		JSR XN1TOY
  68F6   C6   C2      		DEC ANSNX
  68F8   F0   0B      		BEQ GTDL3E
  68FA   A5   C2      		LDA ANSNX
  68FC   85   AB      		STA TEMPN1+1
  68FE   20   69   4D 	GTDL3:	JSR FDVD10
  6901   C6   AB      		DEC TEMPN1+1
  6903   D0   F9      		BNE GTDL3
  6905   20   9E   68 	GTDL3E:	JSR GETINT
  6908   A0   3C      		LDY #A1L
  690A   4C   FA   4C 		JMP XYTON1
  690D   A5   AA      	GTDC1:	LDA TEMPN1
  690F   85   9E      		STA NARG2
  6911   A9   00      		LDA #$00
  6913   85   9F      		STA NARG2+1
  6915   85   A0      		STA NARG2+2
  6917   85   A1      		STA NARG2+3
  6919   20   2F   69 		JSR FLOTN2
  691C   20   AE   69 		JSR FSUB
  691F   20   5C   4D 		JSR MULN10
  6922   A0   3C      		LDY #A1L
  6924   20   EE   4C 		JSR XN1TOY
  6927   20   9E   68 		JSR GETINT
  692A   A0   3C      		LDY #A1L
  692C   4C   FA   4C 		JMP XYTON1
                      	;Execution diagram, flonum-to-string conversion:
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-147
NLOGO	GARBAGE COLLECTOR

                      	;ODE := 0
                      	;IF NUM <= 1 THEN DO NUM := NUM * 10, ODE := ODE - 1, UNTIL NUM >= 1, INTP = INT(NUM)
                      	;   ELSE IF NUM >= 10 THEN XNUM := NUM, DO XNUM := XNUM / 10, ODE := ODE + 1, UNTIL XNUM < 10,
                      	;		INTP := INT(XNUM)
                      	;NDE := ODE
                      	;IF ODE > 6 OR ODE < -1 THEN GET-DIG, PUSH("."), REPEAT 6 GET-DIG, POP-TZS, PR-EXP
                      	;   ELSE REPEAT ODE+1 GET-DIG, PUSH("."), REPEAT 6-ODE GET-DIG, POP-TZS
                      	;
                      	;GET-DIG:
                      	;	PUSH(INTP)
                      	;	IF NDE > 0 THEN REPEAT NDE INTP := INTP * 10, NDE := NDE - 1,
                      	;		NUM := NUM - INTP, XNUM := NUM, REPEAT NDE XNUM := XNUM / 10,
                      	;		INTP := INT(XNUM)
                      	;	ELSE NUM := NUM - INTP, NUM := NUM * 10, INTP := INT(NUM)
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-148
NLOGO	GARBAGE COLLECTOR

                      	;Floating Point routines:
                      
                      	;(NARG1 and NARG2 are X/M1 and X/M2 respectively, E is TEMPNH, SIGN is ANSN.)
                      
  692F   20   86   69 	FLOTN2:	JSR SWAP
  6932   20   38   69 		JSR FLOTN1
  6935   4C   86   69 		JMP SWAP
                      
  6938   A5   A5      	FLOTN1:	LDA NARG1+3
  693A   10   0B      		BPL XFLOAT
  693C   A2   A2      		LDX #NARG1
  693E   20   DD   78 		JSR COMPL
  6941   20   47   69 		JSR XFLOAT
  6944   4C   FF   69 		JMP FCOMPL
                      
  6947   A9   9E      	XFLOAT:	LDA #$9E
  6949   85   B2      		STA ANSN	;Shift counter (exponent)
  694B   A5   A5      	XFLT1:	LDA NARG1+3
  694D   C9   C0      		CMP #$C0
  694F   30   0C      		BMI XFLT2
  6951   06   A2      		ASL NARG1
  6953   26   A3      		ROL NARG1+1	;Rotate left to left-justify
  6955   26   A4      		ROL NARG1+2
  6957   26   A5      		ROL NARG1+3
  6959   C6   B2      		DEC ANSN
  695B   D0   EE      		BNE XFLT1	;Stop if exponent is zero
  695D   A5   A3      	XFLT2:	LDA NARG1+1	;Reverse LSB, MSB for floating pt. format
  695F   A4   A5      		LDY NARG1+3
  6961   84   A3      		STY NARG1+1
  6963   85   A5      		STA NARG1+3
  6965   A5   B2      		LDA ANSN
  6967   85   A2      		STA NARG1	;Put in exponent
  6969   60           		RTS
                      
                      	;Add M1 and M2, result in M1.
  696A   18           	ADD:	CLC		;Clear carry
  696B   A2   02      		LDX #$02	;Index for 3-byte add
  696D   B5   A3      	ADD1:	LDA NARG1+1,X
  696F   75   9F      		ADC NARG2+1,X	;Add a byte of Mant2 to Mant1
  6971   95   A3      		STA NARG1+1,X
  6973   CA           		DEX		;Index to next more signif. byte
  6974   10   F7      		BPL ADD1	;Loop until done
  6976   60           		RTS		;Return
                      
                      	;Makes X/M1 and X/M2 positive. Returns with LSB of SIGN equal to XOR of
                      	;signs of original numbers. Copies (positive) mantissa of X/M1 into E.
  6977   06   B2      	MD1:	ASL ANSN	;Clear LSB of Sign
  6979   20   7C   69 		JSR ABSWAP	;Abs. val. of M1, then swap with M2
  697C   24   A3      	ABSWAP:	BIT NARG1+1	;Is Mant1 negative...
  697E   10   05      		BPL ABSWP1	;No, swap with Mant2 and return
  6980   20   FF   69 		JSR FCOMPL	;Yes, complement it.
  6983   E6   B2      		INC ANSN	;Increment sign, complementing LSB
  6985   38           	ABSWP1:	SEC		;Set carry for return to MUL/DIV
                      
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-149
NLOGO	GARBAGE COLLECTOR

                      	;Swaps X/M1 and X/M2 and leaves a copy of M1 in E.
  6986   A2   04      	SWAP:	LDX #$04	;Index for 4-byte swap
  6988   94   A5      	SWAP1:	STY TEMPNH-1,X
  698A   B5   A1      		LDA NARG1-1,X	;Swap a byte of Exp/Mant1 with
  698C   B4   9D      		LDY NARG2-1,X	;Exp/Mant2 and leave a copy of
  698E   94   A1      		STY NARG1-1,X	;Mant1 in E (3 bytes). (E+3 is destroyed.)
  6990   95   9D      		STA NARG2-1,X
  6992   CA           		DEX		;Advance index to next byte
  6993   D0   F3      		BNE SWAP1	;Loop until done
  6995   60           		RTS		;Return
                      
                      	;Normalize M1 and X1 to standard format floating pt. (left-justified mantissa,
                      	;exponent tells how much so).
  6996   A5   A3      	NORM1:	LDA NARG1+1	;High-order Mant1 byte
  6998   C9   C0      		CMP #$C0	;Are Upper two bits unequal...
  699A   30   0C      		BMI RTS1	;Yes, return with Mant1 normalized.
  699C   C6   A2      		DEC NARG1	;Decrement X1
  699E   06   A5      		ASL NARG1+3
  69A0   26   A4      		ROL NARG1+2	;Shift Mant1 3 bytes left
  69A2   26   A3      		ROL NARG1+1
  69A4   A5   A2      	FNORM:	LDA NARG1	;Is Exp1 zero...
  69A6   D0   EE      		BNE NORM1	;No, continue normalizing.
  69A8   60           	RTS1:	RTS		;Return
                      
                      	;Floating pt. add. X/M1 becomes X/M2 + X/M1.
  69A9   20   C9   69 	FADD:	JSR FADD1
  69AC   18           		CLC		;If it returns, then no overflow
  69AD   60           		RTS
                      
  69AE   20   86   69 	FSUB:	JSR SWAP	;It does M2-M1, we want M1-M2
  69B1   20   C3   69 	FSUBX:	JSR FSUB1
  69B4   18           		CLC
  69B5   60           		RTS
                      
  69B6   20   E7   69 	FMUL:	JSR FMULT
  69B9   18           		CLC
  69BA   60           		RTS
                      
  69BB   20   86   69 	FDIV:	JSR SWAP	;It does M2/M1, we want M1/M2.
  69BE   20   0D   6A 		JSR FDIVD
  69C1   18           		CLC
  69C2   60           		RTS
                      
                      	;Floating pt. subtract. X/M1 becomes X/M2 - X/M1.
  69C3   20   FF   69 	FSUB1:	JSR FCOMPL	;Complement Mant1, clears carry unless 0
  69C6   20   D6   69 	SWPALN:	JSR ALNSWP	;Right shift Mant1 or swap
                      
  69C9   A5   9E      	FADD1:	LDA NARG2
  69CB   C5   A2      		CMP NARG1	;Compare Exp1 with Exp2
  69CD   D0   F7      		BNE SWPALN	;If unequal, swap addends or align mantissas
  69CF   20   6A   69 		JSR ADD		;Add aligned mantissas
                      
                      	;Cleans up after complementing mantissa, or after adding mantissas.
  69D2   50   D0      	ADDEND:	BVC FNORM	;No overflow, normalize result
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-150
NLOGO	GARBAGE COLLECTOR

  69D4   70   05      		BVS RTLOG	;(Always) Overflow - shift M1 right, carry into Sign
                      
                      	;Either swap mantissas (for another alignment) or do an alignment. Carry bit
                      	;resultants determine which to do each time over.
  69D6   90   AE      	ALNSWP:	BCC SWAP	;Swap if carry clear, else shift right arith.
                      
                      	;Shifts mantissa right, towards pure fixnum.
  69D8   A5   A3      	RTAR:	LDA NARG1+1	;Sign of M1 into carry for
  69DA   0A           		ASL A		;right arith. shift
                      
                      	;Make upper two bits of mantissa unequal by shifting M1 right.
                      	;Also shifts LSB of M1 into MSB of E.
  69DB   E6   A2      	RTLOG:	INC NARG1	;Increment X1 to adjust for right shift
  69DD   F0   77      		BEQ OVFL	;Exp1 out of range
  69DF   A2   FA      	RTLOG1:	LDX #$FA	;Index for 6 byte right shift
  69E1   76   A9      	ROR1:	ROR TEMPNH+3,X	;(M1 and E must be contiguous)
  69E3   E8           		INX		;Next byte of shift
  69E4   D0   FB      		BNE ROR1	;Loop until done
  69E6   60           		RTS		;Return
                      
                      	;Floating pt. multiply. X/M1 becomes X/M1 * X/M2.
  69E7   20   77   69 	FMULT:	JSR MD1		;Absolute value of Mant1, Mant2.
  69EA   65   A2      		ADC NARG1	;Add Exp1 to Exp2 for product Exp
  69EC   20   3D   6A 		JSR MD2		;Check product exp. and prepare for multiply
  69EF   18           		CLC		;Clear carry for first bit
  69F0   20   DF   69 	FMUL1:	JSR RTLOG1	;M1 and E right (product and multiplier)
  69F3   90   03      		BCC FMUL2	;If carry clear, skip partial product
  69F5   20   6A   69 		JSR ADD		;Add multiplicand to product
  69F8   88           	FMUL2:	DEY		;Next multiply iteration
  69F9   10   F5      		BPL FMUL1	;Loop until done
                      
  69FB   46   B2      	MDEND:	LSR ANSN	;Test Sign LSB
  69FD   90   A5      	NORMX:	BCC FNORM	;If even, normalize product, else complement
                      
                      	;Complement the mantissa of M1.
  69FF   38           	FCOMPL:	SEC		;Set carry for subtract
  6A00   A2   03      		LDX #$03	;Index for 3-byte subtract
  6A02   A9   00      	COMPL1:	LDA #$00	;Clear A
  6A04   F5   A2      		SBC NARG1,X	;Subtract byte of Exp1
  6A06   95   A2      		STA NARG1,X	;Restore it
  6A08   CA           		DEX		;Next more significant byte
  6A09   D0   F7      		BNE COMPL1	;Loop until done
  6A0B   F0   C5      		BEQ ADDEND
                      
                      	;Floating pt. multiply. X/M1 becomes X/M1 / X/M2.
  6A0D   20   77   69 	FDIVD:	JSR MD1		;Take abs. val. of Mant1, Mant2
  6A10   E5   A2      		SBC NARG1	;Subtract Exp1 from Exp2
  6A12   20   3D   6A 		JSR MD2		;Save as quotient exp.
  6A15   38           	DIV1:	SEC		;Set carry for subtract
  6A16   A2   02      		LDX #$02	;Index for 3-byte subtraction
  6A18   B5   9F      	DIV2:	LDA NARG2+1,X
  6A1A   F5   A6      		SBC TEMPNH,X	;Subtract a byte of E from Mant2
  6A1C   48           		PHA		;Save on stack
  6A1D   CA           		DEX		;Next more significant byte
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-151
NLOGO	GARBAGE COLLECTOR

  6A1E   10   F8      		BPL DIV2	;Loop until done
  6A20   A2   FD      		LDX #$FD	;Index for 3-byte conditional move
  6A22   68           	DIV3:	PLA		;Pull byte of difference off stack
  6A23   90   02      		BCC DIV4	;If M2 smaller than E then don't restore M2
  6A25   95   A2      		STA NARG2+4,X
  6A27   E8           	DIV4:	INX		;Next less significant byte
  6A28   D0   F8      		BNE DIV3	;Loop until done
  6A2A   26   A5      		ROL NARG1+3
  6A2C   26   A4      		ROL NARG1+2	;Roll quotient left, carry into LSB
  6A2E   26   A3      		ROL NARG1+1
  6A30   06   A1      		ASL NARG2+3
  6A32   26   A0      		ROL NARG2+2	;Shift dividend left
  6A34   26   9F      		ROL NARG2+1
  6A36   B0   1E      		BCS OVFL	;Overflow is due to un-normalized divisor
  6A38   88           		DEY		;Next divide iteration
  6A39   D0   DA      		BNE DIV1	;Loop until done 23 iterations
  6A3B   F0   BE      		BEQ MDEND	;(Always) Normalize quotient and correct sign
                      
                      	;Prepare for multiply or divide, check result's exponent.
  6A3D   86   A5      	MD2:	STX NARG1+3
  6A3F   86   A4      		STX NARG1+2	;Clear Mant1 (3 bytes) for MUL/DIV
  6A41   86   A3      		STX NARG1+1
  6A43   B0   0D      		BCS OVCHK	;If calculation set carry, check for overflow
  6A45   30   04      		BMI MD3		;If negative, then no underflow
  6A47   68           		PLA		;Pop one return level (undeflow, answer is 0)
  6A48   68           		PLA
  6A49   90   B2      		BCC NORMX	;Clear X1 and return
  6A4B   49   80      	MD3:	EOR #$80	;Complement sign bit of exponent
  6A4D   85   A2      		STA NARG1	;Store it.
  6A4F   A0   17      		LDY #$17	;Count 24. (MUL) or 23. (DIV) iterations
  6A51   60           		RTS		;Return
                      
  6A52   10   F7      	OVCHK:	BPL MD3		;If positive exponent, then no overflow.
  6A54   68           		PLA
  6A55   68           		PLA		;Pop past MD2 call
                      
  6A56   68           	OVFL:	PLA	;Overflow, pop past first function call
  6A57   68           		PLA
  6A58   38           		SEC	;Indicate overflow
  6A59   60           		RTS
                      
                      	;Changes the argument in (X) from Flonum to four-byte Fixnum.
  6A5A   20   86   69 	XINT2:	JSR SWAP	;Pos or neg, only NARG2
  6A5D   20   63   6A 		JSR XINT1
  6A60   4C   86   69 		JMP SWAP
                      
  6A63   A5   A2      	XINT1:	LDA NARG1	;Pos or neg, only NARG1
  6A65   30   0B      		BMI FFIXP
  6A67   A9   00      		LDA #$00	;Negative exponent gives zero result
  6A69   85   A2      		STA NARG1
  6A6B   85   A3      		STA NARG1+1
  6A6D   85   A4      		STA NARG1+2
  6A6F   85   A5      		STA NARG1+3
  6A71   60           	FFIXR:	RTS
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-152
NLOGO	GARBAGE COLLECTOR

  6A72   C9   9F      	FFIXP:	CMP #$9F
  6A74   B0   31      		BCS OVFL1	;Exponent too high, overflow
  6A76   A5   A3      		LDA NARG1+1
  6A78   10   0B      		BPL FFIXP1
  6A7A   20   FF   69 		JSR FCOMPL
  6A7D   20   85   6A 		JSR FFIXP1
  6A80   A2   A2      		LDX #NARG1
  6A82   4C   DD   78 		JMP COMPL
  6A85   A5   A2      	FFIXP1:	LDA NARG1
  6A87   85   B2      		STA ANSN
  6A89   A9   00      		LDA #$00
  6A8B   85   A2      		STA NARG1	;Init LSB to zero
  6A8D   A5   A3      		LDA NARG1+1
  6A8F   A4   A5      		LDY NARG1+3	;Switch LSB, MSB for fixnum format
  6A91   84   A3      		STY NARG1+1
  6A93   85   A5      		STA NARG1+3
  6A95   A5   B2      	FFIX1:	LDA ANSN
  6A97   C9   9E      		CMP #$9E
  6A99   F0   D6      		BEQ FFIXR	;Done when Exp=30. (4 bytes, binary point two places in)
  6A9B   46   A5      		LSR NARG1+3
  6A9D   66   A4      		ROR NARG1+2	;Rotate to right-justify
  6A9F   66   A3      		ROR NARG1+1
  6AA1   66   A2      		ROR NARG1
  6AA3   E6   B2      		INC ANSN
  6AA5   D0   EE      		BNE FFIX1	;(Always)
  6AA7   A9   20      	OVFL1:	LDA #XOFLOW
  6AA9   4C   42   61 		JMP ERROR
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-153
NLOGO	SCREEN EDITOR

                      	.SBTTL	Screen Editor
                      
                      	;increment the point (EPOINT,EPOINT+1).
                      
  6AAC   E6   C5      	INCPNT:	INC EPOINT
  6AAE   D0   02      		BNE INCPT2
  6AB0   E6   C6      		INC EPOINT+1
  6AB2   60           	INCPT2:	RTS
                      
                      	;decrement the point.
                      
  6AB3   A5   C5      	DECPNT:	LDA EPOINT
  6AB5   38           		SEC
  6AB6   E9   01      		SBC #$01
  6AB8   85   C5      		STA EPOINT
  6ABA   B0   02      		BCS DECPT2
  6ABC   C6   C6      		DEC EPOINT+1
  6ABE   60           	DECPT2:	RTS
                      
                      	;set the point to the beginning of the buffer.
                      
  6ABF   A9   00      	PNTBEG:	LDA #EDBUF&$FF
  6AC1   85   C5      		STA EPOINT
  6AC3   A9   20      		LDA #EDBUF^
  6AC5   85   C6      		STA EPOINT+1
  6AC7   60           		RTS
                      
                      	;place cursor at top of screen
                      
  6AC8   A9   00      	TOPSCR:	LDA #$00	;cursor at top of screen
  6ACA   85   28      		STA BASLIN	;baseline for top of screen
  6ACC   85   24      		STA CH
  6ACE   85   25      		STA CV
  6AD0   A9   04      		LDA #$04
  6AD2   85   29      		STA BASLIN+1
  6AD4   60           		RTS
                      
                      	;output char in AC to EDBUF at point. Increments point. Does NOT
                      	;increment last-char-in-buffer pointer. Returns without modifying if
                      	;at end of buffer.
                      
  6AD5   AA           	EDOUT:	TAX		;save char
  6AD6   84   35      		STY YSAV1
  6AD8   A5   C6      		LDA EPOINT+1
  6ADA   C9   3F      		CMP #EBFEND^
  6ADC   90   08      		BCC EDOUT1
  6ADE   D0   0E      		BNE EDORTS
  6AE0   A5   C5      		LDA EPOINT
  6AE2   C9   FB      		CMP #EBFEND&$FF	;Are we at end of edit buffer...
  6AE4   B0   08      		BCS EDORTS	;if so, quit
  6AE6   A0   00      	EDOUT1:	LDY #$00
  6AE8   8A           		TXA
  6AE9   91   C5      		STA (EPOINT),Y	;if not, store char and inc pointer
  6AEB   20   AC   6A 		JSR INCPNT
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-154
NLOGO	SCREEN EDITOR

  6AEE   A4   35      	EDORTS:	LDY YSAV1
  6AF0   60           	NULOUT:	RTS
                      
                      	;top level loop in the editor; listens for characters; outputs them to
                      	;the screen and the edit buffer; accepts commands and has them
                      	;processed.
                      
  6AF1   20   BC   75 	CHGLOP:	JSR RDKEY	;get char from kbd
  6AF4   C9   03      		CMP #$03	;^C means finished
  6AF6   F0   30      		BEQ CHGLPC	;read function into Logo and return.
  6AF8   C9   02      		CMP #$02	;^B means previous screen
  6AFA   F0   26      		BEQ CHGLPB
  6AFC   C9   04      		CMP #$04	;^D is delete char under cursor
  6AFE   F0   2B      		BEQ CHGLPD
  6B00   C9   06      		CMP #$06	;^F means forward screen
  6B02   F0   2D      		BEQ CHGLPF
  6B04   C9   08      		CMP #$08	;^H means back char
  6B06   F0   2F      		BEQ CHGLPH
  6B08   C9   0C      		CMP #$0C	;^L means center point on screen
  6B0A   F0   31      		BEQ CHGLPL
  6B0C   C9   0F      		CMP #$0F	;^O means open line
  6B0E   F0   33      		BEQ CHGLPO
  6B10   C9   10      		CMP #$10	;^P means up line
  6B12   F0   35      		BEQ CHGLPP
  6B14   C9   15      		CMP #$15	;^U means forward char
  6B16   F0   37      		BEQ CHGLPU
  6B18   C9   1B      		CMP #$1B	;ESC means rubout
  6B1A   F0   39      		BEQ CHGLRB
  6B1C   20   33   6D 		JSR INSERT	;not a command - insert it
  6B1F   4C   F1   6A 		JMP CHGLOP
  6B22   20   46   6E 	CHGLPB:	JSR PRVSCR
  6B25   4C   F1   6A 		JMP CHGLOP
  6B28   4C   5B   6B 	CHGLPC:	JMP EDDONE
  6B2B   20   75   6E 	CHGLPD: JSR DELETE	;the return address CHGLOP was pushed
  6B2E   4C   F1   6A 		JMP CHGLOP
  6B31   20   28   6E 	CHGLPF:	JSR NXTSCR	;for these above (space bum)
  6B34   4C   F1   6A 		JMP CHGLOP
  6B37   20   25   6F 	CHGLPH:	JSR BACKUP
  6B3A   4C   F1   6A 		JMP CHGLOP
  6B3D   20   23   6E 	CHGLPL:	JSR CENTER
  6B40   4C   F1   6A 		JMP CHGLOP
  6B43   20   27   70 	CHGLPO:	JSR OPLINE
  6B46   4C   F1   6A 		JMP CHGLOP
  6B49   20   70   6F 	CHGLPP:	JSR UPLINE
  6B4C   4C   F1   6A 		JMP CHGLOP
  6B4F   20   DA   6E 	CHGLPU:	JSR FORCHR
  6B52   4C   F1   6A 		JMP CHGLOP
  6B55   20   5E   6E 	CHGLRB:	JSR RUBOUT
  6B58   4C   F1   6A 		JMP CHGLOP
                      
                      	;EDDONE will read the editor-defined code back into Logo.
                      
  6B5B   A0   00      	EDDONE:	LDY #$00
  6B5D   A9   0D      		LDA #$0D	;Carriage return at end, just in case none there
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-155
NLOGO	SCREEN EDITOR

  6B5F   91   C7      		STA (ENDBUF),Y
  6B61   E6   C7      		INC ENDBUF
  6B63   D0   02      		BNE EDDON2
  6B65   E6   C8      		INC ENDBUF+1
  6B67   A2   81      	EDDON2:	LDX #ERDBK1&$FF
  6B69   A0   6B      		LDY #ERDBK1^
  6B6B   20   37   52 		JSR PUSH	;Return address from SREAD2
  6B6E   20   BF   6A 		JSR PNTBEG	;point to beginning
  6B71   20   79   72 		JSR CLRCBF
  6B74   20   87   72 		JSR RESETT	;Clear the output device
  6B77   A2   77      		LDX #WAITM&$FF
  6B79   A0   DB      		LDY #WAITM^
  6B7B   20   90   54 		JSR PRTSTR
  6B7E   4C   5C   44 		JMP SREAD1
                      
  6B81   20   6C   72 	ERDBK1:	JSR RSTIO
  6B84   4C   1E   41 		JMP POPJ
                      
                      	;this function will display the buffer beginning at the point on the
                      	;screen, beginning at CH, CV (should be consistent with BASLIN). It
                      	;will stop if there is nothing more in the buffer, or when there is no
                      	;more room on the screen. Updates TEMPN8 (last-char-displayed
                      	;pointer). EDSPBF will check as it displays for the point and will set
                      	;CV, CH accordingly. If you would like it to turn on the cursor at a
                      	;place other than the point, set A4L,A4H to it and call EDPBUF.
                      
  6B87   A5   C5      	EDSPBF:	LDA EPOINT
  6B89   85   42      		STA A4L
  6B8B   A5   C6      		LDA EPOINT+1
  6B8D   85   43      		STA A4H
  6B8F   A5   25      	EDPBUF:	LDA CV
  6B91   85   3E      		STA A2L
  6B93   A5   24      		LDA CH
  6B95   85   3F      		STA A2H
  6B97   A5   C6      	EDSPLP:	LDA EPOINT+1
  6B99   C5   C8      		CMP ENDBUF+1
  6B9B   90   08      		BCC EDSPB1
  6B9D   D0   4D      		BNE EDPRTS
  6B9F   A5   C5      		LDA EPOINT
  6BA1   C5   C7      		CMP ENDBUF
  6BA3   B0   47      		BCS EDPRTS	;quit if no more in buffer
  6BA5   A0   00      	EDSPB1:	LDY #$00
  6BA7   B1   C5      		LDA (EPOINT),Y	;get char
  6BA9   C9   0D      		CMP #$0D	;#$0D = CR
  6BAB   F0   37      		BEQ EDSPCR
  6BAD   A6   24      		LDX CH
  6BAF   E8           		INX
  6BB0   E4   21      		CPX WNDWTH	;if at end of line and next char is a
  6BB2   90   13      		BCC EDPCHR	;cr, then no !. otherwise yes.
  6BB4   48           		PHA
  6BB5   A9   21      		LDA #'!
  6BB7   20   0C   75 		JSR COUT	;output continuation line char
  6BBA   68           		PLA
  6BBB   A6   25      		LDX CV		;when we output the continuation char COUT
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-156
NLOGO	SCREEN EDITOR

  6BBD   4C   C3   6B 		JMP EDPCR1	;inc'ed CV, so don't now.
  6BC0   A6   25      	EDOPCR:	LDX CV
  6BC2   E8           		INX		;if we output the CR (or char on next line),
  6BC3   E4   23      	EDPCR1:	CPX WNDBTM	;will we have exceeded the screen length...
  6BC5   B0   25      		BCS EDPRTS	;yes, quit while we're not ahead
  6BC7   A6   C5      	EDPCHR:	LDX EPOINT
  6BC9   E4   42      		CPX A4L
  6BCB   D0   0E      		BNE EDPCH2
  6BCD   A6   C6      		LDX EPOINT+1	;if we're at point then set CV, CH so we can
  6BCF   E4   43      		CPX A4H		;display the cursor in the right place when
  6BD1   D0   08      		BNE EDPCH2	;we come back
  6BD3   A6   25      		LDX CV
  6BD5   86   3E      		STX A2L
  6BD7   A6   24      		LDX CH
  6BD9   86   3F      		STX A2H
  6BDB   20   0C   75 	EDPCH2:	JSR COUT	;output char; back for more
  6BDE   20   AC   6A 		JSR INCPNT
  6BE1   4C   97   6B 		JMP EDSPLP
  6BE4   48           	EDSPCR:	PHA
  6BE5   20   9B   75 		JSR CLREOL
  6BE8   68           		PLA
  6BE9   4C   C0   6B 		JMP EDOPCR
  6BEC   20   F6   74 	EDPRTS:	JSR CLREOP
  6BEF   A6   C5      		LDX EPOINT
  6BF1   E4   42      		CPX A4L
  6BF3   D0   0E      		BNE EDPRS2
  6BF5   A6   C6      		LDX EPOINT+1	;if we're at point then set CV, CH so we can
  6BF7   E4   43      		CPX A4H		;display the cursor in the right place when
  6BF9   D0   08      		BNE EDPRS2	;we come back
  6BFB   A6   25      		LDX CV
  6BFD   86   3E      		STX A2L
  6BFF   A6   24      		LDX CH
  6C01   86   3F      		STX A2H
  6C03   A0   00      	EDPRS2:	LDY #$00
  6C05   B1   C5      		LDA (EPOINT),Y
  6C07   C9   0D      		CMP #$0D	;if it was a CR then it was displayed even if
  6C09   D0   03      		BNE EDPRS3	;we couldn't COUT it, so INCPNT so TEMPN8 is
  6C0B   20   AC   6A 		JSR INCPNT	;correct.
  6C0E   A5   C5      	EDPRS3:	LDA EPOINT	;point is now at location after last char on
  6C10   85   BA      		STA TEMPN8	;screen; store in char-after-last-char-pointer
  6C12   A5   C6      		LDA EPOINT+1
  6C14   85   BB      		STA TEMPN8+1
  6C16   A5   3F      		LDA A2H
  6C18   85   24      		STA CH
  6C1A   A5   3E      		LDA A2L
  6C1C   85   25      		STA CV
  6C1E   20   81   75 		JSR BCALCA	;have CV in AC already
  6C21   A5   42      		LDA A4L
  6C23   85   C5      		STA EPOINT
  6C25   A5   43      		LDA A4H
  6C27   85   C6      		STA EPOINT+1
  6C29   60           		RTS
                      
  6C2A   A5   57      	CHGSTP:	LDA INDEV
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-157
NLOGO	SCREEN EDITOR

  6C2C   D0   3F      		BNE CHGSR1	;Error if already editing with CHANGE
  6C2E   A5   7C      	CHGST1:	LDA LEVNUM
  6C30   D0   40      		BNE CHGSR2
  6C32   A5   7D      		LDA LEVNUM+1
  6C34   D0   3C      		BNE CHGSR2
  6C36   A5   62      		LDA TOKPTR+1
  6C38   F0   41      		BEQ CHGNON
  6C3A   A0   00      		LDY #$00
  6C3C   B1   61      		LDA (TOKPTR),Y
  6C3E   85   A2      		STA ARG1
  6C40   C8           		INY
  6C41   B1   61      		LDA (TOKPTR),Y
  6C43   85   A3      		STA ARG1+1	;(GETTOK)
  6C45   A2   A2      		LDX #ARG1
  6C47   20   7F   5D 		JSR GETTYP
  6C4A   C9   07      		CMP #SATOM
  6C4C   F0   27      		BEQ CHGSR4
  6C4E   C9   01      		CMP #ATOM
  6C50   D0   26      		BNE CHGSR5
  6C52   A2   A2      		LDX #ARG1
  6C54   A9   AA      		LDA #TEMPN1
  6C56   20   8D   56 		JSR GETFUN
  6C59   A5   AB      		LDA TEMPN1+1
  6C5B   F0   2D      		BEQ CHGNEW
  6C5D   20   EF   6C 	CHGOLD:	JSR CHGIN1
  6C60   A2   01      		LDX #$01
  6C62   A9   A2      		LDA #ARG1
  6C64   20   5E   85 		JSR POTEXT	;store function text in EDBUF
  6C67   20   CF   6C 		JSR CHGIN2
  6C6A   4C   84   6C 		JMP CHGIN3
  6C6D   A9   15      	CHGSR1:	LDA #XEDT
  6C6F   4C   42   61 		JMP ERROR
  6C72   4C   E9   7E 	CHGSR2:	JMP STTLR2	;(ERROR XETL)
  6C75   4C   77   84 	CHGSR4:	JMP SPO5S	;(ERROR XUBL,ARG1)
  6C78   4C   21   7C 	CHGSR5:	JMP SMAKE2	;(ERROR XWTA,ARG1,CURTOK)
                      
                      	;Gets the text of the function pointed to (indirectly) by AC into the
                      	;edit buffer. Sets point to beginning of buffer, buffer-end to (you
                      	;guessed it) last char sent to buffer.
                      
  6C7B   20   EF   6C 	CHGNON:	JSR CHGIN1
  6C7E   20   BF   6A 		JSR PNTBEG	;set point to beginning of buffer
  6C81   20   CF   6C 		JSR CHGIN2
  6C84   20   87   6B 	CHGIN3:	JSR EDSPBF	;call edit-display-buffer
  6C87   4C   F1   6A 		JMP CHGLOP	;call text and command handling loop
                      
  6C8A   20   EF   6C 	CHGNEW:	JSR CHGIN1
  6C8D   A2   6E      		LDX #TOMSG&$FF
  6C8F   A0   DB      		LDY #TOMSG^
  6C91   20   90   54 		JSR PRTSTR
  6C94   A2   A2      		LDX #ARG1
  6C96   A9   01      		LDA #$01
  6C98   20   F6   65 		JSR LTYPE
  6C9B   A2   61      	CHGNLP:	LDX #TOKPTR
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-158
NLOGO	SCREEN EDITOR

  6C9D   20   88   55 		JSR TFKADV
  6CA0   A5   62      		LDA TOKPTR+1
  6CA2   F0   1A      		BEQ CHGN2
  6CA4   A0   00      		LDY #$00
  6CA6   B1   61      		LDA (TOKPTR),Y
  6CA8   85   A2      		STA ARG1
  6CAA   C8           		INY
  6CAB   B1   61      		LDA (TOKPTR),Y
  6CAD   85   A3      		STA ARG1+1
  6CAF   A9   20      		LDA #$20
  6CB1   20   90   72 		JSR TPCHR
  6CB4   A9   00      		LDA #$00
  6CB6   A2   A2      		LDX #ARG1
  6CB8   20   F6   65 		JSR LTYPE
  6CBB   4C   9B   6C 		JMP CHGNLP
  6CBE   A5   C5      	CHGN2:	LDA EPOINT
  6CC0   85   42      		STA A4L
  6CC2   A5   C6      		LDA EPOINT+1
  6CC4   85   43      		STA A4H
  6CC6   20   CF   6C 		JSR CHGIN2
  6CC9   20   8F   6B 		JSR EDPBUF
  6CCC   4C   F1   6A 		JMP CHGLOP
                      
  6CCF   20   66   74 	CHGIN2:	JSR SETVID	;make output device be screen again
  6CD2   A5   C5      		LDA EPOINT
  6CD4   85   C7      		STA ENDBUF	;save end of buffer
  6CD6   A5   C6      		LDA EPOINT+1
  6CD8   85   C8      		STA ENDBUF+1
  6CDA   20   BF   6A 	CHGX1:	JSR PNTBEG
  6CDD   A9   17      		LDA #$17	;Window bottom to allow display of
  6CDF   85   23      		STA WNDBTM	;"Apple Logo Editor" crock
  6CE1   A9   20      		LDA #EDBUF^	;store location of first char displayed
  6CE3   85   B9      		STA TEMPN7+1	;on screen (at beginning of buffer)
  6CE5   A9   00      		LDA #EDBUF&$FF
  6CE7   85   B8      		STA TEMPN7
  6CE9   20   C8   6A 		JSR TOPSCR
  6CEC   4C   FE   6C 		JMP CHGNYM	;print editor name
                      
  6CEF   A9   D5      	CHGIN1:	LDA #EDOUT&$FF	;location of edbuf output
  6CF1   85   36      		STA CSWL
  6CF3   A9   6A      		LDA #EDOUT^	;routine (for TPCHR)
  6CF5   85   37      		STA CSWH
  6CF7   A9   01      		LDA #BUFFER
  6CF9   85   57      		STA INDEV
  6CFB   4C   BF   6A 		JMP PNTBEG	;initialize point for EDOUT
                      
  6CFE   20   4D   74 	CHGNYM:	JSR SETREV	;print the "Apple Logo Screen Editor" thing on
  6D01   A5   24      		LDA CH		;the bottom line.
  6D03   48           		PHA
  6D04   A5   25      		LDA CV		;save current screen location
  6D06   48           		PHA
  6D07   A5   28      		LDA BASLIN	;save old baseline
  6D09   48           		PHA
  6D0A   A5   29      		LDA BASLIN+1
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-159
NLOGO	SCREEN EDITOR

  6D0C   48           		PHA
  6D0D   A9   00      		LDA #$00
  6D0F   85   24      		STA CH		;far left
  6D11   A9   23      		LDA #$23
  6D13   85   25      		STA CV		;bottom of screen
  6D15   A9   D0      		LDA #$D0	;slight speed bum -- we know we want
  6D17   85   28      		STA BASLIN	;the bottom of the screen, so instead
  6D19   A9   07      		LDA #$07	;of calculating it via BCALC, we load
  6D1B   85   29      		STA BASLIN+1	;it up.
  6D1D   A2   45      		LDX #CHGMSG&$FF
  6D1F   A0   DB      		LDY #CHGMSG^
  6D21   20   90   54 		JSR PRTSTR
  6D24   68           		PLA
  6D25   85   29      		STA BASLIN+1
  6D27   68           		PLA
  6D28   85   28      		STA BASLIN
  6D2A   68           		PLA
  6D2B   85   25      		STA CV
  6D2D   68           		PLA
  6D2E   85   24      		STA CH
  6D30   4C   55   74 		JMP SETNRM
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-160
NLOGO	SCREEN EDITOR

                      	;Command subroutines. It is the responsibility of a command to do its
                      	;own redisplay, leave CH and CV indicating the position of the point
                      	;on the screen, and the appropriate value in BASLIN before returning
                      	;to CHGLOP. The cursor will be turned on by CHGLOP, however.
                      	;Any command (that does anything) must update the database. The
                      	;database consists of the edit buffer (EDBUF), whose contents must be
                      	;updated by insertions/deletions; the point (EPOINT,EPOINT+1); the
                      	;location in the EDBUF of the first character displayed on the screen
                      	;(TEMPN7,TEMPN7+1); the location in the EDBUF AFTER the last character
                      	;displayed on the screen (TEMPN8,TEMPN8+1), and the location AFTER
                      	;the last character in the EDBUF (ENDBUF,ENDBUF+1).
                      
  6D33   48           	INSERT:	PHA		;save char
  6D34   20   6F   6D 		JSR MVDOWN	;move the buffer (starting at point) down one.
  6D37   68           		PLA
  6D38   48           		PHA
  6D39   20   D5   6A 		JSR EDOUT	;put the char in the edit buffer
  6D3C   68           		PLA
  6D3D   C9   0D      		CMP #$0D
  6D3F   F0   26      		BEQ INSRCR
  6D41   A6   24      		LDX CH
  6D43   E8           		INX
  6D44   E4   21      		CPX WNDWTH	;Are we at end of line...
  6D46   90   19      		BCC INSRT2	;no, output straight
  6D48   48           		PHA
  6D49   A9   21      		LDA #'!		;output a line continuation char.
  6D4B   20   0C   75 		JSR COUT
  6D4E   68           		PLA		;recover char
  6D4F   A6   25      		LDX CV		;if we output the line cont. char then COUT
  6D51   4C   57   6D 		JMP INSRT0	;has inc'ed CV, so don't do it again.
  6D54   A6   25      	INSRT1:	LDX CV
  6D56   E8           		INX
  6D57   E4   23      	INSRT0:	CPX WNDBTM	;are we at end of screen...
  6D59   D0   06      		BNE INSRT2
  6D5B   48           		PHA		;yes, redisplay instead of EDSPBF
  6D5C   20   23   6E 		JSR CENTER	;^L type redisplay
  6D5F   68           		PLA
  6D60   60           	INSRTS:	RTS
  6D61   20   0C   75 	INSRT2:	JSR COUT	;output char to screen
  6D64   4C   87   6B 		JMP EDSPBF	;redisplay buffer from point down
  6D67   48           	INSRCR:	PHA
  6D68   20   9B   75 		JSR CLREOL
  6D6B   68           		PLA
  6D6C   4C   54   6D 		JMP INSRT1
                      
                      	;move the contents of the edit buffer after point down one until
                      	;reaching end of buffer contents (NOT end of buffer). Increments end
                      	;of buffer contents pointer. Bashes AC,Y.
                      
  6D6F   A5   C7      	MVDOWN:	LDA ENDBUF
  6D71   38           		SEC
  6D72   E9   01      		SBC #$01
  6D74   85   3C      		STA A1L
  6D76   A5   C8      		LDA ENDBUF+1
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-161
NLOGO	SCREEN EDITOR

  6D78   E9   00      		SBC #$00
  6D7A   85   3D      		STA A1H
  6D7C   A0   01      		LDY #$01
  6D7E   A5   3D      	MVLOOP:	LDA A1H
  6D80   C5   C6      		CMP EPOINT+1
  6D82   90   1B      		BCC MVRTS
  6D84   D0   06      		BNE MVCONT
  6D86   A5   3C      		LDA A1L
  6D88   C5   C5      		CMP EPOINT
  6D8A   90   13      		BCC MVRTS
  6D8C   88           	MVCONT:	DEY
  6D8D   B1   3C      		LDA (A1L),Y
  6D8F   C8           		INY
  6D90   91   3C      		STA (A1L),Y
  6D92   A5   3C      		LDA A1L
  6D94   38           		SEC
  6D95   E9   01      		SBC #$01
  6D97   85   3C      		STA A1L
  6D99   B0   E3      		BCS MVLOOP
  6D9B   C6   3D      		DEC A1H
  6D9D   90   DF      		BCC MVLOOP	;(Always)
  6D9F   E6   C7      	MVRTS:	INC ENDBUF
  6DA1   D0   02      		BNE MVRTS1
  6DA3   E6   C8      		INC ENDBUF+1
  6DA5   60           	MVRTS1:	RTS
                      
                      	;RDSPNT repositions the text on the screen around the point. The AC
                      	;should hold the number of lines before the point one wants redisplay
                      	;to start from. So, for ^L it should hold 12; for M-V it should hold
                      	;23. RDSPNT will get confused if given a buffer that contains more
                      	;than 256*39 contiguous chars without a carriage-return in them,
                      	;because we have a one-bite physical line counter. You change it. Sets
                      	;first and last char on screen pointers.
                      
  6DA6   85   3D      	RDSPNT:	STA A1H		;store the number of lines one wants before
  6DA8   A0   00      		LDY #$00	;point on screen
  6DAA   84   3C      		STY A1L		;zero char-counter
  6DAC   84   3E      		STY A2L 	;zero line-counter
  6DAE   A5   C6      		LDA EPOINT+1
  6DB0   85   43      		STA A4H		;save for recovery by EDPBUF
  6DB2   A5   C5      		LDA EPOINT
  6DB4   85   42      		STA A4L
  6DB6   38           		SEC
  6DB7   E5   24      		SBC CH		;get to beginning of screen line
  6DB9   85   C5      		STA EPOINT
  6DBB   B0   02      		BCS RDSPT2
  6DBD   C6   C6      		DEC EPOINT+1
  6DBF   20   B3   6A 	RDSPT2:	JSR DECPNT
  6DC2   A9   20      		LDA #EDBUF^
  6DC4   C5   C6      		CMP EPOINT+1
  6DC6   90   0C      		BCC RDSPT3	;if EDBUF is less than point, you're in
  6DC8   A9   00      		LDA #EDBUF&$FF	;buffer, otherwise at beginning or before
  6DCA   C5   C5      		CMP EPOINT	;if at beginning or before (horrors) quit
  6DCC   90   06      		BCC RDSPT3	;else continue
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-162
NLOGO	SCREEN EDITOR

  6DCE   20   BF   6A 		JSR PNTBEG
  6DD1   4C   E2   6D 		JMP COUNTM
  6DD4   B1   C5      	RDSPT3:	LDA (EPOINT),Y
  6DD6   C9   0D      		CMP #$0D	;CR
  6DD8   F0   08      		BEQ COUNTM	;if so, see if we have enough lines now
  6DDA   E6   3C      		INC A1L		;else bump char counter
  6DDC   A5   3C      		LDA A1L
  6DDE   C9   27      		CMP #$27	;do we have a full line...
  6DE0   D0   DD      		BNE RDSPT2	;no, go back for more
  6DE2   84   3C      	COUNTM:	STY A1L		;zero char counter
  6DE4   E6   3E      		INC A2L		;bump line counter
  6DE6   A5   3E      		LDA A2L		;lines gotten
  6DE8   C5   3D      		CMP A1H		;lines wanted
  6DEA   F0   29      		BEQ REDISP	;if same, we done won, go redisplay.
  6DEC   B0   0E      		BCS CNTDWN
  6DEE   A5   C6      		LDA EPOINT+1
  6DF0   C9   20      		CMP #EDBUF^
  6DF2   D0   CB      		BNE RDSPT2	;if too few and at beginning of buffer,
  6DF4   A5   C5      		LDA EPOINT
  6DF6   C9   00      		CMP #EDBUF&$FF	;redisplay anyway
  6DF8   F0   1B      		BEQ REDISP
  6DFA   D0   C3      		BNE RDSPT2	;else go for more
  6DFC   A5   3E      	CNTDWN:	LDA A2L		;faster than a multiply, usually
  6DFE   38           		SEC
  6DFF   E5   3D      		SBC A1H		;# of extra lines
  6E01   85   40      		STA A3L
  6E03   A5   C5      	CNTLOP:	LDA EPOINT
  6E05   18           		CLC
  6E06   69   27      		ADC #$27	;move down a screen line of chars
  6E08   90   02      		BCC CNTLP2
  6E0A   E6   C6      		INC EPOINT+1
  6E0C   A5   40      	CNTLP2:	LDA A3L
  6E0E   38           		SEC
  6E0F   E9   01      		SBC #$01	;dec line counter
  6E11   85   40      		STA A3L
  6E13   D0   EE      		BNE CNTLOP	;go for more if not zero
  6E15   20   C8   6A 	REDISP:	JSR TOPSCR	;physical cursor at top of screen
  6E18   A5   C5      		LDA EPOINT
  6E1A   85   B8      		STA TEMPN7	;make first-char-on-screen point
  6E1C   A5   C6      		LDA EPOINT+1
  6E1E   85   B9      		STA TEMPN7+1
  6E20   4C   8F   6B 		JMP EDPBUF	;redisplay and restore point
                      
                      	;redisplay screen around point. Sets CV, CH, BASLIN,
                      	;first-char-on-screen, char-after-last-char-on-screen.
  6E23   A9   0C      	CENTER:	LDA #$0C	;#$0C = 12.
  6E25   4C   A6   6D 		JMP RDSPNT	;redisplay for point on 13th line
                      
                      	;NXTSCR moves to the next screenful in the buffer and displays it,
                      	;setting point to the character after the last char on the previous
                      	;screenful (thus it will be at top of screen).
                      
  6E28   A5   BB      	NXTSCR:	LDA TEMPN8+1
  6E2A   C5   C8      		CMP ENDBUF+1
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-163
NLOGO	SCREEN EDITOR

  6E2C   D0   06      		BNE NXTSC2
  6E2E   A5   BA      		LDA TEMPN8
  6E30   C5   C7      		CMP ENDBUF
  6E32   F0   3E      		BEQ RCMPLN	;complain if no next screen
  6E34   A5   BA      	NXTSC2:	LDA TEMPN8
  6E36   85   C5      		STA EPOINT	;point
  6E38   85   B8      		STA TEMPN7	;first char on screen
  6E3A   A5   BB      		LDA TEMPN8+1
  6E3C   85   C6      		STA EPOINT+1
  6E3E   85   B9      		STA TEMPN7+1
  6E40   20   C8   6A 		JSR TOPSCR
  6E43   4C   87   6B 		JMP EDSPBF	;display
                      
                      	;PRVSCR moves to the previous screenful in the buffer, leaves point at
                      	;the top.
                      
  6E46   A5   B8      	PRVSCR:	LDA TEMPN7
  6E48   85   C5      		STA EPOINT	;make point be beginning of screen
  6E4A   A5   B9      		LDA TEMPN7+1
  6E4C   85   C6      		STA EPOINT+1
  6E4E   A9   17      		LDA #$17	;redisplay 23 lines before it
  6E50   20   A6   6D 		JSR RDSPNT
  6E53   A5   B8      		LDA TEMPN7
  6E55   85   C5      		STA EPOINT	;make point be beginning of screen
  6E57   A5   B9      		LDA TEMPN7+1
  6E59   85   C6      		STA EPOINT+1
  6E5B   4C   C8   6A 		JMP TOPSCR	;cursor at top of screen
                      
                      	;RUBOUT deletes char behind cursor, redisplays.
  6E5E   A5   C6      	RUBOUT:	LDA EPOINT+1
  6E60   C9   20      		CMP #EDBUF^
  6E62   90   0E      		BCC RCMPLN	;are we before or at beginning...
  6E64   D0   06      		BNE RUBOT2
  6E66   A9   00      		LDA #EDBUF&$FF	;I know the switch is unorthodox, sorry
  6E68   C5   C5      		CMP EPOINT
  6E6A   B0   06      		BCS RCMPLN
  6E6C   20   25   6F 	RUBOT2:	JSR BACKUP
  6E6F   4C   83   6E 		JMP DELET2
  6E72   4C   16   75 	RCMPLN:	JMP BELL	;complain if so.
                      
                      	;DELETE deletes char under cursor, redisplays.
  6E75   A5   C8      	DELETE:	LDA ENDBUF+1
  6E77   C5   C6      		CMP EPOINT+1
  6E79   90   F7      		BCC RCMPLN	;if at buffer end, complain
  6E7B   D0   06      		BNE DELET2
  6E7D   A5   C5      		LDA EPOINT
  6E7F   C5   C7      		CMP ENDBUF
  6E81   B0   EF      		BCS RCMPLN
  6E83   A9   01      	DELET2:	LDA #$01	;only moving stuff up one place
  6E85   85   3C      		STA A1L
  6E87   A9   00      		LDA #$00
  6E89   85   3D      		STA A1H
  6E8B   A9   3C      		LDA #A1L&$FF
  6E8D   20   93   6E 		JSR MOVEUP
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-164
NLOGO	SCREEN EDITOR

  6E90   4C   87   6B 		JMP EDSPBF
                      
                      	;MOVEUP takes the location of an arg in AC,Y and moves the argth char
                      	;after the point into the point, the arg+1th into the point+1, and so
                      	;on until the buffer end is reached. Then it sets the end of buffer
                      	;pointer to the point before restoring it. Better make plenty damned
                      	;sure that MOVEUP is used carefully so that end-of-buffer-pointer
                      	;doesn't become too small.
  6E93   AA           	MOVEUP:	TAX
  6E94   A5   C5      		LDA EPOINT	;we are saving point to restore it later
  6E96   48           		PHA
  6E97   85   6A      		STA TEMPX3	;in TEMPX3 for source
  6E99   A5   C6      		LDA EPOINT+1
  6E9B   48           		PHA
  6E9C   85   6B      		STA TEMPX3+1
  6E9E   B5   00      		LDA $00,X
  6EA0   18           		CLC
  6EA1   65   6A      		ADC TEMPX3	;and add to point for source address
  6EA3   85   6A      		STA TEMPX3
  6EA5   B5   01      		LDA $01,X
  6EA7   65   6B      		ADC TEMPX3+1
  6EA9   85   6B      		STA TEMPX3+1
  6EAB   A5   6B      	MVULOP:	LDA TEMPX3+1
  6EAD   C5   C8      		CMP ENDBUF+1	;are we looking at end-of-buffer...
  6EAF   90   08      		BCC MVULP2	;no, continue
  6EB1   D0   18      		BNE MVURTS	;past, return
  6EB3   A5   6A      		LDA TEMPX3
  6EB5   C5   C7      		CMP ENDBUF
  6EB7   B0   12      		BCS MVURTS	;past or end, return
  6EB9   A0   00      	MVULP2:	LDY #$00
  6EBB   B1   6A      		LDA (TEMPX3),Y	;source
  6EBD   91   C5      		STA (EPOINT),Y	;dest
  6EBF   20   AC   6A 		JSR INCPNT	;inc dest
  6EC2   E6   6A      		INC TEMPX3	;inc source
  6EC4   D0   E5      		BNE MVULOP
  6EC6   E6   6B      		INC TEMPX3+1
  6EC8   4C   AB   6E 		JMP MVULOP
  6ECB   A5   C5      	MVURTS:	LDA EPOINT
  6ECD   85   C7      		STA ENDBUF	;new end-of-buffer
  6ECF   A5   C6      		LDA EPOINT+1
  6ED1   85   C8      		STA ENDBUF+1
  6ED3   68           		PLA
  6ED4   85   C6      		STA EPOINT+1
  6ED6   68           		PLA
  6ED7   85   C5      		STA EPOINT	;recover point
  6ED9   60           		RTS		;that's all, folks
                      
                      	;FORCHR moves forward one character, bells if at end of buffer.
  6EDA   A5   C6      	FORCHR: LDA EPOINT+1
  6EDC   C5   C8      		CMP ENDBUF+1
  6EDE   90   08      		BCC FORCH2	;if at buffer end complain
  6EE0   D0   23      		BNE FCMPLN
  6EE2   A5   C5      		LDA EPOINT
  6EE4   C5   C7      		CMP ENDBUF
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-165
NLOGO	SCREEN EDITOR

  6EE6   B0   1D      		BCS FCMPLN
  6EE8   A5   BA      	FORCH2:	LDA TEMPN8	;!!**CROCK**!! THIS CAUSES REDISPLAY WHEN
  6EEA   38           		SEC		;YOU TRY FORWARD ON NEXT TO LAST CHAR IN
  6EEB   E9   01      		SBC #$01	;BUFFER!!! SHOULD CHECK CV,CH OR (EPOINT).
  6EED   85   40      		STA A3L		;see if on last char on screen
  6EEF   A5   BB      		LDA TEMPN8+1
  6EF1   E9   00      		SBC #$00
  6EF3   85   41      		STA A3H
  6EF5   C5   C6      		CMP EPOINT+1
  6EF7   D0   0F      		BNE FORCH3
  6EF9   A5   40      		LDA A3L
  6EFB   C5   C5      		CMP EPOINT
  6EFD   D0   09      		BNE FORCH3
  6EFF   20   AC   6A 		JSR INCPNT	;yes, inc point and center
  6F02   4C   23   6E 		JMP CENTER
  6F05   4C   16   75 	FCMPLN:	JMP BELL
  6F08   A0   00      	FORCH3:	LDY #$00
  6F0A   B1   C5      		LDA (EPOINT),Y
  6F0C   C9   0D      		CMP #$0D
  6F0E   D0   0A      		BNE FORCH5
  6F10   84   24      	FORCH4:	STY CH		;if on a CR, we know we're not at end of
  6F12   E6   25      		INC CV		;screen by now, so zero CH, inc CV.
  6F14   20   7F   75 		JSR BCALC	;must calc new baseline
  6F17   4C   AC   6A 		JMP INCPNT
  6F1A   A5   24      	FORCH5:	LDA CH
  6F1C   C9   26      		CMP #$26	;at right before "!"
  6F1E   F0   F0      		BEQ FORCH4
  6F20   E6   24      		INC CH
  6F22   4C   AC   6A 		JMP INCPNT
                      
                      	;BACKUP backs CH and CV up, decs point. No redisplay, unless page
                      	;boundary crossed, or previous char is a CR. Don't call it unless the
                      	;database is consistent; i.e., CV and CH are at the point on the
                      	;screen.
  6F25   A9   20      	BACKUP:	LDA #EDBUF^	;check if at beginning of buffer
  6F27   C5   C6      		CMP EPOINT+1
  6F29   90   08      		BCC BACK2	;no, win
  6F2B   D0   D8      		BNE FCMPLN	;yes, complain, quit
  6F2D   A9   00      		LDA #EDBUF&$FF
  6F2F   C5   C5      		CMP EPOINT
  6F31   B0   D2      		BCS FCMPLN
  6F33   20   B3   6A 	BACK2:	JSR DECPNT
  6F36   A5   25      		LDA CV		;see if we're at beginning of screen
  6F38   D0   07      		BNE BACK3
  6F3A   A5   24      		LDA CH
  6F3C   D0   03      		BNE BACK3
  6F3E   4C   23   6E 		JMP CENTER	;center
  6F41   A5   24      	BACK3:	LDA CH
  6F43   D0   28      		BNE BACK5
  6F45   A0   00      		LDY #$00
  6F47   B1   C5      		LDA (EPOINT),Y
  6F49   C9   0D      		CMP #$0D	;#$0D = CR
  6F4B   D0   16      		BNE BACK4
  6F4D   A5   C5      		LDA EPOINT
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-166
NLOGO	SCREEN EDITOR

  6F4F   85   42      		STA A4L		;when we back over a cr we call
  6F51   A5   C6      		LDA EPOINT+1	;EDPBUF so as to save space (by
  6F53   85   43      		STA A4H		;not having code here to count down a
  6F55   A5   B8      		LDA TEMPN7	;line)
  6F57   85   C5      		STA EPOINT
  6F59   A5   B9      		LDA TEMPN7+1
  6F5B   85   C6      		STA EPOINT+1
  6F5D   20   C8   6A 		JSR TOPSCR
  6F60   4C   8F   6B 		JMP EDPBUF	;don't need redisplay, space bum
  6F63   C6   25      	BACK4:	DEC CV
  6F65   A9   26      		LDA #$26	;just before the "!"
  6F67   85   24      		STA CH
  6F69   20   7F   75 		JSR BCALC
  6F6C   60           		RTS
  6F6D   C6   24      	BACK5:	DEC CH
  6F6F   60           		RTS
                      
                      	;UPLINE moves to the previous line, maintaining horizontal position if
                      	;that line's length allows it. Does redisplay. Bashes A4L, A4H, A3L,
                      	;A3H.
                      
  6F70   A0   00      	UPLINE:	LDY #$00
  6F72   84   42      		STY A4L		;zero char counters - A3L, A3H for desired
  6F74   84   40      		STY A3L		;line's length; A4L, A4H for current line's
  6F76   84   43      		STY A4H		;length up to current char
  6F78   84   41      		STY A3H
  6F7A   A5   C5      		LDA EPOINT	;complain if at beginning of buffer
  6F7C   C9   00      		CMP #EDBUF&$FF
  6F7E   D0   06      		BNE UPLOP1
  6F80   A5   C6      		LDA EPOINT+1
  6F82   C9   20      		CMP #EDBUF^
  6F84   F0   1E      		BEQ UCMPLN
  6F86   20   B3   6A 	UPLOP1:	JSR DECPNT	;dec point; we are searching (while counting
  6F89   A5   C5      		LDA EPOINT	;chars) for the beginning of this line.
  6F8B   C9   00      		CMP #EDBUF&$FF
  6F8D   D0   06      		BNE UPLOP2	;complain if you encounter the buffer
  6F8F   A5   C6      		LDA EPOINT+1	;beginning while doing this, because this
  6F91   C9   20      		CMP #EDBUF^	;means there was no previous line.
  6F93   F0   0F      		BEQ UCMPLN
  6F95   B1   C5      	UPLOP2:	LDA (EPOINT),Y
  6F97   C9   0D      		CMP #$0D	;if we are on a CR we have gotten as far as we
  6F99   F0   0C      		BEQ GETNXT	;want, found Nirvana, all that stuff. Go check
  6F9B   E6   42      		INC A4L		;out the previous line; else inc counter and
  6F9D   D0   E7      		BNE UPLOP1	;go back for more.
  6F9F   E6   43      		INC A4H
  6FA1   4C   86   6F 		JMP UPLOP1
  6FA4   4C   16   75 	UCMPLN:	JMP BELL	;complain
  6FA7   A5   C5      	GETNXT:	LDA EPOINT	;if at buffer beginning we are done and should
  6FA9   C9   00      		CMP #EDBUF&$FF	;go do compares.
  6FAB   D0   09      		BNE GTNXT2
  6FAD   A5   C6      		LDA EPOINT+1
  6FAF   C9   20      		CMP #EDBUF^
  6FB1   F0   18      		BEQ GTDOWN	;if we get to buffer beginning count back
  6FB3   20   B3   6A 		JSR DECPNT	;down
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-167
NLOGO	SCREEN EDITOR

  6FB6   B1   C5      	GTNXT2:	LDA (EPOINT),Y
  6FB8   C9   0D      		CMP #$0D	;also count back down if we found a CR, but
  6FBA   D0   06      		BNE GTNXT3	;first inc pint to be on real beginning of
  6FBC   20   AC   6A 		JSR INCPNT	;line.
  6FBF   4C   CB   6F 		JMP GTDOWN
  6FC2   E6   40      	GTNXT3:	INC A3L		;else inc counter and go fer more.
  6FC4   D0   E1      		BNE GETNXT
  6FC6   E6   41      		INC A3H
  6FC8   4C   A7   6F 		JMP GETNXT
  6FCB   A5   43      	GTDOWN:	LDA A4H		;in GTDOWN (maw faw) what we are doing is
  6FCD   C5   41      		CMP A3H		;comparing the lengths of the desired line
  6FCF   90   0A      		BCC OLDWIN	;and the old line. If that of the desired
  6FD1   D0   18      		BNE NEWWIN	;is the lesser, we will move down it the
  6FD3   A5   42      		LDA A4L		;length of the old one. Otherwise we will
  6FD5   C5   40      		CMP A3L		;go to its end.
  6FD7   90   02      		BCC OLDWIN
  6FD9   B0   10      		BCS NEWWIN
  6FDB   A5   C5      	OLDWIN:	LDA EPOINT
  6FDD   18           		CLC
  6FDE   65   42      		ADC A4L		;add length to point
  6FE0   85   C5      		STA EPOINT
  6FE2   A5   C6      		LDA EPOINT+1
  6FE4   65   43      		ADC A4H
  6FE6   85   C6      		STA EPOINT+1
  6FE8   4C   F8   6F 		JMP GTRDSP
  6FEB   A5   C5      	NEWWIN:	LDA EPOINT
  6FED   18           		CLC
  6FEE   65   40      		ADC A3L		;add length to point
  6FF0   85   C5      		STA EPOINT
  6FF2   A5   C6      		LDA EPOINT+1
  6FF4   65   41      		ADC A3H
  6FF6   85   C6      		STA EPOINT+1
  6FF8   C5   B9      	GTRDSP:	CMP TEMPN7+1
  6FFA   90   25      		BCC UCENTR	;now we see if we are off the screen
  6FFC   D0   08      		BNE GTRDP2
  6FFE   A5   C5      		LDA EPOINT
  7000   C5   B8      		CMP TEMPN7
  7002   90   1D      		BCC UCENTR	;if before beginning CENTER
  7004   F0   1E      		BEQ UTPSCR	;if exactly at top no redisplay necessary
  7006   A5   C6      	GTRDP2:	LDA EPOINT+1
  7008   C5   BB      		CMP TEMPN8+1
  700A   90   0A      		BCC GTRDP3	;if in bounds call EDPBUF
  700C   D0   13      		BNE UCENTR	;if after (need to check because this
  700E   A5   C5      		LDA EPOINT	;routine also used by NXTLIN), CENTER.
  7010   C5   BA      		CMP TEMPN8
  7012   90   02      		BCC GTRDP3
  7014   B0   0B      		BCS UCENTR	;always
  7016   A5   C5      	GTRDP3:	LDA EPOINT	;point stored for recovery by EDPBUF
  7018   85   42      		STA A4L
  701A   A5   C6      		LDA EPOINT+1
  701C   85   43      		STA A4H
  701E   4C   15   6E 		JMP REDISP
  7021   4C   23   6E 	UCENTR:	JMP CENTER
  7024   4C   C8   6A 	UTPSCR:	JMP TOPSCR
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-168
NLOGO	SCREEN EDITOR

                      
                      	;OPLINE inserts a CR at point w/o inc'ing point.
  7027   A5   C6      	OPLINE:	LDA EPOINT+1
  7029   C9   3F      		CMP #EBFEND^
  702B   90   08      		BCC OPLIN1
  702D   D0   12      		BNE OPLRTS
  702F   A5   C5      		LDA EPOINT
  7031   C9   FB      		CMP #EBFEND&$FF	;Are we at end of edit buffer...
  7033   B0   0C      		BCS OPLRTS	;if so, quit
  7035   20   6F   6D 	OPLIN1:	JSR MVDOWN
  7038   A0   00      		LDY #$00
  703A   A9   0D      		LDA #$0D
  703C   91   C5      		STA (EPOINT),Y	;insert CR at point
  703E   4C   87   6B 		JMP EDSPBF	;redisplay from here down.
  7041   60           	OPLRTS:	RTS
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-169
NLOGO	FILE SYSTEM

                      	.SBTTL	File System
  7042   A2   A2      	SDELET:	LDX #ARG1
  7044   20   80   52 		JSR VPOP
  7047   20   7F   5D 		JSR GETTYP
  704A   C9   07      		CMP #SATOM
  704C   F0   27      		BEQ SDELR2
  704E   C9   01      		CMP #ATOM
  7050   D0   26      		BNE SDELR3
  7052   20   BA   70 		JSR DOSSTP
  7055   A2   A2      		LDX #DELETM&$FF
  7057   A0   DB      		LDY #DELETM^
  7059   20   90   54 		JSR PRTSTR
  705C   A2   A2      		LDX #ARG1
  705E   A9   01      		LDA #$01
  7060   20   1F   72 		JSR DTPATM	;Type atom DOS-style
  7063   A2   B6      		LDX #LOGOM&$FF
  7065   A0   DB      		LDY #LOGOM^
  7067   20   90   54 		JSR PRTSTR
  706A   A9   8D      		LDA #$8D
  706C   20   90   72 		JSR TPCHR
  706F   20   D3   70 		JSR UNDSTP
  7072   4C   1E   41 		JMP POPJ
  7075   4C   77   84 	SDELR2:	JMP SPO5S	;(ERROR XUBL,ARG1)
  7078   4C   21   7C 	SDELR3:	JMP SMAKE2	;(ERROR XWTA,ARG1,CURTOK)
                      
                      	;file routines should call this to set up error return from DOS.
  707B   A5   D8      	STDERR:	LDA DOSERR
  707D   09   80      		ORA #$80	;high bit on for DOSERR flag
  707F   85   D8      		STA DOSERR
  7081   A9   8C      		LDA #DERROR&$FF
  7083   8D   5A   9D 		STA DSERET
  7086   A9   70      		LDA #DERROR^
  7088   8D   5B   9D 		STA DSERET+1
  708B   60           		RTS
                      
                      	;DOS error routine comes here
  708C   20   6C   72 	DERROR:	JSR RSTIO
  708F   A5   DE      		LDA DERCOD	;DOS error code
  7091   C9   04      		CMP #$04
  7093   F0   11      		BEQ WTPROT	;write-protected file
  7095   C9   06      		CMP #$06
  7097   F0   12      		BEQ FLNFND	;file not found
  7099   C9   09      		CMP #$09
  709B   F0   13      		BEQ DSKFUL	;disk full
  709D   C9   0A      		CMP #$0A
  709F   F0   14      		BEQ LCKFIL	;attempt to overwrite a locked file
  70A1   A9   25      	IOERRR:	LDA #XIOR	;i/o error
  70A3   4C   42   61 		JMP ERROR
  70A6   A9   26      	WTPROT:	LDA #XWTP
  70A8   4C   42   61 		JMP ERROR
  70AB   A9   27      	FLNFND:	LDA #XFNF
  70AD   4C   42   61 		JMP ERROR
  70B0   A9   28      	DSKFUL:	LDA #XDKF
  70B2   4C   42   61 		JMP ERROR
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-170
NLOGO	FILE SYSTEM

  70B5   A9   29      	LCKFIL:	LDA #XLKF
  70B7   4C   42   61 		JMP ERROR
                      
                      	;set up magic things for DOS
  70BA   A9   40      	DOSSTP:	LDA #$40	;magic number for Applesoft
  70BC   8D   B6   AA 		STA DLNGFG	;store in DOS language flag
  70BF   A5   7F      		LDA DSPFL2
  70C1   85   6A      		STA TEMPX3
  70C3   A9   00      		LDA #$00
  70C5   85   7F      		STA DSPFL2	;store things not = to $FF
  70C7   85   33      		STA DSPFL1	;or apple val for ], in these, respectively.
  70C9   20   7B   70 		JSR STDERR	;set up return address for DOS error
  70CC   20   5E   72 		JSR SAPOUT	;store APOUT in CSWL so DOS prints properly
  70CF   20   51   A8 		JSR DOSEAT	;let DOS eat these
  70D2   60           		RTS
                      
                      	;unset up magic things for DOS
  70D3   A5   6A      	UNDSTP:	LDA TEMPX3
  70D5   85   7F      		STA DSPFL2
  70D7   4C   6C   72 		JMP RSTIO
                      
  70DA   A5   57      	SSAVE:	LDA INDEV
  70DC   D0   66      		BNE SAVSR1	;Error if editing with ALEC
  70DE   A5   09      		LDA GRPHCS
  70E0   F0   05      		BEQ SAVST1
  70E2   20   87   72 		JSR RESETT
  70E5   C6   09      		DEC GRPHCS
  70E7   A2   A2      	SAVST1:	LDX #ARG1
  70E9   20   80   52 		JSR VPOP
  70EC   20   7F   5D 		JSR GETTYP
  70EF   C9   07      		CMP #SATOM
  70F1   F0   56      		BEQ SAVSR2
  70F3   C9   01      		CMP #ATOM
  70F5   D0   55      		BNE SAVSR3
  70F7   20   EF   6C 		JSR CHGIN1	;output to buffer
  70FA   20   32   85 		JSR POFUNS	;get functions into buffer
  70FD   20   85   84 		JSR PONAMS	;get variables into buffer
  7100   A5   C5      		LDA EPOINT
  7102   85   C7      		STA ENDBUF
  7104   A5   C6      		LDA EPOINT+1
  7106   85   C8      		STA ENDBUF+1
  7108   A9   00      		LDA #$00
  710A   85   57      		STA INDEV	;Reset INDEV so quotes not printed on funny-pnames
  710C   20   BA   70 		JSR DOSSTP
  710F   A2   87      		LDX #SAVEM&$FF
  7111   A0   DB      		LDY #SAVEM^
  7113   20   90   54 		JSR PRTSTR
  7116   A2   A2      		LDX #ARG1
  7118   A9   01      		LDA #$01
  711A   20   1F   72 		JSR DTPATM	;Type atom DOS-style
  711D   A2   B6      		LDX #LOGOM&$FF
  711F   A0   DB      		LDY #LOGOM^
  7121   20   90   54 		JSR PRTSTR
  7124   A2   8F      		LDX #SAVEM2&$FF
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-171
NLOGO	FILE SYSTEM

  7126   A0   DB      		LDY #SAVEM2^
  7128   20   90   54 		JSR PRTSTR	;write file
  712B   20   4F   71 		JSR DPRLEN	;Give it file's length
  712E   A9   8D      		LDA #$8D
  7130   20   90   72 		JSR TPCHR	;let it go
  7133   20   BF   6A 		JSR PNTBEG
  7136   A9   00      		LDA #EDBUF&$FF
  7138   85   C7      		STA ENDBUF
  713A   A9   20      		LDA #EDBUF^
  713C   85   C8      		STA ENDBUF+1	;zero ENDBUF so RETRIEVE not possible
  713E   20   D3   70 		JSR UNDSTP
  7141   4C   1E   41 		JMP POPJ
  7144   A9   1D      	SAVSR1:	LDA #XNWE	;can't hack files from editor
  7146   4C   42   61 		JMP ERROR
  7149   4C   77   84 	SAVSR2:	JMP SPO5S	;(ERROR XUBL,ARG1)
  714C   4C   21   7C 	SAVSR3:	JMP SMAKE2	;(ERROR XWTA,ARG1,CURTOK)
                      
  714F   38           	DPRLEN:	SEC
  7150   A5   C7      		LDA ENDBUF
  7152   E9   00      		SBC #$00
  7154   85   A8      		STA TEMPN
  7156   A5   C8      		LDA ENDBUF+1
  7158   E9   20      		SBC #$20
  715A   85   A9      		STA TEMPN+1
  715C   20   61   71 		JSR DPR2HX
  715F   A5   A8      		LDA TEMPN
                      
  7161   48           	DPR2HX:	PHA
  7162   4A           		LSR A
  7163   4A           		LSR A
  7164   4A           		LSR A
  7165   4A           		LSR A
  7166   20   6A   71 		JSR DPRHEX
  7169   68           		PLA
                      
  716A   29   0F      	DPRHEX:	AND #$0F
  716C   C9   0A      		CMP #$0A
  716E   90   02      		BCC DPRH1
  7170   69   06      		ADC #$06
  7172   09   B0      	DPRH1:	ORA #$B0
  7174   4C   90   72 		JMP TPCHR
                      
  7177   A5   57      	SREAD:	LDA INDEV
  7179   D0   C9      		BNE SAVSR1	;Error if editing with ALEC
  717B   A5   09      		LDA GRPHCS
  717D   F0   05      		BEQ SRDF1
  717F   20   87   72 		JSR RESETT
  7182   C6   09      		DEC GRPHCS
  7184   A2   A2      	SRDF1:	LDX #ARG1
  7186   20   80   52 		JSR VPOP
  7189   20   7F   5D 		JSR GETTYP
  718C   C9   07      		CMP #SATOM
  718E   F0   B9      		BEQ SAVSR2
  7190   C9   01      		CMP #ATOM
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-172
NLOGO	FILE SYSTEM

  7192   D0   B8      		BNE SAVSR3
  7194   20   BA   70 		JSR DOSSTP
  7197   A2   9A      		LDX #LOADM&$FF
  7199   A0   DB      		LDY #LOADM^
  719B   20   90   54 		JSR PRTSTR
  719E   A2   A2      		LDX #ARG1
  71A0   A9   01      		LDA #$01
  71A2   20   1F   72 		JSR DTPATM	;Type atom DOS-style
  71A5   A2   B6      		LDX #LOGOM&$FF
  71A7   A0   DB      		LDY #LOGOM^
  71A9   20   90   54 		JSR PRTSTR
  71AC   A9   8D      		LDA #$8D
  71AE   20   90   72 		JSR TPCHR
  71B1   20   D3   70 		JSR UNDSTP
  71B4   18           		CLC
  71B5   AD   60   AA 		LDA FILLEN
  71B8   69   00      		ADC #EDBUF&$FF
  71BA   85   C7      		STA ENDBUF	;recover buffer length from file length
  71BC   AD   61   AA 		LDA FILLEN+1
  71BF   69   20      		ADC #EDBUF^
  71C1   85   C8      		STA ENDBUF+1
  71C3   A9   01      		LDA #BUFFER
  71C5   85   57      		STA INDEV
  71C7   A2   DA      		LDX #SRDF2&$FF
  71C9   A0   71      		LDY #SRDF2^
  71CB   20   37   52 		JSR PUSH	;Return address from SREAD2
  71CE   20   BF   6A 		JSR PNTBEG	;point to beginning
  71D1   20   79   72 		JSR CLRCBF
  71D4   20   87   72 		JSR RESETT	;Clear the output device
  71D7   4C   5C   44 		JMP SREAD1
                      
  71DA   20   6C   72 	SRDF2:	JSR RSTIO
  71DD   A9   00      		LDA #EDBUF&$FF
  71DF   85   C7      		STA ENDBUF
  71E1   A9   20      		LDA #EDBUF^
  71E3   85   C8      		STA ENDBUF+1
  71E5   4C   1E   41 		JMP POPJ
                      
  71E8   20   BA   70 	SCATLG:	JSR DOSSTP
  71EB   AD   ED   FD 		LDA APCOUT
  71EE   48           		PHA
  71EF   AD   EE   FD 		LDA APCOUT+1
  71F2   48           		PHA
  71F3   AD   EF   FD 		LDA APCOUT+2
  71F6   48           		PHA		;Holy Mother of God, forgive us for this
  71F7   A9   6C      		LDA #$6C	;JMP
  71F9   8D   ED   FD 		STA APCOUT
  71FC   A9   36      		LDA #$36	;(CSWL) Dear God, forgive me
  71FE   8D   EE   FD 		STA APCOUT+1
  7201   A9   00      		LDA #$00	;I'm sorry, DOS does a JSR $FDED here -
  7203   8D   EF   FD 		STA APCOUT+2	;it depends on their monitor being in
  7206   A2   AB      		LDX #CATLGM&$FF	;place...
  7208   A0   DB      		LDY #CATLGM^
  720A   20   90   54 		JSR PRTSTR
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-173
NLOGO	FILE SYSTEM

  720D   68           		PLA
  720E   8D   EF   FD 		STA APCOUT+2
  7211   68           		PLA
  7212   8D   EE   FD 		STA APCOUT+1
  7215   68           		PLA
  7216   8D   ED   FD 		STA APCOUT
  7219   20   D3   70 		JSR UNDSTP
  721C   4C   1E   41 		JMP POPJ
                      
  721F   A5   A2      	DTPATM:	LDA ARG1
  7221   29   FC      		AND #$FC
  7223   85   A2      		STA ARG1
  7225   A2   A2      		LDX #ARG1
  7227   A0   B4      		LDY #TEMPN5
  7229   20   83   59 		JSR GETPNM
  722C   A5   B5      	DTPTMW:	LDA TEMPN5+1
  722E   F0   48      		BEQ RSTR
  7230   A0   00      		LDY #$00
  7232   B1   B4      		LDA (TEMPN5),Y
  7234   85   A6      		STA TEMPNH
  7236   C8           		INY
  7237   B1   B4      		LDA (TEMPN5),Y
  7239   85   A7      		STA TEMPNH+1	;(CAR)
  723B   C8           		INY
  723C   B1   B4      		LDA (TEMPN5),Y
  723E   AA           		TAX
  723F   C8           		INY
  7240   B1   B4      		LDA (TEMPN5),Y
  7242   85   B5      		STA TEMPN5+1
  7244   86   B4      		STX TEMPN5	;(CDR)
  7246   A5   A6      		LDA TEMPNH
  7248   09   80      		ORA #$80
  724A   20   90   72 		JSR TPCHR
  724D   A5   A7      		LDA TEMPNH+1
  724F   F0   27      		BEQ RSTR
  7251   09   80      		ORA #$80
  7253   20   90   72 		JSR TPCHR
  7256   4C   2C   72 		JMP DTPTMW
                      
  7259   29   7F      	APOUT:	AND #$7F	;eat Apple idiot char codes, type Ascii
  725B   4C   0C   75 		JMP COUT
                      
  725E   A9   59      	SAPOUT:	LDA #APOUT&$FF
  7260   85   36      		STA CSWL
  7262   A9   72      		LDA #APOUT^
  7264   85   37      		STA CSWH
  7266   60           		RTS
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-174
NLOGO	MONITOR ROUTINES

                      	.SBTTL	Monitor Routines
  7267   A9   0D      	BREAK1:	LDA #$0D
  7269   4C   90   72 		JMP TPCHR
                      
                      	;Reset I/O to default drivers (INDEV, OUTDEV = 0).
  726C   20   66   74 	RSTIO:	JSR SETVID
  726F   20   5A   74 		JSR SETKBD
  7272   A9   00      		LDA #KBD
  7274   85   57      		STA INDEV
  7276   85   58      		STA OUTDEV
  7278   60           	RSTR:	RTS
                      
  7279   A9   00      	CLRCBF:	LDA #$00	;(?Clear entire input buffer)
  727B   85   69      		STA CHBUF
  727D   60           		RTS
                      
  727E   A5   69      	GTBUF:	LDA CHBUF	;(?Remove and return oldest character in buffer)
  7280   48           		PHA
  7281   A9   00      		LDA #$00	;(Returns zero if buffer empty)
  7283   85   69      		STA CHBUF
  7285   68           		PLA
  7286   60           		RTS
                      
                      	;Clear the display/output.
  7287   20   F9   75 	RESETT:	JSR SETTXT
  728A   20   55   74 		JSR SETNRM
  728D   4C   EC   74 		JMP HOME
                      
  7290   6C   36   00 	TPCHR:	JMP (CSWL)
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-175
NLOGO	MONITOR ROUTINES

                      	;Modified Monitor for Apple-LOGO
                      
  7293   90   04      	SCRN2:	BCC RTMSKZ
  7295   4A           		LSR A
  7296   4A           		LSR A
  7297   4A           		LSR A
  7298   4A           		LSR A
  7299   29   0F      	RTMSKZ:	AND #$0F
  729B   60           		RTS
                      
  729C   98           	PRNTYX:	TYA
  729D   20   CD   73 	PRNTAX:	JSR PRBYTE
  72A0   8A           	PRNTX:	TXA
  72A1   4C   CD   73 		JMP PRBYTE
                      
  72A4   A6   3A      	INSDS1:	LDX PCL
  72A6   A4   3B      		LDY PCH
  72A8   20   9D   73 		JSR PRYX2
                      
  72AB   A2   03      	PRBLNK:	LDX #$03
  72AD   A9   20      	PRBL2:	LDA #$20
  72AF   20   90   72 	PRBL3:	JSR TPCHR
  72B2   CA           		DEX
  72B3   D0   F8      		BNE PRBL2
  72B5   60           		RTS
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-176
NLOGO	MONITOR ROUTINES

  72B6   48           	MONBRK:	PHA
  72B7   AD   8B   C0 		LDA GETRM1
  72BA   AD   8B   C0 		LDA GETRM1
  72BD   A9   00      		LDA #$00
  72BF   85   55      		STA BANK4K
  72C1   20   55   74 		JSR SETNRM
  72C4   20   66   74 		JSR SETVID
  72C7   20   5A   74 		JSR SETKBD
  72CA   68           		PLA
  72CB   28           		PLP
  72CC   20   DD   74 		JSR SAVE
  72CF   68           		PLA
  72D0   85   3A      		STA PCL
  72D2   68           		PLA
  72D3   85   3B      		STA PCH
  72D5   A9   01      		LDA #$01
  72D7   85   54      		STA MONFLG
  72D9   20   A4   72 	OLDBRK:	JSR INSDS1
  72DC   20   61   73 		JSR RGDSP1
  72DF   D8           	MON:	CLD
  72E0   20   16   75 		JSR BELL
  72E3   20   67   72 	MONZ:	JSR BREAK1
  72E6   A9   2A      		LDA #'*
  72E8   20   90   72 		JSR TPCHR
  72EB   20   14   76 		JSR GETLN
  72EE   20   59   73 		JSR ZMODE
  72F1   20   25   73 	NXTITM:	JSR GETNMB
  72F4   84   34      		STY YSAV
  72F6   A0   0F      		LDY #MONNUM
  72F8   88           	CHRSRC:	DEY
  72F9   30   E4      		BMI MON
  72FB   D9   CB   94 		CMP CHRTBL,Y
  72FE   D0   F8      		BNE CHRSRC
  7300   20   43   73 		JSR TOSUB
  7303   A4   34      		LDY YSAV
  7305   4C   F1   72 		JMP NXTITM
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-177
NLOGO	MONITOR ROUTINES

  7308   A2   03      	DIG:	LDX #$03
  730A   0A           		ASL A
  730B   0A           		ASL A
  730C   0A           		ASL A
  730D   0A           		ASL A
  730E   0A           	NXTBIT:	ASL A
  730F   26   3E      		ROL A2L
  7311   26   3F      		ROL A2H
  7313   CA           		DEX
  7314   10   F8      		BPL NXTBIT
  7316   A5   31      	NXTBAS:	LDA MODE
  7318   D0   06      		BNE NXTBS2
  731A   B5   3F      		LDA A2H,X
  731C   95   3D      		STA A1H,X
  731E   95   41      		STA A3H,X
  7320   E8           	NXTBS2:	INX
  7321   F0   F3      		BEQ NXTBAS
  7323   D0   06      		BNE NXTCHR
  7325   A2   00      	GETNMB:	LDX #$00
  7327   86   3E      		STX A2L
  7329   86   3F      		STX A2H
  732B   B9   00   02 	NXTCHR:	LDA LINARY,Y
  732E   C8           		INY
  732F   C9   30      		CMP #'0
  7331   90   2A      		BCC NTDIG
  7333   C9   3A      		CMP #':
  7335   90   D1      		BCC DIG
  7337   C9   41      		CMP #'A
  7339   90   22      		BCC NTDIG
  733B   C9   47      		CMP #'G
  733D   B0   1E      		BCS NTDIG
  733F   69   09      		ADC #$09
  7341   D0   C5      		BNE DIG		;(Always)
                      
  7343   98           	TOSUB:	TYA
  7344   0A           		ASL A
  7345   A8           		TAY
  7346   B9   DA   94 		LDA SUBTBL,Y
  7349   85   2A      		STA BSLTMP
  734B   C8           		INY
  734C   B9   DA   94 		LDA SUBTBL,Y
  734F   85   2B      		STA BSLTMP+1
  7351   A5   31      		LDA MODE
  7353   20   59   73 		JSR ZMODE
  7356   6C   2A   00 		JMP (BSLTMP)
                      
  7359   A0   00      	ZMODE:	LDY #$00
  735B   84   31      		STY MODE
  735D   60           	NTDIG:	RTS
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-178
NLOGO	MONITOR ROUTINES

  735E   20   67   72 	REGDSP:	JSR BREAK1
  7361   A9   45      	RGDSP1:	LDA #ACC
  7363   85   40      		STA A3L
  7365   A9   00      		LDA #ACC^
  7367   85   41      		STA A3H
  7369   A2   FB      		LDX #$FB
  736B   A9   20      	RDSP1:	LDA #$20
  736D   20   90   72 		JSR TPCHR
  7370   BD   FD   93 		LDA RTBL-$FB,X
  7373   20   90   72 		JSR TPCHR
  7376   A9   3D      		LDA #'=
  7378   20   90   72 		JSR TPCHR
  737B   B5   4A      		LDA ACC+5,X
  737D   20   CD   73 		JSR PRBYTE
  7380   E8           		INX
  7381   30   E8      		BMI RDSP1
  7383   60           		RTS
                      
  7384   E6   42      	NXTA4:	INC A4L
  7386   D0   02      		BNE NXTA1
  7388   E6   43      		INC A4H
  738A   A5   3C      	NXTA1:	LDA A1L
  738C   C5   3E      		CMP A2L
  738E   A5   3D      		LDA A1H
  7390   E5   3F      		SBC A2H
  7392   E6   3C      		INC A1L
  7394   D0   02      		BNE RTS4B
  7396   E6   3D      		INC A1H
  7398   60           	RTS4B:	RTS
                      
  7399   A4   3D      	PRA1:	LDY A1H
  739B   A6   3C      		LDX A1L
  739D   20   67   72 	PRYX2:	JSR BREAK1
  73A0   20   9C   72 		JSR PRNTYX
  73A3   A0   00      		LDY #$00
  73A5   A9   2D      		LDA #'-
  73A7   4C   90   72 		JMP TPCHR
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-179
NLOGO	MONITOR ROUTINES

  73AA   A5   3C      	XAM8:	LDA A1L
  73AC   09   07      		ORA #$07
  73AE   85   3E      		STA A2L
  73B0   A5   3D      		LDA A1H
  73B2   85   3F      		STA A2H
  73B4   A5   3C      	MD8CHK:	LDA A1L
  73B6   29   07      		AND #$07
  73B8   D0   03      		BNE DATAOT
  73BA   20   99   73 	XAM:	JSR PRA1
  73BD   A9   20      	DATAOT:	LDA #$20
  73BF   20   90   72 		JSR TPCHR
  73C2   B1   3C      		LDA (A1L),Y
  73C4   20   CD   73 		JSR PRBYTE
  73C7   20   8A   73 		JSR NXTA1
  73CA   90   E8      		BCC MD8CHK
  73CC   60           	RTS4C:	RTS
                      
  73CD   48           	PRBYTE:	PHA
  73CE   4A           		LSR A
  73CF   4A           		LSR A
  73D0   4A           		LSR A
  73D1   4A           		LSR A
  73D2   20   D8   73 		JSR PRHEXZ
  73D5   68           		PLA
  73D6   29   0F      	PRHEX:	AND #$0F
  73D8   18           	PRHEXZ:	CLC
  73D9   69   30      		ADC #'0
  73DB   C9   3A      		CMP #':
  73DD   90   02      		BCC PRHEXC
  73DF   69   06      		ADC #$06
  73E1   4C   90   72 	PRHEXC:	JMP TPCHR
                      
  73E4   C6   34      	BL1:	DEC YSAV
  73E6   F0   C2      		BEQ XAM8
  73E8   CA           	BLANK:	DEX
  73E9   D0   16      		BNE SETMDZ
  73EB   C9   3A      		CMP #':
  73ED   D0   CB      		BNE XAM
  73EF   85   31      	STOR:	STA MODE
  73F1   A5   3E      		LDA A2L
  73F3   91   40      		STA (A3L),Y
  73F5   E6   40      		INC A3L
  73F7   D0   02      		BNE RTS5
  73F9   E6   41      		INC A3H
  73FB   60           	RTS5:	RTS
                      
  73FC   A4   34      	SETMOD:	LDY YSAV
  73FE   B9   FF   01 		LDA LINARY-1,Y
  7401   85   31      	SETMDZ:	STA MODE
  7403   60           		RTS
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-180
NLOGO	MONITOR ROUTINES

  7404   A2   01      	LT:	LDX #$01
  7406   B5   3E      	LT2:	LDA A2L,X
  7408   95   42      		STA A4L,X
  740A   95   44      		STA A5L,X
  740C   CA           		DEX
  740D   10   F7      		BPL LT2
  740F   60           		RTS
                      
  7410   B1   3C      	MOVE:	LDA (A1L),Y
  7412   91   42      		STA (A4L),Y
  7414   20   84   73 		JSR NXTA4
  7417   90   F7      		BCC MOVE
  7419   60           		RTS
                      
  741A   B1   3C      	VFY:	LDA (A1L),Y
  741C   D1   42      		CMP (A4L),Y
  741E   F0   1C      		BEQ VFYOK
  7420   20   99   73 		JSR PRA1
  7423   B1   3C      		LDA (A1L),Y
  7425   20   CD   73 		JSR PRBYTE
  7428   A9   20      		LDA #$20
  742A   20   90   72 		JSR TPCHR
  742D   A9   28      		LDA #'(
  742F   20   90   72 		JSR TPCHR
  7432   B1   42      		LDA (A4L),Y
  7434   20   CD   73 		JSR PRBYTE
  7437   A9   29      		LDA #')
  7439   20   90   72 		JSR TPCHR
  743C   20   84   73 	VFYOK:	JSR NXTA4
  743F   90   D9      		BCC VFY
  7441   60           		RTS
                      
  7442   8A           	A1PC:	TXA
  7443   F0   07      		BEQ A1PCRT
  7445   B5   3C      	A1PCLP:	LDA A1L,X
  7447   95   3A      		STA PCL,X
  7449   CA           		DEX
  744A   10   F9      		BPL A1PCLP
  744C   60           	A1PCRT:	RTS
                      
                      
  744D   A0   3F      	SETREV:	LDY #$3F
  744F   D0   06      		BNE SETIFL
  7451   A0   7F      	SETINV:	LDY #$7F
  7453   D0   02      		BNE SETIFL
  7455   A0   FF      	SETNRM:	LDY #$FF
  7457   84   32      	SETIFL:	STY INVFLG
  7459   60           		RTS
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-181
NLOGO	MONITOR ROUTINES

  745A   A9   00      	SETKBD:	LDA #$00
  745C   85   3E      		STA A2L
  745E   A0   C4      	INPRT:	LDY #KEYIN&$FF
  7460   A9   75      		LDA #KEYIN^
  7462   A2   38      		LDX #KSWL
  7464   D0   0A      		BNE IOPRT	;(Always)
  7466   A9   00      	SETVID:	LDA #$00
  7468   85   3E      		STA A2L
  746A   A0   0C      	OUTPRT:	LDY #COUT&$FF
  746C   A9   75      		LDA #COUT^
  746E   A2   36      		LDX #CSWL
  7470   95   01      	IOPRT:	STA $01,X
  7472   A5   3E      		LDA A2L
  7474   29   0F      		AND #$0F
  7476   F0   06      		BEQ IOPRT1
  7478   09   00      		ORA #IOADR^
  747A   95   01      		STA $01,X
  747C   A0   00      		LDY #$00
  747E   94   00      	IOPRT1:	STY $00,X
  7480   60           		RTS
                      
  7481   20   42   74 	GO:	JSR A1PC
  7484   20   D2   74 		JSR RESTOR
  7487   A9   00      		LDA #$00
  7489   85   54      		STA MONFLG
  748B   6C   3A   00 		JMP (PCL)
                      
  748E   A5   55      	BSWTCH:	LDA BANK4K
  7490   D0   10      		BNE BSW1
  7492   E6   55      		INC BANK4K
  7494   AD   83   C0 		LDA GETRM2
  7497   AD   83   C0 		LDA GETRM2
  749A   A9   32      		LDA #'2
  749C   20   90   72 		JSR TPCHR
  749F   4C   67   72 		JMP BREAK1
  74A2   C6   55      	BSW1:	DEC BANK4K
  74A4   AD   8B   C0 		LDA GETRM1
  74A7   AD   8B   C0 		LDA GETRM1
  74AA   A9   31      		LDA #'1
  74AC   20   90   72 		JSR TPCHR
  74AF   4C   67   72 		JMP BREAK1
                      
  74B2   4C   5E   73 	REGZ:	JMP REGDSP
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-182
NLOGO	MONITOR ROUTINES

  74B5   AD   8A   C0 	XMON:	LDA KILRAM
  74B8   A9   4C      		LDA #$4C	;(JMP instruction code)
  74BA   8D   F8   03 		STA USRADR
  74BD   A9   B6      		LDA #MONBRK&$FF
  74BF   8D   F9   03 		STA USRADR+1
  74C2   A9   72      		LDA #MONBRK^
  74C4   8D   FA   03 		STA USRADR+2
  74C7   4C   59   FF 		JMP SYSMON	;User can re-enter this monitor with control-Y
                      
  74CA   20   E4   73 	CRMON:	JSR BL1
  74CD   68           		PLA
  74CE   68           		PLA
  74CF   4C   E3   72 		JMP MONZ
                      
  74D2   A5   48      	RESTOR:	LDA STATUS
  74D4   48           		PHA
  74D5   A5   45      		LDA A5H
  74D7   A6   46      	RESTR1:	LDX XREG
  74D9   A4   47      		LDY YREG
  74DB   28           		PLP
  74DC   60           		RTS
                      
  74DD   85   45      	SAVE:	STA ACC
  74DF   86   46      	SAV1:	STX XREG
  74E1   84   47      		STY YREG
  74E3   08           		PHP
  74E4   68           		PLA
  74E5   85   48      		STA STATUS
  74E7   BA           		TSX
  74E8   86   49      		STX SPNT
  74EA   D8           		CLD
  74EB   60           		RTS
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-183
NLOGO	MONITOR ROUTINES

                      	;HOME - Home the cursor and clear the screen
                      
  74EC   A5   22      	HOME:	LDA WNDTOP
  74EE   85   25      		STA CV
  74F0   A0   00      		LDY #$00
  74F2   84   24      		STY CH
  74F4   F0   04      		BEQ CLEOP1	;(always branches)
                      
                      	;CLREOP - Clear to end-of-page
                      
  74F6   A4   24      	CLREOP:	LDY CH
  74F8   A5   25      		LDA CV
  74FA   48           	CLEOP1:	PHA
  74FB   20   81   75 		JSR BCALCA
  74FE   20   9D   75 		JSR CLEOL1
  7501   A0   00      		LDY #$00
  7503   68           		PLA
  7504   69   00      		ADC #$00
  7506   C5   23      		CMP WNDBTM
  7508   90   F0      		BCC CLEOP1
  750A   B0   73      		BCS BCALC
                      
                      	;COUT - Output the character in A to the screen
                      
  750C   48           	COUT:	PHA
  750D   84   35      		STY YSAV1
  750F   20   29   75 		JSR COUT1
  7512   68           		PLA
  7513   A4   35      		LDY YSAV1
  7515   60           		RTS
                      
  7516   A9   40      	BELL:	LDA #$40
  7518   20   66   77 		JSR WAIT
  751B   A0   C0      		LDY #$C0
  751D   A9   0C      	BELL1:	LDA #$0C
  751F   20   66   77 		JSR WAIT
  7522   AD   30   C0 		LDA SPKR
  7525   88           		DEY
  7526   D0   F5      		BNE BELL1
  7528   60           	BRTS:	RTS
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-184
NLOGO	MONITOR ROUTINES

  7529   C9   0D      	COUT1:	CMP #$0D
  752B   F0   7A      		BEQ CROUT
  752D   C9   07      		CMP #$07
  752F   F0   E5      		BEQ BELL	;bell on output of ^G
  7531   09   80      		ORA #$80	;Assume non-flashing first
  7533   25   32      		AND INVFLG	;Flash or Invert if set
  7535   C9   E0      		CMP #$E0
  7537   90   02      		BCC COUTZ
  7539   29   DF      		AND #$DF	;Make it uppercase
  753B   A4   24      	COUTZ:	LDY CH
  753D   91   28      		STA (BASLIN),Y
  753F   E6   24      		INC CH		;Advance Horizontally
  7541   A5   24      		LDA CH
  7543   C5   21      		CMP WNDWTH
  7545   90   E1      		BCC BRTS
  7547   A9   00      	CR:	LDA #$00
  7549   85   24      		STA CH
  754B   E6   25      	LF:	INC CV
  754D   A5   25      		LDA CV
  754F   C5   23      		CMP WNDBTM
  7551   90   2E      		BCC BCALCA	;Finish if scrolling unnecessary
  7553   C6   25      		DEC CV
  7555   A5   22      	SCROLL:	LDA WNDTOP
  7557   48           		PHA
  7558   20   81   75 		JSR BCALCA
  755B   A5   28      	SCRL1:	LDA BASLIN
  755D   85   2A      		STA BSLTMP
  755F   A5   29      		LDA BASLIN+1
  7561   85   2B      		STA BSLTMP+1
  7563   A4   21      		LDY WNDWTH
  7565   88           		DEY
  7566   68           		PLA
  7567   69   01      		ADC #$01
  7569   C5   23      		CMP WNDBTM
  756B   B0   0D      		BCS SCRL3
  756D   48           		PHA
  756E   20   81   75 		JSR BCALCA
  7571   B1   28      	SCRL2:	LDA (BASLIN),Y	;Shift a line up one, character by character
  7573   91   2A      		STA (BSLTMP),Y
  7575   88           		DEY
  7576   10   F9      		BPL SCRL2	;Next character
  7578   30   E1      		BMI SCRL1	;Next line
  757A   A0   00      	SCRL3:	LDY #$00
  757C   20   9D   75 		JSR CLEOL1	;Clear the bottom line, then calculate new base
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-185
NLOGO	MONITOR ROUTINES

  757F   A5   25      	BCALC:	LDA CV
  7581   48           	BCALCA:	PHA
  7582   4A           		LSR A
  7583   29   03      		AND #$03
  7585   09   04      		ORA #$04
  7587   85   29      		STA BASLIN+1
  7589   68           		PLA
  758A   29   18      		AND #$18
  758C   90   02      		BCC BCALC2
  758E   69   7F      		ADC #$7F
  7590   85   28      	BCALC2:	STA BASLIN
  7592   0A           		ASL A
  7593   0A           		ASL A
  7594   05   28      		ORA BASLIN
  7596   65   20      		ADC WNDLFT
  7598   85   28      		STA BASLIN
  759A   60           		RTS
                      
                      	;CLREOL - Clear to end-of-line
                      
  759B   A4   24      	CLREOL:	LDY CH
  759D   A9   A0      	CLEOL1:	LDA #$A0	;(Space, non-flashing, non-inverted)
  759F   91   28      	CLEOL2:	STA (BASLIN),Y
  75A1   C8           		INY
  75A2   C4   21      		CPY WNDWTH
  75A4   90   F9      		BCC CLEOL2
  75A6   60           		RTS
                      
                      	;CROUT - Output a Carriage return; suppress output if necessary
                      
  75A7   20   9B   75 	CROUT:	JSR CLREOL
  75AA   20   E5   75 		JSR TSTCHR
  75AD   90   98      		BCC CR
  75AF   C9   13      		CMP #LSTKEY
  75B1   D0   94      		BNE CR
  75B3   2C   10   C0 		BIT KPCLR
  75B6   20   58   77 		JSR RWAIT
  75B9   4C   47   75 		JMP CR
                      
  75BC   20   7E   72 	RDKEY:	JSR GTBUF	;Get character from the buffer if non-empty
  75BF   D0   18      		BNE KRTS
  75C1   6C   38   00 		JMP (KSWL)
                      
  75C4   A4   24      	KEYIN:	LDY CH
  75C6   B1   28      		LDA (BASLIN),Y
  75C8   48           		PHA
  75C9   29   7F      		AND #$7F
  75CB   09   40      		ORA #$40
  75CD   91   28      		STA (BASLIN),Y	;Make cursor position flash
  75CF   20   DA   75 		JSR RDKEY1
  75D2   85   2A      		STA BSLTMP
  75D4   68           		PLA
  75D5   91   28      		STA (BASLIN),Y
  75D7   A5   2A      		LDA BSLTMP
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-186
NLOGO	MONITOR ROUTINES

  75D9   60           	KRTS:	RTS
                      
  75DA   E6   4A      	RDKEY1:	INC RNDL
  75DC   20   E5   75 		JSR TSTCHR
  75DF   90   F9      		BCC RDKEY1
  75E1   2C   10   C0 		BIT KPCLR
  75E4   60           		RTS
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-187
NLOGO	MONITOR ROUTINES

                      	;Check for input character. Return with carry set and character in A if
                      	;character pending, else carry clear. Supplies "[" for replacement character.
  75E5   2C   00   C0 	TSTCHR:	BIT KPFLAG	;KBD device, check special locations
  75E8   10   0D      		BPL KNONE
  75EA   AD   00   C0 		LDA KPFLAG
  75ED   29   7F      		AND #$7F
  75EF   C9   5E      		CMP #LBRAK
  75F1   D0   02      		BNE TRTS
  75F3   A9   5B      		LDA #'[
  75F5   38           	TRTS:	SEC
  75F6   60           		RTS
  75F7   18           	KNONE:	CLC		;Return carry clear if no character
  75F8   60           		RTS
                      
                      	;SETTXT - Set text mode
                      
  75F9   AD   54   C0 	SETTXT:	LDA $C054	;Primary page
  75FC   AD   51   C0 		LDA $C051	;Set text mode
  75FF   A9   00      		LDA #$00
  7601   85   22      		STA WNDTOP
  7603   85   20      		STA WNDLFT
  7605   A9   18      		LDA #$18
  7607   85   23      		STA WNDBTM
  7609   A9   28      		LDA #$28
  760B   85   21      		STA WNDWTH
  760D   A9   17      		LDA #$17
  760F   85   25      		STA CV
  7611   4C   81   75 		JMP BCALCA
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-188
NLOGO	MONITOR ROUTINES

                      	;GETLN - Gets a line of input from the keyboard. Looks for LOGO interrupt
                      	; characters, and recognizes the left-bracket alias character. Returns
                      	; number of characters (not including terminator) in X.
                      
  7614   A2   00      	GETLN:	LDX #$00	;X is LINARY index
  7616   20   BC   75 		JSR RDKEY	;Get an ascii value from keyboard
  7619   C9   10      		CMP #PULCHR	;(Pull back last line), Check at first character
  761B   D0   0F      		BNE NPRVLN
  761D   BD   00   02 	PREVLN:	LDA LINARY,X	;get char from line-array
  7620   F0   7E      		BEQ GNXTX	;done if null char
  7622   C9   0D      		CMP #$0D
  7624   F0   7A      		BEQ GNXTX	;or carriage-return encountered
  7626   20   90   72 		JSR TPCHR	;output char to screen
  7629   E8           		INX		;next char
  762A   D0   F1      		BNE PREVLN	;(Always)
  762C   A8           	NPRVLN:	TAY
  762D   8A           		TXA		;If first character, clear line array
  762E   CA           	GTLN1L:	DEX
  762F   9D   00   02 		STA LINARY,X
  7632   D0   FA      		BNE GTLN1L
  7634   98           		TYA
  7635   D0   03      		BNE GTLN1X	;(Always)
  7637   20   BC   75 	NEXTC:	JSR RDKEY	;Get an ascii value from keyboard
  763A   C9   1B      	GTLN1X:	CMP #$1B	;(ESC)
  763C   F0   26      		BEQ GRUBOT	;do a getln rubout
  763E   C9   04      		CMP #$04	;(^D)
  7640   F0   6A      		BEQ GDELET	;do a getln delete
  7642   C9   15      		CMP #$15	;(Forward arrow)
  7644   D0   3A      		BNE GTLN1C
  7646   BD   00   02 		LDA LINARY,X	;Get character under cursor
  7649   F0   04      		BEQ GTLNX1
  764B   C9   0D      		CMP #$0D
  764D   D0   02      		BNE GTLNX2
  764F   A9   20      	GTLNX1:	LDA #$20
  7651   9D   00   02 	GTLNX2:	STA LINARY,X
  7654   20   90   72 		JSR TPCHR	;Echo character
  7657   E0   F8      		CPX #$F8
  7659   90   03      		BCC GETLN3
  765B   20   16   75 		JSR BELL
  765E   E8           	GETLN3:	INX
  765F   D0   D6      		BNE NEXTC
  7661   4C   DA   76 		JMP CANCEL
  7664   8A           	GRUBOT:	TXA
  7665   F0   D0      		BEQ NEXTC
  7667   CA           		DEX
  7668   C6   24      		DEC CH
  766A   10   40      		BPL GDELET
  766C   A5   21      		LDA WNDWTH
  766E   85   24      		STA CH
  7670   C6   24      		DEC CH
  7672   A5   22      		LDA WNDTOP
  7674   C5   25      		CMP CV
  7676   B0   34      		BCS GDELET
  7678   C6   25      		DEC CV
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-189
NLOGO	MONITOR ROUTINES

  767A   20   7F   75 		JSR BCALC
  767D   4C   AC   76 		JMP GDELET
  7680   C9   08      	GTLN1C:	CMP #$08	;(Back arrow)
  7682   F0   03      		BEQ BCKSPC
  7684   4C   E5   76 		JMP GTLN1D
  7687   8A           	BCKSPC:	TXA
  7688   F0   AD      		BEQ NEXTC
  768A   CA           		DEX
  768B   C6   24      		DEC CH
  768D   10   A8      		BPL NEXTC
  768F   A5   21      		LDA WNDWTH
  7691   85   24      		STA CH
  7693   C6   24      		DEC CH
  7695   A5   22      		LDA WNDTOP
  7697   C5   25      		CMP CV
  7699   B0   9C      		BCS NEXTC
  769B   C6   25      		DEC CV
  769D   20   7F   75 		JSR BCALC
  76A0   E0   00      	GNXTX:	CPX #$00
  76A2   F0   05      		BEQ GNXTC
  76A4   A9   00      		LDA #$00
  76A6   9D   01   02 		STA LINARY+1,X
  76A9   4C   37   76 	GNXTC:	JMP NEXTC
  76AC   8A           	GDELET:	TXA
  76AD   48           		PHA		;save location in LINARY
  76AE   A5   24      		LDA CH		;and location on screen
  76B0   48           		PHA
  76B1   A5   25      		LDA CV
  76B3   48           		PHA
  76B4   E8           	GDLTLP:	INX		;get next char in LINARY
  76B5   BD   00   02 		LDA LINARY,X
  76B8   9D   FF   01 		STA LINARY-1,X	;store in previous location
  76BB   F0   0A      		BEQ GDLDON	;if null done
  76BD   C9   0D      		CMP #$0D
  76BF   F0   F3      		BEQ GDLTLP
  76C1   20   90   72 		JSR TPCHR	;type out
  76C4   4C   B4   76 		JMP GDLTLP
  76C7   A9   20      	GDLDON:	LDA #$20	;found a null, print a space at line
  76C9   20   90   72 		JSR TPCHR	;end
  76CC   68           		PLA
  76CD   85   25      		STA CV
  76CF   68           		PLA
  76D0   85   24      		STA CH
  76D2   20   7F   75 		JSR BCALC
  76D5   68           		PLA
  76D6   AA           		TAX
  76D7   4C   37   76 		JMP NEXTC
  76DA   A9   5C      	CANCEL:	LDA #'\
  76DC   20   90   72 		JSR TPCHR
  76DF   20   67   72 		JSR BREAK1
  76E2   4C   14   76 		JMP GETLN
  76E5   C9   18      	GTLN1D:	CMP #$18	;(Cancel line)
  76E7   F0   F1      		BEQ CANCEL
  76E9   A4   54      		LDY MONFLG
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-190
NLOGO	MONITOR ROUTINES

  76EB   D0   20      		BNE GTLN2A	;Don't check for interrupt characters if in monitor
  76ED   A4   57      		LDY INDEV
  76EF   D0   1C      		BNE GTLN2A	;or if evaluating the edit buffer
  76F1   C9   07      		CMP #STPKEY
  76F3   F0   60      		BEQ GTLNR1
  76F5   C9   1A      		CMP #PAUSKY
  76F7   F0   6A      		BEQ GTLNR2
  76F9   C9   06      		CMP #FULCHR
  76FB   F0   0A      		BEQ GTLNR3
  76FD   C9   0C      		CMP #MIXCHR
  76FF   D0   0C      		BNE GTLN2A
  7701   20   4C   54 		JSR STPMIX
  7704   4C   37   76 		JMP NEXTC
  7707   20   44   54 	GTLNR3:	JSR STPFUL
  770A   4C   37   76 		JMP NEXTC
  770D   BC   00   02 	GTLN2A:	LDY LINARY,X
  7710   9D   00   02 		STA LINARY,X
  7713   C9   0D      		CMP #$0D
  7715   F0   3B      		BEQ GCR
  7717   20   90   72 		JSR TPCHR
  771A   8A           		TXA
  771B   48           		PHA		;save location in LINARY
  771C   A5   24      		LDA CH		;and location on screen
  771E   48           		PHA
  771F   A5   25      		LDA CV
  7721   48           		PHA
  7722   BD   01   02 	GINSL1:	LDA LINARY+1,X	;get next location
  7725   48           		PHA		;Save value
  7726   98           		TYA		;Get previous location
  7727   F0   19      		BEQ GINSDN	;if null done
  7729   C9   0D      		CMP #$0D
  772B   F0   15      		BEQ GINSDN
  772D   9D   01   02 		STA LINARY+1,X	;store in next location
  7730   20   90   72 		JSR TPCHR	;type out
  7733   68           		PLA
  7734   A8           		TAY
  7735   E0   F8      		CPX #$F8
  7737   90   03      		BCC GINSL2
  7739   20   16   75 		JSR BELL
  773C   E8           	GINSL2:	INX
  773D   D0   E3      		BNE GINSL1
  773F   4C   DA   76 		JMP CANCEL
  7742   68           	GINSDN:	PLA		;Discard null
  7743   68           		PLA
  7744   85   25      		STA CV
  7746   68           		PLA
  7747   85   24      		STA CH
  7749   68           		PLA
  774A   AA           		TAX
  774B   E8           		INX
  774C   20   7F   75 		JSR BCALC
  774F   4C   37   76 		JMP NEXTC
  7752   4C   67   72 	GCR:	JMP BREAK1
  7755   4C   36   54 	GTLNR1:	JMP STPPK1
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-191
NLOGO	MONITOR ROUTINES

                      
  7758   20   BC   75 	RWAIT:	JSR RDKEY
  775B   C9   07      		CMP #STPKEY
  775D   F0   F6      		BEQ GTLNR1
  775F   C9   1A      		CMP #PAUSKY
  7761   D0   0E      		BNE WRTS
  7763   4C   31   54 	GTLNR2:	JMP STPPKZ
                      
  7766   38           	WAIT:	SEC
  7767   48           	WAIT1:	PHA
  7768   E9   01      	WAIT2:	SBC #$01
  776A   D0   FC      		BNE WAIT2
  776C   68           		PLA
  776D   E9   01      		SBC #$01
  776F   D0   F6      		BNE WAIT1
  7771   60           	WRTS:	RTS
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-192
NLOGO	SYSTEM FUNCTIONS

                      	.SBTTL	System Functions
                      	;	Arithmetic Functions:
                      
  7772   AD   28   03 	SUNDIF:	LDA INFDIF
  7775   85   63      		STA CURTOK	;(For possible error message in GT1NUM)
  7777   AD   29   03 		LDA INFDIF+1
  777A   85   64      		STA CURTOK+1
  777C   20   50   58 		JSR GT1NUM
  777F   B0   0A      		BCS SNDIF2
  7781   A2   A2      		LDX #NARG1
  7783   20   DD   78 		JSR COMPL
  7786   A0   A2      		LDY #NARG1
  7788   4C   B8   57 		JMP OTPFIX
  778B   20   FF   69 	SNDIF2:	JSR FCOMPL	;Complements flonum in NARG1.
  778E   4C   B2   57 		JMP OTPFL1
                      
  7791   20   1F   58 	SSUM:	JSR GT2NUM
  7794   B0   21      		BCS SSUMF
  7796   A5   A5      		LDA NARG1+3
  7798   85   AA      		STA TEMPN1
  779A   18           		CLC
  779B   A2   FC      		LDX #$FC
  779D   B5   A6      	SSMLP1:	LDA NARG1+4,X
  779F   75   A2      		ADC NARG2+4,X
  77A1   95   A6      		STA NARG1+4,X
  77A3   E8           		INX
  77A4   30   F7      		BMI SSMLP1
  77A6   A5   A1      		LDA NARG2+3
  77A8   45   AA      		EOR TEMPN1
  77AA   30   13      		BMI SSUMOK	;Different signs, never an overflow
  77AC   A5   A5      		LDA NARG1+3
  77AE   45   A1      		EOR NARG2+3
  77B0   10   0D      		BPL SSUMOK	;Overflow if result not same sign as one argument
  77B2   A9   20      	ROFLOW:	LDA #XOFLOW
  77B4   4C   42   61 		JMP ERROR
  77B7   20   A9   69 	SSUMF:	JSR FADD	;Floating pt. addition
  77BA   B0   F6      		BCS ROFLOW
  77BC   4C   B2   57 		JMP OTPFL1
  77BF   A0   A2      	SSUMOK:	LDY #NARG1
  77C1   4C   B8   57 		JMP OTPFIX
                      
  77C4   20   1F   58 	SDIF:	JSR GT2NUM
  77C7   B0   1E      		BCS SDIFF
  77C9   A5   A5      		LDA NARG1+3
  77CB   85   AA      		STA TEMPN1
  77CD   38           		SEC
  77CE   A2   FC      		LDX #$FC
  77D0   B5   A6      	SDIFL1:	LDA NARG1+4,X
  77D2   F5   A2      		SBC NARG2+4,X
  77D4   95   A6      		STA NARG1+4,X
  77D6   E8           		INX
  77D7   30   F7      		BMI SDIFL1
  77D9   A5   AA      		LDA TEMPN1
  77DB   45   A1      		EOR NARG2+3
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-193
NLOGO	SYSTEM FUNCTIONS

  77DD   10   E0      		BPL SSUMOK	;Same signs, never an overflow
  77DF   A5   A5      		LDA NARG1+3
  77E1   45   AA      		EOR TEMPN1
  77E3   30   CD      		BMI ROFLOW	;Different signs, overflow
  77E5   10   D8      		BPL SSUMOK	;(Always)
  77E7   20   AE   69 	SDIFF:	JSR FSUB	;Floating pt. subtraction
  77EA   B0   C6      		BCS ROFLOW
  77EC   4C   B2   57 		JMP OTPFL1
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-194
NLOGO	SYSTEM FUNCTIONS

  77EF   20   1F   58 	SPROD:	JSR GT2NUM
  77F2   B0   62      		BCS SPRODF
  77F4   A5   A5      		LDA NARG1+3
  77F6   45   A1      		EOR NARG2+3
  77F8   85   B2      		STA ANSN
  77FA   A5   A5      		LDA NARG1+3
  77FC   10   05      		BPL SPRD1
  77FE   A2   A2      		LDX #NARG1
  7800   20   DD   78 		JSR COMPL
  7803   A5   A1      	SPRD1:	LDA NARG2+3
  7805   10   05      		BPL SPRD2
  7807   A2   9E      		LDX #NARG2
  7809   20   DD   78 		JSR COMPL
  780C   A9   00      	SPRD2:	LDA #$00
  780E   A2   03      		LDX #$03
  7810   95   A8      	SPRDL1:	STA TEMPN,X
  7812   CA           		DEX
  7813   10   FB      		BPL SPRDL1
  7815   A0   20      		LDY #$20	;Bit counter
  7817   46   A1      	MUL2:	LSR NARG2+3
  7819   66   A0      		ROR NARG2+2
  781B   66   9F      		ROR NARG2+1
  781D   66   9E      		ROR NARG2
  781F   90   0F      		BCC MUL4
  7821   18           		CLC
  7822   A2   FC      		LDX #$FC
  7824   B5   AC      	SPRDL2:	LDA TEMPN+4,X	;Add multiplicand (NARG1) to partial product (TEMPN, TEMPN1)
  7826   75   A6      		ADC NARG1+4,X
  7828   95   AC      		STA TEMPN+4,X
  782A   E8           		INX
  782B   30   F7      		BMI SPRDL2
  782D   AA           		TAX
  782E   30   2E      		BMI SPRODR
  7830   06   A2      	MUL4:	ASL NARG1
  7832   26   A3      		ROL NARG1+1
  7834   26   A4      		ROL NARG1+2
  7836   26   A5      		ROL NARG1+3
  7838   10   0B      		BPL MUL4A
  783A   A2   03      		LDX #$03	;Sig. bit dropped from NARG1, so bit counter better be 0
  783C   B5   9E      	MUL4B:	LDA NARG2,X
  783E   D0   1E      		BNE SPRODR	;It isn't, error
  7840   CA           		DEX
  7841   10   F9      		BPL MUL4B
  7843   30   03      		BMI MUL4C	;(Always) It is, so we're done
  7845   88           	MUL4A:	DEY
  7846   D0   CF      		BNE MUL2	;Next bit
  7848   A5   B2      	MUL4C:	LDA ANSN
  784A   10   05      		BPL MULEND
  784C   A2   A8      		LDX #TEMPN
  784E   20   DD   78 		JSR COMPL
  7851   A0   A8      	MULEND:	LDY #TEMPN
  7853   4C   B8   57 		JMP OTPFIX
  7856   20   B6   69 	SPRODF:	JSR FMUL	;Floating pt. multiply
  7859   B0   03      		BCS SPRODR
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-195
NLOGO	SYSTEM FUNCTIONS

  785B   4C   B2   57 		JMP OTPFL1
  785E   4C   B2   77 	SPRODR:	JMP ROFLOW
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-196
NLOGO	SYSTEM FUNCTIONS

  7861   20   1F   58 	SDIVID:	JSR GT2NUM
  7864   B0   0E      		BCS SDIVF
  7866   A2   03      		LDX #$03
  7868   B5   9E      	SDVLP1:	LDA NARG2,X
  786A   D0   10      		BNE SDVD1
  786C   CA           		DEX
  786D   10   F9      		BPL SDVLP1
  786F   A9   1C      		LDA #XDBZ
  7871   4C   42   61 		JMP ERROR
  7874   20   BB   69 	SDIVF:	JSR FDIV	;Floating pt. divide
  7877   B0   E5      		BCS SPRODR
  7879   4C   B2   57 		JMP OTPFL1
  787C   A2   03      	SDVD1:	LDX #$03
  787E   B5   A2      	SDVLP2:	LDA NARG1,X
  7880   D0   08      		BNE SDVD1A
  7882   CA           		DEX
  7883   10   F9      		BPL SDVLP2
  7885   A0   A2      		LDY #NARG1
  7887   4C   B8   57 		JMP OTPFIX	;Answer is zero if numerator is zero
  788A   A9   00      	SDVD1A:	LDA #$00
  788C   85   B2      		STA ANSN	;SIGN
  788E   A5   A5      		LDA NARG1+3
  7890   10   07      		BPL SDVD2
  7892   A2   A2      		LDX #NARG1
  7894   20   DD   78 		JSR COMPL
  7897   E6   B2      		INC ANSN
  7899   A5   A1      	SDVD2:	LDA NARG2+3
  789B   10   0B      		BPL SDVD3
  789D   A2   9E      		LDX #NARG2
  789F   20   DD   78 		JSR COMPL
  78A2   A5   B2      		LDA ANSN
  78A4   49   01      		EOR #$01
  78A6   85   B2      		STA ANSN
  78A8   20   F9   78 	SDVD3:	JSR XDIVID	;NARG2 is divisor, NARG1 is dividend, then quotient
  78AB   A5   B2      		LDA ANSN
  78AD   F0   05      		BEQ SDVD4
  78AF   A2   A2      		LDX #NARG1
  78B1   20   DD   78 		JSR COMPL
  78B4   A0   A2      	SDVD4:	LDY #NARG1
  78B6   4C   B8   57 		JMP OTPFIX
                      
  78B9   AD   26   03 	SUNSUM:	LDA INFSUM
  78BC   85   63      		STA CURTOK	;(For possible error message in GT1NUM)
  78BE   AD   27   03 		LDA INFSUM+1
  78C1   85   64      		STA CURTOK+1
  78C3   20   50   58 		JSR GT1NUM
  78C6   B0   05      		BCS SNSM1
  78C8   A0   A2      		LDY #NARG1
  78CA   4C   B8   57 		JMP OTPFIX
  78CD   4C   B2   57 	SNSM1:	JMP OTPFL1
                      
  78D0   20   50   58 	SINT:	JSR GT1NUM
  78D3   90   03      		BCC SINT1
  78D5   20   63   6A 		JSR XINT1
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-197
NLOGO	SYSTEM FUNCTIONS

  78D8   A0   A2      	SINT1:	LDY #NARG1
  78DA   4C   B8   57 		JMP OTPFIX
                      
  78DD   A0   03      	COMPL:	LDY #$03
  78DF   38           		SEC
  78E0   B5   00      	CMPL1:	LDA $00,X
  78E2   49   FF      		EOR #$FF	;Complement
  78E4   69   00      		ADC #$00	;and increment.
  78E6   95   00      		STA $00,X
  78E8   E8           		INX
  78E9   88           		DEY
  78EA   10   F4      		BPL CMPL1
  78EC   60           		RTS
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-198
NLOGO	SYSTEM FUNCTIONS

                      	;Divides NARG1 by 10.
  78ED   A9   0A      	XDVD10:	LDA #$0A
  78EF   85   9E      		STA NARG2
  78F1   A9   00      		LDA #$00
  78F3   85   9F      		STA NARG2+1
  78F5   85   A0      		STA NARG2+2
  78F7   85   A1      		STA NARG2+3
                      
                      	;Fast and clean division routine, assumes positive numbers.
                      	;Dividend in NARG1, divisor in NARG2.
                      	;NARG1 becomes quotient.
  78F9   A9   00      	XDIVID:	LDA #$00		;Zero temp. quotient (A1L-A2H)
  78FB   A2   03      		LDX #$03
  78FD   95   3C      	XDLP1:	STA A1L,X
  78FF   95   A8      		STA TEMPN,X
  7901   CA           		DEX
  7902   10   F9      		BPL XDLP1
  7904   E6   A8      		INC TEMPN		;Initialize bitholder (TEMPN,TEMPN1)
  7906   06   A8      	NORM:	ASL TEMPN		;Normalize the bitholder...
  7908   26   A9      		ROL TEMPN+1
  790A   26   AA      		ROL TEMPN1
  790C   26   AB      		ROL TEMPN1+1
  790E   06   9E      		ASL NARG2
  7910   26   9F      		ROL NARG2+1		;and the divisor
  7912   26   A0      		ROL NARG2+2
  7914   26   A1      		ROL NARG2+3
  7916   10   EE      		BPL NORM		;to the left side
  7918   30   01      		BMI SHFT		;(Always)
  791A   68           	SHFTX:	PLA			;(Discard intermediate result)
  791B   46   AB      	SHFT:	LSR TEMPN1+1		;Back 'em off one
  791D   66   AA      		ROR TEMPN1
  791F   66   A9      		ROR TEMPN+1
  7921   66   A8      		ROR TEMPN
  7923   46   A1      		LSR NARG2+3
  7925   66   A0      		ROR NARG2+2
  7927   66   9F      		ROR NARG2+1
  7929   66   9E      		ROR NARG2
  792B   A2   03      		LDX #$03
  792D   B5   A8      	XDLP2:	LDA TEMPN,X
  792F   D0   05      		BNE DV2			;If bitholder is zero, done
  7931   CA           		DEX
  7932   10   F9      		BPL XDLP2
  7934   30   2D      		BMI DONE		;(Always)
  7936   38           	DV2:	SEC			;Subtract divisor from dividend
  7937   A5   A2      		LDA NARG1
  7939   E5   9E      		SBC NARG2
  793B   48           		PHA
  793C   A5   A3      		LDA NARG1+1
  793E   E5   9F      		SBC NARG2+1
  7940   AA           		TAX
  7941   A5   A4      		LDA NARG1+2
  7943   E5   A0      		SBC NARG2+2
  7945   A8           		TAY
  7946   A5   A5      		LDA NARG1+3
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-199
NLOGO	SYSTEM FUNCTIONS

  7948   E5   A1      		SBC NARG2+3
  794A   90   CE      		BCC SHFTX		;If borrow, don't save remainder
  794C   85   A5      		STA NARG1+3		;or add to result
  794E   84   A4      		STY NARG1+2
  7950   86   A3      		STX NARG1+1
  7952   68           		PLA
  7953   85   A2      		STA NARG1
  7955   18           		CLC
  7956   A2   FC      		LDX #$FC
  7958   B5   40      	XDLP3:	LDA A1L+4,X		;Add bitholder to result
  795A   75   AC      		ADC TEMPN+4,X
  795C   95   40      		STA A1L+4,X
  795E   E8           		INX
  795F   30   F7      		BMI XDLP3
  7961   10   B8      		BPL SHFT		;(Always)
  7963   A5   A2      	DONE:	LDA NARG1
  7965   48           		PHA
  7966   A0   3C      		LDY #A1L
  7968   20   FA   4C 		JSR XYTON1
  796B   68           		PLA
  796C   18           		CLC
  796D   69   30      		ADC #'0
  796F   60           		RTS
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-200
NLOGO	SYSTEM FUNCTIONS

                      	;	Boolean Functions:
                      
  7970   20   1F   58 	SGRTR:	JSR GT2NUM
  7973   B0   2C      	SGRTRX:	BCS SGRTRF
  7975   A5   A5      	SGRTR1:	LDA NARG1+3
  7977   30   14      		BMI SGRTRM
  7979   A5   A1      		LDA NARG2+3
  797B   30   21      		BMI JTRU	;POS > NEG
  797D   A2   03      	SGRTRP:	LDX #$03
  797F   B5   9E      	SGRLP1:	LDA NARG2,X
  7981   D5   A2      		CMP NARG1,X
  7983   90   19      		BCC JTRU
  7985   D0   03      		BNE JFLS
  7987   CA           		DEX
  7988   10   F5      		BPL SGRLP1
  798A   4C   3B   7A 	JFLS:	JMP VPLFLS
  798D   A5   A1      	SGRTRM:	LDA NARG2+3
  798F   10   F9      		BPL JFLS	;NEG not > POS
  7991   29   7F      		AND #$7F	;Both negative, strip sign bit and compare
  7993   85   A1      		STA NARG2+3
  7995   A5   A5      		LDA NARG1+3
  7997   29   7F      		AND #$7F
  7999   85   A5      		STA NARG1+3
  799B   4C   7D   79 		JMP SGRTRP
  799E   4C   31   7A 	JTRU:	JMP VPLTRU
  79A1   A5   A3      	SGRTRF:	LDA NARG1+1
  79A3   30   06      		BMI SGRTFM
  79A5   A5   9F      		LDA NARG2+1
  79A7   30   F5      		BMI JTRU	;POS > NEG
  79A9   10   04      		BPL SGRTF1
  79AB   A5   9F      	SGRTFM:	LDA NARG2+1
  79AD   10   DB      		BPL JFLS	;NEG not > POS
  79AF   20   B1   69 	SGRTF1:	JSR FSUBX	;Both same sign - subtract NARG1 from NARG2
  79B2   A5   A3      		LDA NARG1+1	;If NARG1 negative, then it was larger
  79B4   30   E8      		BMI JTRU
  79B6   10   D2      		BPL JFLS
                      
  79B8   20   1F   58 	SLESS:	JSR GT2NUM
  79BB   20   86   69 		JSR SWAP	;Switch the args and call S_GREATER
  79BE   4C   73   79 		JMP SGRTRX
                      
  79C1   A2   A2      	SNOT:	LDX #ARG1
  79C3   20   80   52 		JSR VPOP
  79C6   20   0B   7A 		JSR GTBOOL
  79C9   98           		TYA
  79CA   D0   65      		BNE VPLTRU
  79CC   4C   3B   7A 		JMP VPLFLS
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-201
NLOGO	SYSTEM FUNCTIONS

  79CF   A2   9E      	SBOTH:	LDX #ARG2
  79D1   20   80   52 		JSR VPOP
  79D4   A2   A2      		LDX #ARG1
  79D6   20   80   52 		JSR VPOP
  79D9   20   0B   7A 		JSR GTBOOL
  79DC   84   B3      		STY ANSN1
  79DE   A2   9E      		LDX #ARG2
  79E0   20   0B   7A 		JSR GTBOOL
  79E3   98           		TYA
  79E4   D0   55      		BNE VPLFLS
  79E6   A5   B3      		LDA ANSN1
  79E8   D0   51      		BNE VPLFLS
  79EA   4C   31   7A 		JMP VPLTRU
                      
  79ED   A2   9E      	SEITHR:	LDX #ARG2
  79EF   20   80   52 		JSR VPOP
  79F2   A2   A2      		LDX #ARG1
  79F4   20   80   52 		JSR VPOP
  79F7   20   0B   7A 		JSR GTBOOL
  79FA   84   B3      		STY ANSN1
  79FC   A2   9E      		LDX #ARG2
  79FE   20   0B   7A 		JSR GTBOOL
  7A01   98           		TYA
  7A02   F0   2D      		BEQ VPLTRU
  7A04   A5   B3      		LDA ANSN1
  7A06   F0   29      		BEQ VPLTRU
  7A08   4C   3B   7A 		JMP VPLFLS
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-202
NLOGO	SYSTEM FUNCTIONS

  7A0B   B5   00      	GTBOOL:	LDA $00,X
  7A0D   A0   00      		LDY #$00
  7A0F   C5   4E      		CMP LTRUE
  7A11   D0   07      		BNE GTBL1
  7A13   B5   01      		LDA $01,X
  7A15   C5   4F      		CMP LTRUE+1
  7A17   D0   01      		BNE GTBL1
  7A19   60           	GTRTS:	RTS
  7A1A   C8           	GTBL1:	INY
  7A1B   B5   00      		LDA $00,X
  7A1D   C5   50      		CMP LFALSE
  7A1F   D0   06      		BNE GTBL2
  7A21   B5   01      		LDA $01,X
  7A23   C5   51      		CMP LFALSE+1
  7A25   F0   F2      		BEQ GTRTS
  7A27   A4   B2      	GTBL2:	LDY ANSN
  7A29   20   35   61 		JSR PTRYOK
  7A2C   A9   0E      		LDA #XNTF
  7A2E   4C   42   61 		JMP ERROR
                      
  7A31   A2   4E      	VPLTRU:	LDX #LTRUE
  7A33   20   4E   52 		JSR VPUSHP
  7A36   E6   07      		INC OTPUTN
  7A38   4C   1E   41 		JMP POPJ
                      
  7A3B   A2   50      	VPLFLS:	LDX #LFALSE
  7A3D   20   4E   52 		JSR VPUSHP
  7A40   E6   07      		INC OTPUTN
  7A42   4C   1E   41 		JMP POPJ
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-203
NLOGO	SYSTEM FUNCTIONS

                      	;	List Manipulation Functions:
                      
  7A45   86   B2      	GTLSTC:	STX ANSN
  7A47   B5   00      		LDA $00,X
  7A49   85   A6      		STA TEMPNH
  7A4B   B5   01      		LDA $01,X
  7A4D   85   A7      		STA TEMPNH+1	;PTR
  7A4F   A0   02      		LDY #$02
  7A51   B1   A6      	GTLC2:	LDA (TEMPNH),Y
  7A53   AA           		TAX
  7A54   F0   0B      		BEQ GTLC3
  7A56   C8           		INY
  7A57   B1   A6      		LDA (TEMPNH),Y
  7A59   85   A7      	GTLC2A:	STA TEMPNH+1
  7A5B   86   A6      		STX TEMPNH	;(CDR)
  7A5D   88           		DEY
  7A5E   4C   51   7A 		JMP GTLC2
  7A61   C8           	GTLC3:	INY
  7A62   B1   A6      		LDA (TEMPNH),Y
  7A64   D0   F3      		BNE GTLC2A
  7A66   A6   B2      		LDX ANSN
  7A68   A5   A6      		LDA TEMPNH
  7A6A   95   00      		STA $00,X
  7A6C   A5   A7      		LDA TEMPNH+1
  7A6E   95   01      		STA $01,X
  7A70   60           		RTS
                      
  7A71   A2   9E      	SFPUT:	LDX #ARG2
  7A73   20   80   52 		JSR VPOP
  7A76   A2   A2      		LDX #ARG1
  7A78   20   80   52 		JSR VPOP
  7A7B   A2   9E      		LDX #ARG2
  7A7D   20   7F   5D 		JSR GETTYP
  7A80   C9   00      		CMP #LIST
  7A82   D0   0C      		BNE SFPT1
  7A84   A2   9E      		LDX #ARG2
  7A86   A0   A2      		LDY #ARG1
  7A88   84   B2      		STY ANSN
  7A8A   20   0F   53 		JSR CONS
  7A8D   4C   1F   7E 		JMP OTPRG1
  7A90   A2   9E      	SFPT1:	LDX #ARG2
  7A92   A0   63      		LDY #CURTOK
  7A94   A9   0B      		LDA #XWTA
  7A96   4C   42   61 		JMP ERROR
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-204
NLOGO	SYSTEM FUNCTIONS

  7A99   A2   9E      	SLPUT:	LDX #ARG2
  7A9B   20   80   52 		JSR VPOP
  7A9E   A2   A2      		LDX #ARG1
  7AA0   20   80   52 		JSR VPOP
  7AA3   A2   9E      		LDX #ARG2
  7AA5   20   7F   5D 		JSR GETTYP
  7AA8   C9   00      		CMP #LIST
  7AAA   D0   E4      		BNE SFPT1
  7AAC   A5   A3      		LDA ARG1+1
  7AAE   D0   0F      		BNE SLPUT1
  7AB0   A9   A2      		LDA #ARG1
  7AB2   85   B2      		STA ANSN
  7AB4   A0   9E      		LDY #ARG2
  7AB6   A9   00      		LDA #$00	;(Type LIST)
  7AB8   AA           		TAX
  7AB9   20   0F   53 		JSR CONS
  7ABC   4C   1F   7E 		JMP OTPRG1
  7ABF   A5   9E      	SLPUT1:	LDA ARG2
  7AC1   D0   12      		BNE SLPUT2
  7AC3   A5   9F      		LDA ARG2+1
  7AC5   D0   0E      		BNE SLPUT2
  7AC7   A9   A2      		LDA #ARG1
  7AC9   85   B2      		STA ANSN
  7ACB   A8           		TAY
  7ACC   A2   00      		LDX #$00
  7ACE   8A           		TXA		;(Type LIST)
  7ACF   20   0F   53 		JSR CONS
  7AD2   4C   1F   7E 		JMP OTPRG1
  7AD5   A5   A2      	SLPUT2:	LDA ARG1
  7AD7   85   8A      		STA MARK2	;Protect the last element
  7AD9   A5   A3      		LDA ARG1+1
  7ADB   85   8B      		STA MARK2+1
  7ADD   A5   9E      		LDA ARG2
  7ADF   85   8C      		STA MARK3	;Protect the original list (or what's left of it)
  7AE1   A5   9F      		LDA ARG2+1
  7AE3   85   8D      		STA MARK3+1
  7AE5   A0   00      		LDY #$00
  7AE7   B1   8C      		LDA (MARK3),Y
  7AE9   85   AA      		STA TEMPN1
  7AEB   C8           		INY
  7AEC   B1   8C      		LDA (MARK3),Y
  7AEE   85   AB      		STA TEMPN1+1	;(CAR) First element
  7AF0   C8           		INY
  7AF1   B1   8C      		LDA (MARK3),Y
  7AF3   AA           		TAX
  7AF4   C8           		INY
  7AF5   B1   8C      		LDA (MARK3),Y
  7AF7   85   8D      		STA MARK3+1
  7AF9   86   8C      		STX MARK3	;(CDR)
  7AFB   A9   88      		LDA #MARK1	;Pointer to start of new list
  7AFD   85   B2      		STA ANSN
  7AFF   A2   00      		LDX #$00
  7B01   8A           		TXA
  7B02   A0   AA      		LDY #TEMPN1
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-205
NLOGO	SYSTEM FUNCTIONS

  7B04   20   0F   53 		JSR CONS
  7B07   A5   88      		LDA MARK1
  7B09   85   AC      		STA TEMPN2	;Pointer to newest node
  7B0B   A5   89      		LDA MARK1+1
  7B0D   85   AD      		STA TEMPN2+1
  7B0F   A5   8D      	SLPTW:	LDA MARK3+1	;Make a new list, element by element
  7B11   F0   35      		BEQ SLPT2
  7B13   A0   00      		LDY #$00
  7B15   B1   8C      		LDA (MARK3),Y
  7B17   85   AA      		STA TEMPN1	;Get an element
  7B19   C8           		INY
  7B1A   B1   8C      		LDA (MARK3),Y
  7B1C   85   AB      		STA TEMPN1+1	;(CAR)
  7B1E   C8           		INY
  7B1F   B1   8C      		LDA (MARK3),Y
  7B21   AA           		TAX
  7B22   C8           		INY
  7B23   B1   8C      		LDA (MARK3),Y
  7B25   85   8D      		STA MARK3+1
  7B27   86   8C      		STX MARK3	;(CDR) Advance element pointer
  7B29   A9   A8      		LDA #TEMPN	;New pointer to newest node
  7B2B   85   B2      		STA ANSN
  7B2D   A2   00      		LDX #$00
  7B2F   8A           		TXA		;(Type LIST)
  7B30   A0   AA      		LDY #TEMPN1
  7B32   20   0F   53 		JSR CONS
  7B35   A0   02      		LDY #$02
  7B37   A5   A8      		LDA TEMPN
  7B39   91   AC      		STA (TEMPN2),Y	;Pointer to last node
  7B3B   AA           		TAX
  7B3C   C8           		INY
  7B3D   A5   A9      		LDA TEMPN+1
  7B3F   91   AC      		STA (TEMPN2),Y	;(CDR) Link new node onto list
  7B41   85   AD      		STA TEMPN2+1
  7B43   86   AC      		STX TEMPN2
  7B45   4C   0F   7B 		JMP SLPTW
  7B48   A9   A8      	SLPT2:	LDA #TEMPN
  7B4A   85   B2      		STA ANSN
  7B4C   A2   00      		LDX #$00
  7B4E   8A           		TXA		;(Type LIST)
  7B4F   A0   A2      		LDY #ARG1
  7B51   20   0F   53 		JSR CONS	;Get a pointer to first argument
  7B54   A0   02      		LDY #$02
  7B56   A5   A8      		LDA TEMPN
  7B58   91   AC      		STA (TEMPN2),Y
  7B5A   C8           		INY
  7B5B   A5   A9      		LDA TEMPN+1
  7B5D   91   AC      		STA (TEMPN2),Y	;(RPLACD) Link final node on
  7B5F   4C   74   7B 		JMP SSN2	;MARK1 points to our new list
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-206
NLOGO	SYSTEM FUNCTIONS

  7B62   A9   00      	SSNTNC:	LDA #$00
  7B64   85   88      		STA MARK1
  7B66   85   89      		STA MARK1+1
  7B68   A5   05      		LDA NARGS
  7B6A   10   06      		BPL SSN1
  7B6C   49   FF      		EOR #$FF	;NARGS := - NARGS - 1
  7B6E   85   05      		STA NARGS
  7B70   A5   05      	SSNW:	LDA NARGS
  7B72   D0   10      	SSN1:	BNE SSNWA
  7B74   A5   88      	SSN2:	LDA MARK1
  7B76   85   A2      		STA ARG1
  7B78   A5   89      		LDA MARK1+1
  7B7A   85   A3      		STA ARG1+1
  7B7C   A9   00      		LDA #$00
  7B7E   20   26   51 		JSR CLMK3
  7B81   4C   1F   7E 		JMP OTPRG1
  7B84   A2   8A      	SSNWA:	LDX #MARK2
  7B86   20   80   52 		JSR VPOP
  7B89   20   7F   5D 		JSR GETTYP
  7B8C   C9   00      		CMP #LIST
  7B8E   F0   0E      		BEQ SSNW1
  7B90   A2   88      		LDX #MARK1
  7B92   86   B2      		STX ANSN
  7B94   A0   8A      		LDY #MARK2
  7B96   A9   00      		LDA #LIST
  7B98   20   0F   53 		JSR CONS
  7B9B   4C   FD   7B 		JMP SSNW2
  7B9E   A5   16      	SSNW1:	LDA VSP
  7BA0   85   AA      		STA TEMPN1
  7BA2   A5   17      		LDA VSP+1
  7BA4   85   AB      		STA TEMPN1+1
  7BA6   A9   F2      		LDA #SSNERR&$FF
  7BA8   85   12      		STA ERRRET
  7BAA   A9   7B      		LDA #SSNERR^
  7BAC   85   13      		STA ERRRET+1
  7BAE   BA           		TSX
  7BAF   86   11      		STX RETADR	;Save all necessary return addresses
  7BB1   A5   8B      	SSNX:	LDA MARK2+1
  7BB3   F0   1E      		BEQ SSNY
  7BB5   A0   00      		LDY #$00
  7BB7   B1   8A      		LDA (MARK2),Y
  7BB9   85   8C      		STA MARK3
  7BBB   C8           		INY
  7BBC   B1   8A      		LDA (MARK2),Y
  7BBE   85   8D      		STA MARK3+1	;(CAR)
  7BC0   C8           		INY
  7BC1   B1   8A      		LDA (MARK2),Y
  7BC3   AA           		TAX
  7BC4   C8           		INY
  7BC5   B1   8A      		LDA (MARK2),Y
  7BC7   85   8B      		STA MARK2+1
  7BC9   86   8A      		STX MARK2	;(CDR)
  7BCB   A2   8C      		LDX #MARK3
  7BCD   20   4E   52 		JSR VPUSHP
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-207
NLOGO	SYSTEM FUNCTIONS

  7BD0   4C   B1   7B 		JMP SSNX
  7BD3   A5   AA      	SSNY:	LDA TEMPN1
  7BD5   C5   16      		CMP VSP
  7BD7   D0   06      		BNE SSNY1
  7BD9   A5   AB      		LDA TEMPN1+1
  7BDB   C5   17      		CMP VSP+1
  7BDD   F0   1E      		BEQ SSNW2
  7BDF   A2   8C      	SSNY1:	LDX #MARK3
  7BE1   20   80   52 		JSR VPOP
  7BE4   A2   88      		LDX #MARK1
  7BE6   86   B2      		STX ANSN
  7BE8   A0   8C      		LDY #MARK3
  7BEA   A9   00      		LDA #LIST
  7BEC   20   0F   53 		JSR CONS
  7BEF   4C   D3   7B 		JMP SSNY
  7BF2   A5   AA      	SSNERR:	LDA TEMPN1
  7BF4   85   16      		STA VSP
  7BF6   A5   AB      		LDA TEMPN1+1
  7BF8   85   17      		STA VSP+1
  7BFA   4C   CD   47 		JMP ERROR1
  7BFD   C6   05      	SSNW2:	DEC NARGS
  7BFF   4C   70   7B 		JMP SSNW
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-208
NLOGO	SYSTEM FUNCTIONS

                      	;	Miscellaneous Functions:
                      
  7C02   A2   9E      	SMAKE:	LDX #ARG2
  7C04   20   80   52 		JSR VPOP
  7C07   A2   A2      		LDX #ARG1
  7C09   20   80   52 		JSR VPOP
  7C0C   20   7F   5D 		JSR GETTYP
  7C0F   C9   01      		CMP #ATOM
  7C11   F0   04      		BEQ SMAKE1
  7C13   C9   07      		CMP #SATOM
  7C15   D0   0A      		BNE SMAKE2
  7C17   A2   9E      	SMAKE1:	LDX #ARG2
  7C19   A0   A2      		LDY #ARG1
  7C1B   20   E4   52 		JSR PUTVAL
  7C1E   4C   1E   41 		JMP POPJ
  7C21   A2   A2      	SMAKE2:	LDX #ARG1
  7C23   A0   63      		LDY #CURTOK
  7C25   A9   0B      		LDA #XWTA
  7C27   4C   42   61 		JMP ERROR
                      
  7C2A   A5   7C      	SOUTPT:	LDA LEVNUM
  7C2C   D0   04      		BNE SOTPT2
  7C2E   A5   7D      		LDA LEVNUM+1
  7C30   F0   09      		BEQ SOTPT1
  7C32   A9   01      	SOTPT2:	LDA #$01
  7C34   85   0C      		STA STPFLG
  7C36   85   07      		STA OTPUTN
  7C38   4C   1E   41 		JMP POPJ
  7C3B   A0   63      	SOTPT1:	LDY #CURTOK
  7C3D   A9   0D      		LDA #XNTL
  7C3F   4C   42   61 		JMP ERROR
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-209
NLOGO	SYSTEM FUNCTIONS

  7C42   A5   7C      	SSTOP:	LDA LEVNUM
  7C44   D0   04      		BNE SSTOP1
  7C46   A5   7D      		LDA LEVNUM+1
  7C48   F0   F1      		BEQ SOTPT1
  7C4A   A9   01      	SSTOP1:	LDA #$01
  7C4C   85   0C      		STA STPFLG
  7C4E   4C   1E   41 		JMP POPJ
                      
  7C51   A9   00      	SCOMMT:	LDA #$00
  7C53   85   61      		STA TOKPTR
  7C55   85   62      		STA TOKPTR+1
  7C57   A5   06      		LDA EXPOUT
  7C59   D0   03      		BNE SCMMT1
  7C5B   4C   1E   41 		JMP POPJ
  7C5E   A9   02      	SCMMT1:	LDA #XEOL
  7C60   4C   42   61 		JMP ERROR
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-210
NLOGO	SYSTEM FUNCTIONS

  7C63   A9   4F      	SDEBUG:	LDA #'O
  7C65   20   90   72 		JSR TPCHR
  7C68   A5   0A      		LDA DBUGSW
  7C6A   D0   0D      		BNE SDBG1
  7C6C   E6   0A      		INC DBUGSW
  7C6E   A9   4E      		LDA #'N
  7C70   20   90   72 		JSR TPCHR
  7C73   20   67   72 		JSR BREAK1
  7C76   4C   1E   41 		JMP POPJ
  7C79   C6   0A      	SDBG1:	DEC DBUGSW
  7C7B   A9   46      		LDA #'F
  7C7D   20   90   72 		JSR TPCHR
  7C80   A9   46      		LDA #'F
  7C82   20   90   72 		JSR TPCHR
  7C85   20   67   72 		JSR BREAK1
  7C88   4C   1E   41 		JMP POPJ
                      
  7C8B   A9   01      	SCNTIN:	LDA #$01
  7C8D   85   0C      		STA STPFLG
  7C8F   85   0D      		STA DCOFLG
  7C91   4C   1E   41 		JMP POPJ
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-211
NLOGO	SYSTEM FUNCTIONS

  7C94   E6   82      	SIF:	INC IFLEVL
  7C96   D0   07      		BNE SIFA
  7C98   E6   83      		INC IFLEVL+1
  7C9A   D0   03      		BNE SIFA
  7C9C   4C   FB   42 		JMP EXCED
  7C9F   20   DB   43 	SIFA:	JSR GTNXTK
  7CA2   A5   65      		LDA NEXTOK
  7CA4   CD   12   03 		CMP LTHEN
  7CA7   D0   0C      		BNE SIF1
  7CA9   A5   66      		LDA NEXTOK+1
  7CAB   CD   13   03 		CMP LTHEN+1
  7CAE   D0   05      		BNE SIF1
  7CB0   A2   61      		LDX #TOKPTR
  7CB2   20   70   55 		JSR TTKADV
  7CB5   A2   A2      	SIF1:	LDX #ARG1
  7CB7   20   80   52 		JSR VPOP
  7CBA   20   0B   7A 		JSR GTBOOL
  7CBD   C0   00      		CPY #$00
  7CBF   D0   03      		BNE SIF2
  7CC1   4C   1E   41 	SIF3A:	JMP POPJ
  7CC4   A2   65      	SIF2:	LDX #NEXTOK
  7CC6   20   45   5A 		JSR EXIFSC
  7CC9   A5   61      		LDA TOKPTR
  7CCB   D0   04      		BNE SIF3
  7CCD   A5   62      		LDA TOKPTR+1
  7CCF   F0   F0      		BEQ SIF3A
  7CD1   A5   65      	SIF3:	LDA NEXTOK
  7CD3   CD   08   03 		CMP LELSE
  7CD6   D0   E9      		BNE SIF3A
  7CD8   A5   66      		LDA NEXTOK+1
  7CDA   CD   09   03 		CMP LELSE+1
  7CDD   D0   E2      		BNE SIF3A
  7CDF   A2   61      		LDX #TOKPTR
  7CE1   20   70   55 		JSR TTKADV
  7CE4   4C   1E   41 		JMP POPJ
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-212
NLOGO	SYSTEM FUNCTIONS

  7CE7   38           	SELSE:	SEC
  7CE8   A5   82      		LDA IFLEVL
  7CEA   E9   01      		SBC #$01
  7CEC   85   82      		STA IFLEVL
  7CEE   A5   83      		LDA IFLEVL+1
  7CF0   E9   00      		SBC #$00
  7CF2   85   83      		STA IFLEVL+1
  7CF4   90   17      		BCC SELSE1
  7CF6   A5   82      		LDA IFLEVL
  7CF8   D0   0B      		BNE SELSE2
  7CFA   A5   83      		LDA IFLEVL+1
  7CFC   D0   07      		BNE SELSE2
  7CFE   85   61      		STA TOKPTR
  7D00   85   62      		STA TOKPTR+1
  7D02   4C   1E   41 		JMP POPJ
  7D05   A2   AC      	SELSE2:	LDX #TEMPN2
  7D07   20   45   5A 		JSR EXIFSC
  7D0A   4C   1E   41 		JMP POPJ
  7D0D   A9   0F      	SELSE1:	LDA #XELS
  7D0F   4C   42   61 		JMP ERROR
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-213
NLOGO	SYSTEM FUNCTIONS

  7D12   20   10   54 	SGO:	JSR STPPEK
  7D15   A2   A2      		LDX #ARG1
  7D17   20   80   52 		JSR VPOP
  7D1A   20   7F   5D 		JSR GETTYP
  7D1D   C9   01      		CMP #ATOM
  7D1F   F0   07      		BEQ SGO1
  7D21   C9   07      		CMP #SATOM
  7D23   F0   03      		BEQ SGO1
  7D25   4C   F1   7D 		JMP SRUN1
  7D28   A9   0A      	SGO1:	LDA #LATOM
  7D2A   A2   A2      		LDX #ARG1
  7D2C   20   EB   53 		JSR PUTTYP
  7D2F   A5   70      		LDA FBODY
  7D31   85   78      		STA GOPTR
  7D33   A5   71      		LDA FBODY+1
  7D35   85   79      		STA GOPTR+1
  7D37   A2   78      		LDX #GOPTR
  7D39   20   3E   57 		JSR ULNADV
  7D3C   A5   78      	SGOW:	LDA GOPTR
  7D3E   D0   04      		BNE SGOW1
  7D40   A5   79      		LDA GOPTR+1
  7D42   F0   42      		BEQ SGOR
  7D44   A2   AA      	SGOW1:	LDX #TEMPN1
  7D46   A0   78      		LDY #GOPTR
  7D48   20   06   56 		JSR GTTULN
  7D4B   A0   00      		LDY #$00
  7D4D   B1   AA      		LDA (TEMPN1),Y
  7D4F   85   A8      		STA TEMPN
  7D51   C8           		INY
  7D52   B1   AA      		LDA (TEMPN1),Y
  7D54   85   A9      		STA TEMPN+1	;(GETTOK)
  7D56   A2   AA      		LDX #TEMPN1
  7D58   20   70   55 		JSR TTKADV
  7D5B   A0   00      		LDY #$00
  7D5D   B1   AA      		LDA (TEMPN1),Y
  7D5F   AA           		TAX
  7D60   C8           		INY
  7D61   B1   AA      		LDA (TEMPN1),Y
  7D63   85   AB      		STA TEMPN1+1
  7D65   86   AA      		STX TEMPN1	;(GETTOK)
  7D67   A5   A2      		LDA ARG1
  7D69   C5   AA      		CMP TEMPN1
  7D6B   D0   06      		BNE SGOW2
  7D6D   A5   A3      		LDA ARG1+1
  7D6F   C5   AB      		CMP TEMPN1+1
  7D71   F0   08      		BEQ SGOE1
  7D73   A2   78      	SGOW2:	LDX #GOPTR
  7D75   20   3E   57 		JSR ULNADV
  7D78   4C   3C   7D 		JMP SGOW
  7D7B   A5   A8      	SGOE1:	LDA TEMPN
  7D7D   85   74      		STA LINNUM
  7D7F   A5   A9      		LDA TEMPN+1
  7D81   85   75      		STA LINNUM+1
  7D83   4C   1E   41 		JMP POPJ
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-214
NLOGO	SYSTEM FUNCTIONS

  7D86   A0   A2      	SGOR:	LDY #ARG1
  7D88   A9   14      		LDA #XLNF
  7D8A   4C   42   61 		JMP ERROR
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-215
NLOGO	SYSTEM FUNCTIONS

  7D8D   A2   9E      	SRPEAT:	LDX #ARG2
  7D8F   20   80   52 		JSR VPOP
  7D92   20   5D   58 		JSR GT1FIX
  7D95   A5   A3      		LDA ARG1+1
  7D97   30   58      		BMI SRUN1
  7D99   20   86   69 		JSR SWAP	;Swap ARG1 and ARG2
  7D9C   A2   A2      		LDX #ARG1
  7D9E   20   7F   5D 		JSR GETTYP
  7DA1   C9   00      		CMP #LIST
  7DA3   D0   4C      		BNE SRUN1
  7DA5   A5   9E      	SRPLOP:	LDA ARG2
  7DA7   D0   07      		BNE SRPLP1
  7DA9   A5   9F      		LDA ARG2+1
  7DAB   D0   03      		BNE SRPLP1
  7DAD   4C   1E   41 		JMP POPJ
  7DB0   38           	SRPLP1:	SEC
  7DB1   A5   9E      		LDA ARG2
  7DB3   E9   01      		SBC #$01
  7DB5   85   9E      		STA ARG2
  7DB7   B0   02      		BCS SRPLP2
  7DB9   C6   9F      		DEC ARG2+1
  7DBB   20   10   54 	SRPLP2:	JSR STPPEK
  7DBE   A2   9E      		LDX #ARG2
  7DC0   20   20   52 		JSR PUSHP
  7DC3   A2   A2      		LDX #ARG1
  7DC5   20   20   52 		JSR PUSHP
  7DC8   A2   D2      		LDX #SREPT1&$FF
  7DCA   A0   7D      		LDY #SREPT1^
  7DCC   20   37   52 		JSR PUSH
  7DCF   4C   16   44 		JMP RUNHAN
                      
  7DD2   A2   A2      	SREPT1:	LDX #ARG1
  7DD4   20   67   52 		JSR POP
  7DD7   A2   9E      		LDX #ARG2
  7DD9   20   67   52 		JSR POP
  7DDC   4C   A5   7D 		JMP SRPLOP
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-216
NLOGO	SYSTEM FUNCTIONS

  7DDF   20   10   54 	SRUN:	JSR STPPEK
  7DE2   A2   A2      		LDX #ARG1
  7DE4   20   80   52 		JSR VPOP
  7DE7   20   7F   5D 		JSR GETTYP
  7DEA   C9   00      		CMP #LIST
  7DEC   D0   03      		BNE SRUN1
  7DEE   4C   16   44 		JMP RUNHAN
  7DF1   4C   21   7C 	SRUN1:	JMP SMAKE2	;(ERROR XWTA,ARG1,CURTOK)
                      
  7DF4   A2   9E      	STHING:	LDX #ARG2
  7DF6   20   80   52 		JSR VPOP
  7DF9   20   7F   5D 		JSR GETTYP
  7DFC   C9   01      		CMP #ATOM
  7DFE   F0   09      		BEQ STH1
  7E00   C9   07      		CMP #SATOM
  7E02   F0   05      		BEQ STH1
  7E04   A2   9E      		LDX #ARG2
  7E06   4C   FB   7E 		JMP STLR4A
  7E09   A2   A2      	STH1:	LDX #ARG1
  7E0B   A0   9E      		LDY #ARG2
  7E0D   20   CC   52 		JSR GETVAL
  7E10   A5   A3      		LDA ARG1+1
  7E12   D0   0B      		BNE OTPRG1
  7E14   A5   A2      		LDA ARG1
  7E16   F0   07      		BEQ OTPRG1
  7E18   A0   9E      		LDY #ARG2
  7E1A   A9   04      		LDA #XHNV
  7E1C   4C   42   61 		JMP ERROR
  7E1F   E6   07      	OTPRG1:	INC OTPUTN
  7E21   A2   A2      		LDX #ARG1
  7E23   20   4E   52 		JSR VPUSHP
  7E26   4C   1E   41 		JMP POPJ
                      
  7E29   A2   9E      	SPTHNG:	LDX #ARG2
  7E2B   20   80   52 		JSR VPOP
  7E2E   20   7F   5D 		JSR GETTYP
  7E31   C9   01      		CMP #ATOM
  7E33   F0   07      		BEQ SPTH1
  7E35   C9   07      		CMP #SATOM
  7E37   F0   03      		BEQ SPTH1
  7E39   4C   3B   7A 	SPTH2:	JMP VPLFLS
  7E3C   A2   A2      	SPTH1:	LDX #ARG1
  7E3E   A0   9E      		LDY #ARG2
  7E40   20   CC   52 		JSR GETVAL
  7E43   A5   A3      		LDA ARG1+1
  7E45   D0   04      		BNE SPTH3
  7E47   A5   A2      		LDA ARG1
  7E49   D0   EE      		BNE SPTH2
  7E4B   4C   31   7A 	SPTH3:	JMP VPLTRU
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-217
NLOGO	SYSTEM FUNCTIONS

  7E4E   A2   A2      	SPWRDP:	LDX #ARG1
  7E50   20   80   52 		JSR VPOP
  7E53   20   7F   5D 		JSR GETTYP
  7E56   C9   01      		CMP #ATOM
  7E58   F0   F1      		BEQ SPTH3
  7E5A   C9   07      		CMP #SATOM
  7E5C   F0   ED      		BEQ SPTH3
  7E5E   C9   03      		CMP #FIX
  7E60   F0   E9      		BEQ SPTH3
  7E62   C9   04      		CMP #FLO
  7E64   F0   E5      		BEQ SPTH3
  7E66   4C   3B   7A 		JMP VPLFLS
                      
  7E69   38           	SNODES:	SEC
  7E6A   A9   98      		LDA #TYPLEN&$FF
  7E6C   E5   C3      		SBC NNODES
  7E6E   85   AA      		STA TEMPN1
  7E70   A9   09      		LDA #TYPLEN^
  7E72   E5   C4      		SBC NNODES+1
  7E74   85   AB      		STA TEMPN1+1
  7E76   A0   AA      		LDY #TEMPN1
  7E78   4C   9D   57 		JMP OTPFX1
                      
  7E7B   A9   3C      	SREQU:	LDA #RPRMPT
  7E7D   20   90   72 		JSR TPCHR
  7E80   A2   98      		LDX #ILINE
  7E82   20   4E   52 		JSR VPUSHP	;Save ILINE
  7E85   A2   98      		LDX #ILINE
  7E87   20   D5   49 		JSR READLN
  7E8A   98           		TYA
  7E8B   F0   03      		BEQ SREQU1	;Y zero means OK
  7E8D   4C   CD   47 		JMP ERROR1
  7E90   A5   98      	SREQU1:	LDA ILINE	;Restore ILINE
  7E92   85   A2      		STA ARG1
  7E94   A5   99      		LDA ILINE+1
  7E96   85   A3      		STA ARG1+1
  7E98   A2   98      		LDX #ILINE
  7E9A   20   80   52 		JSR VPOP
  7E9D   4C   1F   7E 		JMP OTPRG1
                      
  7EA0   20   58   62 	SGCOLL:	JSR GARCOL
  7EA3   4C   1E   41 	SGCE:	JMP POPJ
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-218
NLOGO	SYSTEM FUNCTIONS

  7EA6   A5   57      	SRETRV:	LDA INDEV
  7EA8   D0   16      		BNE SRTRE
  7EAA   A5   C7      		LDA ENDBUF
  7EAC   C9   00      		CMP #EDBUF&$FF
  7EAE   D0   06      		BNE SCHG1
  7EB0   A5   C8      		LDA ENDBUF+1
  7EB2   C9   20      		CMP #EDBUF^
  7EB4   F0   ED      		BEQ SGCE	;Buffer never used, so ignore
  7EB6   A9   01      	SCHG1:	LDA #BUFFER
  7EB8   85   57      		STA INDEV
  7EBA   20   DA   6C 		JSR CHGX1
  7EBD   4C   84   6C 		JMP CHGIN3
  7EC0   A9   15      	SRTRE:	LDA #XEDT
  7EC2   4C   42   61 		JMP ERROR
                      
  7EC5   A5   09      	SCHNGE:	LDA GRPHCS
  7EC7   F0   05      		BEQ SCHNG2
  7EC9   20   87   72 		JSR RESETT	;Nodisplay, get the text page back
  7ECC   C6   09      		DEC GRPHCS
  7ECE   4C   2A   6C 	SCHNG2:	JMP CHGSTP	;get arg to CHG
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-219
NLOGO	SYSTEM FUNCTIONS

  7ED1   A5   08      	STITLE:	LDA EDSW
  7ED3   F0   0F      		BEQ STTLR1
  7ED5   A5   7C      		LDA LEVNUM
  7ED7   D0   10      		BNE STTLR2
  7ED9   A5   7D      		LDA LEVNUM+1
  7EDB   D0   0C      		BNE STTLR2
  7EDD   A5   62      		LDA TOKPTR+1
  7EDF   D0   21      		BNE STTL1
  7EE1   4C   1E   41 		JMP POPJ
  7EE4   A9   18      	STTLR1:	LDA #XNED
  7EE6   4C   42   61 		JMP ERROR
  7EE9   A9   17      	STTLR2:	LDA #XETL
  7EEB   4C   42   61 		JMP ERROR
  7EEE   A0   AE      	STTLR3:	LDY #TEMPN3
  7EF0   20   35   61 		JSR PTRYOK
  7EF3   A9   0C      		LDA #XUBL
  7EF5   4C   42   61 		JMP ERROR
  7EF8   20   2A   61 	STTLR4:	JSR PTRXOK
  7EFB   A0   63      	STLR4A:	LDY #CURTOK
  7EFD   A9   0B      		LDA #XWTA
  7EFF   4C   42   61 		JMP ERROR
  7F02   A0   00      	STTL1:	LDY #$00
  7F04   B1   61      		LDA (TOKPTR),Y
  7F06   85   AE      		STA TEMPN3	;(ATOMM)
  7F08   C8           		INY
  7F09   B1   61      		LDA (TOKPTR),Y
  7F0B   85   AF      		STA TEMPN3+1	;(CAR)
  7F0D   C8           		INY
  7F0E   B1   61      		LDA (TOKPTR),Y
  7F10   AA           		TAX
  7F11   C8           		INY
  7F12   B1   61      		LDA (TOKPTR),Y
  7F14   85   62      		STA TOKPTR+1
  7F16   85   AB      		STA TEMPN1+1	;(ARGLIST)
  7F18   86   61      		STX TOKPTR	;(CDR)
  7F1A   86   AA      		STX TEMPN1
  7F1C   A2   AE      		LDX #TEMPN3
  7F1E   20   7F   5D 		JSR GETTYP
  7F21   C9   07      		CMP #SATOM
  7F23   F0   C9      		BEQ STTLR3
  7F25   C9   01      		CMP #ATOM
  7F27   D0   CF      		BNE STTLR4
  7F29   A5   AE      		LDA TEMPN3
  7F2B   C5   84      		CMP EDTATM
  7F2D   D0   06      		BNE STTL2
  7F2F   A5   AF      		LDA TEMPN3+1
  7F31   C5   85      		CMP EDTATM+1
  7F33   F0   1F      		BEQ STTL3
  7F35   A2   84      	STTL2:	LDX #EDTATM
  7F37   A9   AC      		LDA #TEMPN2	;(FUN)
  7F39   20   8D   56 		JSR GETFUN
  7F3C   A2   84      		LDX #EDTATM
  7F3E   20   6E   56 		JSR UNFUNC
  7F41   A5   AE      		LDA TEMPN3
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-220
NLOGO	SYSTEM FUNCTIONS

  7F43   85   84      		STA EDTATM
  7F45   85   86      		STA PODEFL
  7F47   A5   AF      		LDA TEMPN3+1
  7F49   85   85      		STA EDTATM+1
  7F4B   85   87      		STA PODEFL+1
  7F4D   A0   AC      		LDY #TEMPN2
  7F4F   A2   84      		LDX #EDTATM
  7F51   20   E6   57 		JSR PUTFUN
  7F54   A9   00      	STTL3:	LDA #$00
  7F56   85   B3      		STA ANSN1
  7F58   A5   62      	STTLW:	LDA TOKPTR+1
  7F5A   F0   3B      		BEQ STTLWE
  7F5C   A0   00      		LDY #$00
  7F5E   B1   61      		LDA (TOKPTR),Y
  7F60   85   A8      		STA TEMPN
  7F62   C8           		INY
  7F63   B1   61      		LDA (TOKPTR),Y
  7F65   85   A9      		STA TEMPN+1	;(CAR)
  7F67   C8           		INY
  7F68   B1   61      		LDA (TOKPTR),Y
  7F6A   AA           		TAX
  7F6B   C8           		INY
  7F6C   B1   61      		LDA (TOKPTR),Y
  7F6E   85   62      		STA TOKPTR+1
  7F70   86   61      		STX TOKPTR	;(CDR)
  7F72   A5   A8      		LDA TEMPN
  7F74   CD   02   03 		CMP COMMNT
  7F77   D0   07      		BNE STTLW2
  7F79   A5   A9      		LDA TEMPN+1
  7F7B   CD   03   03 		CMP COMMNT+1
  7F7E   F0   D8      		BEQ STTLW
  7F80   A2   A8      	STTLW2:	LDX #TEMPN
  7F82   20   7F   5D 		JSR GETTYP
  7F85   C9   01      		CMP #ATOM
  7F87   F0   09      		BEQ STTLW3
  7F89   C9   07      		CMP #SATOM
  7F8B   F0   05      		BEQ STTLW3
  7F8D   A2   A8      		LDX #TEMPN
  7F8F   4C   F8   7E 		JMP STTLR4
  7F92   E6   B3      	STTLW3:	INC ANSN1
  7F94   4C   58   7F 		JMP STTLW
  7F97   A0   00      	STTLWE:	LDY #$00
  7F99   84   61      		STY TOKPTR
  7F9B   84   62      		STY TOKPTR+1
  7F9D   A5   AA      		LDA TEMPN1
  7F9F   91   9A      		STA (EDBOD),Y
  7FA1   C8           		INY
  7FA2   A5   AB      		LDA TEMPN1+1
  7FA4   91   9A      		STA (EDBOD),Y	;(RPLACA)
  7FA6   A2   84      		LDX #EDTATM
  7FA8   A9   AA      		LDA #TEMPN1
  7FAA   20   8D   56 		JSR GETFUN
  7FAD   A0   04      		LDY #$04
  7FAF   A5   B3      		LDA ANSN1
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-221
NLOGO	SYSTEM FUNCTIONS

  7FB1   91   AA      		STA (TEMPN1),Y	;(PUTNGS)
  7FB3   4C   1E   41 	SERR4:	JMP POPJ
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-222
NLOGO	SYSTEM FUNCTIONS

  7FB6   A2   A2      	SPRINT:	LDX #ARG1
  7FB8   20   80   52 		JSR VPOP
  7FBB   A9   01      		LDA #$01
  7FBD   20   F6   65 		JSR LTYPE
  7FC0   20   67   72 		JSR BREAK1
  7FC3   4C   1E   41 		JMP POPJ
                      
  7FC6   A2   A2      	STYPE:	LDX #ARG1
  7FC8   20   80   52 		JSR VPOP
  7FCB   A9   01      		LDA #$01
  7FCD   20   F6   65 		JSR LTYPE
  7FD0   4C   1E   41 		JMP POPJ
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-223
NLOGO	SYSTEM FUNCTIONS

  7FD3   A2   9E      	SDEFIN:	LDX #ARG2
  7FD5   20   80   52 		JSR VPOP
  7FD8   A2   A2      		LDX #ARG1
  7FDA   20   80   52 		JSR VPOP
  7FDD   20   7F   5D 		JSR GETTYP
  7FE0   C9   01      		CMP #ATOM
  7FE2   D0   27      		BNE SDFNR1
  7FE4   A2   9E      		LDX #ARG2
  7FE6   20   7F   5D 		JSR GETTYP
  7FE9   C9   00      		CMP #LIST
  7FEB   D0   21      		BNE SDFNR2
  7FED   A0   00      		LDY #$00
  7FEF   B1   9E      		LDA (ARG2),Y
  7FF1   85   A8      		STA TEMPN
  7FF3   C8           		INY
  7FF4   B1   9E      		LDA (ARG2),Y
  7FF6   85   A9      		STA TEMPN+1	;(CAR)
  7FF8   A2   A8      		LDX #TEMPN
  7FFA   20   7F   5D 		JSR GETTYP
  7FFD   C9   00      		CMP #LIST
  7FFF   D0   0D      		BNE SDFNR2
  8001   A0   A2      		LDY #ARG1
  8003   A2   9E      		LDX #ARG2
  8005   20   3D   5F 		JSR DEFUN
  8008   4C   1E   41 		JMP POPJ
  800B   4C   21   7C 	SDFNR1:	JMP SMAKE2
  800E   4C   90   7A 	SDFNR2:	JMP SFPT1
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-224
NLOGO	SYSTEM FUNCTIONS

  8011   A2   A2      	STEXT:	LDX #ARG1
  8013   20   80   52 		JSR VPOP
  8016   20   7F   5D 		JSR GETTYP
  8019   C9   01      		CMP #ATOM
  801B   D0   EE      		BNE SDFNR1
  801D   A2   A2      		LDX #ARG1
  801F   A9   B4      		LDA #TEMPN5	;FUN is TEMPN5
  8021   20   8D   56 		JSR GETFUN
  8024   A5   B5      		LDA TEMPN5+1
  8026   D0   07      		BNE STEXT1
  8028   85   B6      		STA TEMPN6	;BODY is TEMPN6
  802A   85   B7      		STA TEMPN6+1
  802C   4C   DA   80 		JMP STEXT3
  802F   A0   02      	STEXT1:	LDY #$02
  8031   B1   B4      		LDA (TEMPN5),Y
  8033   85   B6      		STA TEMPN6
  8035   C8           		INY
  8036   B1   B4      		LDA (TEMPN5),Y
  8038   85   B7      		STA TEMPN6+1	;(CDR)
  803A   A2   B6      		LDX #TEMPN6
  803C   20   7F   5D 		JSR GETTYP
  803F   C9   00      		CMP #LIST
  8041   F0   0C      		BEQ STXT1A
  8043   A0   B6      	STXT1B:	LDY #TEMPN6
  8045   A2   B4      		LDX #TEMPN5
  8047   A9   01      		LDA #$01
  8049   20   3D   5E 		JSR UNSTUF
  804C   4C   DA   80 		JMP STEXT3
  804F   A5   B6      	STXT1A:	LDA TEMPN6
  8051   85   B4      		STA TEMPN5
  8053   A5   B7      		LDA TEMPN6+1
  8055   85   B5      		STA TEMPN5+1
  8057   A5   16      		LDA VSP
  8059   85   AA      		STA TEMPN1	;TEMPN1 is STACK
  805B   A5   17      		LDA VSP+1
  805D   85   AB      		STA TEMPN1+1
  805F   A0   00      		LDY #$00
  8061   B1   B4      		LDA (TEMPN5),Y
  8063   85   AC      		STA TEMPN2	;TEMPN2 is LINE
  8065   C8           		INY
  8066   B1   B4      		LDA (TEMPN5),Y
  8068   85   AD      		STA TEMPN2+1	;(CAR)
  806A   C8           		INY
  806B   B1   B4      		LDA (TEMPN5),Y
  806D   AA           		TAX
  806E   C8           		INY
  806F   B1   B4      		LDA (TEMPN5),Y
  8071   85   B5      		STA TEMPN5+1
  8073   86   B4      		STX TEMPN5	;(CDR)
  8075   A2   AC      		LDX #TEMPN2
  8077   20   4E   52 		JSR VPUSHP
  807A   A5   B5      	STXTW:	LDA TEMPN5+1
  807C   F0   29      		BEQ STXTWE
  807E   A0   00      		LDY #$00
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-225
NLOGO	SYSTEM FUNCTIONS

  8080   B1   B4      		LDA (TEMPN5),Y
  8082   85   AC      		STA TEMPN2
  8084   C8           		INY
  8085   B1   B4      		LDA (TEMPN5),Y
  8087   85   AD      		STA TEMPN2+1	;(CAR)
  8089   C8           		INY
  808A   B1   B4      		LDA (TEMPN5),Y
  808C   AA           		TAX
  808D   C8           		INY
  808E   B1   B4      		LDA (TEMPN5),Y
  8090   85   B5      		STA TEMPN5+1
  8092   86   B4      		STX TEMPN5	;(CDR)
  8094   88           		DEY
  8095   B1   AC      		LDA (TEMPN2),Y
  8097   AA           		TAX
  8098   C8           		INY
  8099   B1   AC      		LDA (TEMPN2),Y
  809B   85   AD      		STA TEMPN2+1
  809D   86   AC      		STX TEMPN2	;(CDR)
  809F   A2   AC      		LDX #TEMPN2
  80A1   20   4E   52 		JSR VPUSHP
  80A4   4C   7A   80 		JMP STXTW
  80A7   A9   00      	STXTWE:	LDA #$00
  80A9   85   88      		STA MARK1
  80AB   85   89      		STA MARK1+1
  80AD   A5   AA      	STXTX:	LDA TEMPN1
  80AF   C5   16      		CMP VSP
  80B1   D0   06      		BNE STXTX1
  80B3   A5   AB      		LDA TEMPN1+1
  80B5   C5   17      		CMP VSP+1
  80B7   F0   13      		BEQ STXTXE
  80B9   A2   AC      	STXTX1:	LDX #TEMPN2
  80BB   20   80   52 		JSR VPOP
  80BE   A2   88      		LDX #MARK1
  80C0   86   B2      		STX ANSN
  80C2   A0   AC      		LDY #TEMPN2
  80C4   A9   00      		LDA #LIST
  80C6   20   0F   53 		JSR CONS
  80C9   4C   AD   80 		JMP STXTX
  80CC   A5   88      	STXTXE:	LDA MARK1
  80CE   85   B6      		STA TEMPN6
  80D0   A5   89      		LDA MARK1+1
  80D2   85   B7      		STA TEMPN6+1
  80D4   A9   00      		LDA #$00
  80D6   85   88      		STA MARK1
  80D8   85   89      		STA MARK1+1
  80DA   A2   B6      	STEXT3:	LDX #TEMPN6
  80DC   20   4E   52 		JSR VPUSHP
  80DF   E6   07      		INC OTPUTN
  80E1   4C   1E   41 		JMP POPJ
  80E4   4C   21   7C 	SDFNRR:	JMP SMAKE2	;(ERROR XWTA,ARG1,CURTOK)
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-226
NLOGO	SYSTEM FUNCTIONS

  80E7   A2   A2      	SFIRST:	LDX #ARG1
  80E9   20   80   52 		JSR VPOP
  80EC   20   7F   5D 		JSR GETTYP
  80EF   C9   00      		CMP #LIST
  80F1   F0   12      		BEQ SFRST1
  80F3   C9   01      		CMP #ATOM
  80F5   F0   1D      		BEQ SFRST2
  80F7   C9   07      		CMP #SATOM
  80F9   F0   19      		BEQ SFRST2
  80FB   C9   03      		CMP #FIX
  80FD   F0   15      		BEQ SFRST2
  80FF   C9   04      		CMP #FLO
  8101   F0   11      		BEQ SFRST2
  8103   D0   DF      		BNE SDFNRR	;(Always)
  8105   A0   00      	SFRST1:	LDY #$00
  8107   B1   A2      		LDA (ARG1),Y
  8109   AA           		TAX
  810A   C8           		INY
  810B   B1   A2      		LDA (ARG1),Y
  810D   85   A3      		STA ARG1+1
  810F   86   A2      		STX ARG1	;(CAR)
  8111   4C   1F   7E 		JMP OTPRG1
  8114   A5   A3      	SFRST2:	LDA ARG1+1
  8116   F0   CC      		BEQ SDFNRR
  8118   A0   B6      	SFRST3:	LDY #TEMPN6	;TEMPN6 is TEMP
  811A   A2   A2      		LDX #ARG1
  811C   20   75   65 		JSR MAKPNM
  811F   A0   00      		LDY #$00
  8121   B1   B6      		LDA (TEMPN6),Y
  8123   AA           		TAX
  8124   C8           		INY
  8125   B1   B6      		LDA (TEMPN6),Y
  8127   85   B7      		STA TEMPN6+1
  8129   86   B6      		STX TEMPN6	;(CAR)
  812B   86   B4      		STX TEMPN5
  812D   A2   00      		LDX #$00
  812F   86   B5      		STX TEMPN5+1
  8131   A9   B6      		LDA #TEMPN6
  8133   85   B2      		STA ANSN
  8135   A0   B4      		LDY #TEMPN5
  8137   A9   02      		LDA #STRING
  8139   20   0F   53 		JSR CONS
  813C   A0   A2      		LDY #ARG1
  813E   A2   B6      		LDX #TEMPN6
  8140   20   F9   5F 		JSR INTERN
  8143   4C   1F   7E 		JMP OTPRG1
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-227
NLOGO	SYSTEM FUNCTIONS

  8146   A2   A2      	SLAST:	LDX #ARG1
  8148   20   80   52 		JSR VPOP
  814B   20   7F   5D 		JSR GETTYP
  814E   C9   00      		CMP #LIST
  8150   F0   13      		BEQ SLST1
  8152   C9   01      		CMP #ATOM
  8154   F0   23      		BEQ SLST2
  8156   C9   07      		CMP #SATOM
  8158   F0   1F      		BEQ SLST2
  815A   C9   03      		CMP #FIX
  815C   F0   1B      		BEQ SLST2
  815E   C9   04      		CMP #FLO
  8160   F0   17      		BEQ SLST2
  8162   4C   0B   80 		JMP SDFNR1
  8165   A2   A2      	SLST1:	LDX #ARG1
  8167   20   45   7A 		JSR GTLSTC
  816A   A0   00      		LDY #$00
  816C   B1   A2      		LDA (ARG1),Y
  816E   AA           		TAX
  816F   C8           		INY
  8170   B1   A2      		LDA (ARG1),Y
  8172   85   A3      		STA ARG1+1
  8174   86   A2      		STX ARG1	;(CAR)
  8176   4C   1F   7E 		JMP OTPRG1
  8179   A0   9E      	SLST2:	LDY #ARG2
  817B   A2   A2      		LDX #ARG1
  817D   20   75   65 		JSR MAKPNM
  8180   A2   9E      		LDX #ARG2
  8182   20   45   7A 		JSR GTLSTC
  8185   A0   01      		LDY #$01
  8187   B1   9E      		LDA (ARG2),Y
  8189   F0   12      		BEQ SLST3
  818B   85   A8      		STA TEMPN	;(CAR)
  818D   88           		DEY
  818E   84   A9      		STY TEMPN+1
  8190   A9   9E      		LDA #ARG2
  8192   85   B2      		STA ANSN
  8194   A2   00      		LDX #$00
  8196   A0   A8      		LDY #TEMPN
  8198   A9   02      		LDA #STRING
  819A   20   0F   53 		JSR CONS
  819D   A2   9E      	SLST3:	LDX #ARG2
  819F   A0   A2      		LDY #ARG1
  81A1   20   F9   5F 		JSR INTERN
  81A4   4C   1F   7E 		JMP OTPRG1
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-228
NLOGO	SYSTEM FUNCTIONS

  81A7   A5   4E      	SEQUAL:	LDA LTRUE
  81A9   85   BE      		STA TEMPX2	;TEMPX2 is PRED
  81AB   A5   4F      		LDA LTRUE+1
  81AD   85   BF      		STA TEMPX2+1
  81AF   A2   9E      		LDX #ARG2
  81B1   20   80   52 		JSR VPOP
  81B4   A2   A2      		LDX #ARG1
  81B6   20   80   52 		JSR VPOP
  81B9   E6   07      		INC OTPUTN
  81BB   A5   14      		LDA SP
  81BD   85   BA      		STA TEMPN8
  81BF   A5   15      		LDA SP+1
  81C1   85   BB      		STA TEMPN8+1
  81C3   A2   CE      		LDX #SEQEND&$FF
  81C5   A0   82      		LDY #SEQEND^
  81C7   20   37   52 		JSR PUSH
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-229
NLOGO	SYSTEM FUNCTIONS

  81CA   A2   9E      	EQ:	LDX #ARG2
  81CC   20   7F   5D 		JSR GETTYP
  81CF   85   B2      		STA ANSN
  81D1   A2   A2      		LDX #ARG1
  81D3   20   7F   5D 		JSR GETTYP
  81D6   85   C2      		STA ANSNX
  81D8   C9   00      		CMP #LIST
  81DA   F0   2C      		BEQ EQL
  81DC   C9   03      		CMP #FIX
  81DE   F0   31      		BEQ EQF
  81E0   C9   04      		CMP #FLO
  81E2   F0   2D      		BEQ EQF
  81E4   C9   01      		CMP #ATOM
  81E6   F0   54      		BEQ EQA
  81E8   A5   C2      	EQO:	LDA ANSNX
  81EA   C5   B2      		CMP ANSN
  81EC   D0   0C      		BNE EQFF
  81EE   A5   A2      	EQO1:	LDA ARG1
  81F0   C5   9E      		CMP ARG2
  81F2   D0   06      		BNE EQFF
  81F4   A5   A3      		LDA ARG1+1
  81F6   C5   9F      		CMP ARG2+1
  81F8   F0   0B      		BEQ EQPOP
  81FA   A5   50      	EQFF:	LDA LFALSE
  81FC   85   BE      		STA TEMPX2	;PRED
  81FE   A5   51      		LDA LFALSE+1
  8200   85   BF      		STA TEMPX2+1
  8202   4C   CE   82 		JMP SEQEND
  8205   4C   1E   41 	EQPOP:	JMP POPJ
  8208   A5   B2      	EQL:	LDA ANSN
  820A   C9   00      		CMP #LIST
  820C   D0   EC      		BNE EQFF
  820E   4C   57   82 		JMP EQLIST
  8211   A2   A2      	EQF:	LDX #ARG1	;ARG1 is a Fixnum
  8213   20   EC   58 		JSR GTNM2	;(GETNUM) Get first arg in NARG1
  8216   A2   9E      		LDX #ARG2
  8218   20   D7   58 		JSR GETNUM	;Get second arg in NARG2
  821B   90   DD      		BCC EQFF	;Not a number
  821D   C5   C2      	EQFC:	CMP ANSNX	;See if same type...
  821F   F0   0D      		BEQ EQF1	;Yes, skip conversion
  8221   C9   04      		CMP #FLO	;If NARG2 is Flonum,
  8223   F0   06      		BEQ EQF2	;then correct
  8225   20   2F   69 		JSR FLOTN2	;Else NARG2 is Fixnum, convert to flt. pt.
  8228   4C   2E   82 		JMP EQF1
  822B   20   38   69 	EQF2:	JSR FLOTN1	;Convert NARG1 to floating pt.
  822E   A2   03      	EQF1:	LDX #$03
  8230   B5   A2      	EQFLP:	LDA NARG1,X
  8232   D5   9E      		CMP NARG2,X
  8234   D0   C4      		BNE EQFF
  8236   CA           		DEX
  8237   10   F7      		BPL EQFLP
  8239   4C   1E   41 		JMP POPJ
  823C   A5   B2      	EQA:	LDA ANSN
  823E   C9   03      		CMP #FIX
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-230
NLOGO	SYSTEM FUNCTIONS

  8240   F0   04      		BEQ EQA1
  8242   C9   04      		CMP #FLO
  8244   D0   A2      		BNE EQO
  8246   85   C2      	EQA1:	STA ANSNX
  8248   A2   9E      		LDX #NARG2
  824A   20   EC   58 		JSR GTNM2
  824D   20   D5   58 		JSR GTNUM1
  8250   90   A8      		BCC EQFF
  8252   C5   C2      		CMP ANSNX
  8254   4C   1D   82 		JMP EQFC
  8257   A5   A3      	EQLIST:	LDA ARG1+1
  8259   D0   07      		BNE EQLST1
  825B   A5   9F      		LDA ARG2+1
  825D   D0   9B      		BNE EQFF
  825F   4C   1E   41 		JMP POPJ
  8262   A5   9F      	EQLST1:	LDA ARG2+1
  8264   F0   94      		BEQ EQFF
  8266   A2   A2      		LDX #ARG1
  8268   20   20   52 		JSR PUSHP
  826B   A2   9E      		LDX #ARG2
  826D   20   20   52 		JSR PUSHP
  8270   A0   00      		LDY #$00
  8272   B1   A2      		LDA (ARG1),Y
  8274   AA           		TAX
  8275   C8           		INY
  8276   B1   A2      		LDA (ARG1),Y
  8278   85   A3      		STA ARG1+1
  827A   86   A2      		STX ARG1	;(CAR)
  827C   88           		DEY
  827D   B1   9E      		LDA (ARG2),Y
  827F   AA           		TAX
  8280   C8           		INY
  8281   B1   9E      		LDA (ARG2),Y
  8283   85   9F      		STA ARG2+1
  8285   86   9E      		STX ARG2	;(CAR)
  8287   20   0D   54 		JSR STKTST
  828A   A2   94      		LDX #EL1&$FF
  828C   A0   82      		LDY #EL1^
  828E   20   37   52 		JSR PUSH
  8291   4C   CA   81 		JMP EQ
  8294   A2   9E      	EL1:	LDX #ARG2
  8296   20   67   52 		JSR POP
  8299   A2   A2      		LDX #ARG1
  829B   20   67   52 		JSR POP
  829E   A0   02      		LDY #$02
  82A0   B1   A2      		LDA (ARG1),Y
  82A2   AA           		TAX
  82A3   C8           		INY
  82A4   B1   A2      		LDA (ARG1),Y
  82A6   85   A3      		STA ARG1+1
  82A8   86   A2      		STX ARG1	;(CDR)
  82AA   A2   A2      		LDX #ARG1
  82AC   20   7F   5D 		JSR GETTYP
  82AF   C9   00      		CMP #LIST
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-231
NLOGO	SYSTEM FUNCTIONS

  82B1   D0   18      		BNE EL1R
  82B3   A0   02      		LDY #$02
  82B5   B1   9E      		LDA (ARG2),Y
  82B7   AA           		TAX
  82B8   C8           		INY
  82B9   B1   9E      		LDA (ARG2),Y
  82BB   85   9F      		STA ARG2+1
  82BD   86   9E      		STX ARG2	;(CDR)
  82BF   A2   9E      		LDX #ARG2
  82C1   20   7F   5D 		JSR GETTYP
  82C4   C9   00      		CMP #LIST
  82C6   D0   03      		BNE EL1R
  82C8   4C   57   82 		JMP EQLIST
  82CB   20   C8   51 	EL1R:	JSR SYSBUG
  82CE   A2   BE      	SEQEND:	LDX #TEMPX2	;PRED
  82D0   20   4E   52 		JSR VPUSHP
  82D3   A5   BA      		LDA TEMPN8
  82D5   85   14      		STA SP
  82D7   A5   BB      		LDA TEMPN8+1
  82D9   85   15      		STA SP+1
  82DB   4C   1E   41 		JMP POPJ
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-232
NLOGO	SYSTEM FUNCTIONS

  82DE   A5   09      	STO:	LDA GRPHCS
  82E0   F0   05      		BEQ STO2
  82E2   20   87   72 		JSR RESETT
  82E5   C6   09      		DEC GRPHCS
  82E7   A5   57      	STO2:	LDA INDEV
  82E9   D0   03      		BNE STO1
  82EB   4C   2E   6C 		JMP CHGST1	;Not in EDIT-eval loop, so call screen editor
  82EE   20   D1   5A 	STO1:	JSR EDTSTP	;In edit-eval loop
  82F1   A9   01      		LDA #BUFFER
  82F3   85   08      		STA EDSW
  82F5   A9   BE      		LDA #TEMPX2	;FUN is TEMPX2
  82F7   A2   A2      		LDX #ARG1
  82F9   20   8D   56 		JSR GETFUN
  82FC   A5   BF      		LDA TEMPX2+1
  82FE   F0   05      		BEQ STO1A
  8300   A2   A2      		LDX #ARG1
  8302   20   6E   56 		JSR UNFUNC
  8305   A9   00      	STO1A:	LDA #$00
  8307   85   05      		STA NARGS
  8309   A5   61      		LDA TOKPTR
  830B   85   88      		STA MARK1
  830D   A5   62      		LDA TOKPTR+1
  830F   85   89      		STA MARK1+1
  8311   F0   31      		BEQ STOWE
  8313   A5   62      	STOW:	LDA TOKPTR+1
  8315   F0   2D      		BEQ STOWE
  8317   A0   00      		LDY #$00
  8319   B1   61      		LDA (TOKPTR),Y
  831B   85   BE      		STA TEMPX2	;TEMPX2 is TOKEN
  831D   C8           		INY
  831E   B1   61      		LDA (TOKPTR),Y
  8320   85   BF      		STA TEMPX2+1	;(GETTOK)
  8322   A2   BE      	STOW2:	LDX #TEMPX2
  8324   20   7F   5D 		JSR GETTYP
  8327   C9   01      		CMP #ATOM
  8329   F0   0D      		BEQ STOW3
  832B   C9   07      		CMP #SATOM
  832D   F0   09      		BEQ STOW3
  832F   C9   09      		CMP #DATOM
  8331   F0   05      		BEQ STOW3
  8333   A2   BE      		LDX #TEMPX2
  8335   4C   FB   7E 		JMP STLR4A
  8338   A2   61      	STOW3:	LDX #TOKPTR
  833A   20   70   55 		JSR TTKADV
  833D   E6   05      		INC NARGS
  833F   D0   D2      		BNE STOW
  8341   4C   FB   42 		JMP EXCED
  8344   A2   00      	STOWE:	LDX #$00
  8346   86   BD      		STX TEMPX1+1
  8348   A9   9A      		LDA #EDBOD
  834A   85   B2      		STA ANSN
  834C   8A           		TXA		;(Type LIST)
  834D   A0   88      		LDY #MARK1
  834F   20   0F   53 		JSR CONS
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-233
NLOGO	SYSTEM FUNCTIONS

  8352   A0   9A      		LDY #EDBOD
  8354   A2   84      		LDX #EDTATM
  8356   A5   05      		LDA NARGS
  8358   85   BC      		STA TEMPX1
  835A   A9   BC      		LDA #TEMPX1
  835C   20   A3   5D 		JSR PTFTXT
  835F   4C   1E   41 		JMP POPJ
  8362   A9   16      	STOERR:	LDA #XDEF
  8364   A0   A2      		LDY #ARG1
  8366   4C   42   61 		JMP ERROR
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-234
NLOGO	SYSTEM FUNCTIONS

  8369   A9   00      	EXTEDT:	LDA #$00
  836B   85   08      		STA EDSW
  836D   85   9A      		STA EDBOD
  836F   85   9B      		STA EDBOD+1
  8371   85   84      		STA EDTATM
  8373   85   85      		STA EDTATM+1
  8375   60           	RTS9:	RTS
                      
  8376   20   D1   5A 	SEDIT:	JSR EDTSTP
  8379   A9   01      		LDA #$01
  837B   85   08      		STA EDSW
  837D   A9   B4      		LDA #TEMPN5	;FUN
  837F   A2   A2      		LDX #ARG1
  8381   20   8D   56 		JSR GETFUN
  8384   A5   B5      		LDA TEMPN5+1
  8386   D0   07      		BNE SEDIT1
  8388   A9   03      		LDA #XUDF
  838A   A0   A2      		LDY #ARG1
  838C   4C   42   61 		JMP ERROR
  838F   A9   00      	SEDIT1:	LDA #$00
  8391   A2   B4      		LDX #TEMPN5
  8393   A0   9A      		LDY #EDBOD
  8395   20   3D   5E 		JSR UNSTUF
  8398   A0   00      		LDY #$00
  839A   B1   9A      		LDA (EDBOD),Y
  839C   85   AA      		STA TEMPN1	;ARGS
  839E   C8           		INY
  839F   B1   9A      		LDA (EDBOD),Y
  83A1   85   AB      		STA TEMPN1+1	;(CAR)
  83A3   A2   BC      		LDX #TEMPX1
  83A5   A0   AA      		LDY #TEMPN1
  83A7   20   2D   56 		JSR GETLEN
  83AA   A9   BC      		LDA #TEMPX1
  83AC   A0   9A      		LDY #EDBOD
  83AE   A2   A2      		LDX #ARG1
  83B0   20   A3   5D 		JSR PTFTXT
  83B3   20   3C   4A 		JSR RSTERR
  83B6   4C   1E   41 		JMP POPJ
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-235
NLOGO	SYSTEM FUNCTIONS

  83B9   A5   08      	SEND:	LDA EDSW
  83BB   D0   03      		BNE SEND1	;if edit switch off, give
  83BD   4C   E4   7E 		JMP STTLR1	;(ERROR XNED)
  83C0   A5   7C      	SEND1:	LDA LEVNUM	;if not at top level, complain.
  83C2   D0   1F      		BNE SENDR
  83C4   A5   7D      		LDA LEVNUM+1
  83C6   D0   1B      		BNE SENDR
  83C8   A9   84      		LDA #EDTATM
  83CA   A2   9A      		LDX #EDBOD
  83CC   20   05   5C 		JSR STUFF	;try to put the function def together
  83CF   A9   00      		LDA #$00
  83D1   A2   84      		LDX #EDTATM
  83D3   20   F6   65 		JSR LTYPE
  83D6   A2   FF      		LDX #SENDM&$FF	;" DEFINED"
  83D8   A0   DA      		LDY #SENDM^
  83DA   20   90   54 		JSR PRTSTR
  83DD   20   69   83 	SEND2:	JSR EXTEDT
  83E0   4C   1E   41 		JMP POPJ
  83E3   4C   E9   7E 	SENDR:	JMP STTLR2	;(ERROR XETL)
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-236
NLOGO	SYSTEM FUNCTIONS

  83E6   A5   62      	SPO:	LDA TOKPTR+1
  83E8   D0   07      		BNE SPO1
  83EA   A5   87      		LDA PODEFL+1
  83EC   D0   52      		BNE SPO1A
  83EE   4C   1E   41 		JMP POPJ
  83F1   A0   00      	SPO1:	LDY #$00
  83F3   B1   61      		LDA (TOKPTR),Y
  83F5   85   A2      		STA ARG1
  83F7   C8           		INY
  83F8   B1   61      		LDA (TOKPTR),Y
  83FA   85   A3      		STA ARG1+1	;(GETTOK)
  83FC   A2   61      		LDX #TOKPTR
  83FE   20   70   55 		JSR TTKADV
  8401   A6   A2      		LDX ARG1
  8403   A4   A3      		LDY ARG1+1
  8405   EC   00   03 		CPX ALL
  8408   D0   12      		BNE SPO2
  840A   CC   01   03 		CPY ALL+1
  840D   D0   0D      		BNE SPO2
  840F   A9   01      		LDA #$01
  8411   20   32   85 		JSR POFUNS
  8414   A9   01      	SPON:	LDA #$01
  8416   20   85   84 		JSR PONAMS
  8419   4C   1E   41 		JMP POPJ
  841C   EC   16   03 	SPO2:	CPX NAMES
  841F   D0   05      		BNE SPO3
  8421   CC   17   03 		CPY NAMES+1
  8424   F0   EE      		BEQ SPON
  8426   EC   24   03 	SPO3:	CPX TITLES
  8429   D0   2A      		BNE SPO4
  842B   CC   25   03 		CPY TITLES+1
  842E   D0   25      		BNE SPO4
  8430   A9   00      	SPOTS:	LDA #$00
  8432   20   32   85 		JSR POFUNS
  8435   4C   1E   41 		JMP POPJ
  8438   A5   A2      	SPO5A:	LDA ARG1
  843A   85   86      		STA PODEFL
  843C   A5   A3      		LDA ARG1+1
  843E   85   87      		STA PODEFL+1
  8440   A2   86      	SPO1A:	LDX #PODEFL
  8442   A9   AA      		LDA #TEMPN1
  8444   20   8D   56 		JSR GETFUN
  8447   A5   AB      		LDA TEMPN1+1
  8449   F0   33      		BEQ PFERR
  844B   A2   01      		LDX #$01
  844D   A9   86      		LDA #PODEFL
  844F   20   5E   85 		JSR POTEXT
  8452   4C   1E   41 		JMP POPJ
  8455   EC   1E   03 	SPO4:	CPX PROCS
  8458   D0   0D      		BNE SPO5
  845A   CC   1F   03 		CPY PROCS+1
  845D   D0   08      		BNE SPO5
  845F   A9   01      		LDA #$01
  8461   20   32   85 		JSR POFUNS
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-237
NLOGO	SYSTEM FUNCTIONS

  8464   4C   1E   41 		JMP POPJ
  8467   A2   A2      	SPO5:	LDX #ARG1
  8469   20   7F   5D 		JSR GETTYP
  846C   C9   01      		CMP #ATOM
  846E   F0   C8      		BEQ SPO5A
  8470   C9   07      		CMP #SATOM
  8472   F0   03      		BEQ SPO5S
  8474   4C   21   7C 		JMP SMAKE2	;(ERROR XWTA,ARG1,CURTOK)
  8477   A0   A2      	SPO5S:	LDY #ARG1
  8479   A9   0C      		LDA #XUBL
  847B   4C   42   61 		JMP ERROR
  847E   A0   86      	PFERR:	LDY #PODEFL
  8480   A9   21      		LDA #XNDF
  8482   4C   42   61 		JMP ERROR
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-238
NLOGO	SYSTEM FUNCTIONS

  8485   A5   92      	PONAMS:	LDA OBLIST
  8487   85   BA      		STA TEMPN8
  8489   A5   93      		LDA OBLIST+1
  848B   85   BB      		STA TEMPN8+1	;TEMPN8 is OBLIST pointer
  848D   A5   BB      	PONW1:	LDA TEMPN8+1
  848F   F0   1C      		BEQ PONW1E	;See if done
  8491   A0   00      		LDY #$00
  8493   B1   BA      		LDA (TEMPN8),Y
  8495   85   B6      		STA TEMPN6	;Get name pointer
  8497   C8           		INY
  8498   B1   BA      		LDA (TEMPN8),Y
  849A   85   B7      		STA TEMPN6+1	;(CAR)
  849C   C8           		INY
  849D   B1   BA      		LDA (TEMPN8),Y
  849F   AA           		TAX
  84A0   C8           		INY
  84A1   B1   BA      		LDA (TEMPN8),Y
  84A3   85   BB      		STA TEMPN8+1
  84A5   86   BA      		STX TEMPN8	;(CDR) to next OBLIST object
  84A7   20   D2   84 		JSR PON1	;Print the name and value
  84AA   4C   8D   84 		JMP PONW1
  84AD   A5   59      	PONW1E:	LDA SOBLST
  84AF   85   B6      		STA TEMPN6	;TEMPN6 is SOBLIST pointer
  84B1   A5   5A      		LDA SOBLST+1
  84B3   85   B7      		STA TEMPN6+1
  84B5   A5   B6      	PONW2:	LDA TEMPN6
  84B7   C5   5B      		CMP SOBTOP
  84B9   D0   07      		BNE PONW2A	;See if done
  84BB   A5   B7      		LDA TEMPN6+1
  84BD   C5   5C      		CMP SOBTOP+1
  84BF   D0   01      		BNE PONW2A
  84C1   60           	PONRTS:	RTS
  84C2   20   D2   84 	PONW2A:	JSR PON1	;Print the name and value
  84C5   18           		CLC
  84C6   A5   B6      		LDA TEMPN6
  84C8   69   04      		ADC #$04
  84CA   85   B6      		STA TEMPN6
  84CC   90   E7      		BCC PONW2
  84CE   E6   B7      		INC TEMPN6+1
  84D0   D0   E3      		BNE PONW2	;(Always)
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-239
NLOGO	SYSTEM FUNCTIONS

  84D2   A2   B8      	PON1:	LDX #TEMPN7	;TEMPN7 is value
  84D4   A0   B6      		LDY #TEMPN6	;TEMPN6 is NAME
  84D6   20   CC   52 		JSR GETVAL
  84D9   A5   B9      		LDA TEMPN7+1
  84DB   D0   04      		BNE PON1A
  84DD   A5   B8      		LDA TEMPN7
  84DF   D0   E0      		BNE PONRTS	;Skip if NOVALUE
  84E1   A5   57      	PON1A:	LDA INDEV
  84E3   D0   1D      		BNE PON1B	;Use "MAKE" if not screen output
  84E5   A9   22      		LDA #'"
  84E7   20   90   72 		JSR TPCHR
  84EA   A9   00      		LDA #$00
  84EC   A2   B6      		LDX #TEMPN6
  84EE   20   F6   65 		JSR LTYPE
  84F1   A2   09      		LDX #PNMSG1&$FF		;"IS "
  84F3   A0   DB      		LDY #PNMSG1^
  84F5   20   90   54 		JSR PRTSTR
  84F8   A9   00      		LDA #$00
  84FA   A2   B8      		LDX #TEMPN7
  84FC   20   F6   65 		JSR LTYPE
  84FF   4C   67   72 		JMP BREAK1
  8502   A2   0E      	PON1B:	LDX #PNMSG2&$FF		;"MAKE "
  8504   A0   DB      		LDY #PNMSG2^
  8506   20   90   54 		JSR PRTSTR
  8509   A9   22      		LDA #'"
  850B   20   90   72 		JSR TPCHR
  850E   A9   00      		LDA #$00
  8510   A2   B6      		LDX #TEMPN6
  8512   20   F6   65 		JSR LTYPE
  8515   A9   20      		LDA #$20
  8517   20   90   72 		JSR TPCHR
  851A   A2   B8      		LDX #TEMPN7
  851C   20   7F   5D 		JSR GETTYP
  851F   C9   01      		CMP #ATOM
  8521   D0   05      		BNE PON1C
  8523   A9   22      		LDA #'"
  8525   20   90   72 		JSR TPCHR
  8528   A9   00      	PON1C:	LDA #$00
  852A   A2   B8      		LDX #TEMPN7
  852C   20   F6   65 		JSR LTYPE
  852F   4C   67   72 		JMP BREAK1
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-240
NLOGO	SYSTEM FUNCTIONS

  8532   85   C0      	POFUNS:	STA ANSN2	;ANSN2 is FULL
  8534   A5   92      		LDA OBLIST
  8536   85   BE      		STA TEMPX2	;TEMPN7 is OBLIST pointer
  8538   A5   93      		LDA OBLIST+1
  853A   85   BF      		STA TEMPX2+1
  853C   A0   03      	POFNSW:	LDY #$03
  853E   B1   BE      		LDA (TEMPX2),Y
  8540   48           		PHA
  8541   88           		DEY
  8542   B1   BE      		LDA (TEMPX2),Y
  8544   48           		PHA
  8545   88           		DEY
  8546   B1   BE      		LDA (TEMPX2),Y
  8548   AA           		TAX
  8549   88           		DEY
  854A   B1   BE      		LDA (TEMPX2),Y
  854C   85   BE      		STA TEMPX2
  854E   86   BF      		STX TEMPX2+1
  8550   A9   BE      		LDA #TEMPX2
  8552   20   60   85 		JSR PTEXTX
  8555   68           		PLA
  8556   85   BE      		STA TEMPX2
  8558   68           		PLA
  8559   85   BF      		STA TEMPX2+1
  855B   D0   DF      		BNE POFNSW
  855D   60           		RTS
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-241
NLOGO	SYSTEM FUNCTIONS

  855E   86   C0      	POTEXT:	STX ANSN2	;ANSN2 is FULL
  8560   85   B3      	PTEXTX:	STA ANSN1	;Save ATOMM (Entry point for POFUNS)
  8562   AA           		TAX
  8563   A9   B6      		LDA #TEMPN6	;TEMPN6 becomes FUN
  8565   20   8D   56 		JSR GETFUN
  8568   A5   B7      		LDA TEMPN6+1
  856A   F0   73      		BEQ PTXRTS
  856C   A2   6E      		LDX #TOMSG&$FF	;"TO "
  856E   A0   DB      		LDY #TOMSG^
  8570   20   90   54 		JSR PRTSTR
  8573   A6   B3      		LDX ANSN1	;Retrieve ATOMM
  8575   A9   00      		LDA #$00
  8577   20   F6   65 		JSR LTYPE	;Print the title
  857A   A0   02      		LDY #$02
  857C   B1   B6      		LDA (TEMPN6),Y
  857E   AA           		TAX
  857F   C8           		INY
  8580   B1   B6      		LDA (TEMPN6),Y
  8582   85   B7      		STA TEMPN6+1
  8584   86   B6      		STX TEMPN6	;(CDR)
  8586   A2   B6      		LDX #TEMPN6
  8588   20   7F   5D 		JSR GETTYP
  858B   C9   00      		CMP #LIST
  858D   F0   0A      		BEQ POTXTL
  858F   C9   0B      		CMP #FPACK
  8591   D0   03      		BNE PTXERR
  8593   4C   53   86 		JMP POTXTF
  8596   20   C8   51 	PTXERR:	JSR SYSBUG
  8599   A0   00      	POTXTL:	LDY #$00
  859B   B1   B6      		LDA (TEMPN6),Y
  859D   85   BA      		STA TEMPN8	;TEMPN8 is LINE
  859F   C8           		INY
  85A0   B1   B6      		LDA (TEMPN6),Y
  85A2   85   BB      		STA TEMPN8+1	;(CAR)
  85A4   C8           		INY
  85A5   B1   B6      		LDA (TEMPN6),Y
  85A7   AA           		TAX
  85A8   C8           		INY
  85A9   B1   B6      		LDA (TEMPN6),Y
  85AB   85   B7      		STA TEMPN6+1
  85AD   86   B6      		STX TEMPN6	;(CDR)
  85AF   A5   BB      	PTXLW:	LDA TEMPN8+1
  85B1   F0   25      		BEQ PTXLWE
  85B3   A0   00      		LDY #$00
  85B5   B1   BA      		LDA (TEMPN8),Y
  85B7   85   BC      		STA TEMPX1
  85B9   C8           		INY
  85BA   B1   BA      		LDA (TEMPN8),Y
  85BC   85   BD      		STA TEMPX1+1	;(CAR)
  85BE   C8           		INY
  85BF   B1   BA      		LDA (TEMPN8),Y
  85C1   AA           		TAX
  85C2   C8           		INY
  85C3   B1   BA      		LDA (TEMPN8),Y
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-242
NLOGO	SYSTEM FUNCTIONS

  85C5   85   BB      		STA TEMPN8+1
  85C7   86   BA      		STX TEMPN8
  85C9   A9   20      		LDA #$20	;(Space)
  85CB   20   90   72 		JSR TPCHR
  85CE   A9   00      		LDA #$00
  85D0   A2   BC      		LDX #TEMPX1
  85D2   20   F6   65 		JSR LTYPE
  85D5   4C   AF   85 		JMP PTXLW
  85D8   20   67   72 	PTXLWE:	JSR BREAK1
  85DB   A5   C0      		LDA ANSN2	;FULL
  85DD   D0   01      		BNE PTXLX
  85DF   60           	PTXRTS:	RTS
  85E0   A5   B7      	PTXLX:	LDA TEMPN6+1
  85E2   D0   07      		BNE PTXLX1
  85E4   A2   72      	PTXEND:	LDX #ENDMSG&$FF
  85E6   A0   DB      		LDY #ENDMSG^
  85E8   4C   90   54 		JMP PRTSTR
  85EB   A0   00      	PTXLX1:	LDY #$00
  85ED   B1   B6      		LDA (TEMPN6),Y
  85EF   85   BA      		STA TEMPN8
  85F1   C8           		INY
  85F2   B1   B6      		LDA (TEMPN6),Y
  85F4   85   BB      		STA TEMPN8+1	;(CAR)
  85F6   C8           		INY
  85F7   B1   B6      		LDA (TEMPN6),Y
  85F9   AA           		TAX
  85FA   C8           		INY
  85FB   B1   B6      		LDA (TEMPN6),Y
  85FD   85   B7      		STA TEMPN6+1
  85FF   86   B6      		STX TEMPN6	;(CDR)
  8601   A0   00      		LDY #$00
  8603   B1   BA      		LDA (TEMPN8),Y
  8605   85   BC      		STA TEMPX1
  8607   C8           		INY
  8608   B1   BA      		LDA (TEMPN8),Y
  860A   85   BD      		STA TEMPX1+1	;(CAR)
  860C   C8           		INY
  860D   B1   BA      		LDA (TEMPN8),Y
  860F   AA           		TAX
  8610   C8           		INY
  8611   B1   BA      		LDA (TEMPN8),Y
  8613   85   BB      		STA TEMPN8+1
  8615   86   BA      		STX TEMPN8	;(CDR)
  8617   A5   57      		LDA INDEV
  8619   D0   09      		BNE PTXLY	;If screen editor, no line numbers
  861B   A5   08      		LDA EDSW
  861D   F0   05      		BEQ PTXLY	;else if not other editor, no line numbers
  861F   A2   BC      	PTXLX2:	LDX #TEMPX1
  8621   20   3F   67 		JSR TYPFIX
  8624   A5   BB      	PTXLY:	LDA TEMPN8+1
  8626   F0   25      		BEQ PTXLYE
  8628   A0   00      		LDY #$00
  862A   B1   BA      		LDA (TEMPN8),Y
  862C   85   BC      		STA TEMPX1
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-243
NLOGO	SYSTEM FUNCTIONS

  862E   C8           		INY
  862F   B1   BA      		LDA (TEMPN8),Y
  8631   85   BD      		STA TEMPX1+1	;(CAR)
  8633   C8           		INY
  8634   B1   BA      		LDA (TEMPN8),Y
  8636   AA           		TAX
  8637   C8           		INY
  8638   B1   BA      		LDA (TEMPN8),Y
  863A   85   BB      		STA TEMPN8+1
  863C   86   BA      		STX TEMPN8
  863E   A9   20      		LDA #$20	;(Space)
  8640   20   90   72 		JSR TPCHR
  8643   A9   00      		LDA #$00
  8645   A2   BC      		LDX #TEMPX1
  8647   20   F6   65 		JSR LTYPE
  864A   4C   24   86 		JMP PTXLY
  864D   20   67   72 	PTXLYE:	JSR BREAK1
  8650   4C   E0   85 		JMP PTXLX
  8653   A0   00      	POTXTF:	LDY #$00
  8655   B1   B6      		LDA (TEMPN6),Y
  8657   85   BA      		STA TEMPN8	;TEMPN8 is PTR
  8659   C8           		INY
  865A   B1   B6      		LDA (TEMPN6),Y
  865C   85   BB      		STA TEMPN8+1	;(GETBAR)
  865E   C8           		INY
  865F   B1   B6      		LDA (TEMPN6),Y
  8661   85   B8      		STA TEMPN7	;TEMPN7 is ENDPTR
  8663   C8           		INY
  8664   B1   B6      		LDA (TEMPN6),Y
  8666   85   B9      		STA TEMPN7+1	;(GETBAR)
  8668   18           		CLC
  8669   A5   B6      		LDA TEMPN6
  866B   69   02      		ADC #$02
  866D   85   B6      		STA TEMPN6
  866F   90   02      		BCC PTXFW
  8671   E6   B7      		INC TEMPN6+1
  8673   A5   B8      	PTXFW:	LDA TEMPN7
  8675   C5   BA      		CMP TEMPN8
  8677   D0   06      		BNE PTXFW1
  8679   A5   B9      		LDA TEMPN7+1
  867B   C5   BB      		CMP TEMPN8+1
  867D   F0   25      		BEQ PTXFWE
  867F   A0   00      	PTXFW1:	LDY #$00
  8681   B1   BA      		LDA (TEMPN8),Y
  8683   85   BC      		STA TEMPX1
  8685   C8           		INY
  8686   B1   BA      		LDA (TEMPN8),Y
  8688   85   BD      		STA TEMPX1+1	;(GETBAR)
  868A   18           		CLC
  868B   A5   BA      		LDA TEMPN8
  868D   69   02      		ADC #$02
  868F   85   BA      		STA TEMPN8
  8691   90   02      		BCC PTXFW2
  8693   E6   BB      		INC TEMPN8+1
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-244
NLOGO	SYSTEM FUNCTIONS

  8695   A9   20      	PTXFW2:	LDA #$20
  8697   20   90   72 		JSR TPCHR
  869A   A9   00      		LDA #$00
  869C   A2   BC      		LDX #TEMPX1
  869E   20   F6   65 		JSR LTYPE
  86A1   4C   73   86 		JMP PTXFW
  86A4   20   67   72 	PTXFWE:	JSR BREAK1
  86A7   A5   C0      		LDA ANSN2
  86A9   D0   01      		BNE PTXFX
  86AB   60           		RTS
  86AC   A5   B9      	PTXFX:	LDA TEMPN7+1
  86AE   D0   03      		BNE PTXFX1
  86B0   4C   E4   85 		JMP PTXEND
  86B3   A5   B8      	PTXFX1:	LDA TEMPN7
  86B5   85   BA      		STA TEMPN8
  86B7   A5   B9      		LDA TEMPN7+1
  86B9   85   BB      		STA TEMPN8+1
  86BB   A0   02      		LDY #$02
  86BD   B1   B6      		LDA (TEMPN6),Y
  86BF   85   B8      		STA TEMPN7
  86C1   C8           		INY
  86C2   B1   B6      		LDA (TEMPN6),Y
  86C4   85   B9      		STA TEMPN7+1	;(GETBAR)
  86C6   18           		CLC
  86C7   A5   B6      		LDA TEMPN6
  86C9   69   02      		ADC #$02
  86CB   85   B6      		STA TEMPN6
  86CD   90   02      		BCC PTXFX2
  86CF   E6   B7      		INC TEMPN6+1
  86D1   A5   B9      	PTXFX2:	LDA TEMPN7+1
  86D3   D0   03      		BNE PTXFX3
  86D5   4C   E4   85 		JMP PTXEND
  86D8   A0   00      	PTXFX3:	LDY #$00
  86DA   B1   BA      		LDA (TEMPN8),Y
  86DC   85   BC      		STA TEMPX1
  86DE   C8           		INY
  86DF   B1   BA      		LDA (TEMPN8),Y
  86E1   85   BD      		STA TEMPX1+1	;(GETBAR)
  86E3   18           		CLC
  86E4   A5   BA      		LDA TEMPN8
  86E6   69   02      		ADC #$02
  86E8   85   BA      		STA TEMPN8
  86EA   90   02      		BCC PTXFX4
  86EC   E6   BB      		INC TEMPN8+1
  86EE   A5   57      	PTXFX4:	LDA INDEV
  86F0   D0   09      		BNE PTXFY	;No line numbers if screen-editor
  86F2   A5   08      		LDA EDSW
  86F4   F0   05      		BEQ PTXFY	;or if not in otherr editor
  86F6   A2   BC      	PTXFX5:	LDX #TEMPX1
  86F8   20   3F   67 		JSR TYPFIX
  86FB   A5   B8      	PTXFY:	LDA TEMPN7
  86FD   C5   BA      		CMP TEMPN8
  86FF   D0   06      		BNE PTXFY1
  8701   A5   B9      		LDA TEMPN7+1
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-245
NLOGO	SYSTEM FUNCTIONS

  8703   C5   BB      		CMP TEMPN8+1
  8705   F0   25      		BEQ PTXFYE
  8707   A0   00      	PTXFY1:	LDY #$00
  8709   B1   BA      		LDA (TEMPN8),Y
  870B   85   BC      		STA TEMPX1
  870D   C8           		INY
  870E   B1   BA      		LDA (TEMPN8),Y
  8710   85   BD      		STA TEMPX1+1	;(GETBAR)
  8712   18           		CLC
  8713   A5   BA      		LDA TEMPN8
  8715   69   02      		ADC #$02
  8717   85   BA      		STA TEMPN8
  8719   90   02      		BCC PTXFY2
  871B   E6   BB      		INC TEMPN8+1
  871D   A9   20      	PTXFY2:	LDA #$20
  871F   20   90   72 		JSR TPCHR
  8722   A9   00      		LDA #$00
  8724   A2   BC      		LDX #TEMPX1
  8726   20   F6   65 		JSR LTYPE
  8729   4C   FB   86 		JMP PTXFY
  872C   20   67   72 	PTXFYE:	JSR BREAK1
  872F   4C   AC   86 		JMP PTXFX
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-246
NLOGO	SYSTEM FUNCTIONS

  8732   A5   6D      	STRCBK:	LDA FRAME+1
  8734   D0   0A      		BNE TCBK1
  8736   A2   14      		LDX #TBMSG1&$FF
  8738   A0   DB      		LDY #TBMSG1^
  873A   20   90   54 		JSR PRTSTR
  873D   4C   E6   87 		JMP TCBKWE
  8740   A2   2D      	TCBK1:	LDX #TBMSG2&$FF
  8742   A0   DB      		LDY #TBMSG2^
  8744   20   90   54 		JSR PRTSTR
  8747   A9   01      		LDA #$01
  8749   85   B3      		STA ANSN1	;ANSN1 is FIRST
  874B   A5   6C      		LDA FRAME
  874D   85   BC      		STA TEMPX1	;TEMPX1 is FR
  874F   A5   6D      		LDA FRAME+1
  8751   85   BD      		STA TEMPX1+1
  8753   A5   6E      		LDA XFRAME
  8755   85   BE      		STA TEMPX2	;TEMPX2 is XFR
  8757   A5   6F      		LDA XFRAME+1
  8759   85   BF      		STA TEMPX2+1
  875B   A5   BD      	TCBKW:	LDA TEMPX1+1
  875D   D0   03      		BNE TCBKW1
  875F   4C   E6   87 		JMP TCBKWE
  8762   18           	TCBKW1:	CLC
  8763   A5   BC      		LDA TEMPX1
  8765   69   12      		ADC #$12	;(SF_BINDINGS = 18.)
  8767   85   B6      		STA TEMPN6	;TEMPN6 is PTR
  8769   A5   BD      		LDA TEMPX1+1
  876B   69   00      		ADC #$00
  876D   85   B7      		STA TEMPN6+1
  876F   38           		SEC
  8770   A5   BE      		LDA TEMPX2
  8772   E9   02      		SBC #$02	;PTR1 (TEMPN7) points to top binding (name)
  8774   85   B8      		STA TEMPN7
  8776   A5   BF      		LDA TEMPX2+1
  8778   E9   00      		SBC #$00
  877A   85   B9      		STA TEMPN7+1
  877C   A5   B9      	TCBKX:	LDA TEMPN7+1
  877E   C5   B7      		CMP TEMPN6+1
  8780   90   4B      		BCC TCBKXE
  8782   D0   06      		BNE TCBKX1
  8784   A5   B8      		LDA TEMPN7
  8786   C5   B6      		CMP TEMPN6
  8788   90   43      		BCC TCBKXE
  878A   A0   00      	TCBKX1:	LDY #$00
  878C   B1   B8      		LDA (TEMPN7),Y
  878E   85   A6      		STA TEMPNH
  8790   C8           		INY
  8791   B1   B8      		LDA (TEMPN7),Y
  8793   85   A7      		STA TEMPNH+1	;(GETBAR)
  8795   A5   A6      		LDA TEMPNH
  8797   6A           		ROR A
  8798   90   25      		BCC TCBKX2
  879A   A5   B3      		LDA ANSN1
  879C   D0   0D      		BNE TCBKX3
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-247
NLOGO	SYSTEM FUNCTIONS

  879E   A9   2C      		LDA #',
  87A0   20   90   72 		JSR TPCHR
  87A3   A9   20      		LDA #$20
  87A5   20   90   72 		JSR TPCHR
  87A8   4C   AD   87 		JMP TCBKX4
  87AB   C6   B3      	TCBKX3:	DEC ANSN1
  87AD   A0   05      	TCBKX4:	LDY #$05
  87AF   B1   A6      		LDA (TEMPNH),Y
  87B1   85   BA      		STA TEMPN8
  87B3   C8           		INY
  87B4   B1   A6      		LDA (TEMPNH),Y
  87B6   85   BB      		STA TEMPN8+1	;(GETBAR)
  87B8   A9   00      		LDA #$00
  87BA   A2   BA      		LDX #TEMPN8
  87BC   20   F6   65 		JSR LTYPE
  87BF   38           	TCBKX2:	SEC
  87C0   A5   B8      		LDA TEMPN7
  87C2   E9   04      		SBC #$04
  87C4   85   B8      		STA TEMPN7
  87C6   B0   B4      		BCS TCBKX
  87C8   C6   B9      		DEC TEMPN7+1
  87CA   4C   7C   87 		JMP TCBKX
  87CD   A0   03      	TCBKXE:	LDY #$03	;(SF_XFRAME = 2.)
  87CF   B1   BC      		LDA (TEMPX1),Y
  87D1   85   BF      		STA TEMPX2+1
  87D3   88           		DEY
  87D4   B1   BC      		LDA (TEMPX1),Y
  87D6   85   BE      		STA TEMPX2	;(GETBAR)
  87D8   88           		DEY		;(SF_PREV_FRAME = 0)
  87D9   B1   BC      		LDA (TEMPX1),Y
  87DB   AA           		TAX
  87DC   88           		DEY
  87DD   B1   BC      		LDA (TEMPX1),Y
  87DF   85   BC      		STA TEMPX1
  87E1   86   BD      		STX TEMPX1+1	;(GETBAR)
  87E3   4C   5B   87 		JMP TCBKW
  87E6   20   67   72 	TCBKWE:	JSR BREAK1
  87E9   4C   1E   41 		JMP POPJ
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-248
NLOGO	SYSTEM FUNCTIONS

  87EC   A5   62      	SERASE:	LDA TOKPTR+1
  87EE   D0   03      		BNE SERAS1
  87F0   4C   5E   7C 		JMP SCMMT1	;(ERROR XEOL)
  87F3   A0   00      	SERAS1:	LDY #$00
  87F5   B1   61      		LDA (TOKPTR),Y
  87F7   85   A2      		STA ARG1
  87F9   C8           		INY
  87FA   B1   61      		LDA (TOKPTR),Y
  87FC   85   A3      		STA ARG1+1	;(GETTOK)
  87FE   A2   61      		LDX #TOKPTR
  8800   20   70   55 		JSR TTKADV
  8803   A5   08      		LDA EDSW
  8805   D0   59      		BNE SERASB
  8807   A6   A2      		LDX ARG1
  8809   A4   A3      		LDY ARG1+1
  880B   EC   00   03 		CPX ALL
  880E   D0   0B      		BNE ECMP2
  8810   CC   01   03 		CPY ALL+1
  8813   D0   06      		BNE ECMP2
  8815   20   69   4F 		JSR REINIT
  8818   4C   65   40 		JMP TOPLOP
  881B   EC   16   03 	ECMP2:	CPX NAMES
  881E   D0   0B      		BNE ECMP3
  8820   CC   17   03 		CPY NAMES+1
  8823   D0   06      		BNE ECMP3
  8825   20   AD   88 		JSR ERNAMS
  8828   4C   1E   41 		JMP POPJ
  882B   EC   24   03 	ECMP3:	CPX TITLES
  882E   D0   05      		BNE ECMP4
  8830   CC   25   03 		CPY TITLES+1
  8833   F0   0A      		BEQ SERPS
  8835   EC   1E   03 	ECMP4:	CPX PROCS
  8838   D0   0B      		BNE SERAP
  883A   CC   1F   03 		CPY PROCS+1
  883D   D0   06      		BNE SERAP
  883F   20   82   88 	SERPS:	JSR ERPROS
  8842   4C   1E   41 		JMP POPJ
  8845   A2   A2      	SERAP:	LDX #ARG1
  8847   20   7F   5D 		JSR GETTYP
  884A   C9   01      		CMP #ATOM
  884C   D0   08      		BNE SERAR1
  884E   A2   A2      		LDX #ARG1
  8850   20   6E   56 		JSR UNFUNC
  8853   4C   1E   41 		JMP POPJ
  8856   C9   03      	SERAR1:	CMP #FIX
  8858   D0   03      		BNE SERAR2
  885A   4C   E4   7E 		JMP STTLR1	;(ERROR XNED)
  885D   4C   21   7C 	SERAR2:	JMP SMAKE2	;(ERROR XWTA,ARG1,CURTOK)
  8860   A2   A2      	SERASB:	LDX #ARG1
  8862   20   7F   5D 		JSR GETTYP
  8865   C9   03      		CMP #FIX
  8867   D0   14      		BNE SERAR3
  8869   A0   00      		LDY #$00
  886B   B1   A2      		LDA (ARG1),Y
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-249
NLOGO	SYSTEM FUNCTIONS

  886D   AA           		TAX
  886E   C8           		INY
  886F   B1   A2      		LDA (ARG1),Y
  8871   85   A3      		STA ARG1+1
  8873   86   A2      		STX ARG1	;(CAR)
  8875   A2   A2      		LDX #ARG1
  8877   20   D2   56 		JSR LDELET
  887A   4C   1E   41 		JMP POPJ
  887D   A9   1D      	SERAR3:	LDA #XNWE
  887F   4C   42   61 		JMP ERROR
                      
  8882   A5   92      	ERPROS:	LDA OBLIST
  8884   85   A8      		STA TEMPN
  8886   A5   93      		LDA OBLIST+1
  8888   85   A9      		STA TEMPN+1
  888A   A5   A9      	ERPRSW:	LDA TEMPN+1
  888C   F0   1E      		BEQ RTS30
  888E   A0   00      		LDY #$00
  8890   B1   A8      		LDA (TEMPN),Y
  8892   85   AA      		STA TEMPN1
  8894   C8           		INY
  8895   B1   A8      		LDA (TEMPN),Y
  8897   85   AB      		STA TEMPN1+1	;(CAR)
  8899   C8           		INY
  889A   B1   A8      		LDA (TEMPN),Y
  889C   AA           		TAX
  889D   C8           		INY
  889E   B1   A8      		LDA (TEMPN),Y
  88A0   85   A9      		STA TEMPN+1
  88A2   86   A8      		STX TEMPN	;(CDR)
  88A4   A2   AA      		LDX #TEMPN1
  88A6   20   6E   56 		JSR UNFUNC
  88A9   4C   8A   88 		JMP ERPRSW
  88AC   60           	RTS30:	RTS
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-250
NLOGO	SYSTEM FUNCTIONS

  88AD   A5   92      	ERNAMS:	LDA OBLIST
  88AF   85   A8      		STA TEMPN
  88B1   A5   93      		LDA OBLIST+1
  88B3   85   A9      		STA TEMPN+1	;TEMPN is OBLIST pointer
  88B5   A2   00      		LDX #$00
  88B7   86   AB      		STX TEMPN1+1	;TEMPN1 is NOVALUE
  88B9   E8           		INX
  88BA   86   AA      		STX TEMPN1
  88BC   A5   A9      	ERNMSW:	LDA TEMPN+1
  88BE   F0   20      		BEQ ERNMWE
  88C0   A0   00      		LDY #$00
  88C2   B1   A8      		LDA (TEMPN),Y
  88C4   85   AC      		STA TEMPN2	;TEMPN2 is NAME
  88C6   C8           		INY
  88C7   B1   A8      		LDA (TEMPN),Y
  88C9   85   AD      		STA TEMPN2+1	;(CAR)
  88CB   C8           		INY
  88CC   B1   A8      		LDA (TEMPN),Y
  88CE   AA           		TAX
  88CF   C8           		INY
  88D0   B1   A8      		LDA (TEMPN),Y
  88D2   85   A9      		STA TEMPN+1
  88D4   86   A8      		STX TEMPN	;(CDR)
  88D6   A2   AA      		LDX #TEMPN1
  88D8   A0   AC      		LDY #TEMPN2
  88DA   20   E4   52 		JSR PUTVAL
  88DD   4C   BC   88 		JMP ERNMSW
  88E0   A5   59      	ERNMWE:	LDA SOBLST
  88E2   85   A8      		STA TEMPN
  88E4   A5   5A      		LDA SOBLST+1
  88E6   85   A9      		STA TEMPN+1
  88E8   A5   A8      	ERNMX:	LDA TEMPN
  88EA   C5   5B      		CMP SOBTOP
  88EC   D0   06      		BNE ERNMX1
  88EE   A5   A9      		LDA TEMPN+1
  88F0   C5   5C      		CMP SOBTOP+1
  88F2   F0   B8      		BEQ RTS30
  88F4   A2   AA      	ERNMX1:	LDX #TEMPN1
  88F6   A0   A8      		LDY #TEMPN
  88F8   20   E4   52 		JSR PUTVAL
  88FB   18           		CLC
  88FC   A5   A8      		LDA TEMPN
  88FE   69   04      		ADC #$04
  8900   85   A8      		STA TEMPN
  8902   90   E4      		BCC ERNMX
  8904   E6   A9      		INC TEMPN+1
  8906   4C   E8   88 		JMP ERNMX
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-251
NLOGO	SYSTEM FUNCTIONS

  8909   A2   A2      	SBTFST:	LDX #ARG1
  890B   20   80   52 		JSR VPOP
  890E   20   7F   5D 		JSR GETTYP
  8911   C9   00      		CMP #LIST
  8913   F0   13      		BEQ SBFL
  8915   C9   07      		CMP #SATOM
  8917   F0   22      		BEQ SBFA
  8919   C9   01      		CMP #ATOM
  891B   F0   1E      		BEQ SBFA
  891D   C9   03      		CMP #FIX
  891F   F0   1A      		BEQ SBFA
  8921   C9   04      		CMP #FLO
  8923   F0   16      		BEQ SBFA
  8925   4C   21   7C 	SBFR:	JMP SMAKE2	;(ERROR XWTA,ARG1,CURTOK)
  8928   A5   A3      	SBFL:	LDA ARG1+1
  892A   F0   F9      		BEQ SBFR
  892C   A0   02      		LDY #$02
  892E   B1   A2      		LDA (ARG1),Y
  8930   AA           		TAX
  8931   C8           		INY
  8932   B1   A2      		LDA (ARG1),Y
  8934   85   A3      		STA ARG1+1
  8936   86   A2      		STX ARG1	;(CDR)
  8938   4C   1F   7E 		JMP OTPRG1
  893B   A2   A2      	SBFA:	LDX #ARG1
  893D   A0   9E      		LDY #ARG2	;ARG2 is OLD_PTR
  893F   20   75   65 		JSR MAKPNM
  8942   A2   9E      		LDX #ARG2
  8944   20   4E   52 		JSR VPUSHP
  8947   A0   00      		LDY #$00
  8949   84   B3      		STY ANSN1
  894B   B1   9E      		LDA (ARG2),Y
  894D   85   AA      		STA TEMPN1	;TEMPN1 is OLD_CAR
  894F   C8           		INY
  8950   B1   9E      		LDA (ARG2),Y
  8952   85   AB      		STA TEMPN1+1	;(CAR)
  8954   D0   08      		BNE SBFA1A
  8956   A5   AA      		LDA TEMPN1
  8958   F0   CB      		BEQ SBFR
  895A   A5   AB      	SBFA1:	LDA TEMPN1+1
  895C   F0   32      		BEQ SBFB
  895E   A2   00      	SBFA1A:	LDX #$00
  8960   A5   AB      		LDA TEMPN1+1
  8962   85   AA      		STA TEMPN1
  8964   86   AB      		STX TEMPN1+1
  8966   A0   AA      		LDY #TEMPN1
  8968   A9   AC      		LDA #TEMPN2
  896A   85   B2      		STA ANSN
  896C   8A           		TXA		;(LIST)
  896D   20   0F   53 		JSR CONS
  8970   A5   B3      		LDA ANSN1
  8972   D0   09      		BNE SBFC
  8974   A2   AC      		LDX #TEMPN2
  8976   20   4E   52 		JSR VPUSHP
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-252
NLOGO	SYSTEM FUNCTIONS

  8979   E6   B3      		INC ANSN1	;BEG_OF_PNAME
  897B   D0   0B      		BNE SBFC1	;(Always)
  897D   A0   02      	SBFC:	LDY #$02
  897F   A5   AC      		LDA TEMPN2
  8981   91   A8      		STA (TEMPN),Y	;TEMPN is NEW_PTR
  8983   C8           		INY
  8984   A5   AD      		LDA TEMPN2+1
  8986   91   A8      		STA (TEMPN),Y	;(RPLACD)
  8988   A5   AC      	SBFC1:	LDA TEMPN2
  898A   85   A8      		STA TEMPN
  898C   A5   AD      		LDA TEMPN2+1
  898E   85   A9      		STA TEMPN+1
  8990   A0   02      	SBFB:	LDY #$02
  8992   B1   9E      		LDA (ARG2),Y
  8994   AA           		TAX
  8995   C8           		INY
  8996   B1   9E      		LDA (ARG2),Y
  8998   86   9E      		STX ARG2
  899A   85   9F      		STA ARG2+1	;(CDR)
  899C   F0   1A      		BEQ SBFD
  899E   A5   AA      	SBFB1:	LDA TEMPN1
  89A0   AA           		TAX
  89A1   A0   00      		LDY #$00
  89A3   B1   9E      		LDA (ARG2),Y
  89A5   85   AA      		STA TEMPN1	;(OLD_CAR)
  89A7   C8           		INY
  89A8   B1   9E      		LDA (ARG2),Y
  89AA   85   AB      		STA TEMPN1+1	;(CAR)
  89AC   88           		DEY
  89AD   8A           		TXA
  89AE   91   A8      		STA (TEMPN),Y
  89B0   C8           		INY
  89B1   A5   AA      		LDA TEMPN1
  89B3   91   A8      		STA (TEMPN),Y
  89B5   4C   5A   89 		JMP SBFA1
  89B8   A2   9E      	SBFD:	LDX #ARG2
  89BA   20   80   52 		JSR VPOP
  89BD   A5   B3      		LDA ANSN1
  89BF   D0   08      		BNE SBFD1
  89C1   A9   00      		LDA #$00
  89C3   85   9E      		STA ARG2
  89C5   85   9F      		STA ARG2+1
  89C7   F0   05      		BEQ SBFD2	;(Always)
  89C9   A2   A2      	SBFD1:	LDX #ARG1	;(OLD_CAR, discard)
  89CB   20   80   52 		JSR VPOP
  89CE   A2   9E      	SBFD2:	LDX #ARG2
  89D0   A0   A2      		LDY #ARG1
  89D2   20   F9   5F 		JSR INTERN
  89D5   4C   1F   7E 		JMP OTPRG1
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-253
NLOGO	SYSTEM FUNCTIONS

  89D8   20   5D   58 	SPEEK:	JSR GT1FIX
  89DB   A0   00      		LDY #$00
  89DD   B1   A2      		LDA (NARG1),Y
  89DF   85   A2      		STA NARG1
  89E1   84   A3      		STY NARG1+1
  89E3   A0   A2      		LDY #NARG1
  89E5   4C   9D   57 		JMP OTPFX1
                      
  89E8   20   8A   58 	SPOKE:	JSR GT2FIX	;First argument is location
  89EB   A0   00      		LDY #$00
  89ED   A5   9F      		LDA NARG2+1
  89EF   D0   07      		BNE SPKERR
  89F1   A5   9E      		LDA NARG2
  89F3   91   A2      		STA (NARG1),Y
  89F5   4C   1E   41 		JMP POPJ
  89F8   4C   90   7A 	SPKERR:	JMP SFPT1	;Error, ARG2 too big
                      
  89FB   A9   00      	SRANDM:	LDA #$00
  89FD   85   A7      		STA TEMPNH+1
  89FF   85   A9      		STA TEMPN+1
  8A01   A9   91      		LDA #RANDA	;Multiply 8-bit Random number by
  8A03   85   A6      		STA TEMPNH	;transform constant "A"
  8A05   A0   08      		LDY #$08
  8A07   46   52      	RMUL2:	LSR RANDOM
  8A09   90   07      		BCC RMUL4
  8A0B   18           		CLC
  8A0C   A5   A7      	RMUL3:	LDA TEMPNH+1
  8A0E   65   A6      		ADC TEMPNH
  8A10   85   A7      		STA TEMPNH+1
  8A12   06   A6      	RMUL4:	ASL TEMPNH
  8A14   88           		DEY
  8A15   D0   F0      		BNE RMUL2
  8A17   18           		CLC
  8A18   A5   A7      		LDA TEMPNH+1
  8A1A   69   2B      		ADC #RANDC	;Add transform constant "C"
  8A1C   85   52      		STA RANDOM
  8A1E   C9   0A      	RNDLP1:	CMP #$0A	;Get a digit modulo 10.
  8A20   90   04      		BCC RNDM1
  8A22   E9   0A      		SBC #$0A
  8A24   B0   F8      		BCS RNDLP1	;(Always)
  8A26   85   A8      	RNDM1:	STA TEMPN
  8A28   A0   A8      		LDY #TEMPN
  8A2A   4C   9D   57 		JMP OTPFX1
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-254
NLOGO	SYSTEM FUNCTIONS

  8A2D   A5   4A      	SRNDMZ:	LDA RNDL
  8A2F   85   52      		STA RANDOM
  8A31   4C   1E   41 		JMP POPJ
                      
  8A34   A9   00      	SCTYI:	LDA #$00
  8A36   85   A9      		STA TEMPN+1
  8A38   20   7E   72 		JSR GTBUF
  8A3B   85   A8      		STA TEMPN
  8A3D   A9   9E      		LDA #ARG2
  8A3F   85   B2      		STA ANSN
  8A41   A0   A8      		LDY #TEMPN
  8A43   A2   00      		LDX #$00
  8A45   A9   02      		LDA #STRING	;(String typecode)
  8A47   20   0F   53 		JSR CONS	;Cons a cell with the character in it
  8A4A   A2   9E      		LDX #ARG2
  8A4C   A0   A2      		LDY #ARG1
  8A4E   20   F9   5F 		JSR INTERN	;Intern the character
  8A51   4C   1F   7E 		JMP OTPRG1	;And output it
                      
  8A54   20   8A   58 	SCURSR:	JSR GT2FIX
  8A57   A5   A3      		LDA NARG1+1	;Horizontal position 0 - 39.
  8A59   D0   1E      		BNE SCRSR1
  8A5B   A5   A2      		LDA NARG1
  8A5D   C9   29      		CMP #$29
  8A5F   B0   18      		BCS SCRSR1
  8A61   A5   9F      		LDA NARG2+1	;Vertical position 0 - 23.
  8A63   D0   14      		BNE SCRSR1
  8A65   A5   9E      		LDA NARG2
  8A67   C9   19      		CMP #$19
  8A69   B0   0E      		BCS SCRSR1
  8A6B   A5   A2      		LDA NARG1
  8A6D   85   24      		STA CH
  8A6F   A5   9E      		LDA NARG2
  8A71   85   25      		STA CV
  8A73   20   81   75 		JSR BCALCA
  8A76   4C   1E   41 		JMP POPJ
  8A79   A9   22      	SCRSR1:	LDA #XCRSR	;"Position off of screen"
  8A7B   4C   42   61 		JMP ERROR
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-255
NLOGO	SYSTEM FUNCTIONS

       8A89           	SCALLR	=SCALL1-1
                      
  8A7E   20   5D   58 	SCALL:	JSR GT1FIX
  8A81   A9   8A      		LDA #SCALLR^
  8A83   48           		PHA		;Push return address for RTS
  8A84   A9   89      		LDA #SCALLR&$FF
  8A86   48           		PHA
  8A87   6C   A2   00 		JMP (NARG1)
  8A8A   4C   1E   41 	SCALL1:	JMP POPJ
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-256
NLOGO	SYSTEM FUNCTIONS

  8A8D   A5   05      	SWORD:	LDA NARGS
  8A8F   10   04      		BPL SWRD1
  8A91   49   FF      		EOR #$FF
  8A93   85   05      		STA NARGS
  8A95   A9   00      	SWRD1:	LDA #$00
  8A97   85   90      		STA MARK5
  8A99   85   91      		STA MARK5+1
  8A9B   A5   05      		LDA NARGS
  8A9D   0A           		ASL A
  8A9E   85   C2      		STA ANSNX
  8AA0   18           		CLC
  8AA1   A5   16      		LDA VSP
  8AA3   65   C2      		ADC ANSNX
  8AA5   85   B6      		STA TEMPN6
  8AA7   A5   17      		LDA VSP+1
  8AA9   69   00      		ADC #$00
  8AAB   85   B7      		STA TEMPN6+1
  8AAD   A5   05      	SWRDW:	LDA NARGS
  8AAF   F0   29      		BEQ SWRD2
  8AB1   A0   00      		LDY #$00
  8AB3   B1   B6      		LDA (TEMPN6),Y
  8AB5   85   8C      		STA MARK3
  8AB7   C8           		INY
  8AB8   B1   B6      		LDA (TEMPN6),Y
  8ABA   85   8D      		STA MARK3+1
  8ABC   38           		SEC
  8ABD   A5   B6      		LDA TEMPN6
  8ABF   E9   02      		SBC #$02
  8AC1   85   B6      		STA TEMPN6
  8AC3   B0   02      		BCS SWRDW1
  8AC5   C6   B6      		DEC TEMPN6
  8AC7   C6   05      	SWRDW1:	DEC NARGS
  8AC9   A0   8E      		LDY #MARK4
  8ACB   A2   8C      		LDX #MARK3
  8ACD   20   75   65 		JSR MAKPNM
  8AD0   A5   8F      		LDA MARK4+1
  8AD2   F0   D9      		BEQ SWRDW
  8AD4   20   F4   8A 		JSR CONCAT	;MARK5 := (Concatenate MARK5 MARK4)
  8AD7   4C   AD   8A 		JMP SWRDW
  8ADA   18           	SWRD2:	CLC
  8ADB   A5   16      		LDA VSP
  8ADD   65   C2      		ADC ANSNX
  8ADF   85   16      		STA VSP
  8AE1   90   02      		BCC SWRD3
  8AE3   E6   17      		INC VSP+1
  8AE5   A2   90      	SWRD3:	LDX #MARK5
  8AE7   A0   A2      		LDY #ARG1
  8AE9   20   F9   5F 		JSR INTERN
  8AEC   A9   00      		LDA #$00
  8AEE   20   1E   51 		JSR CLMK5
  8AF1   4C   1F   7E 		JMP OTPRG1
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-257
NLOGO	SYSTEM FUNCTIONS

  8AF4   A5   91      	CONCAT:	LDA MARK5+1
  8AF6   D0   09      		BNE CNCT1
  8AF8   A5   8E      		LDA MARK4	;MARK5 is Lnil, so make
  8AFA   A6   8F      		LDX MARK4+1	;MARK5 a copy of second word and return
  8AFC   A0   90      		LDY #MARK5
  8AFE   4C   93   8B 		JMP COPY
  8B01   A5   90      	CNCT1:	LDA MARK5
  8B03   A6   91      		LDX MARK5+1
  8B05   A0   AE      		LDY #TEMPN3	;Make TEMPN3 a copy of MARK5
  8B07   20   93   8B 		JSR COPY
  8B0A   A5   AE      		LDA TEMPN3
  8B0C   85   B0      		STA TEMPN4	;Save the first word's pointer in TEMPN4
  8B0E   A5   AF      		LDA TEMPN3+1
  8B10   85   B1      		STA TEMPN4+1
  8B12   A2   AE      		LDX #TEMPN3	;Get the last cell of first word (TEMPN3)
  8B14   20   45   7A 		JSR GTLSTC
  8B17   A0   01      		LDY #$01
  8B19   B1   AE      		LDA (TEMPN3),Y
  8B1B   F0   1D      		BEQ CNCODD
  8B1D   A5   8E      		LDA MARK4	;Even no. chars. in first word
  8B1F   A6   8F      		LDX MARK4+1
  8B21   A0   B4      		LDY #TEMPN5	;Make TEMPN5 a copy of second word
  8B23   20   93   8B 		JSR COPY
  8B26   A0   02      		LDY #$02
  8B28   A5   B4      		LDA TEMPN5
  8B2A   91   AE      		STA (TEMPN3),Y	;Link second word onto first
  8B2C   C8           		INY
  8B2D   A5   B5      		LDA TEMPN5+1
  8B2F   91   AE      		STA (TEMPN3),Y
  8B31   A5   B0      	CNCTWE:	LDA TEMPN4	;Restore pointer to new word
  8B33   85   90      		STA MARK5
  8B35   A5   B1      		LDA TEMPN4+1
  8B37   85   91      		STA MARK5+1
  8B39   60           		RTS
  8B3A   A0   00      	CNCODD:	LDY #$00	;Odd no. chars. in first word
  8B3C   84   AB      		STY TEMPN1+1
  8B3E   B1   8E      		LDA (MARK4),Y	;Get first char. of second word
  8B40   C8           		INY
  8B41   91   AE      		STA (TEMPN3),Y	;Append it to end of first word
  8B43   B1   8E      		LDA (MARK4),Y
  8B45   85   AA      		STA TEMPN1	;TEMPN1 holds second char. of second word
  8B47   A5   8F      	CNCTW:	LDA MARK4+1
  8B49   F0   E6      		BEQ CNCTWE
  8B4B   A0   02      		LDY #$02
  8B4D   B1   8E      		LDA (MARK4),Y
  8B4F   AA           		TAX
  8B50   C8           		INY
  8B51   B1   8E      		LDA (MARK4),Y
  8B53   85   8F      		STA MARK4+1	;Advance second word char-ptr
  8B55   86   8E      		STX MARK4
  8B57   A5   AA      		LDA TEMPN1	;If even-numbered char. of second word nil, exit
  8B59   F0   D6      		BEQ CNCTWE	;(already appended odd-numbered char. preceeding)
  8B5B   A5   8F      		LDA MARK4+1
  8B5D   D0   04      		BNE CNCTW1
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-258
NLOGO	SYSTEM FUNCTIONS

  8B5F   85   AB      		STA TEMPN1+1	;Zero last character (because odd no.)
  8B61   F0   0B      		BEQ CNCTW2	;(Always) Just add last char. if end of second word
  8B63   A0   00      	CNCTW1:	LDY #$00
  8B65   B1   8E      		LDA (MARK4),Y
  8B67   85   AB      		STA TEMPN1+1	;Get odd-numbered (3,5,...) char.
  8B69   C8           		INY
  8B6A   B1   8E      		LDA (MARK4),Y
  8B6C   85   B3      		STA ANSN1	;Get next even-numbered (4,6,...) char.
  8B6E   A9   A8      	CNCTW2:	LDA #TEMPN
  8B70   85   B2      		STA ANSN
  8B72   A0   AA      		LDY #TEMPN1
  8B74   A9   00      		LDA #$00
  8B76   AA           		TAX
  8B77   A9   02      		LDA #STRING
  8B79   20   0F   53 		JSR CONS	;Cons new cell
  8B7C   A0   02      		LDY #$02
  8B7E   A5   A8      		LDA TEMPN
  8B80   91   AE      		STA (TEMPN3),Y
  8B82   AA           		TAX
  8B83   C8           		INY
  8B84   A5   A9      		LDA TEMPN+1
  8B86   91   AE      		STA (TEMPN3),Y	;Append to new word
  8B88   85   AF      		STA TEMPN3+1
  8B8A   86   AE      		STX TEMPN3	;New new-word end pointer
  8B8C   A5   B3      		LDA ANSN1
  8B8E   85   AA      		STA TEMPN1	;Last even char. becomes new odd char.
  8B90   4C   47   8B 		JMP CNCTW
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-259
NLOGO	SYSTEM FUNCTIONS

  8B93   84   B3      	COPY:	STY ANSN1	;Y is STR1
  8B95   85   AA      		STA TEMPN1	;Make (ANSN1) point to a copy of (vXA)
  8B97   86   AB      		STX TEMPN1+1
  8B99   8A           		TXA
  8B9A   D0   07      		BNE COPY1
  8B9C   99   00   00 		STA $00,Y	;If (vAX) is Lnil, make (ANSN1) Lnil
  8B9F   99   00   00 		STA $00,Y
  8BA2   60           		RTS
  8BA3   84   B2      	COPY1:	STY ANSN	;Cons up an empty cell
  8BA5   A9   00      		LDA #$00
  8BA7   AA           		TAX
  8BA8   A8           		TAY
  8BA9   A9   02      		LDA #STRING
  8BAB   20   0F   53 		JSR CONS
  8BAE   A6   B3      		LDX ANSN1
  8BB0   20   4E   52 		JSR VPUSHP	;Vpush forming string
  8BB3   A6   B3      	COPYW:	LDX ANSN1
  8BB5   B5   00      		LDA $00,X
  8BB7   85   AC      		STA TEMPN2
  8BB9   B5   01      		LDA $01,X
  8BBB   85   AD      		STA TEMPN2+1	;TEMPN2 points to empty last cell of copy
  8BBD   A0   00      		LDY #$00
  8BBF   B1   AA      		LDA (TEMPN1),Y
  8BC1   91   AC      		STA (TEMPN2),Y	;Copy two characters into cell
  8BC3   C8           		INY
  8BC4   B1   AA      		LDA (TEMPN1),Y
  8BC6   91   AC      		STA (TEMPN2),Y
  8BC8   C8           		INY
  8BC9   B1   AA      		LDA (TEMPN1),Y
  8BCB   AA           		TAX
  8BCC   C8           		INY
  8BCD   B1   AA      		LDA (TEMPN1),Y
  8BCF   85   AB      		STA TEMPN1+1	;Advance char-ptr of original
  8BD1   86   AA      		STX TEMPN1
  8BD3   AA           		TAX
  8BD4   F0   21      		BEQ COPYWE	;Exit if end of original
  8BD6   A9   A8      		LDA #TEMPN
  8BD8   85   B2      		STA ANSN
  8BDA   A9   00      		LDA #$00
  8BDC   AA           		TAX
  8BDD   A8           		TAY
  8BDE   A9   02      		LDA #STRING
  8BE0   20   0F   53 		JSR CONS	;Cons a new cell
  8BE3   A0   02      		LDY #$02
  8BE5   A6   B3      		LDX ANSN1
  8BE7   A5   A8      		LDA TEMPN
  8BE9   91   AC      		STA (TEMPN2),Y
  8BEB   95   00      		STA $00,X
  8BED   C8           		INY
  8BEE   A5   A9      		LDA TEMPN+1
  8BF0   91   AC      		STA (TEMPN2),Y	;Link new cell on to end of copy
  8BF2   95   01      		STA $01,X	;Advance copy's last-cell ptr
  8BF4   4C   B3   8B 		JMP COPYW
  8BF7   A6   B3      	COPYWE:	LDX ANSN1	;Vpop copy's beginning pointer
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-260
NLOGO	SYSTEM FUNCTIONS

  8BF9   4C   80   52 		JMP VPOP
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-261
NLOGO	SYSTEM FUNCTIONS

  8BFC   A2   A2      	SBTLST:	LDX #ARG1
  8BFE   20   80   52 		JSR VPOP
  8C01   20   7F   5D 		JSR GETTYP
  8C04   C9   00      		CMP #LIST
  8C06   F0   2F      		BEQ BTLSTL
  8C08   C9   01      		CMP #ATOM
  8C0A   F0   0F      		BEQ BTLSTA
  8C0C   C9   07      		CMP #SATOM
  8C0E   F0   0B      		BEQ BTLSTA
  8C10   C9   03      		CMP #FIX
  8C12   F0   07      		BEQ BTLSTA
  8C14   C9   04      		CMP #FLO
  8C16   F0   03      		BEQ BTLSTA
  8C18   4C   21   7C 	BTLSTR:	JMP SMAKE2
  8C1B   A0   B4      	BTLSTA:	LDY #TEMPN5
  8C1D   A2   A2      		LDX #ARG1
  8C1F   20   75   65 		JSR MAKPNM
  8C22   A9   01      		LDA #ATOM
  8C24   85   C0      		STA ANSN2
  8C26   A0   00      		LDY #$00
  8C28   B1   B4      		LDA (TEMPN5),Y
  8C2A   F0   EC      		BEQ BTLSTR
  8C2C   A5   B4      		LDA TEMPN5
  8C2E   85   A2      		STA ARG1
  8C30   A5   B5      		LDA TEMPN5+1
  8C32   85   A3      		STA ARG1+1
  8C34   4C   3D   8C 		JMP BTLSTX
  8C37   85   C0      	BTLSTL:	STA ANSN2
  8C39   A5   A3      		LDA ARG1+1
  8C3B   F0   DB      		BEQ BTLSTR
  8C3D   A9   00      	BTLSTX:	LDA #$00
  8C3F   85   B3      		STA ANSN1	;NEW_LIST
  8C41   A2   A2      		LDX #ARG1
  8C43   20   4E   52 		JSR VPUSHP
  8C46   A0   03      	BTLSW:	LDY #$03
  8C48   B1   A2      		LDA (ARG1),Y
  8C4A   F0   54      		BEQ BTLSWE
  8C4C   A0   00      		LDY #$00
  8C4E   B1   A2      		LDA (ARG1),Y
  8C50   85   AA      		STA TEMPN1	;TEMP_CAR
  8C52   C8           		INY
  8C53   B1   A2      		LDA (ARG1),Y
  8C55   85   AB      		STA TEMPN1+1
  8C57   A9   A8      		LDA #TEMPN	;TEMP
  8C59   85   B2      		STA ANSN
  8C5B   A0   AA      		LDY #TEMPN1
  8C5D   A9   00      		LDA #$00
  8C5F   AA           		TAX
  8C60   20   0F   53 		JSR CONS
  8C63   A5   C0      		LDA ANSN2
  8C65   C9   01      		CMP #ATOM
  8C67   D0   07      		BNE BTLSW1
  8C69   A2   A8      		LDX #TEMPN
  8C6B   A9   02      		LDA #STRING
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-262
NLOGO	SYSTEM FUNCTIONS

  8C6D   20   EB   53 		JSR PUTTYP
  8C70   A5   B3      	BTLSW1:	LDA ANSN1
  8C72   D0   0D      		BNE BTLSW2
  8C74   A2   A8      		LDX #TEMPN
  8C76   20   4E   52 		JSR VPUSHP
  8C79   A6   A8      		LDX TEMPN
  8C7B   A5   A9      		LDA TEMPN+1
  8C7D   E6   B3      		INC ANSN1
  8C7F   D0   0C      		BNE BTLSW3	;(Always)
  8C81   A0   02      	BTLSW2:	LDY #$02
  8C83   A5   A8      		LDA TEMPN
  8C85   91   AC      		STA (TEMPN2),Y
  8C87   AA           		TAX
  8C88   C8           		INY
  8C89   A5   A9      		LDA TEMPN+1
  8C8B   91   AC      		STA (TEMPN2),Y
  8C8D   85   AD      	BTLSW3:	STA TEMPN2+1
  8C8F   86   AC      		STX TEMPN2
  8C91   A0   02      		LDY #$02
  8C93   B1   A2      		LDA (ARG1),Y
  8C95   AA           		TAX
  8C96   C8           		INY
  8C97   B1   A2      		LDA (ARG1),Y
  8C99   85   A3      		STA ARG1+1
  8C9B   86   A2      		STX ARG1
  8C9D   4C   46   8C 		JMP BTLSW
  8CA0   A5   C0      	BTLSWE:	LDA ANSN2
  8CA2   C9   00      		CMP #LIST
  8CA4   D0   19      		BNE BTLWE1
  8CA6   A5   B3      		LDA ANSN1
  8CA8   D0   08      		BNE BTLWL1
  8CAA   A9   00      		LDA #$00
  8CAC   85   A2      		STA ARG1
  8CAE   85   A3      		STA ARG1+1
  8CB0   F0   05      		BEQ BTLWL2	;(Always)
  8CB2   A2   A2      	BTLWL1:	LDX #ARG1
  8CB4   20   80   52 		JSR VPOP
  8CB7   A2   AA      	BTLWL2:	LDX #TEMPN1
  8CB9   20   80   52 		JSR VPOP
  8CBC   4C   1F   7E 		JMP OTPRG1
  8CBF   A0   00      	BTLWE1:	LDY #$00
  8CC1   B1   A2      		LDA (ARG1),Y
  8CC3   85   AA      		STA TEMPN1
  8CC5   C8           		INY
  8CC6   B1   A2      		LDA (ARG1),Y
  8CC8   85   AB      		STA TEMPN1+1
  8CCA   F0   2B      		BEQ BTLWE2
  8CCC   A9   A8      		LDA #TEMPN
  8CCE   85   B2      		STA ANSN
  8CD0   A9   00      		LDA #$00
  8CD2   AA           		TAX
  8CD3   85   AB      		STA TEMPN1+1
  8CD5   A0   AA      		LDY #TEMPN1
  8CD7   20   0F   53 		JSR CONS
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-263
NLOGO	SYSTEM FUNCTIONS

  8CDA   A5   B3      		LDA ANSN1
  8CDC   D0   0B      		BNE BTLWE3
  8CDE   A5   A8      		LDA TEMPN
  8CE0   85   A2      		STA ARG1
  8CE2   A5   A9      		LDA TEMPN+1
  8CE4   85   A3      		STA ARG1+1
  8CE6   4C   08   8D 		JMP BTLWE5
  8CE9   A0   02      	BTLWE3:	LDY #$02
  8CEB   A5   A8      		LDA TEMPN
  8CED   91   AC      		STA (TEMPN2),Y
  8CEF   C8           		INY
  8CF0   A5   A9      		LDA TEMPN+1
  8CF2   91   AC      		STA (TEMPN2),Y
  8CF4   4C   03   8D 		JMP BTLWE4
  8CF7   A5   B3      	BTLWE2:	LDA ANSN1
  8CF9   D0   08      		BNE BTLWE4
  8CFB   A9   00      		LDA #$00
  8CFD   85   A2      		STA ARG1
  8CFF   85   A3      		STA ARG1+1
  8D01   F0   05      		BEQ BTLWE5	;(Always)
  8D03   A2   A2      	BTLWE4:	LDX #ARG1
  8D05   20   80   52 		JSR VPOP
  8D08   A2   A8      	BTLWE5:	LDX #TEMPN
  8D0A   20   80   52 		JSR VPOP
  8D0D   A0   9E      		LDY #ARG2
  8D0F   A2   A2      		LDX #ARG1
  8D11   20   F9   5F 		JSR INTERN
  8D14   A2   9E      		LDX #ARG2
  8D16   20   4E   52 		JSR VPUSHP
  8D19   E6   07      		INC OTPUTN
  8D1B   4C   1E   41 		JMP POPJ
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-264
NLOGO	SYSTEM FUNCTIONS

  8D1E   A2   A2      	SLISTP:	LDX #ARG1
  8D20   20   80   52 		JSR VPOP
  8D23   20   7F   5D 		JSR GETTYP
  8D26   C9   00      		CMP #LIST
  8D28   D0   1E      		BNE NTLST
  8D2A   4C   31   7A 	YESLST:	JMP VPLTRU
                      
  8D2D   A2   A2      	SNMBRP:	LDX #ARG1
  8D2F   20   80   52 		JSR VPOP
  8D32   20   7F   5D 		JSR GETTYP
  8D35   C9   03      		CMP #FIX
  8D37   F0   F1      		BEQ YESLST
  8D39   C9   04      		CMP #FLO
  8D3B   F0   ED      		BEQ YESLST
  8D3D   C9   01      		CMP #ATOM
  8D3F   D0   07      		BNE NTLST
  8D41   A2   A2      		LDX #ARG1
  8D43   20   02   59 		JSR ATMTFX
  8D46   B0   E2      		BCS YESLST
  8D48   4C   3B   7A 	NTLST:	JMP VPLFLS
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-265
NLOGO	SYSTEM FUNCTIONS

  8D4B   A2   A2      	SEMPTP:	LDX #ARG1
  8D4D   20   80   52 		JSR VPOP
  8D50   20   7F   5D 		JSR GETTYP
  8D53   C9   00      		CMP #LIST
  8D55   F0   16      		BEQ SEMPT1
  8D57   C9   01      		CMP #ATOM
  8D59   D0   ED      		BNE NTLST
  8D5B   A0   02      		LDY #$02
  8D5D   B1   A2      		LDA (ARG1),Y
  8D5F   AA           		TAX
  8D60   C8           		INY
  8D61   B1   A2      		LDA (ARG1),Y
  8D63   85   A3      		STA ARG1+1
  8D65   86   A2      		STX ARG1
  8D67   B1   A2      		LDA (ARG1),Y
  8D69   D0   DD      		BNE NTLST
  8D6B   F0   BD      		BEQ YESLST
  8D6D   A5   A3      	SEMPT1:	LDA ARG1+1
  8D6F   D0   D7      		BNE NTLST
  8D71   F0   B7      		BEQ YESLST
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-266
NLOGO	SYSTEM FUNCTIONS

  8D73   A5   05      	SLIST:	LDA NARGS
  8D75   10   04      		BPL SLIST1
  8D77   49   FF      		EOR #$FF
  8D79   85   05      		STA NARGS
  8D7B   A9   88      	SLIST1:	LDA #MARK1
  8D7D   85   B2      		STA ANSN
  8D7F   A9   00      		LDA #$00
  8D81   85   88      		STA MARK1
  8D83   85   89      		STA MARK1+1
  8D85   A5   05      		LDA NARGS
  8D87   F0   14      		BEQ SLSTWE
  8D89   A2   8A      	SLISTW:	LDX #MARK2
  8D8B   20   80   52 		JSR VPOP
  8D8E   A2   88      		LDX #MARK1
  8D90   86   B2      		STX ANSN
  8D92   A0   8A      		LDY #MARK2
  8D94   A9   00      		LDA #$00	;(Type LIST)
  8D96   20   0F   53 		JSR CONS
  8D99   C6   05      		DEC NARGS
  8D9B   D0   EC      		BNE SLISTW
  8D9D   A5   88      	SLSTWE:	LDA MARK1
  8D9F   85   A2      		STA ARG1
  8DA1   A5   89      		LDA MARK1+1
  8DA3   85   A3      		STA ARG1+1
  8DA5   A9   00      		LDA #$00
  8DA7   20   2A   51 		JSR CLMK2
  8DAA   4C   1F   7E 		JMP OTPRG1
                      
  8DAD   20   79   72 	SCLINP:	JSR CLRCBF	;Clear input buffer and character strobe
  8DB0   4C   1E   41 		JMP POPJ
                      
  8DB3   20   EC   74 	SCLEAR:	JSR HOME
  8DB6   4C   1E   41 		JMP POPJ
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-267
NLOGO	TURTLE-GRAPHICS ROUTINES

                      	.SBTTL	Turtle-Graphics Routines
                      
  8DB9   A5   57      	SCS:	LDA INDEV
  8DBB   D0   3D      		BNE SCS2
  8DBD   A5   09      		LDA GRPHCS
  8DBF   D0   21      		BNE SCS1
  8DC1   A9   00      		LDA #EDBUF&$FF	;Tell RETRIEVE that buffer is not retrievable
  8DC3   85   C7      		STA ENDBUF
  8DC5   A9   20      		LDA #EDBUF^
  8DC7   85   C8      		STA ENDBUF+1
  8DC9   AD   54   C0 		LDA $C054	;INIT Routine, set for primary page
  8DCC   AD   57   C0 		LDA $C057
  8DCF   AD   53   C0 		LDA $C053
  8DD2   AD   50   C0 		LDA $C050
  8DD5   A9   14      		LDA #$14
  8DD7   85   22      		STA WNDTOP	;Set for 4 lines text
  8DD9   20   EC   74 		JSR HOME
  8DDC   E6   09      		INC GRPHCS	;Indicate Graphics mode
  8DDE   A9   7F      		LDA #$7F
  8DE0   85   DF      		STA COLR	;Color is "White1"
  8DE2   A9   01      	SCS1:	LDA #$01
  8DE4   85   C9      		STA PEN
  8DE6   85   CA      		STA TSHOWN	;turtle shown
  8DE8   20   FC   90 		JSR TTLHOM
  8DEB   20   96   94 		JSR GETX
  8DEE   20   A1   94 		JSR GETY
  8DF1   20   78   92 		JSR GPOSN	;Set initial POSN point for future GLINE's
  8DF4   20   59   92 		JSR GCLEAR
  8DF7   20   81   90 		JSR GSHWT1
  8DFA   4C   1E   41 	SCS2:	JMP POPJ
                      
  8DFD   20   87   72 	SNDSPL:	JSR RESETT	;Nodisplay, get the text page back
  8E00   A9   00      		LDA #$00
  8E02   85   09      		STA GRPHCS
  8E04   4C   1E   41 		JMP POPJ
                      
  8E07   20   F1   90 	SPENUP:	JSR GCHK
  8E0A   A9   00      		LDA #$00	;Penup
  8E0C   85   C9      		STA PEN
  8E0E   4C   1E   41 		JMP POPJ
                      
  8E11   20   F1   90 	SPENDN:	JSR GCHK
  8E14   A9   01      		LDA #$01	;Pendown
  8E16   85   C9      		STA PEN
  8E18   4C   1E   41 		JMP POPJ
                      
  8E1B   20   F1   90 	SHOME:	JSR GCHK
  8E1E   20   81   90 		JSR GSHWT1	;Erase turtle if it's there
  8E21   20   FC   90 		JSR TTLHOM
  8E24   20   96   94 		JSR GETX
  8E27   20   A1   94 		JSR GETY
  8E2A   20   70   90 		JSR GDLINE
  8E2D   4C   1E   41 		JMP POPJ
                      
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-268
NLOGO	TURTLE-GRAPHICS ROUTINES

  8E30   20   F1   90 	SXCOR:	JSR GCHK	;Xcor
  8E33   A0   CB      		LDY #XCOR
  8E35   4C   B4   57 		JMP OTPFLO
                      
  8E38   20   F1   90 	SYCOR:	JSR GCHK	;Ycor
  8E3B   A0   CF      		LDY #YCOR
  8E3D   4C   B4   57 		JMP OTPFLO
                      
  8E40   20   F1   90 	SHDING:	JSR GCHK	;Heading
  8E43   A0   D3      		LDY #HEADNG
  8E45   4C   B4   57 		JMP OTPFLO
                      
  8E48   20   F1   90 	SRT:	JSR GCHK
  8E4B   20   81   90 		JSR GSHWT1
  8E4E   A2   A2      		LDX #NARG1	;Right
  8E50   20   80   52 		JSR VPOP
  8E53   20   55   58 		JSR GT1NMX
  8E56   B0   03      		BCS SRT1
  8E58   20   38   69 		JSR FLOTN1
  8E5B   20   64   8E 	SRT1:	JSR SRTX
  8E5E   20   81   90 		JSR GSHWT1	;Show it again if necessary
  8E61   4C   1E   41 		JMP POPJ
                      
  8E64   A0   D3      	SRTX:	LDY #HEADNG
  8E66   20   93   8E 		JSR XYTON2
  8E69   20   A9   69 		JSR FADD
  8E6C   4C   F2   8F 		JMP GSETHX
                      
  8E6F   20   F1   90 	SLT:	JSR GCHK
  8E72   20   81   90 		JSR GSHWT1
  8E75   A2   A2      		LDX #NARG1	;Left
  8E77   20   80   52 		JSR VPOP
  8E7A   20   55   58 		JSR GT1NMX
  8E7D   B0   03      		BCS SLT1
  8E7F   20   38   69 		JSR FLOTN1
  8E82   A0   D3      	SLT1:	LDY #HEADNG
  8E84   20   93   8E 		JSR XYTON2
  8E87   20   B1   69 		JSR FSUBX
  8E8A   20   F2   8F 		JSR GSETHX
  8E8D   20   81   90 		JSR GSHWT1
  8E90   4C   1E   41 		JMP POPJ
                      
  8E93   A2   FC      	XYTON2:	LDX #$FC
  8E95   B9   00   00 	XYN2L:	LDA $00,Y
  8E98   95   A2      		STA NARG2+4,X
  8E9A   C8           		INY
  8E9B   E8           		INX
  8E9C   30   F7      		BMI XYN2L
  8E9E   60           		RTS
                      
  8E9F   A2   FC      	XN2TOY:	LDX #$FC
  8EA1   B5   A2      	XN2YL:	LDA NARG2+4,X
  8EA3   99   00   00 		STA $00,Y
  8EA6   C8           		INY
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-269
NLOGO	TURTLE-GRAPHICS ROUTINES

  8EA7   E8           		INX
  8EA8   30   F7      		BMI XN2YL
  8EAA   60           		RTS
                      
  8EAB   20   F1   90 	STS:	JSR GCHK	;Turtlestate
  8EAE   A9   00      		LDA #$00
  8EB0   85   88      		STA MARK1
  8EB2   85   89      		STA MARK1+1
  8EB4   A5   CA      		LDA TSHOWN
  8EB6   20   F5   8E 		JSR CONSTF
  8EB9   A5   C9      		LDA PEN
  8EBB   20   F5   8E 		JSR CONSTF
  8EBE   A9   D3      		LDA #HEADNG
  8EC0   20   DD   8E 		JSR CONSNM
  8EC3   A9   CF      		LDA #YCOR
  8EC5   20   DD   8E 		JSR CONSNM
  8EC8   A9   CB      		LDA #XCOR
  8ECA   20   DD   8E 		JSR CONSNM
  8ECD   A2   88      		LDX #MARK1
  8ECF   20   4E   52 		JSR VPUSHP
  8ED2   E6   07      		INC OTPUTN
  8ED4   A9   00      		LDA #$00
  8ED6   85   88      		STA MARK1
  8ED8   85   89      		STA MARK1+1
  8EDA   4C   1E   41 		JMP POPJ
                      
  8EDD   AA           	CONSNM:	TAX
  8EDE   A8           		TAY
  8EDF   E8           		INX
  8EE0   E8           		INX
  8EE1   A9   BC      		LDA #TEMPX1
  8EE3   85   B2      		STA ANSN
  8EE5   A9   04      		LDA #FLO
  8EE7   20   0F   53 		JSR CONS	;CONS the number
  8EEA   A0   BC      		LDY #TEMPX1
  8EEC   A2   88      	CNSNM1:	LDX #MARK1
  8EEE   86   B2      		STX ANSN
  8EF0   A9   00      		LDA #LIST
  8EF2   4C   0F   53 		JMP CONS	;CONS the node
                      
  8EF5   D0   04      	CONSTF:	BNE CNSTF1
  8EF7   A0   50      		LDY #LFALSE
  8EF9   D0   F1      		BNE CNSNM1	;(Always)
  8EFB   A0   4E      	CNSTF1:	LDY #LTRUE
  8EFD   D0   ED      		BNE CNSNM1	;(Always)
                      
  8EFF   20   F1   90 	SSETX:	JSR GCHK
  8F02   20   81   90 		JSR GSHWT1
  8F05   A2   A2      		LDX #NARG1	;Setx
  8F07   20   80   52 		JSR VPOP
  8F0A   20   D1   8F 		JSR GSETX
  8F0D   20   A1   94 		JSR GETY
  8F10   20   70   90 		JSR GDLINE
  8F13   4C   1E   41 		JMP POPJ
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-270
NLOGO	TURTLE-GRAPHICS ROUTINES

                      
  8F16   20   F1   90 	SSETY:	JSR GCHK
  8F19   20   81   90 		JSR GSHWT1
  8F1C   A2   A2      		LDX #NARG1	;Sety
  8F1E   20   80   52 		JSR VPOP
  8F21   20   AC   94 		JSR GSAVX
  8F24   20   DF   8F 		JSR GSETY
  8F27   20   96   94 		JSR GETX
  8F2A   20   70   90 		JSR GDLINE
  8F2D   4C   1E   41 		JMP POPJ
                      
  8F30   20   F1   90 	SSETXY:	JSR GCHK
  8F33   20   81   90 		JSR GSHWT1
  8F36   A2   BE      		LDX #TEMPX2
  8F38   20   80   52 		JSR VPOP
  8F3B   A2   A2      		LDX #NARG1
  8F3D   20   80   52 		JSR VPOP
  8F40   20   D1   8F 		JSR GSETX
  8F43   A5   BE      		LDA TEMPX2
  8F45   85   A2      		STA NARG1
  8F47   A5   BF      		LDA TEMPX2+1
  8F49   85   A3      		STA NARG1+1
  8F4B   20   DF   8F 		JSR GSETY
  8F4E   20   70   90 		JSR GDLINE
  8F51   4C   1E   41 		JMP POPJ
                      
  8F54   20   F1   90 	SSETH:	JSR GCHK
  8F57   20   81   90 		JSR GSHWT1
  8F5A   A2   A2      		LDX #NARG1
  8F5C   20   80   52 		JSR VPOP
  8F5F   20   EA   8F 		JSR GSETH
  8F62   20   81   90 		JSR GSHWT1
  8F65   4C   1E   41 		JMP POPJ
                      
  8F68   20   F1   90 	SSETT:	JSR GCHK
  8F6B   20   81   90 		JSR GSHWT1
  8F6E   A2   BE      		LDX #TEMPX2
  8F70   20   80   52 		JSR VPOP	;Setturtle
  8F73   20   7F   5D 		JSR GETTYP
  8F76   C9   00      		CMP #LIST
  8F78   D0   54      		BNE SSETTR
  8F7A   A9   FB      		LDA #$FB	;Index for dispatching
  8F7C   85   C2      		STA ANSNX
  8F7E   A5   BF      	SSETTL:	LDA TEMPX2+1
  8F80   F0   0C      		BEQ SSETTD
  8F82   A5   C2      		LDA ANSNX
  8F84   F0   08      		BEQ SSETTD
  8F86   20   94   8F 		JSR SSTTLL
  8F89   E6   C2      		INC ANSNX
  8F8B   4C   7E   8F 		JMP SSETTL
  8F8E   20   70   90 	SSETTD:	JSR GDLINE
  8F91   4C   1E   41 		JMP POPJ
                      
  8F94   A0   00      	SSTTLL:	LDY #$00
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-271
NLOGO	TURTLE-GRAPHICS ROUTINES

  8F96   B1   BE      		LDA (TEMPX2),Y
  8F98   85   A2      		STA ARG1
  8F9A   C8           		INY
  8F9B   B1   BE      		LDA (TEMPX2),Y
  8F9D   85   A3      		STA ARG1+1
  8F9F   C8           		INY
  8FA0   B1   BE      		LDA (TEMPX2),Y
  8FA2   AA           		TAX
  8FA3   C8           		INY
  8FA4   B1   BE      		LDA (TEMPX2),Y
  8FA6   85   BF      		STA TEMPX2+1
  8FA8   86   BE      		STX TEMPX2
  8FAA   A2   A2      		LDX #ARG1
  8FAC   A4   C2      		LDY ANSNX
  8FAE   C8           		INY
  8FAF   F0   0B      		BEQ SSTTS
  8FB1   C8           		INY
  8FB2   F0   11      		BEQ SSTTP
  8FB4   C8           		INY
  8FB5   F0   33      		BEQ GSETH
  8FB7   C8           		INY
  8FB8   F0   25      		BEQ GSETY
  8FBA   D0   15      		BNE GSETX
  8FBC   20   0B   7A 	SSTTS:	JSR GTBOOL
  8FBF   98           		TYA
  8FC0   49   FF      		EOR #$FF
  8FC2   85   CA      		STA TSHOWN
  8FC4   60           		RTS
  8FC5   20   0B   7A 	SSTTP:	JSR GTBOOL
  8FC8   98           		TYA
  8FC9   49   FF      		EOR #$FF
  8FCB   85   C9      		STA PEN
  8FCD   60           		RTS
  8FCE   4C   21   7C 	SSETTR:	JMP SMAKE2	;Error XWTA,ARG1,CURTOK
                      
  8FD1   20   55   58 	GSETX:	JSR GT1NMX	;Set X
  8FD4   B0   03      		BCS GSTX1
  8FD6   20   38   69 		JSR FLOTN1
  8FD9   20   0D   94 	GSTX1:	JSR XCHK
  8FDC   4C   AC   94 		JMP GSAVX
                      
  8FDF   20   55   58 	GSETY:	JSR GT1NMX	;Set Y
  8FE2   B0   03      		BCS GSTY1
  8FE4   20   38   69 		JSR FLOTN1
  8FE7   4C   54   94 	GSTY1:	JMP YCHK
                      
  8FEA   20   55   58 	GSETH:	JSR GT1NMX	;Setheading
  8FED   B0   03      		BCS GSETHX
  8FEF   20   38   69 		JSR FLOTN1
  8FF2   A5   A2      	GSETHX:	LDA NARG1
  8FF4   C9   8F      		CMP #$8F
  8FF6   B0   43      		BCS GSETHR
  8FF8   A9   00      		LDA #$00
  8FFA   85   B3      		STA ANSN1
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-272
NLOGO	TURTLE-GRAPHICS ROUTINES

  8FFC   A5   A3      		LDA NARG1+1	;Normalize to within +/- 180.
  8FFE   10   05      		BPL SSETDL	;Go to decrement-loop if positive
  9000   20   FF   69 		JSR FCOMPL
  9003   E6   B3      		INC ANSN1
  9005   A5   A2      	SSETDL:	LDA NARG1
  9007   C9   87      		CMP #$87
  9009   90   24      		BCC SSETH2
  900B   D0   12      		BNE SSETD
  900D   A5   A3      		LDA NARG1+1
  900F   30   1E      		BMI SSETH2	;If negative,  OK
  9011   C9   5A      		CMP #$5A	;Check the high byte
  9013   90   1A      		BCC SSETH2
  9015   D0   08      		BNE SSETD
  9017   A5   A4      		LDA NARG1+2
  9019   D0   04      		BNE SSETD
  901B   A5   A5      		LDA NARG1+3
  901D   F0   10      		BEQ SSETH2
  901F   A2   03      	SSETD:	LDX #$03
  9021   BD   01   95 	SETHL:	LDA FCIRC,X	;Constant, 360.
  9024   95   9E      		STA NARG2,X
  9026   CA           		DEX
  9027   10   F8      		BPL SETHL
  9029   20   AE   69 		JSR FSUB	;Subtract 360 degrees
  902C   4C   05   90 		JMP SSETDL
  902F   A5   B3      	SSETH2:	LDA ANSN1
  9031   F0   03      		BEQ SSETH3
  9033   20   FF   69 		JSR FCOMPL
  9036   A0   D3      	SSETH3:	LDY #HEADNG
  9038   4C   EE   4C 		JMP XN1TOY
  903B   A9   20      	GSETHR:	LDA #XOFLOW
  903D   4C   42   61 		JMP ERROR
                      
  9040   20   F1   90 	SSHOWT:	JSR GCHK
  9043   A5   CA      		LDA TSHOWN
  9045   D0   05      		BNE SSHWTR
  9047   E6   CA      		INC TSHOWN
  9049   20   86   90 		JSR XORDRW
  904C   4C   1E   41 	SSHWTR:	JMP POPJ
                      
  904F   20   F1   90 	SHIDET:	JSR GCHK
  9052   A5   CA      		LDA TSHOWN
  9054   F0   F6      		BEQ SSHWTR
  9056   C6   CA      		DEC TSHOWN
  9058   20   86   90 		JSR XORDRW
  905B   4C   1E   41 		JMP POPJ
                      
  905E   20   F1   90 	SFULL:	JSR GCHK
  9061   AD   52   C0 		LDA $C052
  9064   4C   1E   41 		JMP POPJ
                      
  9067   20   F1   90 	SMIX:	JSR GCHK
  906A   AD   53   C0 		LDA $C053
  906D   4C   1E   41 		JMP POPJ
                      
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-273
NLOGO	TURTLE-GRAPHICS ROUTINES

  9070   A5   C9      	GDLINE:	LDA PEN
  9072   D0   06      		BNE GDLIN1
  9074   20   78   92 		JSR GPOSN	;Just do a GPOSN if pen is up
  9077   4C   81   90 		JMP GSHWT1
  907A   A9   00      	GDLIN1:	LDA #$00
  907C   85   C2      		STA ANSNX
  907E   20   F9   93 		JSR GLINE
                      
  9081   A5   CA      	GSHWT1:	LDA TSHOWN
  9083   D0   01      		BNE XORDRW
  9085   60           		RTS
                      
  9086   20   AC   94 	XORDRW:	JSR GSAVX	;Save new value of X, in case turtle is out-of-bounds
  9089   A2   13      		LDX #$13	;Draw the turtle, XOR mode
  908B   B5   CB      	XRDRL1:	LDA XCOR,X	;Save XCOR,YCOR,HEADNG,hires vars on stack
  908D   48           		PHA
  908E   CA           		DEX
  908F   10   FA      		BPL XRDRL1
  9091   A9   01      		LDA #$01
  9093   85   C2      		STA ANSNX	;Set up XOR mode
  9095   A9   06      		LDA #TTLC1	;Move to tip
  9097   20   E4   90 		JSR SETARG
  909A   20   4A   91 		JSR SFDX
  909D   20   78   92 		JSR GPOSN
  90A0   A9   A0      		LDA #TTLA1	;Turn right to draw first side
  90A2   20   E4   90 		JSR SETARG
  90A5   20   64   8E 		JSR SRTX
  90A8   A9   12      		LDA #TTLC2	;Draw first side
  90AA   20   E4   90 		JSR SETARG
  90AD   20   4A   91 		JSR SFDX
  90B0   20   F9   93 		JSR GLINE
  90B3   A9   6E      		LDA #TTLA2	;Turn right to draw rear
  90B5   20   E4   90 		JSR SETARG
  90B8   20   64   8E 		JSR SRTX
  90BB   A9   0C      		LDA #TTLC3	;Draw rear
  90BD   20   E4   90 		JSR SETARG
  90C0   20   4A   91 		JSR SFDX
  90C3   20   F9   93 		JSR GLINE
  90C6   A9   6E      		LDA #TTLA2	;Turn right to draw second side
  90C8   20   E4   90 		JSR SETARG
  90CB   20   64   8E 		JSR SRTX
  90CE   A9   12      		LDA #TTLC2	;Draw second side
  90D0   20   E4   90 		JSR SETARG
  90D3   20   4A   91 		JSR SFDX
  90D6   20   F9   93 		JSR GLINE
  90D9   C6   C2      		DEC ANSNX
  90DB   A2   EC      		LDX #$EC
  90DD   68           	XRDRL2:	PLA		;Restore XCOR,YCOR,HEADNG,hires vars from stack
  90DE   95   DF      		STA XCOR+20,X
  90E0   E8           		INX
  90E1   30   FA      		BMI XRDRL2
  90E3   60           	XRDR:	RTS
                      
  90E4   85   A2      	SETARG:	STA NARG1
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-274
NLOGO	TURTLE-GRAPHICS ROUTINES

  90E6   A9   00      		LDA #$00
  90E8   85   A3      		STA NARG1+1
  90EA   85   A4      		STA NARG1+2
  90EC   85   A5      		STA NARG1+3
  90EE   4C   38   69 		JMP FLOTN1
                      
  90F1   A5   09      	GCHK:	LDA GRPHCS	;Checks to see if Graphics mode
  90F3   D0   EE      		BNE XRDR
  90F5   A9   23      		LDA #XYNT
  90F7   A0   63      		LDY #CURTOK
  90F9   4C   42   61 		JMP ERROR	;If not, error "You need a turtle"
                      
  90FC   A2   CB      	TTLHOM:	LDX #XCOR
  90FE   20   04   91 		JSR CLRFLT
  9101   20   04   91 		JSR CLRFLT
                      
  9104   A9   00      	CLRFLT:	LDA #$00	;Clear a 4-byte argument
  9106   A0   03      		LDY #$03
  9108   95   00      	TTLL1:	STA $00,X
  910A   E8           		INX
  910B   88           		DEY
  910C   10   FA      		BPL TTLL1
  910E   60           		RTS
                      
  910F   20   F1   90 	SBK:	JSR GCHK
  9112   20   81   90 		JSR GSHWT1
  9115   A2   A2      		LDX #NARG1
  9117   20   80   52 		JSR VPOP	;Forward
  911A   20   55   58 		JSR GT1NMX
  911D   B0   03      		BCS SBK1
  911F   20   38   69 		JSR FLOTN1
  9122   20   FF   69 	SBK1:	JSR FCOMPL
  9125   20   4A   91 		JSR SFDX
  9128   20   70   90 		JSR GDLINE
  912B   4C   1E   41 		JMP POPJ
                      
  912E   20   F1   90 	SFD:	JSR GCHK
  9131   20   81   90 		JSR GSHWT1
  9134   A2   A2      		LDX #NARG1
  9136   20   80   52 		JSR VPOP	;Forward
  9139   20   55   58 		JSR GT1NMX
  913C   B0   03      		BCS SFD1
  913E   20   38   69 		JSR FLOTN1
  9141   20   4A   91 	SFD1:	JSR SFDX
  9144   20   70   90 		JSR GDLINE
  9147   4C   1E   41 		JMP POPJ
                      
  914A   A0   BC      	SFDX:	LDY #TEMPX1
  914C   20   EE   4C 		JSR XN1TOY	;Save Length in TEMPX1,2
  914F   20   B2   91 		JSR GETHED
  9152   A5   A2      		LDA NARG1
  9154   48           		PHA		;Save table index
  9155   20   0D   92 		JSR MULSIN
  9158   A0   B8      		LDY #TEMPN7
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-275
NLOGO	TURTLE-GRAPHICS ROUTINES

  915A   20   93   8E 		JSR XYTON2	;Restore interpolation fraction
  915D   20   B6   69 		JSR FMUL	;Get interpolation correction
  9160   A0   B4      		LDY #TEMPN5
  9162   20   93   8E 		JSR XYTON2	;Get uncorrected table value...
  9165   20   A9   69 		JSR FADD	;and correct it!
  9168   A0   BC      		LDY #TEMPX1
  916A   20   93   8E 		JSR XYTON2	;Get length back
  916D   20   B6   69 		JSR FMUL	;Multiply Length by fraction
  9170   A5   B3      		LDA ANSN1	;X-Incr. sign
  9172   F0   03      		BEQ SFDP1
  9174   20   FF   69 		JSR FCOMPL
  9177   A0   CB      	SFDP1:	LDY #XCOR	;Get XCOR in NARG2
  9179   20   93   8E 		JSR XYTON2
  917C   20   A9   69 		JSR FADD	;Add XCOR and NARG1 (X-incr.)
  917F   20   0D   94 		JSR XCHK
  9182   68           		PLA		;Retrieve NARG1
  9183   85   A2      		STA NARG1
  9185   20   08   92 		JSR MULCOS
  9188   A0   B8      		LDY #TEMPN7
  918A   20   93   8E 		JSR XYTON2	;Restore interpolation fraction
  918D   20   B6   69 		JSR FMUL	;Get interpolation correction
  9190   A0   AE      		LDY #TEMPN3
  9192   20   93   8E 		JSR XYTON2	;Get uncorrected table value...
  9195   20   B1   69 		JSR FSUBX	;and correct it!
  9198   A0   BC      		LDY #TEMPX1
  919A   20   93   8E 		JSR XYTON2	;Get length back
  919D   20   B6   69 		JSR FMUL	;Multiply Length by fraction
  91A0   A5   C0      		LDA ANSN2	;Y-Incr. sign
  91A2   F0   03      		BEQ SFDP2
  91A4   20   FF   69 		JSR FCOMPL
  91A7   A0   CF      	SFDP2:	LDY #YCOR
  91A9   20   93   8E 		JSR XYTON2	;Get YCOR in NARG2
  91AC   20   A9   69 		JSR FADD	;Add YCOR and NARG1 (Y-incr.)
  91AF   4C   54   94 		JMP YCHK
                      
  91B2   A9   00      	GETHED:	LDA #$00
  91B4   85   B3      		STA ANSN1
  91B6   85   C0      		STA ANSN2
  91B8   A0   D3      		LDY #HEADNG
  91BA   20   93   8E 		JSR XYTON2	;Get HEADING in NARG2
  91BD   A0   D3      		LDY #HEADNG
  91BF   20   FA   4C 		JSR XYTON1	;And in NARG1
  91C2   20   63   6A 		JSR XINT1	;Make it integer...
  91C5   20   38   69 		JSR FLOTN1	;then floating again, zapping fraction bits
  91C8   20   B1   69 		JSR FSUBX	;which remain after subtract
  91CB   A0   B8      		LDY #TEMPN7
  91CD   20   EE   4C 		JSR XN1TOY	;Save fraction for interpolating
  91D0   A0   D3      		LDY #HEADNG
  91D2   20   FA   4C 		JSR XYTON1	;Get heading back for munching
  91D5   A5   A3      		LDA NARG1+1
  91D7   10   05      		BPL HDPOS
  91D9   20   FF   69 		JSR FCOMPL
  91DC   E6   B3      		INC ANSN1	;Sign of X incr.
  91DE   A5   A2      	HDPOS:	LDA NARG1	;See if it's > 90.
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-276
NLOGO	TURTLE-GRAPHICS ROUTINES

  91E0   C9   86      		CMP #$86
  91E2   90   21      		BCC HDYPOS
  91E4   D0   10      		BNE HDYNEG
  91E6   A5   A3      		LDA NARG1+1
  91E8   C9   5A      		CMP #$5A
  91EA   90   19      		BCC HDYPOS
  91EC   D0   08      		BNE HDYNEG
  91EE   A5   A4      		LDA NARG1+2
  91F0   D0   04      		BNE HDYNEG
  91F2   A5   A5      		LDA NARG1+3
  91F4   F0   0F      		BEQ HDYPOS
  91F6   A2   03      	HDYNEG:	LDX #$03
  91F8   BD   05   95 	HDYNL:	LDA FCIRC1,X
  91FB   95   9E      		STA NARG2,X
  91FD   CA           		DEX
  91FE   10   F8      		BPL HDYNL
  9200   20   B1   69 		JSR FSUBX	;Subtract from 180. if > 90.
  9203   E6   C0      		INC ANSN2
  9205   4C   63   6A 	HDYPOS:	JMP XINT1	;Make Heading integer
                      
  9208   18           	MULCOS:	CLC		;Indexes 90-ANGLE-1 entry and following entry
  9209   A9   5A      		LDA #$5A
  920B   E5   A2      		SBC NARG1
                      
  920D   0A           	MULSIN:	ASL A		;Multiply by 2 for offset
  920E   48           		PHA		;Save index
  920F   A8           		TAY
  9210   C8           		INY
  9211   C8           		INY
  9212   AD   83   C0 		LDA GETRM2
  9215   E6   55      		INC BANK4K	;Enable bank 2 ghost-memory
  9217   B9   BA   DB 		LDA SINTB1,Y	;Get the table's entry
  921A   85   A2      		STA NARG1
  921C   B9   BB   DB 		LDA SINTB1+1,Y
  921F   85   A3      		STA NARG1+1
  9221   B9   72   DC 		LDA SINTB2,Y
  9224   85   A4      		STA NARG1+2
  9226   B9   73   DC 		LDA SINTB2+1,Y
  9229   85   A5      		STA NARG1+3
  922B   A0   B4      		LDY #TEMPN5
  922D   20   EE   4C 		JSR XN1TOY	;Save table value
  9230   68           		PLA		;Retrieve index
  9231   A8           		TAY
  9232   C8           		INY
  9233   C8           		INY
  9234   B9   BC   DB 		LDA SINTB1+2,Y	;Get the next entry for interpolating
  9237   85   9E      		STA NARG2
  9239   B9   BD   DB 		LDA SINTB1+3,Y
  923C   85   9F      		STA NARG2+1
  923E   B9   74   DC 		LDA SINTB2+2,Y
  9241   85   A0      		STA NARG2+2
  9243   B9   75   DC 		LDA SINTB2+3,Y
  9246   85   A1      		STA NARG2+3
  9248   A0   AE      		LDY #TEMPN3
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-277
NLOGO	TURTLE-GRAPHICS ROUTINES

  924A   20   9F   8E 		JSR XN2TOY	;Save table value
  924D   20   B1   69 		JSR FSUBX	;Get difference of entries in NARG1
  9250   AD   8B   C0 		LDA GETRM1
  9253   AD   8B   C0 		LDA GETRM1
  9256   C6   55      		DEC BANK4K	;Re-enable bank 1 ghost-memory
  9258   60           		RTS
                      
  9259   A9   00      	GCLEAR:	LDA #$00	;CLEAR Routine
  925B   85   AE      		STA TEMPN3
  925D   A9   20      		LDA #$20
  925F   85   A7      		STA TEMPNH+1
  9261   A0   00      		LDY #$00
  9263   84   A6      		STY TEMPNH
  9265   A5   AE      	D01B:	LDA TEMPN3
  9267   91   A6      		STA (TEMPNH),Y
  9269   20   E4   92 		JSR D0A2
  926C   C8           		INY
  926D   D0   F6      		BNE D01B
  926F   E6   A7      		INC TEMPNH+1
  9271   A5   A7      		LDA TEMPNH+1
  9273   29   1F      		AND #$1F
  9275   D0   EE      		BNE D01B
  9277   60           		RTS
                      
  9278   20   B6   94 	GPOSN:	JSR GNORM
  927B   A5   DF      		LDA COLR
  927D   85   B3      		STA ANSN1
  927F   A6   A0      		LDX NARG2+2
  9281   A4   A1      		LDY NARG2+3
  9283   A5   9E      		LDA NARG2
                      
  9285   85   DA      	D02E:	STA GRP2
  9287   86   D8      		STX GRP0
  9289   84   D9      		STY GRP1
  928B   48           		PHA
  928C   29   C0      		AND #$C0
  928E   85   DC      		STA GTMP4
  9290   4A           		LSR A
  9291   4A           		LSR A
  9292   05   DC      		ORA GTMP4
  9294   85   DC      		STA GTMP4
  9296   68           		PLA
  9297   85   DD      		STA GTMP4+1
  9299   0A           		ASL A
  929A   0A           		ASL A
  929B   0A           		ASL A
  929C   26   DD      		ROL GTMP4+1
  929E   0A           		ASL A
  929F   26   DD      		ROL GTMP4+1
  92A1   0A           		ASL A
  92A2   66   DC      		ROR GTMP4
  92A4   A5   DD      		LDA GTMP4+1
  92A6   29   1F      		AND #$1F
  92A8   09   20      		ORA #$20
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-278
NLOGO	TURTLE-GRAPHICS ROUTINES

  92AA   85   DD      		STA GTMP4+1
  92AC   8A           		TXA
  92AD   C0   00      		CPY #$00
  92AF   F0   05      		BEQ D063
  92B1   A0   23      		LDY #$23
  92B3   69   04      		ADC #$04
  92B5   C8           	D062:	INY
  92B6   E9   07      	D063:	SBC #$07
  92B8   B0   FB      		BCS D062
  92BA   84   DB      		STY GRP5
  92BC   AA           		TAX
  92BD   BD   E6   92 		LDA D1EA-256,X
  92C0   85   D7      		STA GANSN2
  92C2   98           		TYA
  92C3   4A           		LSR A
  92C4   A5   B3      		LDA ANSN1
  92C6   85   AE      	D075:	STA TEMPN3
  92C8   B0   1A      		BCS D0A2
  92CA   60           		RTS
                      
  92CB   10   23      	D088:	BPL D0AE
  92CD   A5   D7      		LDA GANSN2
  92CF   4A           		LSR A
  92D0   B0   05      		BCS D094
  92D2   49   C0      		EOR #$C0
  92D4   85   D7      	D091:	STA GANSN2
  92D6   60           		RTS
                      
  92D7   88           	D094:	DEY
  92D8   10   02      		BPL D099
  92DA   A0   27      		LDY #$27
  92DC   A9   C0      	D099:	LDA #$C0
  92DE   85   D7      	D09B:	STA GANSN2
  92E0   84   DB      		STY GRP5
  92E2   A5   AE      		LDA TEMPN3
  92E4   0A           	D0A2:	ASL A
  92E5   C9   C0      		CMP #$C0
  92E7   10   06      		BPL D0AD
  92E9   A5   AE      		LDA TEMPN3
  92EB   49   7F      		EOR #$7F
  92ED   85   AE      		STA TEMPN3
  92EF   60           	D0AD:	RTS
                      
  92F0   A5   D7      	D0AE:	LDA GANSN2
  92F2   0A           		ASL A
  92F3   49   80      		EOR #$80
  92F5   30   DD      		BMI D091
  92F7   A9   81      		LDA #$81
  92F9   C8           		INY
  92FA   C0   28      		CPY #$28
  92FC   90   E0      		BCC D09B
  92FE   A0   00      		LDY #$00
  9300   B0   DC      		BCS D09B	;(Always taken)
                      
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-279
NLOGO	TURTLE-GRAPHICS ROUTINES

  9302   30   2F      	D0F9:	BMI D12B
  9304   18           		CLC
  9305   A5   DD      		LDA GTMP4+1
  9307   2C   E6   93 		BIT D1EA
  930A   D0   22      		BNE D125
  930C   06   DC      		ASL GTMP4
  930E   B0   1A      		BCS D121
  9310   2C   F8   93 		BIT D0F3
  9313   F0   05      		BEQ D111
  9315   69   1F      		ADC #$1F
  9317   38           		SEC
  9318   B0   12      		BCS D123
                      
  931A   69   23      	D111:	ADC #$23
  931C   48           		PHA
  931D   A5   DC      		LDA GTMP4
  931F   69   B0      		ADC #$B0
  9321   B0   02      		BCS D11C
  9323   69   F0      		ADC #$F0
  9325   85   DC      	D11C:	STA GTMP4
  9327   68           		PLA
  9328   B0   02      		BCS D123
  932A   69   1F      	D121:	ADC #$1F
  932C   66   DC      	D123:	ROR GTMP4
  932E   69   FC      	D125:	ADC #$FC
  9330   85   DD      	D127:	STA GTMP4+1
  9332   60           		RTS
                      
  9333   A5   DD      	D12B:	LDA GTMP4+1
  9335   69   04      	D12D:	ADC #$04
  9337   2C   E6   93 		BIT D1EA
  933A   D0   F4      		BNE D127
  933C   06   DC      		ASL GTMP4
  933E   90   18      		BCC D151
  9340   69   E0      		ADC #$E0
  9342   18           		CLC
  9343   2C   36   93 		BIT D12D+1
  9346   F0   12      		BEQ D153
  9348   A5   DC      		LDA GTMP4
  934A   69   50      		ADC #$50
  934C   49   F0      		EOR #$F0
  934E   F0   02      		BEQ D14A
  9350   49   F0      		EOR #$F0
  9352   85   DC      	D14A:	STA GTMP4
  9354   A9   20      		LDA #$20
  9356   90   02      		BCC D153
  9358   69   E0      	D151:	ADC #$E0
  935A   66   DC      	D153:	ROR GTMP4
  935C   90   D2      		BCC D127	;(Always branches)
                      
  935E   48           	D164:	PHA
  935F   38           		SEC
  9360   E5   D8      		SBC GRP0
  9362   48           		PHA
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-280
NLOGO	TURTLE-GRAPHICS ROUTINES

  9363   8A           		TXA
  9364   E5   D9      		SBC GRP1
  9366   85   B7      		STA TEMPN6+1
  9368   B0   0A      		BCS D17C
  936A   68           		PLA
  936B   49   FF      		EOR #$FF
  936D   69   01      		ADC #$01
  936F   48           		PHA
  9370   A9   00      		LDA #$00
  9372   E5   B7      		SBC TEMPN6+1
  9374   85   B5      	D17C:	STA TEMPN5+1
  9376   85   B9      		STA TEMPN7+1
  9378   68           		PLA
  9379   85   B4      		STA TEMPN5
  937B   85   B8      		STA TEMPN7
  937D   68           		PLA
  937E   85   D8      		STA GRP0
  9380   86   D9      		STX GRP1
  9382   98           		TYA
  9383   18           		CLC
  9384   E5   DA      		SBC GRP2
  9386   90   04      		BCC D197
  9388   49   FF      		EOR #$FF
  938A   69   FE      		ADC #$FE
  938C   85   B6      	D197:	STA TEMPN6
  938E   84   DA      		STY GRP2
  9390   66   B7      		ROR TEMPN6+1
  9392   38           		SEC
  9393   E5   B4      		SBC TEMPN5
  9395   AA           		TAX
  9396   A9   FF      		LDA #$FF
  9398   E5   B5      		SBC TEMPN5+1
  939A   85   AF      		STA TEMPN3+1
  939C   A4   DB      		LDY GRP5
  939E   B0   05      		BCS D1B2	;(Always taken)
  93A0   0A           	D1AD:	ASL A
  93A1   20   CB   92 		JSR D088
  93A4   38           		SEC
  93A5   A5   B8      	D1B2:	LDA TEMPN7
  93A7   65   B6      		ADC TEMPN6
  93A9   85   B8      		STA TEMPN7
  93AB   A5   B9      		LDA TEMPN7+1
  93AD   E9   00      		SBC #$00
  93AF   85   B9      	D1BC:	STA TEMPN7+1
  93B1   A5   C2      		LDA ANSNX
  93B3   F0   04      		BEQ XORHK1
  93B5   A9   FF      		LDA #$FF
  93B7   D0   04      		BNE XORHK2
  93B9   B1   DC      	XORHK1:	LDA (GTMP4),Y
  93BB   45   AE      		EOR TEMPN3
  93BD   25   D7      	XORHK2:	AND GANSN2
  93BF   51   DC      		EOR (GTMP4),Y
  93C1   91   DC      		STA (GTMP4),Y
  93C3   E8           		INX
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-281
NLOGO	TURTLE-GRAPHICS ROUTINES

  93C4   D0   05      		BNE D1CF
  93C6   E6   AF      		INC TEMPN3+1
  93C8   D0   01      		BNE D1CF
  93CA   60           		RTS
  93CB   A5   B7      	D1CF:	LDA TEMPN6+1
  93CD   B0   D1      		BCS D1AD
  93CF   20   02   93 		JSR D0F9
  93D2   18           		CLC
  93D3   A5   B8      		LDA TEMPN7
  93D5   65   B4      		ADC TEMPN5
  93D7   85   B8      		STA TEMPN7
  93D9   A5   B9      		LDA TEMPN7+1
  93DB   65   B5      		ADC TEMPN5+1
  93DD   50   D0      		BVC D1BC	;(Always taken)
                      
  93DF   81           		$81
  93E0   82           		$82
  93E1   84           		$84
  93E2   88           		$88
  93E3   90           		$90
  93E4   A0           		$A0
  93E5   C0           		$C0
                      
  93E6   1C           	D1EA:	$1C
                      
  93E7   FF           	D1EB:	$FF
  93E8   FE           	D1EC:	$FE
  93E9   FA           		$FA
  93EA   F4           		$F4
  93EB   EC           		$EC
  93EC   E1           		$E1
  93ED   D4           		$D4
  93EE   C5           		$C5
  93EF   B4           		$B4
  93F0   A1           		$A1
  93F1   8D           		$8D
  93F2   78           		$78
  93F3   61           		$61
  93F4   49           		$49
  93F5   31           		$31
  93F6   18           		$18
  93F7   FF           		$FF
                      
  93F8   03           	D0F3:	$03
                      
  93F9   20   B6   94 	GLINE:	JSR GNORM
  93FC   A5   DB      		LDA GRP5
  93FE   4A           		LSR A
  93FF   A5   DF      		LDA COLR
  9401   20   C6   92 		JSR D075
  9404   A6   A1      		LDX NARG2+3
  9406   A5   A0      		LDA NARG2+2
  9408   A4   9E      		LDY NARG2
  940A   4C   5E   93 		JMP D164
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-282
NLOGO	TURTLE-GRAPHICS ROUTINES

                      
  940D   A0   3C      	XCHK:	LDY #A1L
  940F   20   EE   4C 		JSR XN1TOY
  9412   20   63   6A 		JSR XINT1
  9415   A2   A2      		LDX #NARG1
  9417   20   76   58 		JSR CHKINT
  941A   B0   33      		BCS D3AC1
  941C   A5   A3      		LDA NARG1+1
  941E   30   0A      		BMI XCHKM
  9420   D0   2D      		BNE D3AC1
  9422   A5   A2      		LDA NARG1
  9424   C9   8C      		CMP #$8C
  9426   B0   27      		BCS D3AC1
  9428   90   0A      		BCC XRTS
  942A   C9   FF      	XCHKM:	CMP #$FF
  942C   D0   21      		BNE D3AC1
  942E   A5   A2      		LDA NARG1
  9430   C9   74      		CMP #$74
  9432   90   1B      		BCC D3AC1
  9434   A2   03      	XRTS:	LDX #$03
  9436   B5   3C      	XCHL:	LDA A1L,X
  9438   95   CB      		STA XCOR,X
  943A   CA           		DEX
  943B   10   F9      		BPL XCHL
  943D   A5   A2      	STOX:	LDA NARG1
  943F   85   C5      		STA EPOINT
  9441   A5   A3      		LDA NARG1+1
  9443   85   C6      		STA EPOINT+1
  9445   60           		RTS
                      
  9446   A2   03      	D3AC:	LDX #$03
  9448   B5   40      	D3ACL:	LDA A3L,X
  944A   95   CB      		STA XCOR,X
  944C   CA           		DEX
  944D   10   F9      		BPL D3ACL
                      
  944F   A9   24      	D3AC1:	LDA #XOOB	;Error "Out of Bounds"
  9451   4C   42   61 		JMP ERROR
                      
  9454   A0   3C      	YCHK:	LDY #A1L
  9456   20   EE   4C 		JSR XN1TOY
  9459   A2   03      		LDX #$03
  945B   BD   09   95 	YCHL1:	LDA GRPHK1,X
  945E   95   9E      		STA NARG2,X
  9460   CA           		DEX
  9461   10   F8      		BPL YCHL1
  9463   20   B6   69 		JSR FMUL	;First multiply by 0.8
  9466   20   63   6A 		JSR XINT1
  9469   A2   A2      		LDX #NARG1
  946B   20   76   58 		JSR CHKINT
  946E   B0   D6      		BCS D3AC
  9470   A5   A3      		LDA NARG1+1
  9472   30   0A      		BMI YCHKM
  9474   D0   D0      		BNE D3AC
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-283
NLOGO	TURTLE-GRAPHICS ROUTINES

  9476   A5   A2      		LDA NARG1
  9478   C9   60      		CMP #$60
  947A   90   0C      		BCC YRTS
  947C   B0   C8      		BCS D3AC
  947E   C9   FF      	YCHKM:	CMP #$FF
  9480   D0   C4      		BNE D3AC
  9482   A5   A2      		LDA NARG1
  9484   C9   A0      		CMP #$A0
  9486   90   BE      		BCC D3AC
  9488   A2   03      	YRTS:	LDX #$03
  948A   B5   3C      	YCHL:	LDA A1L,X
  948C   95   CF      		STA YCOR,X
  948E   CA           		DEX
  948F   10   F9      		BPL YCHL
  9491   A5   A2      	STOY:	LDA NARG1
  9493   85   44      		STA A5L
  9495   60           		RTS
                      
  9496   A0   CB      	GETX:	LDY #XCOR
  9498   20   FA   4C 		JSR XYTON1
  949B   20   63   6A 		JSR XINT1
  949E   4C   3D   94 		JMP STOX
                      
  94A1   A0   CF      	GETY:	LDY #YCOR
  94A3   20   FA   4C 		JSR XYTON1
  94A6   20   63   6A 		JSR XINT1
  94A9   4C   91   94 		JMP STOY
                      
  94AC   A2   03      	GSAVX:	LDX #$03
  94AE   B5   CB      	GSVXL:	LDA XCOR,X
  94B0   95   40      		STA A3L,X
  94B2   CA           		DEX
  94B3   10   F9      		BPL GSVXL
  94B5   60           		RTS
                      
  94B6   38           	GNORM:	SEC
  94B7   A9   5F      		LDA #$5F
  94B9   E5   44      		SBC A5L		;Subtract Ycoord from 95.
  94BB   85   9E      		STA NARG2
  94BD   18           	GNORM2:	CLC
  94BE   A5   C5      		LDA EPOINT
  94C0   69   8C      		ADC #$8C	;Add 140. to Xcoord
  94C2   85   A0      		STA NARG2+2
  94C4   A5   C6      		LDA EPOINT+1
  94C6   69   00      		ADC #$00
  94C8   85   A1      		STA NARG2+3
  94CA   60           	GNORM1:	RTS
                      
       94CB           	ZZZZZZ=.			;(Label quickly noticeable in symbol table)
                      	;	End of program portion.
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-284
NLOGO	TURTLE-GRAPHICS ROUTINES

                      	;	Monitor data:
                      
  94CB   56   4D   3C 	CHRTBL:	.ASCII "VM<NIG S:."
  94CE   4E   49   47 
  94D1   20   53   3A 
  94D4   2E           
  94D5   05           		$05	;^E
  94D6   0D           		$0D	;(Carriage-return)
  94D7   10           		$10	;^P
  94D8   0B           		$0B	;^K
  94D9   02           		$02	;^B
                      
  94DA   1A   74      	SUBTBL:	.ADDR	VFY
  94DC   10   74      		.ADDR	MOVE
  94DE   04   74      		.ADDR	LT
  94E0   55   74      		.ADDR	SETNRM
  94E2   51   74      		.ADDR	SETINV
  94E4   81   74      		.ADDR	GO
  94E6   E8   73      		.ADDR	BLANK
  94E8   8E   74      		.ADDR	BSWTCH
  94EA   FC   73      		.ADDR	SETMOD
  94EC   FC   73      		.ADDR	SETMOD
  94EE   B2   74      		.ADDR	REGZ
  94F0   CA   74      		.ADDR	CRMON
  94F2   6A   74      		.ADDR	OUTPRT
  94F4   5E   74      		.ADDR	INPRT
  94F6   B5   74      		.ADDR	XMON
                      
  94F8   41   58   59 	RTBL:	.ASCII "AXYPS"
  94FB   50   53      
                      
  94FD   83           	FLT10:	$83	;Floating-point constant, 10.0
  94FE   50           		$50
  94FF   00           		$00
  9500   00           		$00
                      
  9501   88           	FCIRC:	$88	;Floating-point constant, 360.0
  9502   5A           		$5A
  9503   00           		$00
  9504   00           		$00
                      
  9505   87           	FCIRC1:	$87	;Floating-point constant, 180.0
  9506   5A           		$5A
  9507   00           		$00
  9508   00           		$00
                      
  9509   7F           	GRPHK1:	$7F	;Floating-point constant, 0.8
  950A   66           		$66
  950B   66           		$66
  950C   66           		$66
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-285
NLOGO	SYSTEM TABLES

                      	.SBTTL	System Tables
                      
       3000           	.=SYSTAB*$100		;Original load area
                      
                      	;	System Function address table:
                      	;	(Ghost-memory bank 2)
                      
  3000   C8   51      		.ADDR	SYSBUG		;For INULL, in case of indexing error
  3002   29   7E      		.ADDR	SPTHNG
  3004   8D   8A      		.ADDR	SWORD
  3006   4E   7E      		.ADDR	SPWRDP
  3008   B9   78      		.ADDR	SUNSUM
  300A   72   77      		.ADDR	SUNDIF
  300C   02   7C      		.ADDR	SMAKE
  300E   2A   7C      		.ADDR	SOUTPT
  3010   42   7C      		.ADDR	SSTOP
  3012   B6   7F      		.ADDR	SPRINT
  3014   C6   7F      		.ADDR	STYPE
  3016   D3   7F      		.ADDR	SDEFIN
  3018   63   7C      		.ADDR	SDEBUG
  301A   8B   7C      		.ADDR	SCNTIN
  301C   31   54      		.ADDR	STPPKZ
  301E   E7   7C      		.ADDR	SELSE
  3020   62   7B      		.ADDR	SSNTNC
  3022   CF   79      		.ADDR	SBOTH
  3024   ED   79      		.ADDR	SEITHR
  3026   FD   45      		.ADDR	XXSFR1	;Then
  3028   C1   79      		.ADDR	SNOT
  302A   02   43      		.ADDR	PARLOP	;Left-parenthesis
  302C   02   46      		.ADDR	XXSFR2	;Right-parenthesis
  302E   94   7C      		.ADDR	SIF
  3030   DF   7D      		.ADDR	SRUN
  3032   12   7D      		.ADDR	SGO
  3034   E4   51      		.ADDR	SBPT
  3036   2A   40      		.ADDR	LOGO1	;Goodbye
  3038   A0   7E      		.ADDR	SGCOLL
  303A   69   7E      		.ADDR	SNODES
  303C   09   89      		.ADDR	SBTFST
  303E   E7   80      		.ADDR	SFIRST
  3040   FC   8B      		.ADDR	SBTLST
  3042   46   81      		.ADDR	SLAST
  3044   DE   82      		.ADDR	STO
  3046   76   83      		.ADDR	SEDIT
  3048   B9   83      		.ADDR	SEND
  304A   11   80      		.ADDR	STEXT
  304C   2E   91      		.ADDR	SFD
  304E   0F   91      		.ADDR	SBK
  3050   48   8E      		.ADDR	SRT
  3052   6F   8E      		.ADDR	SLT
  3054   73   8D      		.ADDR	SLIST
  3056   B9   8D      		.ADDR	SCS
  3058   1B   8E      		.ADDR	SHOME
  305A   07   8E      		.ADDR	SPENUP
  305C   11   8E      		.ADDR	SPENDN
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-286
NLOGO	SYSTEM TABLES

  305E   4B   8D      		.ADDR	SEMPTP
  3060   40   90      		.ADDR	SSHOWT
  3062   4F   90      		.ADDR	SHIDET
  3064   AB   8E      		.ADDR	STS
  3066   D1   7E      		.ADDR	STITLE
  3068   71   7A      		.ADDR	SFPUT
  306A   E6   83      		.ADDR	SPO
  306C   07   46      		.ADDR	XXSFR3	;All
  306E   07   46      		.ADDR	XXSFR3	;Names
  3070   EC   87      		.ADDR	SERASE
  3072   77   71      		.ADDR	SREAD
  3074   DA   70      		.ADDR	SSAVE
  3076   7B   7E      		.ADDR	SREQU
  3078   F4   7D      		.ADDR	STHING
  307A   A6   7E      		.ADDR	SRETRV
  307C   91   77      		.ADDR	SSUM
  307E   C4   77      		.ADDR	SDIF
  3080   EF   77      		.ADDR	SPROD
  3082   61   78      		.ADDR	SDIVID
  3084   70   79      		.ADDR	SGRTR
  3086   B8   79      		.ADDR	SLESS
  3088   51   7C      		.ADDR	SCOMMT
  308A   A7   81      		.ADDR	SEQUAL
  308C   32   87      		.ADDR	STRCBK
  308E   30   84      		.ADDR	SPOTS
  3090   07   46      		.ADDR	XXSFR3	;Titles
  3092   07   46      		.ADDR	XXSFR3	;Procedures
  3094   D8   89      		.ADDR	SPEEK
  3096   E8   89      		.ADDR	SPOKE
  3098   91   77      		.ADDR	SSUM
  309A   C4   77      		.ADDR	SDIF
  309C   EF   77      		.ADDR	SPROD
  309E   61   78      		.ADDR	SDIVID
  30A0   70   79      		.ADDR	SGRTR
  30A2   B8   79      		.ADDR	SLESS
  30A4   A7   81      		.ADDR	SEQUAL
  30A6   99   7A      		.ADDR	SLPUT
  30A8   FB   89      		.ADDR	SRANDM
  30AA   34   8A      		.ADDR	SCTYI
  30AC   54   8A      		.ADDR	SCURSR
  30AE   2D   8A      		.ADDR	SRNDMZ
  30B0   7E   8A      		.ADDR	SCALL
  30B2   1E   8D      		.ADDR	SLISTP
  30B4   2D   8D      		.ADDR	SNMBRP
  30B6   AD   8D      		.ADDR	SCLINP
  30B8   C5   7E      		.ADDR	SCHNGE
  30BA   8D   7D      		.ADDR	SRPEAT
  30BC   FF   8E      		.ADDR	SSETX
  30BE   16   8F      		.ADDR	SSETY
  30C0   30   8F      		.ADDR	SSETXY
  30C2   54   8F      		.ADDR	SSETH
  30C4   68   8F      		.ADDR	SSETT
  30C6   30   8E      		.ADDR	SXCOR
  30C8   38   8E      		.ADDR	SYCOR
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-287
NLOGO	SYSTEM TABLES

  30CA   40   8E      		.ADDR	SHDING
  30CC   FD   8D      		.ADDR	SNDSPL
  30CE   B3   8D      		.ADDR	SCLEAR
  30D0   D0   78      		.ADDR	SINT
  30D2   5E   90      		.ADDR	SFULL
  30D4   67   90      		.ADDR	SMIX
  30D6   42   70      		.ADDR	SDELET
  30D8   E8   71      		.ADDR	SCATLG
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-288
NLOGO	SYSTEM TABLES

                      	;	Error-string address table:
                      
       D0D8           	ERRTBL=.+TDIFF-2	;(Ghost-memory bank 2)
                      
  30DA   2C   D1      		.ADDR	XXUOP+TDIFF
  30DC   4C   D1      		.ADDR	XXEOL+TDIFF
  30DE   63   D1      		.ADDR	XXUDF+TDIFF
  30E0   80   D1      		.ADDR	XXHNV+TDIFF
  30E2   8F   D1      		.ADDR	XXTMO+TDIFF
  30E4   A8   D1      		.ADDR	XXNOP+TDIFF
  30E6   B8   D1      		.ADDR	XXRPN+TDIFF
  30E8   C5   D1      		.ADDR	XXIFX+TDIFF
  30EA   E2   D1      		.ADDR	XXVNA+TDIFF
  30EC   FA   D1      		.ADDR	XXTIP+TDIFF
  30EE   16   D2      		.ADDR	XXWTA+TDIFF
  30F0   30   D2      		.ADDR	XXUBL+TDIFF
  30F2   42   D2      		.ADDR	XXNTL+TDIFF
  30F4   6D   D2      		.ADDR	XXNTF+TDIFF
  30F6   92   D2      		.ADDR	XXELS+TDIFF
  30F8   A7   D2      		.ADDR	XXBRK+TDIFF
  30FA   BB   D2      		.ADDR	XXLAB+TDIFF
  30FC   E3   D2      		.ADDR	XXTHN+TDIFF
  30FE   00   00      		.ADDR	0
  3100   F8   D2      		.ADDR	XXLNF+TDIFF
  3102   11   D3      		.ADDR	XXEDT+TDIFF
  3104   32   D3      		.ADDR	XXDEF+TDIFF
  3106   47   D3      		.ADDR	XXETL+TDIFF
  3108   66   D3      		.ADDR	XXNED+TDIFF
  310A   7E   D3      		.ADDR	XXOPO+TDIFF
  310C   00   00      		.ADDR	0
  310E   A1   D3      		.ADDR	XXTML+TDIFF
  3110   BB   D3      		.ADDR	XXDBZ+TDIFF
  3112   D7   D3      		.ADDR	XXNWE+TDIFF
  3114   FC   D3      		.ADDR	XXLNT+TDIFF
  3116   10   D4      		.ADDR	XXILN+TDIFF
  3118   24   D4      		.ADDR	XXOFL+TDIFF
  311A   38   D4      		.ADDR	XXNDF+TDIFF
  311C   49   D4      		.ADDR	XXCRS+TDIFF
  311E   6A   D4      		.ADDR	XXYNT+TDIFF
  3120   84   D4      		.ADDR	XXOOB+TDIFF
  3122   99   D4      		.ADDR	XXIOR+TDIFF
  3124   A3   D4      		.ADDR	XXWTP+TDIFF
  3126   BF   D4      		.ADDR	XXFNF+TDIFF
  3128   CE   D4      		.ADDR	XXDKF+TDIFF
  312A   EE   D4      		.ADDR	XXLKF+TDIFF
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-289
NLOGO	SYSTEM TABLES

                      	;	Error Messages:
                      	;	(Ghost-memory bank 2)
                      
  312C   59   6F   75 	XXUOP:	.ASCII "You don't say what to do with "
  312F   20   64   6F 
  3132   6E   27   74 
  3135   20   73   61 
  3138   79   20   77 
  313B   68   61   74 
  313E   20   74   6F 
  3141   20   64   6F 
  3144   20   77   69 
  3147   74   68   20 
  314A   00           		$00
  314B   FF           		$FF
  314C   55   6E   65 	XXEOL:	.ASCII "Unexpected end of line"
  314F   78   70   65 
  3152   63   74   65 
  3155   64   20   65 
  3158   6E   64   20 
  315B   6F   66   20 
  315E   6C   69   6E 
  3161   65           
  3162   FF           		$FF
  3163   59   6F   75 	XXUDF:	.ASCII "You haven't told me how to "
  3166   20   68   61 
  3169   76   65   6E 
  316C   27   74   20 
  316F   74   6F   6C 
  3172   64   20   6D 
  3175   65   20   68 
  3178   6F   77   20 
  317B   74   6F   20 
  317E   00           		$00
  317F   FF           		$FF
  3180   00           	XXHNV:	$00
  3181   20   68   61 		.ASCII " has no value"
  3184   73   20   6E 
  3187   6F   20   76 
  318A   61   6C   75 
  318D   65           
  318E   FF           		$FF
  318F   00           	XXTMO:	$00
  3190   20   6F   75 		.ASCII " output too many things"
  3193   74   70   75 
  3196   74   20   74 
  3199   6F   6F   20 
  319C   6D   61   6E 
  319F   79   20   74 
  31A2   68   69   6E 
  31A5   67   73      
  31A7   FF           		$FF
  31A8   00           	XXNOP:	$00
  31A9   20   64   69 		.ASCII " didn't output"
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-290
NLOGO	SYSTEM TABLES

  31AC   64   6E   27 
  31AF   74   20   6F 
  31B2   75   74   70 
  31B5   75   74      
  31B7   FF           		$FF
  31B8   55   6E   65 	XXRPN:	.ASCII "Unexpected )"
  31BB   78   70   65 
  31BE   63   74   65 
  31C1   64   20   29 
  31C4   FF           		$FF
  31C5   54   68   65 	XXIFX:	.ASCII "There's nothing before the "
  31C8   72   65   27 
  31CB   73   20   6E 
  31CE   6F   74   68 
  31D1   69   6E   67 
  31D4   20   62   65 
  31D7   66   6F   72 
  31DA   65   20   74 
  31DD   68   65   20 
  31E0   00           		$00
  31E1   FF           		$FF
  31E2   59   6F   75 	XXVNA:	.ASCII "You need ( )'s around "
  31E5   20   6E   65 
  31E8   65   64   20 
  31EB   28   20   29 
  31EE   27   73   20 
  31F1   61   72   6F 
  31F4   75   6E   64 
  31F7   20           
  31F8   00           		$00
  31F9   FF           		$FF
  31FA   54   6F   6F 	XXTIP:	.ASCII "Too much inside parenthesis"
  31FD   20   6D   75 
  3200   63   68   20 
  3203   69   6E   73 
  3206   69   64   65 
  3209   20   70   61 
  320C   72   65   6E 
  320F   74   68   65 
  3212   73   69   73 
  3215   FF           		$FF
  3216   00           	XXWTA:	$00
  3217   20   64   6F 		.ASCII " doesn't like "
  321A   65   73   6E 
  321D   27   74   20 
  3220   6C   69   6B 
  3223   65   20      
  3225   01           		$01
  3226   20   61   73 		.ASCII " as input"
  3229   20   69   6E 
  322C   70   75   74 
  322F   FF           		$FF
  3230   00           	XXUBL:	$00
  3231   20   69   73 		.ASCII " is used by LOGO"
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-291
NLOGO	SYSTEM TABLES

  3234   20   75   73 
  3237   65   64   20 
  323A   62   79   20 
  323D   4C   4F   47 
  3240   4F           
  3241   FF           		$FF
  3242   00           	XXNTL:	$00
  3243   20   73   68 		.ASCII " should only be called inside a procedure"
  3246   6F   75   6C 
  3249   64   20   6F 
  324C   6E   6C   79 
  324F   20   62   65 
  3252   20   63   61 
  3255   6C   6C   65 
  3258   64   20   69 
  325B   6E   73   69 
  325E   64   65   20 
  3261   61   20   70 
  3264   72   6F   63 
  3267   65   64   75 
  326A   72   65      
  326C   FF           		$FF
  326D   00           	XXNTF:	$00
  326E   20   77   61 		.ASCII " was given instead of TRUE or FALSE"
  3271   73   20   67 
  3274   69   76   65 
  3277   6E   20   69 
  327A   6E   73   74 
  327D   65   61   64 
  3280   20   6F   66 
  3283   20   54   52 
  3286   55   45   20 
  3289   6F   72   20 
  328C   46   41   4C 
  328F   53   45      
  3291   FF           		$FF
  3292   45   4C   53 	XXELS:	.ASCII "ELSE is out of place"
  3295   45   20   69 
  3298   73   20   6F 
  329B   75   74   20 
  329E   6F   66   20 
  32A1   70   6C   61 
  32A4   63   65      
  32A6   FF           		$FF
  32A7   49   20   77 	XXBRK:	.ASCII "I was told to pause"
  32AA   61   73   20 
  32AD   74   6F   6C 
  32B0   64   20   74 
  32B3   6F   20   70 
  32B6   61   75   73 
  32B9   65           
  32BA   FF           		$FF
  32BB   54   68   65 	XXLAB:	.ASCII "There's a label in the middle of a line"
  32BE   72   65   27 
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-292
NLOGO	SYSTEM TABLES

  32C1   73   20   61 
  32C4   20   6C   61 
  32C7   62   65   6C 
  32CA   20   69   6E 
  32CD   20   74   68 
  32D0   65   20   6D 
  32D3   69   64   64 
  32D6   6C   65   20 
  32D9   6F   66   20 
  32DC   61   20   6C 
  32DF   69   6E   65 
  32E2   FF           		$FF
  32E3   54   48   45 	XXTHN:	.ASCII "THEN is out of place"
  32E6   4E   20   69 
  32E9   73   20   6F 
  32EC   75   74   20 
  32EF   6F   66   20 
  32F2   70   6C   61 
  32F5   63   65      
  32F7   FF           		$FF
  32F8   49   20   63 	XXLNF:	.ASCII "I can't find the label "
  32FB   61   6E   27 
  32FE   74   20   66 
  3301   69   6E   64 
  3304   20   74   68 
  3307   65   20   6C 
  330A   61   62   65 
  330D   6C   20      
  330F   00           		$00
  3310   FF           		$FF
  3311   59   6F   75 	XXEDT:	.ASCII "You're already editing something"
  3314   27   72   65 
  3317   20   61   6C 
  331A   72   65   61 
  331D   64   79   20 
  3320   65   64   69 
  3323   74   69   6E 
  3326   67   20   73 
  3329   6F   6D   65 
  332C   74   68   69 
  332F   6E   67      
  3331   FF           		$FF
  3332   00           	XXDEF:	$00
  3333   20   69   73 		.ASCII " is already defined"
  3336   20   61   6C 
  3339   72   65   61 
  333C   64   79   20 
  333F   64   65   66 
  3342   69   6E   65 
  3345   64           
  3346   FF           		$FF
  3347   59   6F   75 	XXETL:	.ASCII "You can only edit at top level"
  334A   20   63   61 
  334D   6E   20   6F 
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-293
NLOGO	SYSTEM TABLES

  3350   6E   6C   79 
  3353   20   65   64 
  3356   69   74   20 
  3359   61   74   20 
  335C   74   6F   70 
  335F   20   6C   65 
  3362   76   65   6C 
  3365   FF           		$FF
  3366   59   6F   75 	XXNED:	.ASCII "You're not in Edit mode"
  3369   27   72   65 
  336C   20   6E   6F 
  336F   74   20   69 
  3372   6E   20   45 
  3375   64   69   74 
  3378   20   6D   6F 
  337B   64   65      
  337D   FF           		$FF
  337E   59   6F   75 	XXOPO:	.ASCII "You can only say "
  3381   20   63   61 
  3384   6E   20   6F 
  3387   6E   6C   79 
  338A   20   73   61 
  338D   79   20      
  338F   00           		$00
  3390   20   74   6F 		.ASCII " to PO, ER, etc."
  3393   20   50   4F 
  3396   2C   20   45 
  3399   52   2C   20 
  339C   65   74   63 
  339F   2E           
  33A0   FF           		$FF
  33A1   54   6F   6F 	XXTML:	.ASCII "Too many display commands"
  33A4   20   6D   61 
  33A7   6E   79   20 
  33AA   64   69   73 
  33AD   70   6C   61 
  33B0   79   20   63 
  33B3   6F   6D   6D 
  33B6   61   6E   64 
  33B9   73           
  33BA   FF           		$FF
  33BB   59   6F   75 	XXDBZ:	.ASCII "You tried to divide by zero"
  33BE   20   74   72 
  33C1   69   65   64 
  33C4   20   74   6F 
  33C7   20   64   69 
  33CA   76   69   64 
  33CD   65   20   62 
  33D0   79   20   7A 
  33D3   65   72   6F 
  33D6   FF           		$FF
  33D7   59   6F   75 	XXNWE:	.ASCII "You can't do that while in Edit mode"
  33DA   20   63   61 
  33DD   6E   27   74 
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-294
NLOGO	SYSTEM TABLES

  33E0   20   64   6F 
  33E3   20   74   68 
  33E6   61   74   20 
  33E9   77   68   69 
  33EC   6C   65   20 
  33EF   69   6E   20 
  33F2   45   64   69 
  33F5   74   20   6D 
  33F8   6F   64   65 
  33FB   FF           		$FF
  33FC   4C   69   6E 	XXLNT:	.ASCII "Line number too big"
  33FF   65   20   6E 
  3402   75   6D   62 
  3405   65   72   20 
  3408   74   6F   6F 
  340B   20   62   69 
  340E   67           
  340F   FF           		$FF
  3410   49   6C   6C 	XXILN:	.ASCII "Illegal line number"
  3413   65   67   61 
  3416   6C   20   6C 
  3419   69   6E   65 
  341C   20   6E   75 
  341F   6D   62   65 
  3422   72           
  3423   FF           		$FF
  3424   41   72   69 	XXOFL:	.ASCII "Arithmetic overflow"
  3427   74   68   6D 
  342A   65   74   69 
  342D   63   20   6F 
  3430   76   65   72 
  3433   66   6C   6F 
  3436   77           
  3437   FF           		$FF
  3438   00           	XXNDF:	$00
  3439   20   69   73 		.ASCII " is not defined"
  343C   20   6E   6F 
  343F   74   20   64 
  3442   65   66   69 
  3445   6E   65   64 
  3448   FF           		$FF
  3449   43   75   72 	XXCRS:	.ASCII "Cursor coordinates off of screen"
  344C   73   6F   72 
  344F   20   63   6F 
  3452   6F   72   64 
  3455   69   6E   61 
  3458   74   65   73 
  345B   20   6F   66 
  345E   66   20   6F 
  3461   66   20   73 
  3464   63   72   65 
  3467   65   6E      
  3469   FF           		$FF
  346A   59   6F   75 	XXYNT:	.ASCII "You need a turtle to do "
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-295
NLOGO	SYSTEM TABLES

  346D   20   6E   65 
  3470   65   64   20 
  3473   61   20   74 
  3476   75   72   74 
  3479   6C   65   20 
  347C   74   6F   20 
  347F   64   6F   20 
  3482   00           		$00
  3483   FF           		$FF
  3484   54   75   72 	XXOOB:	.ASCII "Turtle Out-of-Bounds"
  3487   74   6C   65 
  348A   20   4F   75 
  348D   74   2D   6F 
  3490   66   2D   42 
  3493   6F   75   6E 
  3496   64   73      
  3498   FF           		$FF
  3499   49   2F   4F 	XXIOR:	.ASCII "I/O Error"
  349C   20   45   72 
  349F   72   6F   72 
  34A2   FF           		$FF
  34A3   54   68   65 	XXWTP:	.ASCII "The file is write-protected"
  34A6   20   66   69 
  34A9   6C   65   20 
  34AC   69   73   20 
  34AF   77   72   69 
  34B2   74   65   2D 
  34B5   70   72   6F 
  34B8   74   65   63 
  34BB   74   65   64 
  34BE   FF           		$FF
  34BF   46   69   6C 	XXFNF:	.ASCII "File not found"
  34C2   65   20   6E 
  34C5   6F   74   20 
  34C8   66   6F   75 
  34CB   6E   64      
  34CD   FF           		$FF
  34CE   59   6F   75 	XXDKF:	.ASCII "You have a write-protected disk"
  34D1   20   68   61 
  34D4   76   65   20 
  34D7   61   20   77 
  34DA   72   69   74 
  34DD   65   2D   70 
  34E0   72   6F   74 
  34E3   65   63   74 
  34E6   65   64   20 
  34E9   64   69   73 
  34EC   6B           
  34ED   FF           		$FF
  34EE   54   68   65 	XXLKF:	.ASCII "The file is locked"
  34F1   20   66   69 
  34F4   6C   65   20 
  34F7   69   73   20 
  34FA   6C   6F   63 
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-296
NLOGO	SYSTEM TABLES

  34FD   6B   65   64 
  3500   FF           		$FF
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-297
NLOGO	SYSTEM TABLES

                      	;	Primitive table:
                      	;	(Ghost-memory bank 2)
                      
       D501           	PRMTAB	=.+TDIFF
                      
  3501   00           		0
  3502   00           		0
  3503   36           		IALL
  3504   41   4C   4C 		.ASCII "ALL "
  3507   20           
  3508   01           		1
  3509   00           		0
  350A   27           		IBACK
  350B   42   41   43 		.ASCII "BACK "
  350E   4B   20      
  3510   01           		1
  3511   05           		5
  3512   1E           		IBTFST
  3513   42   46   20 		.ASCII "BF "
  3516   01           		1
  3517   00           		0
  3518   27           		IBACK
  3519   42   4B   20 		.ASCII "BK "
  351C   01           		1
  351D   05           		5
  351E   20           		IBTLST
  351F   42   4C   20 		.ASCII "BL "
  3522   02           		2
  3523   01           		1
  3524   11           		IBOTH
  3525   42   4F   54 		.ASCII "BOTH "
  3528   48   20      
  352A   01           		1
  352B   05           		5
  352C   1E           		IBTFST
  352D   42   55   54 		.ASCII "BUTFIRST "
  3530   46   49   52 
  3533   53   54   20 
  3536   01           		1
  3537   05           		5
  3538   20           		IBTLST
  3539   42   55   54 		.ASCII "BUTLAST "
  353C   4C   41   53 
  353F   54   20      
  3541   00           		0
  3542   00           		0
  3543   6C           		ICATLG
  3544   43   41   54 		.ASCII "CATALOG "
  3547   41   4C   4F 
  354A   47   20      
  354C   00           		0
  354D   00           		0
  354E   23           		IEDIT
  354F   43   48   41 		.ASCII "CHANGE "
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-298
NLOGO	SYSTEM TABLES

  3552   4E   47   45 
  3555   20           
  3556   00           		0
  3557   00           		0
  3558   23           		IEDIT
  3559   43   48   47 		.ASCII "CHG "
  355C   20           
  355D   00           		0
  355E   00           		0
  355F   67           		ICLEAR
  3560   43   4C   45 		.ASCII "CLEAR "
  3563   41   52   20 
  3566   00           		0
  3567   00           		0
  3568   5B           		ICLINP
  3569   43   4C   45 		.ASCII "CLEARINPUT "
  356C   41   52   49 
  356F   4E   50   55 
  3572   54   20      
  3574   00           		0
  3575   00           		0
  3576   2B           		ICS
  3577   43   4C   45 		.ASCII "CLEARSCREEN "
  357A   41   52   53 
  357D   43   52   45 
  3580   45   4E   20 
  3583   00           		0
  3584   00           		0
  3585   0D           		ICNTIN
  3586   43   4F   20 		.ASCII "CO "
  3589   00           		0
  358A   00           		0
  358B   0D           		ICNTIN
  358C   43   4F   4E 		.ASCII "CONTINUE "
  358F   54   49   4E 
  3592   55   45   20 
  3595   00           		0
  3596   00           		0
  3597   2B           		ICS
  3598   43   53   20 		.ASCII "CS "
  359B   02           		2
  359C   05           		5
  359D   56           		ICURSR
  359E   43   55   52 		.ASCII "CURSOR "
  35A1   53   4F   52 
  35A4   20           
  35A5   02           		2
  35A6   00           		0
  35A7   0B           		IDEFIN
  35A8   44   45   20 		.ASCII "DE "
  35AB   00           		0
  35AC   00           		0
  35AD   0C           		IDEBUG
  35AE   44   45   42 		.ASCII "DEBUG "
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-299
NLOGO	SYSTEM TABLES

  35B1   55   47   20 
  35B4   02           		2
  35B5   00           		0
  35B6   0B           		IDEFIN
  35B7   44   45   46 		.ASCII "DEFINE "
  35BA   49   4E   45 
  35BD   20           
  35BE   01           		1
  35BF   00           		0
  35C0   6B           		IDELET
  35C1   44   45   4C 		.ASCII "DELETE "
  35C4   45   54   45 
  35C7   20           
  35C8   02           		2
  35C9   06           		6
  35CA   3F           		IDIF
  35CB   44   49   46 		.ASCII "DIFFERENCE "
  35CE   46   45   52 
  35D1   45   4E   43 
  35D4   45   20      
  35D6   00           		0
  35D7   00           		0
  35D8   5C           		ICHNGE
  35D9   45   44   20 		.ASCII "ED "
  35DC   00           		0
  35DD   00           		0
  35DE   5C           		ICHNGE
  35DF   45   44   49 		.ASCII "EDIT "
  35E2   54   20      
  35E4   02           		2
  35E5   01           		1
  35E6   12           		IEITHR
  35E7   45   49   54 		.ASCII "EITHER "
  35EA   48   45   52 
  35ED   20           
  35EE   00           		0
  35EF   01           		1
  35F0   0F           		IELSE
  35F1   45   4C   53 		.ASCII "ELSE "
  35F4   45   20      
  35F6   01           		1
  35F7   05           		5
  35F8   2F           		IEMPTP
  35F9   45   4D   50 		.ASCII "EMPTY? "
  35FC   54   59   3F 
  35FF   20           
  3600   00           		0
  3601   00           		0
  3602   24           		IEND
  3603   45   4E   44 		.ASCII "END "
  3606   20           
  3607   02           		2
  3608   03           		3
  3609   45           		IEQUAL
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-300
NLOGO	SYSTEM TABLES

  360A   45   51   55 		.ASCII "EQUAL? "
  360D   41   4C   3F 
  3610   20           
  3611   00           		0
  3612   00           		0
  3613   38           		IERASE
  3614   45   52   20 		.ASCII "ER "
  3617   00           		0
  3618   00           		0
  3619   38           		IERASE
  361A   45   52   41 		.ASCII "ERASE "
  361D   53   45   20 
  3620   01           		1
  3621   05           		5
  3622   1F           		IFIRST
  3623   46   20      		.ASCII "F "
  3625   01           		1
  3626   00           		0
  3627   26           		IFORWD
  3628   46   44   20 		.ASCII "FD "
  362B   01           		1
  362C   05           		5
  362D   1F           		IFIRST
  362E   46   49   52 		.ASCII "FIRST "
  3631   53   54   20 
  3634   01           		1
  3635   00           		0
  3636   26           		IFORWD
  3637   46   4F   52 		.ASCII "FORWARD "
  363A   57   41   52 
  363D   44   20      
  363F   02           		2
  3640   00           		0
  3641   34           		IFPUT
  3642   46   50   55 		.ASCII "FPUT "
  3645   54   20      
  3647   00           		0
  3648   00           		0
  3649   69           		IFULL
  364A   46   55   4C 		.ASCII "FULL "
  364D   4C   20      
  364F   01           		1
  3650   00           		0
  3651   19           		IGO
  3652   47   4F   20 		.ASCII "GO "
  3655   00           		0
  3656   00           		0
  3657   1B           		IGDBYE
  3658   47   4F   4F 		.ASCII "GOODBYE "
  365B   44   42   59 
  365E   45   20      
  3660   02           		2
  3661   04           		4
  3662   42           		IGREAT
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-301
NLOGO	SYSTEM TABLES

  3663   47   52   45 		.ASCII "GREATER? "
  3666   41   54   45 
  3669   52   3F   20 
  366C   00           		0
  366D   00           		0
  366E   31           		IHIDET
  366F   48   49   44 		.ASCII "HIDETURTLE "
  3672   45   54   55 
  3675   52   54   4C 
  3678   45   20      
  367A   00           		0
  367B   00           		0
  367C   65           		IHDING
  367D   48   45   41 		.ASCII "HEADING "
  3680   44   49   4E 
  3683   47   20      
  3685   00           		0
  3686   00           		0
  3687   2C           		IHOME
  3688   48   4F   4D 		.ASCII "HOME "
  368B   45   20      
  368D   00           		0
  368E   00           		0
  368F   31           		IHIDET
  3690   48   54   20 		.ASCII "HT "
  3693   01           		1
  3694   00           		0
  3695   17           		IIF
  3696   49   46   20 		.ASCII "IF "
  3699   01           		1
  369A   08           		8
  369B   68           		IINT
  369C   49   4E   54 		.ASCII "INT "
  369F   20           
  36A0   01           		1
  36A1   08           		8
  36A2   68           		IINT
  36A3   49   4E   54 		.ASCII "INTEGER "
  36A6   45   47   45 
  36A9   52   20      
  36AB   01           		1
  36AC   05           		5
  36AD   21           		ILAST
  36AE   4C   20      		.ASCII "L "
  36B0   01           		1
  36B1   05           		5
  36B2   21           		ILAST
  36B3   4C   41   53 		.ASCII "LAST "
  36B6   54   20      
  36B8   01           		1
  36B9   00           		0
  36BA   29           		ILEFT
  36BB   4C   45   46 		.ASCII "LEFT "
  36BE   54   20      
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-302
NLOGO	SYSTEM TABLES

  36C0   02           		2
  36C1   04           		4
  36C2   43           		ILESS
  36C3   4C   45   53 		.ASCII "LESS? "
  36C6   53   3F   20 
  36C9   FD           		-3
  36CA   05           		5
  36CB   2A           		ILIST
  36CC   4C   49   53 		.ASCII "LIST "
  36CF   54   20      
  36D1   01           		1
  36D2   05           		5
  36D3   59           		ILISTP
  36D4   4C   49   53 		.ASCII "LIST? "
  36D7   54   3F   20 
  36DA   02           		2
  36DB   00           		0
  36DC   53           		ILPUT
  36DD   4C   50   55 		.ASCII "LPUT "
  36E0   54   20      
  36E2   01           		1
  36E3   00           		0
  36E4   29           		ILEFT
  36E5   4C   54   20 		.ASCII "LT "
  36E8   02           		2
  36E9   00           		0
  36EA   06           		IMAKE
  36EB   4D   41   4B 		.ASCII "MAKE "
  36EE   45   20      
  36F0   00           		0
  36F1   00           		0
  36F2   6A           		IMIX
  36F3   4D   49   58 		.ASCII "MIX "
  36F6   20           
  36F7   00           		0
  36F8   00           		0
  36F9   37           		INAMES
  36FA   4E   41   4D 		.ASCII "NAMES "
  36FD   45   53   20 
  3700   00           		0
  3701   00           		0
  3702   66           		INDSPL
  3703   4E   44   20 		.ASCII "ND "
  3706   00           		0
  3707   00           		0
  3708   66           		INDSPL
  3709   4E   4F   44 		.ASCII "NODISPLAY "
  370C   49   53   50 
  370F   4C   41   59 
  3712   20           
  3713   01           		1
  3714   02           		2
  3715   14           		INOT
  3716   4E   4F   54 		.ASCII "NOT "
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-303
NLOGO	SYSTEM TABLES

  3719   20           
  371A   01           		1
  371B   05           		5
  371C   5A           		INMBRP
  371D   4E   55   4D 		.ASCII "NUMBER? "
  3720   42   45   52 
  3723   3F   20      
  3725   01           		1
  3726   00           		0
  3727   07           		IOTPUT
  3728   4F   50   20 		.ASCII "OP "
  372B   01           		1
  372C   00           		0
  372D   07           		IOTPUT
  372E   4F   55   54 		.ASCII "OUTPUT "
  3731   50   55   54 
  3734   20           
  3735   00           		0
  3736   00           		0
  3737   0E           		IPAUSE
  3738   50   41   55 		.ASCII "PAUSE "
  373B   53   45   20 
  373E   00           		0
  373F   00           		0
  3740   2E           		IPENDN
  3741   50   44   20 		.ASCII "PD "
  3744   00           		0
  3745   00           		0
  3746   2E           		IPENDN
  3747   50   45   4E 		.ASCII "PENDOWN "
  374A   44   4F   57 
  374D   4E   20      
  374F   00           		0
  3750   00           		0
  3751   2D           		IPENUP
  3752   50   45   4E 		.ASCII "PENUP "
  3755   55   50   20 
  3758   00           		0
  3759   00           		0
  375A   35           		IPO
  375B   50   4F   20 		.ASCII "PO "
  375E   00           		0
  375F   00           		0
  3760   47           		IPOTS
  3761   50   4F   54 		.ASCII "POTS "
  3764   53   20      
  3766   FE           		-2
  3767   00           		0
  3768   09           		IPRINT
  3769   50   52   20 		.ASCII "PR "
  376C   FE           		-2
  376D   00           		0
  376E   09           		IPRINT
  376F   50   52   49 		.ASCII "PRINT "
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-304
NLOGO	SYSTEM TABLES

  3772   4E   54   20 
  3775   FE           		-2
  3776   00           		0
  3777   0A           		ITYPE
  3778   50   52   49 		.ASCII "PRINT1 "
  377B   4E   54   31 
  377E   20           
  377F   00           		0
  3780   00           		0
  3781   35           		IPO
  3782   50   52   49 		.ASCII "PRINTOUT "
  3785   4E   54   4F 
  3788   55   54   20 
  378B   00           		0
  378C   00           		0
  378D   49           		IPROCS
  378E   50   52   4F 		.ASCII "PROCEDURES "
  3791   43   45   44 
  3794   55   52   45 
  3797   53   20      
  3799   02           		2
  379A   07           		7
  379B   40           		IPROD
  379C   50   52   4F 		.ASCII "PRODUCT "
  379F   44   55   43 
  37A2   54   20      
  37A4   00           		0
  37A5   00           		0
  37A6   2D           		IPENUP
  37A7   50   55   20 		.ASCII "PU "
  37AA   02           		2
  37AB   07           		7
  37AC   41           		IQUOT
  37AD   51   55   4F 		.ASCII "QUOTIENT "
  37B0   54   49   45 
  37B3   4E   54   20 
  37B6   00           		0
  37B7   00           		0
  37B8   54           		IRANDM
  37B9   52   41   4E 		.ASCII "RANDOM "
  37BC   44   4F   4D 
  37BF   20           
  37C0   00           		0
  37C1   00           		0
  37C2   57           		IRNDMZ
  37C3   52   41   4E 		.ASCII "RANDOMIZE "
  37C6   44   4F   4D 
  37C9   49   5A   45 
  37CC   20           
  37CD   00           		0
  37CE   00           		0
  37CF   55           		ICTYI
  37D0   52   43   20 		.ASCII "RC "
  37D3   01           		1
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-305
NLOGO	SYSTEM TABLES

  37D4   00           		0
  37D5   39           		IREAD
  37D6   52   45   41 		.ASCII "READ "
  37D9   44   20      
  37DB   00           		0
  37DC   00           		0
  37DD   55           		ICTYI
  37DE   52   45   41 		.ASCII "READCHARACTER "
  37E1   44   43   48 
  37E4   41   52   41 
  37E7   43   54   45 
  37EA   52   20      
  37EC   02           		2
  37ED   00           		0
  37EE   5D           		IRPEAT
  37EF   52   45   50 		.ASCII "REPEAT "
  37F2   45   41   54 
  37F5   20           
  37F6   00           		0
  37F7   00           		0
  37F8   3B           		IREQST
  37F9   52   45   51 		.ASCII "REQUEST "
  37FC   55   45   53 
  37FF   54   20      
  3801   00           		0
  3802   00           		0
  3803   3D           		IRETRV
  3804   52   45   54 		.ASCII "RETRIEVE "
  3807   52   49   45 
  380A   56   45   20 
  380D   01           		1
  380E   00           		0
  380F   28           		IRIGHT
  3810   52   49   47 		.ASCII "RIGHT "
  3813   48   54   20 
  3816   00           		0
  3817   00           		0
  3818   3B           		IREQST
  3819   52   51   20 		.ASCII "RQ "
  381C   01           		1
  381D   00           		0
  381E   28           		IRIGHT
  381F   52   54   20 		.ASCII "RT "
  3822   01           		1
  3823   00           		0
  3824   18           		IRUN
  3825   52   55   4E 		.ASCII "RUN "
  3828   20           
  3829   01           		1
  382A   00           		0
  382B   3A           		ISAVE
  382C   53   41   56 		.ASCII "SAVE "
  382F   45   20      
  3831   FD           		-3
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-306
NLOGO	SYSTEM TABLES

  3832   05           		5
  3833   10           		ISNTNC
  3834   53   45   20 		.ASCII "SE "
  3837   FD           		-3
  3838   05           		5
  3839   10           		ISNTNC
  383A   53   45   4E 		.ASCII "SENTENCE "
  383D   54   45   4E 
  3840   43   45   20 
  3843   01           		1
  3844   00           		0
  3845   61           		ISETH
  3846   53   45   54 		.ASCII "SETH "
  3849   48   20      
  384B   01           		1
  384C   00           		0
  384D   61           		ISETH
  384E   53   45   54 		.ASCII "SETHEADING "
  3851   48   45   41 
  3854   44   49   4E 
  3857   47   20      
  3859   01           		1
  385A   00           		0
  385B   62           		ISETT
  385C   53   45   54 		.ASCII "SETT "
  385F   54   20      
  3861   01           		1
  3862   00           		0
  3863   62           		ISETT
  3864   53   45   54 		.ASCII "SETTURTLE "
  3867   54   55   52 
  386A   54   4C   45 
  386D   20           
  386E   01           		1
  386F   00           		0
  3870   5E           		ISETX
  3871   53   45   54 		.ASCII "SETX "
  3874   58   20      
  3876   02           		2
  3877   00           		0
  3878   60           		ISETXY
  3879   53   45   54 		.ASCII "SETXY "
  387C   58   59   20 
  387F   01           		1
  3880   00           		0
  3881   5F           		ISETY
  3882   53   45   54 		.ASCII "SETY "
  3885   59   20      
  3887   00           		0
  3888   00           		0
  3889   30           		ISHOWT
  388A   53   48   4F 		.ASCII "SHOWTURTLE "
  388D   57   54   55 
  3890   52   54   4C 
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-307
NLOGO	SYSTEM TABLES

  3893   45   20      
  3895   00           		0
  3896   00           		0
  3897   30           		ISHOWT
  3898   53   54   20 		.ASCII "ST "
  389B   00           		0
  389C   00           		0
  389D   08           		ISTOP
  389E   53   54   4F 		.ASCII "STOP "
  38A1   50   20      
  38A3   02           		2
  38A4   06           		6
  38A5   3E           		ISUM
  38A6   53   55   4D 		.ASCII "SUM "
  38A9   20           
  38AA   00           		0
  38AB   00           		0
  38AC   46           		ITRCBK
  38AD   54   42   20 		.ASCII "TB "
  38B0   01           		1
  38B1   05           		5
  38B2   25           		ITEXT
  38B3   54   45   58 		.ASCII "TEXT "
  38B6   54   20      
  38B8   00           		0
  38B9   00           		0
  38BA   13           		ITHEN
  38BB   54   48   45 		.ASCII "THEN "
  38BE   4E   20      
  38C0   01           		1
  38C1   05           		5
  38C2   3C           		ITHING
  38C3   54   48   49 		.ASCII "THING "
  38C6   4E   47   20 
  38C9   01           		1
  38CA   05           		5
  38CB   01           		ITHNGP
  38CC   54   48   49 		.ASCII "THING? "
  38CF   4E   47   3F 
  38D2   20           
  38D3   00           		0
  38D4   00           		0
  38D5   33           		ITITLE
  38D6   54   49   20 		.ASCII "TI "
  38D9   00           		0
  38DA   00           		0
  38DB   33           		ITITLE
  38DC   54   49   54 		.ASCII "TITLE "
  38DF   4C   45   20 
  38E2   00           		0
  38E3   00           		0
  38E4   48           		ITITLS
  38E5   54   49   54 		.ASCII "TITLES "
  38E8   4C   45   53 
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-308
NLOGO	SYSTEM TABLES

  38EB   20           
  38EC   00           		0
  38ED   00           		0
  38EE   22           		ITO
  38EF   54   4F   20 		.ASCII "TO "
  38F2   00           		0
  38F3   00           		0
  38F4   46           		ITRCBK
  38F5   54   52   41 		.ASCII "TRACEBACK "
  38F8   43   45   42 
  38FB   41   43   4B 
  38FE   20           
  38FF   00           		0
  3900   00           		0
  3901   32           		ITSTAT
  3902   54   53   20 		.ASCII "TS "
  3905   00           		0
  3906   00           		0
  3907   32           		ITSTAT
  3908   54   55   52 		.ASCII "TURTLESTATE "
  390B   54   4C   45 
  390E   53   54   41 
  3911   54   45   20 
  3914   FD           		-3
  3915   05           		5
  3916   02           		IWORD
  3917   57   4F   52 		.ASCII "WORD "
  391A   44   20      
  391C   01           		1
  391D   05           		5
  391E   03           		IWORDP
  391F   57   4F   52 		.ASCII "WORD? "
  3922   44   3F   20 
  3925   00           		0
  3926   00           		0
  3927   63           		IXCOR
  3928   58   43   4F 		.ASCII "XCOR "
  392B   52   20      
  392D   00           		0
  392E   00           		0
  392F   64           		IYCOR
  3930   59   43   4F 		.ASCII "YCOR "
  3933   52   20      
  3935   00           		0
  3936   00           		0
  3937   15           		ILPAR
  3938   28   20      		.ASCII "( "
  393A   00           		0
  393B   00           		0
  393C   16           		IRPAR
  393D   29   20      		.ASCII ") "
  393F   02           		2
  3940   07           		7
  3941   4E           		INPROD
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-309
NLOGO	SYSTEM TABLES

  3942   2A   20      		.ASCII "* "
  3944   02           		2
  3945   06           		6
  3946   4C           		INSUM
  3947   2B   20      		.ASCII "+ "
  3949   02           		2
  394A   06           		6
  394B   4D           		INDIF
  394C   2D   20      		.ASCII "- "
  394E   00           		0
  394F   00           		0
  3950   1A           		IBPT
  3951   2E   42   50 		.ASCII ".BPT "
  3954   54   20      
  3956   01           		1
  3957   05           		5
  3958   58           		ICALL
  3959   2E   43   41 		.ASCII ".CALL "
  395C   4C   4C   20 
  395F   02           		2
  3960   00           		0
  3961   4B           		IPOKE
  3962   2E   44   45 		.ASCII ".DEPOSIT "
  3965   50   4F   53 
  3968   49   54   20 
  396B   01           		1
  396C   00           		0
  396D   4A           		IPEEK
  396E   2E   45   58 		.ASCII ".EXAMINE "
  3971   41   4D   49 
  3974   4E   45   20 
  3977   00           		0
  3978   00           		0
  3979   1C           		IGCOLL
  397A   2E   47   43 		.ASCII ".GCOLL "
  397D   4F   4C   4C 
  3980   20           
  3981   00           		0
  3982   00           		0
  3983   1D           		INODES
  3984   2E   4E   4F 		.ASCII ".NODES "
  3987   44   45   53 
  398A   20           
  398B   02           		2
  398C   07           		7
  398D   4F           		INQUOT
  398E   2F   20      		.ASCII "/ "
  3990   00           		0
  3991   00           		0
  3992   44           		ICOMNT
  3993   3B   20      		.ASCII "; "
  3995   02           		2
  3996   04           		4
  3997   51           		INLESS
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-310
NLOGO	SYSTEM TABLES

  3998   3C   20      		.ASCII "< "
  399A   02           		2
  399B   03           		3
  399C   52           		INEQUL
  399D   3D   20      		.ASCII "= "
  399F   02           		2
  39A0   04           		4
  39A1   50           		INGRTR
  39A2   3E   20      		.ASCII "> "
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-311
NLOGO	SYSTEM TABLES

                      	;	V-Primitive table:
                      	;	(Ghost-memory bank 2)
                      
       D9A4           	VPRMTB	=.+TDIFF
                      
  39A4   4C           		INSUM
  39A5   03   26      		.WORD INFSUM
  39A7   01           		1
  39A8   4D           		INDIF
  39A9   03   28      		.WORD INFDIF
  39AB   01           		1
  39AC   15           		ILPAR
  39AD   03   0E      		.WORD LPAR
  39AF   01           		1
  39B0   16           		IRPAR
  39B1   03   20      		.WORD RPAR
  39B3   01           		1
  39B4   17           		IIF
  39B5   03   0C      		.WORD LIF
  39B7   01           		1
  39B8   0F           		IELSE
  39B9   03   08      		.WORD LELSE
  39BB   01           		1
  39BC   13           		ITHEN
  39BD   03   12      		.WORD LTHEN
  39BF   01           		1
  39C0   37           		INAMES
  39C1   03   16      		.WORD NAMES
  39C3   01           		1
  39C4   36           		IALL
  39C5   03   00      		.WORD ALL
  39C7   01           		1
  39C8   48           		ITITLS
  39C9   03   24      		.WORD TITLES
  39CB   01           		1
  39CC   49           		IPROCS
  39CD   03   1E      		.WORD PROCS
  39CF   01           		1
  39D0   24           		IEND
  39D1   03   0A      		.WORD LEND
  39D3   01           		1
  39D4   35           		IPO
  39D5   03   18      		.WORD PO
  39D7   01           		1
  39D8   35           		IPO
  39D9   03   1C      		.WORD PRNTOT
  39DB   02           		2
  39DC   47           		IPOTS
  39DD   03   1A      		.WORD POTS
  39DF   01           		1
  39E0   38           		IERASE
  39E1   03   04      		.WORD ER
  39E3   01           		1
  39E4   38           		IERASE
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-312
NLOGO	SYSTEM TABLES

  39E5   03   06      		.WORD ERASE
  39E7   02           		2
  39E8   33           		ITITLE
  39E9   03   22      		.WORD TI
  39EB   01           		1
  39EC   33           		ITITLE
  39ED   03   14      		.WORD LTITLE
  39EF   02           		2
  39F0   08           		ISTOP
  39F1   03   10      		.WORD LSTOP
  39F3   01           		1
  39F4   44           		ICOMNT
  39F5   03   02      		.WORD COMMNT
  39F7   01           		1
       D9F8           	VPRMTE	=.+TDIFF
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-313
NLOGO	SYSTEM TABLES

                      	;	Miscellaneous text strings:
                      	;	(Ghost-memory page 2)
                      
       D9F8           	HELSTR=.+TDIFF
  39F8   57   65   6C 		.ASCII "Welcome to Apple Logo!"
  39FB   63   6F   6D 
  39FE   65   20   74 
  3A01   6F   20   41 
  3A04   70   70   6C 
  3A07   65   20   4C 
  3A0A   6F   67   6F 
  3A0D   21           
  3A0E   0D           		$0D
  3A0F   50   72   65 		.ASCII "Preliminary Version"
  3A12   6C   69   6D 
  3A15   69   6E   61 
  3A18   72   79   20 
  3A1B   56   65   72 
  3A1E   73   69   6F 
  3A21   6E           
  3A22   0D           		$0D
  3A23   41   73   73 		.ASCII "Assembled 8/06/80"	;(Use correct date when assembling)
  3A26   65   6D   62 
  3A29   6C   65   64 
  3A2C   20   38   2F 
  3A2F   30   36   2F 
  3A32   38   30      
  3A34   0D           		$0D
  3A35   00           		$00
       DA36           	LBUG1=.+TDIFF
  3A36   4C   4F   47 		.ASCII "LOGO bug; exiting..."
  3A39   4F   20   62 
  3A3C   75   67   3B 
  3A3F   20   65   78 
  3A42   69   74   69 
  3A45   6E   67   2E 
  3A48   2E   2E      
  3A4A   0D           		$0D
  3A4B   00           		$00
       DA4C           	RDRER1=.+TDIFF
  3A4C   52   65   61 		.ASCII "Reader error: Too many sublists"
  3A4F   64   65   72 
  3A52   20   65   72 
  3A55   72   6F   72 
  3A58   3A   20   54 
  3A5B   6F   6F   20 
  3A5E   6D   61   6E 
  3A61   79   20   73 
  3A64   75   62   6C 
  3A67   69   73   74 
  3A6A   73           
  3A6B   0D           		$0D
  3A6C   00           		$00
       DA6D           	RDRER2=.+TDIFF
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-314
NLOGO	SYSTEM TABLES

  3A6D   59   6F   75 		.ASCII "You have mismatched brackets"
  3A70   20   68   61 
  3A73   76   65   20 
  3A76   6D   69   73 
  3A79   6D   61   74 
  3A7C   63   68   65 
  3A7F   64   20   62 
  3A82   72   61   63 
  3A85   6B   65   74 
  3A88   73           
  3A89   0D           		$0D
  3A8A   00           		$00
       DA8B           	ZPMSG1=.+TDIFF
  3A8B   4E   6F   20 		.ASCII "No storage left!"
  3A8E   73   74   6F 
  3A91   72   61   67 
  3A94   65   20   6C 
  3A97   65   66   74 
  3A9A   21           
  3A9B   0D           		$0D
  3A9C   00           		$00
       DA9D           	ZPMSG2=.+TDIFF
  3A9D   53   74   6F 		.ASCII "Stopped!"
  3AA0   70   70   65 
  3AA3   64   21      
  3AA5   0D           		$0D
  3AA6   00           		$00
       DAA7           	ZPMSG3=.+TDIFF
  3AA7   45   76   61 		.ASCII "Evaluator overflow!"
  3AAA   6C   75   61 
  3AAD   74   6F   72 
  3AB0   20   6F   76 
  3AB3   65   72   66 
  3AB6   6C   6F   77 
  3AB9   21           
  3ABA   0D           		$0D
  3ABB   00           		$00
       DABC           	WRNMSG=.+TDIFF
  3ABC   50   6C   65 		.ASCII "Please ERASE something:"
  3ABF   61   73   65 
  3AC2   20   45   52 
  3AC5   41   53   45 
  3AC8   20   73   6F 
  3ACB   6D   65   74 
  3ACE   68   69   6E 
  3AD1   67   3A      
  3AD3   0D           		$0D
  3AD4   00           		$00
       DAD5           	ERRM1=.+TDIFF
  3AD5   41   74   20 		.ASCII "At level "
  3AD8   6C   65   76 
  3ADB   65   6C   20 
  3ADE   00           		$00
       DADF           	ERRM2=.+TDIFF
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-315
NLOGO	SYSTEM TABLES

  3ADF   20   69   6E 		.ASCII " in line "
  3AE2   20   6C   69 
  3AE5   6E   65   20 
  3AE8   00           		$00
       DAE9           	ERRM3=.+TDIFF
  3AE9   20   6F   66 		.ASCII " of "
  3AEC   20           
  3AED   00           		$00
       DAEE           	ERRM4=.+TDIFF
  3AEE   20   69   73 		.ASCII " is too big for "
  3AF1   20   74   6F 
  3AF4   6F   20   62 
  3AF7   69   67   20 
  3AFA   66   6F   72 
  3AFD   20           
  3AFE   00           		$00
       DAFF           	SENDM=.+TDIFF
  3AFF   20   64   65 		.ASCII " defined"
  3B02   66   69   6E 
  3B05   65   64      
  3B07   0D           		$0D
  3B08   00           		$00
       DB09           	PNMSG1=.+TDIFF
  3B09   20   69   73 		.ASCII " is "
  3B0C   20           
  3B0D   00           		$00
       DB0E           	PNMSG2=.+TDIFF
  3B0E   4D   41   4B 		.ASCII "MAKE "
  3B11   45   20      
  3B13   00           		$00
       DB14           	TBMSG1=.+TDIFF
  3B14   57   65   27 		.ASCII "We're now at top-level."
  3B17   72   65   20 
  3B1A   6E   6F   77 
  3B1D   20   61   74 
  3B20   20   74   6F 
  3B23   70   2D   6C 
  3B26   65   76   65 
  3B29   6C   2E      
  3B2B   0D           		$0D
  3B2C   00           		$00
       DB2D           	TBMSG2=.+TDIFF
  3B2D   57   65   27 		.ASCII "We're currently inside "
  3B30   72   65   20 
  3B33   63   75   72 
  3B36   72   65   6E 
  3B39   74   6C   79 
  3B3C   20   69   6E 
  3B3F   73   69   64 
  3B42   65   20      
  3B44   00           		$00
       DB45           	CHGMSG=.+TDIFF
  3B45   20   20   20 		.ASCII "        APPLE LOGO SCREEN EDITOR        "
  3B48   20   20   20 
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-316
NLOGO	SYSTEM TABLES

  3B4B   20   20   41 
  3B4E   50   50   4C 
  3B51   45   20   4C 
  3B54   4F   47   4F 
  3B57   20   53   43 
  3B5A   52   45   45 
  3B5D   4E   20   45 
  3B60   44   49   54 
  3B63   4F   52   20 
  3B66   20   20   20 
  3B69   20   20   20 
  3B6C   20           
  3B6D   00           		$00
       DB6E           	TOMSG=.+TDIFF
  3B6E   54   4F   20 		.ASCII "TO "
  3B71   00           		$00
       DB72           	ENDMSG=.+TDIFF
  3B72   45   4E   44 		.ASCII "END"
  3B75   0D           		$0D
  3B76   00           		$00
       DB77           	WAITM=.+TDIFF
  3B77   50   6C   65 		.ASCII "Please wait..."
  3B7A   61   73   65 
  3B7D   20   77   61 
  3B80   69   74   2E 
  3B83   2E   2E      
  3B85   0D           		$0D
  3B86   00           		$00
       DB87           	SAVEM=.+TDIFF
  3B87   8D           		$8D
  3B88   84           		$84			;^D for DOS
  3B89   C2           		$C2			;B	these have their high
  3B8A   D3           		$D3			;S	bits turned on because
  3B8B   C1           		$C1			;A	that's the way that
  3B8C   D6           		$D6			;V	Apple does it and DOS
  3B8D   C5           		$C5			;E	understands it.
  3B8E   00           		$00
       DB8F           	SAVEM2=.+TDIFF
  3B8F   AC           		$AC			;,
  3B90   C1           		$C1			;A
  3B91   A4           		$A4			;$
  3B92   B2           		$B2			;2
  3B93   B0           		$B0			;0
  3B94   B0           		$B0			;0
  3B95   B0           		$B0			;0
  3B96   AC           		$AC			;,
  3B97   CC           		$CC			;L
  3B98   A4           		$A4			;$
  3B99   00           		$00
       DB9A           	LOADM=.+TDIFF
  3B9A   8D           		$8D
  3B9B   84           		$84		;^D for DOS
  3B9C   C2           		$C2		;B
  3B9D   CC           		$CC		;L
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-317
NLOGO	SYSTEM TABLES

  3B9E   CF           		$CF		;O
  3B9F   C1           		$C1		;A
  3BA0   C4           		$C4		;D
  3BA1   00           		$00
       DBA2           	DELETM=.+TDIFF
  3BA2   8D           		$8D
  3BA3   84           		$84
  3BA4   C4           		$C4		;D
  3BA5   C5           		$C5		;E
  3BA6   CC           		$CC		;L
  3BA7   C5           		$C5		;E
  3BA8   D4           		$D4		;T
  3BA9   C5           		$C5		;E
  3BAA   00           		$00
       DBAB           	CATLGM=.+TDIFF
  3BAB   8D           		$8D
  3BAC   84           		$84
  3BAD   C3           		$C3		;C
  3BAE   C1           		$C1		;A
  3BAF   D4           		$D4		;T
  3BB0   C1           		$C1		;A
  3BB1   CC           		$CC		;L
  3BB2   CF           		$CF		;O
  3BB3   C7           		$C7		;G
  3BB4   8D           		$8D
  3BB5   00           		$00
       DBB6           	LOGOM=.+TDIFF
  3BB6   AE           		$AE
  3BB7   CC           		$CC
  3BB8   CF           		$CF
  3BB9   C7           		$C7
  3BBA   CF           		$CF
  3BBB   00           		$00
                      
                      	;Start of Sine table (91 4-byte flonums, first 2 bytes only)
       DBBA           	SINTB1=.-2+TDIFF
  3BBC   00           		$00
  3BBD   00           		$00
                      
  3BBE   7A           		$7A
  3BBF   47           		$47
                      
  3BC0   7B           		$7B
  3BC1   47           		$47
                      
  3BC2   7B           		$7B
  3BC3   6B           		$6B
                      
  3BC4   7C           		$7C
  3BC5   47           		$47
                      
  3BC6   7C           		$7C
  3BC7   59           		$59
                      
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-318
NLOGO	SYSTEM TABLES

  3BC8   7C           		$7C
  3BC9   6B           		$6B
                      
  3BCA   7C           		$7C
  3BCB   7C           		$7C
                      
  3BCC   7D           		$7D
  3BCD   47           		$47
                      
  3BCE   7D           		$7D
  3BCF   50           		$50
                      
  3BD0   7D           		$7D
  3BD1   58           		$58
                      
  3BD2   7D           		$7D
  3BD3   61           		$61
                      
  3BD4   7D           		$7D
  3BD5   6A           		$6A
                      
  3BD6   7D           		$7D
  3BD7   73           		$73
                      
  3BD8   7D           		$7D
  3BD9   7B           		$7B
                      
  3BDA   7E           		$7E
  3BDB   42           		$42
                      
  3BDC   7E           		$7E
  3BDD   46           		$46
                      
  3BDE   7E           		$7E
  3BDF   4A           		$4A
                      
  3BE0   7E           		$7E
  3BE1   4F           		$4F
                      
  3BE2   7E           		$7E
  3BE3   53           		$53
                      
  3BE4   7E           		$7E
  3BE5   57           		$57
                      
  3BE6   7E           		$7E
  3BE7   5B           		$5B
                      
  3BE8   7E           		$7E
  3BE9   5F           		$5F
                      
  3BEA   7E           		$7E
  3BEB   64           		$64
                      
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-319
NLOGO	SYSTEM TABLES

  3BEC   7E           		$7E
  3BED   68           		$68
                      
  3BEE   7E           		$7E
  3BEF   6C           		$6C
                      
  3BF0   7E           		$7E
  3BF1   70           		$70
                      
  3BF2   7E           		$7E
  3BF3   74           		$74
                      
  3BF4   7E           		$7E
  3BF5   78           		$78
                      
  3BF6   7E           		$7E
  3BF7   7C           		$7C
                      
  3BF8   7F           		$7F
  3BF9   40           		$40
                      
  3BFA   7F           		$7F
  3BFB   41           		$41
                      
  3BFC   7F           		$7F
  3BFD   43           		$43
                      
  3BFE   7F           		$7F
  3BFF   45           		$45
                      
  3C00   7F           		$7F
  3C01   47           		$47
                      
  3C02   7F           		$7F
  3C03   49           		$49
                      
  3C04   7F           		$7F
  3C05   4B           		$4B
                      
  3C06   7F           		$7F
  3C07   4D           		$4D
                      
  3C08   7F           		$7F
  3C09   4E           		$4E
                      
  3C0A   7F           		$7F
  3C0B   50           		$50
                      
  3C0C   7F           		$7F
  3C0D   52           		$52
                      
  3C0E   7F           		$7F
  3C0F   53           		$53
                      
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-320
NLOGO	SYSTEM TABLES

  3C10   7F           		$7F
  3C11   55           		$55
                      
  3C12   7F           		$7F
  3C13   57           		$57
                      
  3C14   7F           		$7F
  3C15   58           		$58
                      
  3C16   7F           		$7F
  3C17   5A           		$5A
                      
  3C18   7F           		$7F
  3C19   5C           		$5C
                      
  3C1A   7F           		$7F
  3C1B   5D           		$5D
                      
  3C1C   7F           		$7F
  3C1D   5F           		$5F
                      
  3C1E   7F           		$7F
  3C1F   60           		$60
                      
  3C20   7F           		$7F
  3C21   62           		$62
                      
  3C22   7F           		$7F
  3C23   63           		$63
                      
  3C24   7F           		$7F
  3C25   64           		$64
                      
  3C26   7F           		$7F
  3C27   66           		$66
                      
  3C28   7F           		$7F
  3C29   67           		$67
                      
  3C2A   7F           		$7F
  3C2B   68           		$68
                      
  3C2C   7F           		$7F
  3C2D   6A           		$6A
                      
  3C2E   7F           		$7F
  3C2F   6B           		$6B
                      
  3C30   7F           		$7F
  3C31   6C           		$6C
                      
  3C32   7F           		$7F
  3C33   6D           		$6D
                      
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-321
NLOGO	SYSTEM TABLES

  3C34   7F           		$7F
  3C35   6E           		$6E
                      
  3C36   7F           		$7F
  3C37   6F           		$6F
                      
  3C38   7F           		$7F
  3C39   71           		$71
                      
  3C3A   7F           		$7F
  3C3B   72           		$72
                      
  3C3C   7F           		$7F
  3C3D   73           		$73
                      
  3C3E   7F           		$7F
  3C3F   74           		$74
                      
  3C40   7F           		$7F
  3C41   74           		$74
                      
  3C42   7F           		$7F
  3C43   75           		$75
                      
  3C44   7F           		$7F
  3C45   76           		$76
                      
  3C46   7F           		$7F
  3C47   77           		$77
                      
  3C48   7F           		$7F
  3C49   78           		$78
                      
  3C4A   7F           		$7F
  3C4B   79           		$79
                      
  3C4C   7F           		$7F
  3C4D   79           		$79
                      
  3C4E   7F           		$7F
  3C4F   7A           		$7A
                      
  3C50   7F           		$7F
  3C51   7B           		$7B
                      
  3C52   7F           		$7F
  3C53   7B           		$7B
                      
  3C54   7F           		$7F
  3C55   7C           		$7C
                      
  3C56   7F           		$7F
  3C57   7C           		$7C
                      
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-322
NLOGO	SYSTEM TABLES

  3C58   7F           		$7F
  3C59   7D           		$7D
                      
  3C5A   7F           		$7F
  3C5B   7D           		$7D
                      
  3C5C   7F           		$7F
  3C5D   7E           		$7E
                      
  3C5E   7F           		$7F
  3C5F   7E           		$7E
                      
  3C60   7F           		$7F
  3C61   7E           		$7E
                      
  3C62   7F           		$7F
  3C63   7F           		$7F
                      
  3C64   7F           		$7F
  3C65   7F           		$7F
                      
  3C66   7F           		$7F
  3C67   7F           		$7F
                      
  3C68   7F           		$7F
  3C69   7F           		$7F
                      
  3C6A   7F           		$7F
  3C6B   7F           		$7F
                      
  3C6C   7F           		$7F
  3C6D   7F           		$7F
                      
  3C6E   7F           		$7F
  3C6F   7F           		$7F
                      
  3C70   80           		$80
  3C71   40           		$40
                      
  3C72   80           		$80	;Extra entry for interpolation routine
  3C73   40           		$40
                      
                      	;Start of Sine table (91 4-byte flonums, second 2 bytes only)
       DC72           	SINTB2=.-2+TDIFF
  3C74   00           		$00
  3C75   00           		$00
                      
  3C76   7C           		$7C
  3C77   2D           		$2D
                      
  3C78   79           		$79
  3C79   63           		$63
                      
  3C7A   2F           		$2F
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-323
NLOGO	SYSTEM TABLES

  3C7B   1D           		$1D
                      
  3C7C   6E           		$6E
  3C7D   3E           		$3E
                      
  3C7E   3F           		$3F
  3C7F   5B           		$5B
                      
  3C80   09           		$09
  3C81   82           		$82
                      
  3C82   CB           		$CB
  3C83   51           		$51
                      
  3C84   41           		$41
  3C85   B2           		$B2
                      
  3C86   18           		$18
  3C87   2E           		$2E
                      
  3C88   E8           		$E8
  3C89   6A           		$6A
                      
  3C8A   B1           		$B1
  3C8B   B7           		$B7
                      
  3C8C   73           		$73
  3C8D   67           		$67
                      
  3C8E   2C           		$2C
  3C8F   C9           		$C9
                      
  3C90   DD           		$DD
  3C91   30           		$30
                      
  3C92   41           		$41
  3C93   F7           		$F7
                      
  3C94   90           		$90
  3C95   2B           		$2B
                      
  3C96   D8           		$D8
  3C97   DF           		$DF
                      
  3C98   1B           		$1B
  3C99   BD           		$BD
                      
  3C9A   58           		$58
  3C9B   6F           		$6F
                      
  3C9C   8E           		$8E
  3C9D   A2           		$A2
                      
  3C9E   BE           		$BE
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-324
NLOGO	SYSTEM TABLES

  3C9F   01           		$01
                      
  3CA0   E6           		$E6
  3CA1   38           		$38
                      
  3CA2   06           		$06
  3CA3   F5           		$F5
                      
  3CA4   1F           		$1F
  3CA5   E5           		$E5
                      
  3CA6   30           		$30
  3CA7   B6           		$B6
                      
  3CA8   39           		$39
  3CA9   17           		$17
                      
  3CAA   38           		$38
  3CAB   B9           		$B9
                      
  3CAC   2F           		$2F
  3CAD   4A           		$4A
                      
  3CAE   1C           		$1C
  3CAF   7C           		$7C
                      
  3CB0   00           		$00
  3CB1   00           		$00
                      
  3CB2   EC           		$EC
  3CB3   C5           		$C5
                      
  3CB4   D4           		$D4
  3CB5   65           		$65
                      
  3CB6   B6           		$B6
  3CB7   BB           		$BB
                      
  3CB8   93           		$93
  3CB9   A2           		$A2
                      
  3CBA   6A           		$6A
  3CBB   F4           		$F4
                      
  3CBC   3C           		$3C
  3CBD   8C           		$8C
                      
  3CBE   08           		$08
  3CBF   46           		$46
                      
  3CC0   CD           		$CD
  3CC1   FF           		$FF
                      
  3CC2   8D           		$8D
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-325
NLOGO	SYSTEM TABLES

  3CC3   92           		$92
                      
  3CC4   46           		$46
  3CC5   DD           		$DD
                      
  3CC6   F9           		$F9
  3CC7   BE           		$BE
                      
  3CC8   A6           		$A6
  3CC9   12           		$12
                      
  3CCA   4B           		$4B
  3CCB   B9           		$B9
                      
  3CCC   EA           		$EA
  3CCD   91           		$91
                      
  3CCE   82           		$82
  3CCF   7A           		$7A
                      
  3CD0   13           		$13
  3CD1   54           		$54
                      
  3CD2   9D           		$9D
  3CD3   00           		$00
                      
  3CD4   1F           		$1F
  3CD5   5F           		$5F
                      
  3CD6   9A           		$9A
  3CD7   53           		$53
                      
  3CD8   0D           		$0D
  3CD9   BF           		$BF
                      
  3CDA   79           		$79
  3CDB   85           		$85
                      
  3CDC   DD           		$DD
  3CDD   89           		$89
                      
  3CDE   39           		$39
  3CDF   B0           		$B0
                      
  3CE0   8D           		$8D
  3CE1   DE           		$DE
                      
  3CE2   D9           		$D9
  3CE3   F9           		$F9
                      
  3CE4   1D           		$1D
  3CE5   E7           		$E7
                      
  3CE6   59           		$59
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-326
NLOGO	SYSTEM TABLES

  3CE7   8F           		$8F
                      
  3CE8   8C           		$8C
  3CE9   D7           		$D7
                      
  3CEA   B7           		$B7
  3CEB   A8           		$A8
                      
  3CEC   D9           		$D9
  3CED   EC           		$EC
                      
  3CEE   F3           		$F3
  3CEF   8A           		$8A
                      
  3CF0   04           		$04
  3CF1   6D           		$6D
                      
  3CF2   0C           		$0C
  3CF3   80           		$80
                      
  3CF4   0B           		$0B
  3CF5   AF           		$AF
                      
  3CF6   01           		$01
  3CF7   E5           		$E5
                      
  3CF8   EF           		$EF
  3CF9   0F           		$0F
                      
  3CFA   D3           		$D3
  3CFB   1A           		$1A
                      
  3CFC   AD           		$AD
  3CFD   F6           		$F6
                      
  3CFE   7F           		$7F
  3CFF   90           		$90
                      
  3D00   47           		$47
  3D01   D9           		$D9
                      
  3D02   06           		$06
  3D03   C1           		$C1
                      
  3D04   BC           		$BC
  3D05   38           		$38
                      
  3D06   68           		$68
  3D07   32           		$32
                      
  3D08   0A           		$0A
  3D09   A0           		$A0
                      
  3D0A   A3           		$A3
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-327
NLOGO	SYSTEM TABLES

  3D0B   75           		$75
                      
  3D0C   32           		$32
  3D0D   A6           		$A6
                      
  3D0E   B8           		$B8
  3D0F   29           		$29
                      
  3D10   33           		$33
  3D11   F1           		$F1
                      
  3D12   A5           		$A5
  3D13   F6           		$F6
                      
  3D14   0E           		$0E
  3D15   2E           		$2E
                      
  3D16   6C           		$6C
  3D17   92           		$92
                      
  3D18   C1           		$C1
  3D19   1B           		$1B
                      
  3D1A   0B           		$0B
  3D1B   C1           		$C1
                      
  3D1C   4C           		$4C
  3D1D   7E           		$7E
                      
  3D1E   83           		$83
  3D1F   4F           		$4F
                      
  3D20   B0           		$B0
  3D21   2E           		$2E
                      
  3D22   D3           		$D3
  3D23   18           		$18
                      
  3D24   EC           		$EC
  3D25   0A           		$0A
                      
  3D26   FB           		$FB
  3D27   02           		$02
                      
  3D28   00           		$00
  3D29   00           		$00
                      
  3D2A   00           		$00	;Extra entry for interpolation routine
  3D2B   00           		$00
                      
       3D2C           	ENDTAB=.	;End of Ghost-memory bank 2 storage
                      
       1FFA           	.=SYSTAB*$100-$1006
  1FFA   4C   00   40 		JMP LOGO	;Vector for BRUN to work from DOS
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-328
NLOGO	SYSTEM TABLES

  1FFD   4C   2A   40 		JMP LOGO1	;Re-entry point for crash or GOODBYE
                      
       95F5           	.=$95F5		;(Causes assembler to signal error if program crashes into DOS)
  95F5   00           		$00
       0000           	.END
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-329
NLOGO	SYMBOL TABLE

ABSWAP  697C    	ABSWP1  6985    	ACC   = 0045    	ADD     696A    
ADDDIG  4D14    	ADDEND  69D2    	ADDLP1  4D1C    	ADDL1A  4D1E    
ADDNML  4D09    	ADDNUM  4D06    	ADDTK1  4BBE    	ADDTK2  4BBC    
ADDTOK  4BBF    	ADD1    696D    	ADHAK4  4F5D    	ADHAK5  5183    
ADHAK6  518D    	ADHAK7  5198    	ADHAK8  4FF1    	ADHAK9  5013    
ADHK11  51C7    	ADHK13  5776    	ADHK21  60F3    	ADHK55  5C9D    
ADHK7A  519E    	ALL   = 0300    	ALLSTC  4D98    	ALNSWP  69D6    
ALSTC1  4DB7    	ALSTC3  4DC6    	ALSTC4  4DBD    	AL1     424A    
AL2     4272    	ANSN  = 00B2    	ANSNX = 00C2    	ANSN1 = 00B3    
ANSN2 = 00C0    	ANSN3 = 00C1    	APCOUT= FDED    	APOUT   7259    
AREA1 = 001C    	AREA2 = 001E    	ARGLOP  4228    	ARGLP1  422F    
ARG1  = 00A2    	ARG2  = 009E    	ATMTFX  5902    	ATMTXX  5904    
ATMT3   5925    	ATMT4   5928    	ATMT4A  592C    	ATMT4E  5952    
ATMT41  5967    	ATMT5   596A    	ATMT5L  596E    	ATM1    4B12    
ATM12A  4BD1    	ATM12B  4BC6    	ATM2    4B2B    	ATOM  = 0001    
A1H   = 003D    	A1L   = 003C    	A1PC    7442    	A1PCLP  7445    
A1PCRT  744C    	A2H   = 003F    	A2L   = 003E    	A3H   = 0041    
A3L   = 0040    	A4H   = 0043    	A4L   = 0042    	A5H   = 0045    
A5L   = 0044    	BACKUP  6F25    	BACK2   6F33    	BACK3   6F41    
BACK4   6F63    	BACK5   6F6D    	BANK4K= 0055    	BASARY= 0800    
BASLIN= 0028    	BBASX = CFFC    	BCALC   757F    	BCALCA  7581    
BCALC2  7590    	BCKSPC  7687    	BELL    7516    	BELL1   751D    
BIGBAS= D000    	BIGLEN= 2660    	BLANK   73E8    	BL1     73E4    
BREAK1  7267    	BRTS    7528    	BSLTMP= 002A    	BSWTCH  748E    
BSW1    74A2    	BTLSTA  8C1B    	BTLSTL  8C37    	BTLSTR  8C18    
BTLSTX  8C3D    	BTLSW   8C46    	BTLSWE  8CA0    	BTLSW1  8C70    
BTLSW2  8C81    	BTLSW3  8C8D    	BTLWE1  8CBF    	BTLWE2  8CF7    
BTLWE3  8CE9    	BTLWE4  8D03    	BTLWE5  8D08    	BTLWL1  8CB2    
BTLWL2  8CB7    	BUFFER= 0001    	CANCEL  76DA    	CATLGM= DBAB    
CELPTR= 009C    	CENTER  6E23    	CH    = 0024    	CHBUF = 0069    
CHGIN1  6CEF    	CHGIN2  6CCF    	CHGIN3  6C84    	CHGLOP  6AF1    
CHGLPB  6B22    	CHGLPC  6B28    	CHGLPD  6B2B    	CHGLPF  6B31    
CHGLPH  6B37    	CHGLPL  6B3D    	CHGLPO  6B43    	CHGLPP  6B49    
CHGLPU  6B4F    	CHGLRB  6B55    	CHGMSG= DB45    	CHGNEW  6C8A    
CHGNLP  6C9B    	CHGNON  6C7B    	CHGNYM  6CFE    	CHGN2   6CBE    
CHGOLD  6C5D    	CHGSR1  6C6D    	CHGSR2  6C72    	CHGSR4  6C75    
CHGSR5  6C78    	CHGSTP  6C2A    	CHGST1  6C2E    	CHGX1   6CDA    
CHKEVL  42A5    	CHKEV2  42B3    	CHKEV3  42BD    	CHKEV4  42C7    
CHKEV5  42D1    	CHKEV6  42DB    	CHKEV7  42E5    	CHKINT  5876    
CHKIN2  5880    	CHKIOK  587E    	CHKLNN  4098    	CHKNNT  5888    
CHRSRC  72F8    	CHRTBL  94CB    	CLEOL1  759D    	CLEOL2  759F    
CLEOP1  74FA    	CLMK1   512E    	CLMK2   512A    	CLMK3   5126    
CLMK4   5122    	CLMK5   511E    	CLRCBF  7279    	CLREOL  759B    
CLREOP  74F6    	CLRFLT  9104    	CLRLP1  4F55    	CLRMRK  639D    
CLRNG1  4CC5    	CMPL1   78E0    	CNCODD  8B3A    	CNCTW   8B47    
CNCTWE  8B31    	CNCTW1  8B63    	CNCTW2  8B6E    	CNCT1   8B01    
CNMR    4C8F    	CNSNM1  8EEC    	CNSPDL  65BA    	CNSSTR  4B8B    
CNSTF1  8EFB    	CNTDWN  6DFC    	CNTLOP  6E03    	CNTLP2  6E0C    
CNUML1  4BE8    	CNUML2  4C90    	CNUM2A  4CA3    	CNUM2B  4C9C    
CNUM2C  4CAB    	CNUM2D  4CB6    	CNUM2R  4CBD    	CNUM2X  4CC1    
COLR  = 00DF    	COMMNT= 0302    	COMPL   78DD    	COMPL1  6A02    
CONCAT  8AF4    	CONS    530F    	CONSG1  5396    	CONSNM  8EDD    
CONSR   53AE    	CONSTF  8EF5    	CONST2  53A0    	CONS2   53B5    
CONS2A  53BB    	CONTIG  5BB8    	COPY    8B93    	COPYW   8BB3    
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-330
NLOGO	SYMBOL TABLE

COPYWE  8BF7    	COPY1   8BA3    	COUNTM  6DE2    	COUT    750C    
COUTZ   753B    	COUT1   7529    	CR      7547    	CRMON   74CA    
CROUT   75A7    	CSPD1   65CA    	CSWH  = 0037    	CSWL  = 0036    
CURTOK= 0063    	CV    = 0025    	CVBFIX  676E    	CVBL1   678E    
CVBNMF  6795    	CVBNMR  6786    	CVFIX   675C    	CVFIXX  6768    
CVFLO   67A7    	CVFX1   6782    	CVFX2   6784    	DATAOT  73BD    
DATOM = 0009    	DBUGSW= 000A    	DCOFLG= 000D    	DECPNT  6AB3    
DECPT2  6ABE    	DEFNER  5FF4    	DEFNWE  5FC6    	DEFNXE  5FED    
DEFNX1  5FDA    	DEFUN   5F3D    	DEFUNW  5F82    	DEFUNX  5FCE    
DEFUN1  5F4A    	DELETE  6E75    	DELETM= DBA2    	DELET2  6E83    
DERCOD= 00DE    	DERROR  708C    	DIG     7308    	DIGITP  4E40    
DIGN    4E44    	DIGP1   4E46    	DIGY    4E3E    	DIV1    6A15    
DIV2    6A18    	DIV3    6A22    	DIV4    6A27    	DLNGFG= AAB6    
DLTW    56E7    	DLTWE   573D    	DLTWF   5728    	DLTW1   5711    
DLTW2   56EB    	DONE    7963    	DOSEAT= A851    	DOSERR= 00D8    
DOSSTP  70BA    	DPRHEX  716A    	DPRH1   7172    	DPRLEN  714F    
DPR2HX  7161    	DSERET= 9D5A    	DSKFUL  70B0    	DSPFL1= 0033    
DSPFL2= 007F    	DTPATM  721F    	DTPTMW  722C    	DV2     7936    
D0AD    92EF    	D0AE    92F0    	D0A2    92E4    	D0F3    93F8    
D0F9    9302    	D01B    9265    	D02E    9285    	D062    92B5    
D063    92B6    	D075    92C6    	D088    92CB    	D09B    92DE    
D091    92D4    	D094    92D7    	D099    92DC    	D1AD    93A0    
D1BC    93AF    	D1B2    93A5    	D1CF    93CB    	D1EA    93E6    
D1EB    93E7    	D1EC    93E8    	D11C    9325    	D111    931A    
D12B    9333    	D12D    9335    	D121    932A    	D123    932C    
D125    932E    	D127    9330    	D14A    9352    	D151    9358    
D153    935A    	D164    935E    	D17C    9374    	D197    938C    
D3AC    9446    	D3ACL   9448    	D3AC1   944F    	EBFEND= 3FFB    
ECMP2   881B    	ECMP3   882B    	ECMP4   8835    	EDBOD = 009A    
EDBUF = 2000    	EDDONE  6B5B    	EDDON2  6B67    	EDIN    446C    
EDIN1   4482    	EDIN2   446E    	EDLERR  4E82    	EDLINE  4E49    
EDL1    4EE4    	EDOPCR  6BC0    	EDORTS  6AEE    	EDOUT   6AD5    
EDOUT1  6AE6    	EDPBUF  6B8F    	EDPCHR  6BC7    	EDPCH2  6BDB    
EDPCR1  6BC3    	EDPRS2  6C03    	EDPRS3  6C0E    	EDPRTS  6BEC    
EDSPBF  6B87    	EDSPB1  6BA5    	EDSPCR  6BE4    	EDSPLP  6B97    
EDSW  = 0008    	EDTATM= 0084    	EDTSR1  5B0D    	EDTSR2  5B12    
EDTSR3  5B15    	EDTSR4  5B18    	EDTSR5  5B1B    	EDTSTP  5AD1    
EL1     8294    	EL1R    82CB    	EMPTWD  4B06    	EMTWD1  4B04    
ENDBUF= 00C7    	ENDMSG= DB72    	ENDTAB= 3D2C    	EPOINT= 00C5    
EPRMPT= 003E    	EQ      81CA    	EQA     823C    	EQA1    8246    
EQF     8211    	EQFC    821D    	EQFF    81FA    	EQFLP   8230    
EQF1    822E    	EQF2    822B    	EQL     8208    	EQLIST  8257    
EQLST1  8262    	EQO     81E8    	EQO1    81EE    	EQPOP   8205    
ER    = 0304    	ERASE = 0306    	ERDBK1  6B81    	ERNAMS  88AD    
ERNMSW  88BC    	ERNMWE  88E0    	ERNMX   88E8    	ERNMX1  88F4    
ERPROS  8882    	ERPRSW  888A    	ERRFLG= 0010    	ERRM1 = DAD5    
ERRM2 = DADF    	ERRM3 = DAE9    	ERRM4 = DAEE    	ERROR   6142    
ERROR1  47CD    	ERROR2  4854    	ERRO1   6154    	ERRRET= 0012    
ERRTBL= D0D8    	ERRW    6184    	ERRWE   61D6    	ERRWE1  61E3    
ERRW1   61C2    	ERRW2   61C7    	ERRW3   61C9    	ERRW4   61CE    
ERRZ1   61A6    	ERRZ2   61AC    	ERR1    6217    	ERR1A   47E3    
ERR1B   4843    	ERR2A   4869    	ERR2A1  4860    	ERR2A2  4882    
EVAL    4141    	EVAL1   45AB    	EVEX1   42F3    	EVLEXP  4131    
EVLINE  40DE    	EVLIN1  4110    	EVLNO   42F1    	EVLN1   40F7    
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-331
NLOGO	SYMBOL TABLE

EVLN1A  4126    	EVLN1P  4114    	EVLOK   42EF    	EVLUAT  40AD    
EVRETN  4552    	EVRET1  455C    	EVRET2  4578    	EVRTN1  4556    
EVWRAP  44D6    	EVW2    44FB    	EW1     4580    	EW1A    45A5    
EXCED   42FB    	EXFW    5A4F    	EXFWA1  5A69    	EXFWC   5AAB    
EXFWD   5AB9    	EXFWE   5A5D    	EXFWR   5A68    	EXFW2   5A96    
EXFW3   5AC1    	EXFW4   5ACB    	EXIFSC  5A45    	EXIFWB  5A8E    
EXPOUT= 0006    	EXTEDT  8369    	FADD    69A9    	FADDGN  4D40    
FADDGX  4D27    	FADDG1  4D54    	FADDG2  4D55    	FADDIG  4D3A    
FADD1   69C9    	FADNML  4C29    	FBODY = 0070    	FBODY1= 0072    
FCIRC   9501    	FCIRC1  9505    	FCKEN   4C58    	FCMPLN  6F05    
FCOMPL  69FF    	FCONS   532F    	FDIV    69BB    	FDIVD   6A0D    
FDLNW   54FD    	FDLNWE  5546    	FDLNWF  5552    	FDLNW3  552F    
FDVD10  4D69    	FDV10L  4D6B    	FFIXP   6A72    	FFIXP1  6A85    
FFIXR   6A71    	FFIX1   6A95    	FILLEN= AA60    	FINTK1  4B85    
FIX   = 0003    	FLIST = 000C    	FLLIN   5626    	FLNFND  70AB    
FLO   = 0004    	FLOTN1  6938    	FLOTN2  692F    	FLT10   94FD    
FMDECI  4C7F    	FMUL    69B6    	FMULT   69E7    	FMUL1   69F0    
FMUL2   69F8    	FNCAL1  45B7    	FNDIGD  4C34    	FNDLIN  54E2    
FNORM   69A4    	FORCHR  6EDA    	FORCH2  6EE8    	FORCH3  6F08    
FORCH4  6F10    	FORCH5  6F1A    	FPACK = 000B    	FPTR  = 0076    
FRAME = 006C    	FRLIST= 005F    	FSUB    69AE    	FSUBX   69B1    
FSUB1   69C3    	FULCHR= 0006    	FUNCAL  45B0    	FUNCT = 0067    
FUNTYP= 000E    	FUN1    45CB    	FXDIG   4C72    	FXPOS   4C62    
GANSN2= 00D7    	GARCOL  6258    	GBDGR   5982    	GCHK    90F1    
GCLEAR  9259    	GCLERR  638E    	GCLP1   63A7    	GCLP1A  63B3    
GCLP2   626E    	GCLP2A  627E    	GCLP3   6292    	GCLP3A  62B9    
GCLP3X  629E    	GCLP4   62C3    	GCLP5   62D8    	GCLP5A  62ED    
GCLP5B  62F8    	GCLP5E  62FC    	GCLP6   6345    	GCLP6C  6362    
GCLP6D  6373    	GCLP6E  6379    	GCLP6F  6368    	GCOL1   630A    
GCOL1L  630E    	GCR     7752    	GCVEND= 009E    	GCVST = 0088    
GDELET  76AC    	GDLDON  76C7    	GDLINE  9070    	GDLIN1  907A    
GDLTLP  76B4    	GETFUN  568D    	GETHED  91B2    	GETHIG  4E87    
GETINT  689E    	GETLEN  562D    	GETLN   7614    	GETLN3  765E    
GETL1   68A2    	GETNGS  5472    	GETNMB  7325    	GETNUM  58D7    
GETNXT  6FA7    	GETPNM  5983    	GETPRC  52FC    	GETRM1= C08B    
GETRM2= C083    	GETTPE  5DA0    	GETTPF  5DA1    	GETTP4  5D96    
GETTYP  5D7F    	GETVAL  52CC    	GETWDS  5B1E    	GETX    9496    
GETY    94A1    	GHOMEM= 00D0    	GINSDN  7742    	GINSL1  7722    
GINSL2  773C    	GINTP1  6810    	GINTP2  6815    	GLENW   563D    
GLENW1  5641    	GLENW2  5666    	GLINE   93F9    	GNORM   94B6    
GNORM1  94CA    	GNORM2  94BD    	GNXTC   76A9    	GNXTX   76A0    
GO      7481    	GOBDIG  597A    	GOPTR = 0078    	GPOSN   9278    
GPRCS   5302    	GPRCU   530E    	GRPEND= 4000    	GRPHCS= 0009    
GRPHK1  9509    	GRPSTT= 2000    	GRP0  = 00D8    	GRP1  = 00D9    
GRP2  = 00DA    	GRP5  = 00DB    	GRUBOT  7664    	GSAVX   94AC    
GSETH   8FEA    	GSETHR  903B    	GSETHX  8FF2    	GSETX   8FD1    
GSETY   8FDF    	GSHWT1  9081    	GSTX1   8FD9    	GSTY1   8FE7    
GSVXL   94AE    	GTBL1   7A1A    	GTBL2   7A27    	GTBOOL  7A0B    
GTBUF   727E    	GTDC1   690D    	GTDECH  68BB    	GTDL1   68E2    
GTDL3   68FE    	GTDL3E  6905    	GTDOWN  6FCB    	GTDR    68BA    
GTD1    68B2    	GTERR1  584A    	GTERR2  584D    	GTFN1   56AB    
GTFN2   56C6    	GTFR    5605    	GTFULN  55D6    	GTF2    55EF    
GTHE    4ED7    	GTHW    4E98    	GTH3    4ECC    	GTLC2   7A51    
GTLC2A  7A59    	GTLC3   7A61    	GTLNR1  7755    	GTLNR2  7763    
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-332
NLOGO	SYMBOL TABLE

GTLNR3  7707    	GTLNX1  764F    	GTLNX2  7651    	GTLN1C  7680    
GTLN1D  76E5    	GTLN1L  762E    	GTLN1X  763A    	GTLN2A  770D    
GTLSTC  7A45    	GTMP4 = 00DC    	GTNG1   5476    	GTNG2   5483    
GTNML   58F7    	GTNMNO  58EA    	GTNM2   58EC    	GTNUM1  58D5    
GTNUM2  58BB    	GTNXTK  43DB    	GTNXT2  6FB6    	GTNXT3  6FC2    
GTPNW   59D0    	GTPNWE  59E0    	GTPN1   59A0    	GTPN2   59BF    
GTRDP2  7006    	GTRDP3  7016    	GTRDSP  6FF8    	GTRTS   7A19    
GTSZND  5C67    	GTSZW   5C33    	GTSZX   5C4D    	GTSZX1  5C51    
GTSZX2  5C57    	GTTULN  5606    	GTT1    560D    	GT1FIX  585D    
GT1FX1  586E    	GT1NMX  5855    	GT1NUM  5850    	GT2FIX  588A    
GT2FX1  58A7    	GT2FX2  58B3    	GT2NM1  583C    	GT2NM2  5845    
GT2NUM  581F    	GWELSE  5BF2    	GWIF2   5BCB    	GWIF3   5BDA    
GWIF4   5BE5    	GWRTS   5B56    	GW1     5B3E    	GW1A    5B32    
GW1W    5B50    	GW1WA   5B66    	GW1W1   5B6A    	GW1X    5B72    
GW1X2   5B8E    	GW1X3   5B99    	HDPOS   91DE    	HDYNEG  91F6    
HDYNL   91F8    	HDYPOS  9205    	HEADNG= 00D3    	HELSTR= D9F8    
HOME    74EC    	IALL  = 0036    	IBACK = 0027    	IBOTH = 0011    
IBPT  = 001A    	IBTFST= 001E    	IBTLST= 0020    	ICALL = 0058    
ICATLG= 006C    	ICHNGE= 005C    	ICLEAR= 0067    	ICLINP= 005B    
ICNTIN= 000D    	ICOMNT= 0044    	ICS   = 002B    	ICTYI = 0055    
ICURSR= 0056    	IDEBUG= 000C    	IDEFIN= 000B    	IDELET= 006B    
IDIF  = 003F    	IEDIT = 0023    	IEITHR= 0012    	IELSE = 000F    
IEMPTP= 002F    	IEND  = 0024    	IEQUAL= 0045    	IERASE= 0038    
IFIRST= 001F    	IFLEVL= 0082    	IFORWD= 0026    	IFPUT = 0034    
IFP1    54B6    	IFP2    54B8    	IFP3    54E0    	IFULL = 0069    
IGCOLL= 001C    	IGDBYE= 001B    	IGO   = 0019    	IGREAT= 0042    
IHDING= 0065    	IHIDET= 0031    	IHOME = 002C    	IIF   = 0017    
IINT  = 0068    	ILAST = 0021    	ILEFT = 0029    	ILESS = 0043    
ILINE = 0098    	ILIST = 002A    	ILISTP= 0059    	ILPAR = 0015    
ILPUT = 0053    	IMAKE = 0006    	IMIX  = 006A    	INAMES= 0037    
INCEXP  4D76    	INCPNT  6AAC    	INCPT2  6AB2    	INCVE   49D4    
INCVSP  49C4    	INDEV = 0057    	INDIF = 004D    	INDSPL= 0066    
INEQUL= 0052    	INFDIF= 0328    	INFIXP  54AE    	INFSUM= 0326    
INGRTR= 0050    	INITLZ  4F35    	INLESS= 0051    	INMBRP= 005A    
INODES= 001D    	INOT  = 0014    	INPROD= 004E    	INPRT   745E    
INQUOT= 004F    	INSDS1  72A4    	INSERT  6D33    	INSRCR  6D67    
INSRTS  6D60    	INSRT0  6D57    	INSRT1  6D54    	INSRT2  6D61    
INSUM = 004C    	INTERN  5FF9    	INTRNX  6088    	INULL = 0000    
INVFLG= 0032    	IOADR = 00C0    	IOERRR  70A1    	IOPRT   7470    
IOPRT1  747E    	IOTPUT= 0007    	IPAUSE= 000E    	IPEEK = 004A    
IPENDN= 002E    	IPENUP= 002D    	IPO   = 0035    	IPOKE = 004B    
IPOTS = 0047    	IPRINT= 0009    	IPROCS= 0049    	IPROD = 0040    
IQUOT = 0041    	IRANDM= 0054    	IREAD = 0039    	IREQST= 003B    
IRETRV= 003D    	IRIGHT= 0028    	IRNDMZ= 0057    	IRPAR = 0016    
IRPEAT= 005D    	IRQVEC= FFFE    	IRUN  = 0018    	ISAVE = 003A    
ISETH = 0061    	ISETT = 0062    	ISETX = 005E    	ISETXY= 0060    
ISETY = 005F    	ISHOWT= 0030    	ISNTNC= 0010    	ISTOP = 0008    
ISUM  = 003E    	ITEXT = 0025    	ITHEN = 0013    	ITHING= 003C    
ITHNGP= 0001    	ITITLE= 0033    	ITITLS= 0048    	ITO   = 0022    
ITRCBK= 0046    	ITSTAT= 0032    	ITYPE = 000A    	IUNDIF= 0005    
IUNSUM= 0004    	IWORD = 0002    	IWORDP= 0003    	IXCOR = 0063    
IYCOR = 0064    	JFLS    798A    	JTOP    4840    	JTRU    799E    
KBD   = 0000    	KEYIN   75C4    	KILRAM= C08A    	KNONE   75F7    
KPCLR = C010    	KPFLAG= C000    	KRTS    75D9    	KSWH  = 0039    
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-333
NLOGO	SYMBOL TABLE

KSWL  = 0038    	LASTPP= 0328    	LATOM = 000A    	LBRAK = 005E    
LBUG1 = DA36    	LCKFIL  70B5    	LDELET  56D2    	LELSE = 0308    
LEND  = 030A    	LEVNUM= 007C    	LF      754B    	LFALSE= 0050    
LIF   = 030C    	LINARY= 0200    	LINERR  4E7D    	LININC= 000A    
LINNUM= 0074    	LINPEK  5554    	LIST  = 0000    	LNIL  = 0000    
LOADM = DB9A    	LOGO    4000    	LOGOM = DBB6    	LOGO1   402A    
LPAR  = 030E    	LPK1    5566    	LSTKEY= 0013    	LSTOP = 0310    
LT      7404    	LTHEN = 0312    	LTITLE= 0314    	LTPA    6647    
LTPD    6642    	LTPD1   6644    	LTPF    665E    	LTPF1   6664    
LTPL    6653    	LTPLS   666A    	LTPQ    663E    	LTPRTS  673E    
LTPS    664D    	LTRUE = 004E    	LTYPE   65F6    	LTYPL1  6629    
LT2     7406    	MAKFLO  4C85    	MAKPNM  6575    	MARK    63F9    
MARKA   63C0    	MARKX   6401    	MARK1 = 0088    	MARK2 = 008A    
MARK3 = 008C    	MARK4 = 008E    	MARK5 = 0090    	MDEND   69FB    
MD1     6977    	MD2     6A3D    	MD3     6A4B    	MD8CHK  73B4    
MIXCHR= 000C    	MKPN1   65AC    	MKPN2   65B1    	MKPN3   65B7    
MKP2L1  6593    	MKSFUN  519F    	MLN10L  4D5E    	MODE  = 0031    
MON     72DF    	MONBRK  72B6    	MONFLG= 0054    	MONNUM= 000F    
MONZ    72E3    	MOVE    7410    	MOVEUP  6E93    	MOVLOP  4019    
MRKAW   63D5    	MRKAW1  63DF    	MRKAW2  63EB    	MRKCF   646A    
MRKCF1  6475    	MRKCL   6480    	MRKCL1  6491    	MRKCN   646C    
MRKCP   64AE    	MRKCP1  64B3    	MRKCS   647B    	MRKCU   6497    
MRKPW   64C6    	MRKPW1  64E1    	MRKPW2  6513    	MRKPX   6517    
MRKPXE  6523    	MRKPX1  6530    	MRKRTS  63BF    	MRKW    6408    
MRKW1   6412    	MRKW2   642F    	MRKW3   6424    	MTC1W   60D3    
MTC1WE  6111    	MTC1WF  6119    	MTC1W1  60DB    	MTC2W   6026    
MTC2W1  6033    	MULCOS  9208    	MULEND  7851    	MULN10  4D5C    
MULSIN  920D    	MUL2    7817    	MUL4    7830    	MUL4A   7845    
MUL4B   783C    	MUL4C   7848    	MVCONT  6D8C    	MVDOWN  6D6F    
MVLOOP  6D7E    	MVRTS   6D9F    	MVRTS1  6DA5    	MVULOP  6EAB    
MVULP2  6EB9    	MVURTS  6ECB    	NAMES = 0316    	NARGS = 0005    
NARG1 = 00A2    	NARG2 = 009E    	NCNTIG  5BB6    	NCONS   5347    
NEST  = 007E    	NEWLIN= 0001    	NEWLST= 0002    	NEWWIN  6FEB    
NEXTC   7637    	NEXTOK= 0065    	NFLDG1  4C4B    	NFLDIG  4C40    
NMIVEC= FFFA    	NMROL1  4CDC    	NMROR1  4CE5    	NNODES= 00C3    
NODLIM= 0966    	NODTST= 0032    	NORM    7906    	NORMX   69FD    
NORM1   6996    	NOTNM1  597F    	NOTNM2  5981    	NOTNUM  4B4F    
NPRVLN  762C    	NTDIG   735D    	NTFIX1  4C54    	NTFIX2  4C1A    
NTFIX3  4C17    	NTFRST  4BAB    	NTFX2A  4C20    	NTLST   8D48    
NTNUM   4C8E    	NULOUT  6AF0    	NUMOK   4C15    	NUMOVF  4D94    
NWARN   4836    	NXTA1   738A    	NXTA4   7384    	NXTBAS  7316    
NXTBIT  730E    	NXTBS2  7320    	NXTCHR  732B    	NXTCHS  4B61    
NXTE    4BE5    	NXTITM  72F1    	NXTSCR  6E28    	NXTSC2  6E34    
NXTTWO  4B58    	OBFNF   605B    	OBFNFE  6069    	OBFW    600A    
OBLIST= 0092    	OFSET1= 3400    	OLDBRK  72D9    	OLDWIN  6FDB    
OPLINE  7027    	OPLIN1  7035    	OPLRTS  7041    	OTPFIX  57B8    
OTPFLO  57B4    	OTPFL1  57B2    	OTPFXA  57CD    	OTPFX1  579D    
OTPNUM  57CF    	OTPRG1  7E1F    	OTPUTN= 0007    	OUTDEV= 0058    
OUTPRT  746A    	OVCHK   6A52    	OVFL    6A56    	OVFL1   6AA7    
PARLOP  4302    	PARLP1  430F    	PARLP3  4339    	PARLP4  4318    
PARLP7  431C    	PAUSKY= 001A    	PCH   = 003B    	PCL   = 003A    
PDLBAS= 0E00    	PEN   = 00C9    	PFERR   847E    	PGMSTT= 4000    
PLLP1   668C    	PLLP1A  6695    	PLLP2   6689    	PLOP1   43E7    
PLOP1B  440E    	PLSTLP  6677    	PNMSG1= DB09    	PNMSG2= DB0E    
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-334
NLOGO	SYMBOL TABLE

PNTBEG  6ABF    	PO    = 0318    	PODEFL= 0086    	POFNSW  853C    
POFUNS  8532    	PONAMS  8485    	PONRTS  84C1    	PONW1   848D    
PONW1E  84AD    	PONW2   84B5    	PONW2A  84C2    	PON1    84D2    
PON1A   84E1    	PON1B   8502    	PON1C   8528    	POP     5267    
POPB    5299    	POPB1   52A6    	POPFRM  51EA    	POPJ    411E    
POPTZS  684B    	POP1    5274    	POTEXT  855E    	POTS  = 031A    
POTXTF  8653    	POTXTL  8599    	PPFM2   51FD    	PPTTP   47EB    
PPTTP1  47EF    	PPTT2   480B    	PRA1    7399    	PRBLNK  72AB    
PRBL2   72AD    	PRBL3   72AF    	PRBYTE  73CD    	PRDFLG= 0056    
PRDLIN  49D9    	PRDLNX  49ED    	PRD2    49E3    	PRD3    49E5    
PRECED= 0004    	PREVLN  761D    	PRHEX   73D6    	PRHEXC  73E1    
PRHEXZ  73D8    	PRMTAB= D501    	PRNTAX  729D    	PRNTOT= 031C    
PRNTX   72A0    	PRNTYX  729C    	PROCS = 031E    	PRTHNG  6607    
PRTPDL  6748    	PRTPL1  674B    	PRTPL2  6753    	PRTS    5430    
PRTSTR  5490    	PRVSCR  6E46    	PRYX2   739D    	PSHP1   5236    
PSHP2   524D    	PTEXTX  8560    	PTFER   5E3A    	PTFN1   57F1    
PTFN2   57FB    	PTFTXE  5E39    	PTFTXT  5DA3    	PTFTX2  5DB7    
PTFTX3  5E19    	PTLN1   4F13    	PTRDEC  49B8    	PTRRTS  54A5    
PTRXOK  612A    	PTRYOK  6135    	PTSPNM  5454    	PTSTR1  549B    
PTVBUG  49B5    	PTVTST  49A9    	PTXEND  85E4    	PTXERR  8596    
PTXFW   8673    	PTXFWE  86A4    	PTXFW1  867F    	PTXFW2  8695    
PTXFX   86AC    	PTXFX1  86B3    	PTXFX2  86D1    	PTXFX3  86D8    
PTXFX4  86EE    	PTXFX5  86F6    	PTXFY   86FB    	PTXFYE  872C    
PTXFY1  8707    	PTXFY2  871D    	PTXLW   85AF    	PTXLWE  85D8    
PTXLX   85E0    	PTXLX1  85EB    	PTXLX2  861F    	PTXLY   8624    
PTXLYE  864D    	PTXRTS  85DF    	PULCHR= 0010    	PUSH    5237    
PUSHP   5220    	PUTFUN  57E6    	PUTLIN  4EFA    	PUTTPE  53FA    
PUTTP2  53FB    	PUTTYP  53EB    	PUTVAL  52E4    	QATOM = 0008    
QPRMPT= 003F    	RANDA = 0091    	RANDC = 002B    	RANDOM= 0052    
RCMPLN  6E72    	RDKEY   75BC    	RDKEY1  75DA    	RDLNW   4A0F    
RDLNWE  4A15    	RDL1    4A32    	RDL1A   4A2E    	RDL1A1  4A19    
RDL1A2  4A1F    	RDL1B   4A34    	RDRER1= DA4C    	RDRER2= DA6D    
RDSPNT  6DA6    	RDSPT2  6DBF    	RDSPT3  6DD4    	RDSP1   736B    
READLN  49D5    	REDISP  6E15    	REDLN1  49E8    	REGCEL= 0003    
REGDSP  735E    	REGZ    74B2    	REINIT  4F69    	RESETT  7287    
RESTOR  74D2    	RESTR1  74D7    	RETADR= 0011    	RGDSP1  7361    
RH1     4445    	RINLP2  505E    	RMUL2   8A07    	RMUL3   8A0C    
RMUL4   8A12    	RNDL  = 004A    	RNDLP1  8A1E    	RNDM1   8A26    
ROFLOW  77B2    	ROR1    69E1    	RPAR  = 0320    	RPRMPT= 003C    
RSTBND  5777    	RSTBW   5787    	RSTBWE  579C    	RSTERR  4A3C    
RSTIO   726C    	RSTR    7278    	RSTVEC= FFFC    	RTAR    69D8    
RTBL    94F8    	RTLOG   69DB    	RTLOG1  69DF    	RTMSKZ  7299    
RTSA2X  59BE    	RTS1    69A8    	RTS2    5B0C    	RTS3    5D64    
RTS30   88AC    	RTS4B   7398    	RTS4C   73CC    	RTS5    73FB    
RTS9    8375    	RUBOT2  6E6C    	RUBOUT  6E5E    	RUNFLG= 000B    
RUNHAN  4416    	RWAIT   7758    	SAPOUT  725E    	SARLEN= 0600    
SARTOP= 005D    	SATOM = 0007    	SAVE    74DD    	SAVEM = DB87    
SAVEM2= DB8F    	SAVSR1  7144    	SAVSR2  7149    	SAVSR3  714C    
SAVST1  70E7    	SAV1    74DF    	SBFA    893B    	SBFA1   895A    
SBFA1A  895E    	SBFB    8990    	SBFB1   899E    	SBFC    897D    
SBFC1   8988    	SBFD    89B8    	SBFD1   89C9    	SBFD2   89CE    
SBFL    8928    	SBFNF   611A    	SBFR    8925    	SBFW    6078    
SBFWEN  6086    	SBFWJ   6127    	SBFWX   607A    	SBFW1   60B1    
SBHAK1  49C3    	SBK     910F    	SBK1    9122    	SBOTH   79CF    
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-335
NLOGO	SYMBOL TABLE

SBPT    51E4    	SBST1A  5163    	SBTFST  8909    	SBTLST  8BFC    
SBVLL1  5043    	SBVLPJ  5040    	SBVLP1  4FC4    	SBVRW   4FF9    
SBVRWE  5029    	SBVRW1  5008    	SCALL   8A7E    	SCALLR= 8A89    
SCALL1  8A8A    	SCATLG  71E8    	SCHG1   7EB6    	SCHNGE  7EC5    
SCHNG2  7ECE    	SCLEAR  8DB3    	SCLINP  8DAD    	SCMMTG  4413    
SCMMT1  7C5E    	SCNTIN  7C8B    	SCOMMT  7C51    	SCONS   5350    
SCONS1  5369    	SCONS2  536E    	SCRL1   755B    	SCRL2   7571    
SCRL3   757A    	SCRN2   7293    	SCROLL  7555    	SCRSR1  8A79    
SCS     8DB9    	SCS1    8DE2    	SCS2    8DFA    	SCTYI   8A34    
SCURSR  8A54    	SDBG1   7C79    	SDEBUG  7C63    	SDEFIN  7FD3    
SDELET  7042    	SDELR2  7075    	SDELR3  7078    	SDFNRR  80E4    
SDFNR1  800B    	SDFNR2  800E    	SDIF    77C4    	SDIFF   77E7    
SDIFL1  77D0    	SDIVF   7874    	SDIVID  7861    	SDVD1   787C    
SDVD1A  788A    	SDVD2   7899    	SDVD3   78A8    	SDVD4   78B4    
SDVLP1  7868    	SDVLP2  787E    	SEDIT   8376    	SEDIT1  838F    
SEITHR  79ED    	SELSE   7CE7    	SELSE1  7D0D    	SELSE2  7D05    
SEMPTP  8D4B    	SEMPT1  8D6D    	SEND    83B9    	SENDM = DAFF    
SENDR   83E3    	SEND1   83C0    	SEND2   83DD    	SEQEND  82CE    
SEQUAL  81A7    	SERAP   8845    	SERAR1  8856    	SERAR2  885D    
SERAR3  887D    	SERASB  8860    	SERASE  87EC    	SERAS1  87F3    
SERPS   883F    	SERR4   7FB3    	SETARG  90E4    	SETHL   9021    
SETIFL  7457    	SETINV  7451    	SETKBD  745A    	SETMDZ  7401    
SETMOD  73FC    	SETNRM  7455    	SETREV  744D    	SETTXT  75F9    
SETVID  7466    	SFD     912E    	SFDP1   9177    	SFDP2   91A7    
SFDX    914A    	SFD1    9141    	SFIRST  80E7    	SFPT1   7A90    
SFPUT   7A71    	SFRST1  8105    	SFRST2  8114    	SFRST3  8118    
SFULL   905E    	SFUN  = 0005    	SGCE    7EA3    	SGCOLL  7EA0    
SGO     7D12    	SGOE1   7D7B    	SGOR    7D86    	SGOW    7D3C    
SGOW1   7D44    	SGOW2   7D73    	SGO1    7D28    	SGRLP1  797F    
SGRTFM  79AB    	SGRTF1  79AF    	SGRTR   7970    	SGRTRF  79A1    
SGRTRM  798D    	SGRTRP  797D    	SGRTRX  7973    	SGRTR1  7975    
SHDING  8E40    	SHFT    791B    	SHFTX   791A    	SHIDET  904F    
SHOME   8E1B    	SIF     7C94    	SIFA    7C9F    	SIF1    7CB5    
SIF2    7CC4    	SIF3    7CD1    	SIF3A   7CC1    	SINODS= F660    
SINT    78D0    	SINTB1= DBBA    	SINTB2= DC72    	SINT1   78D8    
SIZE1 = 0018    	SIZE2 = 001A    	SKPPTH  59E9    	SKPPW   5A0F    
SKPPW2  5A36    	SLAST   8146    	SLESS   79B8    	SLFDLP  4DD3    
SLF1    4DF8    	SLF2    4DE6    	SLF3    4E0A    	SLIST   8D73    
SLISTP  8D1E    	SLISTW  8D89    	SLIST1  8D7B    	SLPTW   7B0F    
SLPT2   7B48    	SLPUT   7A99    	SLPUT1  7ABF    	SLPUT2  7AD5    
SLSTWE  8D9D    	SLST1   8165    	SLST2   8179    	SLST3   819D    
SLT     8E6F    	SLT1    8E82    	SMAKE   7C02    	SMAKE1  7C17    
SMAKE2  7C21    	SMIX    9067    	SNDIF2  778B    	SNDSPL  8DFD    
SNMBRP  8D2D    	SNODES  7E69    	SNOT    79C1    	SNSM1   78CD    
SOBLP1  4FA8    	SOBLST= 0059    	SOBST1  5133    	SOBTOP= 005B    
SOTPT1  7C3B    	SOTPT2  7C32    	SOUTPT  7C2A    	SP    = 0014    
SPEEK   89D8    	SPENDN  8E11    	SPENUP  8E07    	SPKERR  89F8    
SPKR  = C030    	SPNT  = 0049    	SPO     83E6    	SPOKE   89E8    
SPON    8414    	SPOTS   8430    	SPO1    83F1    	SPO1A   8440    
SPO2    841C    	SPO3    8426    	SPO4    8455    	SPO5    8467    
SPO5A   8438    	SPO5S   8477    	SPRDL1  7810    	SPRDL2  7824    
SPRD1   7803    	SPRD2   780C    	SPRINT  7FB6    	SPROD   77EF    
SPRODF  7856    	SPRODR  785E    	SPTHNG  7E29    	SPTH1   7E3C    
SPTH2   7E39    	SPTH3   7E4B    	SPWRDP  7E4E    	SRANDM  89FB    
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-336
NLOGO	SYMBOL TABLE

SRDEDL  44CE    	SRDF1   7184    	SRDF2   71DA    	SRD1A   44A1    
SRD1E   44B9    	SRD1F   44C3    	SREAD   7177    	SREAD1  445C    
SREAD2  4496    	SREAD3  449A    	SRED1A  4460    	SREPT1  7DD2    
SREQU   7E7B    	SREQU1  7E90    	SRETRV  7EA6    	SRNDMZ  8A2D    
SRPEAT  7D8D    	SRPLOP  7DA5    	SRPLP1  7DB0    	SRPLP2  7DBB    
SRT     8E48    	SRTRE   7EC0    	SRTX    8E64    	SRT1    8E5B    
SRUN    7DDF    	SRUN1   7DF1    	SSAVE   70DA    	SSETD   901F    
SSETDL  9005    	SSETH   8F54    	SSETH2  902F    	SSETH3  9036    
SSETT   8F68    	SSETTD  8F8E    	SSETTL  8F7E    	SSETTR  8FCE    
SSETX   8EFF    	SSETXY  8F30    	SSETY   8F16    	SSHOWT  9040    
SSHWTR  904C    	SSMLP1  779D    	SSNERR  7BF2    	SSNTNC  7B62    
SSNW    7B70    	SSNWA   7B84    	SSNW1   7B9E    	SSNW2   7BFD    
SSNX    7BB1    	SSNY    7BD3    	SSNY1   7BDF    	SSN1    7B72    
SSN2    7B74    	SSTOP   7C42    	SSTOP1  7C4A    	SSTTLL  8F94    
SSTTP   8FC5    	SSTTS   8FBC    	SSUM    7791    	SSUMF   77B7    
SSUMOK  77BF    	STATUS= 0048    	STDERR  707B    	STEXT   8011    
STEXT1  802F    	STEXT3  80DA    	STFFA   5C72    	STFFW   5CD2    
STFFWE  5D37    	STFFW1  5CD6    	STFFX   5CEC    	STFFXE  5D1E    
STFF1   5C7B    	STFF2   5CAF    	STHING  7DF4    	STH1    7E09    
STITLE  7ED1    	STKLEN= 11F9    	STKLIM= 0050    	STKTR   52BC    
STKTST  540D    	STKTS1  52AB    	STKTZ   52BD    	STLR4A  7EFB    
STO     82DE    	STOERR  8362    	STOR    73EF    	STOW    8313    
STOWE   8344    	STOW2   8322    	STOW3   8338    	STOX    943D    
STOY    9491    	STO1    82EE    	STO1A   8305    	STO2    82E7    
STPFLG= 000C    	STPFUL  5444    	STPKEY= 0007    	STPMIX  544C    
STPPEK  5410    	STPPKZ  5431    	STPPK1  5436    	STPTR1  4996    
STRCBK  8732    	STRING= 0002    	STS     8EAB    	STTLR1  7EE4    
STTLR2  7EE9    	STTLR3  7EEE    	STTLR4  7EF8    	STTLW   7F58    
STTLWE  7F97    	STTLW2  7F80    	STTLW3  7F92    	STTL1   7F02    
STTL2   7F35    	STTL3   7F54    	STUFF   5C05    	STXTW   807A    
STXTWE  80A7    	STXTX   80AD    	STXTXE  80CC    	STXTX1  80B9    
STXT1A  804F    	STXT1B  8043    	STYPE   7FC6    	SUBTBL  94DA    
SUNDIF  7772    	SUNSUM  78B9    	SWAP    6986    	SWAPT1  6559    
SWAPT2  6567    	SWAP1   6988    	SWORD   8A8D    	SWPALN  69C6    
SWPLP1  655D    	SWPLP2  656B    	SWRDW   8AAD    	SWRDW1  8AC7    
SWRD1   8A95    	SWRD2   8ADA    	SWRD3   8AE5    	SXCOR   8E30    
SYCOR   8E38    	SYSBUG  51C8    	SYSMON= FF59    	SYSTAB= 0030    
S1CONS  535E    	TBMSG1= DB14    	TBMSG2= DB2D    	TCBKW   875B    
TCBKWE  87E6    	TCBKW1  8762    	TCBKX   877C    	TCBKXE  87CD    
TCBKX1  878A    	TCBKX2  87BF    	TCBKX3  87AB    	TCBKX4  87AD    
TCBK1   8740    	TDIFF = A000    	TEMPN = 00A8    	TEMPNH= 00A6    
TEMPN1= 00AA    	TEMPN2= 00AC    	TEMPN3= 00AE    	TEMPN4= 00B0    
TEMPN5= 00B4    	TEMPN6= 00B6    	TEMPN7= 00B8    	TEMPN8= 00BA    
TEMPX1= 00BC    	TEMPX2= 00BE    	TEMPX3= 006A    	TFKADV  5588    
TFK1    558E    	TFK2    55A4    	TFK2A   55AF    	TFK3    55C0    
TGTTOK  4A49    	TGT1    4A53    	TGT2    4A61    	TGT3A   4ACD    
TGT3B   4ADC    	TGT3B1  4AE6    	TI    = 0322    	TITLES= 0324    
TKAORL  4AD5    	TKATM1  4B0F    	TKATM2  4AFD    	TKATOM  4AF3    
TKLBR   4A8F    	TKNDL   4ABE    	TKRBR   4A9F    	TKRBR1  4AB1    
TLLEVS= 0080    	TMPNUM= 0010    	TMPSTT= 00A6    	TMPTAB= 032A    
TOKPTR= 0061    	TOMSG = DB6E    	TOPEDL  4090    	TOPLIN  4085    
TOPLOP  4065    	TOPSCR  6AC8    	TOSUB   7343    	TPATMW  66EC    
TPBFIX  6745    	TPCHR   7290    	TPFLEP  6888    	TPFLEX  688A    
TPFLF1  6862    	TPFLG1  67EB    	TPFLG2  685E    	TPFLL1  67B2    
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-337
NLOGO	SYMBOL TABLE

TPFLL2  67F0    	TPFLL3  6870    	TPFLL5  682D    	TPFLL6  6844    
TPFLR   6827    	TPFLR1  6834    	TPFLS1  6807    	TPFL1   67CB    
TPFL2   67D9    	TPP1    66B9    	TPSATM  6722    	TPSTMW  6730    
TPTMWE  6715    	TRTS    75F5    	TSHOWN= 00CA    	TSTCHR  75E5    
TTKADV  5570    	TTKE    5587    	TTLA1 = 00A0    	TTLA2 = 006E    
TTLC1 = 0006    	TTLC2 = 0012    	TTLC3 = 000C    	TTLHOM  90FC    
TTLL1   9108    	TYPACS  5D65    	TYPATM  66D2    	TYPBAS= C260    
TYPEND= FFF8    	TYPFIX  673F    	TYPFLO  67A1    	TYPLEN= 0998    
UCENTR  7021    	UCMPLN  6FA4    	UFRMAT= 000F    	UFUN  = 0006    
UF1     475A    	UF1A    4766    	UF1C    4772    	UF1D    477A    
UF2     479B    	UF2A    479D    	ULDV1   574C    	ULDV2   5758    
ULDV3   576A    	ULDV3A  576B    	ULNADV  573E    	ULNEND= 007A    
UNDIF = 0096    	UNDSTP  70D3    	UNFUNC  566E    	UNSTUF  5E3D    
UNSUM = 0094    	UPLINE  6F70    	UPLOP1  6F86    	UPLOP2  6F95    
USRADR= 03F8    	USTFE   5F3C    	USTFE1  5E67    	USTFW   5E8B    
USTFWE  5EA5    	USTFW2  5E76    	USTFX   5EAD    	USTFXE  5F2D    
USTFX1  5EB9    	USTFX2  5F0A    	USTFX3  5F1F    	USTFY   5EC4    
USTFYE  5EF4    	USTFY1  5ED0    	USTFY2  5EDB    	USTF1   5E5D    
USTF2   5E68    	UTPSCR  7024    	VAL1    43B2    	VAL1R   43D4    
VARGLP  435D    	VDT   = 0000    	VFY     741A    	VFYOK   743C    
VL1RG   426F    	VPDLBA= 1FF7    	VPLFLS  7A3B    	VPLTRU  7A31    
VPOP    5280    	VPOP1   528D    	VPRMTB= D9A4    	VPRMTE= D9F8    
VPSH1   5266    	VPUSHP  524E    	VRGLP1  4386    	VSP   = 0016    
WAIT    7766    	WAITM = DB77    	WAIT1   7767    	WAIT2   7768    
WNDBTM= 0023    	WNDLFT= 0020    	WNDTOP= 0022    	WNDWTH= 0021    
WRNMSG= DABC    	WRTS    7771    	WTPROT  70A6    	XAM     73BA    
XAM8    73AA    	XARGTB= 001A    	XBRK  = 0010    	XCASA   41C3    
XCASA1  41D7    	XCASA2  4206    	XCASA3  41F1    	XCASA4  41F9    
XCASA5  41EA    	XCASD   4195    	XCASF1  421F    	XCASL   4190    
XCASQ   41B3    	XCASQ1  41BB    	XCHK    940D    	XCHKM   942A    
XCHL    9436    	XCONS   5376    	XCONSG  5390    	XCONS2  5391    
XCOR  = 00CB    	XCRSR = 0022    	XDBZ  = 001C    	XDEF  = 0016    
XDIVID  78F9    	XDKF  = 0028    	XDLP1   78FD    	XDLP2   792D    
XDLP3   7958    	XDVD10  78ED    	XEDT  = 0015    	XELS  = 000F    
XEOL  = 0002    	XETL  = 0017    	XEVL1   414A    	XEVL2   4155    
XEVL3   415C    	XEXCED= 0003    	XFLOAT  6947    	XFLT1   694B    
XFLT2   695D    	XFNF  = 0027    	XFRAME= 006E    	XHNV  = 0004    
XIFX  = 0008    	XILN  = 001F    	XINT1   6A63    	XINT2   6A5A    
XIOR  = 0025    	XLABEL= 0011    	XLKF  = 0029    	XLNF  = 0014    
XLNTB = 001E    	XMON    74B5    	XNDF  = 0021    	XNED  = 0018    
XNOP  = 0006    	XNSTOR= 0000    	XNSTRN= 0001    	XNTF  = 000E    
XNTL  = 000D    	XNWE  = 001D    	XN1TOY  4CEE    	XN1YL   4CF0    
XN2TOY  8E9F    	XN2YL   8EA1    	XOFLOW= 0020    	XOOB  = 0024    
XOPO  = 0019    	XORDRW  9086    	XORHK1  93B9    	XORHK2  93BD    
XRDR    90E3    	XRDRL1  908B    	XRDRL2  90DD    	XREG  = 0046    
XRPN  = 0007    	XRTS    9434    	XSFNCL  45D1    	XSFNC1  45E2    
XSTOP = 0002    	XTAIL   4890    	XTAIL1  48A6    	XTAIL2  48B1    
XTAIL4  4990    	XTAIL5  4971    	XTALWA  48E1    	XTALWB  4919    
XTALW1  48E5    	XTALW2  491D    	XTHN  = 0012    	XTIP  = 000A    
XTLWAE  4910    	XTLWBE  4959    	XTML  = 001B    	XTMO  = 0005    
XUBL  = 000C    	XUDF  = 0003    	XUFNCL  460E    	XUFNW   470F    
XUFNWE  474F    	XUFN1   4671    	XUFN1A  4686    	XUFN2   4657    
XUFN3   4662    	XUFN5   4666    	XUFN6   4691    	XUFN6B  46DD    
XUFN6C  46FB    	XUOP  = 0001    	XVNA  = 0009    	XWTA  = 000B    
APPLE-LOGO	CROSS 6(33)  7-AUG-80  13:42  PAGE 1-338
NLOGO	SYMBOL TABLE

XWTP  = 0026    	XXBRK   32A7    	XXCRS   3449    	XXDBZ   33BB    
XXDEF   3332    	XXDKF   34CE    	XXEDT   3311    	XXELS   3292    
XXEOL   314C    	XXETL   3347    	XXFNF   34BF    	XXHNV   3180    
XXIFX   31C5    	XXILN   3410    	XXIOR   3499    	XXLAB   32BB    
XXLKF   34EE    	XXLNF   32F8    	XXLNT   33FC    	XXNDF   3438    
XXNED   3366    	XXNOP   31A8    	XXNTF   326D    	XXNTL   3242    
XXNWE   33D7    	XXOFL   3424    	XXOOB   3484    	XXOPO   337E    
XXRPN   31B8    	XXSFR1  45FD    	XXSFR2  4602    	XXSFR3  4607    
XXTHN   32E3    	XXTIP   31FA    	XXTML   33A1    	XXTMO   318F    
XXUBL   3230    	XXUDF   3163    	XXUOP   312C    	XXVNA   31E2    
XXWTA   3216    	XXWTP   34A3    	XXYNT   346A    	XYNT  = 0023    
XYN1L   4CFC    	XYN2L   8E95    	XYTON1  4CFA    	XYTON2  8E93    
XZAP  = 0013    	YCHK    9454    	YCHKM   947E    	YCHL    948A    
YCHL1   945B    	YCOR  = 00CF    	YESLST  8D2A    	YREG  = 0047    
YRTS    9488    	YSAV  = 0034    	YSAV1 = 0035    	ZAPMSG  6228    
ZMODE   7359    	ZPC1    6243    	ZPC2    624A    	ZPC3    6251    
ZPMSG1= DA8B    	ZPMSG2= DA9D    	ZPMSG3= DAA7    	ZZZZZZ= 94CB    
.     = 95F6    



 ERRORS DETECTED:  0

 *LOGO1/PTP,LOGO1=NLOGO/M65
 RUN-TIME: 98 164 5 SECONDS
 CORE USED:  7K

