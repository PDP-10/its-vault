;;; -*- Mode: LISP; Syntax: Zetalisp; Base: 10. -*-

;first item is Vi, second is Vo
(setq raw-data
   '((.01 -.41)
     (.02 -.435)
     (.03 -.455)
     (.04 -.47)
     (.05 -.475)
     (.06 -.49)
     (.07 -.50)
     (.08 -.5)
     (.09 -.5)
     (.10 -.51)
     (.15 -.53)
     (.20 -.545)
     (.25 -.56)
     (.30 -.56)
     (.35 -.57)
     (.40 -.58)
     (.45 -.59)
     (.50 -.60)))

;now we generate Vo pairs, ln(vi)
(setq log-data
      (mapcar #'(lambda (pair)
		  (list (cadr pair)
			(log (car pair))))
	      raw-data))

;; now generate a least-squares fit with X=Vo, Y=ln(Vi)
(setq lsq-fit
      (line-fit log-data 'line-fit-y))
;; ln(vi) =  -20.693466 * Vo - 12.918726
(defun vi(vo) (- (* vo -20.693466) 12.918726))
