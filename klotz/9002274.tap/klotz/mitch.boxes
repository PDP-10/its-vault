date: tuesday, 31 december 1985  17:32-est
from: mitchel j. resnick <mres at oz.ai.mit.edu>
to:   hal at oz.ai.mit.edu
re:   boxer comments

some thoughts, comments, questions from a boxer beginner...
(1) Many of my early problems involved the use Data boxes. On several
occasions, I ended up with boxes inside boxes when I didn't expect any
nesting. For instance, when I took the START of a box, I often forgot
that the result would be returned inside of a Data box.

My experience with Logo and Scheme probably hurt in this case. It
seemed natural that the BUTFIRST of a box should be returned in a Data
box (just as the butfirst or cdr of a list is always a list), but I
assumed that taking the START of a box would be analogous to taking
the car (or first) of a list.

I finally adjusted to the fact that the START of a box would print out
as a Data box. But I was again taken by surprise the first time I
tried to get the first item in nested data boxes. I tried START START
<box>, but this didn't dive as "deeply" into the boxes as I expected. To
get around this problem, I ended up using START RUN START <box>. This
works, but it's not very intuitive. (Hal later told be about the UNBOX
primitive. But this isn't implemented on the Explorer, and it's still
not very intutive to say START UNBOX START <box>.)

I ran into a similar problem when I tried to iterate through the items
in a box. I created a Data box called COUNTER. To increment the
counter I used CHANGE COUNTER COUNTER + 1. That was fine. Then I tried
to get the relevant item in the box with GET-NTH <box> COUNTER. This
didn't work. So I tried GET-NTH <box> RUN COUNTER. That worked. But as
in the previous example, it's not very intuitive for me. Is there a
better way?

(2) On several occasions, I created Doit boxes when I really wanted
Data boxes, or vice versa. Some of these mistakes were "careless," but
others resulted from the fact that I didn't have a real good model for
thinking about different types of boxes.

I confused Data and Doit boxes less often as I became accustomed to
Boxer.  But if young kids use Boxer, I think that this could be a
major problem for them (in some ways analogous to the "when do I use
quotes and when do I use colons" problem in Logo).

(3) I found myself wanting to collect boxes together in a super-box
for "organization" reasons, but then the procedures wouldn't work as
desired. For example, I had an urge to create a box that included my
square procedure, circle procedure, and other simple geometric
procedures. (I'm a compulsive organizer and categorizer.) But then, of
course, I couldn't call the square procedure from the top level.

I think that many kids will have the same urge. The boxes are
suggestive in many ways (of which scoping is only one--and not the
most obvious one to children). If users interpret the box metaphor the
wrong way they will get into trouble.

(4) When I used CHANGE in a procedure, I expected to see the contents
of the box change as the procedure ran. I was disappointed when they
didn't. Why don't they? For speed reasons? In some cases, it would be
nice to see variables change as the program runs. Could this be an
option?

(5) At first, I didn't like the fact that named boxes don't execute
inside Do-it boxes. I liked the idea of putting a subprocedure box
right inside the body of the main procedure. But if the subprocedure
is recursive, it must be named. So I had to write the name of the
subprocedure box above or below the box itself so that it would
actually execute.

I understand why the system has to be this way, but I did find it a
bit frustrating that I couldn't use subprocedure boxes in the way that
seemed most natural to me.

(6) I ran into some problems that might have been caused by bugs in
the Explorer implementation:

--The procedures NUMBER-OF, STOP, RETURN all give errors (or perhaps
I'm not using them correctly).

--I ran into some problems when I played with the SHAPE and SIZE of
sprites. When I changed the SHAPE box of a sprite, its shape didn't
necessarily change. And when I changed the SIZE box of a sprite, it
sometimes affected other sprites. 

--I almost always had to refresh the screen when I flipped a Graphics
box over to see the Graphics Data side.

--I had trouble with the XOR setting of PEN.

--According to Jeremy's thesis, I should be able to create an
ALL-SPRITES box that contains the names of all sprites. But this
didn't work. I had to put ports to the sprites in the ALL-SPRITES box.

--I tried to use the following primitives and found that they were
missing: SET, SELECT, REPLACE, UNBOX.

(7) A few questions: How do I stop a program that is running (I tried
ABORT, Control-G, and control-C, but none worked)? Can you change a
sprite's shape under program control? Why did you use the primitive
START rather than FIRST? How can the program receive input from the
keyboard (that is, are there equivalents to KEYP and RC)?

(8) A few desires: I'd like the cursor to move exactly where the arrow
is when I click the middle key of the mouse (as it is now, the cursor
goes to the closest place where something has already been typed). I'd
prefer if the mouse arrow didn't retreat to the cursor. I'd like to be
able to control the size of boxes more finely (rather than simply one
of three sizes). I'd like to be able to expand Graphics Boxes.

(9) I've enjoyed learning Boxer. But I find that I'm still approaching
Boxer with a Logo (or perhaps Scheme) mentality. As a result, I'm not
sure that I'm taking full advantage of Boxer's features. I suppose it
will take a while.

--Mitchel
