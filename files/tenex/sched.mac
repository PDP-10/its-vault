
;22 NOV 71, 1804:

	TITLE MON

;TENEX SCHEDULER - D. MURPHY

	EXTERN TTCH7,TTPSI,TADSEC,LSTERR,FACTSW,FLOGO
	EXTERN DIRLCK,DIRUSE,TCITST,TCOTST,TTEMES,FRZWT,CAPMSK,CAPENB

	INTERN ITRAP,BLOCK1,DISGE,DISGET,DISL,RSKP,R,JRET,JSKP,NJOBS
	INTERN ASSFK,WTFPGS,WTSPT,SUSFKR,SUSWT,UCLOCK,ITRAP1
	INTERN STIME,ETIME,NSTAT,SETOVF,MAXQ,DISG,DISGT,BLOCKW
	INTERN SUPERP,PARALP,INFERP,PSILOB,TMZONE

OAP=20			;DEVICE NUMBER FOR 'OTHER PROCESSOR' REALLY 1MS CLOCK

NBP==^D25		;MAX NUMBER PROCESSES IN BAL SET
MINPG==6		;MIN FREE PAGES TO CONSIDER ADDING PROCESS

NSKDP==40		;LOCAL PUSH LIST
NSCDRQ==20		;SIZE OF SCHEDULER REQUEST QUEUE

MAXQ==4			;HIGHEST QUEUE NUMBER

HQJOB==1B19		;IN JOBBIT - JOB SHOULD BE HI-Q ON DISMISS

MINNR==3		;MIN SIZE OF RPLQ FOR LOADING FORK


;STORAGE

LS SKDPDL,NSKDP		;SCHEDULER LOCAL PDL

LS MSCNT,1		;INDEX TO MSEC/TICK TABLE
LS APCLKC,1		;COMMUNICATION TO CH7 FROM CH1 CLOCK INTERRUPT
LS CLKAC2,1		;CLOCK ROUTINE TEMP
LS CLKAC1,1		;  "
LS SYNCC,1		;  "
LS OLDTCK,1		;  "
LS PISC7R,1
LS FKPT6M,1		;-FKPT(6)

GS FORKX,1		;INDEX OF CURRENTLY RUNNING FORK

GS FKPGS,NFKS		;PTB,,PSB   SPT NUMBERS
GS FKSTAT,NFKS		;FORK STATUS
GS FKWSP,NFKS		;WORKING SET PARAMETERS - TAV,,N
GS FKPGST,NFKS		;TEST WORD WHILE IN PAGE WAIT
GS FKOLDS,NFKS		;FORK STATUS PREVIOUS TO INTERRUPT
GS FKPT,NFKS		;LOCATION OF FORK,,FORK QUEUE POINTERS
GS FKINT,NFKS		;FORK INTERRUPT COMMUNICATION REG
GS FKINTB,NFKS		;INTERRUPT CHANNELS REQUEST
GS FKJOB,NFKS		;JOB NUMBER ,, JSB
GS FKNR,NFKS		;AGE,,BALANCE SET SIZE (RESERVE)
GS FKTIME,NFKS		;TIME AT WHICH FORK WAS PUT ON CURRENT QUEUE
GS FKCNO,NFKS		; -- ,, CORE NUMBER
LS FREFK,1		;LIST OF FREE FORKS
GS SYSIFG,1		;SYSTEM HAS BEEN INITIALIZED IF NOT 0
GS ENTFLG,1		;PERMIT NEW JOB ON ^C IF NON-0
GS PWRDWN,1		;POWER FAILURE DETECTED IF .G. 0, DONE IF .L. 0

GS JOBDIR,NJOBS		;ATTACHED DIRECTORY,,LOGIN DIRECTORY
GS JOBNAM,NJOBS		;JOB SUBSYSTEM NAME INDEX FOR SETNM
GS JOBRT,NJOBS		;JOB RUN TIME
GS JOBPT,NJOBS		;CONTROL TTY,,TOP FORK
LS FREJOB,1		;LIST OF FREE JOBS

LS WTLST,1		;WAITING FORK LIST
LS WTLSTL,1		; ... LAST

LS GOLST,1		;RUNNABLE FORK LIST
LS GOLSTL,1		; ... LAST

LS JB0FLG,1		;RUN JOB 0 REQUEST
LS FRECB,1		;FREE CORE NUMBER BITS

;BALANCE SET VARIABLES

LS BALSET,NBP		;BALANCE SET LIST **DO NOT REORDER BALSET, NBT**
LS NBT,NBP		;RUN TIME SINCE ENTERING BALSET
LS FBALS,1		;1 + HIGHEST BALSET SLOT IN USE
LS NBPROC,1		;NUMBER OF PROCESSES IN BAL SET
LS MAXBSQ,1		;Q OF WORST PROCESS IN BAL SET
LS MAXBP,1		;MAX NUMBER OF JOBS IN BAL SET

GS TOTRC,1		;TOTAL NUMBER REAL CORE PAGES
GS TOTRC2,1		;MAX SIZE OF PROCESS FOR SEVERAL JOBS RUNNABLE
GS SUMNR,1		;SUM OF RESERVE PAGES, ALL PROCESSES
GS BALSHC,1		;COUNT OF PAGES IN BALSET BECAUSE OF SHARING
GS PUBCL,1		;PROCESS USE BITS TO BE CLEARED AT GCCOR
LS EXNR,1		;UNCOLLECTABLE PAGES
GS MAXNR,1		;MAX VALUE OF SUMNR
LS MINNRC,1		;MIN SIZE OF RPLQ FOR ALLOWING SWAPIN OF PAGE
GS CGFLG,1		;DEASSIGNED PAGES MAY EXIST IF >0
LS NEBAL,1		;NUMBER OF PROCESSES NOW ENTERING BALSET
LS RUNT1,1		;RUNTIME SINCE FORK BEGAN EXECUTION

GS NRPMIN,1		;MIN VALUE OF NRPLQ FOR GCCOR
GS NRPLQ,1		;NUMBER OF PAGES ON REPLACABLE QUEUE
GS RPLQ,1		;REPLACABLE QUEUE    END,,BGN

GS NPMAX,1		;MAX NUMBER OF PAGES IN CORE FOR ONE PROCESS

;SCHEDULER VARIABLES

LS SKEDF1,1		;START PROCESS VIA CH7 BREAK IN 1
LS SKEDF2,1		;PROCESS BECAME RUNNABLE
LS INSKED,1		;IN SCHEDULER IF NON-ZERO
LS SSKED,1		;LAST JOB RUNNING WAS NOSKED

GS PSKED,1		;PAGE TRANSFER COMPLETED
GS ISKED,1		;SCHEDULE REQUEST FLAG

LS NGOJOB,1		;NUMBER OF RUNNABLE JOBS

LS BSCTIM,1		;TIME AT LAST CHANGE TO NBPROC
LS RJTTIM,1		;TIME AT LAST UPDATE TO RJTSUM
LS RJATIM,1		;TIME OF NEXT RJAV UPDATE
LS RJAVS1,1		;RJTSUM AT LAST RJAV UPDATE

;TABLES FOR SETNM

	INTERN NNAMES

NNAMES==^D40		;NUMBER OF NAMES ALLOWED

GS SNAMES,NNAMES	;SIXBIT NAME OF SUBSYSTEM
GS STIMES,NNAMES	;ACCUMULATED RUNTIME OF SUBSYSTEM
GS SPFLTS,NNAMES	;ACCUMULATED PAGE FAULTS OF SUBSYSTEM
GS SWAKES,NNAMES	;WAKEUPS 0-14, SIZE INTEGRAL 15-35
GS SBLKTM,NNAMES	; BLOCKED FOR TTY TIME

;MONITOR STATISTICS

GS SKDTM0,1		;TIME SPENT IN SKED WITH NO RUNNABLE JOBS
GS SKDTM1,1		;TIME SPENT IN SKED WITH 1 OR MORE RUNNABLE JOBS
GS SKDTM2,1		;TIME SPENT IN GCCOR
GS SPTTIM,1		;TIME SPENT IN PAGER TRAP CODE

GS DRMRD,1		;NUMBER OF DRUM READS
GS DRMWR,1		;NUMBER OF DRUM WRITES
GS DSKRD,1		;NUMBER OF DISK READS
GS DSKWR,1		;NUMBER OF DISK WRITES

GS TTYBKS,1		;NUMBER OF TTY WAKEUPS
GS TTINTS,1		;NUMBER OF TERMINAL INTERRUPTS
GS BSTSUM,1		;INTEGRAL OF NBPROC DT
GS RJTSUM,1		;INTEGRAL OF NBPROC+NGOJOB DT

NRJAVS==3		;NUMBER OF EXPONENTIAL AVERAGES MAINTAINED
GS RJAV,NRJAVS		;EXPONENTIAL AVERAGE OF NUMBER RUNNABLE FORKS

NSTAT==14+NRJAVS		;NUMBER OF STATISTICS WORDS

GS QSUM,MAXQ+1		;ACCUMULATED TIME OF JOBS OF RESPECTIVE Q'S

;CLOCKS COUNTED DOWN AND TESTED, PARALLEL TO PCLKT, DON'T REORDER

LS RJQNT,1		;RUNNING JOB REMAINING QUANTUM
GS TTBTIM,1		;TIME TO NEXT TTY BIG BUFFER SERVICE
GS TIM2,1		;SECOND CLOCK, 100 MS

;LESS PRECISE CLOCKS, COUNTED DOWN AND TESTED PARALLEL TO CLK2CL

GS DSKTIM,1		;TIME TO NEXT DSK RE-QUEUE CHECK
IFDEF MTACHN,<GS MTATIM,1>	;MAG TAPE
IFDEF PTPCHN,<GS PTPTIM,1>	;PAPER TAPE PUNCH
IFDEF PLTCHN,<GS PLTTIM,1>	;PLOTTER
IFDEF DTACHN,<GS DTATIM,1>	;DTA

;END OF PROCESS CLOCKS

LS JOBRTT,1		;JOB RUNTIME SINCE LAST UPDATE

LS SCDRQI,1		;SCHEDULER REQUEST QUEUE
LS SCDRQO,1
LS SCDRQB,NSCDRQ

GS TODCLK,1		;MILLISECOND CLOCK, MONOTONICALLY INCREASING
GS CHKTIM,1		;ONE MINUTE PAST LAST JOB 0 CHECK

LS SCDRN1,1			;RUN ONLY FORK N IF N > -1

;PATCH SPACE FOR RES MON

	INTERN FFF,P1,P2,INDFLG

SCDV1==1		;IF DEFINED MEANS ASSEMBLING MON
SCDVE==.-1		;UPPER LIMIT FOR CORE CLEAR ON STARTUP

FFF:
P1:
P2:	REPEAT 300,<0>

INDFLG:	0			; .NE. 0 MEANS LOCK JSB
				; .L. 0 MEANS USE NO INDIRECT PTRS

;SCHEDULER INITIALIZATION

	INTERN SCDIN

SCDIN:	SETZM SYSIFG
	SETZM PWRDWN
	SETZM ENTFLG
	MOVE 1,[JRST SCDRQ0]
	MOVEM 1,SCDRQ+1		;DISPATCH FOR JSR-CALLED ROUTINE
	MOVEI 1,GOLST
	MOVEM 1,GOLSTL
	MOVEI 1,WTLST
	MOVEM 1,WTLSTL
	MOVNI 1,FKPT		;BECAUSE MACRO DOESN'T HAVE NEG RELOC'N
	HRLI 1,6
	MOVEM 1,FKPT6M		;-FKPT(6)
	MOVEI 1,SCDRQB
	MOVEM 1,SCDRQI
	MOVEM 1,SCDRQO
	MOVEI 1,FKPT
	MOVEI 2,NFKS
	CALL ILIST		;INIT FREE FORK LIST
	MOVEM 1,FREFK
	MOVEI 1,JOBPT
	MOVEI 2,NJOBS
	CALL ILIST
	MOVEM 1,FREJOB		;INIT FREE JOB LIST
	SETOM JOBRT
	MOVE 1,[XWD JOBRT,JOBRT+1]
	BLT 1,JOBRT+NJOBS-1
	SETZM 20
	SETOM SCDRN1
	SETOM FORKX
	SETOM TADSEC
	SETOM SSKED
	MOVE 1,[XWD 000377,777777] ;BITS IN PROCESS USE REG.
	MOVEM 1,FRECB
	MOVEI 1,BALSET
	MOVEM 1,FBALS
	MOVEM 1,INSKED
	SETOM FACTSW
	MOVSI 1,(1B1)
	MOVEM 1,CHKTIM		;PREVENT JOB 0 ALARM UNTIL INITIALIZED
	RET

	INTERN ILIST

ILIST:	ADDI 1,-1(2)
	SETZM 0(1)		;INIT FREE LIST, BLOCK ADR IN AC1,
	SOJLE 2,ILIST1		;  SIZE OF BLOCK IN 2
	MOVEM 1,-1(1)
	SUBI 1,1
	SOJG 2,.-2
ILIST1:	RET

;CHANNEL 7 INTERRUPT
;CLOCK, POSSIBLE RESCHEDULING, OR START PROCESS FROM SCHEDULER

PISC7:	XWD PISC7R,.+1

	SKIPG ISKED		;SCHEDULER REQUEST, OR
	SKIPE APCLKC		;CLOCK TICK?
	JRST APCLK		;SERVICE IT
APCLKX:	SKIPE SKEDF1		;INITIATED BY SCHEDULER?
	JRST SCDR		;YES, GO START PROCESS
	SKIPG INSKED		;IN SCHEDULER NOW, OR
	SKIPG ISKED		;NO SCHEDULING REQUESTS?
	JEN @PISC7R		;IGNORE INTERRUPT
	SKIPN TRAPPC		;PAGER TRAP STARTING?
	SKIPE NSKED		;OK TO RESCHEDULE?
	JRST SCDW		;NO, GO SET TRAPS
	MOVEM 17,PAC+17		;YES, SAVE PROCESS AC'S
	MOVEI 17,PAC
	BLT 17,PAC+16
	MOVE 1,40
	MOVEM 1,PSB40
	MOVE 1,PISC7R
	MOVEM 1,PPC
	AOS INSKED
	JEN @[SCHED0]

SCDW:	MOVEM 1,RSKED		;SAVE AC1
	MOVE 1,RSKEDT		;GET TRAP INSTRUCTION
	EXCH 1,RSKED		;LEAVE IT TO GET EXECUTED
	JEN @PISC7R

RSKEDN:	JFCL 0			;NO-TRAP CONTENTS OF RSKED
RSKEDT:	JSYS RSKD0		;TRAP CONTENTS OF RSKED

;SETUP AND RESUME PROCESS

SCDR:	SETZM SKEDF1		;CLEAR LOCAL FLAG
	SKIPE ISKED		;ANY REQUESTS LATELY?
	JEN @[SCHED0]		;YES, RESCHEDULE AGAIN
	SETZM INSKED		;NO LONGER IN SCHEDULER
	SETOM SSKED
	MOVE 1,PSB40
	MOVEM 1,40
	MOVSI 17,PAC		;RESTORE PROCESS AC'S
	BLT 17,17
	JEN @PPC		;RUN PROCESS

;VARIOUS WAYS OF ENTERING SCHEDULER

	INTERN .HALTF,EDISMS,HALTF1

;JSYS HALTF - DISMISS FORK UNTIL INTERRUPT OR EXTERNALLY RESTARTED

.HALTF:	JSYS MENTR
HALTF1:	CALL FKTMI		;FORK TERM INTERRUPT
HALTX:	MOVEI 1,JRET
	JSYS EDISMS
	JRST MRETN		;IF CONTINUED

;EXEC DISMISS - AC1 CONTAINS  XWD DATA,TEST ROUTINE ADR

EDISMS:	XWD FPC,EDMSQ
EDMSQ:	JSYS ENSKED		;ENTER SCHEDULER
DISMS1:	MOVE 2,FPC		;USE JSYS RETURN AS PPC
	MOVEM 2,PPC
DISMSE:	SKIPN NSKED		;CHECK FOR BUGGY DISMISS
	TRNE 1,600000		;CHECK FOR NON-RES TEST
	BUG(HLT,<DISMISS WHILE NOSKED OR WITH NON-RES TEST ADDRESS>)
	PUSH P,1
	CALL SAVRT
	SETZM JOBCK0		;INIT MEASURING INTERVAL
	POP P,1
	EXCH 1,FKSTAT(7)	;SET NEW STATUS, GET OLD
	MOVE 2,JOBBIT
	TLNE 2,HQJOB		;HI-Q THIS JOB ON DISMISS?
	MOVE 1,QBASE+1		;YES
	MOVEM 1,FKOLDS(7)	;SAVE QUEUE VALUE
	CALL REMBSJ		;REMOVE JOB FROM BAL SET
	CALL WTCONC		;PUT ON WAIT LIST
	HRRZ 1,FKCNO(7)		;CORE NUMBER
	MOVE 1,BITS(1)		;PROCESS USE BIT
	IORM 1,PUBCL		;CLEAR BIT AT NEXT GC
	SETOB 7,FORKX
	JRST SCHED0

;RESCHEDULE ON PAGE WAIT

	INTERN SCHEDP

SCHEDP:	XWD SKDPC,.+1
	SKIPE INSKED
	BUG(HLT,<CALL TO SCHEDULER WHEN ALREADY IN SCHEDULER>)
	JSYS ENSKED
SCHP1:	PUSH P,1
	CALL SAVRT
	POP P,1
	MOVEM 1,FKPGST(7)
	MOVE 1,SKDPC
	MOVEM 1,PPC
	MOVSI 1,400000
	CALL SCHP2
	JRST SCHED0

SCHP2:	SKIPE NSKED
	MOVEM 7,SSKED		;REMEMBER FORK NUMBER OF NOSKED FORK
	HRRZ 10,FKPT(7)		;PROCESS NUMBER
	SKIPN NSWAP		;NON-SWAPPABLE?
	SKIPE NSKED		;NON-RESCHEDULABLE?
	TLO 1,200000		;YES
	HLLM 1,BALSET(10)	;WAITING FLAG
	HRRZS FKPT(7)
	SETOB 7,FORKX
	RET

;DO OKSKED AND RESCHEDULE

SCHEDR:	XWD SKDPC,.+1
	SKIPE INSKED
	BUG(HLT,<CALL TO SCHEDULER WHEN ALREADY IN SCHEDULER>)
	JSYS ENSKED
	SOSGE NSKED
	BUG(HLT,<OKSKED WHEN NOT NOSKED>)
	JRST SCHP1

;DEFERRED SCHEDULING REQUEST TRAP

RSKD0:	XWD SKDPC,.+1
	JSYS ENSKED		;ENTER SCHEDULER
	MOVE 1,SKDPC
RSKD2:	MOVEM 1,PPC
RSKD3:	MOVE 1,RSKEDN
	MOVEM 1,RSKED
	JRST SCHED0

RSKD1:	JSYS ENSKED		;FROM PGUNTP
	HRRZ 1,MJRSTF
	CAIN 1,FPC		;DEFERRED INTERRUPT WAITING?
	JRST RSKD3		;NO
	MOVEI 1,PSISV2		;YES
	EXCH 1,PPC		;SET TO CHECK IT NEXT RUNNING
	MOVEM 1,PIPC
	JRST RSKD3

;COMMON SCHEDULER ENTER ROUTINE, SAVE AC'S AND SET INSKED FLAG

ENSKED:	XWD ENSKR,.+1
	AOS INSKED		;PREVENT ACTION BY CH7 BREAK
	MOVEM 17,PAC+17		;SAVE PROCESS AC'S
	MOVEI 17,PAC
	BLT 17,PAC+16
	MOVE 7,40
	MOVEM 7,PSB40
	MOVE 7,FORKX		;GET INDEX OF CURRENT FORK
	MOVE P,PI7P		;GET PDL POINTER
	JRST @ENSKR

;INSTRUCTION TRAP - TRAP PC IN FPC, ASSUMED TO BE I +1

ITRAP1:	MOVEM 1,LSTERR		;SAVE ERROR CODE GIVEN IN 1
ITRAP:	SKIPE INSKED
	BUG(HLT,<INSTRUCTION TRAP WHILE IN SCHEDULER>)
	SKIPL FORKX		;NO FORK RUNNING, OR
	CONSZ PI,177B27		;PI IN PROGRESS?
	BUG(HLT,<INSTRUCTION TRAP WHILE PI IN PROGRESS OR IN SCHEDULER>)
	SKIPGE SLOWF		;NOW IN SLOW CODE?
	JSYS MENTR		;NO, ENTER
ITR3:	MOVE 1,MPP		;STACK PTR ON ENTERING THIS CONTEXT
	MOVE 2,0(1)		;RETURN PC
	TLNN 2,UMODF		;PREVIOUS CONTEXT INTERRUPTABLE?
	SKIPGE -2(1)		;I.E. USER MODE, OR INTDF .L. 0
	JRST ITR2		;YES, OK
	BUG(CHK,<INSTRUCTION TRAP AND PREVIOUS CONTEXT WAS NOINT>)
ITR2:	SETZM NSKED
	SETOM TRAPC		;CLEAR FLAGS AND COUNTERS
	SETZM INTDF		;SET TO 1 LEVEL NOINTERRUPT
	MOVEI 1,^D15		;INITIATE CHANNEL 15 INTERRUPT
	CALL PSIRQ0
	RESKED			;GET THE INTERRUPT "SEEN"
	OKINT			;INTERRUPT SHOULD TAKE HERE
	MOVE P,UPP		;RETURN TO USER IF CONTINUED
	ADD P,BHC+2
	JRST MRETN

;BLOCK UNTIL CONDITION SATISFIED

BLOCK1:	XWD SKDPC,.+1
	JSYS ENSKED
	MOVNI 1,^D100
	ADDM 1,RJQNT		;CHARGE Q TO PREVENT HOGGING
	MOVNI 1,2
	ADDM 1,SKDPC		;MAKE RETURN TO INSTRUCTION BEFORE CALL
	MOVE 1,TODCLK
	ANDI 1,377777
	ADDI 1,^D100		;ADD 100 MILLISECS
	MOVSI 1,0(1)
	HRRI 1,BLOCKW
	JRST SCHP1		;DISMISS, KEEP IN BAL SET

BLOCKW:	MOVE 2,TODCLK		;SCHEDULER TEST, GET TIME
	ANDI 2,377777
	SUB 1,2			;DESIRED - NOW = WAIT LEFT
BLK2:	JUMPLE 1,1(4)		;NO WAIT TIME LEFT
	CAIGE 1,200000		;BIG DIFFERENCE?
	JRST 0(4)		;NO, KEEP WAITING
	SUBI 1,400000		;YES, COMPENSATE FOR WRAPAROUND
	JRST BLK2

;DISMISS UNTIL WORD .GE. 0

DISGE:	PUSH P,1
	HRLI 1,DISGET		;GIVEN MON ADDRESS IN 1
DISXE:	MOVS 1,1
	JSYS EDISMS
	POP P,1
	RET

DISGET:	SKIPGE 0(1)
	JRST 0(4)
	JRST 1(4)

;DISMISS UNTIL WORD .L. 0

DISL:	PUSH P,1
	HRLI 1,DISLT
	JRST DISXE

DISLT:	SKIPL 0(1)
	JRST 0(4)
	JRST 1(4)

;DISMISS UNTIL WORD .G. 0

DISG:	PUSH P,1
	HRLI 1,DISGT
	JRST DISXE

DISGT:	SKIPG 0(1)
	JRST 0(4)
	JRST 1(4)

;DISMISS FOR SPECIFIED TIME JSYS

	INTERN .DISMS

.DISMS:	JSYS MENTR
	JUMPLE 1,MRETN
	CAIL 1,100000		;LONG OR SHORT TIME?
	JRST TDIS1		;LONG
	MOVE 2,TODCLK
	ANDI 2,377777
	ADDI 2,0(1)		;COMPUTE TIME TO RESTART
	MOVSI 1,0(2)
	HRRI 1,BLOCKW
TDIS2:	JSYS EDISMS		;DISMISS WITH SPECIFIED TEST
	JRST MRETN

TDIS1:	CAML 1,[XWD 400,0]
	MOVSI 1,400		;APPROX 17 HRS IS MAX PERMITTED
	MOVE 2,TODCLK
	TLZ 2,777000
	ADD 2,1			;COMPUTE TIME TO RESTART
	LSH 2,-^D10		;DIVIDE BY 1024
	MOVSI 1,0(2)
	HRRI 1,BLOCKT
	JRST TDIS2		;GO COMPLETE DISMISSAL

;SCHEDULER WAIT TEST FOR LONG WAIT

BLOCKT:	LSH 1,^D10		;RESTORE WAKEUP TIME TO FULL SIZE
	MOVE 2,TODCLK		;GET TIME NOW
	TLZ 2,777000
	SUB 1,2			;DESIRED-NOW = TIME LEFT TO WAIT
BLKT1:	JUMPLE 1,1(4)		;WAKEUP IF NEGATIVE
	CAMG 1,[XWD 400,0]	;VERY LARGE DIFFERENCE?
	JRST 0(4)		;NO, KEEP WAITING
	SUB 1,[XWD 1000,0]	;COMPENSATE FOR WRAPAROUND
	JRST BLKT1		;CHECK AGAIN

;SCHEDULER

	INTERN SCHED0

SCHED0:	SETZ 0,			;FOR PEOPLE WATCHING LIGHTS
SCH0:	CONSZ PI,177B27		;ANY PI IN PROGRESS?
	BUG(HLT,<ENTERED SCHEDULER WITH PI IN PROGRESS>)
	MOVE P,PI7P		;SETUP LOCAL PDL
	MOVE 1,NBPROC
	ADD 1,NGOJOB
	MOVE 2,TODCLK
	SUBM 2,RJTTIM		;REAL TIME SINCE LAST UPDATE TO RJTSUM
	EXCH 2,RJTTIM
	IMUL 2,1		;COMPUTE NBPROC+NGOJOB DT
	ADDM 2,RJTSUM
	MOVE 2,TODCLK
	CAML 2,RJATIM		;TIME FOR RJAV UPDATE?
	CALL DORJAV		;YES
	LSH 1,^D9
	ADD 1,NBPROC
	HRLI 0,0(1)		;DISPLAY NBPROC, NBPROC+NGOJOB IN LH 0
	MOVEM 0,22		;AND 22
	MOVSI 16,-NPCLKS	;SCAN PROCESS CLOCKS
	SKIPG RJQNT(16)		;EXHAUSTED? (RJQNT IS FIRST IN TABLE)
	XCT PCLKT(16)		;YES, SERVICE WHATEVER
	AOBJN 16,.-2
	MOVE 4,SCDRQO
	CAME 4,SCDRQI		;ANY REQUESTS?
	CALL SCDRQ1		;YES
	SKIPE ISKED		;POSSIBLE CHANGE OF STATE?
	CALL SCHED1		;YES, GO TEST WAITING JOBS
	SKIPN PSKED		;PAGE TRANSFER COMPLETE, OR
	SKIPE SKEDF2		;JOB CHANGED STATE?
	CALL DISMSJ		;YES, DISMISS CURRENT JOB
SCH1:	SKIPE PWRDWN		;POWER FAIL DETECTED?
	JRST SCHPRF		;YES
	SKIPE 1,20		;REQUEST FROM SWITCHES?
	JSP 4,SWTST		;YES
	SKIPL 7,FORKX		;JOB TO CONTINUE?
	JRST SCHED3		;YES
	CALL SKDJOB		;NO, GO SCHEDULE ONE

SCHED3:	SETZM SKEDF2
	SKIPGE 1,FKINT(7)	;INTERRUPT REQUEST?
	TLNE 1,200000		;AND NOT ONE IN PROGRESS
	JRST SCHED4
	MOVSI 1,200000		;CLEAR WORD EXCEPT FOR PI IN PROG
	EXCH 1,FKINT(7)
	MOVEM 1,PIMSK		;PASS REQUEST WORD TO SERVICE ROUTINE
	MOVEI 1,PIRQ		;PSEUDO-INTERRUPT SERVICE
	EXCH 1,PPC
	MOVEM 1,PIPC		;SAVE OLD PC
SCHED4:	AOS SKEDF1		;SET FLAG FOR CH7 ROUTINE
	ISB SCDCHN		;LET IT START PROCESS

	DEFINE ECALL (D)
<IFDEF D'CHN,<EXTERN D'CHK
	CALL D'CHK
>>

;TABLE OF SERVICE CALLS FOR PROCESS CLOCKS

PCLKT:	CALL QNTDMS		;RUNNING JOB QUANTUM OVERFLOW
BKGNDT:	CALL SKDLV8		;EVERY TICK STUFF ('LEVEL 8')
	CALL CLK2		;SECOND LEVEL CLOCK
NPCLKS==.-PCLKT
NBKR==.-BKGNDT		;THE (LAST) N OF THESE TO RUN ANYTIME

SKDLV8:	ECALL IMP		;NETWORK
	JRST TTCH7		;TTY BIG BUFFER

;SECOND PROCESS CLOCK, LESS PRECISE, UPDATES EVERY 100 MS

CLK2:	MOVSI 1,(1B1)
	SKIPL SCDRN1		;RUNNING SPECIFIC JOB?
	MOVEM 1,CHKTIM		;YES, DISABLE JOB 0 CHECK
	MOVE 1,TODCLK
	CAML 1,CHKTIM		;JOB 0 OVERDUE?
	BUG(HLT,<JOB 0 NOT RUN FOR TOO LONG, PROBABLE SWAPPING HANGUP>)
	MOVEI 15,^D100
	EXCH 15,TIM2		;SET NEW TIME, GET OLD
	SUBI 15,^D100		;COMPUTE ACTUAL TIME SINCE LAST UPDATE
	MOVSI 14,-N2CLKS	;SET TO SCAN SECOND LEVEL CLOCKS
CLK21:	ADDM 15,DSKTIM(14)	;UPDATE CLOCK
	SKIPG DSKTIM(14)	;COUNTED OUT?
	XCT CLK2CL(14)		;YES, DO WHATEVER
	AOBJN 14,CLK21
	AOS SKEDF2
	RET

;TABLE OF CALLS FOR SECOND LEVEL CLOCKS

CLK2CL:	ECALL DSK		;DISK RE-QUEUE CHECK
	ECALL MTA		;MAG TAPE
	ECALL PTP		;PAPER TAPE PUNCH
	ECALL PLT		;PLOTTER
	ECALL DTA		;DECTAPE
N2CLKS==.-CLK2CL

RSKP:	AOS 0(P)		;RETURN (VIA PDL) SKIPPING
R:	RET

PI7P:	IOWD NSKDP,SKDPDL

;UPDATE RUNNABLE JOB AVERAGES

DORJAV:	MOVEI 2,^D1000
	ADDM 2,RJATIM		;SET TIME OF NEXT UPDATE
	MOVE 4,RJTSUM		;CURRENT INTEGRAL OF NBPROC+NGOJOB
	SUBM 4,RJAVS1		;DIFFERENCE FROM LAST UPDATE
	EXCH 4,RJAVS1
	FSC 4,233		;FLOAT IT
	FDVRI 4,(1000.0)	;AVERAGE OVER LAST 1000 MS
	JOV .+1			;CLEAR OV FLAG
	MOVSI 2,-NRJAVS
SCHC1:	MOVE 3,EXPFF(2)
	FMPRM 3,RJAV(2)		;SUM*EXP(-T/C) -) SUM
	JOV [	SETZM RJAV(2)	;THAT MAY HAVE UNDERFLOWED,
		JRST .+1]	;IF SO, CLEAR IT TO 0
	MOVE 3,4
	FMPR 3,EXPGF(2)
	FADRM 3,RJAV(2)		;TERM*(1-EXP(-T/C)) + SUM -) SUM
	AOBJN 2,SCHC1
	RET

;TABLE OF EXP(-T/C) FOR T = 1 SEC.

EXPFF:	EXP 0.983471454		;C = 1 MIN
	EXP 0.996672216		;C = 5 MIN
	EXP 0.998889506		;C = 15 MIN

;TABLE OF 1-EXP(-T/C) FOR T = 1 SEC

EXPGF:	EXP 0.0165285462	;C = 1 MIN
	EXP 0.00332778395	;C = 5 MIN
	EXP 0.00111049406	;C = 15 MIN

;TEST WORD DEPOSITED BY SWITCHES IN 20

SWTST:	SETZM 20
	JFFO 1,.+1
	CAIGE 2,NSWTT
	XCT SWTT(2)
SWTST1:	JRST 0(4)		;RESUME SCHEDULER

SWTT:	JRST SWHLT		;HALT T.S.
	JRST SWRUN1		;RUN ONLY SPECIFIED JOB
	JRST SWCRSH		;INITIATE JOB0 FUNCTION
NSWTT==.-SWTT

SWHLT:	CALL DISMSJ		;DISMISS CURRENT JOB
	MOVNI 0,1
	JRST .

SWRUN1:	HRREI 1,0(1)		;-1 OR JOB NUMBER IN RH
	JUMPL 1,SWRUN2		;-1 MEANS RESTORE TO NORMAL
	CAIGE 1,NJOBS		;LEGAL JOB NUMBER?
	SKIPGE JOBRT(1)		;RIGHT HALF OF SWITCHES SPECIFIES JOB
	JRST SWTST1		;EXCEPT THAT JOB DOESN'T EXIST
SWRUN2:	MOVEM 1,SCDRN1		;ALLOW ONLY THAT JOB TO RUN
	CALL DISMSJ		;DISMISS CURRENT FORK
	JRST SWTST1

SWCRSH:	CALL DISMSJ
	SETZM SCDRN1		;RUN ONLY JOB 0
	SETZM NXTDMP		;CAUSE DISK BACKUP OPERATION
	MOVEI 1,^D60000
	ADDM 1,TODCLK		;BUMP CLOCK TO GET IT GOING
	JRST SWTST1

;POWER FAIL DETECTED

SCHPRF:	CALL DISMSJ		;FLUSH CURRENT FORK
	MOVEI 1,^D2000
	SOJG 1,.		;WAIT FOR ABOUT 5 MS FOR IO, ETC.
	PIOFF 610000		;CLEAR WORLD
	CONO APR,1B19
	SETOM PWRDWN		;SAYS WE FINISHED PWR DWN SEQUENCE
	JRST 4,.		;SYSTEM SHOULD BE RESTARTABLE AT SYSRST

;SCHEDULER REQUEST PROCESSOR

	INTERN SCDRQ7

;SCDRQ7 CALLED BY ROUTINES HAVING PDL POINTER IN P

SCDRQ7:	PIOFF
	JSR SCDRQ
	PION
	RET

;SCDRQ CALLED BY JSR AFTER HAVING TURNED OFF PI SYSTEM

LS SCDRQ,2

SCDRQ0:	MOVEM 1,@SCDRQI
	AOS 1,SCDRQI
	CAIE 1,SCDRQB+NSCDRQ
	JRST @SCDRQ
	MOVEI 1,SCDRQB
	MOVEM 1,SCDRQI
	JRST @SCDRQ

;PROCESS SCHEDULER REQUESTS

SCDRQ1:	CAMN 4,SCDRQI
	RET
	MOVE 2,0(4)		;WORD CONTAINS DATA,,DISPATCH ADR
	HLRZ 1,2
	CALL 0(2)
	AOS 4,SCDRQO
	CAIE 4,SCDRQB+NSCDRQ
	JRST SCDRQ1
	MOVEI 4,SCDRQB
	MOVEM 4,SCDRQO
	JRST SCDRQ1

;SCHEDULER REQUESTS

	INTERN JOBSRT

JOBSRT:	MOVE 2,SPTC		;CURRENT SPT COUNT
	CAIL 2,SSPT-NOFN-100	;NEARLY FULL?
	JRST JOBSR1		;YES, DON'T PERMIT LOGIN
	MOVE 2,DRMFRE
	CAMG 2,DRMIN0		;ENOUGH DRUM SPACE?
	JRST JOBSR1		;NO
	SKIPE FREJOB		;ROOM FOR NEW JOB
	SKIPN FREFK		;AND NEW FORK?
	JRST JOBSR1		;NO
	PUSH P,1		;START JOB (FROM TTY SRV)
	CALL ASSFK		;GET A FORK
	POP P,1
	HRLI 1,NEWJBF
	IORM 1,FKINT(7)		;LEAVE TTY NUMBER FOR STARTUP ROUTINE
	RET

JOBSR1:	MOVEI 2,0(1)		;LINE NUMBER
	MOVE 1,[POINT 7,[ASCIZ /FULL
/]]
	CALL TTEMES		;GIVE USER BAD NEWS
	SETOM TTFORK(2)		;CLEAR TTY
	RET

;ASSIGN FORK SLOT

ASSFK:	HRRZ 7,@FREFK
	EXCH 7,FREFK		;GET FORK, UPDATE LIST
	SUBI 7,FKPT
	MOVEI 1,JSKP
	MOVEM 1,FKSTAT(7)	;MAKE STATUS RUNNABLE AT NEXT TEST
	MOVE 1,QBASE+1
	MOVEM 1,FKOLDS(7)	;ESTABLISH QUEUE
	CALL WTCONC		;PUT ON WAIT QUEUE
	MOVSI 1,400000+NEWFKF
	MOVEM 1,FKINT(7)	;LEAVE INTERRUPT REQUEST
	SETZM FKINTB(7)
	SETZM FKPGS(7)		;CLEAR PT AND PSB WORD
	SETZM FKJOB(7)
	SETZM FKWSP(7)
	MOVE 1,[XWD 100,3]	;INIT AGE TO 100, W.S. TO 3
	MOVEM 1,FKNR(7)
	AOS ISKED
	RET

;PROCESSOR INTERRUPTS REFERRED FROM CHANNEL 1

P7OV:	MOVEI 2,6		;OVERFLOW, FLOATING OVERFLOW
	JRST P7PI1

P7FOV:	MOVEI 2,7		;FLOATING OVERFLOW CHANNEL
	JRST P7PI1

P7POV:	MOVEI 2,^D9		;PDL OVERFLOW
P7PI1:	EXCH 1,2		;FORK NUMBER LEFT BY APR ROUTINE
	CALL PSIRQ
	RET

MPEINT:	MOVEI 2,^D11		;GIVES IO ERROR INTERRUPT
	JRST P7PI1

;BALANCE SET SCHEDULER
;CALLED TO SELECT JOB TO RUN

SKDJOB:	SETZM 21		;CLEAR JOB-NOW-RUNNING DISPLAY

LDJB5:	MOVE 1,NRPLQ
	ADD 1,IOIP
	CAIL 1,MINNR		;NEED GC?
	SKIPLE CGFLG		;NEED GARBAGE COLLECTION?
	CALL GCCOR		;YES
	MOVE 1,MAXNR		;MAX PERMISSABLE CONTINUING SUMNR
	MOVE 2,NBPROC
	CAMG 2,MAXBP		;BAL SET FULL?
	CAMGE 1,SUMNR		;OVER RESERVED?
	JRST REMJOB		;YES, REMOVE A PROCESS
	SKIPN NEBAL		;PRESENTLY PROCESS ENTERING BALSET? OR
	SKIPL SSKED		;WAIT FOR NOSKED JOB?
	JRST SKDJ7		;YES, DONT CONSIDER ADDING TO BALSET
	SKIPE NGOJOB		;JOB WAITING TO ENTER BALSET?
	JRST LDJOB		;YES, GO LOOK AT IT

SKDJ7:	MOVEI 10,BALSET		;SETUP TO SELECT BEST JOB IN B.S.
	SETO 5,
	SETZM PSKED
	MOVEI 6,-1		;HIGHER THAN HIGHEST POSS Q VAL
SKDJ1:	CAML 10,FBALS		;ALL JOBS EXAMINED?
	JRST SKDJ2		;YES
	SKIPGE 7,0(10)		;THIS ONE RUNNABLE?
	JRST SKDJ3		;NO, GO TEST IT
SKDJ4:	TLNE 7,200000		;NO-SWAP FORK?
	JRST SKDHQ		;YES, GIVE PREFERENCE
SKDHQ1:	CALL CORFCT		;GET PRIORITY VALUE
	SKIPL SCDRN1		;RUN SPECIAL JOB?
	JRST [	HLRZ 1,FKJOB(7)	;YES, GET JOB NUMBER OF THIS FORK
		CAME 1,SCDRN1	;CORRECT ONE?
		JRST SKDJ5	;NO
		JRST .+1]	;YES
	CAIL 1,0(6)		;LESS THAN MIN SO FAR?
	JRST SKDJ5		;NO
	MOVEI 6,0(1)		;YES, SO IS PREFERABLE
SKDHQ2:	MOVEI 5,0(7)		;REMEMBER FORK NUMBER AND Q
SKDJ5:	AOJA 10,SKDJ1

;TEST WAITING BALSET FORK

SKDJ3:	TLNE 7,100000		;UNUSED ENTRY?
	JRST SKDJ5		;YES
	MOVE 2,FKPGST(7)	;GET TEST ROUTINE ADDRESS
	HLRZ 1,2		;AND HALF WORD DATA
	JSP 4,0(2)		;CALL TEST ROUTINE
	JRST SKDJ5		;STILL WAITING
	TLZ 7,400000
	MOVEM 7,0(10)
	TLNN 7,(1B3)		;THIS FORK DESIGNATED FOR REMOVAL?
	JRST SKDJ4		;NO
	SUBI 10,BALSET
	HRRZ 1,FKNR(7)		;BUMP RESERVE SO REMBSJ CAN REDUCE IT
	ADDM 1,SUMNR
	CALL REMBSJ		;REMOVE FROM BAL SET
	CALL GOCONC		;ADD TO READY LIST
	JRST SKDJ7		;START OVER

SKDJ2:	SKIPE PSKED		;PAGE TRANSFER FINISHED LATELY?
	JRST SKDJ7		;YES, RECHECK
	JUMPL 5,BKGND1		;-1 MEANS FOUND NO JOB TO RUN
	SKIPL SSKED		;CAN RUN ANY JOB?
	JRST SKDHQ3		;NO, ONLY NOSKED ONE
	SKIPL SCDRN1		;RUN SPECIAL JOB?
	JRST [	HLRZ 1,FKJOB(5)	;GET SELECTED FORKS JOB NO
		CAME 1,SCDRN1	;CORRECT ONE?
		JRST REMJOB	;NO, REMOVE FROM BAL SET
		JRST .+1]
SKDHQ4:	MOVEI 7,0(5)
SETRT:	AOS APCLKC
	ISB SCDCHN		;UPDATE RUN CLOCKS
	HRRZM 7,FORKX
	CALL SETPPG		;SETUP PAGER FOR THIS PROCESS
	HRRZ 10,FKPT(7)
	HRRZS BALSET(10)	;CLEAR ANY FLAGS
	HLRZ 2,FKSTAT(7)	;SETUP REMAINING TIME
	HRRZ 3,FKSTAT(7)
	SUB 3,QBASE(2)
	MOVEM 3,RJQNT
	SETZB 2,RUNT1
	EXCH 2,JOBRTT
	ADDM 2,SKDTM1		;CHARGE TIME TO SCHEDULER
	MOVEI 2,0
	HRLM 2,FKPT(7)		;PROCESSOR NUMBER
	HLRZ 1,FKSTAT(7)	;QUEUE LEVEL OF FORK
	HLRZ 2,FKJOB(7)		;JOB NUMBER OF FORK
	IOR 1,BITS(2)		;BIT POSITION DESIGNATES JOB NUMBER
	MOVEM 1,21		;FORK NUMBER AND STATUS FOR LIGHTS
SETOVF:	MOVEI 2,5B29+5B32	;CLEAR OV AND FOV FLAGS
	MOVE 1,PSICHM		;GET THIS FORKS CHANNEL MASK
	TLNE 1,(1B6)		;CHANNEL 6?
	TRC 2,6B32		;YES, ENABLE OVERFLOW
	TLNE 1,(1B7)		;CHANNEL 7?
	TRC 2,6B29		;YES, ENABLE FLOATING OVERFLOW
	CONO APR,APRCHN(2)	;SET APR ACCORDING TO FORGOING
	RET

SKDHQ:	MOVEI 7,0(7)		;FORK NUMBER
	CAME 7,SSKED		;THE NOSKED ONE?
	JRST SKDHQ1		;NO, USE ORDINARY ALGORITHM
	SETZ 6,			;MAKE SURE FORK GET SELECTED
	JRST SKDHQ2

;BACKGROUND ACTIVITIES, IF NO PROCESS TO RUN

SKDHQ3:	CAMN 5,SSKED		;THE NOSKED FORK?
	JRST SKDHQ4		;YES, RUN IT
BKGND1:	MOVSI 16,-NBKR		;PERFORM ANY PERIODIC ROUTINES
	XCT BKGNDT(16)		;WHICH CAN BE RUN MORE OFTEN THAN
	AOBJN 16,.-1		;WHEN THEIR CLOCK RUN OUT
	SKIPN PIAPRX		;RECENT CLOCK INTERRUPT?
	JRST BKGND2		;NO, NOTHING TO UPDATE
	AOS ISKED		;CHECK WAITING JOBS NEXT TIME
	SETZM PIAPRX		;SO AS TO NOTE WHEN APR INT HAPPENS
	AOS APCLKC
	ISB SCDCHN		;UPDATE RUN CLOCKS
	SETZ 1,
	EXCH 1,JOBRTT		;GET TIME SINCE LAST UPDATE
	SKIPE 2,NBPROC		;RUNNABLE JOBS IN EXISTENCE?
	ADDM 1,SKDTM1		;YES, CHARGE 'INEFFICIENCY' CLOCK
	CAIG 2,0
	ADDM 1,SKDTM0		;NO, CHARGE 'NULL' CLOCK
BKGND2:	AOJA 0,SCH0		;TRY AGAIN

;CORE OVER RESERVED, SELECT JOB TO REMOVE
;SELECT THE ONE WITH LARGEST Q VALUE

REMJOB:	MOVEI 10,BALSET
	SETZB 6,5
REMJ2:	CAML 10,FBALS
	JRST REMJ1
	HRRZ 7,0(10)		;GET FORK INDEX
	SKIPL SCDRN1		;RUNNING SPECIAL JOB?
	JRST [	HLRZ 1,FKJOB(7)	;YES, GET THIS FORKS JOB NO
		CAMN 1,SCDRN1	;THIS ONE?
		AOJA 10,REMJ2	;YES, DON'T REMOVE IT
		JRST .+1]
	HRRZ 1,FKPGST(7)	;GET WAITING STATUS
	SKIPGE 2,0(10)
	CAIE 1,SWPINT		;ENTERING BALSET?
	TLNE 2,240000		;RESCHEDULABLE AND NOT REMOVED?
	AOJA 10,REMJ2		;NO
	HRRZ 1,FKWSP(7)		;SIZE
	IMUL 1,BTFACT		;TIMES FACTOR
	CAMLE 1,NBP(10)		;(INDEX NBT) IN BALSET LONG ENOUGH?
	JRST [	HLRZ 1,FKSTAT(7) ;NO, MAKE FORK HIGH PRIORITY, USE Q
		JRST .+2]
	CALL CORFCT		;GET WEIGHTED FORK STATUS
	CAMGE 1,6		;MAX SO FAR?
	AOJA 10,REMJ2		;NO
	MOVEI 5,0(10)		;YES, SAVE PROC NUMBER AND VALUE
	MOVEI 6,0(1)
	AOJA 10,REMJ2

REMJ1:	JUMPE 5,REMJ5		;NO REMOVABLE JOB FOUND
	SUBI 5,BALSET
	SKIPGE 7,BALSET(5)	;FORK IN PAGE WAIT?
	JRST REMJ4		;YES
	CALL REMBSJ		;REMOVE JOB FROM BAL SET
	CALL GOCONC		;PUT ON READY LIST
	JRST LDJB5

REMJ4:	MOVSI 1,1B21		;INDICATE FORK DESIGNATED FOR REMOVAL
	IORM 1,BALSET(5)
	HRRZ 1,FKNR(7)		;GET RESERVE
	MOVN 1,1
	ADDM 1,SUMNR		;RELEASE IT
	JRST LDJB5

REMJ5:	JRST SKDJ7		;NOTHING ELSE TO DO

;MAINTAIN INTEGRAL NBPROC DT

BSMEAS:	MOVE 1,TODCLK
	SUBM 1,BSCTIM		;DT - TIME SINCE LAST UPDATE
	EXCH 1,BSCTIM
	IMUL 1,NBPROC		;NBPROC * DT
	ADDM 1,BSTSUM
	RET

;REMOVE JOB FROM BALANCE SET

REMBSJ:	HRRZ 10,FKPT(7)		;GET PROCESS POINTER
	HRRZ 2,FKNR(7)		;GET RESERVE
	MOVN 1,2
	ADDM 1,SUMNR		;REDUCE BALSET SIZE
	CAML 2,NPMAX		;BUT WITHIN SYSTEM MAX
	MOVE 2,NPMAX
	HRRM 2,FKNR(7)		;SET AS RESERVE FOR NEXT RUNNING
	AOS CGFLG		;MAY HAVE LEFT GARBAGE
	MOVSI 2,-PLKV
	SKIPN INDFLG		;LOCKING JSB'S?
	JRST REMB1		;NO
	HRRZ 1,FKJOB(7)		;GET JSB SPT INDEX
	MOVE 1,SPT(1)		;CORE ADR
	ADDM 2,CST1(1)		;DECREASE LOCK COUNT
REMB1:	HRRZ 1,FKPGS(7)
	MOVE 1,SPT(1)
	ADDM 2,CST1(1)		;UNLOCK PSB
	HLRZ 1,FKPGS(7)
	JUMPE 1,.+3
	MOVE 1,SPT(1)
	ADDM 2,CST1(1)		;UNLOCK PT
	MOVE 4,FBALS
	SETOM BALSET(10)	;SET PROCESS WORD TO EMPTY
	CALL BSMEAS		;UPDATE MEASUREMENTS
	SOSG NBPROC
	SETZM SUMNR		;BALSET EMPTY, BE SURE SUMNR NOW 0
	CAIN 4,BALSET+1(10)	;LAST WORD IN USE?
	JRST REMBS3		;YES, GO ADJUST LIMITS OF TABLE
REMBS2:	RET

REMBS3:	SETO 1,
REMBS1:	SOS 4,FBALS		;ADJUST END OF TABLE POINTER
	CAIN 4,BALSET		;TABLE EMPTY?
	JRST REMBS2		;YES
	CAME 1,-1(4)		;LAST ENTRY EMPTY?
	JRST REMBS2		;NO
	JRST REMBS1		;YES, KEEP CHECKING

SETRES:	HRRZ 3,FKPT(7)		;GET BALSET NUMBER
	HRRZ 2,FKNR(7)		;CURRENT RESERVE
	SUB 1,2			;DIFFERENCE
	ADDM 1,SUMNR
	ADDM 1,FKNR(7)		;ADJUST
	RET

;ADD JOB TO BALANCE SET IF POSSIBLE

LDJOB:	SETZM MINNRC		;0 UNLESS TRYING TO LOAD FORK
	CALL SCDRUN		;SELECT BEST RUNNABLE FORK
	JUMPL 7,SKDJ7		;WASN'T ONE
	SKIPG NBPROC		;BALSET NOW EMPTY?
	JRST LDJB6		;YES, LOAD RUNNABLE FORK
	CALL GETMBQ		;COMPUTE MAX FKSTAT OF BALSET FORKS
	CALL CORFCT		;GET WEIGHTED FKSTAT OF NEW PROCESS
	CAMGE 1,MAXBSQ		;BETTER THAN WORST NOW IN BAL SET?
	JRST LDJB6		;YES, LOAD IT
	MOVE 1,NBPROC
	CAML 1,MAXBP		;ROOM IN BALSET?
	JRST LDJB1		;NO, DON'T LOAD
	HRRZ 1,FKNR(7)		;GET RESERVE
	ADD 1,SUMNR		;INCREASE SUM OF RESERVES
	MOVE 2,MAXNR
	SUB 2,NBPROC		;TOTAL CORE LESS ONE PAGE/ACTIVE PROC
	CAIGE 2,0(1)		;ROOM FOR SELECTED JOB?
	JRST LDJB1		;NO
LDJB6:	MOVE 3,NRPLQ		;PAGES NOW ON REPLACABLE
	CAIGE 3,MINNR		;ENOUGH TO LOAD PSB AND UPT?
	JRST LDJB7		;NO
	MOVEI 10,BALSET		;SELECT PROCESS NUMBER
	SETO 1,
LDJB2:	CAML 10,FBALS
	JRST LDJB3
	CAME 1,0(10)		;DELETED ENTRY?
	AOJA 10,LDJB2		;NO

LDJB4:	SUBI 10,BALSET
	MOVEM 7,BALSET(10)	;YES, STORE FORK INDEX IN SLOT
	HRRZM 10,FKPT(7)	;REMEMBER PROCESS POINTER
	CALL BSMEAS
	AOS NBPROC		;COUNT NUMBER OF PROCESSES
	HRRZ 1,FKNR(7)		;GET WORKING SET SIZE
	ADDM 1,SUMNR		;UPDATE SUM OF NR
	HRRZS 1,FKWSP(7)	;START TAV AT 0
	IMUL 1,BTFACT		;INIT NBT ACCORDING TO NUMBER OF
	MOVEM 1,NBT(10)		;PAGES NOW IN CORE
	HRRZ 1,FKPGS(7)		;GET PSB INTO CORE
	JUMPN 1,.+3
	CALL ASSPT		;NO PSB, GO ASSIGN ONE
	HRRZM 1,FKPGS(7)
	CALL SWPIN0
	HLRZ 1,FKPGS(7)
	JUMPN 1,.+3
	CALL ASSPT		;NO UPT, ASSIGN ONE
	HRLM 1,FKPGS(7)
	CALL SWPIN0
	HRRZ 1,FKJOB(7)		;GET JSB SPTN
	JUMPN 1,.+3		;IS ONE?
	CALL ASSPT		;NO, ASSIGN FOR NEW JOB
	HRRM 1,FKJOB(7)
	SKIPE INDFLG		;LOCKING JSB'S?
	CALL SWPIN0		;SWAP IT IN AND LOCK IT
LDJB8:	MOVEI 1,SWPINT
	MOVEM 1,FKPGST(7)	;SET TEST TO WAIT FOR PSB AND PT
	MOVSI 1,400000
	HLLM 1,BALSET(10)
	AOS NEBAL		;ONE MORE JOB NOW ENTERING BALSET
	JRST LDJB5		;CONTINUE SCHEDULING

LDJB1:	CALL GOCONC		;PUT PROCESS BACK ON READY LIST
	JRST SKDJ7

LDJB3:	AOS FBALS		;INCREASE END OF TABLE POINTER
	JRST LDJB4

LDJB7:	CALL GOCONC		;PUT FORK BACK ON GOLST
	MOVEI 1,MINNR
	MOVEM 1,MINNRC		;SET RPLQ MINIMUM TO RESERVE SPACE
	ADD 3,IOIP		;ROOM TO LOAD PSB AND UPT WHEN CURRENT
	CAIL 3,MINNR		;WRITES COMPLETE?
	JRST SKDJ7		;YES, CONTINUE TO RUN WHILE WRITES COMPL
	JRST REMJOB		;NO, REMOVE A FORK FROM BALSET

;COMPUTE MAX Q OF PROCESSES NOW IN BALSET (I.E. LEAST PREFERABLE FORK)

GETMBQ:	PUSH P,7
	MOVEI 5,BALSET
	SETZ 6,
GMB1:	CAML 5,FBALS		;LOOKED AT ALL?
	JRST [	MOVEM 6,MAXBSQ	;YES, SAVE MAX
		POP P,7
		RET]
	HRRZ 7,0(5)		;GET FORK NUMBER
	CAIN 7,-1		;SLOT IN USE?
	AOJA 5,GMB1		;NO
	HRRZ 1,FKWSP(7)
	IMUL 1,BTFACT		;MIN TIME IN BALSET
	CAMLE 1,NBP(5)		;(INDEXES NBT) BEEN IN LONG ENOUGH?
	AOJA 5,GMB1		;NO, TREAT AS HIGHEST PRIORITY
	CALL CORFCT		;GET WEIGHTED FKSTAT
	CAIL 1,0(6)		;MAX?
	MOVEI 6,0(1)		;YES
	AOJA 5,GMB1

BTFACT:	EXP ^D20		;MS/PAGE MINIMUM FOR BALSET

;DISMISS JOB FOR RESCHEDULING

DISMSJ:	MOVE 7,FORKX
	JUMPL 7,R		;NO JOB
	CALL SAVRT		;UPDATE QUEUE AND QUANTUM
QNTDM1:	SETZ 1,
	EXCH 1,PGTIM		;TIME SINCE LAST PAGER TRAP
	HRRZ 2,FKWSP(7)		;CURRENT SIZE
	IDIVI 1,0(2)
	MOVSI 1,0(1)
	ADDM 1,FKWSP(7)		;UPDATE P-FAULT AVERAGE
	SETZ 1,
	JRST SCHP2

;DISMISS FORK ON QUANTUM OVERFLOW

QNTDMS:	MOVE 7,FORKX
	JUMPL 7,R
	CALL SAVRT		;UPDATE QUEUE VALUE
	HRRZ 1,FKWSP(7)
	CALL SETRES		;SET RESERVE TO CURRENT SIZE
	JRST QNTDM1

;TIMER ROUTINES

;	JSP 4,STIME	;STARTS TIMING
;	..		;PROGRAM
;	JSP 4,ETIME	;ENDS TIMING, RETURNS TIME IN 1
;	ADDM 1,CLOCK	;ADD TIME TO APPROPRIATE CLOCK

STIME:	AOS APCLKC
	ISB SCDCHN		;UPDATE CLOCKS
	SETZ 1,
	EXCH 1,JOBRTT		;GET AND RESET RUNTIME
	PUSH P,1
	JRST 0(4)

ETIME:	AOS APCLKC
	ISB SCDCHN
	POP P,1			;OLD RUNTIME
	EXCH 1,JOBRTT		;RESTORE OLD RUNTIME, GET RUNTIME OF
	JRST 0(4)		;TIMED CODE AND RETURN IT

;UPDATE QUEUE NUMBER AND TIME USED VALUE

SAVRT:	JSP 3,UCLOCK		;UPDATE CLOCKS
	HLRZ 2,FKSTAT(7)	;CURRENT QUEUE NUMBER
	HRLOI 1,377777		;LARGEST NUMBER
	EXCH 1,RJQNT		;GET REMAINING QUANTUM
	MOVE 3,RUNT1		;RUNTIME THIS RUNNING
	ADDM 3,QSUM(2)		;ACCUMULATE STATISTIC
	HRRZ 10,FKPT(7)		;BALSET INDEX
	ADDM 3,NBT(10)		;ACCUMULATE RUNTIME IN BALSET
	JUMPG 1,DISMJ1		;NOT EXHAUSTED
	MOVE 1,JOBNO
	SKIPE JOBCK0		;GUARANTEE WORDS INIT'ED?
	JRST SAVRT7		;YES, GO CHECK CURRENT PERFORMANCE
	MOVE 3,TODCLK		;INITIALIZE TIME QUARANTEE WORDS
	MOVEM 3,JOBCK0
	MOVE 3,JOBRT(1)
	MOVEM 3,JOBCK1
SAVRT7:	LDB 3,[POINT 7,JOBBIT,17] ;GET GUARANTEE PERCENTAGE
	JUMPE 3,SAVRT8		;NOT SPECIAL
	MOVE 4,JOBRT(1)		;COMPUTE RUNTIME DURING TEST INTERVAL
	SUB 4,JOBCK1
	MOVE 1,TODCLK		;COMPUTE REAL TIME OF TEST INTERVAL
	SUB 1,JOBCK0
	IMULI 4,^D100		;COMPUTE RUNTM*100%/PCT TO GET
	IDIV 4,3		;EXPECTED REAL TIME
	SUB 4,1			;EXCESS OR DEFICIT OF REAL TIME
	MOVEM 4,23		;FOR LIGHT WATCHERS
	HRLM 2,23		; ..
	JUMPGE 4,SAVRT5		;.G. 0 MEANS BETTER THAN GUARANTEE
	MOVEI 2,0		;KEEP ON QUEUE 0 TO GET EXCLUSIVE TIME
	JRST SAVRT9

SAVRT8:	SETZM FKTIME(7)
	LDB 3,[POINT 6,JOBBIT,35] ;GET MAX Q FOR THIS JOB
	CAIL 2,0(3)		;IF REACHED MAX Q, AND 
	JUMPN 3,[LDB 2,[POINT 6,JOBBIT,29] ;PRIORITY WORD NOT 0,
		MOVEM 7,23	;FOR DISPLAY
		JRST SAVRT9]	;SET NEW Q AS SPECIFIED
	CAIGE 2,MAXQ		;NOW ON MAX Q?
	AOJA 2,SAVRT9		;NO, GO TO NEXT ONE
SAVRT9:	MOVSM 2,FKSTAT(7)
	MOVE 3,TODCLK
	SKIPN FKTIME(7)		;TIME ON QUEUE ALREADY SET?
	MOVEM 3,FKTIME(7)	;NO, SET IT
	SKIPA 1,QBASE+1(2)	;NEXT QUEUE TIME
DISMJ1:	ADD 1,QBASE(2)		;INCREASE BY BASE TIME
	HRRM 1,FKSTAT(7)
	RET

;4 NOW CONTAINS TIME SUCH THAT AFTER THAT REAL-TIME INTERVAL,
;WITH NO RUNNING OF PROGRAM, ACTUAL PCT WILL EXACTLY EQUAL DESIRED PCT

SAVRT5:	CAIGE 4,LOWQT		;ACCUMULATED EXCESS .GE. LOW-Q QUANT?
	JRST [	CAIGE 2,MAXQ-1	;NO, STILL ON HIGHER QUEUES?
		JRST SAVRT8	;YES, FOLLOW NORMAL ALGORITHM
		MOVEI 2,MAXQ-1	;STAY ON SECOND LOWEST QUEUE
		SETZM FKTIME(7)
		JRST SAVRT9]
	CAIGE 4,2*LOWQT		;ACCUMULATED LARGE EXCESS?
	JRST SAVRT6		;NO
	SUBI 4,2*LOWQT		;YES, REMOVE EXCESS OVER 2*LOWQT
	MOVN 4,4
	ADDM 4,JOBCK0		;FROM CONSIDERATION
	MOVEI 4,2*LOWQT
SAVRT6:	ADD 4,TODCLK		;COMPUTE WHEN TO RUN AGAIN
	MOVEM 4,FKTIME(7)
	MOVEI 2,0		;AND RUN ON 0 AT THAT TIME
	JRST SAVRT9

;UPDATE USER CLOCKS ON REQUEST
;CALLED WITH  JSP 3,UCLOCK

UCLOCK:	AOS APCLKC
	ISB SCDCHN		;UPDATE SCHEDULER CLOCKS
	MOVE 2,JOBNO
	SETZ 1,
	EXCH 1,JOBRTT		;RUN TIME SINCE LAST UPDATE
	ADDM 1,JOBRT(2)		;ACCOUNT FOR JOB
	ADDM 1,FKRT		;ACCOUNT FOR FORK
	ADDM 1,PGTIM		;PAGE TRAPS
	ADDM 1,RUNT1		;LOCAL RUNTIME
	HRRZ 2,JOBNAM(2)	;GET SUBSYSTEM INDEX
	ADDM 1,STIMES(2)	;ACCUMULATE SUBSYSTEM TIME
	JRST 0(3)

WTCONC:	MOVE 1,TODCLK		;SAVE TIME FORK WAS PUT INTO WAITING
	MOVEM 1,FKPGST(7)
	HRRZ 1,FKWSP(7)
	JUMPN 1,WTCON1		;NO PAGES IN CORE?
	HRRZ 1,FKCNO(7)		;YES, HAS CORE NUMBER?
	JUMPE 1,WTCON1
	MOVE 1,BITS(1)		;YES, DEASSIGN IT
	IORM 1,FRECB
	HLLZS FKCNO(7)
WTCON1:	MOVEI 1,WTLST
	HRLZM 1,FKPT(7)		;REMEMBER WHERE FORK IS
	MOVEI 6,FKPT(7)		;PUT FORK ON WAIT LIST
	HRRM 6,@WTLSTL
	MOVEM 6,WTLSTL
	RET

;TEST ALL WAITING JOBS FOR READY (CONDITION SATISFIED)

SCHED1:	SETZM ISKED
	MOVEI 6,WTLST		;HEAD OF WAITING LIST
SCHEDA:	MOVEI 5,0(6)		;KEEP POINTER TO LAST ONE IN 5,
SCHEDB:	HRRZ 6,0(5)		;POINTER TO CURRENT ONE IN 6
	JUMPE 6,R		;DONE, LIST EMPTY
	MOVEI 7,@FKPT6M		;FORK INDEX
	MOVE 2,FKSTAT(7)	;FKSTAT/  TEST VALUE,,ADR OF TEST ROUTINE
	HLRZ 1,2
	JSP 4,0(2)		;CALL TEST ROUTINE
	JRST SCHEDI		;NO SKIP => STILL NOT RUNNABLE
	CALL NEWST		;ESTABLISH NEW QUEUE STATUS
SCHEDJ:	HRRZ 2,0(6)		;REMOVE FROM WAIT LIST
	HRRM 2,0(5)
	CAMN 6,WTLSTL
	MOVEM 5,WTLSTL
	CALL GOCONC		;PUT ON READY LIST
	AOS SKEDF2		;RESCHED SINCE THIS JOB MIGHT BE BETTER
	JRST SCHEDB

SCHEDI:	SKIPGE 1,FKINT(7)	;INTERRUPT WAITING?
	TLNE 1,200000		;AND ACCEPTABLE?
	JRST SCHEDA		;NO
	MOVSI 1,PSIWTF		;YES, REMEMBER WAS IN WAIT STATE
	IORM 1,FKINT(7)
	PUSH P,FKSTAT(7)	;INTERRUPT - SAVE WAIT TEST
	CALL NEWST		;COMPUTE NEW STATUS
	POP P,FKOLDS(7)		;REMEMBER WAIT TEST
	JRST SCHEDJ		;GO MAKE RUNNABLE

GOCONC:	MOVEI 2,GOLST		;REMEMBER WHERE FORK IS
	HRLZM 2,FKPT(7)
	MOVEI 6,FKPT(7)
	HRRM 6,@GOLSTL		;ADD TO READY LIST
	MOVEM 6,GOLSTL
	AOS NGOJOB		;KEEP COUNT OF READY JOBS
	HRRZ 2,FKCNO(7)
	JUMPN 2,R		;HAS CORE NUMBER ALREADY?
	PUSH P,3		;NO, ASSIGN ONE
	MOVE 2,FRECB
	JFFO 2,.+2
	MOVEI 3,^D35		;NONE AVAILABLE, USE 35
	MOVE 2,BITS(3)
	ANDCAM 2,FRECB		;MAKE IT NO LONGER FREE
	HRRM 3,FKCNO(7)
	POP P,3
	RET

JSKP:	JRST 1(4)
JRET:	JRST 0(4)

;COMPUTE PRIORITY NUMBER FOR FORK

CORFCT:	MOVE 1,FKTIME(7)	;TIME ON CURRENT QUEUE
	SUB 1,TODCLK		;NEGATIVE OF INTERVAL ON CURRENT QUEUE
	JUMPG 1,[ADDI 1,400000	;NOT YET TIME TO RUN, RETURN VERY LOW
		RET]		;PRIORITY NUMBER
	PUSH P,2
	HLRZ 2,FKSTAT(7)	;CURRENT QUEUE NUMBER
	ASH 1,@TFACTR(2)	;DIVIDE TIME AS FUNCTION OF QUEUE
	ADD 1,TBASE(2)
	CAIGE 1,0		;IN CASE WAITED VERY LONG
	SETZ 1,			;SET TO MAX PRIORITY
	POP P,2
	RET

;QUEUE PARAMETER TABLES

	RADIX 10

QBASE:	0
	100
	500
	2500
	4500
	14500

LOWQT=10000			;TIME QUANTUM OF LOWEST QUEUE

TBASE:	1000
	3000
	8000
	10500
	16750

TFACTR:	Z 0			;INDIRECTED TO BY ASH INSTRUCTION
	Z -1
	Z -2
	Z -3
	Z -4

	RADIX 8

;HEURISTIC FOR ADJUSTING QUEUE LEVEL AFTER I/O WAIT

NEWST:	MOVE 1,TODCLK		;CALCULATE ACTUAL WAITING TIME
	SUB 1,FKPGST(7)
	ADDM 1,FKTIME(7)	;DON'T COUNT WAIT TIME
	JFCL .+4		;JFCL THIS TO INCLUDE NJOB WEIGHTING
	MOVE 2,NGOJOB		;CALC NUMBER OF CURRENT CPU JOBS
	ADD 2,NBPROC
	IDIVI 1,1(2)		;PLUS 1 FOR SELF
	CAMGE 1,QBASE+1		;WAITED AT LEASE QUEUE 0 QUANTUM?
	JRST [	MOVE 2,FKOLDS(7) ;NO, GIVE NO CREDIT
		JRST NEWST2]	;KEEP OLD VALUES
	HRRZ 2,FKWSP(7)		;NUMBER OF PAGES NOW IN CORE
	CAIGE 2,MINNR
	MOVEI 2,MINNR		;BUT AT LEAST REQUIRED PAGES
	HRRM 2,FKNR(7)
	HRRZ 2,FKOLDS(7)	;OLD QUEUE VALUE
	SUB 2,1			;LESS ADJUSTED WAITING TIME
	CAMG 2,QBASE+2		;WAITED LONG ENOUGH FOR HIGH-QUEUE?
	JRST NEWST1		;YES
	HLRZ 1,FKOLDS(7)	;PREVIOUS QUEUE LEVEL
	SUBI 1,2		;BUMP UP AT LEAST ONE
	CAML 2,QBASE+1(1)	;LONGEST?
	MOVE 2,QBASE+1(1)	;YES, MAKE 2ND LONGEST
	CAMGE 2,QBASE(1)	;ABOVE BASE FOR THIS LEVEL?
	SOJG 1,.-1		;NO, GO A LEVEL DOWN
NEWST5:	MOVE 2,TBASE		;REQUEUE WITH PRIORITY EQUAL TO QUEUE 0
	SUB 2,TBASE(1)
	MOVN 3,TFACTR(1)
	ASH 2,0(3)
	ADD 2,TODCLK
	MOVEM 2,FKTIME(7)	;YES
	MOVE 2,QBASE(1)		;GIVE QUEUE 0 QUANTUM
	ADD 2,QBASE+1
	HRLI 2,0(1)		;CONSTRUCT FKSTAT WORD
NEWST2:	MOVEM 2,FKSTAT(7)
	RET

NEWST1:	MOVE 2,QBASE+1
	MOVE 1,TODCLK
	MOVEM 1,FKTIME(7)	;REMEMBER TIME ON CURRENT QUEUE
	JRST NEWST2

;SCHEDULE BEST JOB TO RUN NOW

SCDRUN:	MOVEI 6,GOLST		;LIST OF READY JOBS
	MOVEI 4,-1		;LOWEST NUMBER SO FAR
SCHEDC:	MOVEI 5,0(6)
	HRRZ 6,0(5)
	JUMPE 6,SCHEDD		;LIST EMPTY, NO MORE TO TEST
	MOVEI 7,@FKPT6M		;COMPUTE FORK INDEX
	CALL CORFCT		;GET PRIORITY VALUE
	CAIL 1,0(4)		;LOWEST YET?
	JRST SCHEDC		;NO
	SKIPL SCDRN1		;RUN ONLY SPECIFIED FORK
	JRST [	HLRZ 2,FKJOB(7)	;GET, THIS FORKS JOB NUMBER
		CAME 2,SCDRN1	;RUN THIS ONE?
		JRST SCHEDC	;NO, IGNORE
		JRST .+1]
	MOVEI 4,0(1)		;YES, REMEMBER NEW VALUE
	MOVEI 3,0(5)		;AND LOCATION
	JRST SCHEDC

SCHEDD:	MOVNI 7,1
	CAIN 4,-1		;ANY JOB FOUND?
	RET			;NO, RETURN NULL JOB
	HRRZ 6,0(3)		;REMOVE FROM READY LIST
	HRRZ 2,0(6)
	HRRM 2,0(3)
	CAMN 6,GOLSTL
	MOVEM 3,GOLSTL
	SOS NGOJOB
	MOVEI 7,@FKPT6M		;RETURN FORK INDEX
	RET

;CLOCK ROUTINES

;CALLED FROM APR INTERRUPT, 60 CY CLOCK INITIATES BREAK ON CH7
;FOR SERVICE

APCLK1:	CONO APR,1000+APRCHN	;TURN OFF FLAG
	AOS APCLKC		;FOR CH7 ROUTINE
	ISB 7
	SOSLE MSCNT		;THIRD TICK?
	JEN @PIAPRX
	MOVEM 1,MSCNT		;THIRD TICK (50 MS.), SYNC 1 MS. CLOCK
	SKIPE 1,SYNCC		;COUNTED 50 MS.?
	JRST [	ADDM 1,TODCLK	;NO, FINISH UP LAST TICKS
		JRST .+2]	;AND LEAVE IT RUNNING
	CONO OAP,1B29		;TURN CLOCK BACK ON
	MOVEI 1,^D50
	MOVEM 1,SYNCC		;SET TO SYNC AFTER 50 TICKS
	MOVEI 1,3		;AND 3 TICKS OF 60 HZ CLOCK
	EXCH 1,MSCNT
	JEN @PIAPRX

;SCHEDULER CLOCK UPDATE

APCLK:	SETZM APCLKC		;CLEAR REQUEST FLAG
	MOVEM 1,CLKAC1		;SAVE COUPLE AC'S
	MOVEM 2,CLKAC2
	MOVE 1,TODCLK		;CLOCK UPDATED BY 1MS INTERRUPT
	SUBM 1,OLDTCK		;COMPUT NUMBER MS. SINCE LAST UPDATE
	EXCH 1,OLDTCK		;SAVE 'NOW' IN OLDTCK
	ADDM 1,JOBRTT
	MOVN 1,1
	MOVSI 2,-NPCLKS		;UPDATE PROCESS CLOCKS
APCLK3:	ADDM 1,RJQNT(2)		;UPDATE (RJQNT IS FIRST OF TABLE)
	SKIPG RJQNT(2)		;TIMED OUT?
	AOS ISKED		;YES, NOTIFY SCHED
	AOBJN 2,APCLK3
	MOVE 2,CLKAC2		;RESTORE AC2
	MOVE 1,CLKAC1
	JRST APCLKX

;HALT JOB

	INTERN HLTJB,HLTFK1,CLRM0
	EXTERN KSELF,LOGTOT,LOGDES

HLTJB:	HRRE 6,CTRLTT
	JUMPL 6,HLTJB1		;IF JOB DETACHED
	SETZM TTPSI(6)		;CLEAR TTY WORDS
	SETOM TTFORK(6)
HLTJB1:	MOVE 5,JOBNO
	SETZM CTRLTT		;CLEAR CONTROL TTY WORDS
	HRRZS JOBPT(5)
	MOVEI 1,400000
	SETO 2,
	DIC			;DEACTIVATE ALL INTERRUPTS
	MOVNI 1,1
	CLOSF
	JFCL
	RELD			;RELEASE ALL DEVICES
	JFCL
	MOVEI 1,-4
	KFORK			;KILL ALL INFERIOR FORKS
	MOVE 7,FORKX		;THIS FORK.
	HLLZ 2,FKPGS(7)		;FORKS PT
	MOVSI 6,-1000
	CALL CLRM0		;CLEAR UPT
	MOVE 6,[XWD PJMPG-PPMPG,PJMPG+40]
	HRLZ 2,FKJOB(7)		;GET SPTN OF JSB
	CALL CLRM0		;CLEAR ANY PAGES MAPPED IN JOB AREA
	SETO 1,
	HRLZ 2,JOBPMF
	MOVSI 6,-1000
	HRRI 2,0(6)
	PMAP			;DELETE CONTENTS OF PMF
	AOBJN 6,.-2
	HRRZ 1,JOBPMF
	SETOM JOBPMF		;ENABLE CLOSE OF PMF
	CLOSF			;CLOSE PMF - NO JSYS' AFTER HERE
	JFCL
HLTJB4:	SETZM PSB+UPTPG
	SETZM PSB+UACPG		;CURRENTLY CAN ONLY BE PSB
	MOVE 6,[XWD CPTPG+1-PSBPG,CPTPG+1]
	HRLZ 2,FKPGS(7)
	CALL CLRM0		;CLEAR PAGES IN PP AREA
	HRRZ 1,FKJOB(7)		;JSB
	CALL WTSPT		;WAIT FOR IT TO BE UNSHARED
	CALL WTFPGS		;WAIT FOR PSB AND UPT TO BE IN NO MAPS
	MOVE 1,JOBNO		;RELEASE JOB NUMBER
	SETZM JOBDIR(1)		;CLEAR DIRECTORY NUMBER
	SETOM JOBRT(1)		;INDICATE JOB NUMBER NOT IN USE

	ADDI 1,JOBPT
	EXCH 1,FREJOB		;PUT SLOT ON FREE LIST
	MOVEM 1,@FREJOB
HLTFK1:	JSYS ENSKED		;ENTER SCHEDULER
	CALL REMBSJ		;REMOVE FORK FROM BAL SET
	MOVEI 1,(1B0)
	HRLM 1,FKPT(7)		;NOTE FORK NOT IN BALSET
	MOVSI 1,1
	ADDM 1,CGFLG		;INSIST ON GCCOR
	HRRZ 1,FKJOB(7)		;JSB
	LDB 2,[POINT 14,SPT(1),13] ;SHARE COUNT NOW 1?
	CAIE 2,1		;LAST USE OF JSB?
	JRST [	MOVSI 2,-1B31	;NO, REDUCE SHARE COUNT
		ADDM 2,SPT(1)
		JRST .+2]
	CALL DESPT		;YES, DELETE IT (LOGOUT CASE)
	HLRZ 1,FKPGS(7)		;UPT
	CALL DESPT		;DELETE IT
	HRRZ 1,FKPGS(7)
	CALL DESPT		;DEASSIGN PSB
	SETOM FORKX
	PUSH P,7
	ADDI 7,FKPT
	EXCH 7,FREFK		;PUT FORK NUMBER ON FREE LIST
	TLO 7,400000
	MOVEM 7,@FREFK
	CALL GCCOR		;CLEAN UP PAGES
	POP P,7
	HRRZ 1,FKWSP(7)		;MAKE SURE FORK CLEANED UP
	HRRZ 2,FKCNO(7)
	CAIN 1,0
	CAIE 2,0
	BUG(CHK,<FORK NOT PROPERLY DELETED>)
	JRST SCHED0		;NOW THERE IS NOTHING LEFT OF JOB...

CLRM0:	SETZ 1,
CLRM1:	HRRI 2,0(6)		;PUT PAGE NUMBER WITH PTN
	CALL SETPT
	AOBJN 6,CLRM1
	RET

;WAIT FOR PSB AND UPT TO HAVE SHARE COUNT OF 1

WTFPGS:	HRRZ 1,FKPGS(7)		;PSB
	CALL WTSPT
	HLRZ 1,FKPGS(7)		;UPT
WTSPT:	PUSH P,4
WTSPT2:	JSP 4,WTSPTT		;TEST PAGE NOW
	JRST WTSPT1		;MUST WAIT
	POP P,4			;NOW OK
	RET

WTSPT1:	MOVSI 1,0(1)
	HRRI 1,WTSPTT
	JSYS EDISMS
	HLRZ 1,1
	JRST WTSPT2

WTSPTT:	LDB 2,[POINT 14,SPT(1),13]	;GET SHARE COUNT
	CAIE 2,1
	JRST 0(4)
	JRST 1(4)

;PRELIMINARY FORK INIT

	EXTERN TTFORK,EXEC0

FKSET:	MOVE 1,PSB+PSBPG	;SETUP USER MAP WORD
	MOVEM 1,PSB+UACPG	;SAME AS PSB UNTIL OVERFLOW
	MOVE 1,[IOWD NUPDL,UPDL]
	MOVEM 1,UPP		;MON ROUTINES PDL
	MOVE 1,[IOWD 1000,PSIPGA]
	MOVEM 1,PSIPT		;PSI STORAGE STACK
	MOVEI 1,<UACB>B39	;SETUP AC BASE
	MOVEM 1,ACBAS
	MOVEM 1,ACBAS1
	SETACB 1
	MOVE 1,INTDF0		;INTERRUPT SWITCHES
	MOVEM 1,INTDFF
	MOVE 1,MJRST0
	MOVEM 1,MJRSTF
	SETZM NSKED
	MOVE 1,RSKEDN
	MOVEM 1,RSKED
	MOVSI 1,<UMOVEM 1,0>B53
	MOVEM 1,PATU40		;SETUP INSTRUCTION PART FOR COMPAT
	MOVEM 1,PATUPC		;ENTRY PROCEDURE
	SETOM SLOWF
	SETOM INTDF
	SETOM TRAPC
	SETOM FKTAB
	MOVEI 1,FKTAB+1
	HRLI 1,-1(1)
	BLT 1,FKTAB+NLFKS/2-1
	MOVE 2,FORKX
	HLRZ 1,FKPGS(2)		;GET SPTN OF PAGE TABLE
	LSH 1,^D9		;CONSTRUCT SHARE POINTER
	TLO 1,RWXB-XCTB+SHRBIT
	MOVEM 1,PSB+UPTPG
	MOVE 6,FORKX
	TLNE 7,NEWJBF		;NEW JOB TOO?
	JRST FKSET1		;YES
	HRRZ 1,FKJOB(6)		;GET JSB
	MOVSI 2,1B31
	ADDM 2,SPT(1)		;BUMP SHARE COUNT
	LSH 1,^D9
	TLO 1,RWXB+SHRBIT	;CONSTRUCT SHARE POINTER
	MOVEM 1,PSB+JSBPG
	MOVEI 1,FKSET2
FKSET3:	MOVEM 1,PIPC
	SETZM PIOLDS
	MOVE 1,PSB+JSBPG	;GET JSB POINTER
	TLC 1,SHRBIT+INDBIT	;MAKE INTO INDIRECT POINTER
	ADDI 1,1000-PPMPG+PJMPG	;JOB PT OFFSET
	MOVEI 2,PJMPG
	MOVEM 1,PSB(2)		;FILL MON MAP WITH IND POINTERS
	ADDI 2,1
	CAIGE 2,PPMPG
	AOJA 1,.-3
	JRST PIRQR		;DEBREAK - RUN IN NORMAL MODE

;INIT NEW JOB

FKSET1:	MOVEI 2,0(7)		;GET NUMBER OF CONTROLLING TTY
	MOVE 1,@FREJOB		;ASSIGN JOB NUMBER
	EXCH 1,FREJOB
	SUBI 1,JOBPT
	MOVEM 1,JOBNO
	HRLM 1,FKJOB(6)		;JOB NUMBER TO FORK TABLE
	MOVSM 2,JOBPT(1)	;TTY ASSIGNED TO JOB
	HRLM 1,TTFORK(2)	;JOB CONTROLLED BY TTY
	MOVE 2,FORKX
	HRRM 2,JOBPT(1)		;TOP FORK OF JOB
	SETZM JOBRT(1)		;JOB RUNTIME
	HRRZ 1,FKJOB(6)		;JSB
	LSH 1,^D9
	TLO 1,RWXB+SHRBIT
	MOVEM 1,PSB+JSBPG	;SETUP JSB
	MOVE 1,JOBNO
	HLRZ 2,JOBPT(1)		;CONTROLLING TTY
	MOVEM 2,CTRLTT		;IN JSB
	MOVEI 1,EXEC0
	JRST FKSET3

FKSET2:	SETZ 0,			;START WITH 0 AC'S
	MOVEI 17,1
	BLT 17,16
	SETZ 17,
	JSYS ENSKED
	MOVSI 1,UMODF
	MOVEM 1,PPC
	MOVEI 1,JRET
	JRST DISMSE

INTDF0:	SOS INTDF		;NORMAL CONTENTS OF INTDFF
MJRST0:	JRSTF @FPC		;NORMAL CONTENTS OF MJRSTF
CHNSON:	EXP 1B9+1B11+1B15+1B16+1B17+1B18+1B20	;ALWAYS ON PSI CHANS

;PSEUDO-INTERRUPT SYSTEM

	EXTERN BHC,BITS,CH6TAB

NEWFKF==1B20			;INITIATE NEW FORK - PI FLAG
NEWJBF==1B21			;INITIATE NEW JOB - PI FLAG
PSIIF==1B22			;CHANNEL INTERRUPT REQUESTED IN FKINTB
PSIT1F==1B23			;TERMINAL CODE INTERRUPT, PHASE 1
PSIT2F==1B24			;TERMINAL CODE INTERRUPT, PHASE 2
SUSFKR==1B25			;SUSPEND FORK REQUEST
PSIWTF==1B26			;JOB WAS IN WAIT STATUS
PSILOB==1B27			;LOGOUT JOB REQUEST

;SCHEDULER CAUSES JOB TO BE STARTED HERE ON PI REQUEST
;SAVED PC IN PIPC
;PIMSK CONTAINS INTERRUPT REQUEST WORD

PIRQ:	MOVEM P,PIAC17
	MOVEI P,PIAC		;SAVE USER AC'S
	BLT P,PIAC+NSAC
	MOVE P,PIPDL		;SET UP LOCAL STACK
	MOVE 7,PIMSK		;INTERRUPT REQUEST WORD
	MOVE 6,FORKX
	SETZ 2,
	TLNE 7,PSIWTF		;WAS JOB IN WAIT STATUS?
	MOVE 2,FKOLDS(6)	;YES, GET OLD STATUS
	MOVEM 2,PIOLDS		;SAVE OLD STATUS, OR 0 IF WAS RUNNING
	TLNE 7,NEWFKF		;START NEW FORK?
	JRST FKSET		;YES
	TLNE 7,PSIT1F
	JRST PSIT1		;TERMINAL, PHASE 1
	TLNE 7,PSIT2F
	JRST PSIT2		;TERMINAL, PHASE 2
PSITR1:	TLNE 7,PSIIF+SUSFKR+PSILOB
	JRST PSII		;CHANNEL INTERRUPT SPEC. BY FKINTB
PIRQR:	CALL UNPIR		;LEAVE PI STATE
PSIDF1:	SKIPN 1,PIOLDS		;WAS RUNNING BEFORE PSI?
	JRST SCHED0		;YES
	JRST DISMSE		;NO, REPLACE ON WAIT LIST

UNPIR:	AOS INSKED		;ENTER SCHEDULER
	MOVE 1,[XWD PIAC,PAC]
	BLT 1,PAC+NSAC		;PUT AC'S BACK
	MOVE 1,PIAC17
	MOVEM 1,PAC+17
	MOVE 1,PIPC
	MOVEM 1,PPC
	MOVSI 1,200000
	MOVE 7,FORKX
	ANDCAM 1,FKINT(7)
	RET

PIPDL:	IOWD NPIPDL,PIPDB	;INTERRUPT ROUTINES LOCAL PDL

;REQUEST INTERRUPT
;AC1 CONTAINS INTERRUPT NUMBER
;AC2 CONTAINS FORK INDEX

	INTERN PSIRQ0,PSIRQF,PSIRQB,CHNSON,PSIR4,FORCTM,PSIRQ

PSIRQ0:	MOVE 2,FORKX		;REQUEST INTERRUPT IN CURRENT FORK
PSIRQF:	NOSKED			;REQUEST INTERRUPT, FORK IN AC2
	CALL PSIRQ
	OKSKED
	RET

;ENTERED FROM SCHEDULER REQUEST PROCESSOR

PSIRQ:	MOVE 1,BITS(1)
PSIRQB:	IORM 1,FKINTB(2)	;SET BIT IN INTERRUPT WAITING BUFFER
PSITQ:	MOVSI 1,400000+PSIIF	;REGULAR INTERRUPT FLAG
	IORM 1,FKINT(2)
	CAMN 2,FORKX		;FOR THIS FORK?
	RET			;YES
PSIR4:	HLRZ 1,FKPT(2)		;NO, GET STATUS OF FORK
	CAIL 1,NBP		;IN BAL SET, OR
	CAIN 1,GOLST		;ON GOLIST?
	JRST PSIR6		;YES
TTPS1:	AOS ISKED		;CAUSE CHECK OF WAITING FORKS
	RET

;SET NEW SCHED STATUS FOR PSI'D FORK

PSIR6:	PUSH P,7
	MOVEI 7,0(2)
	HLRZ 1,FKSTAT(7)	;CURRENT QUEUE
	CAIG 1,1		;HIGH ONES?
	JRST [	CALL NEWST1	;YES, REINIT
		JRST PSIR61]
	PUSH P,3
	PUSH P,4
	CALL NEWST5		;SET SHORT QUANTUM, HIGH PRIORITY
	POP P,4
	POP P,3
PSIR61:	MOVEI 2,0(7)
	POP P,7
	RET

;TERMINAL INTERRUPT
;PHASE ONE - CALLED FROM TERM SERVICE ROUTINES
; 2/ LINE NO.,   3/ INTERRUPT CODE
;SEND TO TOP FORK TO FIND PROPER DESTINATION

	INTERN TTPSRQ

TTPSRQ:	HLRZ 2,TTFORK(2)	;GET JOB USING THIS TTY
	ANDCMI 2,600000		;FLUSH EXTRANEOUS BITS
	HRRZ 2,JOBPT(2)		;GET INDEX OF TOP FORK
	MOVSI 1,1B18+PSIT1F	;PHASE ONE REQUEST
	IORM 1,FKINT(2)
	HRRM 3,FKINT(2)		;INTERRUPT CODE
	JRST PSIR4		;SET NEW STATUS

;ROUTINES TO HANDLE INTERRUPT CONDITIONS AS SPECIFIED BY BITS
;IN LEFT HALF OF FKINT

;TERMINAL INTERRUPT, PHASE ONE
;THIS CODE RUN IN TOP FORK ONLY

PSIT1:	MOVE 6,BITS(7)
	HLRZ 1,FORKN		;START WITH TOP FORK
	SETO 5,
	TDNE 6,FKPSIE(1)	;TERM CODE ON IN FORK?
	MOVEI 5,0(1)		;YES, REMEMBER FORK
	CALL PSIT1A		;LOOK AT ALL INFERIORS
	JUMPL 5,[ANDCAM 6,TTSPSI ;NOT FOUND, SO TURN OFF CODE
		SKIPL 2,CTRLTT
		ANDCAM 6,TTPSI(2)
		JRST PSITR1]
	HRRZ 2,SYSFK(5)		;GET SYSTEM INDEX OF FORK TO GET INTERPT
	CAMN 2,FORKX		;THIS FORK?
	JRST PSIT2		;YES, GO DIRECTLY TO PHASE TWO
	NOSKED
	HRRM 7,FKINT(2)		;NO, SETUP TO INTERRUPT PROPER FORK
	MOVSI 1,PSIT2F+400000	;PHASE TWO REQUEST FLAG
	IORM 1,FKINT(2)
	CALL PSIR4
	OKSKED
	JRST PSITR1

;SEARCH FORK STRUCTURE FOR FORK TO INTERRUPT

	INTERN PSIT1A

PSIT1A:	ADD 1,INFERP		;LOOK AT INFERIOR LIST
PSIT1B:	LDB 1,1			;GET NEXT IN LIST
	JUMPE 1,R		;RETURN AT END OF LIST
	TDNE 6,FKPSIE(1)	;FORK HAS CODE ENABLED?
	MOVEI 5,0(1)		;YES, REMEMBER IT
	HRLM 1,0(P)		;REMEMBER CURRENT FORK
	CALL PSIT1A		;CHECK INFERIORS
	HLRZ 1,0(P)		;RECOVER CURRENT
	ADD 1,PARALP		;DO PARALLELS
	JRST PSIT1B

;FORK STRUCTURE POINTERS

SUPERP:	POINT 12,FKPTRS,11	;SUPERIOR
PARALP:	POINT 12,FKPTRS,23	;PARALLEL
INFERP:	POINT 12,FKPTRS,35

;TERMINAL INTERRUPT, PHASE TWO

PSIT2:	MOVEI 1,0(7)
	CALL GETCHA
	LDB 2,2
	MOVE 1,BITS(2)		;AND SET BIT IN INT. WAITING WORD
	AND 1,PSICHM		;BUT ONLY FOR ENABLED CHANNELS
	IORM 1,PSIBW
	JRST PSII		;THEN GO PROCESS IT

;SUSPEND FORK REQUEST

PIRSFK:	MOVE 1,PIPC
	CALL PITEST		;NOW INTERRUPTABLE?
	JRST PIRSF1		;NO
	MOVEI 3,SUSWT		;SUSPENDED FORK TEST
PIRSK1:	MOVE 2,FORKX
	MOVSI 1,SUSFKR
	ANDCAM 1,FKINT(2)
	CALL UNPIR		;LEAVE INTERRUPT STATE
	IORM 1,FKINT(7)		;KEEP INTERRUPT STARTING BIT
	MOVEI 1,0(3)		;SUSWT OR FRZWT
	HRL 1,PIOLDS		;WITH OLD STATUS
	JRST DISMSE		;DISMISS

PIRSF1:	MOVE 7,FORKX
	MOVSI 1,SUSFKR		;TURN REQUEST BIT BACK ON
	IORM 1,FKINT(7)
	JRST PSIDFR		;AND SET DEFERRED INTERRUPTS

SUSWT:	JRST 0(4)		;SCHEDULER TEST FOR SUSPENDED FORK

;LOGOUT REQUEST

PIRLGO:	MOVE 1,PIPC
	CALL PITEST		;OK TO INTERRUPT?
	JRST [	MOVE 7,FORKX	;NO, REMEMBER REQUEST
		MOVSI 1,PSILOB
		IORM 1,FKINT(7)
		JRST PSIDFR]
	SETZM PIOLDS		;MAKE FORK RUNNABLE
	MOVEI 1,FLOGO
	EXCH 1,PIPC
	SKIPGE SLOWF
	JRST [	MOVEM 1,FPC	;IN USER MODE, SIMULATE JSYS
		JRST PIRQR]
	MOVE 2,PIAC17		;IN MON MODE, SIMULATE PUSHJ
	PUSH 2,1
	MOVEM 2,PIAC17
	JRST PIRQR

;PROCESS INTERRUPT(S) FOR THIS FORK AS SPECIFIED BY FKINTB

PSII:	MOVE 1,MJRST0		;NORMALIZE ALL DEFER TRAPS
	MOVEM 1,MJRSTF
	MOVE 1,INTDF0
	MOVEM 1,INTDFF
	TLNE 7,SUSFKR		;FORK SUSPENSION REQUEST?
	JRST PIRSFK		;YES
	TLNE 7,PSILOB		;LOGOUT REQUEST?
	JRST PIRLGO
	MOVE 2,FORKX
	MOVEI 1,0
	EXCH 1,FKINTB(2)	;RESET FKINTB TO 0
	MOVE 2,PSICHM		;USERS ENABLED CHANNELS
	IOR 2,CHNSON		;WITH ALWAYS ON CHANNELS
	IOR 2,SUPCHN		;WITH SUPERIOR RESERVED CHANNELS
	AND 1,2			;FLUSH DISABLED CHANNELS
	IORB 1,PSIBW		;SET BITS IN BREAK WAITING WORD
	JUMPE 1,PIRQR		;RETURN IF NO BREAKS WAITING
	MOVE 1,PIPC		;PROCESS PC
	CALL PITEST		;CAN PROCESS BE INTERRUPTED NOW?
	JRST PSIDFR		;NO, GO SETUP DEFERRED INTERRUPT
PSIS:	MOVE 1,PSIBW
	TDNE 1,MONCHN		;MONITOR RESERVED CHANNEL?
	JRST PSIMB		;YES
	AND 1,SUPCHN		;LOOK AT SUPERIOR RESERVED CHANS
	JUMPN 1,PSIN1		;TERMINATE IF ANY
	MOVE 1,PSIBW
	AND 1,CHNSON		;LOOK AT SPECIAL CHANNELS
	SKIPE PSISYS		;IF THIS PROCESS NOT TAKING PSI'S,
	JUMPN 1,PSIN1		;TERMINATE IT IF ANY SPECIALS
	ANDCM 1,PSICHM		;AND'ING WITH USER'S 'OFF' CHANNELS
	JUMPN 1,PSIN1		;TERMINATE CAUSE CHANNEL NOT ACTIVE
	SKIPE PSISYS		;PSI SYSTEM ON?
	JRST PIRQR		;NO
	SKIPN LEVCHN		;THIS PROCESS TAKING INTERRUPTS?
	JRST PSIN1		;NO, GO TRANSMIT THE PSI
	MOVE 1,PSIBW		;FIND HIGHEST PRIORITY INTERRUPT
	MOVEI 2,0		;NOW WAITING
	MOVSI 3,1
PSIS1:	JUMPL 1,PSIS2		;THIS CHANNEL HAS WAITING BREAK?
PSIS4:	LSH 1,1			;NO, SHIFT TO NEXT CHANNEL
	ADDI 2,1		;COUNT CHANNEL NUMBER
	JUMPN 1,PSIS1		;KEEP LOOKING IF ANY BITS LEFT

;AC3 NOW CONTAINS LEVEL OF HIGHEST PRIORITY INTERRUPT FOUND
;AC5 CONTAINS CORRESPONDING CHANNEL NUMBER

	JUMPE 3,PSID1		;NO LEVEL ASSIGNED? GO XMIT INTERRUPT
	CAILE 3,NPILEV		;LEGAL LEVEL?
	JRST PSID2		;NO, SPECIAL ACTION
	MOVE 1,BITS(3)
	CAMG 1,PSIBIP		;OK TO BREAK ON THIS LEVEL?
	JRST PIRQR		;NO, EQUAL OR HIGHER LEVEL IN PROGRESS
	IORM 1,PSIBIP		;YES, REMEMBER  BREAK THIS LEVEL
	HRRZ 1,LEVCHN		;GET ADR OF USER'S CHANNEL TABLE
	ADDI 1,0(5)		;COMPUTE ADR OF USER'S CHANNEL WORD
	UMOVE 1,0(1)		;GET ADR OF USER'S INT ROUTINE
	HRLI 1,UMODF		;USER MODE ON, OTHER FLAGS OFF
	EXCH 1,PIPC		;SET TO START THERE, GET OLD PC
	TLNE 1,UMODF		;WAS IN USER MODE?
	JRST PSIS5		;YES

;SPECIAL ROUTINE TO SAVE STATE OF INTERRUPTED MONITOR
;ROUTINE

	MOVS 2,BITS(3)		;NO, REMEMBER MONITOR INTERRUPT
	IORM 2,PSIBIP		;IN RH OF BIP WORD
	MOVE 7,PSIPT		;STORAGE STACK POINTER
	HLRE 6,7		;SEE IF ENOUGH ROOM
	MOVN 6,6		;GET POSITIVE COUNT
	CAIGE 6,NUPDL+<EUACB-UACB>+30
	BUG(HLT,<PSI STORAGE STACK OVERFLOW>)
	MOVE 10,7		;SAVE POINTER
	PUSH 7,1
	PUSH 7,40
	PUSH 7,60
	PUSH 7,MPP
	PUSH 7,FPC
	PUSH 7,PIOLDS
	PUSH 7,XMENTR
	MOVSI 6,UPDL		;STORE ENTIRE MONITOR STACK
	HRRI 6,1(7)
	ADD 7,[XWD NUPDL,NUPDL]
	BLT 6,0(7)
	MOVSI 1,PIAC		;STORE CURRENT MONITOR AC'S
	HRRI 1,1(7)		;NOW LIVING IN PIAC
	ADD 7,[XWD 20,20]
	BLT 1,0(7)
	HRRZ 1,ACBAS		;STORE ALL AC BLOCKS IN USE
	HRRZ 2,ACBAS1
	SUBI 1,-1(2)		;COMPUTE NUMBER OF BLOCKS IN USE
	LSH 2,^D18+4
	MOVE 4,2
	HRRI 2,1(7)
	LSH 1,4
	HRLI 1,0(1)		;NUMBER OF WORDS BOTH HALFS
	ADD 7,1
	BLT 2,0(7)
	PUSH 7,1		;SAVE COUNT FOR DEBRK
	PUSH 7,ACBAS		;AND CURRENT ACBAS
	HRRI 4,PIAC		;RECOVER USER AC'S AT TIME OF MON CALL
	BLT 4,PIAC+17
	MOVE 1,UPDL		;USER PC AT MONITOR CALL
	PUSH 7,10		;PSI STACK BEFORE ALL THIS PUSHING
	PUSH 7,1
	MOVEM 7,PSIPT
	TLZ 1,UMODF		;SO HE CAN TELL IT WAS MON INTERRUPT
	SETOM SLOWF

PSIS5:	SETZM PIOLDS
	HLRZ 2,LEVCHN		;GET ADR OF USER'S LEVEL TABLE
	ADDI 2,-1(3)		;COMPUTE ADR OF USER'S LEVEL WORD
	UMOVE 2,0(2)		;GET ADR OF PC WORD FOR THIS LEVEL
	TRNN 2,777760		;ADDRESS IS AC?
	MOVEM 1,PIAC(2)		;YES, STRANGE BUT ALLOW IT
	TRNE 2,777760		;NORMALLY,
	UMOVEM 1,0(2)		;STORE BREAK PC IN USER'S MEMORY
PSID3:	MOVE 1,BITS(5)		;CLEAR WAITING BREAK BIT FOR THIS CHANNEL
	ANDCAM 1,PSIBW
	JRST PIRQR		;TO USER

PSIS2:	HRRZ 4,LEVCHN		;GET ADR OF USER'S CHANNEL TABLE
	ADDI 4,0(2)		;COMPUTE ADR OF USER'S CHANNEL WORD
	XCTUU [HLRZ 4,0(4)]	;GET LEVEL NUMBER FOR THIS CHANNEL
	CAIG 3,0(4)		;OLD LEVEL GREATER THAN CURRENT?
	JRST PSIS4		;NO
	MOVEI 3,0(4)		;YES, REMEMBER NEW LEVEL
	MOVEI 5,0(2)		;AND CHANNEL NUMBER
	JRST PSIS4		;RESUME SCAN

;SPECIAL ACTION (NOT LEVEL NUMBER) IN LH OF CHN+C

PSID2:	JRST PSID3		;IGNORE INTERRUPT

;MONITOR ROUTINE IS SHORTSTOPPING INTERRUPTS - SIMULATE  JSYS MONBK

PSIMB:	HRRZ 1,MONBK		;ROUTINE ADDRESS
	EXCH 1,PIPC		;GET OLD PC
	SETZM PIOLDS
	HLRZ 2,MONBK		;RET LOC
	MOVEM 1,0(2)		;STORE RETURN
	JRST PIRQR

;XMIT INTERRUPT TO SUPERIOR FORK

PSIT:	HRRZ 2,FORKN
	MOVE 2,FKPTRS(2)	;POINTERS RELATIVE TO FORK
	LSH 2,-^D24		;SUPERIOR FORK POINTER
	HRRZ 2,SYSFK(2)		;SYSTEM FORK INDEX
	JRST PSIRQF		;REQUEST INTERRUPT

;THIS FORK WON'T TAKE INTERRUPT, DISMISS IT AND RECORD WHY

PSID1:	MOVEI 2,0(5)		;CHANNEL WITH NO LEVEL ASSIGNED
	JRST PSIN2

PSIN1:	MOVE 1,PSIBW		;INTERRUPTS OFF OR NO LEVCHN
	JFFO 1,.+1		;CALCULATE CHANNEL NUMBER
PSIN2:	MOVEM 2,FORCTC		;SAVE CHANNEL NUMBER FOR STATUS
	MOVE 1,BITS(2)		;JUST ONE CHANNEL AT A TIME
	ANDCAM 1,PSIBW		;RESET WAITING BIT
	CALL FKTMI		;GIVE FORK TERM INTERRUPT
	MOVEI 3,FRZWT		;FORK FROZEN STATE TEST
	MOVE 1,CAPENB
	TLNE 1,(1B17)		;SUPERIOR WANTS FROZEN STEAD HALT?
	JRST PIRSK1		;YES, GO FREEZE
	CALL UNPIR		;LEAVE PI STATE, MOVE AC'S ETC.
	MOVE P,PI7P
	MOVEI 1,FORCTM
	JRST DISMSE		;THIS ONE IS BEING DISMISSED

FORCTM:	JRST 0(4)		;SCHEDULER TEST FOR FORCED TERM FORK

;INTERRUPT SUPERIOR FORK ON TERMINATION

FKTMI:	PUSH P,1
	HRRZ 1,FORKN
	SKIPN 1
	SKIPA 1,[^D35]		;TERMINATING TOP FORK, GIVE CH 35
	MOVEI 1,^D19		;19 IS FORK TERMINATED
	CALL PSIT		;TRANSMIT IT
	POP P,1
	RET

	INTERN GETCHA

GETCHA:	MOVEI 2,0(1)
	IDIVI 2,6
	ADDI 2,PSICHA
	HLL 2,CH6TAB(3)
	RET

;DEFERRED INTERRUPT LOGIC
;SET TRAPS TO RECHECK INTERRUPTS WHEN STATE CHANGES

PSIDFR:	MOVE 1,MJRST1
	MOVEM 1,MJRSTF
	MOVE 1,INTDF1
	MOVEM 1,INTDFF
	CALL UNPIR		;LEAVE BREAK STARTING STATE
	IORM 1,FKINT(7)		;BUT LEAVE PENDING BIT
	JRST PSIDF1		;RESUME

MJRST1:	JRSTF @[PSISV0]
INTDF1:	JSYS PSISV1

PSISV1:	XWD PIPC,.+1
	SOS INTDF
	JRSTF @[PSISV2]

PSISV0:	MOVEM 1,PIPC		;SAVE AC1
	MOVE 1,FPC		;FPC NOW CONTAINS USER'S PC
	EXCH 1,PIPC
PSISV2:	MOVEM P,PIAC17		;SAVE USER'S AC17
	MOVEI P,PIAC		;AND AC'S 0-NSAC
	BLT P,PIAC+NSAC
	MOVE P,PIPDL		;RESTORE INTERRUPT STARTING STATE
	SETZM PIOLDS
PSISV3:	MOVE 2,FORKX
	MOVE 7,FKINT(2)
	JRST PSII		;ENTER MAIN SEQUENCE

;TEST FOR IMMEDIATE OR DEFERRED INTERRUPT
;SKIP => IMMEDIATE
;NOSKIP => DEFERRED
;CALLED WITH TEST USER PC IN AC1

PITEST:	TLNE 1,UMODF		;USER MODE?
	JRST RSKP		;YES, IMMEDIATE
	SKIPL SLOWF		;NO, SLOW CODE?
	SKIPL INTDF		;YES, INTERRUPTABLE
	RET			;NO, DEFER
	SKIPN NSKED		;IN CASE NOSKED W/O NOINT
	SKIPL TRAPC		;IN PAGER TRAP, OR
	RET			;YES, DEFER
	JRST RSKP		;IMMEDIATE

;DEBREAK

	INTERN .DEBRK

.DEBRK:	SKIPN PSIBIP		;ANY BREAKS IN PROGRESS?
	XCT MJRSTF		;NO, ACTS AS NOP
	MOVEM 1,TW1		;SAVE USER AC1,2
	MOVEM 2,TW2
	MOVE 2,FORKX
	MOVSI 1,200000
	IORM 1,FKINT(2)		;SET INTERRUPT STARTING BIT
	MOVE 2,TW2
	MOVE 1,TW1
	MOVEM P,PIAC17		;ENTER INTERRUPT STARTING STATE
	MOVEI P,PIAC
	BLT P,PIAC+NSAC
	MOVE P,PIPDL
	SETZM PIOLDS
PSIDBK:	MOVE 2,PSIBIP		;BREAKS NOW IN PROGRESS
	JFFO 2,.+2		;FIND HIGHEST ONE
	JRST 4,.		;IMPOSSIBLE
	HLRZ 1,LEVCHN		;COMPUTE ADDRESS OF RETURN PC
	ADDI 1,-1(3)
	UMOVE 1,0(1)
	TRNN 1,777760		;ADDRESS IS AC?
	SKIPA 1,PIAC(1)		;YES
	UMOVE 1,0(1)		;GET RETURN PC FROM USER MEMORY
	MOVS 2,BITS(3)
	TDNE 2,PSIBIP		;WAS THIS MONITOR INTERRUPT?
	JRST PSIS7		;YES, GO UNWIND
PSIS8:	TLZ 1,7637		;FLUSH TROUBLESOME BITS
	TLO 1,UMODF		;MAKE SURE USER MODE IS ON
	MOVEM 1,PIPC		;SET TO DEBREAK AT THAT ADDRESS
PSIS6:	MOVE 1,BITS(3)
	ANDCAM 1,PSIBIP		;CLEAR BIP THIS LEVEL
	JRST PSISV3		;GO CHECK FOR OTHER INTERRUPTS AND RETURN

PSIS7:	ANDCAM 2,PSIBIP		;CLEAR MON BREAK FLAG FOR THIS LEVEL
	MOVE 7,PSIPT
	POP 7,4			;PC GIVEN TO USER
	POP 7,PSIPT		;TOP OF THIS BLOCK OF PSI STORAGE
	TLON 1,UMODF		;IF IT WAS DIDDLED AT ALL,
	CAME 1,4
	JRST PSIS8		;DON'T RESUME MON ROUTINE
	POP 7,2
	MOVEM 2,ACBAS
	SETACB 2
	POP 7,4
	SUB 7,4
	HRRZ 5,ACBAS1
	LSH 5,4
	MOVE 2,5		;SAVE ACB ADDRESS
	HRLI 5,1(7)
	ADDI 4,0(5)
	BLT 5,-1(4)		;RESTORE AC BLOCKS
	MOVSI 5,PIAC		;PUT USER CURRENT AC'S INTO TOP BLOCK
	HRRI 5,0(2)
	BLT 5,17(2)
	SUB 7,[XWD 20,20]
	MOVEI 2,PIAC
	HRLI 2,1(7)
	BLT 2,PIAC+17		;RESTORE MONITOR AC'S
	SUB 7,[XWD NUPDL,NUPDL]
	MOVEI 2,UPDL
	HRLI 2,1(7)
	BLT 2,UPDL+NUPDL-1	;RESTORE STACK
	POP 7,XMENTR
	POP 7,PIOLDS
	POP 7,FPC
	POP 7,MPP
	POP 7,60
	POP 7,40
	POP 7,PIPC		;ACTUAL MON INTERRUPT PC
	SETZM SLOWF
	SETOM INTDF
	JRST PSIS6		;NOW DEBRK
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  