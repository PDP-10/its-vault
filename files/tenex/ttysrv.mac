;22 NOV 71, 1837:

;TELETYPE SERVICE ROUTINES - D. MURPHY

;PARAMETERS

	INTERN NLINES,NTTYS,CTYLIN,TCI,TCO,TTHNGU,TTEMES
	INTERN .TLINK,NORMTF,TAB81,TAB82

;NLINES PARAMETER IN PROLOG

TTBSIZ==200		;BIG BUFFER SIZE
NTABBF==^D20		;NUMBER OF TABS BUFFERS
NDLSPD==10		;SIZE OF DLS PI-LEVEL STACK
CTYLIN==NTTYS-1		;CTY IS ONE AFTER HIGHEST SCANNER
TTLCBT==40000		;LOWER CASE FLAG BIT
TTWKCT==TTSIZ*4-20	;TTY EARLY WARNING COUNT
DLSRCF==400		;DLS RECEIVER FLAG, DATAI WORD
DLSXMF==1000		;DLS XMITTER FLAG, DATAI WORD
DLSCXF==1B25		;CARRIER XITION FLAG
DLSACT==1B26		;ACTIVATE LEVEL IN DATAO
DLSDLB==1B29		;DIRECTED LINE BIT, LH OF DATAO

TTLIND=="%"		;LOWER CASE INDICATION CHARACTER
TTCIND=="^"		;CONTROL INDICATION CHARACTER

T7TIM==^D15		;MAX MILLISECS BETWEEN BIG BUF SERVICE

	EXTERN JOBPT,FORKX,EDISMS,TODCLK,CHKTTM,ENTFLG
	EXTERN SCDRQ7,JOBSRT,RSKP,SYSIFG,TTYBKS,TTINTS

;RANGE OF LINES TO ACCEPT FROM SCANNER

	RESCD

HILIN:	NTTYS-1
LOLIN:	0

	SWAPCD

;STORAGE

LS TTOIN,NLINES		;OUTPUT BUFFER POINTERS (IN)
LS TTOOUT,NLINES		;	(OUT)
LS TTOCT,NLINES		;	(COUNT)

LS TTEIN,NLINES		;ECHO OUTPUT BUFFER POINTERS (IN)
LS TTEOUT,NLINES		;	(OUT)
LS TTECT,NLINES		;	(COUNT)

LS TTIIN,NLINES		;INPUT BUFFER POINTERS (IN)
LS TTIOUT,NLINES		;	(OUT)
LS TTICT,NLINES		;	(COUNT)

;TTY BUFFERS--INPUT, OUTPUT, AND ECHO
;BUFFERS ARE OF SIZE TTSIZ, AND START AT LOCATIONS N*TTSIZ+1

IFNDEF TTBUFF,<		;IF DEFINED, MEANS TTBUFS ALREADY DEFINED
LS TTBUFS,NTTBF*TTSIZ+TTSIZ >
LS TTFREC,1		;COUNT OF FREE BUFFERS
LS TTFREB,1		;LIST OF FREE BUFFERS

LS TTFLGS,NLINES		;FLAGS
LS TTLINK,NLINES		;OUTPUT-LINKED LINES (9-BIT BYTES)

LS FCMOD1,NLINES
LS FCMOD2,NLINES		;CONTROL CHARACTER MODES

LS TTLPOS,NLINES		;PAGE,,LINE POSITION
LS TTPSI,NLINES		;PSEUDO-INTERRUPT MASK
GS TTFORK,NLINES		;OWNERSHIP STATUS,,INPUT WAIT STATUS
GS TTCS,NLINES			;CONTROL STATE
GS TTBFRC,NLINES		;BUFFER CONTROL FIELDS
GS TTMOD1,NLINES		;LAST CHAR INPUT, AND TAB TABLE ADR

LS TABLST,1		;LIST OF FREE TAB BUFFERS
LS TABBFR,NTABBF*3	;TAB BUFFERS

;BIG BUFFER

LS TTBIGI,1		;INPUT INDEX
LS TTBIGO,1		;OUTPUT INDEX
LS TTBIGC,1		;COUNT
LS TTBBUF,TTBSIZ		;BUFFER

;MISC TTY STORAGE

LS TTNIT1,1			;ISB COMMUNICATION REG
LS TCOUTD,1			;DISPATCH TO TCOUT OR TCEOUT
LS XDLSSV,1		;PI RETURN
LS TTCQLN,1			;CONTROL OP CURRENT LINE NUMBER
LS DLSLPI,1		;DLS LOST PI ASMT COUNT
LS TTHNGL,1		;LINE BEING EXAMINED FOR HUNG
LS TTHNGT,1		;TIME AT WHICH LINE WILL BE DEFINED AS HUNG
LS TTHNGN,1		;LAST HUNG LINE ,, NUMBER UNHANGS DONE

LS DLSVAP,1		;PI-LEVEL STORAGE
LS DLSPDL,NDLSPD	;PI-LEVEL PDL

	RESCD

;NON PI ROUTINES

	INTERN BUGTYO,BUGMSG

BUGTYO:	0
	CONSZ TTY,1B31
	JRST .-1
	DATAO TTY,1
	CONSZ TTY,1B31
	JRST .-1
	JRST @BUGTYO

BUGMSG:	0
	MOVE 7,1
	HRLI 7,440600
BUGM2:	ILDB 1,7
	ADDI 1,40
	CAIN 1,"/"
	JRST @BUGMSG
	CAIN 1,"$"
	JRST BUGM1
BUGM3:	JSR BUGTYO
	JRST BUGM2

BUGM1:	MOVEI 1,15
	JSR BUGTYO
	MOVEI 1,12
	JRST BUGM3

	SWAPCD

;SENDS MESSAGES TO ALL TTYS VIA ECHO BUFFER

	INTERN .TTMSG

.TTMSG:	JSYS MENTR
	MOVE 7,0(P)
	TLNE 7,UMODF		;FROM MONITOR?
	JRST UJSYS		;NO, ILLEGAL
	TLNE 2,007000
	HRLI 2,440700		;MAKE BYTE POINTER
	PUSH P,2
	JUMPGE 1,TPA5		;NOT ALL TTYS
	MOVSI 16,-NLINES
TPA6:	MOVE 14,0(P)		;BYTE POINTER
	MOVEI 2,0(16)		;LINE NUMBER
TPA3:	XCTMU [ILDB 1,14]
	JUMPE 1,TPA1		;TERMINATE ON NULL
	CALL TCEO2
	JRST TPA3

TPA1:	AOBJN 16,TPA6
	POP P,2
	JRST MRETN

TPA5:	HRROI 16,0(1)		;DO ONE LINE OF GIVEN NUMBER
	JRST TPA6

;SEND SYSTEM CRASH MESSAGE TO ALL TTYS

	RESCD

LS CRSMSG,2			;CALLED BY JSR CRSMSG

CRSMS0:	MOVEM 17,CRSAC+17	;SAVE AC'S
	MOVEI 17,CRSAC
	BLT 17,CRSAC+16
	MOVE P,[IOWD NCRSPD,CRSPDL]
	MOVSI 16,-NLINES	;DO ALL EXISTING LINES
CRSM3:	MOVEI 14,[ASCIZ /
**TENEX IS DOWN**
/]
	HRLI 14,440700
	MOVEI 2,0(16)		;LINE NUMBER
CRSM2:	ILDB 1,14		;CHARACTER
	JUMPE 1,CRSM1		;NULL MARKS END
	CALL TCEO2		;OUTPUT VIA ECHO BUFFER
	JRST CRSM2

CRSM1:	AOBJN 16,CRSM3
	MOVSI 17,CRSAC		;RESTORE ACS
	BLT 17,17
	JRST @CRSMSG

LS CRSAC,20
NCRSPD==10
LS CRSPDL,NCRSPD

;INITIALIZATION

	INTERN TTINIT,TTRSET

TTINIT:	MOVEI 1,TTBUFS		;COMPUTE BEGINNING OF BUFFERS
	TRNE 1,TTSIZ-2		; TO BE N*TTSIZ+1
	ADDI 1,TTSIZ		;FIRST WORD IN BUFFER AREA
	ANDCMI 1,TTSIZ-1	;WHICH IS 0 MOD TTSIZ
	ADDI 1,1		;SUCH THAT EACH BUFFER ENDS 0 MOD ADR
	MOVEI 2,NTTBF
	MOVEM 2,TTFREC		;FREE BUFFER COUNT
	SUBI 2,1
	MOVEM 1,TTSIZ(1)	;CONSTRUCT LIST OF FREE BUFFERS
	ADDI 1,TTSIZ
	SOJG 2,.-2
	MOVEM 1,TTFREB		;FREE BUFFER LIST
	ADD 1,[XWD 441100,1]	; +1 AND MAKE INTO BYTE POINTER
	MOVSI 7,-NLINES
TTIB1:	SETZM TTOIN(7)
	SETZM TTOOUT(7)
	SETZM TTOCT(7)		;INITIALIZE OUTPUT BUFFER WORDS
	SETZM TTEIN(7)
	SETZM TTEOUT(7)
	SETZM TTECT(7)		; ... ECHO BUFFER WORDS
	SETZM TTIIN(7)
	SETZM TTIOUT(7)
	SETZM TTICT(7)		; ... INPUT BUFFER WORDS
	SETOM TTFORK(7)
	SETZM TTFLGS(7)
	MOVE 1,[<^D20>B7+2B12+2B17+<2*<TTSIZ-1>*4>B26+<2*<TTSIZ-1>*4-2>B35]
	MOVEM 1,TTBFRC(7)	;NORMAL IS 2 BUFFERS FOR IN AND OUT
	AOBJN 7,TTIB1
	MOVSI 2,-NLINES
	CALL TTILIN
	AOBJN 2,.-1
	MOVEI 2,NTABBF-1	;INIT FREE LIST OF TAB BUFFERS
	MOVEI 1,TABBFR
	MOVEM 1,3(1)
	ADDI 1,3
	SOJG 2,.-2
	MOVEM 1,TABLST
	SETZM TTBIGI
	SETZM TTBIGO
	SETZM TTBIGC
	CONO TTY,DLSCHN
	CONO DLS,DLSCHN
TTACTL:	SETZM TTHNGT
	SETZM TTHNGN
	MOVEI 2,TCOUTX
	MOVEM 2,TCOUTD		;REGULAR OUTPUT DISPATCH
	MOVE 1,[JRST CRSMS0]	;SETUP JSR DISPATCH
	MOVEM 1,CRSMSG+1
	MOVSI 2,-NLINES+1	;ACTIVATE DLS LINES (BUT NOT CTY)
	MOVE 1,[XWD DLSDLB,DLSACT+1B27]	;DIRECTED LINE, ACTIVATE, NO XMIT
	DPB 2,[POINT 6,1,17]	;PUT LINE NUMBER IN DATAO WORD
	DATAO DLS,1
	AOBJN 2,.-2
	RET

;RESUME RUNNING TTY'S AFTER RESTART

TTRSET:	MOVSI 2,-NLINES
	CONO TTY,DLSCHN
	CONO DLS,DLSCHN		;ASSUMES I-O RESET WAS DONE
TTRST1:	SKIPL TTFLGS(2)		;WAS XMITTER IN OPERATION
	JRST .+3		;NO
	HRRZM 2,TTNIT1		;YES, SIMULATE INTERRUPT TO RESUME ACTION
	ISB DLSCHN
	AOBJN 2,TTRST1
	JRST TTACTL

;TTY BUFFER CONTROL ROUTINES

;POINTERS TO FIELDS IN TTBFRC WORD

TTOMAX:	POINT 9,TTBFRC(2),35	;MAX BYTES IN OUTPUT BUFFER(S)
TTIMAX:	POINT 9,TTBFRC(2),26	; " INPUT BUFFER(S)
TTNOU:	POINT 5,TTBFRC(2),17	;NUMBER OF OUTPUT BUFFERS TO ASSIGN
TTNIN:	POINT 5,TTBFRC(2),12	;NUMBER OF INPUT BUFFERS TO ASSIGN
TTOWRN:	POINT 8,TTBFRC(2),7	;OUTPUT WAKEUP LEVEL

;ASSIGN AND SETUP TTY BUFFERS
; 3/ NUMBER OF BUFFERS TO GET
;  RETURNS +1 TRANSPARENT, EXCEPT
; 3/ BYTE POINTER FOR INPUT AND OUTPUT POINTER WORDS
;THIS ROUTINE ASSUMES THAT IT IS PROTECTED FROM INTERRUPS OR RESCHEDULING
; WHICH COULD RESULT IN OTHER USE OF THE FREE LIST

TTGTBF:	PUSH P,1		;TRANSPARENT TO ALL AC'S EXCEPT 3
	PUSH P,3		;SAVE COUNT
	SETZ 1,
TTGTB1:	SOSGE TTFREC		;REDUCE FREE BUFFER COUNT
	BUG(HLT,<RAN OUT OF TTY BUFFERS>)
	HRRZ 3,@TTFREB		;GET BUFFER FROM LIST
	EXCH 3,TTFREB
	JUMPE 1,[MOVSI 1,0(3)	;FIRST BUFFER, REMEMBER ITS ADDRESS
		JRST .+2]
	HRRZM 3,0(1)		;CONC NEW BUFFER ONTO LIST
	HRRI 1,0(3)
	SOSLE 0(P)		;GOT REQUESTED NUMBER OF BUFFERS?
	JRST TTGTB1		;NO
	HLRZ 3,1		;ADDRESS OF FIRST BUFFER IN LIST
	HRRZM 3,0(1)		;COMPLETE CIRCULAR LIST
	ADD 3,[XWD 441100,1]	;CONSTRUCT 9-BIT BYTE POINTER
	POP P,1			;JUNK
	POP P,1
	RET

;RELEASE LIST OF TTY BUFFERS
; 3/ BYTE POINTER ANYWHERE IN ANY BUFFER OF LIST
;  RETURNS +1, CLOBBERS 3
;ASSUMES INTERRUPT PROTECTION AS ABOVE

TTRLBF:	MOVEI 3,0(3)
	JUMPE 3,R		;IN CASE NO BUFFERS
	PUSH P,1
	TDNN 3,WRPMSK		;NOW AT END OF BUFFER?
	SUBI 3,TTSIZ		;YES
	ANDCM 3,WRPMSK		;NORMALIZE POINTER TO FIRST WD OF BFR
	ADDI 3,1		;WHICH IS 1 AFTER THE 0 MOD TTSIZ
	PUSH P,3		;SAVE ADDRESS OF FIRST BUFFER
TTRLB1:	MOVEI 1,0(3)
	HRRZ 3,0(3)		;NEXT BUFFER IN LIST
	EXCH 1,TTFREB		;PUT BUFFER ON FREE LIST
	MOVEM 1,@TTFREB
	AOS TTFREC
	CAME 3,0(P)		;CIRCLED AROUND TO FIRST BUFFER?
	JRST TTRLB1		;NO
	POP P,3
	POP P,1
	RET

;RELEASE OUTPUT BUFFERS
; 2/ LINE NUMBER
;  RETURNS +1, CLOBBERS 3
;ASSUMES INTERRUPT PROTECTION AS ABOVE

TTRLOB:	SKIPN 3,TTEOUT(2)	;ECHO BUFFER TO RELEASE?
	JRST .+4		;NO
	SETZM TTEOUT(2)
	SETZM TTEIN(2)
	CALL TTRLBF		;RELEASE IT
	SKIPN 3,TTOOUT(2)	;OUTPUT BUFFERS TO RELEASE?
	JRST .+4		;NO
	SETZM TTOOUT(2)
	SETZM TTOIN(2)
	CALL TTRLBF		;RELEASE THEM
	RET

;TTY CONTROL ROUTINES

	INTERN TTCOBF,TTCIBF,TTILIN

TTCOBF:	NOSKD1
	CHNOFF DLSCHN
	SETZM TTOCT(2)		;ZERO OUTPUT COUNT
	SETZB 3,TTOOUT(2)
	EXCH 3,TTOIN(2)
	CALL TTRLBF		;RELEASE BUFFERS
	SETZM TTECT(2)		;CLEAR ECHO BUFFER TOO
	SETZB 3,TTEOUT(2)
	EXCH 3,TTEIN(2)
	CALL TTRLBF
	CHNON DLSCHN
	OKSKD1
	RET

TTCIBF:	NOSKD1
	MOVEI 1,1B34
	ANDCAM 1,TTFLGS(2)	;CLEAR BKJFN FLAG
	CHNOFF DLSCHN
	SETZM TTICT(2)
	SETZB 3,TTIOUT(2)
	EXCH 3,TTIIN(2)
	CALL TTRLBF		;RELEASE BUFFERS
	HLLOS TTFORK(2)		;RESET WAITING FORK
	CHNON DLSCHN
	OKSKD1
	RET

TTILIN:	CALL TTCIBF		;INITIALIZE TTY LINE
	MOVE 1,NORMTF		;USUAL DEVICE FLAGS AND STATUS
	DPB 1,[POINT 35,TTFLGS(2),35]
	SETZM TTPSI(2)
	SETZM TTLPOS(2)
	MOVE 1,TTICB1		;SETUP USUAL CONTROL CHARACTER MODES
	MOVEM 1,FCMOD1(2)
	MOVE 1,TTICB2
	MOVEM 1,FCMOD2(2)
	MOVEI 1,TAB81		;NORMAL TABS
	MOVEM 1,TTMOD1(2)
	RET

;USUAL DEVICE FLAGS AND STATUS
; 66 LINES/PAGE, 75 CHARS/LINE
; WAKEUP ON ALL, ECHO MODE 2 (DEFERRED OR IMMED)
; DATA MODE ASCII, CONVERT LOWER TO UPPER ON INPUT

NORMTF:	XWD <^D66B28>+^D72,17B23+2B25+1B29+1B31

TAB81:	EXP 1B0+1B8+1B16+1B24+1B32
TAB82:	EXP 1B4+1B12+1B20+1B28
TAB83:	EXP 1B0+1B8+1B16+1B24+1B32

TTOBET:	SKIPE TTOCT(1)		;SCHEDULER TEST - NOW EMPTY?
	JRST 0(4)
	JRST 1(4)		;YES, RESCHED

TTIBET:	SKIPE TTICT(1)		;SCHEDULER TEST FOR INPUT BUF EMPTY
	JRST 0(4)		;NOT EMPTY
	JRST 1(4)		;EMPTY

	SWAPCD

;MORE CONTROL ROUTINES
;ALL TAKE LINE NUMBER IN AC2, ARG/VALUE IN 1, 2ND ARG/VALUE IN 3, ...

	INTERN TTSIBE,TTSOBE,TTSOBF,TTDOBE,TTGTBS,TTSTBS,TTSPOS
	INTERN TTRMOD,TTSMOD,TTRPOS,TTRCOC,TTSCOC,TTSTI,TTBKPT
	INTERN TTDIBE

TTSIBE:	MOVEI 3,1B34		;BACKUP BIT
	SKIPG 1,TTICT(2)	;SOMETHING IN BUFFER?
	TDNE 3,TTFLGS(2)	;OR CAN RE-READ PREVIOUS CHAR?
	RET			;YES, BUFFER NOT EMPTY
	JRST RSKP

TTSOBE:	SKIPG 1,TTOCT(2)	;SKIP IF OUTPUT BUFFER EMPTY
	AOS 0(P)
	RET

TTSOBF:	LDB 3,TTOMAX		;CAPACITY OF OUTPUT BUFFER
	MOVE 1,TTOCT(2)		;SKIP IF OUTPUT BUFFER FULL
	CAIL 1,0(3)
	AOS 0(P)
	RET

TTDOBE:	SKIPG 1,TTOCT(2)	;DISMISS UNTIL OUTPUT BUFFER EMPTY
	RET			;NOW EMPTY
	MOVEI 1,TTOBET
	HRLI 1,0(2)		;LINE NUMBER
	JSYS EDISMS
	JRST TTDOBE

TTGTBS:	HRRZ 1,TTMOD1(2)	;TAB TABLE ADR
	MOVE 3,1(1)
	MOVE 4,2(1)
	MOVE 1,0(1)
	RET

TTSTBS:	PUSH P,1
	HRRZ 1,TTMOD1(2)	;ADDRESS OF CURRENT TABS
	CAIN 1,TAB81		;STANDARD?
	JRST TTSTB1		;YES, NOTHING TO RELEASE
	NOSKED
	EXCH 1,TABLST		;PUT BUFFER ON FREE LIST
	MOVEM 1,@TABLST
	OKSKED
TTSTB1:	POP P,1
	CAME 1,TAB81		;SEE IF REQUEST TABS ARE STANDARD
	JRST TTSTB2		;NO
	CAMN 3,TAB82
	CAME 4,TAB83
	JRST TTSTB2		;NO, NO
TTSTB4:	MOVEI 1,TAB81		;ADDRESS OF STANDARD TABS
TTSTB3:	HRRM 1,TTMOD1(2)
	RET

TTSTB2:	PUSH P,1
	NOSKED
	SKIPN TABLST		;FREE TAB BUFFERS?
	JRST [	OKSKED		;NO
		POP P,1
		JRST TTSTB4]	;USE STANDARD
	MOVE 1,@TABLST		;GET BUFFER
	EXCH 1,TABLST
	OKSKED
	MOVEM 4,2(1)		;STORE BIT WORDS IN BUFFER
	MOVEM 3,1(1)
	POP P,0(1)
	JRST TTSTB3

TTDIBE:	SKIPN TTICT(2)
	RET
	MOVEI 1,TTIBET		;INPUT BUFFER EMPTY TEST
	HRLI 1,0(2)
	JSYS EDISMS
	JRST TTDIBE

TTRMOD:	MOVE 1,TTFLGS(2)	;READ MODES
	RET

TTSMOD:	PUSH P,1
	XOR 1,TTFLGS(2)		;SET RH BITS
	ANDI 1,776374		;BUT DON'T CHANGE BITS 26,27,34,35
	XORM 1,TTFLGS(2)
	LDB 1,[POINT 7,0(P),10]
	CAIL 1,10		;LEGAL PAGE SIZE?
	CAIL 1,200
	MOVEI 1,^D66		;NO, USE DEFAULT
	DPB 1,[POINT 7,TTFLGS(2),10]
	LDB 1,[POINT 7,0(P),17]
	CAIL 1,10		;LEGAL WIDTH
	CAIL 1,200
	MOVEI 1,^D72		;USE DEFAULT
	DPB 1,[POINT 7,TTFLGS(2),17]
	LDB 1,[POINT 3,0(P),3]
	DPB 1,[POINT 3,TTFLGS(2),3]	;LH BITS
	POP P,1
	HLLOS TTFORK(2)		;RESET LINE TO NO-WAIT STATE
	RET

TTRPOS:	MOVE 1,TTLPOS(2)	;READ POSITION
	RET

TTRCOC:	MOVE 1,FCMOD1(2)	;READ CONTROL CHARACTER MODES
	MOVE 3,FCMOD2(2)
	RET

TTSCOC:	MOVEM 1,FCMOD1(2)	;SET CONTROL CHARACTER MODES
	MOVEM 3,FCMOD2(2)
	RET

;HANG UP DATASET

TTHNGU:	CAIL 2,CTYLIN		;CAN'T HANGUP CTY
	RET
	CALL TTDOBE		;WAIT TILL NO OUTPUT
	MOVEI 1,TTHU0		;HANGUP FIRST STATE ROUTINE
	CALL TTQAD		;ADD TO QUEUE
	RET

;"BACKUP" INPUT POINTER - CAN ONLY BACKUP ONE

TTBKPT:	MOVEI 3,1B34
	TDNE 3,TTFLGS(2)	;ALREADY BACKUPED?
	RET			;YES
	IORM 3,TTFLGS(2)	;SET FLAG TO BE NOTICED AT NEXT TCI
	JRST RSKP

TTSPOS:	MOVEM 1,TTLPOS(2)	;SET LINE CHARACTER POSITION
	RET

;SIMULATE TTY INPUT

TTSTI:	ANDI 1,377		;ISOLATE CHARACTER
	HRLI 1,0(2)		;COMBINE WITH LINE NUMBER
	IORI 1,DLSRCF		;SET RECEIVER FLAG
	NOSKD1
	CHNOFF DLSCHN
	AOS 3,TTBIGI		;PUT SIMULATE DLS WORD IN BIG BUF
	CAIN 3,TTBSIZ
	SETZB 3,TTBIGI
	MOVEM 1,TTBBUF(3)
	AOS TTBIGC
	CHNON DLSCHN
	OKSKD1
	MOVEI 1,^D100		;DISMISS FOR 100 MS. TO GIVE
	DISMS			;DISTINATION TIME TO DIGEST CHARACTER
	MOVEI 3,200000
	SKIPE TTICT(2)		;DEST INPUT BUFFER NOW EMPTY?
	IORM 3,TTFORK(2)	;NO, BE SURE JOB GIVEN WAKEUP
	RET

;TLINK JSYS

.TLINK:	JSYS MENTR
	MOVEI 1,0(1)
	CALL CHKTTM		;CHECK DESIGNATOR, GET LINE NO IN 2
	RETERR DESX1		;NOT TTY DESIGNATOR
	CAIGE 2,1		;DISALLOW 0 AS OBJECT, CAUSE IT'S
	JRST MRSKP		;USED FOR NIL, SHOULD BE FIXED
	PUSH P,2		;SAVE OBJECT LINE NUMBER
	UMOVE 1,1
	TLNN 1,(74B5)		;SECOND DESIGNATOR REQUIRED?
	JRST TL1		;NO
	XCTUU [HRRZ 2,2]
	CAIN 2,-1		;'ALL' ?
	JRST TL1		;YES, LEAVE AS IS
	TRZE 2,1B18		;4XXXXX?
	JRST TL2		;YES
	MOVE 1,2		;ASSUME REGULAR JFN
	CALL CHKTTM
	RETERR DESX1		;NOT TTY
TL2:	CAIGE 2,NLINES		;LEGAL LINE?
	CAIGE 2,1
	RETERR DESX1		;NO
TL1:	POP P,7			;OBJECT DESIGNATOR
	UMOVE 6,1		;GET FUNCTION FLAGS
	TLNE 6,(1B0)
	CALL TLINK0		;CLEAR REMOTE TO OBJECT
	TLNE 6,(1B1)
	CALL TLINK1		;CLEAR OBJECT TO REMOTE
	TLNE 6,(1B2)
	CALL TLINK2		;SET OBJECT TO REMOTE
	TLNE 6,(1B3)
	CALL TLINK3		;SET REMOTE TO OBJECT
	TLNE 6,(1B4)
	CALL TLINK4		;SET ACCEPT BIT TO C(B5)
MRSKP:	AOS 0(P)
	JRST MRETN

;CLEAR REMOTE TO OBJECT

TLINK0:	CAIE 2,-1		;ALL REMOTES?
	JRST [	CALL TL0C	;NO, DO THE ONE SPECIFIED
		RET]
	PUSH P,2
	MOVEI 2,0		;SCAN ALL LINES
	CALL TL0C		;CLEARING ANY LINKS TO OBJECT
	CAIGE 2,NLINES-1
	AOJA 2,.-2
	POP P,2
	RET

TL0C:	CALL TLTST1		;LOOK AT REMOTE LINE
	JUMPL 1,R		;DONE IF NO LINKS TO OBJ
	SETZ 1,
	DPB 1,5			;CLEAR THE LINK JUST FOUND
	JRST TL0C

;CLEAR OBJECT TO REMOTE

TLINK1:	CAIE 2,-1		;ALL?
	JRST [	CALL TL1C	;NO, CLEAR SPECIFIC
		RET]
	MOVE 5,[POINT 9,TTLINK(7),-1]
	PUSH P,2
TL12:	ILDB 2,5		;SCAN ALL FIELDS OF OBJECT LINE
	JUMPE 2,.+4
	PUSH P,5
	CALL TL1C
	POP P,5
	TLNE 5,(7B2)
	JRST TL12
	POP P,2
	RET

TL1C:	CALL TLTST2		;FIND LINK TO REMOTE
	JUMPL 1,R		;NONE, DONE
	MOVE 1,CAPMSK
	TRNE 1,WHEEL+OPER	;PRIVILEGED?
	JRST TL13		;YES, SKIP CHECK
	PUSH P,5
	CALL TLTST1		;EXISTS REMOTE TO OBJECT?
	POP P,5
	JUMPG 1,MRETN	;ERROR IF YES
TL13:	SETZ 1,
	DPB 1,5			;CLEAR LINK JUST FOUND
	JRST TL1C

;SET OBJECT TO REMOTE

TLINK2:	CAIN 2,-1
	RETERR DESX1		;NON-SPECIFIC DESIGNATOR ILLEG HERE
	CAMN 2,7		;LINK TO SELF?
	RET			;YES, IGNORE
	CALL TLTST2		;LINK ALREADY EXISTS?
	JUMPG 1,R		;IGNORE IF YES
	MOVEI 5,5		;DO 5 RINGS
TL21:	MOVEI 3,1B26		;ACCEPT BIT
	MOVE 4,CAPENB
	TRNN 4,WHEEL+OPER	;PRIVILEGED? OR
	TDNE 3,TTFLGS(2)	;REMOTE ACCEPTING?
	JRST TL22		;YES
	JUMPLE 5,MRETN	;NO, QUIT AFTER 5 RINGS
	MOVEI 4,^D10		;A RING IS 10 BELLS
	MOVEI 1,"G"-100		;BELL
TL23:	CALL TCEO2		;RING REMOTE
	EXCH 2,7
	CALL TCEO2		;RING LOCAL
	EXCH 2,7
	SOJG 4,TL23
	MOVEI 1,^D3000		;WAIT FOR 3 SECONDS, THE BELL WILL BE
	DISMS			;RINGING FOR THE FIRST SECOND OF WAIT
	SOJA 5,TL21		;GO SEE IF REMOTE NOW ACCEPTING

TL22:	PUSH P,2
	SETZ 2,
	CALL TLTST2		;FIND FREE FIELD IN OBJECT
	POP P,2
	JUMPL 1,MRETN	;LINKS FULL
	DPB 2,5			;DEPOSIT REMOTE NUMBER IN FIELD
	RET

;SET REMOTE TO OBJECT

TLINK3:	CAIN 2,-1
	RETERR DESX1		;MULTIPLE DESIGNATOR ILLEGAL
	CAMN 2,7		;LINK TO SELF?
	RET			;YES, IGNORE
	CALL TLTST1		;LINK ALREADY EXISTS?
	JUMPG 1,R		;RETURN IF SO
	MOVE 1,CAPENB
	TRNE 1,WHEEL+OPER	;PRIVILEGED?
	JRST TL31		;YES, SKIP SHECK
	CALL TLTST2		;CHECK OBJ TO REMOTE
	JUMPL 1,MRETN	;ERROR, OBJ TO REMOTE NOT DONE FIRST
TL31:	PUSH P,7
	SETZ 7,
	CALL TLTST1		;FIND FREE FIELD IN REMOTE
	POP P,7
	JUMPL 1,MRETN	;LINK WORD FULL
	DPB 7,5			;DEPOSIT OBJ NUMBER IN FIELD
	RET

;SET ACCEPT BIT

TLINK4:	MOVEI 1,1B26		;IT IS BIT 26 IN TTFLGS
	TLNE 6,(1B5)		;SET IT?
	IORM 1,TTFLGS(7)	;YES
	TLNN 6,(1B5)		;CLEAR IT?
	ANDCAM 1,TTFLGS(7)	;YES
	RET

;CHECK FOR EXISTENCE OF REMOTE TO OBJECT
; VALUE .GE. 0 MEANS YES

TLTST1:	MOVE 5,[POINT 9,TTLINK(2),-1]
TLT1:	ILDB 1,5		;SCAN REMOTE
	CAMN 1,7		;FOUND OBJECT?
	RET			;YES
	TLNE 5,(7B2)		;NO, SCANNED ALL FIELDS?
	JRST TLT1		;NO
	SETO 1,			;YES, RETURN NEGATIVE VALUE
	RET

;CHECK FOR EXISTENCE OF OBJECT TO REMOTE
; VALUE .GE. 0 MEANS YES

TLTST2:	MOVE 5,[POINT 9,TTLINK(7),-1]
TLT2:	ILDB 1,5		;SCAN OBJECT
	CAMN 1,2		;FOUND REMOTE?
	RET			;YES
	TLNE 5,(7B2)		;NO, SCANNED ALL FIELDS?
	JRST TLT2		;NO
	SETO 1,			;YES, RETURN NEG VALUE
	RET

	RESCD

;PSEUDO-INTERRUPT CHARACTER TABLE
	INTERN PSICH
	RADIX 10
NU==36		;NOT USED VALUE

PSICH:	0	;CONTROL GROUP - @ (BREAK)
	1	;A
	2	;B
	3	;C
	4	;D
	5	;E
	6	;F
	7	;G

	8	;H
	9	;I
	10	;J
	11	;K
	12	;L
	13	;M (CR)
	14	;N
	15	;O

	16	;P
	17	;Q
	18	;R
	19	;S
	20	;T
	21	;U
	22	;V
	23	;W

	24	;X
	25	;Y
	26	;Z
	27	;ALTMODE
	NU	;34
	NU	;35
	NU	;36
	NU	;37

	29	;SPACE
PSICHH:	NU	;173
	NU	;174
	27	;175 (OLD ALTMODE)
	27	;176 (OLD ALTMODE)
	28	;177 (RUBOUT)
	RADIX 8

PSICHU==173		;FIRST CHARACTER OF UPPER GROUP
PSICHL==PSICHH-PSICH	;SIZE OF LOWER GROUP
PSICHO==PSICH+PSICHU-PSICHH	;UPPER GROUP OFFSET

;CHARACTER CLASS TABLE (FOR WAKEUP CONTROL)

FC==10		;FORMAT CONTROL
C==4		;CONTROL, NON-FORMAT
PC==2		;PUNCTUATION
A==1		;ALPHANUMERIC

TTWKTB:	BYTE (6) C,C,C,C,C,C		;NULL - E(C)
	BYTE (6) C,C,FC,FC,FC,C		;F(C) - K(C)
	BYTE (6) FC,FC,C,C,C,C		;L(C) - Q(C)
	BYTE (6) C,C,C,C,C,C		;R(C) - W(C)
	BYTE (6) C,C,C,FC,C,C		;X(C) - Z(C), ESC - 035
	BYTE (6) C,FC,PC,PC,PC,PC	;036, EOL, SPACE - #
	REPEAT 2,<BYTE (6) PC,PC,PC,PC,PC,PC>
					;$ - /
	BYTE (6) A,A,A,A,A,A		;0 - 5
	BYTE (6) A,A,A,A,PC,PC		;6 - 9, COLON, SEMI
	BYTE (6) PC,PC,PC,PC,PC,A	;LEFT ANG BK - AT, A
	REPEAT 4,<BYTE (6) A,A,A,A,A,A>
					;B - Y
	BYTE (6) A,PC,PC,PC,PC,PC	;Z, LEFT BK - LARR
	BYTE (6) PC,A,A,A,A,A		;140, A(LC) - E
	REPEAT 3,<BYTE (6) A,A,A,A,A,A>
					;;F(LC) - W(LC)
	BYTE (6) A,A,A,PC,PC,PC		;X - Z(LC), 173 - 175
	BYTE (6) PC,FC			;176, RUBOUT

	INTERN CH6TAB,BHC

;6-BIT POINTER TABLE

	POINT 6,0,-1
CH6TAB:	POINT 6,0,5
	POINT 6,0,11
	POINT 6,0,17
	POINT 6,0,23
	POINT 6,0,29
	POINT 6,0,35

XX=0
BHC:	REPEAT 20,<EXP XX*1000001
		XX=XX+1>

	INTERN BITS

XX==0
BITS:	REPEAT ^D36,<EXP 1B<XX>
		XX=XX+1>

;ROUTINE TO OUTPUT CHARACTER TO TELETYPE,
;CONVERTING FROM INTERNAL TO ASCII, AND HANDLING FORMAT EFFECTORS

TCOX:	PUSH P,1
	JRST TCOX1

TCO:	PUSH P,1		;CHARACTER IN 1, LINE NO. IN 2
	MOVE 3,TTFLGS(2)	;FLAGS
	TRNN 3,3B29		;BINARY (8 BIT) MODE?
	JRST TTCO3		;YES
TCOX1:	ANDI 1,177
	CAIL 1,177
	JRST TTCO3		;RUBOUT
	CAIGE 1,40
	JRST TTCO1		;CONTROL GROUP
	CAIL 1,140
	JRST TTCO2		;LOWER CASE GROUP
TTCO6:	AOS 3,TTLPOS(2)		;SPACING CHARACTER
TTCO8:	LDB 4,[POINT 7,TTFLGS(2),17] ;GET RIGHT MARGIN
	CAIL 4,0(3)		;CHECK FOR OVERFLOW
	JRST TTCO3
	PUSH P,1		;LINE OVERFLOW, DO CR AND CONTINUATION
	MOVEI 1,15
	CALL TCOUT
	MOVEI 1,12
	CALL TCOUT
	MOVSI 1,1
	ADD 1,TTLPOS(2)		;INCREMENT LINE COUNT
	HRRI 1,2		;SET CHAR COUNT FOR 2 *'S
	MOVEM 1,TTLPOS(2)
	MOVEI 1,52
	CALL TCOUT
	CALL TCOUT
	POP P,1
	JRST TTCO6

TTCO3:	CALL TCOUT		;PUT CHARACTER IN OUTPUT BUFFER
TTCOR:	POP P,1
	RET

;LOWER CASE GROUP

TTCO2:	MOVE 3,TTFLGS(2)	;DEVICE CHARACTERISTICS
	TLNE 3,TTLCBT		;HAS LOWER CASE?
	JRST TTCO6		;YES
	SUBI 1,40		;INDICATE LOWER CASE AND CONVERT
	TRNN 3,40		;INDICATE LC?
	JRST TTCO6		;NO.
	PUSH P,1
	MOVEI 1,TTLIND		;INDICATION CHARACTER
	JRST TTCO7

;CONTROL GROUP
;FOR EACH CHARACTER, ACTION IS CONTROLLED BY TWO BITS:
; 00 => IGNORE, DO NOT SEND
; 01 => SEND PRINTING INDICATION (I.E. &C)
; 10 => SEND ACTUAL CODE AND ACCOUNT LINE AND PAGE POSITION
; 11 => SIMULATE FORMAT ACTION AND ACCOUNT

TTCO1:	MOVE 4,FCMOD2(2)	;SECOND CONTROL MODES WORD
	MOVE 3,FCMOD1(2)	;FIRST CONTROL MODES WORD
	ROTC 3,0(1)		;GET TWO BIT MODE FOR THIS CHAR
	ROTC 3,0(1)
	TLNE 3,400000
	JRST @TTCTAB(1)		;DISPATCH TO FORMAT ROUTINE
	TLNN 3,200000
	JRST TTCOR		;IGNORE
	ADDI 1,100		;MAKE INTO PRINTING EQUIVALENT
	PUSH P,1
	MOVEI 1,TTCIND		;INDICATOR CHARACTER
TTCO7:	CALL TCOUT		;SEND INDICATOR
	AOS TTLPOS(2)		;LINE WILL NOT BE SPLIT AFTER INDICATOR
	POP P,1
	JRST TTCO6

;DISPATCH TABLE FOR FORMAT EFFECTING CONTROL CHARACTERS

NC=TTCO3	;DISPATCH FOR NON-FORMAT CONTROLS

TTCTAB:	NC	;@
	NC	;A
	NC	;B
	NC	;C
	NC	;D
	NC	;E
	NC	;F
	NC	;G

	TTSM4	;H - BACKSPACE
	TTSM1	;I - TAB
	TTSM2	;J - LINE FEED
	NC	;K
	TTSM3	;L - FORM
	TTSM5	;M - CARRIAGE RETURN
	NC	;N
	NC 	;O

	NC	;P
	NC	;Q
	NC	;R
	NC	;S
	NC	;T
	NC	;U
	NC	;V
	NC	;W

	NC	;X
	NC	;Y
	NC	;Z
	TTSALT	;[ AND ALTMODE
	NC	;\
	NC	;]
	NC	;^
	TTSM6	;_, EOL

;NORMAL CONTROL CHARACTER SETTINGS

	INTERN TTICB1,TTICB2

TTICB1:	BYTE (2) 0,1,1,1,1,1,1,2,1,3,2,1,3,2,1,1,1,1
TTICB2:	BYTE (2) 1,1,1,1,1,1,1,1,1,3,1,1,1,2

;TAB
;TAB STOPS ARE INDICATED BY BITS CORRESPONDING TO LINE POSITIONS
;THERE ARE 108 STOPS (3 WORDS)

TTSM1:	PUSH P,3
	MOVEI 7,1		;7 WILL CONTAIN SKIP DISTANCE ( >0 )
	HRRZ 3,TTLPOS(2)	;OLD POSITION
	ADDI 3,1		;MOVE AT LEAST ONE
	IDIVI 3,^D36		;36 TAB STOPS / WORD
TTSM11:	CAILE 3,2		;BEYOND END OF LINE?
	JRST TTSM15		;YES
	HRRZ 5,TTMOD1(2)	;TAB TABLE FOR THIS LINE
	ADDI 5,0(3)
	MOVE 5,0(5)		;GET BITS
	LSH 5,0(4)		;GET TO PRESENT POSITION
	JFFO 5,TTSM12		;FIND NEXT STOP
	ADDI 7,^D36		;NOT IN THIS WORD - UPDATE COUNT AND
	SUBI 7,0(4)
	MOVEI 4,0		;START AT BEGINNING OF NEXT WORD
	AOJA 3,TTSM11

TTSM12:	ADDI 7,0(6)		;ADD IN NUMBER SKIPPED, THIS WORD
TTSM15:	POP P,3			;MODE WORD
	TLNN 3,200000		;REAL OR SIMULATED
	JRST TTSM13		;REAL
	MOVEI 1,40		;SIMULATE WITH SPACES
	CALL TCOX
	SOJG 7,.-1
	JRST TTCOR

TTSM13:	MOVEI 1,11		;SEND REAL TAB
	CALL TCOUT
	MOVE 4,7		;PLUS RUBOUTS TO KILL TIME
	IDIVI 4,4		;ASSUME FOUR SPACES PER RUBOUT
	JUMPLE 4,TTSM14
	MOVEI 1,177
	CALL TCOUT
	SOJG 4,.-1
TTSM14:	ADDB 7,TTLPOS(2)	;UPDATE POSITION
	MOVEI 3,0(7)
	JRST TTCO8

;ALTMODE

TTSALT:	TLNN 3,200000		;SIMULATE?
	JRST TTCO3		;NO, SEND
	MOVEI 1,"$"		;SIMULATE MEANS SEND DOLLARS
	JRST TCOX1

;LINE FEED

TTSM2:	MOVSI 3,1		;INCREMENT PAGE POSITION
	ADDM 3,TTLPOS(2)
	JRST TTCO3

;FORM FEED

TTSM3:	HLRZ 4,TTLPOS(2)	;PRESENT PAGE POSITION
	HRRZS TTLPOS(2)		;RESET
	PUSH P,3
	LDB 3,[POINT 7,TTFLGS(2),10] ;PAGE SIZE
	IDIVI 4,0(3)
	SUBM 3,5		;DIFFERENCE TO END OF PAGE
	POP P,3
	TLNN 3,200000		;REAL OR SIMULATED
	JRST TTSM32		;REAL
	MOVEI 1,12		;SIMULATE WITH LINE FEEDS
TTSM31:	JUMPE 5,TTCOR
	CALL TCOUT
	SOJA 5,TTSM31

TTSM32:	CALL TCOUT		;SEND REAL CHARACTER
	IDIVI 5,10		;PLUS RUBOUTS TO WASTE TIME
	MOVEI 1,177
	AOJA 5,TTSM31

;BACKSPACE

TTSM4:	HRRZ 4,TTLPOS(2)	;REDUCE LINE POSITION
	JUMPE 4,.+2		;IF NOT AT BEGINNING OF LINE
	SOS TTLPOS(2)
	TLNN 3,200000		;REAL OR SIMULATED
	JRST TTCO3
	MOVEI 1,15		;SIMULATE WITH CR AND SPACES (UGH)
	CALL TCOUT
	HRRZ 4,TTLPOS(2)
	MOVEI 1,40
	JUMPE 4,TTCOR
	CALL TCOUT
	SOJA 4,.-2

;CARRIAGE RETURN

TTSM5:	HLLZS TTLPOS(2)		;RESET LINE POSITION
	JRST TTCO3

;EOL

TTSM6:	MOVEI 1,15		;BECOMES CR, LF
	CALL TCOX
	MOVEI 1,12
	JRST TCOX1

;OUTPUT ONE CHARACTER TO SPECIFIED TTY LINE
;CHARACTER IN 1, LINE NUMBER IN 2

TCOUT:	MOVEI 3,3B29		;MODE BITS
	CAIL 2,NTTYS
	 JRST @TCOUTD		; NO PARITY FOR NVT
	CAIGE 1,40		;CONTROL CHARACTER, AND
	TDNN 3,TTFLGS(2)	;NOT BINARY?
	JRST @TCOUTD		;DISPATCH TO APPROPRIATE ROUTINE
	MOVEI 3,0(1)
	IMULI 3,200401		;COMPUTE PARITY FOR CONTROL CHAR
	AND 3,[11111111]
	IMUL 3,[11111111]
	TLNE 3,(1B14)		;(EVEN PARITY) BIT ON?
	TRO 1,200		;YES, PUT (EVEN PARITY) BIT ON
	JRST @TCOUTD

TCOUTX:	SKIPE 3,TTLINK(2)	;LINKS ON THIS LINE?
	CALL TTLNK3		;YES, GO DO THEM
TCOUTY:	LDB 3,TTOMAX		;CAPACITY OF OUTPUT BUFFERS
	CAMG 3,TTOCT(2)		;FULL?
	JRST TCOUT1		;YES
TCEO3:	NOSKD1
	CHNOFF DLSCHN		;MUST PREVENT DEASSIGN OF BUFFERS
	SKIPN 3,TTOIN(2)	;BUFFERS EXIST?
	JRST [	LDB 3,TTNOU	;NO, GET NUMBER TO ASSIGN
		CALL TTGTBF	;ASSIGN THEM
		MOVEM 3,TTOOUT(2)
		JRST .+1]
	TDNN 3,WRPMSK		;END OF BUFFER?
	HRR 3,1-TTSIZ(3)	;YES, GET ADDRESS OF NEXT BUFFER
	IDPB 1,3
	MOVEM 3,TTOIN(2)
	AOS TTOCT(2)
	CHNON DLSCHN		;SAFE TO TURN CHN ON AFTER AOS
	OKSKD1
TCEO1:
IFDEF IMPCHN,<
	CAIL 2,NTTYS		;PSEUDO TTY?
	JRST [	CALL NTTCSO	;YES, DO OUTPUT IF POSSIBLE
		JRST TCEO4]
>
	SKIPGE TTFLGS(2)	;TEST OUTPUT ACTIVE
	JRST .+3
	MOVEM 2,TTNIT1		;SIMULATE INTERRUPT THIS LINE
	ISB DLSCHN
TCEO4:	POP P,3
	JRSTF 0(3)		;RESTORE FLAGS

;SCAN LINK WORD, SENDING CHAR TO LINES SPECIFIED BY NON-0 BYTES

TTLNK3:	PUSH P,2		;SAVE CURRENT LINE NUMBER
TTLNK2:	SETZ 2,
	LSHC 2,^D9		;GET NEXT FIELD
	JUMPE 2,TTLNK1		;0 MEANS NOT USED
	PUSH P,3
	PUSH P,1		;SAVE CHARACTER
	CAIL 2,NTTYS		;NETWORK LINE?
	ANDI 1,177		;YES, FLUSH PARITY BIT
	SKIPE INSKED		;IF INSKED, SEND LINKED OUTPUT
	CALL TCOUTZ		;VIA ECHO ROUTE
	SKIPN INSKED
	CALL TCOUTY		;OTHERWISE VIA NORMAL ROUTE
	POP P,1
	POP P,3
TTLNK1:	JUMPN 3,TTLNK2		;DO MORE IF ANY
	POP P,2			;RESTORE ORIG LINE NUMBER
	RET

;ACTION WHEN BUFFER FULL

TCOUT1:	PUSH P,1		;SAVE CHARACTER
	MOVEI 1,TCOTST		;SETUP SCHEDULER TEST WORD
	HRLI 1,0(2)		;  LINE NO,,TEST ROUTINE ADR
	JSYS EDISMS
	POP P,1
	JRST TCOUTY

;CALLED FROM SCHEDULER TO TEST FOR RUNNABLE

	INTERN TCITST,TCOTST

TCOTST:	MOVEI 2,0(1)		;LINE NUMBER TO REGULAR AC
	LDB 1,TTOWRN		;REGULAR WAKEUP COUNT
	SKIPE FKINT(7)		;BUT IF INTERRUPT WAITING,
	LDB 1,TTOMAX		;WAKEUP IF BUFFER IS NOT FULL
	CAMG 1,TTOCT(2)		;AT OR BELOW WAKEUP LEVEL?
	JRST 0(4)		;NO
	JRST 1(4)		;YES

	SWAPCD

;ROUTINE TO GET CHARACTER FROM TELETYPE
;CONVERT FROM ASCII TO INTERNAL AND GENERATE ECHOS
;AS REQUESTED

TCI:	MOVEI 3,1B34
	TDNE 3,TTFLGS(2)	;REPEAT LAST CHAR?
	JRST TCIRC		;YES
	NOSKED
	SKIPG 1,TTICT(2)		;ANY CHARS IN BUFFER?
	JRST TCI1		;NO
	SKIPN 3,TTIOUT(2)	;GET POINTER
	BUG(HLT,<TCI - NO BUFFER POINTER BUT COUNT NON-0>)
	TDNN 3,WRPMSK
	HRR 3,1-TTSIZ(3)	;NEW BUFFER
	ILDB 1,3
	MOVEM 3,TTIOUT(2)
	CHNOFF DLSCHN
	SOSG TTICT(2)		;REDUCE COUNT, NOW EMPTY?
	JRST [	SETZB 3,TTIOUT(2) ;YES, RELEASE BUFFERS
		EXCH 3,TTIIN(2)
		CALL TTRLBF
		JRST .+1]
	CHNON DLSCHN
	OKSKED
	MOVE 3,TTFLGS(2)
	TRNN 3,3B29		;BINARY?
	JRST TCIR		;YES
	TRNE 3,2B33		;HDX?
	JRST TCIN		;YES, NO DEFERRED ECHOS
	ANDI 3,3B25		;ISOLATE ECHO MODE BITS
	JUMPE 3,TCIN		;NO ECHO
	TRNE 1,400		;HAS CHAR BEEN ECHOED?
	CAIN 3,3B25		;BOTH IMMED AND DEFERRED?
TCIY:	CALL TCO		;YES, DO ECHO
TCIN:	ANDI 1,177
TCIR:	DPB 1,TTYLCH		;SAVE LAST CHAR
	RET

TCIRC:	ANDCAM 3,TTFLGS(2)	;CLEAR BIT
	LDB 1,TTYLCH		;GET LAST CHARACTER
	RET

TTYLCH:	POINT 9,TTMOD1(2),8

;ACTION IF BUFFER IS EMPTY

TCI1:	OKSKED
	HRRZ 3,TTFORK(2)
	CAIE 3,-1		;LINE NOW AVAILABLE?
	JRST TCIF1		;NO
TCIF2:	MOVE 3,FORKN		;GET INDEX OF THIS FORK
	HRRM 3,TTFORK(2)	;RECORD THIS FORK WAITING FOR TTY
IFDEF IMPCHN,<
	CAIL 2,NTTYS		;NETWORK TTY?
	CALL NETCAP		;YES, CHECK ALLOCATE
>
	MOVEI 1,TCITST		;SETUP SCHEDULER TEST WORD
	HRLI 1,0(2)		;  LINE NO,,TEST ROUTINE ADR
	SKIPE TTICT(2)		;STILL EMPTY?
	JRST TCI3		;NO
	CALL TTYBLK		;DISMISS AND ACCOUNT
TCI3:	HLLOS TTFORK(2)		;SET RIGHT HALF TO ONES
	JRST TCI		;TRY AGAIN

TCIF1:	CAMN 3,FORKN		;THIS FORK?
	JRST TCIF2		;OK
	PUSH P,1
	MOVEI 1,0(3)
	ANDI 1,7777
	PUSH P,2
	CALL TTFRKT		;GO RESOLVE CONFLICT BY HALTING FORK
	POP P,2
	POP P,1
	JRST TCIF2

;BLOCK FORK FOR TTY I/O, DO STATISTICS

TTYBLK:	PUSH P,4
	MOVE 4,JOBNO		;GET JOB NUMBER
	HRRZ 4,JOBNAM(4)	;CURRENT SUBSYSTEM INDEX
	MOVE 3,FORKX
	HRRZ 3,FKWSP(3)		;CURRENT SIZE
	HRLI 3,(1B14)		;0-14 IS WAKEUP COUNT
	ADDM 3,SWAKES(4)	;15-35 IS SIZE INTEGRAL
	MOVN 3,TODCLK		;REMEMBER TIME NOW
	JSYS EDISMS		;DISMISS
	ADD 3,TODCLK		;COMPUTE TIME DISMISSED
	ADDM 3,SBLKTM(4)	;ACCUMULATE PER SUBSYSTEM
	AOS TTYBKS		;COUNT TOTAL WAKEUPS
	POP P,4
	RET

;SCHEDULER TEST ROUTINE FOR FORKS WAITING FOR TTY INPUT
;CALLED WITH JSP 4,
;AC 1 CONTAINS LINE NUMBER
;AC 7 CONTAINS FORK NUMBER OF FORK BEING TESTED

	RESCD

TCITST:	HRRZ 2,TTFORK(1)
	TRZN 2,200000		;WAKEUP SEEN?
	JRST 0(4)		;NO, RETURN NO-SKIP
	JRST 1(4)		;YES

;TELETYPE INPUT CHANNEL 7 ROUTINE
;RUN EVERY SO OFTEN TO MOVE CHARACTERS FROM BIG BUFFER TO LINE BUFFERS,
;GENERATE ECHOS AND HANDLE CARRIER TRANSITIONS
;ENTERED BY  CALL  FROM SCHED

	INTERN TTCH7
	EXTERN TTBTIM

TTCH7X:	CONI DLS,1		;CHECK FOR LOST PI
	ANDI 1,7
	CAIN 1,DLSCHN		;CORRECTLY SET?
	JRST .+3		;YES
	AOS DLSLPI		;NO, COUNT LOSSAGES
	CONO DLS,DLSCHN		;AND RESET IT
	SKIPN 1,TTHNGT		;ACTIVE LINE TO BE CHECKED?
	JRST TTHNG1		;NO
	MOVE 2,TTHNGL		;YES, GET LINE NUMBER
	CAML 1,TODCLK		;INTERRUPT OVERDUE?
	JRST TTHNG4		;NO, KEEP WAITING
	AOS TTHNGN		;YES, COUNT UNHANGS
	HRLM 2,TTHNGN		;REMEMBER LAST HUNG LINE
	MOVEM 2,TTNIT1		;SIMULATE OUTPUT INTERRUPT
	ISB DLSCHN
TTHNG1:	AOS 2,TTHNGL		;GET NEXT LINE
	CAIL 2,NTTYS
	SETZB 2,TTHNGL		;WRAPAROUND LINE NUMBERS
	MOVE 1,TODCLK
	ADDI 1,^D500		;HALF-SECOND FROM NOW
	MOVEM 1,TTHNGT		;IS TIME AT WHICH LINE IS CALLED HUNG
	SKIPL TTFLGS(2)		;LINE NOW ACTIVE?
	SETZM TTHNGT		;NO, DON'T CHECK
TTHNG4:	MOVE 2,TTCQLN		;BEFORE LEAVING, CHECK CONTROL ON
	MOVEI 4,10		;A FEW LINES
TTCQ3:	SKIPN 1,TTCS(2)		;ANYTHING ON THIS LINE?
	JRST TTCQ2		;NO
	HRRZ 3,TODCLK		;SEE IF NOW TIME TO DO IT
	ANDI 3,377777
	HLRZ 1,1
	SUB 1,3			;DESIRED TIME MINUS NOW
TTCQ1:	JUMPLE 1,TTCQ4		;0 OR NEGATIVE TIME LEFT TO WAIT
	CAIGE 1,200000		;GREATER THAN MAX POSSIBLE?
	JRST TTCQ2		;NO, KEEP WAITING
	SUBI 1,400000		;ACCOUNT FOR WRAPAROUND
	JRST TTCQ1		;CHECK AGAIN

TTCQ4:	HRRZ 1,TTCS(2)		;GET ADDRESS OF FUNCTION TO DO
	SETZM TTCS(2)		;CLEAR CONTROL STATE
	CALL 0(1)		;DO THE FUNCTION
TTCQ2:	ADDI 2,1		;GO TO NEXT LINE
	CAIL 2,NLINES		;WRAPAROUND
	SETZ 2,
	SOJG 4,TTCQ3		;DONE ENOUGH FOR THIS TIME?
	MOVEM 2,TTCQLN		;YES, START AT THIS LINE NEXT TIME
	MOVEI 1,T7TIM		;SETUP TIME TO NEXT SERVICE
	MOVEM 1,TTBTIM
	RET

;ADD ITEM TO CONTROL QUEUE

TTQAD1:	HRLI 1,^D1000		;ITEM TO BE DONE IN 1 SEC.
TTQAD:	HRLZ 3,TODCLK		;WAIT TIME IN LH OF 1
	TLZ 3,400000		;ROUTINE ADDRESS IN RH OF 1
	ADD 1,3			;COMPUTE TIME TO DO FUNCTION
	MOVEM 1,TTCS(2)
	RET

TTCH7:	SKIPG TTBIGC		;BIG BUFFER EMPTY?
	JRST TTCH7X		;YES, RETURN
	AOS 3,TTBIGO		;NO, GET WORD
	CAIN 3,TTBSIZ		;WRAPAROUND IF NECESSARY
	SETZB 3,TTBIGO
	MOVE 1,TTBBUF(3)
	SOS TTBIGC
	HLRZ 2,1		;GET LINE NUMBER
	TRNE 1,DLSCXF		;CARRIER TRANSITION?
	JRST TT7CX		;YES
	TRNN 1,DLSRCF		;RECEIVER?
	JRST TTCH7		;NO (SHOULD NOT HAPPEN) - RESUME  SCAN
	ANDI 1,377
IFDEF IMPCHN,<
	CAIGE 2,NTTYS		;NETWORK LINE?
	JRST TTNET1		;NO
	CALL NTTRC1		;YES, HANDLE ALLOCATION STUFF
	TRZE 1,200		;TELNET CONTROL CODE?
	JRST TTCH7		;YES, FLUSH IT
	MOVSI 3,IMPTB2
	TDNE 3,TTNETW(2)	;WAS LAST CHAR A CR?
	JRST [	ANDCAM 3,TTNETW(2) ;YES, CLEAR THE BIT
		CAIN 1,12	;AND IS THIS A LF?
		JRST TTCH7	;YES, FLUSH IT
		JRST .+1]	;NO, KEEP IT
	CAIN 1,15		;IS THIS A CR?
	IORM 3,TTNETW(2)	;YES, REMEMBER TO FLUSH FOLLOWING LF
TTNET1:
>
	SKIPGE 3,TTFORK(2)	;ASSIGNED TO A JOB?
	JRST TTC7N		;NO

;CHECK FOR INTERRUPT INDICATING CHARACTER

	MOVEI 4,0(1)
	ANDI 4,177
	CAIGE 4,PSICHL		;TRANSLATE TO INTERRUPT CODE
	JRST TTCH71
	CAIGE 4,PSICHU
	JRST TTCH72		;NOT INTERRUPT CHAR
	SUBI 4,PSICHO
TTCH71:	MOVE 3,PSICH(4)
	CAIN 3,NU		;NOT USED?
	JRST TTCH72		;YES
	MOVE 5,TTPSI(2)		;TERMINAL INTERRUPT MASK
	TDNE 5,BITS(3)		;THIS CODE ASSIGNED?
	JRST TTPSI1		;YES, GO INITIATE INTERRUPT

;DETERMINE ECHO STATUS

TTCH72:	LDB 3,TTIMAX		;CAPACITY OF INPUT BUFFERS
	CAMG 3,TTICT(2)		;FULL?
	JRST [	MOVE 3,TTFLGS(2) ;YES, GET MODE
		TRNN 3,3B29	;BINARY?
		JRST TTCH7	;YES, ECHO NOTHING
		JRST TTCH7F]	;NO, ECHO BELL
	MOVEI 3,TCEOUT		;SETUP OUTPUT (ECHO) DISPATCH
	EXCH 3,TCOUTD
	PUSH P,3		;SAVE CURRENT DISPATCH
	MOVS 3,TTFLGS(2)
	TLNN 3,3B29		;BINARY?
	JRST TTRNE		;YES, NO ECHOS
	ANDI 1,177
	CAIN 1,15		;CR?
	JRST TTREC5		;YES
	TRNE 3,1B21		;HAS LOWER CASE?
	JRST TTREC6		;YES
	CAIE 1,175		;NO, OLD ALTMODES?
	CAIN 1,176
	MOVEI 1,33		;YES, CONVERT TO NEW
	JRST TTREC6

TTREC5:	MOVEI 1,EOL		;END OF LINE CHARACTER
	JRST TTREC2

TTREC6:	TLNN 3,1B31		;CONVERT LC?
	JRST TTREC2		;NO
	CAIGE 1,173		;YES - LC?
	CAIGE 1,140
	JRST TTREC2		;NO
	TRZ 1,40		;YES, CONVERT
TTREC2:	TLCE 3,3B33		;REGULAR FDX LINE?
	JRST TTHDX1		;NO, SOME FLAVOR OF HDX
TTHDX2:	TLNN 3,3B25		;ANY ECHOS?
	JRST TTRNE		;NO
	HRR 3,TTFORK(2)		;GET STATUS OF FORK WAITING FOR INPUT
	TLNE 3,2000		;IMMEDIATE ECHOS?
	JRST TTREC4		;YES
	TRNE 3,200000		;MAYBE - IS FORK WAITING?
	JRST TTRNE		;NO - DEFER ECHOS
TTREC4:	TRO 1,400		;BIT TO DISABLE DEFERRED ECHO THIS CHAR
	CAIE 1,377		;SPECIAL CHAR (RUBOUT)?
	CALL TCOX		;NO - TRANSLATE AND OUTPUT TO ECHO BUFFER

;PUT CHAR IN BUFFER AND CHECK FOR WAKEUP

TTRNE:	SKIPN 3,TTIIN(2)	;INPUT BUFFERS EXIST?
	JRST [	LDB 3,TTNIN	;NO, GET NUMBER TO ASSIGN
		CALL TTGTBF	;ASSIGN THEM
		MOVEM 3,TTIOUT(2)
		JRST .+1]
	TDNN 3,WRPMSK
	HRR 3,1-TTSIZ(3)
	IDPB 1,3
	MOVEM 3,TTIIN(2)
	AOS 3,TTICT(2)
	CAIL 3,TTWKCT		;BUFFER NEARLY FULL?
	JRST TTWKTG		;YES - WAKEUP
	MOVEI 3,0(1)		;NO - WAKEUP CHARACTER?
	ANDI 3,177
	IDIVI 3,6
	ADDI 3,TTWKTB
	HLL 3,CH6TAB(4)
	LDB 4,3			;GET FLAGS THIS CHAR
	LDB 3,[POINT 6,TTFLGS(2),23] ;GET FLAGS THIS FORK
	TDNN 3,4		;ANY THE SAME?
	JRST TTWKT1		;NO DONT WAKE
TTWKTG:	MOVEI 3,200000		;YES - INDICATE WAKEUP READY
	IORM 3,TTFORK(2)
	AOS ISKED
TTWKT1:	POP P,TCOUTD		;RESTORE OUTPUT DISPATCH
	JRST TTCH7		;RESUME BIG BUFFER SCAN

TTCH7F:	MOVEI 1,07		;INPUT BUFFER FULL,
	CALL TCEO2		;ECHO BELL
	JRST TTCH7		;RESUME BUFFER SCAN

;HALF-DUPLEX LOGIC

TTHDX1:	TLCN 3,3B33		;HDX MODE 3?
	JRST TTRNE		;YES, NO ECHOS AT ALL
	TLNN 3,2B33		;MODE 2 OR 1?
	JRST TTHDX2		;1 NOT DEFINED, TREAT AS 0
	CAIE 1,EOL		;NO ECHOS FOR MODE 2 CEPT EOL, TAB, FF
	JRST TTHDX3		;NOT EOL
	MOVEI 1,12		;MUST ECHO LF FOR CR
	CALL TCOX
	MOVEI 1,EOL
	JRST TTRNE

TTHDX3:	CAIN 1,"I"-100		;TAB?
	TRNE 3,(1B2)		;AND NO MECH TAB ON DEVICE?
	JRST TTHDX4		;NO
	JRST TTREC4		;YES, ECHO TO SIMULATE TAB

TTHDX4:	CAIN 1,"L"-100		;FORM?
	TRNE 3,(1B1)		;AND NO MECH FORM ON DEVICE?
	JRST TTRNE		;NO, NO OTHER POSSIBLE ECHOS TO DO
	JRST TTREC4		;YES, ECHO TO SIMULATE FORMFEED

;CARRIER ON/OFF

TT7CX:	MOVEI 3,1		;CARRIER STATE FLAG
	TRNN 1,1B24		;CARRIER NOW ON?
	JRST TTCX1		;NO, OFF
	SKIPGE TTFORK(2)	;TTY ASSIGNED OR
	TDNE 3,TTFLGS(2)	;CARRIER NOT OFF BEFORE?
	JRST TTCH7		;YES, INTERRUPT IS SPURIOUS
	IORM 3,TTFLGS(2)	;UPDATE SOFTWARE FLAG
	MOVEI 1,TTCON		;QUEUE A CHECK TO GO IN 1 SEC.
	CALL TTQAD1
	JRST TTCH7

TTCON:	MOVEI 3,1
	TDNN 3,TTFLGS(2)	;CARRIER STILL ON?
	RET			;NO, IGNORE IT
	SKIPL 3,TTFORK(2)	;JOB ACTIVE HERE?
	JRST TTCH7F		;YES, SEND BELL, OTHERWISE IGNORE
	JRST TTC7SJ		;NO, START JOB

TTCX1:	TDNN 3,TTFLGS(2)	;WAS ON BEFORE?
	JRST TTCH7		;NO, SPURIOUS INTERRUPT
	ANDCAM 3,TTFLGS(2)	;UPDATE SOFTWARE FLAG
	MOVEI 1,TTCOF		;QUEUE A CHECK FOR 1 SEC.
	CALL TTQAD1
	JRST TTCH7

TTCOF:	MOVEI 3,1
	TDNE 3,TTFLGS(2)	;CARRIER STILL OFF?
	RET			;NO, IGNORE
	MOVEI 1,TTHU0		;YES, QUEUE A HANGUP-REACTIVATE SEQUENCE
	CALL TTQAD		;TO START IMMEDIATELY
	SKIPGE TTFORK(2)	;JOB ATTACHED?
	JRST TTCH7		;NO, IGNORE
PTYCOF:	MOVEI 3,^D30		;YES, INITIATE A CODE 30 INTERRUPT
	MOVE 5,TTPSI(2)
	TDNE 5,BITS(3)		;IF ITS ASSIGNED
	JRST TTPSI1
	RET			;OTHERWISE IGNORE

;HANGUP-REACTIVATE SEQUENCE

TTHU0:	MOVEI 1,TTHU0		;MAYBE SAME ROUTINE AGAIN
	SKIPGE TTFLGS(2)	;OUTPUT NOT ACTIVE?
	JRST TTQAD1		;NO, RE-QUEUE THIS ROUTINE FOR 1 SEC.
	MOVSI 3,DLSDLB(2)	;CONSTRUCT DATAO WORD
	HRRI 3,1B27		;DIRECTED LINE+NO XMIT BITS
	DATAO DLS,3
	MOVE 1,[XWD ^D100,TTHU1] ;QUEUE NEXT OP TO GO IN 100 MS.
	JRST TTQAD

TTHU1:	MOVSI 3,DLSDLB(2)	;CONSTRUCT DATAO WORD TO REACTIVATE
	HRRI 3,DLSACT+1B27	;DIRECTED LINE+ACTIVATE+NO XMIT
	DATAO DLS,3
	RET

;RECEIVED CHARACTER ON UNASSIGNED LINE

TTC7N:	ANDI 1,177
	CAIE 1,003		;CONTROL-C?
	JRST TTCH7F		;NO, SEND BELL
TTC7SJ:	SKIPE ENTFLG		;SYSTEM PERMITTING ENTRIES
	TLNN 3,1		;REALLY UNASSIGNED?
	JRST TTCH7		;NO, IGNORE
	MOVSI 1,-2		;YES, SET TO JOB STARTING STATE
	HLLM 1,TTFORK(2)
	MOVEI 1,JOBSRT		;REQUEST SCHEDULER- START JOB
	HRLI 1,0(2)		;ON SPECIFIED TTY LINE
	CALL SCDRQ7
	JRST TTCH7

	EXTERN TTPSRQ

TTPSI1:	CALL TTPSRQ		;REQUEST INTERRUPT FROM PSI SYSTEM
	AOS TTINTS		;COUNT INTERRUPTS
	JRST TTCH7

;ROUTINE TO PUT CHAR IN ECHO BUFFER - CALLED FROM TCO

TCEOUT:	SKIPE 3,TTLINK(2)	;LINKS FOR THIS LINE?
	CALL TTLNK3		;YES, DO THEM
TCOUTZ:	LDB 3,TTOMAX		;OUTPUT BUFFER CAPACITY
	ADDI 3,2		;PLUS RESERVE FOR ECHO
	CAMLE 3,TTOCT(2)	;OUTPUT BUFFER FULL?
	JRST TCEO3		;NO, GO PUT IN OUTPUT BUFFER

TCEO2:	MOVE 3,TTECT(2)		;BUFFER FULL?
	CAIL 3,<TTSIZ-1>*4
	RET			;YES - IGNORE CHARACTER
	NOSKD1
	CHNOFF DLSCHN
	SKIPN 3,TTEIN(2)	;BUFFERS EXIST?
	JRST [	MOVEI 3,1	;NO, ASSIGN 1
		CALL TTGTBF
		MOVEM 3,TTEOUT(2)
		JRST .+1]
	TDNN 3,WRPMSK
	HRR 3,1-TTSIZ(3)
	IDPB 1,3
	MOVEM 3,TTEIN(2)
	AOS TTECT(2)
	CHNON DLSCHN
	OKSKD1
	JRST TCEO1

;TYPE (SHORT) MESSAGE VIA ECHO BUFFER

TTEMES:	PUSH P,1		;GIVEN BYTE POINTER TO STRING IN 1
TTEM1:	ILDB 1,0(P)		;LINE NUMBER IN 2
	JUMPE 1,[POP P,1	;NULL TERMINATES
		RET]
	CALL TCEO2		;OUTPUT VIA ECHO BUFFER
	JRST TTEM1

;DLS CHANNEL INTERRUPT SERVICE
;CALLED WITH JSYS FROM CHANNEL SEQUENCE

	INTERN DLSSV

DLSSV:	XWD XDLSSV,.+1
	SKIPL TTNIT1
	JRST TTNITS
	CONSZ DLS,330		;PI REQ, CAR XITION, XMIT, RECV
	JRST DLSSV2
	CONI TTY,1		;CONSOLE TTY
	TRNE 1,7		;PI ASSIGNED?
	TRNN 1,50		;AND SERVICE NEEDED?
	JRST @XDLSSV		;NO
	JRST TTYSV

;SERVICE DLS

DLSSV2:	DATAI DLS,1
   IFE BBNDLS,<
	TRNE 1,DLSRCF>		;IF NOT RECEIVER FLAG, OR
	TRNE 1,DLSXMF		;IF TRANSMITTER FLAG,
	DATAO DLS,[400+DLSACT]	;RELEASE SCANNER
	HLRZ 2,1		;LINE NUMBER
	CAML 2,LOLIN		;WITHIN PROPER RANGE OF LINES?
	CAML 2,HILIN
	JRST DLSSV3		;UNDEFINED LINE
TTYSV1:	TRNN 1,DLSRCF+DLSCXF	;RECEIVER OR XITION
	JRST DLSSV1
	AOS 3,TTBIGI		;PUT WORD IN BIG BUFFER
	CAIN 3,TTBSIZ
	SETZB 3,TTBIGI		;WRAPAROUND
	MOVEM 1,TTBBUF(3)
	AOS TTBIGC		;COUNT CONTENTS
DLSSV1:   IFE BBNDLS,<
	TRNE 1,DLSRCF>		;IF NOT RECEIVER FLAG, OR
	TRNE 1,DLSXMF		;TRANSMITTER
	JSP 4,TTSND
	TRNE 1,DLSRCF		;RECEIVER
	JFCL 0			;NO SPECIAL ACTION
DLSSV3:	UNBRK DLS

;INITIATED INTERRUPT TO START OUTPUT ON LINE

TTNITS:	MOVEI 1,0
	MOVE 2,TTNIT1		;LINE NUMBER
	SETOM TTNIT1
	JSP 4,TTSND		;DO OUTPUT
	JRST DLSSV3

;CONSTANTS

WRPMSK:	XWD 770000,TTSIZ-1	;MASK FOR WRAPAROUND OF CHAR POINTER

;SERVICE INTERRUPT FROM CONSOLE TTY
;CONSTRUCT WORD LIKE SCANNER DATAI

TTYSV:	MOVEI 1,0
	CONSO TTY,40		;INPUT DONE
	JRST .+3
	DATAI TTY,1
	TRO 1,DLSRCF		;SCANNER RECEIVER BIT
	CONSO TTY,10		;OUTPUT DONE
	JRST .+3
	TRO 1,DLSXMF		;SCANNER TRANSMITTER
	CONO TTY,200+DLSCHN	;TURN OFF OUTPUT DONE
	HRLI 1,CTYLIN		;PSEUDO-LINE NUMBER
	MOVEI 2,CTYLIN
	JRST TTYSV1

DLSVSP:	IOWD NDLSPD,DLSPDL	;INTERRUPT LEVEL STACK POINTER

;SEND CHARACTER TO TTY LINE,
;FROM ECHO BUFFER IF NOT EMPTY, OTHERWISE
;FROM OUTPUT BUFFER IF NOT EMPTY; OTHERWISE
;CLEAR OUTPUT-ACTIVE FLAG

TTSND:	CAMN 2,TTHNGL		;LINE BEING CHECK FOR OUTPUT INTERRUPTS?
	SETZM TTHNGT		;YES, MAKE CHECK OK
	SKIPE TTECT(2)		;CHECK ECHO BUFFER
	JRST TTSNDE
	SKIPE TTOCT(2)		;CHECK OUTPUT BUFFER
	JRST TTSNDO
	MOVSI 3,400000
	ANDCAM 3,TTFLGS(2)	;CLEAR OUTPUT-ACTIVE
	MOVEM P,DLSVAP		;SETUP STACK
	MOVE P,DLSVSP
	CALL TTRLOB		;RELEASE OUTPUT BUFFERS, SINCE EMPTY
	MOVE P,DLSVAP
	JRST TTSND1

TTSNDE:	SKIPN 3,TTEOUT(2)	;GET POINTER
	BUG(HLT,<TTY ECHO OUTPUT - NO BUFFER BUT COUNT NON-0>)
	TDNN 3,WRPMSK
	HRR 3,1-TTSIZ(3)
	MOVEM 3,TTEOUT(2)	;WRAP POINTER
	ILDB 3,TTEOUT(2)
	SOS TTECT(2)
	JRST TTSND2

TTSNDO:	SKIPN 3,TTOOUT(2)	;GET BUFFER POINTER
	BUG(HLT,<TTY OUTPUT - NO BUFFER BUT COUNT NON-0>)
	TDNN 3,WRPMSK
	HRR 3,1-TTSIZ(3)
	MOVEM 3,TTOOUT(2)	;WRAP POINTER
	ILDB 3,TTOOUT(2)
	SOS TTOCT(2)
TTSND2:	ANDI 3,377
	CAIE 2,CTYLIN		;IS CONSOLE TTY?
	JRST TTSND5		;NO
	DATAO TTY,3		;YES
	JRST TTSND4

TTSND5:	HRLI 3,DLSDLB(2)	;DIRECTED LINE BIT
	IORI 3,DLSACT		;ACTIVATE BIT
	DATAO DLS,3
TTSND4:	MOVSI 3,400000
	IORM 3,TTFLGS(2)	;SET OUTPUT-ACTIVE
TTSND1:	JRST 0(4)

	SWAPCD
                                                                                                                