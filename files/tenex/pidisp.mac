;2 DEC 71, 1659:

;PI DISPATCH MODULE - D. MURPHY
;SYSTEM INITIALIZATION

;CELLS NOT CHANGED DURING DISK RELOAD OF RES MON

	EXTERN RLRMON,DIDSCI,DIDSCA
	INTERN SYSGO1,MSTKOV,SYSGO,SYSLOD

CRSTD1=27		;CRASH TIME AND DATE SAVED WHILE RELOADING
BUGHAD=26		;BUGHLT AND CHK ADDRESSES SAVED WHILE RELOADING
DBUGS1=25		;DBUGSW SAVED WHILE RELOADING

;MANUAL START TRANSFER VECTOR

	LOC 140
	JRST SYSRST		;RESTART
	0
	0
	0
	0
	0
	JRST SYSGO		;146/ RELOAD AND START
	JRST SYSGO1		;147/ START
	RELOC

;DEFINE APPROPRIATE SYMBOLS FOR EXISTENT DEVICES

IFDEF DSKCHN,<	INTERN DSKCHN,DSKCHR
	EXTERN DSKINI,DSKRST,DSKSV>
IFDEF DRMCHN,<	INTERN DRMCHN,DRMCHR
	EXTERN DRMINI,DRMRST,DRMSV>
IFDEF MTACHN,<	INTERN MTACHN,MTDCHN,MTACHR
	EXTERN MTASV,MTARST>
IFDEF LPTCHN,<	INTERN LPTCHN,LPTCHR
	EXTERN LPTSV,LPTRST>
IFDEF DSPCHN,<	INTERN DSPCHN,DSPCHR,DSPBIT
	EXTERN DSPSV,NRUNG,DSPCNT,DSPRSK,DSPRST>
IFDEF DTACHN,<	INTERN DTACHN,DTDCHN,DTACHR
	EXTERN DTASV,DTARST>
IFDEF PTRCHN,<	INTERN PTRCHN,PTRCHR
	EXTERN PTRSV,PTRRST>
IFDEF PTPCHN,<	INTERN PTPCHN,PTPCHR
	EXTERN PTPSV,PTPRST>
IFDEF PLTCHN,<	INTERN PLTCHN,PLTCHR
	EXTERN PLTSV,PLTRST>
IFDEF DLSCHN,<	INTERN DLSCHN,DLSCHR
	EXTERN TTINIT,TTRSET,CTYLIN,DLSSV>
IFDEF IMPCHN,<	INTERN IMPCHN,IMPCHR
	EXTERN IMPSV,IMPRST>

GS DBUGSW,1	;0=UNATTENDED, 1=ATTENDED, 2=DEBUGGING
GS GETSMF,1	;MONITOR SAVED ON DSK IF NON-0
GS CRSTAD,1	;TIME AND DATE SAVED ON LAST AUTO-RESTART

;RELOAD SYSTEM FROM DISK AND RESTART

SYSGO:	PIOFF 610000		;RESET PI
	CONO APR,200000		;RESET IO
	MOVE 1,BUGHLT		;SAVE POSSIBLY INTERESTING CELLS
	HRL 1,BUGCHK
	MOVEM 1,BUGHAD
	MOVE 1,DBUGSW
	MOVEM 1,DBUGS1
	SKIPLE DISKP		;IF NO DISK
	SKIPG GETSMF		;OR NO SAVED MONITOR
	JRST .+2		;DON'T TRY TO RELOAD
	JSP 7,RLRMON		;RELOAD MON FROM DISK, THEN START
	MOVE 1,BUGHAD		;RESTORE CELLS
	HRRZM 1,BUGHLT
	HLRZM 1,BUGCHK
	MOVE 1,CRSTD1
	MOVEM 1,CRSTAD
	MOVE 1,DBUGS1
	MOVEM 1,DBUGSW

;START FROM SCRATCH AFTER DECTAPE LOADING

SYSGO1:	SKIPA 7,DIDSCI
SYSLOD:	SETZ 7,			;CLEAR DIDSCA TO RELOAD DISK
	MOVE P,PI7P
	CONO APR,200000		;RESET IO DEVICES
	CONO PI,610000		;RESET PI
	MOVE 1,[XWD 5000,5000+1]
	SETZM -1(1)
	BLT 1,SCDVE
	MOVEM 7,DIDSCA
	AOS INSKED
	MOVE 1,[JRST BUGH0]	;SETUP JSR DISPATCHES
	MOVEM 1,BUGHLT+1
	MOVE 1,[JRST BUGC0]
	MOVEM 1,BUGCHK+1
	MOVE 1,MONCOR
	CAME 1,SWPCOR		;DDT BEING FLUSHED?
	JRST .+3		;NO
	SETZM DBUGSW		;YES, MUST BE NOT BREAKPOINTS
	SETZM 100		;AND NO MANUAL DDT START
	CALL PGRINI		;INIT DST, CST, ETC.
	IFDEF DRMCHN,<CALL DRMINI>		;DRUM
	IFDEF DSKCHN,<CALL DSKINI>		;DISK
	IFDEF DLSCHN,<CALL TTINIT>		;TELETYPE MODULE
	CALL SCDIN		;SCHEDULER
	CALL PIINIT		;PI MODULE - LAST INIT
	MOVE 1,[XWD CTYLIN,JOBSRT]
	CALL SCDRQ7		;INITIATE FIRST JOB
	JRST SCHED0		;TO SCHEDULER

;RESTART SYSTEM

	DEFINE DEVRST (A)
<	IFDEF A'CHN,<CALL A'RST>>

SYSRST:	MOVE P,PI7P
	CONO APR,200000
	CONO PI,410000
	SETZM PWRDWN
	CALL PGRRST
	IFDEF DLSCHN,<CALL TTRSET>
	DEVRST DRM
	DEVRST DSK
	DEVRST MTA
	DEVRST LPT
	DEVRST DSP
	DEVRST DTA
	DEVRST PTR
	DEVRST PTP
	DEVRST PLT
	DEVRST IMP
	PUSH P,INSKED
	MOVEI 1,1
	MOVEM 1,INSKED
	SETZM SKEDF1
	SETZM SYNCC
	CALL PIINIT
	CALL SWPRST		;SWAPPER CLEANUP
	POP P,1
	JUMPN 1,SCHED0		;RESUME SCHED IF THERE AT CRASH
	SETZM INSKED
	SETOM TRAPC
	MOVSI 1,UMODF		;CRASH PROCESS RUNNING AT CRASH
	MOVEM 1,FPC
	JRST ITRAP

;IMPOSSIBLE SITUATION HALT

	EXTERN BUGTYO,BUGMSG,EXBUGH,TADDAY

LS BUGHLT,2

BUGH0:	SOS BUGHLT
	SKIPE DBUGSW		;DEBUG MODE?
	JRST 4,@BUGHLT		;YES
	AOS JB0FLG		;GET IT REPORTED SOON
	SKIPN INSKED		;IN SCHEDULER?
	CONSZ PI,177B27		;OR IN PI?
	JRST .+2
	JRST EXBUGH		;NO, CRASH THIS JOB
	PIOFF			;TURN OFF SYSTEM
	MOVEI 1,[SIXBIT '$BUGHLT AT /']
	JSR BUGMSG		;TYPE CRASH MESSAGE
	HRLZ 2,BUGHLT
	MOVEI 3,6		;TYPE 6 DIGITS
BUGH1:	SETZ 1,
	LSHC 1,3
	ADDI 1,"0"
	JSR BUGTYO
	SOJG 3,BUGH1
	MOVEI 1,[SIXBIT '$/']
	JSR BUGMSG
	SETZM CRSTD1
	SKIPGE TADSEC		;TIME AND DATE NOW SET?
	JRST BUGH2		;NO
	MOVE 1,TODCLK		;YES, REMEMBER IT FOR RESTART
	IDIVI 1,^D1000
	ADDI 1,^D10		;ADD 10 SECS FOR WHEN CLOCK IS OFF
	ADD 1,TADSEC		;CONVERT TODCLK AND OFFSET TO
	IDIVI 1,^D24*^D3600	;INTERNAL FORM TIME AND DATE
	ADD 1,TADDAY		;SEE GTAD
	HRLI 2,0(1)
	MOVEM 2,CRSTD1		;CRASH TIME AND DATE
BUGH2:	JRST SYSGO

;LESS SERIOUS HALT

LS BUGCHK,2

BUGC0:	SKIPE DBUGSW		;DEBUG MODE?
	JFCL			;YES, BREAKPOINT HERE
	AOS JB0FLG		;GET IT REPORTED
	JRST @BUGCHK		;CONTINUE

;PI SYSTEM INITIALIZATION

PIINIT:	MOVSI 1,<JSYS>B53	;SETUP JSYS DISPATCHES IN LOWER CORE
	MOVSI 3,-NPISET
PII1:	HRR 1,PISETT(3)		;DISPATCH ADDRESS WITH JSYS
	HLRZ 2,PISETT(3)	;LOC OF WHERE IT GOES
	MOVEM 1,0(2)
	AOBJN 3,PII1
	CONO APR,473550+APRCHN	;SET APR FLAGS
	CONO PI,642200+177	;CLEAR FLAGS, SET CHANNELS ON
	RET

;IMAGE OF LOW CORE PI LOCS

	DEFINE PILC (C,A)
<	XWD 40+2*C,A>

PISETT:	XWD 41,UUOH		;UUO'S AND ILLEG. INSTR'S
	PILC APRCHN,PIAPR	;APR CHANNEL
	PILC 4,PISC4		;GENERAL CHANNELS
	PILC 5,PISC5
	PILC 6,PISC6
	PILC 7,PISC7
	XWD 61,UU60		;UNIMPLEMENTED INSTR'S
	XWD 70,PGRTRP		;PAGER TRAP
NPISET==.-PISETT

LS PIAPRX,1
LS PI1AC1,1

LS PISC5R,1
LS PI5AC,5

;CHANNEL DISPATCH ROUTINES

PIAPR:	XWD PIAPRX,.+1
	CONSO OAP,1B28		;1MS. CLOCK?
	JRST PIAPR1		;NO
	CONO OAP,1B28		;YES, CLEAR THE FLAG
	AOS TODCLK		;COUNT DAYTIME
	SOSG SYNCC		;TIME TO SYNC?
	CONO OAP,1B29		;YES, TURN OFF CLOCK
IFDEF DSPCHN,<		;IF DISPLAY ON SYSTEM,
	SKIPE NRUNG		;CHECK FOR END OF FRAME RESCHEDULE
	SOSLE DSPCNT
	JEN @PIAPRX
	SKIPN DSPCNT
	SETOM DSPRSK
	ISB DSPCHN>
	JEN @PIAPRX

PIAPR1:	CONSZ APR,1B26		;60 CY CLOCK
	JRST APCLK1
	MOVEM 1,PI1AC1
	CONSZ APR,1B21		;ADR BRK?
	JRST ADRBK
	CONSZ APR,1B19		;PDL OVF
	JRST P1POV
	CONSZ PI,1B18		;PWR FAIL?
	JRST ACFAIL		;YES
	SKIPN DEVMPE		;DEVICE DETECTED MPE?
	CONSZ PI,1B19		;PARITY ERROR?
	JRST MEMPAR		;YES
	CONSZ APR,1B23+1B22	;NXM, MEM PROT
	JRST P1NXM
	CONI APR,1		;OV OR FOV
	TRC 1,3B29+3B32
	TRNN 1,3B29		;FOV AND FOV ENABLED
	JRST P1FOV
	TRNN 1,3B32		;OV AND OV ENABLED
	JRST P1OV
	JRST OV0		;NOTHING, DEBREAK

;ADDRESS BREAK, ASSUMED TO BE USED FOR WRITE ONLY

ADRBK:	CONO APR,1B21+APRCHN	;CLEAR FLAG
	MOVE 1,ADRBKW		;CHECK TO SEE IF PROTECTED WORD NOW
	CAMN 1,@ADRBKA		;WRONG.  ANY OTHER APPROPRIATE
	JRST OV0		;CHECK ROUTINE CAN BE PATCHED IN HERE
	JRST OV0

LS ADRBKW,1			;PROPER CONTENTS OF CHECKED WORD
LS ADRBKA,1			;ADDRESS OF CHECKED WORD

;OVERFLOWS

P1FOV:	TRNN 1,3B32		;OV ENABLED TOO?
	SKIPA 1,[1B0+1B3]	;YES, CLEAR OV AND FOV FLAGS
	MOVSI 1,(1B3)		;NO, CLEAR FOV ONLY
	ANDCAM 1,PIAPRX		;CLEAR FLAG CAUSING INTERRUPT
	MOVEI 1,P7FOV
	JRST FOV1

P1OV:	MOVSI 1,(1B0)
	ANDCAM 1,PIAPRX		;CLEAR FLAG
	MOVEI 1,P7OV
FOV1:	SKIPN INSKED		;IGNORE IF: IN SCHED, OR
	CONSZ PI,177B27-1B<APRCHN+20> ;IN PI SERVICE
	JRST OV0
	JFCL 17,.+1		;CLEAR FLAGS
	HLL 1,PIAPRX
	TLNN 1,UMODF		;IF IN USER MODE, OR
	SKIPE OVFLG		;IN MONITOR WITH FLAG SET,
	JRST OV1
	HRL 1,PIAPRX
	TLC 1,PGRTRP+1
	TLNE 1,-1		;CAME FROM FIRST INSTRUCTIONOF PGR TRP?
	JRST OV0		;NO
	HLL 1,TRAPPC		;YES, SO REAL PC IS THERE
	TLNE 1,UMODF		;IS THAT USER?
	JRST OV1		;YES, REQUEST INTERRUPT
	JRST OV0

P1NXM:	CONSZ APR,1B22		;MEM PROT?
	JRST P1PRT		;YES
	BUG(CHK,<NXM DETECTED BY PROCESSOR>)
	CONO APR,1B23+APRCHN	;THEN CLEAR FLAGS
	MOVE 1,PIAPRX
	TLNN 1,UMODF		;USER PC?
	BUG(HLT,<FATAL XNM>)
	MOVEI 1,MPEINT		;GIVE USER MPE INTERRUPT
	JRST OV1

P1PRT:	BUG(CHK,<MEM PROT VIOL REPORTED BY PROCESSOR>)
	DATAO APR,[XWD 776776,0] ;RESET IT IN CASE WAS CLEARED RANDOMLY
	CONO APR,1B22+APRCHN	;CLEAR FLAG
	JRST OV0		;AND PROCEED

P1POV:	CONO APR,1B18+APRCHN	;CLEAR FLAG
	MOVE 1,PIAPRX
	TLNN 1,UMODF		;FROM MONITOR?
	JRST P1SOV
P1UPOV:	MOVEI 1,P7POV
OV1:	HRL 1,FORKX
	JSR SCDRQ		;REQUEST SCHEDULER ACTION
	RESKED
OV0:	MOVE 1,PI1AC1
	JEN @PIAPRX

P1SOV:	MOVEI 1,0(1)
	CAIE 1,PGRTRP+1		;FROM PAGER TRAP STARTING?
	JRST P1MSOV		;NO, REAL MSOV
	MOVE 1,TRAPPC		;MEM TRAP AS WELL AS SOV, GET PC
	TLNE 1,UMODF		;THIS ONE USER?
	JRST P1UPOV		;YES
P1MSOV:	MOVE 1,PI1AC1
	JEN @[MSTKOV]

MSTKOV:	CONSO PI,177B27		;BAD ONE?
	SKIPE INSKED
	BUG(HLT,<PDL OVERFLOW IN SCHEDULER OR WHILE PI IN PROGRESS>)
	BUG(CHK,<PDL OVERFLOW IN MONITOR>)
	SETOM TRAPC		;NOT SO BAD
	MOVE P,UPP		;GET A REASONABLE STACK
	ADD P,BHC+2
	JRST ITRAP

;AC FAIL

ACFAIL:	CONO PI,1B18		;CLEAR FLAG
	AOS PWRDWN		;SET FLAG TO NOTIFY SCHED
	RESKED			;NOW
	JRST OV0

;MEMORY PARITY ERROR DETECTED

MEMPAR:	PIOFF
	SETZB 1,6		;TO COUNT BAD AND FATAL WORDS
	MOVEM 7,MEMPA+7		;SAVE SOME AC'S
	MOVEI 7,MEMPA
	BLT 7,MEMPA+6
	CONO PI,1B19+1B20	;CLEAR PAR FLAG AND DISABLE INTERRUPT
	CONO PGR,4		;TURN OFF PAGER
	MOVEI 1,[SIXBIT '$DEVICE DETECTED/']
	SKIPE DEVMPE		;REQUEST FROM DEVICE?
	JSR BUGMSG		;YES, SAY SO
	MOVEI 1,[SIXBIT '$MPE, PC=/']
	JSR BUGMSG
	HRRZ 1,PIAPRX
	JSR BUGOPT
	MOVEI 1,[SIXBIT ', MONITOR/']
	MOVSI 2,UMODF
	TDNE 2,PIAPRX
	MOVEI 1,[SIXBIT ', USER/']
	JSR BUGMSG
	MOVEI 1,[SIXBIT '$ LOC    CONTENTS$/']
	JSR BUGMSG
	MOVEI 2,20		;START AT LOC 20
MEMP2:	MOVE 0(2)		;REFERENCE THE LOCATION
	CONSZ APR,1B23		;NXM?
	JRST [	ADDI 2,1000-1	;YES, INCREMENT TO NEXT PAGE
		CONO APR,1B23+APRCHN ;CLEAR NXM FLAG
		JRST MEMP4]
	CONSZ PI,1B19		;MPE IN THIS LOCATION?
	JRST MEMP1		;YES, GO REPORT IT
MEMP4:	CAIGE 2,777777		;DONE ALL OF CORE?
	AOJA 2,MEMP2		;NO, DO NEXT LOCATION
	MOVEI 1,[SIXBIT '$/']
	SKIPN MEMPA+1		;IF NO DETECTED ERRORS,
	MOVEI 1,[SIXBIT '$NONE FOUND$/'] ;SAY SO
	JSR BUGMSG		;TYPE EOL
	CONO PI,1B21		;RE-ENABLE MPE INTERRUPT
	CONO PGR,6		;TURN PAGER BACK ON
	MOVSI 7,MEMPA		;RESTORE AC'S
	BLT 7,7
	PION
	BUG(CHK,<MEMORY PARITY ERROR DETECTED BY APR OR DEVICE>)
	JUMPN 6,MEMP8		;CRASH IF FATAL ONES FOUND
	SKIPE DEVMPE		;DEVICE DETECTED?
	JRST MEMP7		;YES, PROCEED
	MOVE 1,PIAPRX		;NO, APR
	TLNN 1,UMODF		;WAS IN MONITOR MODE?
MEMP8:	BUG(HLT,<FATAL PARITY ERROR>)
	MOVEI 1,MPEINT		;GIVE INTERRUPT TO USER
	HRL 1,FORKX
	JSR SCDRQ
	RESKED
MEMP7:	SETZM DEVMPE
	MOVE 1,TODCLK		;HERE TO PROCEED, UNLESS...
	EXCH 1,PARTIM		;SET TIME OF THIS MPE, GET TIME OF LAST
	SKIPE DBUGSW		;SYSTEM ATTENDED?
	JRST OV0		;YES, SKIP TIME CHECK
	ADD 1,[^D300000]	;WAS LAST ERROR WITHIN 5 MINUTES?
	CAML 1,TODCLK
	JRST MEMP8		;YES, FATAL
	JRST OV0		;NO, CONTINUE RUNNING

;FOUND MEM PAR ERR ON DIRECT REFERENCE

MEMP1:	MOVEM 0(2)		;REWRITE WORD TO ELIMINATE MPE
	AOS 1,MEMPA+1		;COUNT ERRORS
	CONO PI,1B19		;CLEAR FLAG
	CAIL 1,20		;REPORTED A LOT ALREADY?
	JRST MEMP4		;YES, QUIT REPORTING THEM
	MOVEI 1," "
	JSR BUGTYO
	MOVEI 1,0(2)
	JSR BUGOPT		;TYPE ADDRESS
	MOVEI 1," "
	JSR BUGTYO
	HLRZ 1,0(2)
	JSR BUGOPT		;TYPE LH OF BAD WORD
	MOVEI 1,","
	JSR BUGTYO
	HRRZ 1,0(2)
	JSR BUGOPT		;TYPE RH OF BAD WORD
	MOVEI 1,[SIXBIT '$/']	;TYPE EOL
	JSR BUGMSG
	MOVEI 1,0(2)		;TRY TO DECIDE IF ERROR IS IN SENSITIVE
	LSH 1,-^D9		;PAGE. IF SO, BUMP FATAL COUNT
	CAMGE 1,SWPCOR		;RESIDENT MON?
	JRST MEMP5		;YES, TOO BAD
	MOVSI 3,SWPERR		;MARK ERROR IN PAGE
	IORM 3,CST3(1)
	MOVE 3,CST2(1)		;OWNER
	TLNE 3,-1		;SPT?
	JRST MEMP6		;NO
	CAIGE 3,NOFN		;YES, INDEX BLOCK
	JRST MEMP5		;DANGEROUS TO HAVE BAD XB'S AROUND
	MOVE 3,SPTH(3)		;GET OWNER
	JUMPE 3,MEMP5		;DANGEROUS TO HAVE BAD PT'S OR PSB'S
MEMP6:	HLRZ 3,3		;OWNING PT
	CAMN 3,MMSPTN		;MON MAP?
MEMP5:	AOJ 6,			;COUNT FATAL ERRORS
	JRST MEMP4		;CONTINUE CORE SCAN

LS MEMPA,10		;STORAGE FOR AC'S

GS DEVMPE,1		;AOS'D TO REQUEST CORE SCAN
LS PARTIM,1		;TIME OF LAST PAR ERR

;NON-PI 6-DIGIT NUMBER TYPEOUT ON CONSOLE TTY

BUGOP1:	0
BUGOPT:	0
	MOVEM 1,BUGOP1
	MOVE 0,[POINT 3,BUGOP1,17]
BUGOP2:	ILDB 1,0
	ADDI 1,"0"
	JSR BUGTYO
	TLNE 0,770000
	JRST BUGOP2
	JRST @BUGOPT

IFDEF DTACHN,<INTERN DTABIT	;BIT FOR DTA CHANNEL IN CONO PI,
	DTABIT==1B<DTACHN+28>
>

PISC4:	XWD PI4R,.+1
	MOVEM 4,PI4AC+4
	MOVEI 4,PI4AC
	BLT 4,PI4AC+3
	IFDEF DRMCHN,<JSYS DRMSV>
	IFDEF DTACHN,<JSYS DTASV>
	IFDEF DSKCHN,<JSYS DSKSV>
	IFDEF MTACHN,<JSYS MTASV>

MTACHR:
DTACHR:			;DEVICE RETURNS
DRMCHR:
DSKCHR:	MOVSI 4,PI4AC
	BLT 4,4
	JEN @PI4R

LS PI4AC,5
LS PI4R,1

PISC5:	XWD PISC5R,.+1
	MOVEM 4,PI5AC+4		;SAVE AC'S 0-4
	MOVEI 4,PI5AC
	BLT 4,PI5AC+3
	IFDEF DLSCHN,<JSYS DLSSV>
	IFDEF PTRCHN,<JSYS PTRSV>
	IFDEF IMPCHN,<JSYS IMPSV>
IMPCHR:
PTRCHR:
DLSCHR:	MOVSI 4,PI5AC		;RETURN FROM DEVICE ROUTINES HERE
	BLT 4,4			;RESTORE AC'S 0-4
	JRST 12,@PISC5R

PISC6:	XWD PI6R,.+1
	MOVEM 4,PI6AC+4
	MOVEI 4,PI6AC
	BLT 4,PI6AC+3
	IFDEF DSPCHN,<JSYS DSPSV>
	IFDEF LPTCHN,<JSYS LPTSV>
	IFDEF PTPCHN,<JSYS PTPSV>
	IFDEF PLTCHN,<JSYS PLTSV>
PLTCHR:
PTPCHR:
DSPCHR:
LPTCHR:	MOVSI 4,PI6AC
	BLT 4,4
	JRST 12,@PI6R

LS PI6R,1
LS PI6AC,5

	INTERN MENTR,MRETN,MONUUO,UJSYS,MRETNE
	EXTERN GETPAT

UU60:	XWD FPC,ILUUO		;JSYS AT 61

IUUO:	MOVE 1,XMENTR		;RESTORE AC1
ILUUO:	ITERR ILINS1		;ILLEGAL UUO

;UUO DISPATCH

UUOH:	XWD FPC,.+1		;41 CONTAINS JSYS UUOH
	MOVEM 1,XMENTR		;SAVE AC1
	MOVE 1,FPC
	TLNE 1,UMODF		;USER CALL?
	JRST UUOHX		;YES
	MOVE 1,XMENTR
	BUG(CHK,<UUO FROM MONITOR>)
MONUUO:	JRST ILUUO

UUOHX:	HLRZ 1,40		;GET OP CODE
	LSH 1,-^D9
	CAIL 1,100		;OUT OF BOUNDS?
	JRST IUUO		;YES, ILLEGAL INSTRUCTION
	CAIL 1,40		;10/50 UUO?
	JRST UU1050		;YES
	JUMPE 1,IUUO		;0 IS ALWAYS ILLEG
	BUG(HLT,<01-37 UUO FROM USER MODE>)

REPEAT 0,<	;THIS WON'T BE USED UNLESS SOMEBODY WANTS
		;MON-MON OR USER-MON UUO'S INSTALLED
	SKIPL 1,UUOT(1)		;GET DISPATCH WORD, CHECK TYPE
	JRST UUOH2		;SLOW
	EXCH 1,XMENTR		;FAST, RESTORE AC1, SETUP DISPATCH ADR
	JRST @XMENTR		;COMMENCE ROUTINE
>

UU1050:	SKIPN PATADR		;GOT PAT NOW?
	JRST [	MOVE 1,XMENTR	;NO
		JRST GETPAT]	;GO GET IT
	MOVE 1,40		;MOVE STUFF FOR 10/50 COMPAT
	XCT PATU40		;CONTAINS UMOVEM 1,MONUUO
	MOVE 1,FPC
	XCT PATUPC		;CONTAINS UMOVEM 1,MONUPC
	MOVE 1,PATADR		;ENTRY VECTOR
	HRRM 1,FPC
	MOVE 1,XMENTR
	XCT MJRSTF

;ALL UNDEFINED JSYS'S

UJSYS:	ITERR ILINS2

;SLOW-CALL SETUP ROUTINE

MENTR:	XWD XMENTR,UUOH1	;SLOW JSYS'S BEGIN WITH  JSYS MENTR

UUOH2:	EXCH 1,XMENTR		;SLOW UUO'S ENTER HERE
UUOH1:	SETOM SLOWF
	EXCH 0,FPC		;GET RETURN PC
	TLNE 0,UMODF		;USER OR MONITOR MODE?
	JRST MENT1		;USER
	AOSGE INTDF		;INTDF ALLRIGHT?
	BUG(CHK,<AT MENTR - INTDF OVERLY DECREMENTED>)
	SOS INTDF
	PUSH P,INTDF
	PUSH P,MPP		;SAVE PREVIOUS ERRORSET
	PUSH P,0		;SAVE RETURN
	MOVEM P,MPP		;SAVE CURRENT STACK POINTER
	AOS P,ACBAS		;GET NEXT AC BASE ADR
	CAIL P,<EUACB>B39	;USED ALL BLOCKS OF AC'S?
	BUG(HLT,<MENTR - NO MORE AC BLOCKS>)
	SETACB P		;GIVE IT TO PAGER
MENT2:	MOVE 0,XMENTR		;LOCAL RETURN => FPC
	EXCH 0,FPC		;AC0 => 0
	SETZ P,
	XCTMU [BLT P,P-1]	;MOVE FROM REAL AC'S TO USER BLOCK
	MOVE P,MPP		;RESTORE P
	SETZM SLOWF
	XCT MJRSTF		;JRSTF @FPC  OR INTERRUPT

MENT1:	MOVEM P,XMENT1		;SAVE USER'S AC-P
	MOVE P,UPP		;GET STACK POINTER
	PUSH P,0		;TWO RETURNS
	PUSH P,0		;SO ONE CAN BE DIDDLED
	MOVEM P,MPP
	SETOM INTDF
	MOVE P,ACBAS1		;FIRST AC BASE TO USE
	MOVEM P,ACBAS
	SETACB P		;SET PAGER
	MOVE P,XMENT1		;RESOTRE USER'S AC-P
	UMOVEM P,P		;PUT USER'S AC-P WHERE IT BELONGS
	JRST MENT2

;SLOW-CALL RETURN

MRETNE:	MOVEM 1,LSTERR		;ERROR RETURN, SAVE ERROR CODE
	UMOVEM 1,1		;AND RETURN IT TO USER ALSO
MRETN:	SETOM SLOWF		;RESET FLAG
	AOSGE INTDF		;INTDF OK?
	BUG(CHK,<AT MRETN - INTDF OVERLY DECREMENTED>)
	MOVE P,MPP		;GET STACK POINTER AT LAST ENTRY
	POP P,0			;POP RETURN
	MOVEM 0,FPC		;SETUP RETURN
	TLNN 0,UMODF		;USER MODE?
	JRST MRETN1		;NO
	SETZ P,
	XCTUM [BLT P,P]		;RESTORE USER AC'S
	XCT MJRSTF		;RETURN OR INTERRUPT

MRETN1:	MOVEM P,MPP		;SAVE P
	SETZ P,
	XCTUM [BLT P,P-1]	;RESTORE AC'S
	SOS P,ACBAS		;RESET AC BASE TO LAST ONE
	CAIGE P,<UACB>B39	;BEFORE BEGINNING OF AC BLOCKS?
	BUG(HLT,<MRETN - TRIED TO OVER-POP AC BLOCKS>)
	SETACB P
	MOVE P,MPP
	POP P,MPP		;RESTORE PREVIOUS STACK POINTER
	POP P,INTDF		;RESTORE INTERRUPT DEFERRED STATE
	SETZM SLOWF
	XCT MJRSTF		;RETURN OR INTERRUPT

REPEAT 0,<	;NOT USED UNLESS MON-MON OR USER-MON UUO'S INSTALLED

;UUO DISPATCH TABLE

	DEFINE UUD (N,T)
<	EXTERN N
	XWD T*400000,N>

UUOT:	REPEAT 40,<XWD 400000,ILUUO>

	REPEAT 40,<XWD 0,GETPAT> ;LOADS 10/50 COMPATIBILITY
>

;LAST PAGE

	BGHERE MONBGP,MONBGS

	END
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    