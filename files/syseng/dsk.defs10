DC0==610	;MAIN DEVICE CODE
DC1==614	;READS ERR STATUS ETC, SETS TIMER DRIVER # ON CONO

;FIELDS IN HEADER WORD 0

DPKID==240700,,	;PACK ID FIELD
DCYL==131100,,	;CYLINDER CHECK FIELD
DSURF==60500,,	;SURFACE CHECK FIELD
DSECT==600,,	;SECTOR FIELD

;WORD 1 HEADER

DHIND==1000,,	;4.1 INDIRECT IF 1, CYL, SURF, SECTOR SAME AS ABOVE
DHSPRT==400,,	;BIT 3.9  SOFTWARE PROTECT
DHHPRT==200,,	;3.8 HARDWARE PROTECT
DHNXAD==270200,,	;3.7, 3.6 HOW TO COMPUTE NEXT DISK ADR
			;=00 ADD 1 TO SECTOR
			;01 SET SECTOR TO 0, ADD 1 TO SURF
			;10 SET SECTOR AND SURFACE TO 0, ADD 1 TO CYL
			;11 END OF DISK
DHEPB==10,,	;PARITY BIT FOR EVEN BITS OF 56 BIT HEADER
DHOPB==4,,	;PARITY BIT FOR ODD BITS OF 56 BIT HEADER
DHSLNG==1600,,	;-LENGTH OF SECTOR FIELD

;DISK ADDRESS DATA COMMANDS (OP CODES)

DRC==400000,,	;READ COMPARE
DWRITE==440000,,	;WRITE
DREAD==500000,,	;READ
DSEEK==540000,,	;SEEK
DRCC==600000,,	;READ COMPARE CONTINUOUS
DWRITC==640000,,	;WRITE CONTINUOUS
DREADC==700000,,	;READ CONTINUOUS

DUNENB==20000,,	;ENABLE LOAD UNIT FIELD
DUNFLD==330400,,	;UNIT FIELD
;PKID, CYL, SURF, AND SECTOR SAME AS ABOVE

;COPY / COMPARE / SKIP COMMAND

DCOPY==40000,,	;COPY
DCCOMP==100000,,	;COMPARE
DCSKIP==140000,,	;SKIP

DCWC==241400,,	;-WC FIELD
DCCA==2400,,	;CORE ADDRES

;JUMP COMMANDS
DHLT==0	;0 IN 4.9-4.5 = JUMP AND IN 3.5,3.6 = HALT
DXCT==20,,	;XCT
DJMP==40,,	;JUMP
DJSR==60,,	;JSR

;"B" COMMAND BITS 3.3, 3.4
;0 ALWAYS
DAOJNC==4,,	;AOJN THE CONTROL COUNTER
DDOK==10,,	;ON NO DATA ERROR
DSRQF==14,,	;IF SEEK RQ FLAG ON

;STORE REGISTER COMMAND
DSREG==240400,,	;STORE REG
;USE, UNIT BITS SAME
DSREGS==240300,,	;SORCE REGISTER SELECT FIELD
DSRDB==0	;STORE DATA BUFFER
DSRDL==4,,	;STORE DISK LOCATION
DSRCC==10,,	;STORE COMMAND COUNT
DSRPC==24,,	;STORE PC (IN FORM OF JMP INST.)
DSRWC==30,,	;STORE WORD COUNT
DSRCA==34,,	;STORE CORE ADDRESS (TO XFER DATA TO OR FROM)

;ALU COMMAND
DALU==300000,,	;BASIC ALU OP CODE
DALUX==40000,,	;INDEX BIT (ADD CC TO ADR)
DALUD==40,,	;DIRECT BIT IF 1, REF MEM OT GET B OP

DASL==4000,,	;SKIP ON <0
DASE==10000,,	;SKIP ON = 0
DASLE==14000,,	;SKIP ON < OR = 0
DASA==20000,,	;ALWAYS SKIP
DASGE==24000,,	;SKIP ON > OR = 0
DASN==30000,,	;SKIP ON NOT = 0
DASG==34000,,	;SKIP ON > 0

;DESTINATION SUB OP (ALSO SPECIFIES SOURCE A)
DLDB==0	;OP A FROM DB, STORE IN DB
DLDL==4,,	;OP FROM DL, STORE IN DL
DLCC==10,,	;OP FROM CC, STORE IN CC
DLCA==14,,	;OP A =0, STORE IN CA
DLTDB==20,,	;TEST DB (OP A FROM DB, NO STORE)
DLDBPC==24,,	;OP A FROM DB, STORE IN PC
DLDBWC==30,,	;OP A FROM DB, STORE IN WC
DLDBM==34,,	;OP A FROM DB, STORE IN MEM (DIRECT MUST BE ONE TO REALLY MAKE IT)

;SOME USEFUL (?) OPS
DLADD==100,,	;A+B
DLSOS==200,,	;B-1
DLLB==300,,	;B
DLSUB==400,,	;B-A

DLAND==2300,,	;A&B
DLIOR==2500,,	;A IOR B
DLLA==3100,,	;LOAD A
DLSETO==3200,,	;-1
DLSETZ==3300,,	;0

;OPR COMMAND
DOPR==200000,,	;BASIC OPR
DOHXFR==400,,	;HALT DURING XFER (SO MB WILL BE SAFE)
DOCSRQ==200,,	;CLEAR SEEK RQ
DOSSRQ==100,,	;SET SEEK RQ
DOSCFL==40,,	;SET C FLAG

;STORE DRIVE STATUS
DSDRST==240000,,	;STORE DRIVE STATUS
;UNIT ENABLE, UNIT FIELD SAME
DSDCNT==240400,,	;COUNT-1 FIELD

;BITS IN DRIVE STATUS STORED

DDSWC==40,,	;WRITE CURRENT SENSED
DDSUNS==20,,	;DRIVE UNSAFE
DDSRDO==10,,	;READ ONLY
DDSSIC==4,,	;SEEK INCOMPLETE
DDSRDY==2,,	;DRIVE READY
DDSONL==1,,	;DRIVE ON LINE
DDSSEL==400000	;DRIVE SELECTED
DDSCYL==101000,,	;PRESENT CYLINDER
DDSLAT==1000,,	;LATENCY TIMER

;DISK ADR "SPECIAL COMMAND"

DSPC==740000,,	;BASIC OP CODE
;USE, UNIT FIELDS AS NORMAL

; E CONDITION (WAIT)
;0 NONE
DSWIDX==20,,	;WAIT UNTIL INDEX PULSE
DSWSEC==40,,	;WAIT UNTIL SECTOR PULSE
DSWINF==60,,	;NEVER (USE WITH G=3 OR 7)

; F CONDITION (OTHER WAIT)
DSWHDM==0	;WAIT FOR MATCHING HEADER
DSWAGH==4,,	;ANY GOOD HEADER
DSWAH==10,,	;ANY HEADER
DSWNUL==14,,	;NO WAIT

;G OPERATION
DSCRDC==0	;READ DATA THRU DECODERS
DSCRIM==100,,	;READ DATA IMAGE
DSCRHD==200,,	;READ HEADER WORDS
DSRCAL==300,,	;(RECALIBRATE)
DSCWDC==400,,	;WRITE THRU DECODERS
DSCWIM==500,,	;WRITE IMAGE
DSMAIT==700,,	;MAINTENANCE  (PUT CYL FIELD ON BUS LINES WITH CONTROL TAG)

;BITS IN CONI DC0,
DASSGN==400000,,	;ASSIGNED TO PROC (WITH SWITCH)
DPIRQC==400000	;PI REQ BEING GENERATED
DSSRQ==200000	;SEEK REQUEST
DSDEEB==10000	;ENABLE INTERRUPT ON DATA ERROR OR READ/ COMP ERROR
DSSERR==4000	;ERROR FLAG
DSSAEB==2000	;ATTENTION ENABLE FLAG
DSSATT==1000	;ATTENTION FLAG
DSIENB==400	;IDLE FLAG ENABLE
DSSRUN==200	;RUN
DSSACT==100	;ACTIVE
DSSCEB==40	;CHANNEL ENABLE
DSSCHF==20	;CHANNEL FLAG
DSSCFL==10	;CPU FLAG
;PIA 1.3-1.1

;DATAO DC0, SENDS COMMAND TO DISK
;  (IGNORED IF EXECUTING COMMANDS FROM MEMORY)

;CONO DC0, 
DCSET==400000	;SET SELECTED
DCCLR==200000	;CLEAR SELECTED
DCCSET==600000	;RESET CONTROLLER THEN SET SELECTED
DCDENB==10000	;DATA ERROR ENABLE
DCERR==4000	;SET ERROR FLAG OR CLEAR ALL ERRORS
DCATEB==2000	;ATTENTION ENABLE
DCCATT==1000	;CLEAR ATTENTION
DCSSRQ==1000	;SET SEEK REQUEST
DCIENB==400	;IDLE ENABLE
DCSTAR==200	;START (SET)
DCSSTP==200	;STOP (CLEAR)
DCSGL==100	;DO SINGLE COMMAND
DCCENB==40	;CHANNEL ENABLE
DCCFLG==20	;CHANNEL FLAG
DCCPUF==10	;CPU FLAG
;1.1-1.3 PIA

;CONO DC1,

;SET TIMER DRIVE # FROM 1.1-1.3

;CONI DC1,
;LH
DSATDN==360400,,	;ATTENTION DRIVE #
DSTMDN==320400,,	;TIMER DRIVE #
DSLAT==221000,,	;LATENCY TIMER FOR DRIVE ABOVE

;RH (ERROR FLAGS)
DRLNER==2000	;RECORD LENGTH
DRCER==1000	;READ COMPARE ERROR
DOVRRN==400	;OVERRUN
DCKSER==200	;CKSUM OR DECODER ERR
DWTHER==100	;WATCHDOG TIMER
DFUNSF==40	;FILE UNSAFE, SEEK INCOMPLETE OR END OR DSK
DOFFL==20	;OFF LINE OR MULT SEL
DPROT==10	;WRT KEY OR RD ONLY OR PROTECT
DDOBSY==4	;DATAO WHEN BSY
DNXM==2	;NON-EX MEM
DCPERR==1	;CORE PARITY ERR

LRIBLK==16	;CONSISTENCY CHECK DSKDMP VS MARK
NOT OPENED!\]
	JSP T,NUMVAL
	.IOT IMXC,TT
	JRST FIX1
] 

IFE TS,[
NOVAL==128.

MPX:	JUMPE A,CMPX
	SKIPE MPXSTA
	POPJ P,
	SETOM MPXSTA
	PUSHJ P,DCSWP
	MOVE A,[-<NOVAL+2>/3,,RWORLD-1]
	MOVEM A,DCPTR
	CONO MPXX,26000
	CONO DC,4260+TPCHN"
	CONO KRC,777761
	CONO KRC,16
	CONO CRK,10+APRCHN
	DATAO KRC,[CSPEED]
	JRST MPXEX

CMPX:	SKIPN MPXSTA
	POPJ P,
	SETZM MPXSTA
	PUSHJ P,DCSWP
MPXEX:	MOVEI A,0
	POPJ P,

DCSWP:	CONO DC,0
	MOVE A,40+2*TPCHN
	EXCH A,TPWD1
	MOVEM A,40+2*TPCHN
	MOVE A,41+2*TPCHN
	EXCH A,TPWD2
	MOVEM A,41+2*TPCHN
	POPJ P,

TPWD1:	BLKI DC,DCPTR
TPWD2:	JSR MPXBRK
MPXSTA:	0

DCPTR:	0

MPXBRK:	0
	SKIPN MPXSTA
	LERR [SIXBIT \MPX LOSSAGE!\]
	MOVEM A,DCPTR
	MOVE A,[-<NOVAL+2>/3,,RWORLD-1]
	EXCH A,DCPTR
	CONO MPXX,26000
	CONO DC,4260+TPCHN
	JRST 12,@MPXBRK

IMPX:	JSP T,NUMVAL
	IDIVI TT,3
	LDB TT,IMPXT(TT+1)
	JRST FIX1

IMPXT:	REPEAT 3,<.RPCNT*12.>_12.+12._6,,RWORLD(A)

RWORLD:	BLOCK <NOVAL+2>/3

OMPX:	PUSH P,B
	JSP T,NUMVAL
	MOVE D,TT
	POP P,A
	JSP T,NUMVAL
	DPB TT,[221400,,DESTIN(D)]
	POPJ P,

DESTIN:	REPEAT 100,.RPCNT_12.+2000,,
]


IFN TS,[
PLOTLIST":	AOJE T,PLTL1
	AOJN T,PLTL2
	POP P,A		;THE CHAR PLOTTED TO REPRESENT A SINGLE SCOPE POINT 
	MOVEM P,PLTTBF	;MAY BE CHANGED BY GIVING PLOTLIST 
	HRROI R,.+2	;A SECOND ARGUMENT 
	JRST PRINTA
	MOVE P,PLTTBF
	MOVE TT,A
	LSH TT,9.
PLTL1:	POP P,PLTLST
	TDOA TT,[PLTLST,,767]
PLOT:	JSP T,NUMVAL
PLOTC":	SKIPN IPLOPD
	PUSHJ P,IPLOPN
	.IOT IPLC,TT
	JRST TRUE

PLOTTEXT":	PUSH P,A
	PUSHJ P,PLT2
	POP P,A
	HRROI R,PLT1
	PUSHJ P,PRINTA
	MOVE TT,PLTTBF
	JRST PLOTC

PLT1:	IDPB A,PLTTBP
	MOVE A,PLTTBP
	TLNE A,760000
	POPJ P,
	MOVE TT,PLTTBF
	PUSHJ P,PLOTC
PLT2:	MOVE A,[440700,,PLTTBF]
	MOVEM A,PLTTBP
	SETZM PLTTBF
	POPJ P,

NEXTPLOT":	MOVE TT,[034130,,77]	;PENUP AND NORMAL ORIENTATION
	PUSHJ P,PLOTC
	MOVE TT,[<1,,1>\<2300.,,0>_2]	;MOVE TO Y=0, X=2300.
	PUSHJ P,PLOTC
	MOVE TT,[<0,,1>\<0,,0>_2]	;DEFINE ORIGIN (0,0)
	PUSHJ P,PLOTC
	MOVE TT,[450000,,77]	;RESTORE ORIENTATION
	JRST PLOTC

PLTL2:	LERR [SIXBIT \WRONG NUMBER OF ARGS - PLOTLIST!\]
]

IFE TS,[
CN.U:
IPLOPN:	LERR [SIXBIT \PLOTTER NOT AVAILABLE!\]
PLTON:	0
]


IFE TS,[
VIDI:	JSP T,SPECBIND
	VDISLIST
	CONO VID,10
	CONSZ DIS,77
	JRST .-1
	CONO DIS,100
	DPB B,[001200,,VIDI1]
	DATAO DIS,VIDI1
	DPB A,[221200,,VIDI2]
	CONSO DIS,200
	JRST .-1
	DATAO DIS,VIDI2
	MOVEI A,1000
	CONSO DIS,200
	JRST .-1
	CONSO VID,10
	SOJG A,.-1
	DATAI VID,A
	CAIGE A,2
	ADDI A,400
	AOJA A,UNBIND

VIDI1:	20135,,220000
VIDI2:	2000,,0
]
VIDLIN:	PUSHJ P,VIDI
	CAILE A,INUM
	POPJ P,		;FOR -1 RETURNED.
	MOVEI B,400
	IDIV B,A
	MOVE A,B
	POPJ P,

VIDLOG:	PUSHJ P,VIDI
	CAILE A,INUM
	POPJ P,		;FOR -1 RETURNED.
	TLO A,232000
	FAD A,A
	FMPR A,[0.035]
	REPEAT 3,FMPR A,A
	MOVEM A,B
	REPEAT 2,FMPR A,A
	FMPR A,B
	ASH A,-33
	MOVNS A
	ADDI A,400
	POPJ P,
IFN TS,[
VIDI:	SKIPN VIDOPD
	PUSHJ P,VIDOPN
	HRL A,B		;INUM
	.IOT VIDC,TT
	JUMPL TT,FIX1
	CAILE TT,3
	CAILE TT,400
	ADDI TT,400
	JRST FIX1

NVID:	PUSHJ P,NVIDI
	TLNE A,3
	MOVSI A,(-1.0)
	MOVE TT,A
	JRST FLOAT1

NVIDI:	SKIPN NVDOPD
	PUSHJ P,NVDOPN
	HRL A,B
	MOVE AR1,A
	MOVE C,[-1,,AR1]
	PUSHJ P,NVDPRE
	MOVE A,AR1
	.IOT NVDC,A
	POPJ P,
NVFIX:	PUSH P,B
	PUSH P,A
	PUSHJ P,NUMBERP
	JUMPE A,NVFXB
	POP P,A
	POP P,B
	PUSHJ P,NVIDI
	MOVE C,[-1,,A]
	JRST NVDPST
NVFXB:	POP P,A
	MOVEI B,QARRAY
	PUSHJ P,GET
	SKIPN A
	JRST .+5
	HRRZ AR1,(A)
	MOVE A,@VBPEND
	CAIG AR1,(A)
	LERR [SIXBIT \BAD ARG - NVFIX!\]
	HRRZ AR1,-1(AR1)
	POP P,A
	JSP T,NUMVAL
	MOVN A,TT
	HRL AR1,A
	MOVE C,AR1
	PUSHJ P,NVDPRE
	SKIPN BVDOPD
	PUSHJ P,BVDOPN
NVFXB1:	MOVE A,AR1
	.IOT BVDC,A
	MOVE C,AR1
	PUSHJ P,NVDPST
	JRST FALSE

NVDPRE:	HLRZ A,(C)
	JSP T,NUMVAL
	IMUL TT,NVSCL
	HLLM TT,(C)
	HRRZ A,(C)
	JSP T,NUMVAL
	IMUL TT,NVSCL
	HLRM TT,(C)
	AOBJN C,NVDPRE
	POPJ P,

NVDPST:	MOVE TT,(C)
	TLNE TT,3
	MOVEI TT,0
	JSP T,FIX1A
	MOVEM A,(C)
	AOBJN C,NVDPST
	POPJ P,
	
NVSET:	PUSH P,C
	PUSH P,B
	LDB C,[251700,,ONVDC]
NVFIL:	SOJL A,NVCONF
	DPB A,[100200,,C]
	TRNN A,4
	TRZA C,10_10
	TRO C,10_10
NVCONF:	POP P,A
	SOJL A,NVRES
	LSH A,1
	TRNE A,4
	TRO A,1
	DPB A,[000200,,C]
NVRES:	POP P,A
	JUMPE A,NVDIM
	PUSHJ P,NUMVAL
	HRLZI B,40000
	IDIVM B,A
	MOVEM A,NVSCL
NVDIM:	SOJL AR1,NVXYZ
	DPB AR1,[020300,,C]
NVXYZ:	JUMPE AR2A,N