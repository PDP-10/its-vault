; -*-MIDAS-*-
TITLE PEEK -- Tasteful (TASTELESS, if you ask me)

;	**************************************************
;	******** WARNING! The squeamish and those ********
;	******** who are prone to heart attacks   ********
;	******** read beyond this point at their  ********
;	******** own risk.                        ********
;	**************************************************

.MLLIT==1

F=0
A=1
B=2
C=3
D=4
U=5	;USER INDEX (MOSTLY)
T=6	;SUPER TEMPORARY
X=7
U1=10	;UX'S USED AT UUOH LEVEL
U2=11
U3=12

IF1 .INSRT SYSENG;FSDEFS >

IFNDEF GUNCTL, GUNCTL==1	;1 means users who do not have directories
				;  may not gun or detach anyone but themselves.

IFNDEF CRAWLP,CRAWLP==1	;1 -- USE CRAWL, FLY, ETC.
			;0 -- USE SOBER RUN

OBUFP=13	;OUTPUT BUF BYTE POINTER
OMODE=14	;DEV CODE - 0 THROUGH 4
I1=15		;IX'S USED ONLY AT TSINT LEVEL
I2=16
P=17

UUOLOC==41
PVEC54==1367	;This is the address of something or other in Muddle
PVEC55==1567	;So is this, for Muddle 55

;DEFINITIONS OF OFFSETS INTO JOB DEVICE VARIABLES
%JOBDV==0
%JDEV==1
%JFN1==2
%JFN2==3
%JSNM==4
%JACC==5
%JMODE==6
%JCUNM==7
%JCJNM==10
%JFLEN==11

PURVSY==113.
IDXOFF==100
SYSP==15
SYSA==1

SYSHGH==:170		;HIGHEST SYSTEM ADDRESS TO MAP IN
MMPPAG==SYSHGH+200	;FIRST PAGE TO USE FOR MMP

;USER UUO'S (MUST RUN FROM PUOMIN TO 37)
ALIGN=37000,,	;SPACE TO COLUMN E BUT OUTPUT AT LEAST AC SPACES
6TYPE=36000,,	;OUTPUT C(E) AS SIXBIT
XTYPE=35000,,	;OUTPUT IN SIXBIT THE BLOCK STARTING AT E UNTIL AN "!" IS ENCOUNTERED
SQPR=34000,,	;OUTPUT C(E) AS SQUOZE SYM
CTYPE=33000,,	;OUTPUT CHARACTER WHOSE ASCII VALUE IS E
6XTYPE=32000,,	;OUTPUT C(E) AS SIXBIT BUT STOP ON A SPACE
VALRET=31000,,	;DOES .VALUE, SEE UVALRET
ONUM=30000,,	;OCTAL PRINT C(E) IN A FIELD AT LEAST AC COLUMNS WIDE
DNUM=27000,,	;DECIMAL "
ATYPE=26000,,	;OUTPUT BLOCK OF ASCII STARTING AT E, STOPPING ON A ZERO
SONUM=25000,,	;SIGNED OCTAL PRINT AS IN ONUM
DWRD=24000,,	;ADD C(E) TO IMAGE MODE DISPLAY LIST (SEE UDWRD, HIST)
DPCT=23000,,	;ALWAYS PRINT DECIMAL (FOR %'S)

PUOMIN=23

;SYMBOLIC IO CHANNELS
TYOC==1
TYIC==2
DISC==3
DISWC==4	;IMAGE MODE
LPTC==5
DIRC==6
JOBI==7
IMXC==10
NTYO==14

IFNDEF OBUFL,OBUFL==40	;SIZE OF OUTPUT BUF
IFNDEF PDLL,PDLL==100	;LENGTH OF PDL.

DEFINE CONC A,B
A!B!TERMIN

DEFINE DBP X				;DECREMENT BYTE POINTER
	ADD X,[060000,,0] .SEE RUBOUT	;THIS IS VERY SPECIALIZED TO SIXBIT INPUT ROUTINE
	JUMPGE X,.+3
	 SOS X
	 HRLI X,010600
TERMIN

DEFINE MM,B
	MOVE A,[SIXBIT B]
TERMIN

DEFINE INFORM A,B
IF1,[PRINTX \A = B
\]TERMIN

DEFINE SYMS LIST
	IRPS FOOBAR,,[LIST]
FOOBAR:	0
	SQUOZE 0,FOOBAR
	TERMIN
	TERMIN

DEFINE TOUT AC
IDPB AC,OBUFP	;DEPOSIT CHARACTER
	CAMN OBUFP,[010700,,OBUF+OBUFL-1]	;SKIP IF BUF NOT FULL
	 PUSHJ P,OBLOCK	;OUTPUT FULL BUF
	TERMIN

DEFINE OMODER X
IFN .-6-X,.ERR TABLE INDEXED BY OMODE HAS WRONG LENGTH.
TERMIN

LOC 41
	JSR UUOH	;TRANSFER TO USER UUO ROUTINE
	JSR TSINT	;TRANSFER TO INTERRUPT ROUTINE

LOC 100

UUOH:	0	;UUO HANDLER
	LDB U1,[331100,,40]	;PICK UP OP CODE FROM 40
	CAIGE U1,PUOMIN	;SKIP IF LEGAL
	 .VALUE		;ILLEGAL
	HRRZ U2,40	;GET EFFECTIVE ADDRESS	OF UUO
	JRST @UUOTAB-PUOMIN(U1)	;DISPATCH TO UUO ROUTINE

TSINT:	0
	0
	SKIPE MORFLG
	JRST MORON
TSINT0:	SKIPGE I1,TSINT
	 JRST TSINTP
	TRZE I1,%PIMPV
	 JRST MPVCHK	  	 
TSINT1:	TRZE I1,%PIIOC
	 .DISMIS TSINT+1	
	TRZ I1,1
	JUMPN I1,TSINTL
	MOVEI I1,TYIC
	.ITYIC I1,
	 .DISMIS TSINT+1
TSINTI:	.IOT TYIC,I1
TSINTJ:	PUSHJ P,TSINTQ
	 .DISMISS TSINT+1
	HRRZ I1,TSINT+1	;SKIP RETURN IF LOST (ILLEGAL CHAR)
	CAIN I1,AHANG+1	;FIX UP POINTER IF HANGING
	 PUSHJ P,TSINTH
	.DISMISS TSINT+1


DDYFIL:	2,,(SIXBIT /DSK/)
	SIXBIT /M.F.D./
	SIXBIT /(FILE)/

DDXFIL:	2,,(SIXBIT /.../)
	SIXBIT /.FILE./
	SIXBIT /(DIR)/

DISF:	SIXBIT /   DIS.PEEK.>/

LPTF:	SIXBIT /  #DSK.PEEK.>/

TTYF:	SIXBIT /   TTY.PEEK.>/

TTYOP:	0	;HOLDS TTYOPT WORD OF TTY, USED TO DISTINGUISH ARDS-LIKE
		;DISPLAYS FROM GOOD ONES.

DISNOT:	0	;IF ZERO, TRY TO USE 340
		;IF NON ZERO, DON'T
SPNDD:	0	;JUSTIFICATION FLAG:  -1=>JUSTIFICATION COMPLETED, OTHERWISE COUNT OF SPACES NEEDED
TMPTCL:	0	;INITIAL COLUMN NUMBER OF FIELD

NAMEHK:	0
NAMESW:	0
ONAMSW:	0
LNAMES:	0
NAMEBP:	0
NAMCOM:	0

USRMEM:	0
USRTIM:	0
USRJTM:	0
MMUSFL:	0	.SEE HL4A

NEGF:	0	;-1=> SIGNED OUTPUT, 0=> UNSIGNED
NEGF2:	0	;-1=>PRINT MINUS SIGN, 0=> DON'T
UNUMQ:	0

LPBLK:	BLOCK 6
MODE:	%NORML	;TYPE OF INFO TO OUTPUT (SEE MDTAB)
LMODE:	0	;LAST MODE
UUIND:	0
RUUIND:	0
LRUUIN:	0	;LAST RUUIND
SPCCNT:	0	;NUMBER OF TYPED-AHEAD SPACES (NOT FOLLOWED BY ANYTHING ELSE).
TOPFLG:	0		;-1 MEANS SECOND TWO LINES HAVE BEEN PRINTED
MORFLG:	0
VSZ:	0
JHFLAG:	0
DSKZER:	0	;ABORT ON CONTROL-@
DSKCON:	-1	;HANG ON OUTPUT CHANNELS IN <NM> C MODE
HSTEXP:	-1	;EXPAND HOST NAMES
HSZ:	55.
ORADIX:	10.
ERRDVF:	0
CONST:	4,,4
CONST2:	-2,,A
MUDFLG:	0
FOOCNT:	IDXOFF
CURUNM:	0
GUNFLG:	0
RNDFLG:	0
RONLY:	0	;-1 FOR R MODE/ +1 FOR 0J MODE HACK
EONLY:	-1	;-1 NORMALLY / SQUOZE SYMBOL NAME ELSE
EINST:	0	;INSTRUCTION FOR E MODE
EWORD:	0	;WORD SO FAR FOR E MODE
ESW:	0
SQUOZR:	0
SHRTOT:	0
VPOS:	0
FTCTYP:	0
V2:	0
V3:	0
V4:	0
GNORDT:	0	;GUN OR DETACH
RUUFLG:	0
LRUUFL:	0	;LAST RUUFLG
LPCHPT:	-1
TTOWNR:	-1	;IN ULOOK, -1 IFF OWNERSHIP OF TREE'S TTY PASSES DOWN THROUGH THIS JOB.
		;IGNORES THE QUESTION OF WHETHER TREE HAS A TTY.

LINEPOS:	0	;CHARACTER COUNT ON LINE
PAGEPOS:	0	;LINE COUNT ON "PAGE"
NVLNS:	0	;# VERT LINES IN TTY DISPLAY MODE
NHLNS:	0	;# HORZ CHAR POS " " " "

;MAX NUM OF LINES ON PAGE FOR EACH DEV
MPAGEP:	,-1	;TTY	;=2**18-1
	.	;GE
	41.	;DISPLAY
	,-1	;LPT	;=2**18-1
	.	;WIDE DISPLAY
	,-1	;WIDE TTY
OMODER MPAGEP

DOZE:	20.
SYSIDX:	0

NSNAM:	0
XCHFLG:	0
TDATIM:	SIXBIT *  /  /      :  :  !*
NMMPGS:	0	;# MMP PGS SET FOR
UCPLC:	0	;COUNT IN UCPRL
UDISP:	-1	;-1 => SHOW ALL TREES IN ULOOK.  ELSE IT IS EITHER IDX OF TREE TO SHOW
		;(IF GUNFLG SET) OR XUNAME/UNAME OF TREES TO SHOW (OTHERWISE).
NETQF:	0
SCHHT1:	0
HSTSIN:	-1	;GE 0 IF HOSTS2 FILE MAPPED IN

PAT:
PATCH:	BLOCK 16	;PATCH SPACE

MEMTB:	REPEAT 40,CONC SIXBIT/CODE,\.RPCNT,/
		;SIXBIT NAMES INDEXED BY MUR CODE (POSSIBLY -340)

JCLBUF:	BLOCK 6		;SPACE FOR COMMAND STRING FROM SUPERIOR.
JCLBFE:
JCLBP:	0		;BYTE POINTER FOR READING THAT STRING.

PDL:	BLOCK PDLL	;PUSH DOWN LIST


OBUF:	BLOCK OBUFL	;OUTPUT BUFFER

;FULL WORD
FLWDT:	SYMS [IMPSTL:LUBLK:NCT:NUNITS:NUTIC:NUTOC:NQCHN:SSCHDB:TSYSM:
NQS:NFSTTY:NSTTYS:MURUSR:TOBL:DIRCHN:LUIOP:PGIHTL:SWPHTL:
%QAEFR:%QAEFW:%QACTH:%QAFUL:%QADEL:%QAACC:%QAPAR:%QAWOV:
%QMUDR:%QMMDR:%QMTTR:%QMUDW:%QMMDW:%QMTTW:
NINDX:%CFOFF:%CFSTS:%CFCLS:%CFSTY:%SWOUT:%SWLOD:%SWSB:%SWBEM:%SWDSO:]
LFWDT==.-FLWDT

;+400000
NXTAB:SYMS [SYSCN:AUSOPG:CUSER:DEVTAB:DISUSR:EDEVS:LOUTIM:LPTUSR:MEMFR:MMPNP:MEMPNT:MTUSR:NCBCOM:
NPGSWO:NULTIM:NVDUSR:PDPUSR:PLTUSR:PSWOUS:PTPUSR:PTRUSR:QIRRCV:RNABLU:SILNG:SOLNG:SCHHB:SWPOPR:
SWRCE:TABUSR:TIME:TRUMM:UMASTER:UREALT:USRHI:USRRCE:IMPUP:IMPBPQ:PRVUSR:LOSRCE:IDLRCE:SLOADU:MSUSER:MSREAD:MSRED2:MSWRIT:MSWRT2:
CHTTBF:CHFRBF:CHQRFC:CHQLSN:]
LNXTAB==.-NXTAB

;+400000(C)
CXTAB:	SYMS [AC0S:DCHSTB:DG2:DRTM:EUPOS:IOCHST:IOCHNM:IOTTB:MEMBLT:MMMPG:MMSWP:MPXBUF:
PARERR:UDIR:UDIRO:UGOAL:ULCTM:UTASS:UTBFS:UTTNO:UTUSR:UMNTR:
IMSOC1:IMSOC2:IMSOC3:IMSOC4:IMSOC5:IMSOC6:IMSOC7:IMSOC8:QUSR:QUDPR:QUDFPR:QSMPRP:QSMDN:
QSBYTE:QDSKN:QFBLNO:QSCRW:QSRAC:STYSTS:OPRSXB:CALSXB:CLSTB:JBDEV:QSFT:QPKID:
CHSUSR:CHSSTA:CHSNBF:CHSNOS:CHSFRN:CHSACK:CHSPKN:CHSWIN:CHSIBP:CHSOBP:PGIHTB:SWPHTB:]
LCXTAB==.-CXTAB

;+400000(U)
USERT:	SYMS [APRC:FLSINS:HUSRAD:IFPIR:IOTLSR:JNAME:JTMU:LUBTM:MSKST:
MSKST2:NMPGS:NSWPGS:PICLR:PIRQC:RPCL:SUEXIT:SUPPRO:SUUOH:
SV40:TTYTBL:UPGCP:TRNLST:TRNLS1:UNAME:TTSTSV:UPC:USIPRQ:USTP:XUNAME:
USWSCD:USWPRI:USWST:USYSN1:USYSNM:UTMPTR:UTRNTM:LSCALL:QSNUD:QSNLCN:
TRUNTM:UUAC:IDF1:IDF2:UWRKST:USVWRK:USWTIM:]
LUSRT==.-USERT

;+400000(T)
TXTAB:	SYMS [TOBEP:TOOP:TTYSTS:TTYCOM:TCTYP:TTYTYP:TCMXV:TCMXH:TTYOPT:
TOIP:TOBBP:TTYST1:TTYST2:TTITM:IMPHTN:]

LTXTAB==.-TXTAB

;value,,400000+MEMBLT(C)

MBTAB:	SYMS [MUR:]
LMBTAB==.-MBTAB

RHIST:
;THIS STORAGE USED FOR MEMORY HISTOGRAM MODE AND FOR TRANSLATE TABLE MODE.
;IT ALSO CONTAINS THE INITIALIZATION CODE.

NEVAL:	MOVE D,@(P)
	AOS (P)
	MOVE C,@(P)
NEVAL2:	MOVE A,1(D)
	.EVAL A,
	 JRST NEVAL6
	XCT C		;OR IN BITS OR WHATEVER
NEVAL4:	MOVEM A,(D)
	ADD D,[1,,1]
	AOBJN D,NEVAL2
	JRST POPJ1

NEVAL6:	SQPR A
	CTYPE "?
	MOVEI A,0
	JRST NEVAL4

;INITIALIZE AS PURE PROCEDURE
PURIFY:	.CALL [ SETZ ? SIXBIT /SSTATU/ ? REPEAT 5,[? %CLOUT,,]
		SETZ+<%CLOUT,,A>]
	  .LOSE %LSSYS
	CAMN A,[SIXBIT /DM/]	;DM DOES IT DIFFERENT.
DMINIT:	  SETZM MODE		;DEFAULT MODE IS 'J' INSTEAD OF 'N'
INIT:	MOVEI P,PDL-1
	MOVE A,[1000,,600000]	;GET ABS PAGE, INSERT, PAGE 200
INITA:	.CBLK A,
	 .LOSE 1000
	ADDI A,1001
	LDB B,[700,,A]
	CAIGE B,SYSHGH	;MAP MY 400000-700000 TO ABS 0-300000
	 JRST INITA
	SKIPL MPURF
	 JRST INITD
	MOVEI A,400000+<<GO/2000>*1001>
INITC:	.CBLK A,	;MAKE PAGE READ ONLY
	 .LOSE 1000
	ADDI A,1001
	LDB B,[1000,,A]
	CAIG B,HUSED/2000
	 JRST INITC
INITD:	MOVEI A,23
	HRLM A,TTYF	;SET FOR BLOCK OUTPUT
	.OPEN TYOC,TTYF
	 .LOSE 1000
	MOVE OBUFP,[440700,,OBUF]
	PUSHJ P,ALNEVA
	PUSHJ P,CRR
	PUSHJ P,CHEND
	.VALUE [ASCIZ /:Ready
/]
	
MPURF:	-1	;SET TO 0 FOR NON PURE FOR DEBUGGING

MEMTB1:	BLOCK 40	;SQUOZE NAMES OF MUR CODES
MEMTB2:	BLOCK 40	;SIXBIT NAMES OF MUR CODES
	LOC RHIST+500
EIMPURE==:.

LOC <.+1777>&776000
GO:	SETOM UUIND	;CLEAR COMMAND ARGUMENT
	.SUSET [.SMASK,,[100001+%PIIOC+%PIMPV]] 
			;SET MASK TO TYPE IN AND LIGHT PEN INTERRUPTS
	.SUSET [.SPICL,,[-1]]	;ENABLE ABOVE INTERRUPTS
	SKIPN SYSIDX
	 .VALUE [ASCIZ /:Not prepared
/]
	.RSYSI A,
	CAME A,SYSIDX
	 PUSHJ P,ALNEV	;NOT INITIALIZED FOR CURRENT SYSTEM
	.SUSET [.RXUNAME,,A]	   ;WHO ARE WE

;Editorial note from PEEK hacker from way back:
;This is an obscenity.  Should each person who wants J mode
;reassemble his own PEEK?  Chomp, chomp, losers!
;This is unacceptable.
;					/MARC

	MOVSI B,-UNMTLN		   ;AOBJN PTR TO PEOPLE WHO WANT J MODE
INITUN:	CAMN A,UNMTAB(B)	   ;DOES HE WANT J MODE?
	  JRST [ SETZM MODE	   ;  YES, GIVE IT TO HIM!
	         JRST INITY]
	AOBJN B,INITUN		   ;KEEP ON TRYING

INITY:	MOVEI P,PDL-1	;INITIALIZE PUSH DOWN LIST
	MOVE OBUFP,[440700,,OBUF]	;SET UP OUTPUT BUF POINTER
	MOVN C,@MMPNP	;INSERT MMP TBL IN MAP AT MMPPAG
	MOVNM C,NMMPGS
	HRLZS C
	MOVE A,[<1000,,400000>+<MMPPAG_9.>]
MEML2:	MOVE B,@MMMPG
	DPB B,[1000,,A]
	.CBLK A,
	 .LOSE 1000
	ADDI A,1000
	AOBJN C,MEML2
	MOVEI A,34
	HRLM A,TTYF	;SET MODE TO UNIT ASCII INPUT, DDT, AND CONVERT LOWER CASE
	.OPEN TYIC,TTYF	;TRY OPENING TYPE IN
	 JFCL		;IGNORE FAILURE
	MOVEI A,23
	HRLM A,TTYF	;SET TO BLOCK OUTPUT,  DISPLAY MODE
	SETZM OMODE	;INITIALIZE OUTPUT DEVICE TO KSR 35
	.OPEN TYOC,TTYF	;TRY TO OPEN TYPE OUT
	 JRST INIT2	;FAIL, TRY DISPLAY
	.OPEN NTYO,[SIXBIT /  !TTY/]
	 JFCL
	.STATUS TYIC,A	;SEE IF IT IS A DISPLAY CONSOLE
	TRNN A,200000
	 SETOM DISNOT	;NOT AT 340
	.CALL GETTYP
	  .LOSE 1000
	MOVE A,HSZ
	SUBI A,30.
	MOVEM A,HSZ
	MOVE A,TTYOP	;IS TTY AN ERASABLE DISPLAY?
	TLNN A,%TOERS
	 JRST INIT2	;NO, TRY 340 IF TTY IS NEAR IT, ESLE USE PRINTING TTY MODE.
SETDIS:	MOVEI OMODE,1	;SET OUT MODE TO "DISPLAY TTY"
	.SUSET [.RTTY,,T]
	MOVE A,@TCMXV	
	MOVEM A,VSZ
	.CALL TTYGET
	 .LOSE 1000
	TLZ C,%TSMOR	;ALWAYS **MORE** ON DISPLAY TTYS
	.CALL TTYSET
	  .LOSE 1000
	MOVE A,[-1,,[ASCIC/C/]]	;CLEAR SCREEN
	.IOT TYOC,A
	.CALL GSSB
	 .LOSE 1000
	MOVE A,NHLNS
	CAIL A,79.	;Worth an occasional (rare) overflow for more info
	 MOVEI OMODE,4	;WIDE DISPLAY
	MOVE A,NVLNS
	SOS A
	MOVEM A,MPAGEP(OMODE)
	JRST INIT3	;AVOID 340 DISPLAY

USROPN: SETZ	;OPEN THE JOB
	SIXBIT /OPEN/
	5000,,16
	1000,,JOBI
	[SIXBIT /USR/]
	@UNAME
	SETZ @JNAME

USRIOT: SETZ 
	SIXBIT /IOT/
	1000,,JOBI
	SETZ

USRACC:	SETZ
	SIXBIT /ACCESS/
	1000,,JOBI
	SETZ

GETTYP:	SETZ
	SIXBIT /CNSGET/
	[TYOC]
	2000,,0
	2000,,HSZ
	2000,,0
	2000,,0
	402000,,TTYOP

GSSB:	SETZ
	SIXBIT /RSSIZE/
	[TYOC]
	2000,,NVLNS
	402000,,NHLNS

TTYGET:	SETZ
	'TTYGET
	MOVEI TYOC
	MOVEM A
	MOVEM B
	SETZM C

TTYSET:	SETZ
	'TTYSET
	MOVEI TYOC
	A
	B
	SETZ C

INIT2:	.CALL GSSB
	  .LOSE 1000
	MOVE A,NHLNS
	CAIL A,79.	;Worth occasional (rare) line overflow for useful info
	 MOVEI OMODE,5
	PUSHJ P,ODIS	;TRY FOR 340 DISPLAY
	 JRST INIT3	;LOSE
	MOVEI OMODE,2	;SET OUT DEV TO 340
INIT3:	SETZM JCLBP	;FIRST, ASSUME THERE'S NO COMMAND STRING.
	.SUSET [.ROPTIO,,A]
	TLNN A,OPTCMD
	 JRST INIT4
	SETZM JCLBUF	;THERE IS ONE; GET IT FROM SUPERIOR.
	MOVE A,[JCLBUF,,JCLBUF+1]
	BLT A,JCLBFE-1
	.BREAK 12,[5,,JCLBUF]
	MOVE A,[440700,,JCLBUF]
INIT6:	MOVEM A,JCLBP	;SET UP TO SCAN THE JCL
	ILDB B,A
	CAIN B,40	;BUT IGNORE LEADING SPACES IN IT.
	 JRST INIT6
INIT4:	JUMPN OMODE,INIT5
	MOVEI A,400000
	MOVEM A,DOZE
INIT5:	.SUSET [.SMSK2,,[1_NTYO+1_TYOC]]
;;;;;;;;;;;;;;;;;;;;;;;;;MAIN BODY OF PROGRAM, PEEK LOOPS TO HERE AFTER SLEEPING
BEG:	MOVE A,@MMPNP
	CAME A,NMMPGS
	 JRST INITY	;# OF MMP PAGES HAS INCREASED, PARTIAL RE-INIT NEEDED.
	SKIPN JCLBP	;FIRST, ARE THERE ANY CHARS OF COMMAND STRING YET UNPROCESSED?
	 JRST BEG0
	ILDB I1,JCLBP	;YES; HANDLE ONE.
	JUMPE I1,BEG0A	;TERMINATOR => INDICATE JCL STRING ENTIRELY HANDLED.
	CAIE I1,^M
	 CAIN I1,^C
	  JRST BEG0A
	.LISTEN A,	;WAIT FOR OUTPUT TO FINISH BEFORE MAYBE CLOBBERING IT.
	JUMPN A,BEG0A	;PENDING INPUT IS MORE INPORTANT THAN THE JCL - USER HAS CHANGED HIS MIND.
	PUSHJ P,TSINTO	;PROCESS ALL OTHER CHARS AS IF WERE TTY INPUT.
	JRST BEG

BEG0A:	SKIPGE NAMESW
	 PUSHJ P,TSSEM1	;HACK THE COMMAND NOW
	SETZM JCLBP
BEG0:	SKIPE NAMESW
	 JRST PUTPKX
	.LISTEN A,
	JUMPE A,BEG1
	.SUSET [.SPICL,,[0]]
	MOVEI A,BEG
	MOVEM A,TSINT+1
	JRST TSINTI

BEG1:	SETZM TOPFLG
	MOVEI P,PDL-1	;SET UP P
	MOVE OBUFP,[440700,,OBUF]	;SET UP OUTPUT BUF POINTER
	SETZM LINEPOS	;CLEAR LINE AND PAGE POSITION
	SETZM PAGEPOS
	HRRZ A,MODE
	CAIN A,%ONELI
	 JRST BEG1LN
	MOVEI A,^T
	XCT BEGT(OMODE)	;INITIALIZE DEPENDING ON OUT DEV
	.CALL [	SETZ ? 'SSTATU
		REPEAT 5,MOVEM A
		MOVEM A		;MACHINE NAME
		SETZM B]	;ITS VERSION NUMBER
	  .LOSE 1000
	6XTYPE A
	ATYPE [ASCIZ / ITS /]
	6TYPE B
	ATYPE [ASCIZ /Peek /]
	6TYPE [.FNAM2]
	.RDATI A,
	DPB B,[061400,,TDATIM]
	LSH B,-12.
	DPB B,[301400,,TDATIM]
	LSH B,-12.
	DPB B,[301400,,TDATIM+1]
	DPB A,[001400,,TDATIM+2]
	LSH A,-12.
	DPB A,[221400,,TDATIM+2]
	LSH A,-12.
	DPB A,[001400,,TDATIM+1]
	XTYPE TDATIM
	ATYPE [ASCIZ /  Up time =/]
	SETZM TMPTCL	;STARTS OUTPUT 1 SPACE FROM CURRENT POSITION
	MOVE A,@TIME	;GET TIME SYS UP IN 1/30'S
	IDIVI A,30.	;CONVERT TO SECS
	PUSHJ P,TMPT	;OUTPUT HH:MM:SS
	PUSHJ P,CRR
BEG1LN:	MOVE D,MODE	;GET MODE
	SKIPGE MDTAB(D)
	 PUSHJ P,GUPOPJ	;SIGN SET, OUTPUT ERRS
	SKIPGE XCHFLG
	 JRST BEG5	;MPLXRS OPEN
	JRST @MDTAB(D)	;MPLXRS CLOSED, DISPATCH ACCORDING TO MODE

BEG5:	CAIN D,%MPXRM	;MPLXRS OPEN, SKIP IF SHOULD BE OFF
	 JRST @MDTAB(D)	;DISPATCH
	.CLOSE IMXC,	;PROGRAM WAS INTERRUPTED OUT OF MPLXR MODE TO ANOTHER MODE
	SETZM XCHFLG	;RECORD
	JRST @MDTAB(D)	;DISPATCH

;DISPATCH TABLE TO ROUTINES FOR DIFFERENT MODES
; (SETZ JUST TO TURN ON SIGN BIT) (TO OUTPUT ERRORS ON 2ND LINE)

.SEE DISEND	; CHANGE DISEND WHEN YOU CHANGE THIS!!

MDTAB:	JHACK	.SEE DMINIT	;THIS MUST BE FIRST!!!!!
%NORML==.-MDTAB
	SETZ NORMAL	;NORMAL
	SETZ MHIST	;MEMORY HISTOGRAM
	SETZ UTPEEK	;DECTAPE
	SETZ MEML	;LIST OF MEMORY USAGE
	TRANPK		;TRANSLATION TABLE
	EXPL		;EXPLANATION
	OSHACK
	USER		;USER VARIABLES
%MPXRM==.-MDTAB
	MPXR
	DDXR		;2311 DISKS
%SINGL==.-MDTAB
	SPEEK		;SINGLE TREE PEEK
%SCHED==.-MDTAB
	NORMAL		;DISPLAY SWAP SCHEDULE STUFF ETC.  ULOOK CHECKS MODE TO HACK THIS
	NETWRK		;ARPA NET SOCKET MAP
%ONELI==.-MDTAB
	1PEEK
        EPEEK
	SETZ DISK		;DISK CHANNELS INFO
	LINES		;TTY^F
	SETZ NORMAL		;HUNG JOBS
	SCHH		;SCHEDULER HISTORY
	SETZ RNABLE	;RUNNABLE USERS ONLY
	%BACK==.-MDTAB
	[.VALUE [ASCIZ /:Should not execute back/]]	;RESTORE PREVIOUS MODE
	GUNNER
	DETACH
	KAOS		;CHAOS NET
	SWPH		;SWAPPER HISTORY
	PAGH		;PAGE-IN HISTORY

;	INSERT NEW MODES ^ ^ HERE.
; NOTE THAT THERE MAY STILL BE PLACES WHERE MODES ARE TESTED AGAINST NUMBERS
; ALTHOUGH SYMBOLS SUCH AS %SCHED OUGHT TO BE CREATED INSTEAD.
MAXMODE==.-MDTAB

.SEE DISEND	; CHANGE DISEND WHEN YOU CHANGE THIS!!!

MDTAB2:	"J		;THIS MUST BE FIRST!!!!!!
	"N
	"M
	"U
	"H
	"T
	"?
	"O
	"V
	"I
	"D
	"S
	"G
	"A
	"F
	"E
	"C
	"L
	"*
	"%
	"R
	"B
	"X
	"Y
	"K
	"$
	"!
MAXMD2==.-MDTAB2
IFN MAXMD2-MAXMOD,PRINTX /MDTAB2 BIT THE BAG/

BEGT:	PUSHJ P,CRR	;TTY
	PUSHJ P,TTYDPT	;DATAPOINT
	IDPB A,OBUFP	;340
	PUSHJ P,CRR	;LPT
	PUSHJ P,TTYDPT	;WIDE DISPLAY
	PUSHJ P,CRR	;WIDE TTY
OMODER BEGT

TTYDPT:	MOVEI A,^P
	IDPB A,OBUFP
	MOVE A,TTYOP	;IF ARDS CLEAR USING ^PC
	TLNN A,%TOERS
	 SKIPA A,["C]	;MAKE CHAR "C" FOR ^PC
	  MOVEI A,"T	;DATAPOINTS HOME UP AND CLEAR TOP LINE.
	IDPB A,OBUFP
	MOVEI A,^P
	IDPB A,OBUFP
	MOVEI A,"]
	IDPB A,OBUFP
	POPJ P,

ODIS:	SKIPE DISNOT
	 POPJ P,
	MOVEI A,3	;SET DISPLAY FILE NAME BLOCK
	HRLM A,DISF		;TO ASCII BLOCK OUTPUT
	.OPEN DISC,DISF	;TRY TO OPEN DIS DIVICE
	 POPJ P,		;FAILURE EXIT
	MOVEI A,7	;SET DIS FIL NAM BLK
	HRLM A,DISF		;TO IMAGE BLK OUT
	.OPEN DISWC,DISF	;TRY TO OPEN DIS DIVICE
	 JRST ODIS2	;FAILURE (SOMEOME MUST HAVE JUST TAKEN DIS AWAY)
	MOVSI A,(SETZ)	;TURN ON
	MOVEM A,LPBLK		;SIGN BIT
	.LTPEN LPBLK	;INITIALIZE LIGHT PEN IN RIGHT "MODE"
POPJ1:	AOS (P)		;INCREMENT RETURN ADDRESS
	POPJ P,

ODIS2:	.CLOSE DISC,	;CLOSE OUT ASCII CHANNEL
	POPJ P,		;FAILURE EXIT

ALNEV:	.VALUE [ASCIZ/:New system, please repurify:KILL /]

ALNEVA:	PUSHJ P,NEVAL
	  -LFWDT,,FLWDT
	  JFCL
	PUSHJ P,NEVAL
	  -LUSRT,,USERT
	  IOR A,[400000(U)]
	PUSHJ P,NEVAL
	  -LCXTAB,,CXTAB
	  IOR A,[400000(C)]
	PUSHJ P,NEVAL
	  -LTXTAB,,TXTAB
	  IOR A,[400000(T)]
	PUSHJ P,NEVAL
	  -LNXTAB,,NXTAB
	  IOR A,[400000]
	PUSHJ P,NEVAL
	  -LMBTAB,,MBTAB
	  PUSHJ P,[ HRLZ A,A ? IOR A,MEMBLT ? POPJ P,]
	MOVSI D,-LMEMTB
ALNEVB:	MOVE A,MEMTB1(D)	;SQUOZE
	.EVAL A,
	 JRST ALNEVD
	CAIL A,340		;BRING OLD HIGH CODES WITHIN RANGE
	 SUBI A,340
	CAIL A,0
	CAIL A,40
	 JRST ALNEVD
	MOVE B,MEMTB2(D)	;SIXBIT
	MOVEM B,MEMTB(A)	;STICK INTO TABLE
ALNEVC:	AOBJN D,ALNEVB
	.RSYSI A,
	MOVEM A,SYSIDX
	POPJ P,

ALNEVD:	SQPR MEMTB1(D)
	CTYPE "?
	JRST ALNEVC

;UUO DISPATCH TABLE
UUOTAB:	UDPCT
	UDWRD
	USONUM
	UATYPE
	UDNUM
	UONUM
	UVALRET
	U6XTYPE
	UCTYPE
	USQPR
	UXTYPE
	U6TYPE
	UALIGN

;ALIGN AC,E	;SPACE TO COLUMN E OUTPUTTING AT LEAST AC SPACES
UALIGN:	LDB U1,[270400,,40]	;PICK UP UUO'S AC FIELD
	MOVEI U3,40
	SOJL U1,UALIG2	;JUMP IF NO MIN NUM OF SPACES
UALIG1:	AOS LINEPOS	;INCREMENT LINE POSITION
	TOUT U3		;OUTPUT SPACE
	SOJGE U1,UALIG1	;LOOP TILL MIN SPACES OUT
UALIG2:	CAMLE U2,LINEPOS	;SKIP IF LINE POSITION = EFF ADR
	JRST UALIG1	;MORE SPACES
	JRST 2,@UUOH	;EXIT AND RESTORE FLAGS

;6TYPE E	;OUTPUT (E) AS SIXBIT
U6TYPE:	MOVSI U1,-6	;INITIALIZE LOOP, 6 CHARS
	HRLI U2,440600	;BYTE POINTER FOR HIGH 6 BITS OF E
U6TYP2:	ILDB U3,U2	;GET CHAR (6 BITS)
	ADDI U3,40	;CONVERT TO ASCII
	TOUT U3		;OUTPUT
	AOBJN U1,U6TYP2	;LOOP
	MOVEI U1,6
	ADDM U1,LINEPOS	;INCREMENT LINE POSITION BY 6
UEXIT:	JRST 2,@UUOH	;EXIT AND RESTORE FLAGS

;ATYPE E	;OUTPUT C(E), C(E+1),... AS ASCII, STOPPING AT ZERO OR FF
UATYP2:	AOSA LINEPOS	;INCREMENT LINE POSITION AND SKIP
UATYPE:	HRLI U2,440700	;ENTRY, BYTE POINTER TO TOP 7 BITS OF C(E)
UATYP3:	ILDB U3,U2	;GET CHAR
	JUMPE U3,UEXIT	;EXIT IF ZERO
	CAIN U3,14
	 JRST UEXIT	;EXIT IF FORM FEED
	TOUT U3	;OUTPUT
	CAILE U3,15	;SKIP IF MAY BE NON-PRINTING CHAR
	 JRST UATYP2	;REGULAR CHAR
	CAIN U3,15
	 JRST UACR	;CARRIAGE RETURN
	CAIE U3,12
	 JRST UATYP2	;REGUALR CHAR
	AOS PAGEPOS	;LINE FEED, INCREMENT PAGE POSITION
	JRST UATYP3

UACR:	SETZM LINEPOS	;RESET TO BEG OF LINE
	JRST UATYP3

;XTYPE E	;OUTPUT IN 6BIT STARTING AT E UNTIL AN "!" IS ENCOUNTERED
UXTYPE:	HRLI U2,440600	;ENTRY, BYTE POINTER TO TOP 6 BITS OF C(E)
UXTYP2:	ILDB U3,U2	;GET CHAR
	CAIN U3,'!	;SKIP UNLESS "!"
	 JRST 2,@UUOH	;EXIT AND RESTORE FLAGS
	ADDI U3,40	;CONVERT TO ASCII
	TOUT U3		;OUTPUT
	AOS LINEPOS	;INCREMENT LINE POSITION
	JRST UXTYP2	;LOOP

;CTYPE E	;OUTPUT ASCII CHAR WHOSE VALUE IS E
UCTYPE:	TOUT U2	;OUTPUT CHAR
	CAIE U2,^B
	 CAIN U2,^E
	  JRST 2,@UUOH
	AOS LINEPOS	;INCREMENT LINE POSITION
	JRST 2,@UUOH	;EXIT AND RESTORE FLAGS

;6XTYPE E	;OUTPUT C(E) AS 6BIT W/ TRAILING SPACES SUPPRESSED.
U6XTYPE:
	MOVE U2,(U2)	;GET THE WORD OF SIXBIT
U6XTY2:	MOVEI U1,0
	LSHC U1,6	;GET THE NEXT CHARACTER
	ADDI U1,40	;MAKE INTO ASCII
	AOS LINEPOS
	TOUT U1		;OUTPUT IT
	JUMPN U2,U6XTY2	;IF MORE NON SPACES, KEEP GOING.
	JRST 2,@UUOH	;EXIT AND RESTORE FLAGS

UVALRET:	.RESET TYOC,	;RESET TTY OUTPUT BUF (IN SYSTEM)
	.SUSET [.RJNAM,,U1]
	CAMN U1,[SIXBIT/HACTRN/]
	 JRST [	HRROI U3,[ASCIC/C/]
		CAIE OMODE,4		;IF ON DISPLAY TERMINAL,
		 CAIN OMODE,1
		  XCT OMODET(OMODE)	;CLEAR SCREEN BEFORE LOGGING OUT.
		.LOGOUT
		.VALUE]
	.VALUE (U2)	;TRANSMIT E FROM UUO TO DDT
	.DISMISS [BEG]	;RESTART PEEK IF DDT RETURNS

USQPR:	MOVE U1,(U2)
	TLZ U1,740000
USPQR2:	IDIV U1,[50*50*50*50*50]
	ADDI U1,260-1
	CAILE U1,271
	 ADDI U1,301-272
	CAILE U1,332
	 SUBI U1,334-244
	CAIN U1,243
	 MOVEI U1,256
	TOUT U1
	MOVE U1,U2
	IMULI U1,50
	JUMPN U1,USPQR2
	JRST 2,@UUOH


;ONUM AC,E	;UNSIGNED OCT PRINT C(E), RIGHT JUSTIFIED IN FIELD AT LEAST AC WIDE
UONUM:	MOVEI U3,10	;SET RADIX 8.
	SETZM NEGF	;SET TO UNSIGNED OUTPUT
UONUM2:	SETZM NEGF2	;SET TO NOT PRINT "-"
	LDB U1,[270400,,40]	;GET AC FROM 40
	MOVE U2,(U2)	;PUT C(E) IN U2
	HRRM U3,UNUMQ	;PLANT RADIX
	PUSHJ P,UNUMP	;PRINT OUTPUT
	JRST 2,@UUOH	;EXIT AND RESTORE FLAGS

UNUMP:	SOS U1	;DECREMENT FIELD WIDTH
	JUMPL U2,UNUMPN	;C(E) NEG
UNUMQ1:	IDIVI U2,@UNUMQ
UNUMQ2:	HRLM U3,(P)	;PUT REMAINDER IN STACK OVER FLAGS
	SKIPE U2	;SKIP IF REMAINING QUOTIENT IS ZERO
	 PUSHJ P,UNUMP	;RECURSE ON QUOTIENT
	JUMPG U1,UNUMS	;ALL OF C(E) PRINT-OUT COMPUTED, PAD WITH SPACES AS REQUIRED
UNUMP2:	AOSN NEGF2	;SKIP UNLESS "-" TO BE PRINTED
	 JRST UNUMMM	;PRINT MINUS
	HLRZ U3,(P)	;PICK UP DIGIT
	ADDI U3,"0	;CONVER TO ASCII
	TOUT U3		;OUTPUT
	AOS LINEPOS	;INCREMENT LINE POSITION
	POPJ P,

	;C(E) NEGATIVE
UNUMPN:	SKIPE NEGF	;SKIP IF UNSIGNED OUTPUT
	 JRST UNUMN2	;SIGNED OUTPUT
	LSHC U2,-43		;PUT BOTTOM 35 BITS IN BOTTOM OF U3
	LSH U3,-1	;AND SIGN BIT AT BOTTOM OF U2 (DOUBLE PRECISION INTEGER FORMAT)
	DIVI U2,@UNUMQ	;DIVIDE OFF DIGIT
	JRST UNUMQ2

	;SIGNED OUTPUT OF NEGATIVE
UNUMN2:	SETOM NEGF2	;SET FLAG TO PRINT "-"
	MOVNS U2	;MAKE NUM PSOITIVE
	SOJA U1,UNUMQ1	;DECREMENT FIELD WIDTH ANTICIPATING MINUS SIGN

	;PRINT MINUS SIGN
UNUMMM:	MOVEI U3,"-	;OUTPUT
	TOUT U3		;A "-"
	AOS LINEPOS	;INCREMENT LINE POSITION
	JRST UNUMP2

	;FILL BEGINNING OF FIELD WITH SPACES
UNUMS:	MOVEI U3,40
UNUMS2:	TOUT U3		;OUTPUT A SPACE
	AOS LINEPOS	;INCREMENT LINE POSITION
	SOJG U1,UNUMS2	;LOOP TILL ENOUGH SPACES
	JRST UNUMP2


;DPCT AC,E
UDPCT:	MOVEI U3,10.
	SETOM NEGF
	JRST UONUM2

;DNUM AC,E	;SIGNED DEC OUTPUT RIGHT JUSTIFIED IN FIELD AT LEAST AC WIDE
;SONUM AC,E	;SIGNED OCT ETC.
UDNUM:	SKIPA U3,ORADIX	;RADIX OF 10.
USONUM:	 MOVEI U3,10	;RADIX OF 8
	SETOM NEGF	;SET TO SIGNED OUTPUT
	JRST UONUM2

UDWRD:	PUSH OBUFP,(U2)	;PUT UUO C(E) IN OUTPUT BUF
	CAME OBUFP,[OBUFL,,OBUF+OBUFL-1]	;SKIP IF BUF FULL
	 JRST 2,@UUOH	;EXIT AND RESTORE FLAGS
	MOVE U3,[-OBUFL,,OBUF]	;SET UP FOR IOT
	.IOT DISWC,U3	;OUTPUT BUF TO DIS IN IMAGE MODE
	MOVEI OBUFP,OBUF-1	;INITIALIZE BUF POINTER
	JRST 2,@UUOH	;EXIT AND RESTORE FLAGS

;OUTPUT FULL BUFFER (SEE TOUT MACRO)
OBLOCK:	PUSH P,U3	;PRESERVE U3
	MOVE U3,[-OBUFL,,OBUF]	;SET UP IOT COUNT
	XCT OMODET(OMODE)	;EXECUTE APROPRIATE IOT
	POP P,U3	;RESTORE U3
	MOVE OBUFP,[440700,,OBUF]	;INITIALIZE CHAR POINTER TO START OF NOW FREE BUF
	POPJ P,

;OUTPUT INSTRUCTIONS FOR VARIOUS DEVICES
OMODET:	.IOT TYOC,U3	;0=TTY
	.IOT TYOC,U3	;1=DATAPOINT
	.IOT DISC,U3	;2=340
	.IOT LPTC,U3	;3=LPT
	.IOT TYOC,U3	;WIDE DISPLAY
	.IOT TYOC,U3	;WIDE TTY
OMODER OMODET

GUPOPJ:	MOVE T,@QIRRCV
	MOVEI C,0
	MOVE A,@PARERR
	MOVEI C,1
	MOVE B,@PARERR
	ADD T,A
	ADD T,B
	JUMPE T,CPOPJ
GUPOP2:	XTYPE [SIXBIT /ERRS:!/]
	SKIPN @QIRRCV
	 JRST .+3
	XTYPE [SIXBIT /   DSK(IRRECOV) =!/]
	DNUM 4,@QIRRCV
	JUMPE A,.+3
	XTYPE [SIXBIT /   CORPAR =!/]
	DNUM 4,A
	JUMPE B,CRR
	XTYPE [SIXBIT /   CORNXM =!/]
	DNUM 4,B
	JRST CRR


RNABLE:	SETOM RONLY
	SETOM UDISP
	MOVSI A,400000			; GODDAMN IT, THIS IS IMPORTANT!
	IORM A,EONLY
	JRST NORML0

NMHACK:	SETZ U,
	MOVE A,NAMEHK
NMLOOP:	CAML U,@USRHI
	 JRST NMLOSE
	CAMN A,@UNAME
	 JRST NMWIN
NMEND:	ADD U,LUBLK
	JRST NMLOOP	

NMLOSE:	SETZM RUUFLG
	POPJ P,

NMWIN:	SKIPL @SUPPRO
	 JRST NMEND
	SETOM RUUFLG
	MOVE A,U
 	IDIV A,LUBLK
	MOVEM A,RUUIND
	JRST POPJ1
	
JHACK:	SETOM JHFLAG
SPEEK:	SKIPL NAMESW
	 JRST SPEEK1
	PUSHJ P,NMHACK		;CHECK FOR NAME?
	 JFCL			;DONT CARE
SPEEK1:	SKIPGE RUUFLG
	 SKIPA U,RUUIND
	  .SUSET [.RUIND,,U]
	IMUL U,LUBLK
	CAMGE U,@USRHI
	 SKIPN @UNAME
	  JRST NORMAL
	SKIPE JHFLAG		;SPECIAL HACK FOR 0J
	 SKIPL RUUFLG
	  JRST SPKY
	SKIPE RUUIND
	 JRST SPKY
	MOVEI A,1
	MOVEM A,RONLY
SPKY:	MOVNI A,1
SPK3:	CAMN A,@SUPPRO
	 JRST SPK2
	CAMN U,@SUPPRO
	 JRST NORMAL
	HRRZ U,@SUPPRO
	JRST SPK3

SPK2:	MOVE A,@XUNAME	;FOUND TOP OF SPEC'D TREE.  ITS XUNAME IS THE NAME TO WATCH.
	SKIPN GUNFLG	;ANY TREE WHOSE TOP'S UNAME OR XUNAME MATCHES IT, WE PRINT.
	 JRST SPKX
	MOVE A,RUUIND	;BUT FOR X AND Y COMMANDS, WANT ONLY ONE TREE,
	IMUL A,LUBLK	;SO SAVE IDX OF THE TREE'S TOP.
SPKX:	MOVEM A,UDISP
	 CAIA
NORMAL:	SETOM UDISP
NORMLS:	MOVSI A,400000
	IORM A,EONLY
	 CAIA
NORMLE:	SETOM UDISP
	SKIPG RONLY
	SETZM RONLY
NORML0:	SKIPE TOPFLG
	 JRST NORML3		;DON'T RETYPE TOP LINES
	MOVEI F,IDXOFF
	MOVEM F,FOOCNT
	SETZM USRMEM	;INITIALIZATION
	SETZM USRTIM	;"
	SETZM USRJTM	;"
	ATYPE [ASCIZ /Memory: Free=/]
	MOVE A,@MEMFR
	SUB A,@NCBCOM
	DNUM A		;OUTPUT NUM OF FREE BLOCKS OF MEM
	ALIGN 17.
	ATYPE [ASCIZ /Runnable Total=/]
	DNUM @TRUMM
	ATYPE [ASCIZ / Out=/]
	DNUM @AUSOPG
	ALIGN 45.
	ATYPE [ASCIZ /Users: High=/]
	MOVE A,@USRHI
	IDIV A,LUBLK
	ONUM A
	ATYPE [ASCIZ / Runnable=/]	;CARRIAGE RETURN/LINE FEED
	ONUM @RNABLU
	PUSHJ P,CRR
	XCT NTAB3(OMODE)
	PUSHJ P,CRR
	SETOM TOPFLG
NORML3:	PUSH P,[,-1]	;INITIALIZE PDL
	PUSHJ P,VCHK	;CHECK FOR BOTTOM OF SCREEN
	MOVEI X,0	;SET X TO TOP LEVEL PROCEDURE
	SKIPL EONLY
	 PUSHJ P,EHACK
	PUSHJ P,ULOOK	;OUTPUT POOP
	SUB P,[1,,1]	;RESET PDL
NORML2:	ATYPE [ASCIZ /Fair Share /]
	MOVEI A,10000.
	IDIV A,@SLOADU
	DPCT A
	CTYPE "%
	ATYPE [ASCIZ /     Totals:/]
	HRRZ A,FLKT7(OMODE)		;WHERE DOES CORE SIZE OF INDIVIDUAL JOB START?
	SUBI A,1			;BUT MORE THAN 1000K USUALLY
	LDB B,[270400,,FLKT8(OMODE)]	;AND HOW MANY COLS USED IN THAT CASE?
	ADD A,B				;THIS IS WHERE CORE SIZE ENDS, ON THOSE LINES
	ALIGN 1,-3(A)			;WE WANT TO END IN SAME PLACE.
	DNUM 4,USRMEM	;OUTPUT NUM OF BLOCKS OF USER MEM
	XCT FLKT88(OMODE) ;ALIGN UNDER %RUNTIMES OF JOBS
	MOVE A,USRTIM	;AND PRINT THE TOTAL.
	ADDI A,9830.
	IDIVI A,19661.
	DPCT 2,A	;OUTPUT TOTAL % TIME DEVOTED TO USERS
	CTYPE "%	;OUTPUT "%"
	JUMPE OMODE,NORM2;JUMP IF TTY OUTPUT
	XCT FLKT13(OMODE)	;SPACE OVER
	MOVEM A,TMPTCL	;STORE COLUMN NUMBER
	MOVE A,USRJTM
	PUSHJ P,TMPTH	;OUTPUT TOTAL USER TIME
NORM2:	PUSHJ P,CRR	;CR LF
	SETZM TMPTCL	;STARTS OUTPUT 1 SPACE FROM CURRENT POSITION
	ATYPE [ASCIZ /Logout time =/]
	MOVE A,@LOUTIM	;TOTAL TIME USED BY LOGGED OUT USERS
	PUSHJ P,TMPTH	;OUTPUT AS HH:MM:SS
	ALIGN 21.
REPEAT 0,[
	ATYPE [ASCIZ /Kjtim/]
	SETZB U,A
KJLUP:	SKIPE @UNAME
	 ADD A,@TRUNTM
	ADD U,LUBLK
	CAMGE U,@USRHI
	 JRST KJLUP
	SKIPGE A
	 ATYPE [ASCIZ / -/]
	MOVMS A
	PUSHJ P,TMPTH
]
	ATYPE [ASCIZ / Lost /]
	MOVE A,@LOSRCE
	ADDI A,9830.
	IDIVI A,19661.
	DNUM A
	ATYPE [ASCIZ /%  Idle /]
	MOVE A,@IDLRCE
	ADDI A,9830.
	IDIVI A,19661.
	DNUM A
	ATYPE [ASCIZ /%  Null time =/]
	MOVE A,@NULTIM
	IDIVI A,60.
	PUSHJ P,TMPT
	PUSHJ P,CRR	;CR LF
	.DIETIM A,
	JUMPL A,PUTPK0	;JUMP IF SYS NOT GOING DOWN
	ATYPE [ASCIZ /System going down in /]
	IDIVI A,30.	;CONVERT TO SECONDS
	PUSHJ P,TMPT	;OUTPUT RELATIVE TIME OF DEATH (HH:MM:SS)
	CTYPE 40	;SPACE
	CTYPE "(
	.RTIME B,	;GET REAL TIME
	PUSHJ P,TIM30.	;CONVERT TO 1/30'S (IN A)
	.DIETIME B,	;GET RELATIVE TIME OF DEATH AGAIN
	ADD A,B		;CONVERT TO ABSOLUTE TIME IN 1/30'S
	IDIVI A,30.	;CONVERT TO SECONDS
	PUSHJ P,TMPT	;OUTPUT ABS TIME AS HH:MM:SS
	CTYPE ")
PUTPK0:	MOVE A,FOOCNT
	SETZM RHIST(A)
	SKIPE JHFLAG
	 JRST DISK1	;IGNORE RUUIND
PUTPKR:	.CLOSE DIRC,	;CLOSE OUT DIR CHANNEL IF OPEN
	MOVEI A,1
	MOVEM A,ESW
	SETZM JHFLAG
	SETZM RONLY
	MOVE A,NAMESW
	CAMN A,[-2]
	 JRST PUTPKN
	SKIPG A
	 SETZM NAMESW
	MOVEM A,LNAMES
PUTPKN:	SETZM RNDFLG
	SETZM GUNFLG
	CAIA
PUTPKX:	 MOVE OBUFP,[440700,,OBUF]	;SET UP OUTPUT BUF POINTER
PUTPKG:	JSP U,UTPKR	;TERMINATE OUTPUT AND SLEEP
	@DOZE		;NUM OF SECONDS SLEEP

NTAB3:	ATYPE GTOP	;SEE ABOVE
	ATYPE DPTOP
	ATYPE DTOP
	ATYPE DTOP
	ATYPE DTOP
	ATYPE DTOP
OMODER NTAB3

	;CONVERT HHMMSS (TIME IN 6BIT CHARS) TO BINARY 1/30'S OF SECOND
TIM30.:	LDB A,[360400,,B]	;GET HOURS, TENS
	IMULI A,10.
	LDB C,[300400,,B]	;HOURS, UNITS
	ADD A,C		;TOTAL HOURS
	IMULI A,6	;HOURS AS MINUTES*10
	LDB C,[220400,,B]	;MINUTES, TENS
	ADD A,C
	IMULI A,10.
	LDB C,[140400,,B]	;MINUTES UNITS
	ADD A,C
	IMULI A,6	;MINUTES+HOURS AS SECONDS*10
	LDB C,[60400,,B]	;SECONDS, TENS
	ADD A,C
	IMULI A,10.
	LDB C,[400,,B]	;SECONDS, UNITS
	ADD A,C		;TOTAL TIME AS SECONDS
	IMULI A,30.	;AS 1/30'S
	POPJ P,

;CALL	JSP U,UTPKR
;CALL+1	<NUM OF SECONDS DELAY>
UTPKR:	XCT OMENDT(OMODE)	;TERMINATE MESSAGE
UTPKR0:	PUSHJ P,CHEND	;TERMINATE CHAR OUTPUT
ASLEEP:	MOVE A,@TIME	;READ SYSTEM TIME IN 1/30'THS
	MOVEI B,@(U)	;DELAY IN SECONDS
	IMULI B,30.	;CONVERT TO 30'THS
	ADD A,B		;GET SYSTEM TIME YOU WANT TO SLEEP TILL IN 1/30'THS
	IDIVI A,15.
	IMULI A,15.	;TRUNCATE TO NEAREST HALF SEC
	ADDI A,9	;SET PHASE RELATIVE TO SLOW CLOCK (MAGIC NUM, <14.&>0)
	MOVNS A		;NEG FOR ABSOLUTE SLEEP FEATURE
	SKIPN OMSLPT(OMODE)
	 SKIPN B,JCLBP	;ON PRINTING DEVICES, AVOID SLEEPING IF JCL COMMANDS YET UNPROCESSED.
	  JRST ASLEE1
	ILDB B,B
	CAIE B,^C	;BUT IF REMAINING JCL IS JUST THE TERMINATOR, FLUSH IT RIGHT AWAY AND DO SLEEP.
	 CAIN B,^M
	  SETZM JCLBP
	SKIPN B
	 SETZM JCLBP
	SKIPE JCLBP
	 JRST BEG
ASLEE1:	SKIPN SPCCNT	;IF USER TYPED AHEAD A SPACE, DON'T SLEEP.
	 .SLEEP A,	;ZZ ZZ ZZ
	SOSGE SPCCNT
	 AOS SPCCNT	;IF A SPACE MADE US NOT SLEEP, COUNT SPACE AS EATEN.
	JRST BEG

OMENDT:	PUSHJ P,CRR2	;TTY	;2 CR/LF'S
	JRST GEEND	;DATAPOINT
	JRST DISEND	;DIS
	CTYPE ^L	;LPT
	JRST GEEND	;WIDE DISPLAY
	PUSHJ P,CRR2	;WIDE TTY	;2 CR/LF'S
OMODER OMENDT

OMSLPT:	0
	1
	1
	0
	1
	0
OMODER OMSLPT

GEEND:	MOVE A,MPAGEP(OMODE)	;GE TERMINATION
	CAMLE A,PAGEPOS	;IF HAVEN'T WRAPPED AROUND YET,
	 ATYPE [ASCIZ/E/] ;CLEAR REST OF SCREEN.
	JRST UTPKR0

.SEE MDTAB2	; CHANGE THIS TOO OR 340 ROUTINES WILL LOSE!

DISEND:	PUSH P,MPAGEP(OMODE)
	MOVEI A,2
	ADDB A,MPAGEP(OMODE)
	PUSHJ P,VALIGN	;CLEAR UNUSED PART OF SCREEN
	MOVE A,[440600,,[SIXBIT /JNMUHT?OVIDSGACL*%RBXY!/]]
			;STRING GOES ON BOTTOM OF SCREEN
DISND2:	ILDB B,A	;GET CHAR
	CAIN B,'!	;SKIP IF NOT END
	JRST DISND3	;END
	CTYPE 40(B)	;OUTPUT CHAR AS ASCII
	ALIGN 3,	;PLUG IN 3 SPACES
	JRST DISND2	;LOOP

DISND3:	POP P,MPAGEP(OMODE)
	JRST UTPKR0

;MOVE DOWN PAGE UNTIL AT LINE NUMBER IN A
VALIGN:	SUB A,PAGEPOS
	JUMPLE A,CPOPJ
	PUSHJ P,CRR
	SOJA A,.-2

;TERMINATE CHARACTER OUTPUT
CHEND:	MOVEI B,^C	;SET UP AN END-OF-FILE CHARACTER
CHEND1:	HLRZ A,OBUFP
	CAIN A,010700	;IS CURRENT ACTIVE WORD IN BUFFER FULL?
	JRST CHEND2	;YES, LAST WORD HAS BEEN FILLED OUT
	IDPB B,OBUFP	;NO, INSET AN EOF
	JRST CHEND1

CHEND2:	MOVEI U3,OBUF
	SUB U3,OBUFP
	SOS U3
	HRLS U3
	HRRI U3,OBUF
	XCT OMODET(OMODE)	;OUTPUT ALL OF BUF THAT IS ACTIVE
	POPJ P,

;STOP OUTPUT IF TOO NEAR BOTTON OF PAGE
VCHK:	MOVE U3,PAGEPOS
	CAMGE U3,MPAGEP(OMODE)	;SKIP IF CURRENT POSITION > PAGE SIZE
	POPJ P,		;OK, EXIT
	JRST PUTPKR	;GO TO STOP OUTPUT


TSINT2:	.RESET TYOC,
	CAIE I1,"Q
	CAIN I1,"P
	 .IOT NTYO,I1
	CAIE I1,^B
	CAIN I1,^E
	 .IOT NTYO,I1
	CAIE I1,^Y
	CAIN I1,^N
	 .IOT NTYO,I1
	CAIN I1,"Q
	 JRST [.LOGOUT
	       .BREAK 16,160000]	;PER AS SUGGESTION
	CAIN I1,"P
	 PUSHJ P,PROCED
	CAIN I1,^C
	 PUSHJ P,PROCED
	CAIN I1,^G
	 JRST [SETZM NAMESW
	       POPJ P,]	       
	CAIN I1,^B
	 JRST LPTON
	CAIN I1,^E
	 JRST LPTOFF
	CAIN I1,^Y
	 JRST DISON
	CAIN I1,^N
	 JRST DISOFF
	CAIN I1,177
	 JRST TSRET2
TSINNM:	MOVSI I2,-MAXMOD
	 CAME I1,MDTAB2(I2)
	AOBJN I2,.-1
	HRRZ A,I2
	CAIN A,%BACK
	 JRST TSINT5
	MOVE A,RUUFLG
	MOVEM A,LRUUFL
	SETZM JHFLAG
	SETZM RUUFLG
	MOVE A,RUUIND
	MOVEM A,LRUUIND
	SKIPGE A,UUIND
	 JRST TSINT4
	SETOM RUUFLG
	MOVEM A,RUUIND
TSINT4:	SETOM UUIND
	CAILE I2,0
	 .IOT NTYO,[^G]
	CAIG I2,0
	 JRST [SKIPL NAMESW
	      .IOT NTYO,I1
	      JRST .+1]
	CAILE I2,0
	 JRST [AOS (P)
	       POPJ P,]
	MOVE A,MODE
	MOVEM A,LMODE
	MOVEM I2,MODE
TSRET2:	.DISMISS [BEG1]

TSINT5:	MOVE A,LMODE	;RESTORE TO PREVIOUS MODE
	EXCH A,MODE
	MOVEM A,LMODE
	MOVE A,LRUUIN
	EXCH A,RUUIND
	MOVEM A,LRUUIN
	MOVE A,LRUUFL
	EXCH A,RUUFLG
	MOVEM A,LRUUFL
	JRST TSRET2

PROCED:	CAIE OMODE,4
	 CAIGE OMODE,2
	  JRST [VALRET [ASCIZ /J/]
		POPJ P,]
	VALRET [ASCIZ /:PROCED /]	;RETURN TO DDT TO RESTART PEEK
	POPJ P,

TSINDK:	SETCMM DSKZER	
	SKIPE DSKZER
	 .IOT NTYO,["1]
	.IOT NTYO,["@]
	POPJ P,

TSINDC:	SETCMM DSKCON
	SKIPE DSKCON
	 .IOT NTYO,["1]
	.IOT NTYO,["&]
	POPJ P,

TSINHS:	SETCMM HSTEXP
	SKIPE HSTEXP
	 .IOT NTYO,["1]
	.IOT NTYO,["=]
	POPJ P,

TSINRX:	MOVE A,ORADIX
	TRC A,2
	PUSH P,A
	TRNE A,2
	 JRST [PUSHJ P,OCTA
	       JRST TSINR1]
	PUSHJ P,DECA
TSINR1:	.IOT NTYO,["#]
	POP P,A
	MOVEM A,ORADIX
	POPJ P,

TSINTZ:	SKIPGE A,UUIND		;ARG SUPPLIED TO Z COMMAND ??
	 POPJ P,
	MOVEM A,DOZE		;TIME FOR SLEEPING
	SETOM UUIND		;SET "NO ARG TYPED" FLAG
	.IOT NTYO,["Z]		;SO USER KNOWS HE'S HEARD
	POPJ P,

TSINTL:	TRNN I1,100000
	 .LOSE 1000
	SETZM LPBLK
	.LTPEN LPBLK
	SKIPN LPBLK+1	;NUMBER OF TIMES SEEN
	JRST TSINTX
	HLRZ I2,LPBLK	;Y
	HRRZ I1,LPBLK	;X
	CAIL I2,300
	JRST TSINL1
	IDIVI I1,12.*4	;LIGHT-PEN HIT IN LOWER (MODE) AREA
	CAME I1,MODE
	CAILE I1,MAXMOD

TSINTX:	.DISMISS TSINT+1
	PUSH P,A
	HRRZ A,I1
	CAIN A,%BACK
	JRST TSINX1
	MOVE A,MODE
	MOVEM A,LMODE
	MOVEM I1,MODE
TSINX2:	POP P,A
	.DISMISS [BEG]

TSINX1:	MOVE A,LMODE
	EXCH A,MODE
	MOVEM A,LMODE
	JRST TSINX2

TSINL1:	SUBI I1,12.	;LIGHT-PEN HIT IN UPPER (USER) AREA
	IDIVI I1,12.*8
	MOVEM I1,LPBLK+1
	HLRZ I1,LPBLK
	SUBI I1,1700
	MOVNS I1
	IDIVI I1,18.
	SOS I1
	IMULI I1,6
	ADD I1,LPBLK+1
	MOVE I2,MODE
	SKIPL LPCHPT
	 JRST TSINTX
	MOVEM I1,LPCHPT
	.DISMISS [BEG]

TSINTQ:	SETZM JCLBP	;ANY TYPEIN EXCEPT **MORE**-PROCEDING RUBOUT FLUSHES
			;UNPROCESSED JCL.
TSINTO:	CAIN I1,%TXTOP+"H
	  MOVEI I1,"?		   ;Help key should work!!
	CAILE I1, 140	;LOWER CASE CAN GET IN FROM JCL
	 CAIN I1, 177
	  CAIA
	   SUBI I1, 40
	SKIPGE GUNFLG
	 JRST GUNNEM
	SKIPE NAMESW
	 JRST TSNAME
TSINAG:	CAIN I1,";
	 JRST TSSEMI
	CAIN I1,177
	 JRST RUBNUM
	CAIN I1,40	;SPACE INCREMENTS COUNT OF SPACES
	 JRST [	AOS SPCCNT
		HRRZ I1,TSINT+1	;IF SLEEPING WAITING FOR A CHARACTER,
		CAIE I1,DSKHNG+1
		 CAIN I1,AHANG+1	
		  JRST TSINTH
		CAIN I1,ASLEE1+1
		 AOS TSINT+1	;NOTICE THIS ONE.
		POPJ P,]
	SETZM SPCCNT	;ANYTHING ELSE ZEROES COUNT OF SPACES.
	CAIN I1,^Z
	JRST [.CALL [SETZ ? SIXBIT /RELOAD/ ? SETZ]
	       .LOGOUT
	      JRST .+1]
	CAIN I1,"@
	 JRST TSINDK
	CAIN I1,"Z
	 JRST TSINTZ
	CAIN I1,"#
	 JRST TSINRX
	CAIN I1,"=
	 JRST TSINHS
	CAIN I1,"&
	 JRST TSINDC
	CAIN I1,12.
	 JRST TSINCL
	CAIN I1,".
	 JRST TSFOO
	CAIL I1,"0
	 CAILE I1,"9
	  JRST TSINT2
	SKIPGE I2,UUIND
	SETZ I2,
	ASH I2,3
	.IOT NTYO,I1		;OUTPUT NUMBER IMMEDIATE
	ADDI I2,-"0(I1)
	JRST TSFOO1
TSFOO:	SKIPGE I2,LNAMES
	JRST [SETOM NAMESW
	      SETOM ONAMSW
	      POPJ P,]
	SETZM NAMESW
	MOVE I2,RUUIND
TSFOO1:	MOVEM I2,UUIND
	POPJ P,

TSSEMI:	SETZM NAMEHK		;CLEAR FLAGS
	SETZM NAMCOM
	MOVE I2,[440600,,NAMEHK]
	MOVEM I2,NAMEBP		;AND BP
	MOVEI I1,1
	MOVEM I1,NAMESW		;SET THE 'IN SEMI MODE' FLAG (+1)
	POPJ P,	

TSSEM1:	.IOT NTYO,I1
TSSEM2:	MOVE I1,NAMESW
	CAME I1,[-2]		;HAVE WE GOT A NAME YET?
	 POPJ P,	 	;NO KEEP GOING
	SETOM NAMESW
	MOVE I1,NAMCOM		;GET BACK THE COMMAND
	CAIN I1,"E
	 JRST TSEFND
TSSEM3:	SETZM ONAMSW
	JRST TSINNM		;AND DO THE RIGHT THING	

; SPECIAL E MODE HACK FOR GETTING SYMBOL NAME

TSEFND:	MOVE I2,[CAME A,@EONLY]
	SKIPLE ESW
	 MOVEM I2,EINST
	SOSGE ESW
	 JRST TSSEM3
	SETZM EONLY
	SETZM EWORD
	SETZM SQUOZR		;SLOT FOR SQUOZE'S NAME
	MOVE I1,NAMEHK
TSELP:	SETZ I2,		;FOR NEXT CHARACTER
	ROTC I1,6		;CHARACTER MOVED INTO RH OF I1
	JUMPE I2,TSEDON		;DONE
	CAIL I2,'0		;IS IT NUMERIC?
	 CAILE I2,'9
	  JRST TSENNM
	SUBI I2,'0-1		;SQUOZIFY THE NUMBER
	JRST SQUEEZ

TSENNM:	CAIL I2,'A		;IS IT A LETTER?
	 CAILE I2,'Z
	  JRST TSENAN
	SUBI I2,'A-11.		;SQUOZIFY THE LETTER
	JRST SQUEEZ

TSENAN:	MOVEI I2,37.		;GET SPECIAL CHARACTERS
	CAIN I2,'.
	 AOJ I2,
	CAIN I2,'$
	 ADDI I2,2
	CAIN I2,'%
	 ADDI I2,3
	CAIN I2,37.
	 JRST TSEILL		;NON-SQUOZE CHARACTER
	
SQUEEZ:	EXCH I1,SQUOZR		;DO THE SQUOZING
	IMULI I1,40.
	ADD I1,I2
	EXCH I1,SQUOZR
	AOS I2,EONLY
	CAIE I2,6
	 JRST TSELP
	JRST TSEWIN

TSEDON:	MOVE I2,EONLY
	CAIE I2,6
	 JRST [SETZ I2,
	       JRST SQUEEZ]
TSEWIN:	MOVE I1,[-LUSRT,,USERT]
TSEDLP:	MOVE I2,1(I1)		;SEE IF WE HAVE THE SYMBOL
	CAMN I2,SQUOZR
	 JRST [MOVE I2,(I1)
	       MOVEM I2,EONLY
	       MOVNI I1,2
	       MOVEM I1,NAMESW
	       SETZM NAMEHK
	       MOVE I2,[440600,,NAMEHK]
	       MOVEM I2,NAMEBP		;AND BP
	       POPJ P,]
	AOBJN I1,.+1
	AOBJN I1,TSEDLP		;FALL OUT IF NO SYMBOL
	SKIPA A,[ASCIZ /?U?/]
TSEILL:	 MOVE A,[ASCIZ /?CH?/]
	PUSHJ P,NAMA
	SETOM EONLY
	SETZM NAMESW
	POPJ P,

TSNAME:	CAIN I1,177		;RUBOUT?
	 JRST RUBOUT	
	SKIPE ONAMSW
	 JRST TSLNAM
	SKIPN NAMCOM		;COMMAND SET?
	 JRST [.IOT NTYO,[";]
	       CAMN I1,";
	        POPJ P,		;NO SEMI COMMANDS, PLEASE
	       MOVEM I1,NAMCOM	;NO. MAKE THIS THE COMMAND
	       .IOT NTYO,I1
	       POPJ P,]
	CAIE I1,40		;END COMMAND ON SEPARATOR
	 CAIN I1,^I
	  JRST TSSEM1
	CAIE I1,^M
	 CAIN I1,^J
	  JRST TSSEM1
	SKIPL EONLY
	 JRST TSNAM2
TSNAM1:	MOVE I2,NAMEHK
	TRNE I2,77		;6 CHARACTERS IN WORD?
	 POPJ P,		;YES. IGNORE OTHERS
	CAIL I1,40
	 .IOT NTYO,I1		;PRINT CHARACTER IF LEGAL
	MOVNI I2,2
	MOVEM I2,NAMESW		;SET NAMESW TO -2 TO INDICATE NAME COMING
	SUBI I1,40		;TO SIXBIT
	JUMPL I1,CPOPJ		;NO ILLEGAL CHARS
	IDPB I1,NAMEBP		;PUT IT IN HACK WORD
	POPJ P,

TSNAM2:	SETZ I2,
	CAIN I1,">
	 MOVE I2,[CAMG A,@EONLY]
	CAIN I1,"<
	 MOVE I2,[CAML A,@EONLY]
	CAIN I1,"#
	 MOVE I2,[CAMN A,@EONLY]
	CAIN I1,"&
	 MOVE I2,[PUSHJ P,EAND]
	CAIN I1,54
	 JRST [SKIPL EWORD
	        JRST [MOVSI I2,400000
		      IORM I2,EWORD
		      JRST TSNAM3]
	       HRRZ I2,NAMEHK
	       HRRM I2,EWORD
	       SETZM NAMEHK
	       JRST TSNAM3]
	SKIPE I2
	 JRST [MOVEM I2,EINST
	       JRST TSNAM3]
	CAIL I1,"0
	 CAILE I1,"9
	  JRST TSNAM1
	MOVE I2,NAMEHK
	LSH I2,3
	ADDI I2,(I1)-"0
	MOVEM I2,NAMEHK
	MOVNI I2,2
	MOVEM I2,NAMESW
TSNAM3:	.IOT NTYO,I1
	POPJ P,

TSLNAM:	MOVEM I1,NAMCOM
	.IOT NTYO,[";]
	.IOT NTYO,I1
	.IOT NTYO,[" ]
	PUSH P,I1
	MOVE I2,[440600,,NAMEHK]
TSLNLP:	ILDB I1,I2
	JUMPE I1,TSLNM1
	ADDI I1,40
	.IOT NTYO,I1
	TRNN I2,760000
	 JRST TSLNLP
TSLNM1:	.IOT NTYO,[" ]
	POP P,I1
	JRST TSSEM3

RUBOUT:	HLRZ I1,NAMEBP
	CAIE I1,10600
	 CAIN I1,440600		;FLUSH THIS MODE AT START OF WORD
	  JRST [SETZM NAMESW	
		.DISMIS [BEG1]]
	MOVE I1,NAMEBP	
	LDB I2,I1		;GET THE RUBBED OUT CHARACTER
	ADDI I2,40		;TO ASCII
	.IOT NTYO,I2		;PRINT IT
	SETZ I2,
	DPB I2,I1		;DEPOSIT A ZERO
	DBP I1			;DECREMENT THE BP
	MOVEM I1,NAMEBP		;AND SAVE IT
	POPJ P,	

RUBNUM:	SKIPGE I1,UUIND
	 .DISMIS [BEG1]
	LSHC I1,-3		;RUBOUT A NUMERICAL ARGUMENT
	MOVEM I1,UUIND
	LSH I2,-41
	ADDI I2,"0
	.IOT NTYO,I2
	SKIPN UUIND
	 SETOM UUIND
	POPJ P,

TSINCL:	MOVE I2,[-1,,[ASCIC /C/]]
	.IOT TYOC,I2
	SUB P,[1,,1]
 	.DISMISS [BEG]

TSINTH:	AOS TSINT+1
	AOS TSINT+1
	POPJ P,

;INTERRUPT AT BOTTOM OF PAGE.
TSINTP:	IRPC X,,--More--
		.IOT NTYO,["X]
	TERMIN
	SOSL SPCCNT	;ANY SPACES TYPED AHEAD => CONTINUE.
	 JRST TSINTR
	SETZM SPCCNT
	.IOT TYIC,I1	;ELSE WAIT FOR CHARACTER.
	CAIE I1,40	;SPACE SAYS CONTINUE
	 JRST TSINTJ	;ANYTHING ELSE HAS NORMAL EFFECT.
TSINTR:	.IOT NTYO,[^M]
	.IOT NTYO,[^J]
	AOS PAGEPOS
	.DISMISS TSINT+1

MORON:	.CALL TTYGET		;TURN ON MORE INTERRUPT AGAIN
 	 .LOSE 1000
	TLZ C,%TSMOR
	.CALL TTYSET
	 .LOSE 1000
	SETZM MORFLG
	JRST TSINT0

MPVCHK:	HRRZ I1,TSINT+1
	CAIN I1,MPVIOT
	 .DISMIS I1		;HO-HUM, ANOTHER DAY, ANOTHER MPV
	.VALUE [ASCIZ /:MPV not handled
/]		


LPTON:	.OPEN LPTC,LPTF
	 JRST LPTOFF
	CAIE OMODE,2
	 JRST LPTON2
	.CLOSE DISC,
	.CLOSE DISWC,
LPTON2:	HRROI I1,[.BYTE 7 ? ^L ? ^M ? ^M ? ^M ? ^M]
	.IOT LPTC,I1
	MOVEI OMODE,3
	JRST TSRET2

LPTOFF:	.CLOSE LPTC,
TSRET3:	.RESET TYOC,
	.DISMISS [INITY]

DISON:	SETZM DISNOT
	PUSHJ P,ODIS
	JRST DISOFF
	CAIE OMODE,3
	 JRST DISON2
	.CLOSE LPTC,
DISON2:	MOVEI OMODE,2
	JRST TSRET2

DISOFF:	SETOM DISNOT
	.CLOSE DISC,
	.CLOSE DISWC,
	JRST TSRET3

EXPL:	ATYPE EXPLAN
	JSP U,UTPKR
	@DOZE

EXPLAN:	ASCIZ \Modes:
  A  Arpanet sockets
  B  Back
  C  Channel/buffer (channel#)
  D  Directory (channel#)
 ;E  Eval & test job variable
  F  Fast 1-line (job#)
  G  Swap variables
  H  Histogram (tty) / graph (340) of memory use
  I  IMX 
  J  Joint S+C+A (job#)
  K  Chaos net
  L  tty Lines (job#)
  M  Memory (job#)
  N  Normal
  O  Output (tty#)
  R  Running jobs
  S  Single tree (job#)
  T  Translations
  U  Utape??
  V  job Variables
  ?  This
  %  Scheduler History
  $  Swapper History
  !  Page-in History
IO Control:
  ^B Output to .PEEK. >			^Y Use 340
  ^E Stop output to .PEEK. >		^N Stop 340
Etc:
  P  Proceed
  Q  Quit
  Z  Set doze time
  .  Current argument
  #  Toggle radix (8/10)
  @  Toggle ^@ abort in <n>C mode
  &  Toggle output hang in <n>C mode
  =  Toggle host name expansion
  ;  SIXBIT name input mode
\

LOSER:	ATYPE [ASCIZ /
User number /]
	ONUM RUUIND
	ATYPE [ASCIZ / does not exist.
/]
	JRST PUTPKR

USER:	MOVE U,RUUIND
	IMUL U,LUBLK
	CAML U,@USRHI
	 JRST LOSER
	6TYPE @UNAME
	CTYPE 40
	6TYPE @JNAME
	CTYPE 40
	6TYPE @USYSNM
	CTYPE 40
	6TYPE @USYSN1
	CTYPE 40
	PUSHJ P,USTATUS	;(USTATUS ALSO INTERPRITS RPCL)
	PUSHJ P,CRR
	ATYPE [ASCIZ /UPC  =/]
	ONUM 12.,@UPC
	ALIGN 22.
	ATYPE [ASCIZ /SV40 =/]
	ONUM 12.,@SV40
	ALIGN 44.
	ATYPE [ASCIZ /SUUOH=/]
	ONUM 12.,@SUUOH
	PUSHJ P,CRR
	ATYPE [ASCIZ /UEXIT=/]
	ONUM 12.,@SUEXIT
	ALIGN 22.
	ATYPE [ASCIZ /SUPRO=/]
	ONUM 12.,@SUPPRO
	ALIGN 44.
	ATYPE [ASCIZ /HUSRAD/]
	DNUM 12.,@HUSRAD
	PUSHJ P,CRR
	ATYPE [ASCIZ /FLSIN=/]
	ONUM 12.,@FLSINS
	ALIGN 22.
	ATYPE [ASCIZ /NSWPGS/]
	DNUM 12.,@NSWPGS
	ALIGN 44.
	ATYPE [ASCIZ /MASK =/]
	ONUM 12.,@MSKST
	PUSHJ P,CRR
	ATYPE [ASCIZ /MASK2=/]
	ONUM 12.,@MSKST2
	ALIGN 22.
	ATYPE [ASCIZ /PIRQC=/]
	ONUM 12.,@PIRQC
	ALIGN 44.
	ATYPE [ASCIZ /IFPIR=/]
	ONUM 12.,@IFPIR
	PUSHJ P,CRR
	ATYPE [ASCIZ /TTYTB=/]
	ONUM 12.,@TTYTBL
	ALIGN 22.
	ATYPE [ASCIZ /JTMU =/]
	ONUM 12.,@JTMU
	MOVE A,@TIME
	SUB A,@LUBTM
	IDIVI A,30.
	JUMPE A,USER1A
	ALIGN 44.
	ATYPE [ASCIZ/LUBTM=/]
	PUSHJ P,TMPT
USER1A:	PUSHJ P,CRR
	CAIL OMODE,1
	PUSHJ P,USERMD
	MOVSI C,-16.
USER2:	HRRZ A,C
	ONUM 2,A
	JUMPE OMODE,USER3
	MOVEI A,@AC0S
	ADD A,U
	ONUM 14.,(A)
USER3:	MOVEI A,@IOCHNM
	ADD A,U
	ONUM 14.,(A)
	MOVEI B,@IOCHST
	ADD B,U
	ONUM 14.,(B)
	ALIGN 1,
	HRRZ B,(A)		; CHANNEL OPEN?
	JUMPE B,USERFL
	MOVE A,RUUIND
	TRO A,400000		; JOB ARGUMENT
	HRRZ B,C		; CHANNEL NUMBER
	.CALL [SETZ
	       SIXBIT /RFNAME/
	       A
	       B
	       MOVEM RHIST
	       MOVEM RHIST+1
	       MOVEM RHIST+2
	       MOVEM RHIST+3
	       SETZM RHIST+4]
	JRST USERFL
	SKIPN A,RHIST
	 JRST USERFL
	CAMN A,[SIXBIT /NET/]
	 JRST UNETCH
	CAMN A,[SIXBIT /MSP/]
	 JRST UMSPCH
	MOVEI A,"R
	MOVEI D," 
	MOVE B,RHIST+4
	 TRNE B,1
	MOVEI A,"W
	 TRNE B,2
	MOVEI D,"B
	CTYPE (A)
	CTYPE (D)
	ALIGN 48.
CHPRT:	6XTYPE RHIST		; DEVICE
	CTYPE ":
	SKIPN RHIST+3		; SNAME VALUE
	 JRST CHPRT1
	6XTYPE RHIST+3		; SNAME/DIRECTORY
	CTYPE ";
CHPRT1:	6XTYPE RHIST+1		; FILE NAME 1
	CTYPE 40
	6XTYPE RHIST+2		; FILE NAME 2
USERFL:	PUSHJ P,CRR
	AOBJN C,USER2
	JRST PUTPKR

UNETCH:	ALIGN 48.
	6XTYPE RHIST
	CTYPE ":
	CTYPE " 
	MOVE A,RHIST+3
	TLZ A,(SETZ)		;A gets host number
	PUSHJ P,NETWRK"STDHST	;Convert to standard form
	SETZ B,
	PUSHJ P,OHOST0		;Output it
	JRST USERFL

;PRINT HOST NUMBER (OR INDEX) IN A, WIDTH IN B
OHOST:	SKIPN IMPHTN		;NEW SYSTEM?
	 JRST OHOST0
	PUSH P,B
	PUSH P,T
	MOVE T,A
	MOVE A,@IMPHTN		;GET NEW-FORMAT HOST# INDEXED FROM T
	POP P,T
	POP P,B
OHOST0:	TLZ A,777000		;CLEAR POSSIBLE NETWORK NUMBER
	SKIPN HSTEXP		;EXPAND?
	 JRST OHLOS1		;NO
	TLO A,NETWRK"NW%ARP_9	;INSERT CORRECT NETWORK NUMBER
	PUSH P,X
	PUSH P,U
	PUSH P,D
	PUSH P,C
	PUSH P,B
	PUSH P,A
	SKIPL HSTSIN		;GOT HOST FILE?
	 JRST OHOST1		;YES
	.IOPUSH DIRC,		;NO, TRY TO GET IT
	MOVEI A,HSTDOC_-12
	MOVEI B,DIRC
	PUSHJ P,NETWRK"HSTMAP
	 JRST [.IOPOP DIRC, ? JRST OHLOS0]
	.IOPOP DIRC,
	SETZM HSTSIN
;;;; HSTSRC(B:host#) => A:TIP_flag,,name_p, D:site_p
OHOST1:	MOVE B,(P)		;HOST#
	PUSHJ P,NETWRK"HSTSRC	;A -> NAME, D -> SITE
	 JRST OHLOS0		;NOT FOUND
	ATYPE (A)		;FOUND, TYPE IT
	POP P,A
	POP P,B
	POP P,C
	POP P,D
	POP P,U
	POP P,X
	POPJ P,

OHLOS0:	SETOM HSTSIN
	POP P,A
	POP P,B
	POP P,C
	POP P,D
	POP P,U
	POP P,X
OHLOS1:	TLZ A,777000		;CLEAR POSSIBLE NETWORK NUMBER
	MOVE D,[ONUM A]
	DPB B,[270600,,D]
	XCT D
	POPJ P,

UMSPCH:	SETZ A,
	MOVE D,MSUSER
UMSPC1:	CAIL A,40
	 JRST UMSPLS
	MOVE B,D
	ADD B,A
	CAME U,(B)
	 AOJA A,UMSPC1
	MOVE B,MSREAD
	ADD B,A
	SKIPN (B)
	 JRST UMSPWR
	CTYPE "R
	ALIGN 48.
	6XTYPE RHIST
	CTYPE ":
	6XTYPE (B)
	CTYPE " 
	MOVE B,MSRED2
	ADD B,A
	6XTYPE (B)
	JRST USERFL		
UMSPWR:	CTYPE "W
	ALIGN 48.
	6XTYPE RHIST
	CTYPE ":
	MOVE B,MSWRIT
	ADD B,A
	6XTYPE (B)
	CTYPE " 
	MOVE B,MSWRT2
	ADD B,A
	6XTYPE (B)
	JRST USERFL

UMSPLS:	ATYPE [ASCIZ /MSP: LOSER??/]
	JRST USERFL

USERMD:	ATYPE [ASCIZ / #/]
	ALIGN 12.
	ATYPE [ASCIZ /AC's/]
	ALIGN 24.
	ATYPE [ASCIZ /IOCHNM/]
	ALIGN 38.
	ATYPE [ASCIZ /IOCHST/]
	JRST CRR

;"HERE TO HACK ERR DEVICE AND DIRECTORIES"

ERRDEV:	MOVEI U,0
	SETOM ERRDVF
ERRDV0:	CAML U,@USRHI
	 POPJ P,
	SKIPN @UNAME
	 JRST ERRDV9
	SKIPN JHFLAG
	 JRST ERRDV8
	PUSHJ P,IDXLKP
	 JRST ERRDV9
ERRDV8:	HRRZ C,U
	MOVEI A,@IOCHNM
	HRLI A,-20
	PUSHJ P,ERRDV1
	AOBJN A,.-1
	HRL A,LUIOP
	PUSHJ P,ERRDV1
	AOBJN A,.+1
	AOBJN A,.-2
ERRDV9:	ADD U,LUBLK
	JRST ERRDV0

ERRDV1:	HRRZ B,(A)
	CAMGE B,DIRCHN
	 POPJ P,
	SUBI B,4
	CAML B,DIRCHN
	 POPJ P,
	SKIPN RNDFLG	;ONLY PRINT HEADER IF ANYTHING'S THERE
	 SKIPN JHFLAG
	  JRST ERRDVX
	PUSHJ P,CRR
	ATYPE DSKTOP
	SETOM RNDFLG
	SETZM ERRDVF
ERRDVX:	SKIPN JHFLAG
	 JRST ERRDV3	;DONT PRINT LEADING CR IN 'C' MODE
	
ERRDV3:	HRRZ B,A
	MOVE C,U
	SUBI B,@IOCHNM
	CTYPE "C
	ONUM 2,B
	IDIV C,LUBLK
	ONUM 4,C
	CTYPE 40
	6TYPE @UNAME
	CTYPE 40
	6TYPE @JNAME
	ALIGN 45.
	.CALL [	SETZ	
		'RFNAME
		MOVEI 400000(C)
		B
		MOVEM X
		MOVEM B
		MOVEM C
		SETZM D]
	 JRST [	ATYPE [ASCIZ/ON IO PDL?/]
		JRST ERRDV2 ]
	CAMN X,[SIXBIT /DSK/]
	 JRST ERRDVN	 	 
	6XTYPE X
	CTYPE ":
ERRDVN:	JUMPE D,.+3
	 6XTYPE D
	 CTYPE ";
	6XTYPE B
	CTYPE " 
	6XTYPE C

ERRDV2:	PUSHJ P,CRR
	POPJ P,


;INPUT AND OUTPUT MULTIPLEXORS DISPLAY
MPXR:	SKIPL XCHFLG
	JRST MPXR2
MPXR3:	6XTYPE [SIXBIT /IMPX/]
	MOVSI A,-10
	ALIGN 4,
	CTYPE "0(A)
	AOBJN A,.-2
	MOVSI D,-200
	MOVE X,[441400,,@MPXBUF]
	MOVEI C,0
MPYRL1:	TRNE D,7
	JRST MPYRL2
	PUSHJ P,CRR
	LDB B,[30400,,D]
	ONUM 2,B
	ALIGN 2,
MPYRL2:	ILDB B,X
	TLNE X,770000
	JRST MPYRL3
	HRLI X,441420
	AOS C
MPYRL3:	ONUM 5,B
	AOBJN D,MPYRL1
	JRST PUTPKR

MPXR2:	.OPEN IMXC,IMXFL
	JRST MPXR4
	MOVEI C,0
	.IOT IMXC,C	;WAIT FOR FIRST IMX DATA
	SETOM XCHFLG
	JRST MPXR3

IMXFL:	4,,(SIXBIT /IMX/)
	.

MPXR4:	ATYPE [ASCIZ/IMX not available/]
	JRST PUTPKR


; I SWEAR I'LL BREAK THE NECK OF THE ASSHOLE WHO REMOVES ANY 
; CODE HERE WITHOUT CONSULTING ME AND OBTAINING PERMISSION.  (MARC)

PPWINR:	MOVE B,[-100,,RHIST+400]
LPP:	SKIPN C,1(B)
	 JRST CPOPJ
	CAIN A,(C)
	JRST FOUND1
	ADD B,[2,,2]
	JUMPL B,LPP
FOUND1:	AOS (P)
	MOVE B,(B)
	HLRE A,C
	MOVNS A
	JRST CPOPJ

DEFINE NPAC X
	MOVEI C,X
	MOVEI A,@AC0S
	ADD A,U
	SKIPLE (A)
	 POPJ P,
TERMIN

DEFINE NEGAC X
	MOVEI C,X
	MOVEI A,@AC0S
	ADD A,U
	SKIPL (A)
	 POPJ P,
TERMIN

MEMHAK:	MOVE A,[4,,4]
	MOVEM A,CONST
	MOVE A,[-2,,A]
	MOVEM A,CONST2
	SETZM MUDFLG
	MOVE U,RUUIND
	IMUL U,LUBLK
	CAML U,@USRHI
	 JRST MHISTN
	PUSHJ P,MUDDLE		;CHECK FOR A MUDDLE
	 JRST MEMHK1
	.CALL USROPN		;OPEN THE JOB
	 JRST MHISTN
	SETOM MUDFLG
MUDIN:	MOVEI F,UUOLOC		;FIND UUOH LOCATION
	PUSHJ P,MUDLOC
	HRRZ F,D
	ADDI F,1		;FIND UUOH+1
	PUSHJ P,MUDLOC
	MOVEI F,PVEC55		;GET PURVEC+1 = 1567
	CAMN D,[JRST 702470]	;JRST UUOPUR = MUD54, ELSE MUD55
	 MOVEI F,PVEC54	 	;GET PURVEC+1 = 1367
	PUSHJ P,MUDLOC
	MOVEI F,(D)
	.CALL USRACC		;ACCESS TO PURE VECTOR
	 JRST MHISTN
	MOVE C,[-100,,RHIST+400]
PLP:	MOVE F,[-2,,A]
	.CALL USRIOT
	 JRST MHISTN
	JUMPE A,PLP2
	JUMPE B,PLP1
	JUMPGE C,MHISTN
	MOVEM A,(C)
	ASH B,-10.
	MOVEM B,1(C)
	ADD C,[2,,2]
PLP1:	MOVE F,CONST2
	.CALL USRIOT
	 JRST MHISTN
	ADD D,CONST
	JUMPL D,PLP
PLP2:	SETZM 1(C)
	JRST MEMHK1

MUDLOC:	.CALL USRACC
	 JRST MUDLC1
	MOVE F,[-1,,D]
	.CALL USRIOT
	 JRST MUDLC1
	POPJ P,

MUDLC1:	POP P,
	JRST MHISTN

MUDDLE:	MOVE C,@UPC		;CHECK IF THESE ARE USER AC'S
	TLNN C,%PCUSR
	 POPJ P,
	NEGAC 13
	NPAC 14
	NPAC 15
	NPAC 16
	NEGAC 17
	JRST POPJ1

MEMHK1:	HRLZI T,-400		;HERE FOR nmM MODE
	SETZM SHRTOT
	MOVE U,RUUIND
	ADDI U,400000
	MOVEI B,0		;B HAS PAGE COUNT 

CORLUP:	.CALL [SETZ		;LOOP THROUGH PAGES
	       SIXBIT "CORTYP"
	       U
	       B
	       MOVEM A
 	       MOVEM V2
	       MOVEM V3
	       SETZM V4]
	JRST MHISTN
	JUMPE A,CORLP1
	SKIPLE V2
	AOS SHRTOT
CORLP1:	LDB F,[900,,V2]	;GARBLE THE RESULT INTO ONE WORD
	DPB F,[220900,,A]
	HLRZ F,V4
	IOR A,F
	LDB F,[900,,V3]
	DPB F,[900,,A]
	LDB F,[900,,V4]
	DPB F,[110600,,A]
	MOVEM A,RHIST(T)
	AOS B
	AOBJN T,CORLUP
	MOVE D,SHRTOT	;D HAS TOTAL SHARED
	MOVE U,RUUIND
	MOVE C,U
	IMUL U,LUBLK
	ATYPE HTOP
	SKIPE UWRKST
	 ATYPE HTOPWS
	XCT CRR
	MOVE A,@NMPGS
	SUB A,@NSWPGS	;PUT MEM TOTAL IN A
	PUSHJ P,PMEML0	;PRINT MEMORY LINE (AS IN M MODE)
	ATYPE MTOP2
	HRLZI T,-400
	MOVE X,T
	ADD X,[1,,1]

CORCM1:	SKIPN MUDFLG
	JRST CORCMP
	SETZM V3
	HRRZ A,T
	PUSHJ P,PPWINR
	JRST CORCMP
	HRLI A,(A)
	ADD X,A
	MOVEM B,V3
	JRST CORDIF
	



CORCMP:	HLLZ A,RHIST(T)	;CHECK IF PAGES LOOK THE SAME
	HLLZ B,RHIST(X)
	CAME A,B
	JRST CORDIF
	MOVE A,RHIST(T)
	MOVE B,RHIST(X)
	LDB A,[090800,,A]
	LDB B,[090800,,B]
	CAME A,B
	JRST CORDIF
	SKIPN MUDFLG
	JRST CORCM2
	HRRZ A,X
	PUSHJ P,PPWINR
	CAIA
	JRST CORDIF

CORCM2:	AOBJN X,CORCMP	;PAGES ARE THE SAME
	SKIPN RHIST(T)
	JRST PUTPKR

CORDIF:	HRRZ A,T
	HRRZ B,X
	SUBI B,1
	CAME A,B
	JRST CORMNY		;MANY PAGES
	DNUM 3,A		;JUST ONE PAGE HERE
	ALIGN 11.
	JRST CORBIT

CORMNY:	DNUM 3,A
	ATYPE [ASCIZ "-"]
	DNUM 3,B
	ALIGN 11.

CORBIT:	MOVE F,RHIST(A)	;INFO FOR PAGE
	MOVE C,F
	AND C,[770000,,0]
	SKIPN C
	JRST CORZIP		;NO PAGES HERE
	MOVEI D,40
	TLNE C,200000	;READ BIT
	 MOVEI D,"R
	CTYPE (D)
	MOVEI D,40
	TLNE C,400000	;WRITE BIT
	 MOVEI D,"W
	CTYPE (D)
	MOVEI D,40
	MOVE B,F
	TRNE B,200000
	 MOVEI D,"P
	CTYPE (D)
	ALIGN 16.
	LDB B,[090800,,B]

CORSHR:	LDB C,[220900,,F]
	TRNE C,400
	 JRST CORNX1
	JUMPE C,CORABS	;ABSOLUTE PAGE
	HRRE D,B
	SOS D
	DNUM 1,D
	SKIPN V3
	 JRST CORWHO
	LDB B,[300600,,V3]
	JUMPE B,CORWHO
	ALIGN 21.
	CTYPE "[
	6XTYPE V3
	CTYPE "]
	JRST CORWHO
		
CORNX1:	SKIPN V3
	 JRST CORNXT
	LDB F,[300600,,V3]
	JUMPE F,CORNXT
	ALIGN 21.
	CTYPE "[
	6XTYPE V3
	CTYPE "]
	JRST CORNXT

CORWHO:	SKIPN V3
	 ATYPE [ASCIZ "    "]
	LDB A,[900,,F]
	MOVE B,RUUIND
	MOVNM D,RNDFLG	;NUMBER OF SHARERS OF THIS PAGE
	SETZ F,
	SKIPE V3
	 ADDI F,1

CORWLP:	CAMN B,C
	 CAMN A,(T)
	  JRST CORWNM
	PUSHJ P,RETIF		;THIS PAGE SHARES WITH PAGE IN SAME JOB
	CTYPE "(
	DNUM A
	CTYPE ")
	JRST CORWN1

CORWNM:	MOVE U,C
	IMUL U,LUBLK
	PUSHJ P,PFUJNM

CORWN1:	AOSN RNDFLG		;GET THE SHARERS 
	 JRST CORNXT
	ADDI C,400000
	.CALL [SETZ		;DO CORTYP OF NEXT SHARER IN LIST
	       'CORTYP
	       C
	       A
	       MOVEM D
	       MOVEM C
	       MOVEM A
	       SETZM U]
	JRST CORNXT
	JUMPE D,CORNXT
	JUMPL C,CORNXT
	JRST CORWLP

CORABS:	ATYPE [ASCIZ "1    SYSTEM"]	
	JRST CORNXT		;SHARES WITH SYSTEM JOB

CORNXT:	PUSHJ P,CRR
	SKIPG T,X
	 JRST CORCM1
	JRST PUTPKR

CORZIP:	ATYPE [ASCIZ "--"]
	JRST CORNXT

PFUJNM:	PUSHJ P,RETIF		;PRINT UNAME/JNAME OF SHARER
	ONUM 2,C
	ATYPE [ASCIZ "-"]
PFUJN1:	6XTYPE @UNAME
	CTYPE " 
	6XTYPE @JNAME
	POPJ P,

RETIF:	CAIN F,2
	 JRST NXTLIN
	CAIE F,0
	 ALIGN 38.
	AOJ F,
	POPJ P,

NXTLIN:	MOVEI F,1
	PUSHJ P,CRR
	ALIGN 21.
	POPJ P,

MTOP2:	ASCIZ /

  Page    Type  #    Sharers
/


;HACK TO GROK ARC, ML etc. DEVICES

JARCHK: MOVEI D,IDXOFF
JARCLP:	SKIPN U,RHIST(D)
	 POPJ P,
	PUSHJ P,ARCGET
	 AOJA D,JARCLP
	PUSHJ P,ARCPRT
	 AOJA D,JARCLP

ARCHAK:	MOVE U,LUBLK
ARCLP:	ADD U,LUBLK	;SKIP CORE JOB OR GREAT EMBARRASSMENT ENSUES
	CAML U,@USRHI
	 POPJ P,
	SKIPN @UNAME
	 JRST ARCLP
	PUSHJ P,ARCGET
	 JRST ARCLP
	PUSHJ P,ARCPRT
	 JRST ARCLP

;GET DATA FROM JOB.  GIVE UP IF ANY CALLS LOSE.

ARCGET:	HLRZ A,@JNAME	;GOT A POSSIBLE WINNER
	CAIE A,'JOB	
	 POPJ P,
	.CALL USROPN
	 JRST ARCLP	
	MOVEI F,77
	.CALL USRACC
	 JRST ARCLP
	MOVE F,[-10.,,RHIST]
	.CALL USRIOT
MPVIOT:	 POPJ P,
	JUMPL F,CPOPJ	;IOT NOT FINISHED??
	JRST POPJ1

ARCPRT:	MOVE A,RHIST+%JOBDV
	CAME A,[SIXBIT /ARCDEV/]
	 CAMN A,[SIXBIT /MLDEV/]
	  JRST .+3		;A TRULY WINNING JOB
	CAME A,[SIXBIT /DIRDEV/]
	 JRST ARCLP
	SKIPN RNDFLG	;ONLY PRINT HEADER IF ANYTHING'S THERE
	 SKIPN JHFLAG
	  JRST ARCLP1
	PUSHJ P,CRR
	ATYPE DSKTOP
	SETOM RNDFLG
ARCLP1:	PUSH P,U	;SAVE OUR INDEX AND FIND REAL INDEX
	MOVE C,RHIST+%JCUNM
	MOVE B,RHIST+%JCJNM
	MOVE U,LUBLK
ARCLP3:	ADD U,LUBLK
	CAML U,@USRHI
	 JRST [SETO U,
	       JRST ARCLPX] ;JOB GONE NOW?
	CAMN C,@UNAME
	 CAME B,@JNAME
	  JRST ARCLP3
ARCLPX:	CTYPE "J	;FOUND THE JOB INDEX
	HRRZ T,(P)
	IDIV T,LUBLK
	ONUM 2,T	;PRINT Jnm
	CTYPE 40
	PUSHJ P,DLPRT1	;PRINT INDEX/UNAME
	POP P,U		;AND RESTORE OLD INDEX
	6TYPE RHIST+%JCJNM ;CORRECT JNAME
	CTYPE 40
	MOVEI A,"R
	MOVE B,RHIST+%JMODE
	TRNE B,1
	 MOVEI A,"W
	CTYPE (A)	;DIRECTION
	ALIGN 1,26.
	MOVE A,RHIST+%JACC
	PUSHJ P,BLKPRT
	ALIGN 35.
	MOVE B,RHIST+%JMODE
	SKIPL RHIST+%JFLEN	;DON'T DO LENGTH IF NOT KNOWN
	 TRNE B,1		;OR IF WRITE CHANNEL
	  JRST ARCLP4
	IMULI A,100.
	IDIV A,RHIST+%JFLEN
	CAIL A,0
	 CAILE A,100.	;DONT PRINT 1329% FOR RO FILES
	  JRST ARCLP4
	DPCT 3,A	
	CTYPE "%
ARCLP4:	ALIGN 45.
	6XTYPE RHIST+%JDEV ;DEVICE
	CTYPE ":
	CTYPE 40
	6XTYPE RHIST+%JSNM ;DIRECTORY
	CTYPE ";
	CTYPE 40
	6XTYPE RHIST+%JFN1 ;FILE NAME 1
	CTYPE 40
	6XTYPE RHIST+%JFN2 ;FILE NAME 2
	PUSHJ P,CRR
	POPJ P,		;NEXT VICTIM



;HERE TO LOOK UP INDEX AMONG ONES LISTED IN S MODE
;INDEX SHOULD BE IN U.  T IS CLOBBERED.

IDXLKP:	PUSH P,A
	PUSH P,B
	MOVEI T,IDXOFF	
	HRRZ A,U
IDXLP:	SKIPG B,RHIST(T)
	JRST IDXLOS
	CAME A,B
	 AOJA T,IDXLP	
	POP P,B
POPAJ1:	POP P,A
	JRST POPJ1

POPBAJ:
IDXLOS:	POP P,B
POPAJ:	POP P,A
	POPJ P,



DISK:	SKIPL RUUFLG
	 JRST DISK1
	MOVE C,RUUIND
	CAIL C,@NQCHN
	 JRST DISK1
	SKIPGE A,@QSMDN
	 JRST DISK1
	MOVEM A,V2
	MOVEM C,V4
	.CALL GETDPG
	 JRST DISK1
	SKIPGE U,@QUSR
	 JRST DISK1
	ATYPE DSKTOP		
	MOVEI D,1	;HACK
	PUSHJ P,DLPRT
	PUSHJ P,CRR2
	PUSHJ P,DSKTYP
	ATYPE [ASCIZ /
*** End of Buffer ***
/]
	JRST PUTPKR

BUFOUT:	PUSH P,A
	PUSHJ P,CHEND			;FINISH OUTPUT AND MAKE MY BUFFER EMPTY
	MOVE OBUFP,[440700,,OBUF]
	POP P,A
	POPJ P,

DSKTYP:	MOVE A,[440700,,DSKPG*2000]	;ENTRY, BYTE POINTER TO TOP 7 BITS
DSKTLP:	SETZM V3
	PUSHJ P,DSKOUT			;OUTBUT BUFFER
	PUSHJ P,BUFOUT
	MOVE C,V4			;RESTORE CHANNEL NUMBER 
	MOVE D,@QSMDN			;GET BUFFER POINTER
	CAME D,V2			;SAME AS LAST?
	 POPJ P,			;NO. RETURN
	SKIPE DSKCON			;CONTINUE FLAG
	 SKIPL @QSCRW			;READ BUFFER?
	  POPJ P,			;YES. RETURN
	MOVE D,V3
DSKHNG:	CAME D,@QSMPRP
	 JRST DSKHN1
	ATYPE [ASCIZ /*>/]
	PUSHJ P,BUFOUT
	SETOM V3
DSKHN1:	CAMN D,@QSMPRP			;WAIT FOR MORE
	 .HANG
	CAML D,@QSMPRP			;NEW BUFFER?
	 POPJ P,
	SKIPN V3
	 JRST DSKTLP
	MOVE F,[-1,,[ASCIC /XX/]]
	.IOT TYOC,F	
	JRST DSKTLP			;OTHERWISE, CONTINUE

DSKOUT:	SKIPGE @QSCRW
	 JRST DSKTY1
	MOVE C,[440700,,<DSKPG*2000+1777>]
	JRST DSKTY3
DSKTY1:	MOVE C,@QSMPRP
	MOVEM C,V3
	IBP C
	ANDI C,1777
	ADDI C,<DSKPG*2000>
	CAIA
DSKTY2:	 AOS LINEPOS	;INCREMENT LINE POSITION AND SKIP
DSKTY3:	HRRZ B,A
	CAILE B,-1(C)
	 POPJ P,
	ILDB B,A	;GET CHAR
	SKIPN DSKZER
	 JUMPE B,CPOPJ	;EXIT IF ZERO
	CAIN B,3
	 POPJ P,
	CAIN B,^P
	 JRST [ CTYPE "^ ? ADDI B,100 ? JRST .+1 ]
	TOUT B	;OUTPUT
	CAILE B,15	;SKIP IF MAY BE NON-PRINTING CHAR
	 JRST DSKTY2	;REGULAR CHAR
	CAIN B,15
	 JRST DSKTCR	;CARRIAGE RETURN
	CAIE B,12
	 JRST DSKTY2	;REGUALR CHAR
	AOS PAGEPOS	;LINE FEED, INCREMENT PAGE POSITION
	JRST DSKTY3

DSKTCR:	SETZM LINEPOS	;RESET TO BEG OF LINE
	JRST DSKTY3


; PRINT HEADER LINE FOR DSK INFO

DSKHD1:	PUSHJ P,CRR	;FROM J MODE, DON'T PRINT FREE BLOCK INFO
	SETOM RNDFLG
	JRST DSKHD2

DSKHDR:	PUSH P,C
	MOVN C,NQS	;AOBJN ON DISK PACKS
	HRLZS C
	ATYPE [ASCIZ / Free Blocks: /]
DFRELP:	SKIPGE @QPKID
	 JRST DFREL1	;PACK NOT MOUNTED
	CTYPE "#
	DNUM @QPKID
	CTYPE "=
	DNUM @QSFT	;QSFT IS (C)
	CTYPE 40
DFREL1:	AOBJN C,DFRELP
	PUSHJ P,CRR
	POP P,C
DSKHD2:	ATYPE DSKTOP
	POPJ P,

DISK1:	SKIPN JHFLAG
	 PUSHJ P,DSKHDR
	MOVE C,NQCHN
	ADD C,NQS	;INDEX +1 FOR DIR WRT, NQS FOR SWAP
	MOVN D,NQS	;COUNT SPECIAL ACTION ON SWAP, DIR WRT
DLUP:	SKIPGE U,@QUSR
	 JRST DLUP1
	LDB T,[360600,,@UNAME]
	JUMPE T,DLUP1
	SKIPN JHFLAG
	 JRST DLUP0
	PUSHJ P,IDXLKP
	 JRST DLUP1		
	SKIPN RNDFLG	;ONLY PRINT HEADER IF ANYTHING'S THERE
	PUSHJ P,DSKHD1

;AT THIS POINT C HAS CHANNEL NUMBER, U HAS INDEX*LUBLK
DLUP0:  PUSHJ P,DLPRT
DLUP2:	PUSHJ P,CRR
DLUP1:	AOS D
	SOJGE C,DLUP
	SKIPE JHFLAG
	 JRST JREST
	PUSHJ P,ARCHAK	;ARCHIVE CHANNELS, ETC.
	PUSHJ P,ERRDEV	;ERR, DIRECTORIES, ETC. (FROM OLD E MODE)
	JRST PUTPKR
	
JREST:	PUSHJ P,JARCHK
	PUSHJ P,ERRDEV
	PUSHJ P,KAOS
	JRST NETWRK

DLPRT:	CTYPE 40	;TYPE=DISK
	ONUM 2,C
	CTYPE 40
	PUSHJ P,DLPRT1
	6TYPE @JNAME
	CTYPE 40
	MOVEI A,"R
	SKIPGE @QSCRW
	 MOVEI A,"W
	CTYPE (A)
	MOVE A,@QSRAC
	HRRZ B,A
	TLNE A,@%QAWOV
	 CTYPE "O
	SKIPGE A	;%QALOK
	 CTYPE "L	;LOCKED
	TLNN A,@%QAEFR
	 TLNE A,@%QAEFW
	  CTYPE "E	;E-O-F
	CAIE B,@%QMTTW
	 CAIN B,@%QMTTR
	  CTYPE "T	;TUT READ OR WRITE
	CAIE B,@%QMUDW
	 CAIN B,@%QMUDR
	  CTYPE "U	;USER DIR READ OR WRITE
	CAIE B,@%QMMDW
	 CAIN B,@%QMMDR
	  CTYPE "M	;MFD READ OR WRITE
	TLNE A,@%QACTH
	 CTYPE "B	;CORE TRANSFER HUNG ON ACTIVE BUFFER
	TLNE A,@%QAFUL
	 CTYPE "F	;HUNG IN DIR FULL
	TLNE A,@%QADEL
	 CTYPE "*	;DELETE WHEN CLOSED
	TLNE A,@%QAACC
	 CTYPE "A	;ADR MODIFIED (.ACCESS)
	TLNE A,@%QAPAR
	 CTYPE "?	;PARITY ERROR
	SKIPN B
	 CTYPE "I	;CHANNEL IDLE
	CAIE B,@%QMUDR	;SEE IF DIRECTORY CHANNEL
	 CAIN B,@%QMUDW
	  JRST [ALIGN 41.
		PUSH P,C
		HRRZ C,@QDSKN
		DNUM @QPKID
		POP P,C
		MOVE U,@QUDPR
		ALIGN 45.
		6XTYPE @QSNUD
		CTYPE ";
		POPJ P,]
	CAIE B,@%QMUDW	;SKIP REST IF DIR READ/WRITE
	 CAIN B,@%QMUDR
	  JRST @.+1
	JUMPLE D,[ALIGN 41.	;FINISHED FOR SWAP AND DIR CHNLS
		  PUSH P,C
		  HRRZ C,@QDSKN
		  DNUM @QPKID
		  POP P,C
		  POPJ P, ]
	ALIGN 1,26.
	MOVE A,@QSMPRP
	IBP A
	ANDI A,1777
	PUSH P,B
	HRRZ B,@QSBYTE
	IMUL A,B		;CONVERT WORDS TO BYTES
	SKIPGE @QSMDN
	 SETZM A
	ADD A,@QFBLNO
	IDIV A,B		;CONVERT BACK TO WORDS (AT LEAST FOR NOW)
	PUSHJ P,BLKPRT		;PRINT WORD COUNT
	POP P,B
	ALIGN 35.
	MOVE B,A
	MOVE U,@QUDPR
	MOVE A,@QSNLCN
	ADD A,@QUDFPR		;POINTER INTO USER DIRECTORY
	SKIPGE @QSCRW		;ONLY HACK READ CHANNELS
	 JRST DLPRT0
LENHAK:	PUSH P,A		;SAVE THE WORLD
	PUSH P,B
	PUSH P,C
	PUSH P,D
	PUSH P,U
;THIS CODE FROM ITS
	SETOM B
	HRLZI C,UNRNDM(A)
	HRRI C,C
	.GETLOC C,
	LDB C,[UNDSCP+C]
	IDIVI C,UFDBPW
	HLL C,QBTBLI(D)	;MAKE A BP TO DESCRIPTOR AREA
	HRLZI X,UNRNDM(A)
	HRRI X,X
	.GETLOC X,
	LDB X,[UNWRDC+X]
	ANDCMI A,1777	;X HAS WORD COUNT IN LAST BLOCK OF FILE
	HRRZS A
	ADDI A,UDDESC
	ADD C,A
	PUSHJ P,NFLLN1	;GET THE BLOCK COUNT OF FILE
	IMULI B,2000
	SKIPN X
	 MOVEI X,2000
	ADD B,X		;FILE LENGTH NOW IN B
	POP P,U
	POP P,D
	MOVE A,-1(P)	;THIS IS WORD COUNT (FROM ABOVE)
	IMULI A,100.
	IDIV A,B
	CAILE A,100.
	 JRST LENHK1
	CAIGE A,0
	 JRST LENHK1
	DPCT 3,A	;PRINT THE %AGE
	CTYPE "%
	CTYPE 40
LENHK1:	POP P,C		;GOES THE WEASEL
	POP P,B
	POP P,A

DLPRT0:	ALIGN 41.	;HERE TO PRINT DISK NUMBER AND FILE NAME
	PUSH P,C
	HRRZ C,@QDSKN
	DNUM @QPKID
	POP P,C
	ALIGN 45.
	6XTYPE @QSNUD	
	CTYPE ";
	CTYPE 40
	HRL A,A
	HRRI A,B
	.GETLOC A,
	6XTYPE B
	CTYPE 40
	ADD A,[1,,]
	.GETLOC A,
	6XTYPE B
	POPJ P,

DLPRT1:	JUMPL U,DLPRTA
	HRRZ A,U
	IDIV A,LUBLK
	ONUM 3,A
	CTYPE 40
	6TYPE @UNAME
	CTYPE 40
	POPJ P,

DLPRTA:	ATYPE [ASCIZ / ?? /]
	6TYPE A
	CTYPE 40
	POPJ P,

QBTBLI:	440600,,
	360600,,
	300600,,
	220600,,
	140600,,
	060600,,
	000600,,

NFLLN1:	IBP C		;HERE TO GET FILE LENGTH
	MOVEI D,D
	HRL D,C
	.GETLOC D,	;PUT STUFF IN D
	HLL A,C
	HRRI A,D	;MAKE BP IN A 
	LDB F,A		;GET THE DESCRIPTOR BYTE
	JUMPE F,CPOPJ
	CAILE F,UDTKMX
	 JRST NFLLN2
	ADD B,F
	JRST NFLLN1

NFLLN2:	CAIGE F,UDWPH
	 AOJA B,NFLLN1
	CAIN F,UDWPH
	 JRST NFLLN1
	REPEAT NXLBYT, IBP C
	AOJA B,NFLLN1

BLKPRT:	PUSH P,A
	IDIVI A,2000
	DNUM 3,A
	CTYPE "+
	DNUM B
	POP P,A
	POPJ P,	

DSKTOP:	ASCIZ ! Ch Idx Uname  Jname Mode Bks+Wds   Rd%  Pk  File Name
!

;K MODE
KAOS:	SKIPN JHFLAG
	 ATYPE KTOP
	SETZM RNDFLG
	MOVE C,NINDX
KAOS0:	SOJL C,KAOS10
	SKIPGE @CHSUSR
	 JRST KAOS0
	SKIPN JHFLAG
	 JRST KAOS00
	HRRZ U,@CHSUSR
	PUSHJ P,IDXLKP
	 JRST KAOS0		;NOT THIS TREE
	SKIPE RNDFLG
	 JRST KAOS00
	PUSHJ P,CRR		;GOING TO PRINT SOMETHING, GIVE HEADER
	ATYPE KTOP0
	ATYPE KTOP
	SETOM RNDFLG
KAOS00:	ONUM 3,C
	CTYPE 40
	HRRZ U,@CHSUSR
	MOVE A,U
	IDIV A,LUBLK
	ONUM 3,A
	CTYPE 40
	6TYPE @UNAME
	CTYPE 40
	6TYPE @JNAME
	ALIGN 1,22.
	HRRZ A,@CHSSTA
	CAILE A,10
	 MOVEI A,10
	6TYPE (A)[SIXBIT/CLOSED/
		  SIXBIT/LISTEN/
		  SIXBIT/RFCRCV/
		  SIXBIT/RFCSNT/
		  SIXBIT/OPEN  /
		  SIXBIT/LOS   /
		  SIXBIT/INCXMT/
		  SIXBIT/MUPPET/
		  SIXBIT/GARBAG/]
	CTYPE 40
	HRRZ A,@CHSNBF
	DNUM 3,A
	CTYPE 40
	HLRZ A,@CHSNBF
	DNUM 3,A
	CTYPE 40
	SKIPGE A,@CHSNOS
	 JRST [	CTYPE "-
		MOVMS A
		DNUM A
		JRST .+2 ]
	  DNUM 3,A
	ALIGN 1,41.
	HLRZ A,@CHSPKN		;COMPUTE # PKTS AWAITING ACK
	HLRZ B,@CHSACK
	SUB A,B
	SKIPGE A
	 ADDI A,200000
	DNUM 3,A
	CTYPE 40
	HLRZ A,@CHSWIN
	DNUM A
	ALIGN 1,49.
	HRRZ A,@CHSWIN
	DNUM 3,A
	CTYPE 40
	LDB A,[242000,,@CHSFRN]
	ONUM 4,A
	ALIGN 1,58.
	LDB A,[042000,,@CHSFRN]
	ONUM A
	ALIGN 1,65.
	MOVE A,@CHSSTA		;DECODE FLAGS
	TSNE A,%CFOFF
	 CTYPE "F		;F - OFF AT PI LEVEL
	TSNE A,%CFSTS
	 CTYPE "S		;S - SEND STS
	TSNE A,%CFCLS
	 CTYPE "C		;C - HALF-CLOSED
	TSNE A,%CFSTY
	 CTYPE "T		;T - CONNECTED TO STY
	SKIPE @CHSIBP
	 CTYPE "I		;I - HAS INPUT BUFFER
	SKIPE @CHSOBP
	 CTYPE "O		;O - HAS OUTPUT BUFFER
	PUSHJ P,CRR
	JRST KAOS0

KAOS10:	SKIPE JHFLAG
	 SKIPE RNDFLG
	  CAIA
	   POPJ P,		;J mode and nothing involved with Chaos net
	DNUM @CHTTBF
	ATYPE [ASCIZ/ buffers, /]
	DNUM @CHFRBF
	ATYPE [ASCIZ/ of which are free.
/]
	SKIPN A,@CHQRFC
	 JRST KAOS20
	ATYPE [ASCIZ/Pending RFCs:
/]
	HLRZS A
	PUSHJ P,KAOSPP
	JUMPN A,.-1
KAOS20:	SKIPN A,@CHQLSN
	 JRST KAOS30
	ATYPE [ASCIZ/Pending LSNs:
/]
	HLRZS A
	PUSHJ P,KAOSPP
	JUMPN A,.-1
KAOS30:	SKIPE JHFLAG
	 POPJ P,
	JRST PUTPKR

;Print packet in A, set A to next.  Prints source index and contact name.
KAOSPP:	ONUM A
	ATYPE [ASCIZ/: /]
	HRLZI B,2(A)		;GET SOURCE
	HRRI B,B
	.GETLOC B,
	LDB B,[041200,,B]
	ONUM B
	CTYPE 40
	HRLZI B,(A)		;GET NBYTES
	HRRI B,B
	.GETLOC B,
	LDB C,[041400,,B]
	HRLZI D,4(A)		;DATA POINTER
	HRRI D,B
KAOSP1:	.GETLOC D,		;B GETS A DATA WORD
	MOVE U,[440800,,B]
REPEAT 4,[
	ILDB T,U
	CTYPE (T)
	SOJLE C,KAOSP2
]
	ADD D,[1,,]
	JRST KAOSP1

KAOSP2:	PUSHJ P,CRR
	HRLZI B,-2(A)		;GET THREAD
	HRRI B,B
	.GETLOC B,
	HRRZ A,B
	POPJ P,

KTOP0:	ASCIZ /Chaos network connections:
/
KTOP:	ASCIZ /Idx Usr Uname  Jname  State  Ibf Pbf Nos Ack R Win T Foreign Adr Flag
/

; A MODE CODE

NETWRK:	SKIPN JHFLAG
	 ATYPE ATOP
	SETZM RNDFLG
	SKIPE @IMPUP
	 JRST NOTUP
	MOVE C,IMPSTL
	SUBI C,1
NETLUP:	SKIPL U,@IMSOC1		;USER INDEX
	 JRST NETL1
	SKIPN JHFLAG
	 JRST NETLP1
	PUSHJ P,IDXLKP
	 JRST NETL1
	SKIPE RNDFLG		;ONLY PRINT HEADER IF ANYTHING'S THERE
	 JRST NETLP1
	PUSHJ P,CRR
	ATYPE ATOP0
	ATYPE ATOP
	SETOM RNDFLG
NETLP1:	ONUM 2,C		;TABLE INDEX
	ALIGN 0,3
	MOVE A,@IMSOC1
	TLNE A,200000		;BEING CLOSED BIT 
	 JRST [	ATYPE [ASCIZ\ -BEING CLOSED-  \] ;STRING MUST BE 17. CHARACTERS LONG
		JRST NETLP2 ]
	HRRZ A,U
	IDIV A,LUBLK
	ONUM 3,A		;USER INDEX
	CTYPE 40
	6TYPE @UNAME
	CTYPE 40
	6TYPE @JNAME
	ALIGN 25
NETLP2:	ONUM 7,@IMSOC2		;LOCAL SOCKET NUMBER
	CTYPE 40
	MOVE A,@IMSOC4		;SOCKET STATE
	HRRZ B,A		;GET THE STATE ALL BY ITSELF
	JUMPE B,CLOSED		;SOCKET CLOSED, FIND OUT WHY
NETL2:	HRRZ B,A
	CAIGE B,NSTATE		;SKIP IF STATE GOT CLOBBERED?
	 6XTYPE STATES(A)
	HLRZ B,@IMSOC6
	ANDI B,377
	CAIN B,377
	 CTYPE "+		;BIG BUFFER
	CTYPE 40		;SPACE
	MOVE B,@IMSOC2		;LOCAL SOCKET NUMBER
	ANDI B,1
	ATYPE (B)[ASCIZ/<- / ? ASCIZ/-> /]
	HRRZ B,@IMSOC4
	CAIN B,1
	 JRST [ATYPE [ASCIZ /[ANY]/]
	       JRST NETL2G]
	LDB A,[321000,,A]	;FOREIGN HOST
	MOVEI B,5
	PUSHJ P,OHOST		;PRINT HOST NAME RIGHT AFTER ARROW
NETL2G:	MOVEI B,60.		;NOW PUT FOREIGN SOCKET, FLUSH-RIGHT TO COLUMN 60
	SUB B,LINEPOS
	CAIG B,0
	 MOVEI B,0
	CAIL B,20
	 JRST [	ALIGN 60.-17
		MOVEI B,17
		JRST .+1 ]
	LSH B,27
	IOR B,[ONUM @IMSOC3]
	XCT B			;FOREIGN SOCKET
	DNUM 4,@IMSOC8		;MESSAGE ALLOCATION
	DNUM 6,@IMSOC7		;BIT ALLOCATION
	PUSHJ P,CRR
NETL1:	SOJGE C,NETLUP
	JRST NETL1A
NOTUP:	SKIPN JHFLAG
	 ATYPE [ASCIZ /NCP down
/]
NETL1A:	MOVS C,NSTTYS
	MOVNS C		;GET AOBJN -> STY'S.
	MOVE D,C	;WE'LL NEED TO USE IT TWICE, SO SAVE IT.
	MOVSI X,%SSUSE
	TDNN X,@STYSTS	;IS AT LEAST 1 STY IN USE?
	 AOBJN C,.-1
	JUMPGE C,NETL3	;NO.
	SKIPN JHFLAG
	 ATYPE STYTOP
	MOVE C,D	;SCAN THRU ALL STY'S AGAIN.
NETL4:	MOVSI X,%SSUSE
	TDNN X,@STYSTS
	 JRST NETL5	;SKIP STY'S NOT IN USE.
	HRRZ U,@STYSTS
	SKIPN JHFLAG
	 JRST NETLX
	PUSHJ P,IDXLKP
	 JRST NETL5
	SKIPE RNDFLG	;ONLY PRINT HEADER IF ANYTHING'S THERE
	 JRST NETLX
	ATYPE STYTOP
	SETOM RNDFLG
NETLX:	MOVEI A,(C)
	ADD A,NFSTTY
	CTYPE "T	;PRINT Tnm
	ONUM 2,A
	CTYPE 40
	CTYPE 40
	MOVE A,U
	IDIV A,LUBLK	;AND USER INDEX.
	ONUM 2,A
	CTYPE 40
	6TYPE @UNAME	;PRINT UNAME AND JNAME OF OWNER OF STY.
	MOVE A,@UNAME
	MOVEM A,V2
	CTYPE 40
	6TYPE @JNAME
	MOVE A,@JNAME
	MOVEM A,V3
	ATYPE [ASCIZ /   /]
	MOVE U,@USRHI
	MOVEI A,(C)
	ADD A,NFSTTY
NETL5D:	SUB U,LUBLK
	JUMPLE U,NETSTX	;HAVE RUN OUT OF USERS
	SKIPN @UNAME
	 JRST NETL5D
	HRRZ D,@TTYTBL	;PICK UP TTY #
	CAME A,D
	 JRST NETL5D	;THIS IS NOT THE ONE
	MOVE A,U	;USER INDEX
	IDIV A,LUBLK
	ONUM 2,A
	CTYPE 40
	6TYPE @UNAME	;FOUND THE BUGGER!!
	CTYPE 40
	6TYPE @JNAME
NETSTX:	PUSH P,C
	ALIGN 1,42.	;Get into proper column even if no user found
	MOVE C,IMPSTL	;Search socket table for probably-relevant socket
	SUBI C,1
NETSTL:	SKIPN U,@IMSOC1
	 JRST NETSTE
	MOVE A,@UNAME
	MOVE B,@JNAME
	CAMN A,V2
	 CAME B,V3
	  JRST NETSTE
	LDB A,[321000,,@IMSOC4]
	MOVEI B,5
	PUSHJ P,OHOST
	CAIA
NETSTE:	 SOJGE C,NETSTL
	POP P,C
NETL5E:	PUSHJ P,CRR
NETL5:	AOBJN C,NETL4
NETL3:

NETQ3:	SKIPE @IMPUP
	 JRST NETQ1
	SETOM NETQF	;PRINT PENDING QUEUE
	MOVE C,@IMPBPQ
NETQ2:	JUMPL C,NETQ1
	SKIPE JHFLAG
	 JRST NETQ1
	ADDI C,400000
	AOSN NETQF
	 ATYPE [ASCIZ /
Pending queue
  Host             Frn Soc       Loc Soc   Type   Link or size
/]
	LDB A,[101000,,3(C)]
	MOVEI B,4
	PUSHJ P,OHOST
	ALIGN 13.
	MOVE A,2(C)
	ONUM 14,A
	CTYPE 40
	MOVE A,1(C)
	ONUM 14,A
	ALIGN 6,
	MOVE A,[ASCIZ / Rts  /]
	SKIPL 3(C)
	 MOVE A,[ASCIZ / Str  /]
	ATYPE A
	LDB A,[1000,,3(C)]
	ONUM 4,A
	PUSHJ P,CRR
	MOVE C,(C)
	JRST NETQ2

NETQ1:	SKIPE GUNFLG
	 JRST GUNHAK
	JRST PUTPKR

CLOSED:	HRRZ B,@IMSOC5	;REASON CLOSED
	LSH B,-9
	ADDI B,15	;MAXIMUM STATE+2
	HRR A,B		;FUDGE NEW STATE
	JRST NETL2

;SOCKET STATES

STATES:
IRPS A,,[CLOSED LISTEN RFCRCV RFCCLS RFCSNT OPEN
RNMWT SNTCLS RDCLS DATA RNMCLS ALMCLS ABORT NVROPN
CLSUSR CLSFH CLSRST CLSHD CLSINC CLSBSM NCPDWN RFCRFS]
SIXBIT /A/
TERMIN
NSTATE==.-STATES

ATOP0:	ASCIZ /Network Sockets
/
ATOP:	ASCIZ /SI  UI Uname  Jname   Socket State     Host       Forn Socket Msg Bits
/
STYTOP:	ASCIZ /
STY Map
    Idx    STY owner   Idx    STY user    Host
/

;SCHEDULER HISTORY DISPLAY

;USE OF RHIST:
;0-177	   COPY OF SYSTEM SCHEDULER HISTORY TABLE
;200-377   NUMBER OF TIMES EACH USER-INDEX SEEN
;400-477   RH PC LH COUNT EXCEPT 4.9 EXEC MODE BIT OF PC
;	   THESE ARE USED IN ACCUMULATING INFO FOR A SINGLE USER


SCHH:	ATYPE SCHTOP
	HRL A,SCHHB
	HRRI A,RHIST
	HRRZ B,A
	ADD B,SSCHDB
	BLT A,-1(B)	;READ SCHED HIST TBL FROM SYS
	CLEARM RHIST+200
	MOVE A,[RHIST+200,,RHIST+201]
	BLT A,RHIST+477	;CLEAR AREA
SCHH1:	MOVE A,SSCHDB	;LENGTH OF HISTORY BUFFER
	SOS A
SCHH2:	HLRZ B,RHIST(A)
	ANDI B,177	;USER #
	AOS RHIST+200(B)
	SOJGE A,SCHH2
SCHH4:	MOVNI B,1	;FIND USER WITH MOST SCHEDLUES
	MOVEI A,0
SCHH3:	CAMGE B,RHIST+200(A)
	MOVE C,A
	CAMGE B,RHIST+200(A)
	MOVE B,RHIST+200(A)
	CAIGE A,177
	AOJA A,SCHH3
	JUMPLE B,PUTPKR	;THRU
	SETOM RHIST+200(C)
	ONUM 3,C	;OUTPUT INDEX
	CTYPE 40
	MOVE U,C
	IMUL U,LUBLK
	6TYPE @UNAME
	CTYPE 40
	6TYPE @JNAME
	CTYPE 40
	DNUM 3,B	;COUNT
	CLEARB U2,U3
	SETOM SCHHT1
	MOVE A,SSCHDB	;FIND MOST FREQUENT PC ETC
	SOS A
SCHHL1:	HLRZ U1,RHIST(A)
	ANDI U1,177
	CAME U1,C
	 JRST SCHHL2
	MOVE U1,RHIST(A)
	TLNE U1,200000
	 AOS U3			;THIS QUANTUM TERMINATED BY PAGE FAULT
	LDB D,[311100,,U1]	;TIME USED IN 512-MICROSECOND UNITS
	ADD U2,D
	TLZ U1,377777	;GET PC WITH EXEC BIT IN 4.9
	MOVE D,SCHHT1
	JUMPL D,SCHHL3
SCHHL5:	MOVE T,RHIST+400(D)
	TLZ T,377777
	CAMN T,U1	
	 JRST [	MOVSI T,1	;SAME, BUMP COUNT
		ADDM T,RHIST+400(D)
		JRST SCHHL2]
	SOJGE D,SCHHL5
SCHHL3:	AOS D,SCHHT1
	MOVEM U1,RHIST+400(D)
SCHHL2:	SOJGE A,SCHHL1
	PUSH P,U3
	IMULI U2,512.	;CONVERT TO USEC
	IDIV U2,B
	MOVE T,U2
	DNUM 10.,T
	ALIGN 5,
	POP P,D
	IMULI D,100.
	IDIV D,B
	DNUM 3,D	;PERCENT OF TIME TERMINATED ON PG FAULT
	MOVE U1,SCHHT1
	JUMPL U1,SCHPL3
	MOVNI T,1
SCHPL1:	LDB U2,[222100,,RHIST+400(U1)]
	CAML T,U2
	 JRST SCHPL2
	MOVE T,U2
	MOVE D,RHIST+400(U1)
SCHPL2:	SOJGE U1,SCHPL1
	ALIGN 6,
	SKIPL D
	 CTYPE 40
	SKIPGE D
	 CTYPE "*	;EXEC MODE
	HRRZS D
	ONUM 6,D	;PC
	CTYPE 40
	AOS T
	DNUM 3,T	;COUNT FOR THAT PC
SCHPL3:	PUSHJ P,CRR
	JRST SCHH4

SCHTOP:	ASCIZ ?Indx Uname Jname  Count   Avg/Schd   %Pg-flt    PC   Count
?

DDXR:	.SUSET [.RUNAM,,A]
	SKIPL NAMESW		; SIXBIT HACKERY HERE?
	 JRST DDXR0
	MOVE A,NAMEHK		; YES. GET THE NAME
	MOVEM A,RUUIND		; AND MAKE IT THE INDEX FOR THE FUTURE
	SETOM RUUFLG		; AND SAY THERE IS AN ARGUMENT
	JRST DDXR1
DDXR0:	SKIPL RUUFLG
	 JRST DDXR1
	MOVE C,RUUIND		; GET THE INDEX
	TLZ C,400000		; AND ZERO TOP BIT IN CASE ITS A NAME
	CAIL C,@NQCHN		; IS THIS IN RANGE
	 JRST DDXRHK		; NO. IT'S PROBABLY A NAME
	MOVE U,@QUDPR
	SKIPN A,@QSNUD		; GET THE DIRECTORY NAME
	 .SUSET [.RUNAM,,A]
	CAIA
DDXRHK:	MOVE A,RUUIND		; GET THE DIRECTORY NAME FROM RUUIND
DDXR1:	.SUSET [.SSNAM,,A]
	CAIN OMODE,1
	 JRST DDXS
	CAIN OMODE,4
	 JRST DDXS
	.OPEN DIRC,DDYFIL
	JRST DDXR9
	MOVE B,[ASCIC//]
	MOVEM B,RHIST+477
	MOVEI B,0
	SETZM NSNAM
	MOVE X,[440600,,NSNAM]
DDXR7:	MOVE C,[440700,,RHIST]
	MOVE D,[-477,,RHIST]
	.IOT DIRC,D
DDXR2:	ILDB D,C
	CAIN D,15
	 JRST DDXR2
	CAIN D,12
	 JRST DDXR4
	CAIE D,3
	 CAIN D,14
	  JRST DDXR6
	CAMN B,LPCHPT
	 JRST DDXR5
DDXR3:	CTYPE (D)
	JRST DDXR2

DDXR6:	HRRZ D,C
	CAIN D,RHIST+477
	 JRST DDXR7
	JRST DDXS

DDXR4:	CAMN B,LPCHPT
	.SUSET [.SSNAM,,NSNAM]
	AOS B
	MOVEI D,40
	MOVE A,LINEPOS
	CAIGE A,40.
	 JRST DDXR3
	PUSHJ P,CRR
	JRST DDXR2

DDXR5:	CTYPE (D)
	SUBI D,40
	JUMPE D,DDXR2
	IDPB D,X
	JRST DDXR2

DDXR9:	ATYPE [ASCIZ/Directory not available/]
	JRST PUTPKR

DDXX:	HRRM A,(B)
DDYY:	.OPEN DIRC,(B)
	POPJ P,
	MOVE A,[-500,,RHIST]
	.IOT DIRC,A
	.CLOSE DIRC,
	JRST POPJ1


OSHACK:	SKIPL NAMESW
	 JRST OSHAK1
	PUSHJ P,TTYFOO		;WILL SKIP IF WINS
	 JRST LINES0	
OSHAK1:	SKIPN RUUFLG
	 JRST LINES0
	SETZM NAMESW		;WIN ON INTERRUPTS
	MOVE T,RUUIND		;WITH APOLOGIES TO OS
	.SUSET [.RTTY,,A]
	HRRZ A,A
	CAMGE T,NCT		;MAKE SURE TTY NUMBER IS WITHIN LIMITS
	 CAMN T,A
	  JRST LINES0
	SETOM MORFLG
	.CALL TTYGET
	 .LOSE 1000
	TLO C,%TSMOR		;OFF MOREAGE
	.CALL TTYSET
	 .LOSE 1000
	MOVEI A,4
	MOVEM A,VPOS
	SETZ C,
	MOVE A,@TCTYP
	CAIN A,%TNTV
	 ATYPE [ASCIZ /
WARNING - unreliable when spying on TV
/]
	ATYPE TTYTOP
	PUSHJ P,TTYLIN
	PUSHJ P,CRR2
	PUSHJ P,CHEND		;FINISH OUTPUT AND MAKE MY BUFFER EMPTY
	MOVE OBUFP,[440700,,OBUF]
	MOVE F,[-1,,[ASCIC /E/]]
	.IOT TYOC,F	
	MOVEI A,40.		;LET HIM EYE IT FOR AWHILE
	.SLEEP A,
	MOVE D,@TOBBP
	MOVE B,@TOBEP
	SUB B,D
	MOVE D,TOIP
	MOVE B,FTCTYP
	CAIN B,%TNTV
	MOVEM D,TOOP
	MOVE D,@TOOP
	CAMN D,@TOBEP
	MOVE D,@TOBBP
	IBP D

TTYLP:	PUSHJ P,TGETCH
	TRZE B,200		; %TXDIS - maybe this should be changed?
	JRST TTYLP1		;	it is undefined in the new ITS - MRC
	CAIE B,"^P
	.IOT NTYO,B
	JRST TTYLP

TTYLP2:	PUSHJ P,TGETCH
	PUSHJ P,CRR
	JRST TTYLP

TGETCH:	CAMN D,@TOOP
	JSP U,AHANG
	JRST TGETC1
	MOVE F,[-1,,[ASCIC /E/]]
	.IOT TYOC,F	

TGETC1:	CAMN D,@TOBEP
	JRST [MOVE D,@TOBBP
	      JRST TGETCH]
	IBP D
	PUSH P,C
	MOVE C,D
	TRO C,400000
	LDB B,C
	POP P,C
	ANDI B,377
	POPJ P,

NUMHAK:	CTYPE 40
	CTYPE ">
	AOS (P)
	POPJ P,

AHANG:	XCT -2(U)
	.HANG
	JRST 1(U)
	JRST PUTPKR

TTYLP1:	CAIGE B,NUMCTL
	 JRST @CTLTAB(B)
	JRST TTYLP

CTLTAB:	OFFSET -.
	TYMOV	
	TYMOV1	
	TYEEOF
	TYEEOL
	TYDELF
	TTYLP
	TTYLP	
	TYECRL	
	TTYLP	
	TYEBS	
	TYELF
	TYECRL
	TTYLP
	TTYLP
	TYEFS
	TYMOV1
	TYECLR
	TTYLP
	TTYLP
	TTYILP
	TTDDLP
	TTYICP
	TTYDCP
	TTYLP
	TTYLP
NUMCTL::OFFSET 0

TTYILP:	MOVEI C,"[
	JRST PTYO
TTDDLP:	MOVEI C,"\
	JRST PTYO
TTYICP:	MOVEI C,"^
	JRST PTYO
TTYDCP:	MOVEI C,"_
	JRST PTYO

TYMOV:	PUSHJ P,TGETCH	;OLD V IN V2
	MOVE C,B	
	PUSHJ P,TGETCH	;OLD H IN B
	PUSHJ P,TGETCH	;NEW V IN V4
	MOVE  A,B
	PUSHJ P,TGETCH	;NEW H IN B
	CAIN A,1(C)
	JRST TYECRL
	SKIPE FTCTYP
	JRST TYMOV0
	SUB A,C
	ADD A,VPOS
	EXCH A,B
	IDIV B,VSZ
	MOVE B,C
	EXCH A,B

TYMOV0:	MOVEM A,VPOS
	MOVEI A,10(A)	
	MOVEI B,10(B)
	MOVE F,[-1,,A]
	LSH A,36.-21.
	IOR A,[ASCIC /V /]
	.IOT TYOC,F
	MOVE F,[-1,,B]
	LSH B,36.-21.
	IOR B,[ASCIC /H /]
	.IOT TYOC,F
	JRST TTYLP

TYMOV1:	PUSHJ P,TGETCH
	MOVE A,B
	PUSHJ P,TGETCH
	SKIPE FTCTYP
	JRST TYMOV0
	EXCH A,B
	IDIV B,VSZ
	MOVE B,C
	EXCH A,B
	JRST TYMOV0

TYEFS:	MOVEI C,"F	
	JRST PTYO

TYECLR:	MOVEI C,"C
	JRST PTYO

TYDELF:	MOVEI C,"F
	JRST PTYO

TYEEOL:	MOVEI C,"L
	JRST PTYO
	
TYEEOF:	MOVEI C,"F

PTYO:	MOVE F,[-1,,C]
	LSH C,36.-14.
	IOR C,[ASCIC / /]
	.IOT TYOC,F
	JRST TTYLP

TYECRL:	.IOT NTYO,[^M]
	JRST TTYLP

TYELF:	.IOT NTYO,[^J]
	AOS VPOS
	JRST TTYLP

TYEBS:	.IOT NTYO,[^H]
	JRST TTYLP

TYERCR:	.IOT NTYO,[^M]
	JRST TTYLP

TTYLIN: HRRZ U,@TTYSTS
TTYLNN:	MOVE A,@TCTYP
	MOVE B,@TTYTYP
	MOVEM A,FTCTYP
	HRRZ F,T
	CAMN F,@SYSCN
	JRST TTYLN0
	JUMPL U,[ATYPE [ASCIZ /CONSOLE FREE/]
		 JRST TTYHK0]
	CAIN U,-1
	 POPJ P,
TTYLN0:	ONUM 2,F
	ALIGN 3.
	CAMN F,@SYSCN
	JRST [ALIGN 7.
	      ATYPE [ASCIZ /SYSTEM CONSOLE/]
	      JRST TTYLN1]
	MOVE C,U
	IDIV C,LUBLK
	ONUM 3,C
	CTYPE 40
	6TYPE @UNAME
	CTYPE 40
	6TYPE @JNAME
TTYLN1:	ALIGN 23.
	caile a,11
	  addi a,1
	CAIN A,11
	JRST [MOVE @TTYOPT
	      TRNN 20000
	      MOVEI A,12
	      JRST .+1]
	LSH A,1
	CAIGE A,MAXTYP
	ATYPE TYPTBL(A)	
	ALIGN 36.
	MOVEI A,1000
	CAMG A,@TCMXV
	PUSHJ P,NUMHAK	
	DNUM 3,@TCMXV
	ALIGN 44.
	CAMG A,@TCMXH
	PUSHJ P,NUMHAK
	DNUM 3,@TCMXH
TTYHK0:	ALIGN 50.
	MOVE A,@TTYCOM
	TLNE A,400000
	JRST [CTYPE "C
	      SETO C,
	      JRST .+1]
	TLNE A,%TCICO
	CTYPE "I
	TLNE A,%TCOCO
	CTYPE "O
	TLNE A,%TCRFS
	CTYPE "R
	TLNE A,%TCQRY
	CTYPE "Q	
	TLNE A,%TCRFT
	CTYPE "E
	ALIGN 55.
	MOVE B,@TTYOPT
	TLNE B,%TOALT
	ATYPE [ASCIZ /$ /]
	TLNE B,%TOCLC
	ATYPE [ASCIZ /a->A /]
	TLNE B,%TOERS
	ATYPE [ASCIZ /X /]
	TLNE B,%TOHDX
	ATYPE [ASCIZ "1/2 "]
	TLNE B,%TOMVB
	ATYPE [ASCIZ /<- /]
	TLNE B,%TOOVR
	ATYPE [ASCIZ /OV /]
	PUSH P,A
	PUSHJ P,TTYTIM
	POP P,A
	JUMPGE C,.+2
	PUSHJ P,COMHAK
	PUSHJ P,CRR
	POPJ P,

TTYTIM:	ALIGN 66.
	MOVE A,@TIME
	SUB A,@TTITM	
	IDIVI A,30.*60.	
	JUMPE A,[ATYPE [ASCIZ /    /]
		 POPJ P,]	
	CAIGE A,60.
	JRST [CTYPE 40
	      CTYPE 40
	      DNUM 2,A
	      POPJ P,]
	IDIVI A,60.
	CAIL A,10.
	JRST [ATYPE [ASCIZ /   -/]
	      POPJ P,]
	ADDI A,"0
	CTYPE (A)
	CTYPE ":
	IDIVI B,10.
	ADDI B,"0
	ADDI C,"0
	CTYPE (B)
	CTYPE (C)
	POPJ P,

TYPTBL:	ASCIZ /Printing /
	ASCIZ /Datapoint/
	ASCIZ /Loser    /
	ASCIZ /Imlac    /
	ASCIZ /Tektronix/
	ASCIZ /PDP-11 TV/
	ASCIZ /Memowreck/
	ASCIZ /Software /
	ASCIZ /Terminet /
	ASCIZ /Display  /
	ASCIZ /VT52     /
	ASCIZ /Datamedia/
	asciz /T1061    /
	asciz /C100     /
MAXTYP==.-TYPTBL

COMHAK:	ATYPE [ASCIZ /
 in COM link with /]
	PUSH P,T
	HRRZ T,A
	MOVE B,T
COMLP:	MOVE U,@TTYSTS
	SKIPN F,@UNAME
	JRST [CTYPE "T
	      ONUM 2,T
	      JRST COMLP1]	
	6XTYPE @UNAME
COMLP1:	HRRZ T,@TTYCOM
	CAMN T,B
	JRST [POP P,T
	      POPJ P,]
	CTYPE ",
	CTYPE 40
	JRST COMLP


TTYTOP:	ASCIZ /TTY Ix Uname  Jname    Type        V-size  H-size Com   Bits    Idle-min
/

TTYTP2:	ASCIZ /
			 Echoing       Special
Character group         MP   INT  IMG  UPP  ACT  INT/



1PEEK:	SKIPL RUUFLG
	 JRST NORMAL
	MOVE U,RUUIND
	IMUL U,LUBLK
	PUSHJ P,ULOOK2
	JRST PUTPKR


DETACH:	SETOM GNORDT
	JRST GUNNR0
GUNNER:	SETZM GNORDT
GUNNR0:	SKIPL NAMESW
	 JRST GUNNR1
	PUSHJ P,NMHACK
	 JFCL
GUNNR1:	SKIPL RUUFLG
	 JRST NORMAL
	MOVE U,RUUIND
	IMUL U,LUBLK
	SKIPGE @SUPPRO
	 SETOM GUNFLG
	JRST JHACK

GUNMSG: ASCIZ /
GUN DOWN THIS TREE? /
DETMSG:	ASCIZ /
DETACH THIS TREE? /

GUNHAK:
IFN GUNCTL,[
	.SUSET [.RXUNAME,,B]	;Validate the XUNAME somewhat
IRP W,,[EAK]
	CAMN B,[SIXBIT/W/]
	 JRST GUNCT4
TERMIN
	.SUSET [.RUNAME,,D]
GUNCT1:	CAMN B,D		;Characters that differ must be digits in UNAME
	 JRST GUNCT3
	SETZB A,C
	LSHC A,6
	LSHC C,6
	CAMN A,C
	 JRST GUNCT1
	CAIL C,'0
	 CAILE C,'9
	  CAIA		;Differs by other than trailing digit, flush
	   JRST GUNCT1	
	.SUSET [.RUNAME,,A]
	CAIA
GUNCT3:	 .SUSET [.RXUNAME,,A]
	.CALL [ SETZ ? SIXBIT/OPEN/ ? MOVEI DIRC  ;Now see if dir exists
		[SIXBIT/DSK/] ? [SIXBIT/.FILE./] ? [SIXBIT/(DIR)/]
		SETZ A]
	 CAIA
	  JRST GUNCT4		;OK
	;Compare A with xuname of job to be gunned
	MOVE B,RUUIND
	.CALL [ SETZ ? SIXBIT/USRVAR/ ? MOVEI %JSNUM(B)
		['XUNAME] ? SETZM B]
	 JRST GUNCT5		;Job vanished
	CAMN A,B
	 JRST GUNCT4
	ATYPE [ASCIZ/
I'm sorry, you aren't allowed to GUN or DETACH anyone but yourself./]
GUNCT5:	PUSHJ P,CHEND		;Finish output buffer
	.BREAK 16,160000	;Too much trouble to turn off all those
				; damn flags.
GUNCT4:
];IFN GUNCTL
	MOVEI A,GUNMSG
	SKIPGE GNORDT
	 MOVEI A,DETMSG
	ATYPE (A)
	PUSHJ P,CHEND		;FINISH OUTPUT AND MAKE MY BUFFER EMPTY
	MOVE OBUFP,[440700,,OBUF]
	JRST PUTPKG		;SLEEP AND WAIT FOR ANSWER

GUNNEM:	CAIE I1,"Y
	 JRST GUNNO
	MOVE I2,RUUIND		;GET THE INDEX
	SKIPGE GNORDT
	 JRST [TRO I2,400000
	       .CALL DETBLK
		JRST GUNNO
	       JRST GUNYES]
	.GUN I2,		;TRY THE GUN
GUNNO:	MOVEI I1,"N
GUNYES:	.IOT NTYO,I1
GUNSTP:	MOVE A,LMODE
	MOVEM A,MODE		;MAKE MODE THE LAST ONE
	MOVE A,LRUUIN
	MOVEM A,RUUIND
GUNNO1:	SETZM GUNFLG
	SETZM NAMESW
	.DISMIS [BEG]

DETBLK:	SETZ
	SIXBIT /DETACH/
	SETZ I2


LINES:	SKIPGE NAMESW
	 PUSHJ P,TTYFOO		;WILL SKIP IF WINS
	SKIPE RUUFLG
	 JRST TTYDES
LINES0:	ATYPE TTYTOP
	MOVE T,[-100,,0]
LINES1:	SETZ C,
	HRRZ A,T
	CAME A,@SYSCN
	 SKIPLE @TTYSTS
	   PUSHJ P,TTYLIN
LINEND:	AOBJN T,LINES1
	JRST PUTPKR

TTYFOO:	MOVE T,[-100,,0]
	MOVE A,NAMEHK		;GET SIXBIT NAME
TTYFLP:	SKIPLE U,@TTYSTS	;GET TTYSTS VARIABLE
 	 JRST [HRRZ U,U		;RIGHT HALF OF TTYSTS
	       CAME A,@UNAME	;GET UNAME OF TTY
	 	JRST TTYEND	;LOSER
	       HRRZM T,RUUIND	;SET UP RUUIND
	       SETOM RUUFLG	;AND RUUFLG
	       JRST POPJ1]	;SKIP RETURN
TTYEND:	AOBJN T,TTYFLP
	SETZM RUUFLG
	POPJ P,			;LOSE

TTYDES:	MOVE U,RUUIND
	IMUL U,LUBLK
	CAMG U,@USRHI
	 SKIPN @UNAME
	  JRST LINES0
	SETZM RNDFLG
	SETZ D,
	SKIPGE T,@UTMPTR		
	 JRST LINES0
	TRO T,400000
	SUB T,USRRCE
	ATYPE TTYTOP
	PUSH P,U
	PUSHJ P,TTYLNN
	JUMPGE C,.+2
	 PUSHJ P,COMHAK
	POP P,U
	ATYPE TTYTP2
	SKIPGE @TTYTBL		;DO I HAVE THE TTY?
	 JRST [MOVE A,TTSTSV
	       ADD A,U
	       MOVE B,1(A)
	       PUSH P,2(A)
	       MOVE A,(A)
	       JRST TTYDS1]
	MOVE A,@TTYST1		;YES. WHAT A WINNER
	MOVE B,@TTYST2
	PUSH P,@TTYSTS
TTYDS1:	MOVE F,[440600,,A]
TTYDLP:	PUSHJ P,CRR
	ATYPE CHRTYP(D)		
	ILDB C,F
	ALIGN 25.
	TRNE C,40
	CTYPE "*
	ALIGN 30.
	TRNE C,20
	CTYPE "*
	ALIGN 35.
	TRNE C,10
	CTYPE "*
	ALIGN 40.
	TRNE C,4
	CTYPE "*
	ALIGN 45.
	TRNE C,2
	CTYPE "*
	ALIGN 50.
	TRNE C,1
	CTYPE "*
	ADDI D,4
	CAIG D,44.
	JRST TTYDLP
	PUSHJ P,CRR
	ATYPE [ASCIZ /Options: /]
	POP P,A
	TLNE A,40000
	ATYPE [ASCIZ /Full-TV-set /]
	TLNE A,10000
	ATYPE [ASCIZ /Scroll /]
	TLNE A,4000
	ATYPE [ASCIZ /Sail /]
	TLNE A,200
	ATYPE [ASCIZ /No-more /]
	TLNE A,10
	ATYPE [ASCIZ /Defer-echo /]
	TLNE A,2
	ATYPE [ASCIZ /Super-image-input /]
	PUSHJ P,CRR
	JRST PUTPKR

CHRTYP:	ASCIZ /Control characters/
	ASCIZ /Letters           /
	ASCIZ /Digits            /
	ASCIZ /!"#$%&',.:;?@\`|  /
	ASCIZ |+ - * / = ^ _     |
	ASCIZ /Brackets          /
	ASCIZ /Control G and S   /
	ASCIZ /Control I and J   /
	ASCIZ /Altmode           /
	ASCIZ /Carriage return   /
	ASCIZ /Rubout            /
	ASCIZ /Space, backspace  /



UTPDIR:	MOVE A,RUUIND
	ADDI A,'0
	IORI A,(SIXBIT /UT /)
	SKIPA
DDXS:	MOVEI A,(SIXBIT /DSK/)
LINDD:	PUSHJ P,CRR
	MOVEI B,16.
	SKIPL LPCHPT
	.SLEEP B,
	SETOM LPCHPT
	HRRM A,DDXFIL
	.OPEN DIRC,DDXFIL
	 JRST PUTPKR
LINDD1:	MOVE A,[-477,,RHIST]
	.IOT DIRC,A
	SETZM (A)
	ATYPE RHIST
	JUMPGE A,LINDD1
	.CLOSE DIRC,
	JRST PUTPKR


UCPRL:	CLEARM UCPLC
	TRO C,400000	;SWITCH TO EXEC PGS
	MOVE U1,@(P)	;RETURN
	PUSH P,C
	PUSH P,C
	JRST UCPRL5

UCPRL2:	TRO C,400000
	AOS U2,UCPLC
	CAIL U2,100
	JRST QMTYO
	CAMN C,-1(P)
	JRST UCPRL6
	MOVEM C,(P)
UCPRL5:	LDB U2,C
	JUMPE U2,QMTYO
	TRZE U2,400000
	JRST UCPRL1
	LDB U3,[1000,,U2]	;PG #
	LDB U,[101100,,U2]	;USER
	IMUL U,LUBLK
	SKIPGE U1
	PUSHJ P,(U1)
	MOVEI C,@UPGCP
	ROT U3,-1
	ADDI C,(U3)
	HRLI C,222200
	SKIPGE U3
	HRLI C,2200
	JRST UCPRL2

UCPRL1:	TRZE U2,200000
	JRST UCPRL3
	MOVE C,[2200,,<MMPPAG_10.>]	;MMP
	ADDI C,(U2)
	TLNE U1,200000
	PUSHJ P,(U1)
	JRST UCPRL2


UCPRL3:	TLNE U1,100000
	PUSHJ P,(U1)
	MOVSI C,2200
	ADD C,MEMPNT
	ADDI C,(U2)
	JRST UCPRL2


UCPRL6:	MOVE C,(P)
	SUB P,[2,,2]
	POPJ P,

QMTYO:	CTYPE "?
	JRST BEG


IFN 0,[		;THIS MODE DOESN'T WORK AT ALL WELL
VSPACE==34

MEML:	CAIE OMODE,2
	 JRST MRHIST
	PUSHJ P,CHEND
	MOVEI OBUFP,OBUF-1
	MOVN C,TSYSM
	HRLZS C
	DWRD [20117]		;POINT MODE, SCALE 0, INTENSITY 3
	MOVE X,[220000,,22000]	;Y=0, POINT MODE; X=0, POINT MODE, INTENSIFY.
MLUP:	LDB B,MUR
	CAIGE B,340
	 JRST MEML4
	SUBI B,340
MLUP5:	PUSHJ P,MEMLD		;DRAW BLIP 2 FROBS LONG, 1 SPACE IN BETWEEN.
	DWRD X
	ADDI X,1
MEML9:	AOBJN C,MLUP
	DWRD [0]		;PARAMETER MODE
	MOVE X,[20175,,220060]	;SCALE 3 INTENSITY 5, POINT MODE; Y=60, POINT MODE.
	DWRD X
	MOVEI A,40
MLUPA:	DWRD [120000,,600177]	;X=0, VECTOR CONTINUE; INTENSIFY, HORIZONTAL LINE, PARAM MODE
	ADDI X,VSPACE
	CAIN A,1
	 JRST MLUPB		;KEEP DRAWING HORIZONTAL LINES.
	DWRD X
	SOJG A,MLUPA

MLUPB:	MOVEI U,0
	MOVEI A,0
	DWRD [20137]		;SCALE 1 INTENSITY 7, POINT MODE.
	MOVE X,[220062,,60000]	;Y=62, POINT MODE; X=0, CHARACTER MODE.
MLUP2:	CAML U,@USRHI
	 JRST MLUP3A
	DWRD X
	MOVE B,@UNAME
	TDC B,[404040404040]
	DWRD B
	SKIPE B,@UNAME
	 MOVE B,@JNAME
	TDC B,[404040404040]
	 MOVE C,[373702013700]	;LEAVE CHAR MODE; SCALE 1, INTENSITY 7, POINT MODE.
	LSHC B,-6
	TLO B,400000
	DWRD B
	DWRD C
	ADD X,[VSPACE,,]
	ADD U,LUBLK
	AOJA A,MLUP2

MEML4:	CAMN B,MURUSR
	 TRNN C,-1
	  JRST MLUP5
	MOVE U1,C
	ADD U1,MEMPNT
	HRRZ B,(U1)
MEML5:	JUMPE B,MEML8	;?
	TRZE B,400000
	JRST MEML6
	LDB D,[1000,,B]	;PG
	LDB B,[101100,,B]	;USR
	MOVE A,B
	PUSHJ P,MEMLD
	DWRD X
	SUBI X,2
	IMUL A,LUBLK
	EXCH U,A
	MOVEI T,@UPGCP
	EXCH U,A
	ROT D,-1
	ADDI T,(D)
	HRLI T,222200
	SKIPGE D
	HRLI T,2200
MEML7:	LDB B,T
	JRST MEML5

MEML6:	TRZE B,200000
	JRST MEML8
	MOVE T,[2200,,<MMPPAG_10.>]
	ADDI T,(B)
	JRST MEML7

MEML8:	ADDI X,4
	JRST MEML9

MEMLD:	IMULI B,VSPACE
	ADDI B,60
	DPB B,[221200,,X]
	DWRD X
	ADDI X,2
	POPJ P,

MLUP3A:	MOVEI A,MXHUSR
	MOVE X,[220062+MXHUSR*VSPACE,,60000]
	DWRD X
MLUP3:	MOVE C,MEMTB-MXHUSR(A)
	XOR C,[404040404040]
	DWRD C
	ADD X,[VSPACE,,]
	DWRD [370000,,20137]
	CAIL A,37
	JRST MLUP4
	DWRD X
	AOJA A,MLUP3

MLUP4:	DWRD [0]
	MOVEI A,OBUF
	SUB A,OBUFP
	SOS A
	HRLS A
	HRRI A,OBUF
	.IOT DISWC,A
	AOS PAGEPOS
	MOVE OBUFP,[440700,,OBUF]
	JRST PUTPKR
];IFN 0
.ELSE MEML: JRST MRHIST

;DISPLAY TRANSLATE TABLE.
TRANPK:	SETZB A,U	;LOOK AT USERS IN NUMER. ORDER.
TRANP4:	SKIPGE @TRNLST
	JRST TRANP1	;DO NOTHING IF LIST EMPTY.
TRANP3:	TRO A,400000	;INDICATE JOB SPEC IS USER NUMBER.
	.CALL TRANPB	;READ LIST INTO RHIST.
	JFCL
	TRZ A,400000
	CAMN B,TRANAP	;COUNTED-UP AOBJN IN B.
	JRST TRANP1	;DO NOTHING IF LIST EMPTY.
	6XTYPE @UNAME	;PRINT NAME OF JOB.
	CTYPE 40
	6XTYPE @JNAME
	TLNE A,200000	;IF THIS IS TRNLS1, SAY SO.
	ATYPE [ASCIZ / & inferiors/]
	CTYPE ":
	PUSHJ P,CRR
	HLLZS B
	MOVNS B
	ADD B,TRANAP	;AOBJN -> PART OF RHIST THAT WAS FILLED.
TRANP0:	XTYPE [SIXBIT/   !/]
	MOVE C,(B)	;GET MODE BITS.
IRPS X,,A I O,Y,,400000 1 2
	TLNE C,Y
	CTYPE "X
TERMIN
IRP X,,[^I,":,";," ]Y,,[1,4,2,3]
	CTYPE X
	6XTYPE Y(B)	;PRINT NEXT NAME.
	SKIPN Y(B)
	CTYPE "*	;IF NAME BLANK.
TERMIN
	XTYPE [SIXBIT/ => !/]
IRP X,,[" ,":,";," ]Y,,[1,4,2,3]
	CTYPE X
	6XTYPE 4+Y(B)
	SKIPN 4+Y(B)
	CTYPE "*
TERMIN			;PRINT OUTPUT NAMES.
	PUSHJ P,CRR
	ADD B,[9,,9]
	JUMPL B,TRANP0	;PRINT ALL ENTRIES SYS STORED.
TRANP1:	TLCE A,200000	;IF WAS TRNLST, PRINT TRNLS1.
	AOJA A,TRANP2	;ELSE PRINT NEXT USER'S TRNLST.
	SKIPGE @TRNLS1
	JRST TRANP1	;DON'T BOTHER WITH .CALL IF NOTHING.
	JRST TRANP3
TRANP2:	ADD U,LUBLK
	CAMGE U,@USRHI
	JRST TRANP4
	JSP U,UTPKR
	@DOZE

TRANPB:	SETZ
	SIXBIT/TRANEX/
	A
	TRANAP	;-> BUFFER.
	SETZM B	;UPDATED PTR GOES THERE.
TRANAP:	RHIST-GO,,RHIST

;PRINT INFO FOR ALL INFERIORS OF PROCEDURE WHOSE INDEX IS IN -1(P)
;  X HAS PROCEDURE DEPTH (0=TOP LEVEL)
;  -2(P) HAS TTOWNR OF THAT SUPERIOR (UNLESS X=0)

ULOOK:	MOVEI U,0	;INITIALIZE TO LOOK AT PROCEDURE WITH INDEX 0
	MOVE A,-1(P)
ULOOK1:	SKIPN @UNAME	;IS JOB SLOT ACTIVE?
	 JRST ULOOKE	;NO, TRY NEXT
	HRRZ B,@SUPPRO	;GET SUPPRO
	CAME A,B	;SKIP IF RIGHT SUPPRO
	 JRST ULOOKE	;DIFFERENT TRY NEXT
	MOVE B,UDISP
	CAMN B,[-1]
	 JRST ULOOK0
	JUMPN X,ULOOK0	;IF UNAME OR SINGLE-TREE MODE, AND LOOKING AT TOP-LEVEL JOBS,
	SKIPE GUNFLG
	 JRST [CAME B,U	;IF X OR Y COMMAND, WANT ONLY ONE TREE.  IS THIS THAT TREE?
		JRST ULOOKE
	       JRST ULOOK0]
	SKIPGE RUUFLG
	 SKIPE RUUIND
	  JRST .+2
	JRST ULOOK0
	CAME B,@XUNAME
	 CAMN B,@UNAME	;IN S OR J MODE, WINS IF TOP'S UNAME OR XUNAME MATCHES SPEC'D.
	  CAIA
	   JRST ULOOKE
ULOOK0:	SKIPN JHFLAG
	 JRST ULOOKA	;ALWAYS PRINT
	MOVE B,FOOCNT	;ADD ENTRY TO TABLE OF INDICES
	MOVEM U,RHIST(B)
	AOS FOOCNT
ULOOKA:	MOVEI F,0	;RONLY FLAG
	SKIPE @USTP
	 MOVEI F,1
	SKIPGE RONLY
	 JUMPN F,ULOOKE
	SKIPLE RONLY
	 JRST [CAIE A,777777
		JRST ULOOKE
	       HLLZ B,@TTYTBL
	       TLNN B,200000
	        JRST ULOOKE
		JRST .+1]
	EXCH A,U
	HRRZ B,@TTYTBL
	EXCH A,U
	SETOM TTOWNR
	JUMPE X,[PUSHJ P,ULOOK2	;SET TTOWNR FOR ALL TOP-LEVEL JOBS.
		 JRST ULENDR]
	CAMN B,U	;ELSE SET IT IFF IT WAS SET FOR SUPERIOR AND
	 SKIPN -2(P)	;SUPERIOR WANTED TO GIVE TTY TO ME.
	  SETZM TTOWNR
	PUSHJ P,ULOOK2
ULENDR:	PUSH P,TTOWNR
	SETZM TTOWNR
	PUSH P,U	;STORE POINTER IN -1(P) FOR ULOOK
	AOS X		;SET TO ONE LEVEL DEEPER
	PUSHJ P,ULOOK	;RECURSE
	SOS X		;RETURN LEVEL COUNT
	POP P,U		;RESTORE U
	POP P,TTOWNR
	MOVE A,-1(P)	;RESTORE A
ULOOKE:	ADD U,LUBLK	;GO TO NEXT BLOCK OF USER VARS
	CAMGE U,@USRHI	;CHECK FOR NONE LEFT
	 JRST ULOOK1	;MORE
	POPJ P,		;END

; E MODE

EPEEK:	MOVE A,EONLY
	CAMN A,[-1]
	 JRST JHACK
	LSH A,1
	LSH A,-1
	MOVEM A,EONLY
	JRST NORMLE

EAND:	PUSH P,A
	AND A,@EONLY
	JUMPE A,POPAJ
	JRST POPAJ1

EHACK:	SETZB X,U
	SKIPL EWORD
	 JRST EPLOOP
	HRRZ A,EWORD
	HRLM A,NAMEHK
EPLOOP:	MOVE A,NAMEHK
	SKIPE @UNAME
	 XCT EINST
	  JRST EEPEEK
	PUSHJ P,ULOOK2
EEPEEK:	ADD U,LUBLK
	CAMGE U,@USRHI
	 JRST EPLOOP
	JRST POPJ1

; HERE TO PRINT INFO FOR USER WITH INDEX IN U

ULOOK2:	MOVE A,U
	IDIV A,LUBLK
	ONUM 3,A	;OUTPUT INDEX/L
	XCT FLKT2(OMODE)	;GO TO FLKD IF DIS OR LPT
	ALIGN 4(X)	;INDENT TO INDICATE PROCEDURE DEPTH
	SKIPGE @APRC	;SKIP IF NOT DISOWNED
	 JUMPE X,FLKDSN	;DISOWNED TOP LEVEL JOB.
	MOVE A,@UNAME	;NOT DISOWNED, PICK UP UNAME
	SKIPE X		;SKIP IF TOP LEVEL
	 MOVE A,@JNAME	;NOT TOP, USE JNAME
	6TYPE A		;OUTPUT U OR J NAME
	XCT FLKT21(OMODE)
	JRST FLK6

	;DISOWNED PROCEDURE WITH TTY OR GE OUTPUT
FLKDSN:	6TYPE @UNAME	;MUST OUTPUT BOTH NAMES FOR FULL INFO
	CTYPE 40
	6TYPE @JNAME
	JRST FLK6

FLKD:	CAILE X,5	;FOR DIS OR LPT OUTPUT	;INDENT TO INDICATE PROCEDURE DEPTH
	 MOVEI X,5	;BUT DON'T LOSE IF GROTESQUELY DEEP TREE
	ALIGN 4(X)
	6TYPE @UNAME
	CTYPE 40
	6TYPE @JNAME
	CTYPE 40
	6TYPE @USYSNM
	CTYPE 40
FLK6:	XCT FLKT3(OMODE)	;SPACE OVER
	PUSHJ P,USTATUS	;OUTPUT STATUS COLUMN
	XCT FLKT4(OMODE)	;SPACE OVER
	SKIPL B,@TTYTBL	;SKIP IF USER DOES NOT CURRENTLY HAVE TTY
	 JRST TTYO2	;HAS TTY => GIVE TTY NUMBER.
	MOVEI A,"?
	SKIPN TTOWNR	;IF THIS JOB WOULD HAVE TTY IF TREE HAD ONE, SAY "?", ELSE
	 MOVEI A,"<
	TLNN B,%TBDTY	;SKIP & OUTPUT "<" IF PROCEDURE HAS HAD TTY TAKEN AWAY FROM IT
	 MOVEI A,">	;OUTPUT ">" IF PROCDURE HAS GIVEN AWAY TTY.
TTYO0:	CTYPE (A)
	SKIPGE @APRC
	 XTYPE [SIXBIT / DSN!/]
TTYO1:	XCT FLKT6(OMODE)	;SPACE OVER
	PUSHJ P,RESORS	;OUTPUT SPECIAL RESOURCES PROCEDURE IS USING
	XCT FLKT7(OMODE)	;SPACE OVER
	MOVE A,@NMPGS	;TOP OF USER MEM
	ADDM A,USRMEM	;ADD INTO RUNNING TOTAL OF USER MEM
	XCT FLKT8(OMODE)	;OUTPUT
	XCT FLKT85(OMODE)	;SPACE OVER
	XCT FLKT87(OMODE)	;PRINT PAGES SWAPPED OUT
	XCT FLKT88(OMODE)	;ALIGN
TIMOUT:	MOVE A,@JTMU
	ADDM A,USRTIM	;INCREMENT RUNNING TOTAL USER TIME
	ADDI A,9830.
	IDIVI A,19661.
	DPCT 2,A
	CTYPE "%
	HRRZ F,MODE
	CAIN F,%SCHED
	JRST GPK1	;DISPLAY SCHED VARIABLES, SWPIN RQ ETC INSTEAD OF RUN TIMES
TIMOT1:	XCT FLKT13(OMODE)	;SPACE OVER
	MOVEM A,TMPTCL	;STORE COLUMN NUMBER
	MOVE A,@UTRNTM	;GET TOTAL RUN TIME FOR THIS PROCEDURE
	ADDM A,USRJTM	;INCREMENT TOTAL RUN TIME
	PUSHJ P,TMPTH	;OUTPUT AMOUNT OF TIME USED BY PROCEDURE
	XCT FLKT9(OMODE)	;GO TO TIMOT1 IF TTY OR GE, OTHERWISE SPACE OVER
	SKIPE A,@PIRQC
	PUSHJ P,INTOUT
	XCT FLKT11(OMODE)	;GO TO TIMOT1 IF GE, OTHERWISE SPACE OVER
	SKIPE @IFPIR
	ONUM @IFPIR	;OUTPUT 2ND WORD OF INTERRUPT REQUESTS
TIMOT2:	PUSHJ P,CRR	;END OF LINE FOR PROCEDURE
	POPJ P,

INTOUT:	JFFO A,.+2
	 POPJ P,
	PUSH P,C
	MOVSI C,400000
	MOVNS B
	6XTYPE INTBL1(B)
	CTYPE 40
	LSH C,(B)
	TDZ A,C
	POP P,C
	JRST INTOUT

DECA:	IDIVI A,10.
	PUSH P,B
	CAIE A,0
	PUSHJ P,DECA
	POP P,B
	ADDI B,"0
	.IOT NTYO,B
	POPJ P,

OCTA:	IDIVI A,10
	PUSH P,B
	CAIE A,0
	PUSHJ P,OCTA
	POP P,B
	ADDI B,"0
	.IOT NTYO,B
	POPJ P,

NAMA:	SETZ B,
	ROTC A,7
	JUMPE B,CPOPJ
	.IOT NTYO,B
	JRST NAMA

GPK1:	CTYPE 40
	DNUM 4,@USIPRQ	;OUTPUT # PG SWPIN RQ
	CTYPE 40
	MOVE A,@USWPRI
	IDIVI A,15000.	;CONVERT TO PG MILLISEC'S
	DNUM 5,A
	SKIPL @SUPPRO
	JRST TIMOT2	;NOT TOP LVL
	PUSHJ P,CRR
	ALIGN 10.
	ATYPE [ASCIZ /Total for tree /]
	MOVE B,@UTMPTR
	MOVE A,400000(B)
	IDIVI A,19661.
	DPCT 2,A
	CTYPE "%
	CTYPE 40
	MOVE B,@UTMPTR
	SUB B,USRRCE
	ADD B,SWRCE
	MOVE A,400000(B)
	IDIVI A,15000.	;CONVERT TO ASYMPTOTIC PG-MS
	DNUM 5,A
	ATYPE [ASCIZ / Pg-ms !/]
	JRST TIMOT2

FLKT2:	JFCL		;TTY
	JFCL		;DATAPOINT OR OTHER DISPLAY
	JRST FLKD	;DISPLAY
	JRST FLKD	;LPT
	JRST FLKD	;WIDE DISPLAY
	JRST FLKD	;WIDE TTY
OMODER FLKT2

FLKT21:	JFCL
	PUSHJ P,SNMTYP
	 .LOSE 1000
	 .LOSE 1000
	 .LOSE 1000
	 .LOSE 1000
OMODER FLKT21

SNMTYP:	XTYPE [SIXBIT /   !/]
	6TYPE @USYSNM
	POPJ P,

FLKT3:	ALIGN 1,11.	;STATUS
	ALIGN 1,22.
	ALIGN 1,28.
	ALIGN 1,28.
	ALIGN 1,28.
	ALIGN 1,28.
OMODER FLKT3

FLKT4:	ALIGN 1,22.	;TTY
	ALIGN 1,29.
	ALIGN 1,37.
	ALIGN 1,37.
	ALIGN 1,37.
	ALIGN 1,37.
OMODER FLKT4

FLKT6:	ALIGN 1,24.	;RESOURCES
	ALIGN 0,33.
	ALIGN 1,41.
	ALIGN 1,41.
	ALIGN 1,41.
	ALIGN 1,41.
OMODER FLKT6

FLKT7:	ALIGN 1,27.	;CORE
	ALIGN 0,37.
	ALIGN 1,45.
	ALIGN 1,45.
	ALIGN 1,45.
	ALIGN 1,45.
OMODER FLKT7

FLKT8:	DNUM 2,A
	DNUM 2,A
	DNUM 3,A
	DNUM 3,A
	DNUM 3,A
	DNUM 3,A
OMODER FLKT8

FLKT85:	ALIGN 1,30.	;OUT
	ALIGN 1,41.
	ALIGN 1,49.
	ALIGN 1,49.
	ALIGN 1,49.
	ALIGN 1,49.
OMODER FLKT85

FLKT87:	DNUM 2,@NSWPGS
	DNUM 2,@NSWPGS
	DNUM 3,@NSWPGS
	DNUM 3,@NSWPGS
	DNUM 3,@NSWPGS
	DNUM 3,@NSWPGS
OMODER FLKT87

FLKT88:	ALIGN 1,34.	;%RUNTIME
	ALIGN 1,45.
	ALIGN 1,54.
	ALIGN 1,54.
	ALIGN 1,54.
	ALIGN 1,54.
OMODER FLKT88

FLKT9:	JRST TIMOT2
	JRST TIMOT2
	ALIGN 1,67.
	ALIGN 1,67.
	ALIGN 1,67.
	ALIGN 1,67.

OMODER FLKT9

FLKT11:	 .LOSE 1000
	 .LOSE 1000
 	CTYPE 40
	CTYPE 40
	CTYPE 40
	CTYPE 40
OMODER FLKT11

FLKT13:	MOVEI A,36.		;TOTAL TIME
	MOVEI A,47.
	MOVEI A,57.
	MOVEI A,57.
	MOVEI A,57.
	MOVEI A,57.
OMODER FLKT13

RESORS:	MOVEI F,0
	SKIPL @IOTLSR
	JRST RESR2
	MOVEI T,"I
	JSP A,RESCHO
RESR2:	MOVEI T,"%
	HRRZ B,@UREALT
	CAMN U,B
	JSP A,RESCHO
	SKIPE PDPUSR
	CAME U,@PDPUSR
	JRST RESR4
	MOVEI T,"6
	JSP A,RESCHO
	MOVEI T,"D
	CONI 130,A
	SKIPN A
	JSP A,RESCHO
RESR4:	MOVSI B,RESTAB-RESTBE
RESR3A:	HRRZ T,RESTAB(B)
	SKIPN (T)
	JRST RESR3	;NOT DEFINED IN SYSTEM
	CAME U,@RESTAB(B)
RESR3:	AOBJN B,RESR3A
	JUMPGE B,RESRND
	LDB T,[350700,,RESTAB(B)]
	MOVEI A,RESR3
RESCHO:	TRON F,1
	XCT RESOR2(OMODE)	;BLINKING ON (IF NOT ALREADY)
	CTYPE (T)
	JRST (A)

RESRND:	TRNE F,1
	XCT RESOR3(OMODE)	;BLINK OFF
	POPJ P,

RESOR2:	JFCL
	CTYPE 40
	CTYPE ^B
	JFCL
	JFCL
	JFCL
OMODER RESOR2

RESOR3:	JFCL
	CTYPE 40
	CTYPE ^E
	JFCL
	JFCL
	JFCL
OMODER RESOR3

RESTAB:	"C_11.,,@CUSER
	"D_11.,,@DISUSR
	"L_11.,,@LPTUSR
	"R_11.,,@PTRUSR
	"M_11.,,@UMASTER
	"P_11.,,@PLTUSR
	"T_11.,,@PTPUSR
	"V_11.,,@NVDUSR
	"S_11.,,@TABUSR
	"B_11.,,@MTUSR
	"W_11.,,@PRVUSR
RESTBE:

	;USER HAS TTY
TTYO2:	CTYPE "T
	ANDI B,-1
	ONUM B
	JRST TTYO1

;OUTPUT THE "STATUS" OF THE JOB IN U.
USTATUS:	MOVEI A,40	;LOAD WITH CODE FOR SPACE
	SKIPN @PICLR	;SKIP IF PROCEDURE NOT PROCESSING INTERRUPT
	MOVEI A,"*	;REPLACE SPACE WITH * IF INTERRUPTED
	SKIPN @IDF1
	 SKIPE @IDF2
	  MOVEI A,"*
	SKIPGE B,@USWST
	 MOVEI A,"_	;USER DESIRED OUT
	SKIPGE @USWSCD
	 MOVEI A,">	;SWAP-BLOCKED
	CTYPE (A)	;OUTPUT
	SKIPE A,@USTP	;SKIP IF RUNNING
	 JRST URUN1	;NOT RUNNING, OUTPUT STOP WORD
	SKIPE @FLSINS	;SKIP IF NOT BLOCKED
	 JRST HAIR2	;BLOCKED, OUTPUT MNEMONIC FOR HUNG OPERATION
	MOVE B,@UPC	;GET USER PC
	TLNN B,10000	;SKIP IF USER MODE
	 JRST EHAIR	;EXEC MODE, OUTPUT + AND MNEMONIC
IFN CRAWLP,[	;CRAWL, FLY, ETC.
	MOVE A,@JTMU
	ADDI A,9830.
	IDIVI A,19661.
	MOVEI B,0
	CAIL A,1
	 MOVEI B,1
	CAIL A,2
	 MOVEI B,2
	CAIL A,10.
	 MOVEI B,3
	CAIL A,49.
	 MOVEI B,4
	CAIL A,79.
	 MOVEI B,5
	CAIL A,89.
	 MOVEI B,6
	6XTYPE RUNTBL(B)
]
IFE CRAWLP,6XTYPE [SIXBIT /RUN/]
USTAT2:	SKIPN A,@RPCL	;SKIP IF RPCLSR'ING GOING ON
	 POPJ P,
	SKIPL A
	 CTYPE ">	;RPCLSR'ING (STOPPING <'ED PROCEDURE)
	SKIPG A
	 CTYPE "<	;BEING RPCLSR'ED (STOPPED BY >'ED PROCEDURE)
	ANDI A,-1	;GET USER INDEX
	IDIV A,LUBLK	;GET USER # OF OBJECT OR SOURCE OF RPCLSR'ING
	ONUM A		;OUTPUT USER NUM
	POPJ P,

	;NOT RUNNING (.USTP NONZERO).
URUN1:	LSHC A,-30.	;RIGHT JUSTIFY LEFT TWO DIGITS OF .USTP.
	ONUM 2,A	;OUTPUT LEFT TWO DIGITS
	CTYPE "!	;OUTPUT "!"
	LSH B,-6	;RIGHT JUSTIFY REMAINDER
	ONUM B		;OUTPUT COUNT OF TRANSIENT REASONS TO BE STOPPED
	JRST USTAT2

HAIR2:	TLNN B,200000
	 JRST HAIR
	TLNE B,10000
	 SKIPA A,[SIXBIT /IPAGE/]
	  IFN CRAWLP,JRST HAIR3
	  IFE CRAWLP,JRST HAIR5
	JRST HAIR1

HAIR3:	MOVEI C,600.	;THRASH FIRST IF AUSOPG > 600.
	CAML C,@AUSOPG
	 JRST HAIR5
	MOVEI C,6	;WOULDN'T IT BE GREAT IF SOMEONE COMMENTED THIS?
	MOVEI B,@AC0S
	ADD B,U
	HLRZ A,(B)
	CAIE A,-200	;AC6 MUST BE -200,,?
	 JRST HAIR5
	ADDI C,1
	MOVEI B,@AC0S
	ADD B,U
	MOVE A,[SIXBIT /THRASH/]
	SKIPL (B)	;AC7 MUST BE <0
HAIR5:	 MOVE A,[SIXBIT /PAGE/]	
	JRST HAIR1

EHAIR:	CTYPE "+
HAIR:	SKIPGE A,@SV40	;SKIP IF SIGN BIT ON
	 JRST IOTUUO
	CAML A,[100000,,]	;SKIP IF UUO
	 JRST ILLOP	;NOT A UUO
	LSH A,-27.	;RIGHT JUSTIFY OP CODE AND AC
	CAIG A,47	;SKIP IF TOO LARGE FOR SYS UUO
	 CAIGE A,40	;SKIP IF SYS UUO
	  SKIPA A,[SIXBIT /UUO/]	;NOT SYS UUO, OUTPUT "UUO"
	   XCT UUOTB-40(A)	;SYS UUO, DISPATCH
HAIR1:	6XTYPE A	;OUTPUT MNEMONIC
	JRST USTAT2

ILLOP:	6XTYPE [SIXBIT /XXX/]	;ILLEGAL OPERATION
	JRST USTAT2

IOTUUO:	LDB A,[270300,,@SV40]
	MOVE A,UIOTAB(A)
	JRST HAIR1

UIOTAB:	IRPS A,,[BLKI DATAI BLKO DATAO CONO CONI CONSZ CONSO]
	SIXBIT /A/
	TERMIN

UUOTB:	JRST AIOT
	MM /OPEN/
	JRST AOPER
	JRST ACALL
	MM /USET/
	MM /BREAK/
	MM /STATUS/
	MM /ACCESS/

ACALL1:	SKIPGE C,@UUAC	;.CALL IOT OR SIOT
	 MOVE D,@LSCALL
	JRST AIOT1	;DON'T BE CRETINOUS WITH IOT/SIOT!

AIOT:	LDB C,[270400,,@SV40]	;.IOT, GET AC FIELD
	MOVEI D,0	;NOT SIOT
AIOT1:	MOVEI A,@IOCHNM
	ADD A,U
	HRRZ C,(A)	;RIGHT HALF OF IOCHNM IS INDEX TO IOTTB
	PUSHJ P,AIOTNM
	JRST USTAT2

AIOTNM:	MOVEI B,(C)
	HLL A,@CLSTB
	TLNN A,100040
	 JRST AIOTN1
	HLRZ C,(A)		;JOB DEVICE
	SKIPA A,@JBDEV
AIOTN1:	 HLLZ A,@DCHSTB
	6XTYPE A
	MOVEI C,(B)
	MOVE T,@IOTTB
	TLNE T,400000
	 CTYPE "B
	CAMN D,[SIXBIT/SIOT/]
	 CTYPE "S
	MOVEI C,"I
	TLNE T,200000
	 MOVEI C,"O
	CTYPE (C)
	POPJ P,

ACALL:	LDB C,[270400,,@SV40]	;GET AC FIELD
	JUMPE C,ACALL0
	6XTYPE @CALSXB	;OUTPUT MNEMONIC
	JRST USTAT2

ACALL0:	MOVE C,@LSCALL
	CAME C,[SIXBIT/SIOT/]
	 CAMN C,[SIXBIT/IOT/]
	  JRST ACALL1
ACALL2:	6XTYPE @LSCALL
	JRST USTAT2

AOPER:	HRRZ C,@SV40	;GET OPER NUM
	MOVE A,CALSXB
	SUB A,OPRSXB
	CAML C,A
	 MOVEI C,0	;NOT IN RANGE, DISPLAY AS 'OPER'
	6XTYPE @OPRSXB
	JRST USTAT2

TTAB:	PUSH P,A
	CTYPE 40
	LDB U3,[300,,LINEPOS]
	JUMPN U3,.-3
	POPJ P,

CRR2:	PUSHJ P,CRR
CRR:	ATYPE [ASCIZ /
/]
	POPJ P,

	;OUTPUT TIME IN SECONDS AS HH:MM:SS
TMPTH:	LSH A,-6	;WIN FOR SIGN BIT
	IDIVI A,1000.*1000000./<4000.*100>	;CONVERT PAGER/4 CLOCK TICKS TO SECONDS
TMPT:	JUMPE A,CPOPJ
	SETZM SPNDD	;INITIALIZE TO ZERO SPACES RIGHT JUSTIFICATION
	MOVEI D,0	;INITIALIZE DIGIT COUNT
TMP2:	CAMGE A,TMT1(D)	;SKIP IF REMAINING NUM OF SECS IS DIVISIBLE BY APPROPRIATE DIVISOR
	 JRST TMP1	;NOT DIVISIBLE
TMP3:	IDIV A,TMT1(D)	;DIVIDE OFF DIGIT
	SKIPL SPNDD	;SKIP IF PAST FIRST DIGIT TO BE OUTPUT
	JRST TMP4	;RIGHT JUSTIFY FIRST DIGIT
TMP5:	CTYPE "0(A)	;OUTPUT DIGIT
	MOVE A,B	;REMAINDER NEW BECOMES NUM OF UNCONVERTED SECS
	TRNN D,1	;SKIP IF 2ND DIGIT OF PAIR WAS JUST OUTPUT
	AOJA D,TMP3	;INCREMENT COUNT AND GO DO 2ND DIGIT
	CAIL D,7	;SKIPE IF NOT DONE
CPOPJ:	 POPJ P,	;DONE, EXIT
	CTYPE ":	;OUTPUT COLON
	AOJA D,TMP3	;INCREMENT COUNT AND START NEXT PAIR

	;NOT DIVISIBLE- ACCUMULATE SPACES FOR EVENTUAL OUTPUT AT START
TMP1:	TRNE D,1	;SKIP IF EVEN NUM OF DIGITS OUTPUT (START OF PAIR)
	AOS SPNDD	;2ND DIGIT, EXTRA SPACE FOR COLON
	AOS SPNDD	;SPACE FOR DIGIT
	AOJA D,TMP2	;INCREMENT COUNT AND TRANSFER

	;RIGHT JUSTIFICATION OF OUTPUT
TMP4:	MOVE U3,SPNDD	;NUMBER OF SPACES NEEDED
	CAIG U3,2	;IF GREATER THAN 1 DAY
	 MOVEI U3,2	;THEN SCREW ALIGNMENT
	SUBI U3,2
	ADD U3,TMPTCL
	ALIGN 1,(U3)	;SPACE OVER
	SETOM SPNDD	;INDICATE FIRST DIGIT OUT, TURNS OFF TMP1 & TMP4
	JRST TMP5

	;TABLE OF SECONDS
TMT1:	36000.*24.	;10 DAYS
	3600.*24.	;DAYS
	36000.	;10 HOURS
	3600.	;HOURS
	600.	;10 MINUTES
	60.	;MINUTES
	10.	;10 SECONDS
	1	;SECONDS


	;MEMORY HISTOGRAM

MRHIST:	SETOM RNDFLG
	SETZM V4
	SETZM V2
	JRST MHISTM
MHIST:  SETOM V4
	SETZM RNDFLG
	SKIPE RUUFLG
	 JRST MEMHAK	;FOR MEMORY STATUS OF INDIVIDUAL JOB
MHISTN:	SETZM V2	;V2 COUNTS SYSTEM TYPE PAGES
	ATYPE HTOP
	SKIPE UWRKST
	 ATYPE HTOPWS
	XCT CRR
MHISTM:	SETZM RHIST
	MOVE A,[RHIST,,RHIST+1]
	BLT A,RHIST+377
	MOVN C,TSYSM
	HRLZS C
	SETZB U,D
HL4E:	PUSHJ P,HL4C	;BOTTOM PAGES BELONG TO SYS JOB,
	AOBJN C,.+1
	HRRZI B,0(C)	;BUT AREN'T LINKED UP INREGULAR WAY
	LSH B,10.
	CAMGE B,@HUSRAD
	 JRST HL4E
HL4D:	LDB A,MUR
	CAMN A,MURUSR
	 JRST HL4A	;USER
	CAIGE A,340	;IF MUR CODES NOT HIGH THIS WEEK,
	 ADDI A,340	; FORCE IT HIGH
	AOS RHIST(A)	;COMPUTE BASIC HIST
HL4B:	AOBJN C,HL4D
	SKIPN RNDFLG	;SKIP NEXT STEP IF IN M MODE
	JRST HL4
HLMX:	MOVE U,@USRHI	;COMPUTE HIGHEST TOTAL MEMORY
	SUB U,LUBLK
	SETZ C,		;FOR HISTOGRAM TO AVOID SWAPOUT LOSSAGE
HLMX1:	SKIPN @UNAME
	 JRST HLMX2
	MOVE B,@NMPGS
	CAMGE C,B
	 MOVE C,B
HLMX2:	SUB U,LUBLK
	JUMPGE U,HLMX1	
	MOVEM C,SHRTOT	;SAVE HIGHEST TOTAL IN CONVENIENT NICHE
HL4:	SETOB A,U
	MOVEI B,377
HL2:	HRRE C,RHIST(B)	;FIND BIGGEST USE
	CAML A,C
	JRST HL1
	MOVE A,C
	MOVE U,B
HL1:	SOJGE B,HL2
	JUMPL A,HLX1	;THRU
	HLRZ D,RHIST(U)	;SHARED PGS IF USER
	SETOM RHIST(U)
	MOVE C,U
	IMUL U,LUBLK
	CAIL C,200	;>MAXJ
	 JRST HL5	;SPECIAL CODE
	CAMGE U,@USRHI
	SKIPN @UNAME
	 JRST HL4	;NON EX JOB, IGNORE
	PUSHJ P,PMEMLN
	XCT HLTT2(OMODE)
	SKIPN RNDFLG
	PUSHJ P,RESORS
NMOUT:	PUSHJ P,CRR
	JRST HL4

HL4A:	PUSH P,C
	HRRZ D,@MMSWP	;LENGTH OF CIRC P
	ADD C,MEMPNT
	HRLI C,2200
	SETOM MMUSFL
	PUSHJ P,UCPRL
	    400000,,HL4C
	POP P,C
	AOSN MMUSFL
	 AOS RHIST+200	;PAGE NOT LINKED TO ANY USER
	JRST HL4B

HL4C:	AOS MMUSFL
	MOVE A,U
	IDIV A,LUBLK
	AOS RHIST(A)
	MOVSI B,1
	CAILE D,1
	 ADDM B,RHIST(A)
	POPJ P,


HLX1:	ATYPE [ASCIZ /Available user memory= /]
	MOVE A,TSYSM
	PUSH P,A
	SUB A,V2
	DNUM A
	CTYPE "/
	POP P,A
	DNUM A
	PUSHJ P,CRR
	JRST PUTPKR

HL5:	JUMPE A,HL4
	PUSH P,A
	MOVE A,C
	CAIL C,340
	 JRST HL3
	CAIN C,200
	 JRST HL7
	ONUM 6,A
	XTYPE [SIXBIT /SPECIAL!/]
	JRST HL6

HL3:	SUBI A,340
	MOVE A,MEMTB(A)
	SKIPE RNDFLG
	 JRST HLHST
	6TYPE A
HL6D:	CAMN A,[SIXBIT /FREE/]
	 JRST HL6A
HL6:	POP P,A
	ADDM A,V2
HL6B:	SKIPE RNDFLG
	 JRST HL4
	ALIGN 20.
	DNUM 3,A
	JRST NMOUT

HL7:	SKIPN RNDFLG
	 XTYPE [SIXBIT/LOOSE!/]
HL6A:	POP P,A
	JRST HL6B

; IN HISTOGRAM PRINT ONLY HOLE AND FREE

HLHST:	CAME A,[SIXBIT /HOLE/]
	 CAMN A,[SIXBIT /FREE/]
	  CAIA
	   JRST HL6D
	EXCH A,(P)
	6TYPE (P)
	ADDM A,V2
	SETO C,
	SKIPN V4
	 PUSHJ P,PMEMLN
	POP P,T
	ALIGN 20.
	MOVEI C,"@
	CAME T,[SIXBIT /FREE/]
	 MOVEI C,"O
	PUSHJ P,HOUT
	JRST NMOUT

PMEMLN:	PUSH P,A	;SHARED IN D, IDX IN C, TOT MEM IN A
	SKIPE V4
	 JRST PMEML1
	MOVE T,SHRTOT	;SET UP AT HLMX TO HIGHEST TOTAL
	IDIV T,HSZ	;FIGURE OUT MARK VALUE
	ADDI T,1
	MOVEM T,V3	;SAVE THIS FIGURE
	ATYPE HTOP1	
	DNUM 2,T
	ATYPE [ASCIZ / pages
/]
	ALIGN 20.
	MOVEI A,5
PMLOOP:	MOVE B,A	;PRINT HEADER LINE
	IMUL B,V3
	CTYPE " 
	CAIGE B,100.
	 CTYPE " 
 	CAIGE B,10.
	 CTYPE " 
	CAILE B,256.	;IGNORE OVER 256K
	 JRST PMLOP1
	DNUM 2,B
	CTYPE "+
	ADDI A,5
	CAMGE A,HSZ
	 JRST PMLOOP
PMLOP1:	PUSHJ P,CRR
	SETOM V4
	JUMPLE C,[POP P,A
		  POPJ P,]
	CAIA
PMEML0:	 PUSH P,A
PMEML1:	6TYPE @UNAME
	CTYPE 40
	6TYPE @JNAME
	SKIPN @USTP
	 CTYPE 40
	SKIPE @USTP
	 CTYPE "*
	CAIE C,1	;DONT PRINT GARBAGE
	 ONUM 3,C	;INDEX
	ALIGN 20.
	SKIPN RNDFLG
	 DNUM 3,(P)	;IN
	MOVE A,@HUSRAD	
	LSH A,-10.
	SKIPN C
	 ADDM A,V2
	POP P,B
	SKIPE RNDFLG
	 JRST MEMHST	;JRST OFF TO HISTOGRAM PRINTER
	CTYPE 40
	DNUM 3,A
	ALIGN 3,
	DNUM 3,D	;SHARED
	ALIGN 3,
	DNUM 3,@NSWPGS	;PGS OUT
	CTYPE 40
	DNUM 3,@NMPGS	;TOTAL
	SKIPN UWRKST
	 POPJ P,
	ALIGN 1,46.
	HLRZ A,@UWRKST
	DNUM 3,A	;WORKING SET SIZE
	HLRZ A,@USVWRK
	DNUM 4,A	;SAVED WSS
	CTYPE 40
	IRP FLG,,[%SWLOD,%SWOUT,%SWSB,%SWBEM,%SWDSO]CH,,[L,O,B,S,_]
	 MOVS A,FLG
	 TDNE A,@USWST
	  CTYPE "CH
	 TERMIN
	ALIGN 1,60.
	MOVE A,@TIME
	SUB A,@USWTIM
	IDIVI A,30.
	DNUM A
	POPJ P,

MEMHST:	MOVE A,B	;PRINT HISTOGRAM HERE
	SUB A,D
	MOVEI C,"+	;TOTAL IN CORE - SHARED
	PUSHJ P,HOUT
	MOVE A,D	;SHARED
	MOVEI C,"=
	PUSHJ P,HOUT
	MOVE A,@NSWPGS	;SWAPPED OUT
	MOVEI C,"-
	PUSHJ P,HOUT
	MOVE A,@NMPGS
	CAML A,V3
	POPJ P,
	MOVEI C,"-	;HERE TO PRINT ONE MARK FOR EACH USER
	MOVE B,@NSWPGS	;WILL PRINT HIGHEST OF THE CATEGORIES
	SUB A,B		;TOT-SWAPPED
	CAMGE B,D
	MOVEI C,"=
	SUB A,D		;ALL IN	
	CAMGE B,A
	MOVEI C,"#
	MOVE A,V3
	PUSHJ P,HOUT
	POPJ P,

HOUT:	IDIV A,V3	;MARK PRINTER
	JUMPE A,CPOPJ
	CTYPE (C)
	SOJG A,.-1
	POPJ P,

DEFINE M SQZ,SXB
LOC MEMTB1+ZZ
	SQUOZE 0,SQZ
LOC MEMTB2+ZZ
	SIXBIT /SXB/
ZZ==ZZ+1
TERMIN
ZZ==0
ZZZ==.

M MUEX,EXEC
M MUIOB,IOBUF
M MUFR,FREE
M MUINP,PROCES
M MUMGB,MAGBUF
M MUMMP,MMP
M MUDISB,DISPLA
M MUFRT,SFREE
M MU23B,DSKBUF
M MU23UD,DSKUDR
M MU23MD,DSKMFD
M MU23TT,DSKTUT
M MU23LS,DIRCPY
M MUHOLE,HOLE
M MUDDT,EXDDT
M MUNET,NETWRK
M MUSWPG,SWAPG
M MUCHA,CHAOS
LMEMTB==ZZ
LOC ZZZ
EXPUNGE M,ZZ,ZZZ


HLTT2:	JFCL
	CTYPE 40
	CTYPE 40
	CTYPE ^I
	CTYPE 40
	CTYPE 40
OMODER HLTT2

;PAGE-IN HISTORY (! MODE)
;WITH NO ARG, SHOW ALL, WITH JOB NUMBER ARG, JUST THAT JOB
;WHEN DOING ONE JOB, SHOULD SHOW HIS SWAP EVENTS ALSO (NOT YET IMPLEMENTED)
PAGH:	MOVE A,PGIHTL		;TRY TO GET STUFF INTO CORE IF NOT ALREADY
	SETZM RHIST
	SETZM RHIST-1(A)
	MOVS B,PGIHTB		;COPY OUT THE PAGE-IN HISTORY
	HRRI B,RHIST
	BLT B,RHIST-1(A)
	PUSHJ P,HTBSRT		;SORT BY TIME (NEWEST TO HIGHEST ADDRESS)
	MOVEI B,[ASCIZ/Idx UNAME  JNAME  Pg Ld Time/]
	MOVEI C,28.+3
	PUSHJ P,COLSET		;PICK NUMBER OF COLUMNS, SET D TO NO. OF COLUMNS
	SETO X,			;LAST TIME
	MOVEI C,-1(A)		;LIMIT
	MOVEI A,0
	MOVE B,D		;NUMBER OF COLUMNS TO GO, THIS LINE
PAGH1:	SKIPN RHIST(A)
	 JRST PAGH9
	LDB U,[221000,,RHIST(A)]	;USER INDEX OF THIS ONE
	SKIPE RUUFLG
	 CAMN U,RUUIND
	  CAIA
	   JRST PAGH9		;NOT INTERESTED
	ONUM 3,U
	IMUL U,LUBLK
	CTYPE 40
	6TYPE @UNAME
	CTYPE 40
	6TYPE @JNAME
	LDB U,[321000,,RHIST(A)]	;VIR PG #
	ONUM 4,U
	CTYPE 40
	SKIPL RHIST(A)
	 CTYPE 40
	SKIPGE RHIST(A)
	 CTYPE "L
	CTYPE 40
	PUSHJ P,ELTMPR		;ELAPSED TIME
	SOJG B,[ ATYPE [ASCIZ/   /] ? JRST PAGH9]
	MOVE B,D
	XCT CRR
PAGH9:	CAMGE A,C
	 AOJA A,PAGH1
	JRST PUTPKR

COLSET:	MOVE D,NHLNS
	ADDI D,3-1		;3 SPACES DON'T APPEAR AFTER LAST COLUMN
	IDIV D,C		;GET NUMBER OF COLUMNS
	SKIPN D
	 MOVEI D,1
	SKIPA C,D
COLST1:	 ATYPE [ASCIZ/   /]
	ATYPE (B)
	SOJG C,COLST1
	JRST CRR

;PRINT ELAPSED TIME IN 4 COLUMNS, PREVIOUS TIME IN X, -1 IF NONE, CURRENT TIME IN RH(RHIST(A))
ELTMPR:	PUSH P,A
	PUSH P,B
	MOVE B,X
	HRRZ X,RHIST(A)
	MOVE A,B
	JUMPL A,[ ATYPE [ASCIZ/    /] ? JRST POPBAJ ]
	SUBM X,A		;NUMBER OF 30THS ELAPSED
	SKIPGE A
	 ADD A,[1,,]
	IDIVI A,30.
	CAIGE A,100.
	 JUMPN A,ELTMP1
	DNUM 4,A
	JRST POPBAJ

ELTMP1:	CAIGE A,10.
	 JRST ELTMP2
	DNUM 2,A
	CTYPE ".
	MOVE A,B
	IDIVI A,3
ELTMP3:	CTYPE "0(A)
	JRST POPBAJ

ELTMP2:	CTYPE "0(A)
	CTYPE ".
	IMULI B,333.
	MOVE A,B
	IDIVI A,1000.
	CTYPE "0(A)
	MOVE A,B
	IDIVI A,100.
	JRST ELTMP3

;SORT RHIST, TO PUT LATEST TIMES LAST, A HAS LENGTH
;THIS BUBBLE SORT WILL TAKE LESS THAN A SECOND FOR 128 ENTRIES, GOOD ENOUGH
;CLOBBER B,D,T
HTBSRT:	PUSH P,A
	SUBI A,1
HTBSR1:	MOVEI B,-1(A)
	JUMPE B,POPAJ
HTBSR2:	HRRZ D,RHIST(A)	;BIGGEST TIME SO FAR
HTBSR3:	HRRZ T,RHIST(B)	;TIME TO COMPARE WITH
	SUB T,D
	TRNE T,400000
	 JRST HTBSR4	;(B) IS LESS THAN (A)
	MOVE T,RHIST(A)
	EXCH T,RHIST(B)
	MOVEM T,RHIST(A)
	SOJGE B,HTBSR2
	SOJA A,HTBSR1

HTBSR4:	SOJGE B,HTBSR3
	SOJA A,HTBSR1

;SWAPPING HISTORY ($ MODE)
;WITH NO ARG, SHOW ALL EVENTS
;WITH JOB# ARG, SHOW JUST EVENTS FOR THAT JOB
;WITH ZERO ARG, SUMMARIZE VARIOUS CRUFT (NOT YET IMPLEMENTED)
;FOR EACH EVENT, SHOW NUMBER OF PAGE FAULTS IN THAT JOB SINCE PREVIOUS
; EVENT THAT JOB (NYI).  UNCLEAR HOW TO WEDGE THAT IN (WANT 3 COLUMNS ON TVS) 
SWPH:	MOVE A,SWPHTL		;TRY TO GET STUFF INTO CORE IF NOT ALREADY
	SETZM RHIST
	SETZM RHIST-1(A)
	MOVS B,SWPHTB		;COPY OUT THE SWAP HISTORY
	HRRI B,RHIST
	BLT B,RHIST-1(A)
	PUSHJ P,HTBSRT		;SORT BY TIME (NEWEST TO HIGHEST ADDRESS)
	MOVEI B,[ASCIZ/Idx UNAME  JNAME  Ev Wks Time/]
	MOVEI C,29.+3
	PUSHJ P,COLSET		;PICK NUMBER OF COLUMNS, SET D TO NO. OF COLUMNS
	SETO X,			;LAST TIME
	MOVEI C,-1(A)		;LIMIT
	MOVEI A,0
	MOVE B,D		;NUMBER OF COLUMNS TO GO, THIS LINE
SWPH1:	SKIPN RHIST(A)
	 JRST SWPH9
	LDB U,[221000,,RHIST(A)]	;USER INDEX OF THIS ONE
	SKIPE RUUFLG
	 CAMN U,RUUIND
	  CAIA
	   JRST SWPH9		;NOT INTERESTED
	ONUM 3,U
	IMUL U,LUBLK
	CTYPE 40
	6TYPE @UNAME
	CTYPE 40
	6TYPE @JNAME
	CTYPE 40
	LDB U,[420200,,RHIST(A)]	;EVENT
	6XTYPE (U)[SIXBIT/LD/ ? SIXBIT/IN/ ? SIXBIT/SW/ ? SIXBIT/BK/]
	LDB U,[321000,,RHIST(A)]	;WORKING SET SIZE -1
	ADDI U,1
	ONUM 4,U
	CTYPE 40
	PUSHJ P,ELTMPR		;ELAPSED TIME
	SOJG B,[ ATYPE [ASCIZ/   /] ? JRST SWPH9]
	MOVE B,D
	XCT CRR
SWPH9:	CAMGE A,C
	 AOJA A,SWPH1
	JRST PUTPKR
;DEC TAPE STATUS DISPLAY
UTPEEK:	ATYPE UTTOP
	MOVN C,NUNITS
	HRLZS C
	HRRI C,1
UTP1:	CTYPE "0(C)
	CTYPE 40
	SONUM @UDIR
	ALIGN 5
	SONUM @UGOAL
	ALIGN 10.
	ONUM 2,@EUPOS
	ALIGN 14.
	SONUM @DG2
	ALIGN 18.
	SKIPL A,@UDIRO
	HRRZ A,A
	SONUM A
	SKIPN @UMNTR
	JRST UTP2
	ALIGN 25.
	6XTYPE @UMNTR
	SKIPN @UTASS
	JRST UTP2
	ALIGN 32.
	6XTYPE @UTASS
UTP2:	PUSHJ P,CRR
	MOVE B,@DRTM
	CAMN B,[177777,,-1]
	JRST UTP3
	SUB B,@TIME
	ALIGN 5
	ONUM @ULCTM
	ALIGN 1,15.
	SONUM B
	PUSHJ P,CRR
UTP3:	AOBJN C,UTP1
	PUSHJ P,CRR
	SETZM F
	MOVN C,NUTIC
	SUB C,NUTOC
	HRLZS C
UTP5:	SKIPG @UTUSR
	JRST UTP9
	TRON F,1
	ATYPE UTMID
	HRRZ X,C
	ONUM 2,X
	HRRZ A,@UTTNO
	ONUM 2,A
	ALIGN 6
	HLRZ U,@UTUSR
	6TYPE @UNAME
	CTYPE 40
	6TYPE @JNAME
	CTYPE 40
	CAMGE X,NUTIC
	ATYPE [ASCIZ /In  !/]
	CAML X,NUTIC
	ATYPE [ASCIZ /Out !/]
	ONUM @UTBFS
	PUSHJ P,CRR
UTP9:	AOBJN C,UTP5
	JRST PUTPKR

;DTOP is heading for wide displays, line printer, etc.
;DPTOP is heading for medium displays such as datapoints
;GTOP is heading for narrow, printing terminals
DTOP:	ASCIZ /Index Uname Jname Sname     Status   TTY    Core Out %Time    Time PIs/
GTOP:	ASCIZ /Idx U-Jname  Status TTY   Core Out %Tm   Time/
DPTOP:	ASCIZ /Idx U-Jname  Sname    Status TTY     Core Out %Tm   Time/

UTTOP:	ASCIZ /Dirc Goal Pos Dg2 Dir   Umntr  Utass
     Ulctm     Drtm
/
UTMID:	ASCIZ /Cn Tn Uname  Jname  Dir Bufs
/

HTOP1:	ASCIZ /Uname Jname    Idx  Memory Histogram : One mark = /
/
HTOP:	ASCIZ /Uname Jname    Idx  Mem Top  Shared Out Total/
HTOPWS:	ASCIZ /  WS SWS Flags Time/

IFN CRAWLP,[
RUNTBL:	SIXBIT /MULTIX/
	SIXBIT /TENEX/
	SIXBIT /WALK/
	SIXBIT /RUN/
	SIXBIT /FLY/
	SIXBIT /ZOOM/
	SIXBIT /WARP/
]

GETDPG:	SETZ	;PUTS DSKPG IN MAP
	SIXBIT /CORBLK/
	MOVEI %CBRED+%CBNDR
	MOVEI %JSELF
	MOVEI DSKPG
	MOVEI %JSABS
	SETZ A

INTTBL: SIXBIT /TYPEIN/
        SIXBIT /^Z/
        SIXBIT /BADPI/
        SIXBIT /AROV/
        SIXBIT /DPY/
        SIXBIT /ILOPR/
        SIXBIT /SYSDED/
        SIXBIT /.VALUE/
        SIXBIT /IOC/
        SIXBIT /ILUAD/
        SIXBIT /.BREAK/
        SIXBIT /1PROC/
        SIXBIT /SCLOCK/
        SIXBIT /MPV/
        SIXBIT /MAR/
        SIXBIT /LTPEN/
        SIXBIT /PDLOV/
        SIXBIT /CLI/
        SIXBIT /ERROR/
        SIXBIT /SYSDBG/
        SIXBIT /ARMTP1/
        SIXBIT /ARMTP2/
        SIXBIT /ARMTP3/
        SIXBIT /SYSUUO/
        SIXBIT /PURINS/
        SIXBIT /PURPG/
        SIXBIT /ARFOV/
        SIXBIT /PARERR/
        SIXBIT /DTTY/
        SIXBIT \ATTY\
        SIXBIT \DFR^Z\
        SIXBIT \<4/5>\
        SIXBIT \<4/6>\
        SIXBIT /RUNTIM/
        SIXBIT /REALTM/
INTBL1:	SIXBIT /PCLSR/

UNMTAB:	IRPS NAME,,[RWK HIC EJS RL RLB]
	SIXBIT /NAME/
TERMIN
	BLOCK 5			   ;ANYONE ELSE?
UNMTLN==.-UNMTAB

;Use standard network package

IF2,[
NETWRK"E=U
NETWRK"TT=X
]

$$HSTMAP==1
$$ARPA==1

.INSRT MOON;XNETWK

CONSTANTS
HUSED=.-1
INFORM [Highest used]\.-1
DSKPG=<.+1777>/2000

HSTDOC=100*2000

;MEMORY MAP:
;0-HUSED PROGRAM (SOME PAGES PURE)
;DSKPG	 MAPPED INTO DISK BUFFER (nC MODE)
; NXM
;100	 (HSTDOC) MAPPED INTO SYSBIN; HOSTS2 > FILE
; NXM
;200	 REST MAPPED INTO ABSOLUTE 0-377777

LOC EIMPURE
VARIABLES	;Mainly for NETWRK
IFG .-<<EIMPURE+1777>&-2000>, .ERR IMPURE PAGE OVERFLOW
INFORM [End of impure]\.-1

END GO
