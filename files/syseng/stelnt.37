
TITLE	SERVER TELNET

A=1
B=2
C=3
D=4
E=5
TT=6
I=7
Q=10
J=11
R=12
W=13
H=14
P=15
T=16
U=17

NTIC==1
NTOC==2
STIC==3
STOC==4
LSOC==5
DKIC==6



LOC	42
	JSR TSINT
LOC	100

PAT:
PATCH:	BLOCK 40

GO:	SETZM LOG
	.CLOSE 1,	;CLOSE DISK CHANNEL USED FOR LOADING
GOL:	MOVE P,[-LPDL-1,,PDL-1]
	MOVE A,[600000,,[60.*60.]]
	.REALT A,
	JFCL
GO1:	.OPEN LSOC,NET1
	JRST OPNFL
	MOVE A,[LSOC,,B]
	.RCHST A,
	CAIE TT,2	;SKIP IF NOT IN LISTEN MODE
	.LOGOUT
	MOVEI H,0
	LDB T,[060300,,E]
	ADDI H,20(T)
	LSH H,6
	LDB T,[030300,,E]
	ADDI H,20(T)
	LSH H,6
	LDB T,[000300,,E]
	ADDI H,20(T)
	MOVSS H
	HRRI H,(SIXBIT /H00/)
	SKIPE LOG
	JRST LOGDIN
	.CALL LOGCAL
	AOJA H,.-1

LOGDIN:	SETOM LOG
	.OPEN STOC,[1,,(SIXBIT /STY/)]
	JSR LOGOUT
	.OPEN STIC,[10,,(SIXBIT /STY/)]
	JSR LOGOUT
	.NETAC LSOC,
	JSR LOGOUT
	.SUSET [.SMASK,,[200000,,20400]]	;IOC AND MPV AND REALT
	ADDI D,3	;FOR SOC + 3
	MOVEM D,NET2+2	;SET FOR SOC #
	MOVEM E,NET2+3	;SET FOR HOST #
	.OPEN NTIC,NET2
	JSR LOGOUT
	MOVE A,[NTIC,,B]
	.RCHST A,
	.IOT LSOC,C	;SEND SOC #
	ADDI C,1
	MOVEM C,NET3+1	;SET LOC SOC #
	SUBI D,1
	MOVEM D,NET3+2	;SET FOR SOC #
	MOVEM E,NET3+3	;SET FOR HOST #
	.CLOSE LSOC,
	.OPEN NTOC,NET3
	JSR LOGOUT
	SETZM STYIC
	SETZM NTINF
	SETZM INF
	SETZM LCHNTI
	SETZM NTOSF
	MOVEI B,3
	MOVEM B,NTFLAG
	.SUSET [.SMSK2,,[1_NTIC+1_NTOC+1_STIC]]
	MOVE B,[NTIC,,RCH]
	.RCHST B,
	SKIPGE C,RCH+4
	JSR LOGOUT
	MOVEI B,2
	CAIE C,4
	ANDCAM B,NTFLAG
	MOVE B,[NTOC,,RCH]
	.RCHST B,
	SKIPGE C,RCH+4
	JSR LOGOUT
	MOVEI B,1
	CAIE C,4
	ANDCAB B,NTFLAG
	JUMPE B,GOGO
WAIT:	MOVEI B,60.*30.
	.SLEEP B,
	JSR LOGOUT

GOGO:	MOVSI B,(SETZ)
	MOVEM B,NTFLAG
	MOVE B,[600000,,[15.]]
	.REALT B,
	JFCL
	.CALL SST
	JFCL
	JUMPL C,DEBM
	AOS D
	AOJE D,DOWN
	MOVEI A,[ASCIZ /MIT MATHLAB PDP-10
/]
	CAMN B,[SIXBIT /AI/]
	MOVEI A,[ASCIZ /MIT A.I. LAB PDP-10
/]
	PUSHJ P,TYPE
	.OPEN DKIC,NETML
	JRST GOGO1
GOGO2:	.IOT DKIC,C
	JUMPL C,GOGO1
	CAIN C,^C
	JRST GOGO1
	PUSHJ P,NTYO
	JRST GOGO2
GOGO1:	.NETS NTOC,
	.IOT STOC,[^Z]
LOOP:	SKIPL INF
	.HANG
	SETZM INF
NTIN1:	SKIPL NTINF
	JRST STIN
NTIN:	.IOT NTIC,B
	SETOM NTOSF
	SKIPGE LCHNTI
	CAIE B,12
	JRST NTIN2
	JRST NTIN3
NTIN2:	TRZN B,200
	.IOT STOC,B
NTIN3:	SETZM LCHNTI
	CAIN B,15
	SETOM LCHNTI
	SETZM NTINF
	SETZM INF
	MOVE B,[NTIC,,RCH]
	.RCHST B,
	SKIPGE C,RCH+4
	JSR LOGOUT
	CAIN C,5
	JRST STIN	;NO INPUT
	CAIE C,10
	CAIN C,11
	JRST NTIN
	JSR LOGOUT

STIN:	.IOT STIC,C
	JUMPL C,LOOP
	PUSHJ P,NTYO
	SKIPGE NTOSF
	.NETS NTOC,
	SETZM NTOSF
	JRST NTIN1

;CHAR IN C
NTYO:	.IOT NTOC,C
CPOPJ:	POPJ P,

DOWN:	SKIPA A,[ASCIZ /ITS NOT IN OPERATION
/]
DEBM:	MOVEI A,[ASCIZ /ITS BEING DEBUGGED
/]
	PUSHJ P,TYPE
	.LOGOUT

TYPE:	HRLI A,440700
TYPE1:	ILDB C,A
	JUMPE C,CPOPJ
	PUSHJ P,NTYO
	JRST TYPE1

TSINT:	0		;INT LEVEL USES ACS A,T,U
	0
	SKIPL U,TSINT
	JRST TSFW	;FIRST WORD INT
TSRET:	TRZE U,1_STIC
	JRST ST
	TRZE U,1_NTIC
	JRST NT
	TRZE U,1_NTOC
	JRST NTO
STDM:	.DISMISS TSINT+1

ST:	SETOM INF
	JRST TSRET

NT:	MOVE A,[NTIC,,RCHI]
	.RCHST A,
	SKIPGE T,RCHI+4	;STATE
	JSR LOGOUT
	CAIN T,5
	JRST NTDM	;NO INPUT
	CAIE T,10
	CAIN T,11
	JRST NTINP
	JSR LOGOUT
NTINP:	SETOM NTINF
	SETOM INF
NTDM:	MOVEI A,2
	ANDCAB A,NTFLAG
	JUMPE A,STARTR
	JRST TSRET

NTO:	MOVE A,[NTOC,,RCHI]
	.RCHST A,
	SKIPGE T,RCHI+4
	JSR LOGOUT
	CAIE T,5
	CAIN T,6
	JRST NTDM2
	JSR LOGOUT
NTDM2:	MOVEI A,1
	ANDCAB A,NTFLAG
	JUMPE A,STARTR
	JRST TSRET

STARTR:	MOVSI A,(SETZ)
	IORM A,NTFLAG
	MOVEI A,GOGO
	MOVEM A,TSINT+1
	JRST TSRET

TSFW:	SKIPL NTFLAG
	JSR LOGOUT
	.NETS NTOC,
	JRST STDM

LOGOUT:	0
	.SUSET [.SMASK,,[0]]
	.SUSET [.SMSK2,,[0]]
	.SUSET [.SPICL,,[-1]]
	MOVSI A,(SETZ)
	.REALT A,
	JFCL
	.CLOSE LSOC,
	.CLOSE NTIC,
	.CLOSE NTOC,
	.CLOSE STIC,
	.CLOSE STOC,
	JRST GOLî2
OPNFL:	.STATUS NTOC,A
	LDB B,[220600,,A]
	CAIE B,13	;SKIP IF SOCKET 1 BUSY
	JSR LOGOUT
	MOVEI A,30.
	.SLEEP A,
	JRST GO1

LPDL==10
PDL:	BLOCK LPDL

NET1:	40065,,(SIXBIT /NET/)
	1
	-1
	-1

NET2:	50,,(SIXBIT /NET/)
	-1
	-1
	-1

NET3:	41,,(SIXBIT /NET/)
	-1
	-1
	-1

NETML:	(SIXBIT /SYS/)
	SIXBIT /NET/
	SIXBIT /MAIL/

RCH:	BLOCK 10
RCHI:	BLOCK 10	;INT LEVEL RCH

LOGCAL:	SETZ
	SIXBIT /LOGIN/
	H
	SETZ [0]

SST:	SETZ
	SIXBIT /SSTATU/
	2000,,D	;> 0 => TIME TILL DOWN,  -1 => UP,  -2 => DOWN
	2000,,C	;SYSDBG
	2000,,B
	2000,,B
	2000,,B
	SETZM B	;RETURNS IN B WHICH SYSTEM WE ARE USING

STYIC:	0
NTINF:	0	;-1 => THERE IS NET INPUT
INF:	0	;-1 => THERE IS STY OR NET INPUT
NTFLAG:	3	;0 => CONNECTIONS COMPLETE
LOG:	0
LCHNTI:	0	;-1 => LAST CHAR INPUT OVER NET WAS CR
NTOSF:	0	;-1 => SEND BUFFER AFTER NEXT CHAR

END	GO
