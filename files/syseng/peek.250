
TITLE PEEK

F=0
A=1
B=2
C=3
D=4
U=5	;USER INDEX (MOSTLY)
T=6	;SUPER TEMPORARY
X=7
U1=10	;UX'S USED AT UUOH LEVEL
U2=11
U3=12
OBUFP=13	;OUTPUT BUF BYTE POINTER
OMODE=14	;DEV CODE - 0 THRU 3
I1=15	;IX'S USED ONLY AT TSINT LEVEL
I2=16
P=17

SYSP==15
SYSA==1

;USER UUO'S (MUST RUN FROM PUOMIN TO 37)
ALIGN=37000,,	;SPACE TO COLUMN E BUT OUTPUT AT LEAST AC SPACES
6TYPE=36000,,	;OUTPUT C(E) AS SIXBIT
XTYPE=35000,,	;OUTPUT IN SIXBIT THE BLOCK STARTING AT E UNTIL AN "!" IS ENCOUNTERED
SQPR=34000,,	;OUTPUT C(E) AS SQUOZE SYM
CTYPE=33000,,	;OUTPUT CHARACTER WHOSE ASCII VALUE IS E
6XTYPE=32000,,	;OUTPUT C(E) AS SIXBIT BUT STOP ON A SPACE
VALRET=31000,,	;DOES .VALUE, SEE UVALRET
ONUM=30000,,	;OCTAL PRINT C(E) IN A FIELD AT LEAST AC COLUMNS WIDE
DNUM=27000,,	;DECIMAL "
ATYPE=26000,,	;OUTPUT BLOCK OF ASCII STARTING AT E, STOPPING ON A ZERO
SONUM=25000,,	;SIGNED OCTAL PRINT AS IN ONUM
DWRD=24000,,	;ADD C(E) TO IMAGE MODE DISPLAY LIST (SEE UDWRD, HIST)

PUOMIN=24

;SYMBOLIC IO CHANNELS
TYOC==1
TYIC==2
DISC==3
DISWC==4	;IMAGE MODE
LPTC==5
DIRC==6
IMXC==10

OBUFL==40	;SIZE OF OUTPUT BUF

PDLL==140	;PEEK'S OWN

DEFINE CONC A,B
A!B!TERMIN

DEFINE MM,B
	MOVE A,[SIXBIT B]
TERMIN

DEFINE INFORM A,B
IF1,[PRINTX \A = B
\]TERMIN

DEFINE SYMS LIST
	IRPS X,,[LIST]
X:	0
	SQUOZE 0,X
	TERMIN
	TERMIN

DEFINE TOUT AC
	IDPB AC,OBUFP	;DEPOSIT CHARACTER
	CAMN OBUFP,[010700,,OBUF+OBUFL-1]	;SKIP IF BUF NOT FULL
	PUSHJ P,OBLOCK	;OUTPUT FULL BUF
	TERMIN

LOC 41
	JSR UUOH	;TRANSFER TO USER UUO ROUTINE
	JSR TSINT	;TRANSFER TO INTERRUPT ROUTINE

LOC 100

UUOH:	0	;UUO HANDLER
	LDB U1,[331100,,40]	;PICK UP OP CODE FROM 40
	CAIGE U1,PUOMIN	;SKIP IF LEGAL
	.VALUE		;ILLEGAL
	HRRZ U2,40	;GET EFFECTIVE ADDRESS	OF UUO
	JRST @UUOTAB-PUOMIN(U1)	;DISPATCH TO UUO ROUTINE

TSINT:	0
	0
	MOVE I1,TSINT
	TRZ I1,1
	JUMPN I1,TSINTL
	MOVEI I1,TYIC
	.ITYIC I1,
	.DISMISS TSINT+1
	.IOT TYIC,I1
	CAIN I1,^Z
	.LOGOUT
	CAIL I1,"0
	CAILE I1,"9
	JRST TSINT2
	SKIPGE I2,UUIND
	MOVEI I2,0
	ASH I2,3
	ADDI I2,-"0(I1)
	MOVEM I2,UUIND
	.DISMISS TSINT+1

DDYFIL:	2,,(SIXBIT /DSK/)
	SIXBIT /M.F.D./
	SIXBIT /(FILE)/

DDXFIL:	2,,(SIXBIT /.../)
	SIXBIT /.FILE./
	SIXBIT /(DIR)/

DISF:	SIXBIT /   DIS.PEEK.>/

LPTF:	SIXBIT /  #LPT.PEEK.>/

TTYF:	SIXBIT /   TTY.PEEK.>/

DISNOT:	0	;IF ZERO, TRY TO USE 340
		;IF NON ZERO, DON'T
SPNDD:	0	;JUSTIFICATION FLAG:  -1=>JUSTIFICATION COMPLETED, OTHERWISE COUNT OF SPACES NEEDED
TMPTCL:	0	;INITIAL COLUMN NUMBER OF FIELD

USRMEM:	0
USRTIM:	0
USRJTM:	0

NEGF:	0	;-1=> SIGNED OUTPUT, 0=> UNSIGNED
NEGF2:	0	;-1=>PRINT MINUS SIGN, 0=> DON'T
UNUMQ:	0

LPBLK:	BLOCK 6
MODE:	0	;TYPE OF INFO TO OUTPUT (SEE MDTAB)
UUIND:	0
RUUIND:	0
RUUFLG:	0
LPCHPT:	-1

LINEPOS:	0	;CHARACTER COUNT ON LINE
PAGEPOS:	0	;LINE COUNT ON "PAGE"
NVLNS:	0	;# VERT LINES IN TTY DISPLAY MODE
NHLNS:	0	;# HORZ CHAR POS " " " "

;MAX NUM OF LINES ON PAGE FOR EACH DEV
MPAGEP:	,-1	;TTY	;=2**18-1
	.	;GE
	43.	;DISPLAY
	,-1	;LPT	;=2**18-1

DOZE:	10.
SYSIDX:	0

NSNAM:	0
XCHFLG:	0
TDATIM:	SIXBIT *  /  /      :  :  !*
NMMPGS:	0	;# MMP PGS SET FOR
UCPLC:	0	;COUNT IN UCPRL
UDISP:	-1	;INDEX OF TREE TO SHOW IF >= 0

PAT:
PATCH:	BLOCK 100	;PATCH SPACE

PDL:	BLOCK PDLL	;PUSH DOWN LIST


OBUF:	BLOCK OBUFL	;OUTPUT BUFFER

;FULL WORD
FLWDT:	SYMS [IMPSTL LUBLK MSPL NCT NUNITS NUTIC NUTOC NQCHN TSYSM]
LFWDT==.-FLWDT

;+400000
NXTAB:	SYMS [AUSOPG CUSER DEVTAB DISUSR EDEVS LOUTIM LPTUSR MEMFR MMPNP MEMPNT MTUSR NCBCOM
NPGSWO NULTIM NVDUSR OLPUSR PDPUSR PLTUSR PSWOUS PTPUSR PTRUSR QIRRCV RNABLU SILNG SOLNG SWPOPR
SWRCE TABUSR TIME TRUMM UMASTER UREALT USRHI USRRCE IMPUP]
LNXTAB==.-NXTAB

;+400000(C)
CXTAB:	SYMS [AC0S DCHSTB DG2 DRTM EUPOS IOCHST IOCHNM IOTTB MEMBLT MMMPG MMSWP MPXBUF
PARERR NCTIM UDIR UDIRO UGOAL ULCTM UTASS UTBFS UTTNO UTUSR UMNTR 
IMSOC1 IMSOC2 IMSOC3 IMSOC4 IMSOC5 IMSOC7 IMSOC8 IMSCLS QUSR QUDPR QUDFPR QSMPRC
QFBLNO QSCRW QSRAC]

LCXTAB==.-CXTAB

;+400000(U)
USERT:	SYMS [APRC FLSINS HUSRAD IFPIR IOTLSR JNAME JTMU MSKST
MSKST2 NMPGS NSWPGS PICLR PIRQC RPCL SUEXIT SUPPRO SUUOH
SV40 TTYTBL UCPB1 UCPB2 TRNLST TRNLS1 UNAME UPC USIPRQ USTP
USWSCD USWPRI USWST USYSN1 USYSNM UTMPTR UTRNTM LSCALL QSNUD QSNLCN]
LUSRT==.-USERT

RHIST:

NEVAL:	MOVE D,@(P)
	AOS (P)
	MOVE C,@(P)
NEVAL2:	MOVE A,1(D)
	.EVAL A,
	JRST NEVAL6
NEVAL7:	JUMPE C,NEVAL4
	TDZE A,[-1,,600000]
	CTYPE "+
	IOR A,C
NEVAL4:	MOVEM A,(D)
	ADD D,[1,,1]
	AOBJN D,NEVAL2
	JRST POPJ1

NEVAL6:	SQPR A
	CTYPE "?
	MOVEI A,0
	JRST NEVAL7

;INITIALIZE AS PURE PROCEDURE
INIT:	MOVEI P,PDL-1
	MOVE A,[1000,,600000]
INITA:	.CBLK A,
	.VALUE
	ADDI A,1001
	TRNN A,100
	JRST INITA
	SKIPL MPURF
	JRST INITD
	MOVEI A,400000+<<GO/2000>*1001>
INITC:	.CBLK A,	;MAKE PAGE READ ONLY
	.VALUE
	ADDI A,1001
	LDB B,[1000,,A]
	CAIG B,HUSED/2000
	JRST INITC
INITD:	.OPEN TYOC,TTYF
	.VALUE
	PUSHJ P,ALNEVA
	.VALUE [ASCIZ /:READY/]
	
MPURF:	-1	;SET TO 0 FOR NON PURE FOR DEBUGGING
	LOC RHIST+500	;SO THERE ARE 500 WORDS FOR MEM HIST (OVERLAYS INIT CODE)

INFORM [END OF IMPURE]\.-1

LOC <.+1777>&776000
GO:	.SUSET [.SMASK,,[100001]]	;SET MASK TO TYPE IN AND LIGHT PEN INTERRUPTS
	.SUSET [.SPICL,,[-1]]	;ENABLE ABOVE INTERRUPTS
	SETZM MODE
	SETZM UUIND	;CLEAR COMMAND ARGUMENT
	SKIPN SYSIDX
	.VALUE [ASCIZ /:NOT PREPARED/]
INITY:	MOVEI P,PDL-1	;INITIALIZE PUSH DOWN LIST
	MOVN C,@MMPNP	;INSERT MMP TBL IN MAP AT 700000
	MOVNM C,NMMPGS
	HRLZS C
	MOVE A,[1000,,740000]
MEML2:	MOVE B,@MMMPG
	DPB B,[1000,,A]
	.CBLK A,
	.VALUE
	ADDI A,1000
	AOBJN C,MEML2
	MOVEI A,30
	HRLM A,TTYF	;SET MODE TO UNIT ASCII INPUT, DDT, AND CONVERT LOWER CASE
	.OPEN TYIC,TTYF	;TRY OPENING TYPE IN
	JFCL		;IGNORE FAILURE
	MOVEI A,23
	HRLM A,TTYF	;SET TO BLOCK OUTPUT,  DISPLAY MODE
	SETZM OMODE	;INITIALIZE OUTPUT DEVICE TO KSR 35
	.OPEN TYOC,TTYF	;TRY TO OPEN TYPE OUT
	JRST INIT2	;FAIL, TRY DISPLAY
	.STATUS TYIC,A	;SEE IF IT IS A DISPLAY CONSOLE
	TRNN A,200000
	SETOM DISNOT	;NOT AT 340
	ANDI A,77
	CAIE A,2
	JRST INIT2	;NOT A DISPLAY CONSOLE
	MOVEI OMODE,1	;SET OUT DEV TO DISPLAY
	MOVE A,[-1,,[^P_29.+"C_22.+^C_15.+^C_8.+^C_1]]	;CLEAR SCREEN
	.IOT TYOC,A
	.CALL GSSB
	.VALUE
	MOVE A,NVLNS
	SOS A
	MOVEM A,MPAGEP+1
	JRST INIT3	;AVOID 340 DISPLAY

GSSB:	SETZ
	SIXBIT /RSSIZE/
	[TYOC]
	2000,,NVLNS
	402000,,NHLNS

INIT2:	PUSHJ P,ODIS	;TRY FOR 340 DISPLAY
	JRST INIT3	;LOSE
	MOVEI OMODE,2	;SET OUT DEV TO 340
INIT3:	.RSYSI A,
	CAME A,SYSIDX
	PUSHJ P,ALNEV
;;;;;;;;;;;;;;;;;;;;;;;;;MAIN BODY OF PROGRAM, PEEK LOOPS TO HERE AFTER SLEEPING
BEG:	MOVEI P,PDL-1	;SET UP P
	MOVE A,@MMPNP
	CAME A,NMMPGS
	JRST INITY	;SYS HAS GOBBLED MMP
	MOVE OBUFP,[440700,,OBUF]	;SET UP OUTPUT BUF POINTER
	SETZM LINEPOS	;CLEAR LINE AND PAGE POSITION
	SETZM PAGEPOS
	MOVEI A,^T
	XCT BEGT(OMODE)	;INITIALIZE DEPENDING ON OUT DEV
	XTYPE [SIXBIT /   ITS !/]
	MOVE A,SYSIDX
	6TYPE A
	XTYPE [SIXBIT /PEEK !/]
	6TYPE [.FNAM2]
	.RDATI A,
	DPB B,[061400,,TDATIM]
	LSH B,-12.
	DPB B,[301400,,TDATIM]
	LSH B,-12.
	DPB B,[301400,,TDATIM+1]
	DPB A,[001400,,TDATIM+2]
	LSH A,-12.
	DPB A,[221400,,TDATIM+2]
	LSH A,-12.
	DPB A,[001400,,TDATIM+1]
	XTYPE TDATIM
	XTYPE [SIXBIT /  STIME =!/]
	SETZM TMPTCL	;STARTS OUTPUT 1 SPACE FROM CURRENT POSITION
	MOVE A,@TIME	;GET TIME SYS UP IN 1/30'S
	IDIVI A,30.	;CONVERT TO SECS
	PUSHJ P,TMPT	;OUTPUT HH:MM:SS
	PUSHJ P,CRR
	MOVE D,MODE	;GET MODE
	SKIPGE MDTAB(D)
	PUSHJ P,GUPOPJ	;SIGN SET, OUTPUT ERRS
	SKIPGE XCHFLG
	JRST BEG5	;MPLXRS OPEN
	JRST @MDTAB(D)	;MPLXRS CLOSED, DISPATCH ACCORDING TO MODE

BEG5:	CAIN D,11	;MPLXRS OPEN, SKIP IF SHOULD BE OFF
	JRST @MDTAB(D)	;DISPATCH
	.CLOSE IMXC,	;PROGRAM WAS INTERRUPTED OUT OF MPLXR MODE TO ANOTHER MODE
	SETZM XCHFLG	;RECORD
	JRST @MDTAB(D)	;DISPATCH

;DISPATCH TABLE TO ROUTINES FOR DIFFERENT MODES
; (SETZ JUST TO TURN ON SIGN BIT) (TO OUTPUT ERRORS ON 2ND LINE)
MDTAB:	SETZ NORMAL	;NORMAL
	SETZ MHIST	;MEMORY HISTOGRAM
	SETZ UTPEEK	;DECTAPE
	DVPEEK		;I/O DEVICES
	SETZ MEML	;LIST OF MEMORY USAGE
	TRANPK		;TRANSLATION TABLE
	EXPL		;EXPLANATION
	USER		;USER VARIABLES
	SETZ MPXR	;MULTIPLEXOR
	DDXR		;2311 DISKS
	UTPDIR		;DEC TAPE DIRECTORY
	SPEEK		;SINGLE TREE PEEK
	NORMAL		;DISPLAY SWAP SCHEDULE STUFF ETC.  ULOOK CHECKS MODE TO HACK THIS
	NETWRK		;ARPA NET SOCKET MAP
	SETZ DISK		;DISK CHANNELS INFO
	LINES		;TTY^F
	SETZ NORMAL		;HUNG JOBS

MAXMODE==.-MDTAB

BEGT:	PUSHJ P,CRR	;TTY
	PUSHJ P,TTYDPT	;GE
	IDPB A,OBUFP	;340
	PUSHJ P,CRR	;LPT

TTYDPT:	MOVEI A,^P
	IDPB A,OBUFP
	MOVEI A,"T
	IDPB A,OBUFP
	MOVEI A,^P
	IDPB A,OBUFP
	MOVEI A,"]
	IDPB A,OBUFP
	POPJ P,

ODIS:	SKIPE DISNOT
	POPJ P,
	MOVEI A,3	;SET DISPLAY FILE NAME BLOCK
	HRLM A,DISF		;TO ASCII BLOCK OUTPUT
	.OPEN DISC,DISF	;TRY TO OPEN DIS DIVICE
	POPJ P,		;FAILURE EXIT
	MOVEI A,7	;SET DIS FIL NAM BLK
	HRLM A,DISF		;TO IMAGE BLK OUT
	.OPEN DISWC,DISF	;TRY TO OPEN DIS DIVICE
	JRST ODIS2	;FAILURE (SOMEOME MUST HAVE JUST TAKEN DIS AWAY)
	MOVSI A,(SETZ)	;TURN ON
	MOVEM A,LPBLK		;SIGN BIT
	.LTPEN LPBLK	;INITIALIZE LIGHT PEN IN RIGHT "MODE"
POPJ1:	AOS (P)		;INCREMENT RETURN ADDRESS
	POPJ P,

ODIS2:	.CLOSE DISC,	;CLOSE OUT ASCII CHANNEL
	POPJ P,		;FAILURE EXIT

ALNEV:	6TYPE [SIXBIT /NEWSYS/]
ALNEVA:	PUSHJ P,NEVAL
	-LFWDT,,FLWDT
	0
	PUSHJ P,NEVAL
	-LUSRT,,USERT
	400000(U)
	PUSHJ P,NEVAL
	-LCXTAB,,CXTAB
	400000(C)
	PUSHJ P,NEVAL
	-LNXTAB,,NXTAB
	400000
	.RSYSI A,
	MOVEM A,SYSIDX
	POPJ P,

;UUO DISPATCH TABLE
UUOTAB:	UDWRD
	USONUM
	UATYPE
	UDNUM
	UONUM
	UVALRET
	U6XTYPE
	UCTYPE
	USQPR
	UXTYPE
	U6TYPE
	UALIGN

;ALIGN AC,E	;SPACE TO COLUMN E OUTPUTTING AT LEAST AC SPACES
UALIGN:	LDB U1,[270400,,40]	;PICK UP UUO'S AC FIELD
	MOVEI U3,40
	SOJL U1,UALIG2	;JUMP IF NO MIN NUM OF SPACES
UALIG1:	AOS LINEPOS	;INCREMENT LINE POSITION
	TOUT U3		;OUTPUT SPACE
	SOJGE U1,UALIG1	;LOOP TILL MIN SPACES OUT
UALIG2:	CAMLE U2,LINEPOS	;SKIP IF LINE POSITION = EFF ADR
	JRST UALIG1	;MORE SPACES
	JRST 2,@UUOH	;EXIT AND RESTORE FLAGS

;6TYPE E	;OUTPUT (E) AS SIXBIT
U6TYPE:	MOVSI U1,-6	;INITIALIZE LOOP, 6 CHARS
	HRLI U2,440600	;BYTE POINTER FOR HIGH 6 BITS OF E
U6TYP2:	ILDB U3,U2	;GET CHAR (6 BITS)
	ADDI U3,40	;CONVERT TO ASCII
	TOUT U3		;OUTPUT
	AOBJN U1,U6TYP2	;LOOP
	MOVEI U1,6
	ADDM U1,LINEPOS	;INCREMENT LINE POSITION BY 6
UEXIT:	JRST 2,@UUOH	;EXIT AND RESTORE FLAGS

;ATYPE E	;OUTPUT C(E), C(E+1),... AS ASCII, STOPPING AT ZERO OR FF
UATYP2:	AOSA LINEPOS	;INCREMENT LINE POSITION AND SKIP
UATYPE:	HRLI U2,440700	;ENTRY, BYTE POINTER TO TOP 7 BITS OF C(E)
UATYP3:	ILDB U3,U2	;GET CHAR
	JUMPE U3,UEXIT	;EXIT IF ZERO
	CAIN U3,14
	JRST UEXIT	;EXIT IF FORM FEED
	TOUT U3	;OUTPUT
	CAILE U3,15	;SKIP IF MAY BE NON-PRINTING CHAR
	JRST UATYP2	;REGULAR CHAR
	CAIN U3,15
	JRST UACR	;CARRIAGE RETURN
	CAIE U3,12
	JRST UATYP2	;REGUALR CHAR
	AOS PAGEPOS	;LINE FEED, INCREMENT PAGE POSITION
	JRST UATYP3

UACR:	SETZM LINEPOS	;RESET TO BEG OF LINE
	JRST UATYP3

;XTYPE E	;OUTPUT IN 6BIT STARTING AT E UNTIL AN "!" IS ENCOUNTERED
UXTYPE:	HRLI U2,440600	;ENTRY, BYTE POINTER TO TOP 6 BITS OF C(E)
UXTYP2:	ILDB U3,U2	;GET CHAR
	CAIN U3,'!	;SKIP UNLESS "!"
	JRST 2,@UUOH	;EXIT AND RESTORE FLAGS
	ADDI U3,40	;CONVERT TO ASCII
	TOUT U3		;OUTPUT
	AOS LINEPOS	;INCREMENT LINE POSITION
	JRST UXTYP2	;LOOP

;CTYPE E	;OUTPUT ASCII CHAR WHOSE VALUE IS E
UCTYPE:	TOUT U2	;OUTPUT CHAR
	CAIE U2,^B
	CAIN U2,^E
	JRST 2,@UUOH
	AOS LINEPOS	;INCREMENT LINE POSITION
	JRST 2,@UUOH	;EXIT AND RESTORE FLAGS

;6XTYPE E	;OUTPUT C(E) AS 6BIT STOPPING ON SPACE
U6XTYPE:	HRLI U2,440600	;BYTE PNTR TO TOP 6 BITS OF C(E)
	MOVEI U1,6	;INITIALIZE LOOP COUNT (6 CHARS)
U6XTY2:	ILDB U3,U2	;GET NEXT CHAR
	JUMPE U3,UEXIT	;EXIT IF SPACE
	ADDI U3,40	;CONVERT TO ASCII
	AOS LINEPOS	;INCREMENT LINE POSITION
	TOUT U3		;OUTPUT
	SOJG U1,U6XTY2	;LOOP TILL COUNT OUT
	JRST 2,@UUOH	;EXIT AND RESTORE FLAGS

UVALRET:	.RESET TYOC,	;RESET TTY OUTPUT BUF (IN SYSTEM)
	.LOGOUT		;GO AWAY IF A TOP LEVEL PROCEDURE
	.VALUE (U2)	;TRANSMIT E FROM UUO TO DDT
	.DISMISS [BEG]	;RESTART PEEK IF DDT RETURNS

USQPR:	MOVE U1,(U2)
	TLZ U1,740000
USPQR2:	IDIV U1,[50*50*50*50*50]
	ADDI U1,260-1
	CAILE U1,271
	ADDI U1,301-272
	CAILE U1,332
	SUBI U1,334-244
	CAIN U1,243
	MOVEI U1,256
	TOUT U1
	MOVE U1,U2
	IMULI U1,50
	JUMPN U1,USPQR2
	JRST 2,@UUOH


;ONUM AC,E	;UNSIGNED OCT PRINT C(E), RIGHT JUSTIFIED IN FIELD AT LEAST AC WIDE
UONUM:	MOVEI U3,10	;SET RADIX 8.
	SETZM NEGF	;SET TO UNSIGNED OUTPUT
UONUM2:	SETZM NEGF2	;SET TO NOT PRINT "-"
	LDB U1,[270400,,40]	;GET AC FROM 40
	MOVE U2,(U2)	;PUT C(E) IN U2
	HRRM U3,UNUMQ	;PLANT RADIX
	PUSHJ P,UNUMP	;PRINT OUTPUT
	JRST 2,@UUOH	;EXIT AND RESTORE FLAGS

UNUMP:	SOS U1	;DECREMENT FIELD WIDTH
	SKIPGE U2	;SKIP IF UUO C(E) POSITIVE
	JRST UNUMPN	;C(E) NEG
UNUMQ1:	IDIVI U2,@UNUMQ
UNUMQ2:	HRLM U3,(P)	;PUT REMAINDER IN STACK OVER FLAGS
	SKIPE U2	;SKIP IF REMAINING QUOTIENT IS ZERO
	PUSHJ P,UNUMP	;RECURSE ON QUOTIENT
	JUMPG U1,UNUMS	;ALL OF C(E) PRINT-OUT COMPUTED, PAD WITH SPACES AS REQUIRED
UNUMP2:	AOSN NEGF2	;SKIP UNLESS "-" TO BE PRINTED
	JRST UNUMMM	;PRINT MINUS
	HLRZ U3,(P)	;PICK UP DIGIT
	ADDI U3,"0	;CONVER TO ASCII
	TOUT U3		;OUTPUT
	AOS LINEPOS	;INCREMENT LINE POSITION
	POPJ P,

	;C(E) NEGATIVE
UNUMPN:	SKIPE NEGF	;SKIP IF UNSIGNED OUTPUT
	JRST UNUMN2	;SIGNED OUTPUT
	LSHC U2,-43		;PUT BOTTOM 35 BITS IN BOTTOM OF U3
	LSH U3,-1	;AND SIGN BIT AT BOTTOM OF U2 (DOUBLE PRECISION INTEGER FORMAT)
	DIVI U2,@UNUMQ	;DIVIDE OFF DIGIT
	JRST UNUMQ2

	;SIGNED OUTPUT OF NEGATIVE
UNUMN2:	SETOM NEGF2	;SET FLAG TO PRINT "-"
	MOVNS U2	;MAKE NUM PSOITIVE
	SOJA U1,UNUMQ1	;DECREMENT FIELD WIDTH ANTICIPATING MINUS SIGN

	;PRINT MINUS SIGN
UNUMMM:	MOVEI U3,"-	;OUTPUT
	TOUT U3		;A "-"
	AOS LINEPOS	;INCREMENT LINE POSITION
	JRST UNUMP2

	;FILL BEGINNING OF FIELD WITH SPACES
UNUMS:	MOVEI U3,40
UNUMS2:	TOUT U3		;OUTPUT A SPACE
	AOS LINEPOS	;INCREMENT LINE POSITION
	SOJG U1,UNUMS2	;LOOP TILL ENOUGH SPACES
	JRST UNUMP2

;DNUM AC,E	;SIGNED DEC OUTPUT RIGHT JUSTIFIED IN FIELD AT LEAST AC WIDE
;SONUM AC,E	;SIGNED OCT ETC.
UDNUM:	SKIPA U3,[10.]	;RADIX OF 10.
USONUM:	MOVEI U3,10	;RADIX OF 8
	SETOM NEGF	;SET TO SIGNED OUTPUT
	JRST UONUM2

UDWRD:	PUSH OBUFP,(U2)	;PUT UUO C(E) IN OUTPUT BUF
	CAME OBUFP,[OBUFL,,OBUF+OBUFL-1]	;SKIP IF BUF FULL
	JRST 2,@UUOH	;EXIT AND RESTORE FLAGS
	MOVE U3,[-OBUFL,,OBUF]	;SET UP FOR IOT
	.IOT DISWC,U3	;OUTPUT BUF TO DIS IN IMAGE MODE
	MOVEI OBUFP,OBUF-1	;INITIALIZE BUF POINTER
	JRST 2,@UUOH	;EXIT AND RESTORE FLAGS

;OUTPUT FULL BUFFER (SEE TOUT MACRO)
OBLOCK:	PUSH P,U3	;PRESERVE U3
	MOVE U3,[-OBUFL,,OBUF]	;SET UP IOT COUNT
	XCT OMODET(OMODE)	;EXECUTE APROPRIATE IOT
	POP P,U3	;RESTORE U3
	MOVE OBUFP,[440700,,OBUF]	;INITIALIZE CHAR POINTER TO START OF NOW FREE BUF
	POPJ P,

;OUTPUT INSTRUCTIONS FOR VARIOUS DEVICES
OMODET:	.IOT TYOC,U3	;0=TTY
	.IOT TYOC,U3	;1=GE
	.IOT DISC,U3	;2=340
	.IOT LPTC,U3	;3=LPT

GUPOPJ:	MOVE T,@QIRRCV
	MOVEI C,0
	MOVE A,@PARERR
	MOVEI C,1
	MOVE B,@PARERR
	ADD T,A
	ADD T,B
	JUMPE T,CPOPJ
GUPOP2:	XTYPE [SIXBIT /ERRS:!/]
	SKIPN @QIRRCV
	JRST .+3
	XTYPE [SIXBIT /   DSK(IRRECOV) =!/]
	DNUM 4,@QIRRCV
	JUMPE A,.+3
	XTYPE [SIXBIT /   CORPAR =!/]
	DNUM 4,A
	JUMPE B,CRR
	XTYPE [SIXBIT /   CORNXM =!/]
	DNUM 4,B
	JRST CRR
SPEEK:	MOVE U,RUUIND
	IMUL U,LUBLK
	MOVEM U,UDISP
	SKIPN @UNAME
	JRST NORMAL
	MOVNI A,1
	CAMN A,@SUPPRO	;DO NORMAL PEEK IF NOT TOP LEVEL
	SKIPA

NORMAL:	SETOM UDISP
	SETZM USRMEM	;INITIALIZATION
	SETZM USRTIM	;"
	SETZM USRJTM	;"
	XTYPE [SIXBIT /MEMFREE=!/]
	MOVE A,@MEMFR
	SUB A,@NCBCOM
	ONUM A		;OUTPUT NUM OF FREE BLOCKS OF MEM
	ALIGN 12.	;SPACE TO COLUMN 12
	XTYPE [SIXBIT /USRHI=!/]
	MOVE A,@USRHI
	IDIV A,LUBLK
	ONUM A
	ALIGN 22.
	XTYPE [SIXBIT /RNABLU=!/]	;CARRIAGE RETURN/LINE FEED
	ONUM @RNABLU
	ALIGN 33.
	XTYPE [SIXBIT /TRUMM=!/]
	ONUM @TRUMM
	ALIGN 44.
	XTYPE [SIXBIT /AUSOPG=!/]
	ONUM @AUSOPG
	PUSHJ P,CRR
	XCT NTAB3(OMODE)
	PUSHJ P,CRR
	PUSH P,[,-1]	;INITIALIZE PDL
	PUSHJ P,VCHK	;CHECK FOR BOTTOM OF SCREEN
	MOVEI X,0	;SET X TO TOP LEVEL PROCEDURE
	PUSHJ P,ULOOK	;OUTPUT POOP
	SUB P,[1,,1]	;RESET PDL
	XTYPE [SIXBIT /USR MEM= !/]
	ONUM USRMEM	;OUTPUT NUM OF BLOCKS OF USER MEM
	ALIGN 2,	;SKIP 2 COLUMNS
	XTYPE [SIXBIT /USR TIM=!/]
	MOVE A,USRTIM
	ADDI A,9830.
	IDIVI A,19661.
	DNUM 3,A	;OUTPUT TOTAL % TIME DEVOTED TO USERS
	CTYPE "%	;OUTPUT "%"
	CAIN OMODE,0	;SKIP IF NOT TTY OUTPUT
	JRST NORM2	;TTY
	XCT FLKT13(OMODE)	;SPACE OVER
	MOVEM A,TMPTCL	;STORE COLUMN NUMBER
	MOVE A,USRJTM
	PUSHJ P,TMPTH	;OUTPUT TOTAL USER TIME
NORM2:	PUSHJ P,CRR	;CR LF
	SETZM TMPTCL	;STARTS OUTPUT 1 SPACE FROM CURRENT POSITION
	XTYPE [SIXBIT /LOUTIM =!/]
	MOVE A,@LOUTIM	;TOTAL TIME USED BY LOGGED OUT USERS
	PUSHJ P,TMPTH	;OUTPUT AS HH:MM:SS
	ALIGN 22.
	XTYPE [SIXBIT /KJTIM =!/]
	MOVE C,NCT
	MOVEI A,0
KJLUP:	ADD A,@NCTIM
	SOJGE C,KJLUP
	PUSHJ P,TMPTH
	ALIGN 44.
	XTYPE [SIXBIT /NULTIM =!/]
	MOVE A,@NULTIM
	IDIVI A,60.
	PUSHJ P,TMPT
	PUSHJ P,CRR	;CR LF
	.DIETIM A,
	JUMPL A,PUTPKR	;JUMP IF SYS NOT GOING DOWN
	XTYPE [SIXBIT /SYSTEM GOING DOWN IN!/]
	IDIVI A,30.	;CONVERT TO SECONDS
	PUSHJ P,TMPT	;OUTPUT RELATIVE TIME OF DEATH (HH:MM:SS)
	CTYPE 40	;SPACE
	CTYPE "(
	.RTIME B,	;GET REAL TIME
	PUSHJ P,TIM30.	;CONVERT TO 1/30'S (IN A)
	.DIETIME B,	;GET RELATIVE TIME OF DEATH AGAIN
	ADD A,B		;CONVERT TO ABSOLUTE TIME IN 1/30'S
	IDIVI A,30.	;CONVERT TO SECONDS
	PUSHJ P,TMPT	;OUTPUT ABS TIME AS HH:MM:SS
	CTYPE ")
	PUSHJ P,CRR	;CR LF
PUTPKR:	JSP U,UTPKR	;TERMINATE OUTPUT AND SLEEP
	@DOZE		;NUM OF SECONDS SLEEP

NTAB1:	31.	;0=TTY
	35.	;1=DATAPOINT OR OTHER DISPLAY
	48.	;2=340
	48.	;3=LPT

NTAB3:	XTYPE GTOP	;SEE ABOVE
	XTYPE DPTOP
	XTYPE DTOP
	XTYPE DTOP

	;CONVERT HHMMSS (TIME IN 6BIT CHARS) TO BINARY 1/30'S OF SECOND
TIM30.:	LDB A,[360400,,B]	;GET HOURS, TENS
	IMULI A,10.
	LDB C,[300400,,B]	;HOURS, UNITS
	ADD A,C		;TOTAL HOURS
	IMULI A,6	;HOURS AS MINUTES*10
	LDB C,[220400,,B]	;MINUTES, TENS
	ADD A,C
	IMULI A,10.
	LDB C,[140400,,B]	;MINUTES UNITS
	ADD A,C
	IMULI A,6	;MINUTES+HOURS AS SECONDS*10
	LDB C,[60400,,B]	;SECONDS, TENS
	ADD A,C
	IMULI A,10.
	LDB C,[400,,B]	;SECONDS, UNITS
	ADD A,C		;TOTAL TIME AS SECONDS
	IMULI A,30.	;AS 1/30'S
	POPJ P,

;CALL	JSP U,UTPKR
;CALL+1	<NUM OF SECONDS DELAY>
UTPKR:	XCT OMENDT(OMODE)	;TERMINATE MESSAGE
UTPKR0:	PUSHJ P,CHEND	;TERMINATE CHAR OUTPUT
ASLEEP:	MOVE A,@TIME	;READ SYSTEM TIME IN 1/30'THS
	MOVEI B,@(U)	;DELAY IN SECONDS
	IMULI B,30.	;CONVERT TO 30'THS
	ADD A,B		;GET SYSTEM TIME YOU WANT TO SLEEP TILL IN 1/30'THS
	IDIVI A,15.
	IMULI A,15.	;TRUNCATE TO NEAREST HALF SEC
	ADDI A,9	;SET PHASE RELATIVE TO SLOW CLOCK (MAGIC NUM, <14.&>0)
	MOVNS A		;NEG FOR ABSOLUTE SLEEP FEATURE
	.SLEEP A,	;ZZ ZZ ZZ
	JRST BEG

OMENDT:	PUSHJ P,CRR2	;TTY	;2 CR/LF'S
	JRST GEEND	;GE
	JRST DISEND	;DIS
	CTYPE ^L	;LPT

GEEND:	MOVE A,MPAGEP(OMODE)	;GE TERMINATION
	PUSHJ P,VALIGN	;CLEAR OUT UNUSED PART OF SCREEN
	JRST UTPKR0

DISEND:	MOVE A,MPAGEP(OMODE)	;NUM OF LINES ON PAGE
	PUSHJ P,VALIGN	;CLEAR UNUSED PART OF SCREEN
	MOVE A,[440600,,[SIXBIT /NMUIHT?VXDYSGACL!/]]	;STRING GOES ON BOTTOM OF SCREEN
DISND2:	ILDB B,A	;GET CHAR
	CAIN B,'!	;SKIP IF NOT END
	JRST UTPKR0	;END
	CTYPE 40(B)	;OUTPUT CHAR AS ASCII
	ALIGN 3,	;PLUG IN 3 SPACES
	JRST DISND2	;LOOP

;MOVE DOWN PAGE UNTIL AT LINE NUMBER IN A
VALIGN:	SUB A,PAGEPOS
	JUMPLE A,CPOPJ
	PUSHJ P,CRR
	SOJA A,.-2

;TERMINATE CHARACTER OUTPUT
CHEND:	MOVEI B,^C	;SET UP AN END-OF-FILE CHARACTER
CHEND1:	HLRZ A,OBUFP
	CAIN A,010700	;IS CURRENT ACTIVE WORD IN BUFFER FULL?
	JRST CHEND2	;YES, LAST WORD HAS BEEN FILLED OUT
	IDPB B,OBUFP	;NO, INSET AN EOF
	JRST CHEND1

CHEND2:	MOVEI U3,OBUF
	SUB U3,OBUFP
	SOS U3
	HRLS U3
	HRRI U3,OBUF
	XCT OMODET(OMODE)	;OUTPUT ALL OF BUF THAT IS ACTIVE
	POPJ P,

;STOP OUTPUT IF TOO NEAR BOTTON OF PAGE
VCHK:	MOVE U3,PAGEPOS
	CAMGE U3,MPAGEP(OMODE)	;SKIP IF CURRENT POSITION > PAGE SIZE
	POPJ P,		;OK, EXIT
	JRST PUTPKR	;GO TO STOP OUTPUT


TSINT2:	CAIN I1,"Q
	VALRET [ASCIZ/:KILL /]	;DESTROY PEEK.
	CAIN I1,"P
	VALRET [ASCIZ /:PROCED /]	;RETURN TO DDT TO RESTART PEEK
	CAIN I1,^B
	JRST LPTON
	CAIN I1,^E
	JRST LPTOFF
	CAIN I1,^Y
	JRST DISON
	CAIN I1,^N
	JRST DISOFF
	MOVEI I2,0
	CAIN I1,"N
	MOVEI I2,400000
	CAIN I1,"M
	MOVEI I2,400001
	CAIN I1,"U
	MOVEI I2,400002
	CAIN I1,"I
	MOVEI I2,400003
	CAIN I1,"H
	MOVEI I2,400004
	CAIN I1,"T
	MOVEI I2,400005
	CAIN I1,"?
	MOVEI I2,400006
	CAIN I1,"V
	MOVEI I2,400007
	CAIN I1,"X
	MOVEI I2,400010
	CAIN I1,"D
	MOVEI I2,400011
	CAIN I1,"Z
	JRST TSINTZ
	CAIN I1,"Y
	MOVEI I2,400012
	CAIN I1,"S
	MOVEI I2,400013
	CAIN I1,"G
	MOVEI I2,400014
	CAIN I1,"A
	MOVEI I2,400015
	CAIN I1,"C
	MOVEI I2,400016
	CAIN I1,"L
	MOVEI I2,400017
	CAIN I1,"*
	MOVEI I2,400020
	SETZM RUUFLG
	SKIPGE I1,UUIND
	JRST TSINT4
	SETOM RUUFLG
	MOVEM I1,RUUIND
TSINT4:	SETOM UUIND
	TRZN I2,400000
	.DISMISS TSINT+1
	MOVEM I2,MODE
TSRET2:	.RESET TYOC,
	.DISMISS [BEG]

TSINTZ:	SKIPL I2,UUIND
	MOVEM I2,RUUIND
	MOVE I2,RUUIND
	MOVEM I2,DOZE
	JRST TSINT4

TSINTL:	TRNN I1,100000
	.VALUE
	SETZM LPBLK
	.LTPEN LPBLK
	SKIPN LPBLK+1	;NUMBER OF TIMES SEEN
	JRST TSINTX
	HLRZ I2,LPBLK	;Y
	HRRZ I1,LPBLK	;X
	CAIL I2,300
	JRST TSINL1
	IDIVI I1,12.*4
	CAME I1,MODE
	CAILE I1,MAXMOD
TSINTX:	.DISMISS TSINT+1
	MOVEM I1,MODE
	.DISMISS [BEG]

TSINL1:	SUBI I1,12.
	IDIVI I1,12.*8
	MOVEM I1,LPBLK+1
	HLRZ I1,LPBLK
	SUBI I1,1700
	MOVNS I1
	IDIVI I1,18.
	SOS I1
	IMULI I1,6
	ADD I1,LPBLK+1
	MOVE I2,MODE
	SKIPGE LPCHPT
	CAIE I2,12
	JRST TSINTX
	CAIL I1,100.
	JRST TSINTX
	MOVEM I1,LPCHPT
	.DISMISS [BEG]

LPTON:	.OPEN LPTC,LPTF
	JRST LPTOFF
	CAIE OMODE,2
	JRST LPTON2
	.CLOSE DISC,
	.CLOSE DISWC,
LPTON2:	MOVE 13,[-1,,[14]]
	.IOT LPTC,13
	MOVEI OMODE,3
	JRST TSRET2

LPTOFF:	.CLOSE LPTC,
TSRET3:	.RESET TYOC,
	.DISMISS [INITY]

DISON:	SETZM DISNOT
	PUSHJ P,ODIS
	JRST DISOFF
	CAIE OMODE,3
	JRST DISON2
	.IOT LPTC,[14]
	.CLOSE LPTC,
DISON2:	MOVEI OMODE,2
	JRST TSRET2

DISOFF:	SETOM DISNOT
	.CLOSE DISC,
	.CLOSE DISWC,
	JRST TSRET3

DVPEEK:	MOVEI B,@DEVTAB
	MOVEI C,@EDEVS
	MOVE T,[HRLZ A,(B)]

GDPEEK:	XCT T
	6TYPE A
	ALIGN 9
	AOS B
	CAMLE B,C
	JRST GDP3
	XCT T
	6TYPE A
	PUSHJ P,CRR
	AOS B
	CAMG B,C
	JRST GDPEEK
GDP3:	JSP U,UTPKR
	10.

EXPL:	ATYPE EXPLAN
	JRST GDP3

EXPLAN:	ASCIZ \MODE CONTROL:
  A  ARPANET SOCKET MAP
  C  DISK CHANNEL AREA
  D  DISK DIRECTORY
  G  SWAP/SCHEDULE VARIABLES
  H  MEMORY GRAPH (340 ONLY)
  I  AVAILABLE IO DEVICES
  L  TTY LINES
  M  MEMORY USE LIST
  N  NORMAL MODE
  S  SINGLE TREE DISPLAY (PRECEDE BY # OF TOP)
  T  TRANSLATION ENTRIES
  U  DEC TAPE STATUS
  V  SINGLE USER (PRECEDE BY INDEX)
  X  MULTIPLEXOR MODE
  Y  DEC TAPE DIRECTORY (PRECEDE BY #)
  ?  EXPLANATION MODE
IO CONTROL:
  ^B USE LINE PRINTER     ^N STOP USING 340
  ^E STOP USING " "       ^Y USE 340
OTHER:
  P  PROCEED BUT RETURN TTY TO DDT
  Q  QUIT
  Z  SET DOZE IN SECONDS\

USER:	MOVE U,RUUIND
	IMUL U,LUBLK
	6TYPE @UNAME
	CTYPE 40
	6TYPE @JNAME
	CTYPE 40
	6TYPE @USYSNM
	CTYPE 40
	6TYPE @USYSN1
	CTYPE 40
	PUSHJ P,USTATUS	;(USTATUS ALSO INTERPRITS RPCL)
	PUSHJ P,CRR
	6TYPE [SIXBIT /UPC  =/]
	ONUM 12.,@UPC
	ALIGN 22.
	6TYPE [SIXBIT /SV40 =/]
	ONUM 12.,@SV40
	ALIGN 44.
	6TYPE [SIXBIT /SUUOH=/]
	ONUM 12.,@SUUOH
	PUSHJ P,CRR
	6TYPE [SIXBIT /UEXIT=/]
	ONUM 12.,@SUEXIT
	ALIGN 22.
	6TYPE [SIXBIT /SUPRO=/]
	ONUM 12.,@SUPPRO
	ALIGN 44.
	6TYPE [SIXBIT /HUSRAD=/]
	ONUM 12.,@HUSRAD
	PUSHJ P,CRR
	6TYPE [SIXBIT /FLSIN=/]
	ONUM 12.,@FLSINS
	ALIGN 22.
	6TYPE [SIXBIT /NSWPGS=/]
	ONUM 12.,@NSWPGS
	ALIGN 44.
	6TYPE [SIXBIT /MASK =/]
	ONUM 12.,@MSKST
	PUSHJ P,CRR
	6TYPE [SIXBIT /MASK2=/]
	ONUM 12.,@MSKST2
	ALIGN 22.
	6TYPE [SIXBIT /PIRQC=/]
	ONUM 12.,@PIRQC
	ALIGN 44.
	6TYPE [SIXBIT /IFPIR=/]
	ONUM 12.,@IFPIR
	PUSHJ P,CRR
	6TYPE [SIXBIT /TTYTB=/]
	ONUM 12.,@TTYTBL
	ALIGN 22.
	6TYPE [SIXBIT /JTMU =/]
	ONUM 12.,@JTMU
	CAIL OMODE,1
	PUSHJ P,USERMD
	MOVSI C,-16.
USER2:	HRRZ A,C
	ONUM 2,A
	JUMPE OMODE,USER3
	MOVEI A,@AC0S
	ADD A,U
	ONUM 14.,(A)
USER3:	MOVEI B,@IOCHNM
	ADD B,U
	ONUM 14.,(B)
	MOVEI A,@IOCHST
	ADD A,U
	ONUM 14.,(A)
	ALIGN 2,
	PUSH P,C
	HRRZ C,(B)	;RH OF IOCHNM
	PUSHJ P,AIOTNM	;GETS 6BIT INTO A
	POP P,C
	6XTYPE A
	PUSHJ P,CRR
	AOBJN C,USER2
	JRST PUTPKR

USERMD:	PUSHJ P,CRR
	XTYPE [SIXBIT / #!/]
	ALIGN 12.
	XTYPE [SIXBIT /AC'S!/]
	ALIGN 24.
	6TYPE [SIXBIT /IOCHNM/]
	ALIGN 38.
	6TYPE [SIXBIT /IOCHST/]
	JRST CRR


;INPUT AND OUTPUT MULTIPLEXORS DISPLAY
MPXR:	SKIPL XCHFLG
	JRST MPXR2
MPXR3:	6XTYPE [SIXBIT /IMPX/]
	MOVSI A,-10
	ALIGN 4,
	CTYPE "0(A)
	AOBJN A,.-2
	MOVSI D,-200
	MOVE X,[441400,,@MPXBUF]
	MOVEI C,0
MPYRL1:	TRNE D,7
	JRST MPYRL2
	PUSHJ P,CRR
	LDB B,[30400,,D]
	ONUM 2,B
	ALIGN 2,
MPYRL2:	ILDB B,X
	TLNE X,770000
	JRST MPYRL3
	HRLI X,441420
	AOS C
MPYRL3:	ONUM 5,B
	AOBJN D,MPYRL1
	JRST PUTPKR

MPXR2:	.OPEN IMXC,IMXFL
	JRST INIT
	MOVEI C,0
	.IOT IMXC,C	;WAIT FOR FIRST IMX DATA
	SETOM XCHFLG
	JRST MPXR3

IMXFL:	4,,(SIXBIT /IMX/)
	.

DISK:	ATYPE DSKTOP
	MOVE C,NQCHN
	ADDI C,1	;INDEX +2 FOR SWAP,DIR WRT
	SETOM D	;COUNT SPECIAL ACTION ON SWAP, DIR WRT
DLUP:	SKIPGE U,@QUSR
	JRST DLUP1
	ONUM 2,C
	HRRZ A,U
	IDIV A,LUBLK
	ONUM 3,A
	CTYPE 40
	6TYPE @UNAME
	CTYPE 40
	6TYPE @JNAME
	CTYPE 40
	MOVEI A,"R
	SKIPGE @QSCRW
	MOVEI A,"W
	CTYPE (A)
	MOVE A,@QSRAC
	SKIPGE A
	CTYPE "L	;LOCKED
	TLNE A,220000
	CTYPE "E	;E-O-F
	TLNE A,10000
	CTYPE "T	;TUT READ
	TLNE A,2000
	CTYPE "U	;USER DIR READ
	TLNE A,1000
	CTYPE "M	;MSTR DIR READ
	TLNE A,4000
	CTYPE "B	;CORE TRANSFER HUNG ON ACTIVE BUFFER
	TLNE A,400
	CTYPE "F	;HUNG IN DIR FULL
	TLNE A,200
	CTYPE "*	;DELETE WHEN CLOSED
	TLNE A,100
	CTYPE "A	;ADR MODIFIED (.ACCESS)
	TLNE A,40
	CTYPE "?	;PARITY ERROR
	TRNE A,20000
	CTYPE "P	;PDUMP  MODE
	JUMPLE D,DLUP2	;FINISHED FOR SWAP AND DIR CHNLS
	ALIGN 1,23.
	MOVEI A,2000
	SUB A,@QSMPRC
	ADD A,@QFBLNO
	ONUM 6,A
	CTYPE 40
	MOVE U,@QUDPR
	6XTYPE @QSNUD
	CTYPE ";
	CTYPE 40
	MOVE A,@QSNLCN
	ADD A,@QUDFPR
	HRL A,A
	HRRI A,B
	.GETLOC A,
	6XTYPE B
	CTYPE 40
	ADD A,[1,,]
	.GETLOC A,
	6XTYPE B
DLUP2:	PUSHJ P,CRR
DLUP1:	AOS D
	SOJGE C,DLUP
	JRST PUTPKR



DSKTOP:	ASCIZ %CH  I UNAME  JNAME R/W   WD CNT       FILE NAME
%

;SOCKET MAP

NETWRK:	ATYPE ATOP
	SKIPE @IMPUP
	JRST NOTUP
	MOVE C,IMPSTL
	SUBI C,1
	MOVEI D,0		;COUNT OF JOBS WITH PSEUDO-TTY'S

NETLUP:	SKIPN U,@IMSOC1		;USER INDEX
	JRST NETL1
	ONUM 2,C		;TABLE INDEX
	HRRZ A,U
	IDIV A,LUBLK
	ONUM 3,A		;USER INDEX
	CTYPE 40
	6TYPE @UNAME
	CTYPE 40
	6TYPE @JNAME
	ONUM 14,@IMSOC2		;LOCAL SOCKET NUMBER
	CTYPE 40
	MOVE A,@IMSOC4		;SOCKET STATE
	HRRZ B,A		;GET THE STATE ALL BY ITSELF
	JUMPE B,CLOSED		;SOCKET CLOSED, FIND OUT WHY
NETL2:	6TYPE STATES(A)
	LDB A,[321000,,A]	;FOREIGN HOST
	ONUM 5,A
	ONUM 14,@IMSOC3		;FOREIGN SOCKET
	DNUM 4,@IMSOC8		;MESSAGE ALLOCATION
	CTYPE ".
	DNUM 6,@IMSOC7		;BIT ALLOCATION
	CTYPE ".
	PUSHJ P,CRR

	PUSH P,C		;CHECK FOR PSEUDO-TTY'S
	HRRZ A,IOCHNM
	ADD A,U
	MOVEI B,17

NETL3:	HRRZ C,(A)
	JUMPE C,NETL31		;CHANNEL NOT OPEN
	HLRZ X,@DCHSTB		;DEVICE NAME
	CAIN X,(SIXBIT /STY/)
	AOJA D,NETL4		;FOUND A PSEUDO-TTY
NETL31:	ADDI A,1
	SOJGE B,NETL3
	POP P,C
NETL1:	SOJGE C,NETLUP
	JUMPE D,PUTPKR
	PUSHJ P,CRR	;PRINT A STY MAP
	ATYPE ATOP1
NETL5:	MOVEI A,-1(D)
	JUMPE A,NETL5B	;ONLY ONE ENTRY LEFT PRINT IT
	MOVEI B,-1(P)
	MOVE C,(P)
NETL5A:	CAMN C,(B)
	JRST NETL5C	;DON'T PRINT THIS ONE
	SUBI B,1
	SOJG A,NETL5A	;THERE'S MORE IN STACK
NETL5B:	HRRZ U,(P)	;GET UNAME BACK
	6TYPE @UNAME
	CTYPE 40
	MOVS C,(P)
	HLRZ C,(C)	;TTY NUMBER
	CTYPE "T
	ONUM C
	CTYPE 40	;GET THE USER'S NAME
	MOVE U,@USRHI
NETL5D:	SUB U,LUBLK
	JUMPLE U,NETL5E	;HAVE RUN OUT OF USERS
	SKIPE @UNAME
	CAME C,@TTYTBL
	JRST NETL5D	;THIS IS NOT THE ONE
	6TYPE @UNAME	;FOUND THE BUGGER!!
	CTYPE 40
	6TYPE @JNAME
	MOVE A,U	;USER INDEX
	IDIV A,LUBLK
	ONUM 3,A
NETL5E:	PUSHJ P,CRR
NETL5C:	POP P,(P)
	SOJG D,NETL5
	JRST PUTPKR

CLOSED:	MOVE B,@IMSCLS	;REASON CLOSED
	ADDI B,15	;MAXIMUM STATE+2
	HRR A,B		;FUDGE NEW STATE
	JRST NETL2

;HERE WHEN STY FOUND

NETL4:	MOVE C,U	;SAVE USER INDEX
	HRL C,A	;IOCHNM POINTER
	EXCH C,(P)	;SAVE ON STACK AND RESTORE C
	JRST NETL1

NOTUP:	ATYPE [ASCIZ /NCP NOT UP
/]
	JRST PUTPKR

;SOCKET STATES

STATES:
IRPS A,,[CLOSED LISTEN RFCRCV RFCCLS RFCSNT OPEN 
RNMWT SNTCLS RDCLS DATA RNMCLS ALMCLS ABORT NVROPN
CLSUSR CLSFH CLSRST CLSHD CLSINC CLSBSM]
SIXBIT /A/
TERMIN
ATOP:	ASCIZ /SI UI UNAME  JNAME  LOCL SOCKET STATE  HOST FORN SOCKET MESS  BITS
/
ATOP1:	ASCIZ /STY MAP
STELNT STY USER   JNAME  UI
/

DDXR:	CAIN OMODE,1
	JRST DDXS
	MOVEI B,DDYFIL
	PUSHJ P,DDYY
	JRST INIT
	MOVEI B,0
	SETZM NSNAM
	MOVE X,[440600,,NSNAM]
	MOVE C,[440700,,RHIST]
DDXR2:	ILDB D,C
	CAIN D,15
	JRST DDXR2
	CAIN D,12
	JRST DDXR4
	CAIE D,3
	CAIN D,14
	JRST DDXS
	CAMN B,LPCHPT
	JRST DDXR5
DDXR3:	CTYPE (D)
	JRST DDXR2

DDXR4:	CAMN B,LPCHPT
	.SUSET [.SSNAM,,NSNAM]
	AOS B
	MOVEI D,40
	MOVE A,LINEPOS
	CAIGE A,40.
	JRST DDXR3
	PUSHJ P,CRR
	JRST DDXR2

DDXR5:	CTYPE (D)
	SUBI D,40
	JUMPE D,DDXR2
	IDPB D,X
	JRST DDXR2

DDXX:	HRRM A,(B)
DDYY:	.OPEN DIRC,(B)
	POPJ P,
	MOVE A,[-500,,RHIST]
	.IOT DIRC,A
	.CLOSE DIRC,
	JRST POPJ1

LINES:	MOVEI A,(SIXBIT /TTY/)
	JRST LINDD

UTPDIR:	MOVE A,RUUIND
	ADDI A,'0
	IORI A,(SIXBIT /UT /)
	SKIPA
DDXS:	MOVEI A,(SIXBIT /DSK/)
LINDD:	PUSHJ P,CRR
	MOVEI B,16.
	SKIPL LPCHPT
	.SLEEP B,
	SETOM LPCHPT
	MOVEI B,DDXFIL
	PUSHJ P,DDXX
	JRST PUTPKR
	ATYPE RHIST
	JRST PUTPKR

UCPRL:	CLEARM UCPLC
	TRO C,400000	;SWITCH TO EXEC PGS
	MOVE U1,@(P)	;RETURN
	PUSH P,C
	PUSH P,C
	JRST UCPRL5

UCPRL2:	TRO C,400000
	AOS U2,UCPLC
	CAIL U2,100
	JRST QMTYO
	CAMN C,-1(P)
	JRST UCPRL6
	MOVEM C,(P)
UCPRL5:	LDB U2,C
	JUMPE U2,QMTYO
	TRZE U2,400000
	JRST UCPRL1
	LDB U3,[1000,,U2]	;PG #
	LDB U,[101100,,U2]	;USER
	IMUL U,LUBLK
	SKIPGE U1
	PUSHJ P,(U1)
	MOVE C,@UCPB1
	TRZE U3,200
	MOVE C,@UCPB2
	ROT U3,-1
	ADDI C,(U3)
	HRLI C,222200
	SKIPGE U3
	HRLI C,2200
	JRST UCPRL2

UCPRL1:	TRZE U2,200000
	JRST UCPRL3
	MOVE C,[2200,,700000]	;MMP
	ADDI C,(U2)
	TLNE U1,200000
	PUSHJ P,(U1)
	JRST UCPRL2


UCPRL3:	TLNE U1,100000
	PUSHJ P,(U1)
	MOVSI C,2200
	ADD C,MEMPNT
	ADDI C,(U2)
	JRST UCPRL2


UCPRL6:	MOVE C,(P)
	SUB P,[2,,2]
	POPJ P,

QMTYO:	CTYPE "?
	JRST BEG


VSPACE==34
IF2,MXHUSR==40-MEMTBL	;MAX JOB TO BE DISPLAYED

MEML:	CAIE OMODE,2
	JRST MHIST
	PUSHJ P,CHEND
	MOVEI OBUFP,OBUF-1
	MOVN C,TSYSM
	HRLZS C
	DWRD [20117]
	MOVE X,[220000,,22000]
MLUP:	LDB B,[321000,,@MEMBLT]
	CAIGE B,@MSPL
	JRST MEML4
	SUBI B,340
MLUP5:	PUSHJ P,MEMLD
	DWRD X
	ADDI X,1
MEML9:	AOBJN C,MLUP
	DWRD [0]
	MOVE X,[20175,,220060]
	DWRD X
	MOVEI A,40
MLUPA:	DWRD [120000,,600177]
	ADDI X,VSPACE
	CAIN A,1
	JRST MLUPB
	DWRD X
	SOJG A,MLUPA

MLUPB:	MOVEI U,0
	MOVEI A,0
	DWRD [20137]
	MOVE X,[220062,,60000]
MLUP2:	CAMGE U,@USRHI
	CAIL A,MXHUSR
	JRST MLUP3A
	DWRD X
	MOVE B,@UNAME
	CAMN B,[-1]
	MOVE B,[SIXBIT /??????/]
	TDC B,[404040404040]
	DWRD B
	MOVE B,@JNAME
	SKIPN @UNAME
	MOVEI B,0
	TDC B,[404040404040]
	MOVE C,[373702013700]
	LSHC B,-6
	TLO B,400000
	DWRD B
	DWRD C
	ADD X,[VSPACE,,]
	ADD U,LUBLK
	AOJA A,MLUP2

MEML4:	TRNN C,-1
	JRST MLUP5
	MOVE U1,C
	ADD U1,MEMPNT
	HRRZ B,(U1)
MEML5:	JUMPE B,MEML8	;?
	TRZE B,400000
	JRST MEML6
	LDB D,[1000,,B]	;PG
	LDB B,[101100,,B]	;USR
	MOVE A,B
	PUSHJ P,MEMLD
	DWRD X
	SUBI X,2
	IMUL A,LUBLK
	MOVE T,UCPB1
	TRZE D,200
	MOVE T,UCPB2
	ADD T,A
	MOVE T,(T)
	ADDI T,400000
	ROT D,-1
	ADDI T,(D)
	HRLI T,222200
	SKIPGE D
	HRLI T,2200
MEML7:	LDB B,T
	JRST MEML5

MEML6:	TRZE B,200000
	JRST MEML8
	MOVE T,[2200,,700000]
	ADDI T,(B)
	JRST MEML7

MEML8:	ADDI X,4
	JRST MEML9

MEMLD:	IMULI B,VSPACE
	ADDI B,60
	DPB B,[221200,,X]
	DWRD X
	ADDI X,2
	POPJ P,

MLUP3A:	MOVEI A,MXHUSR
	MOVE X,[220062+MXHUSR*VSPACE,,60000]
	DWRD X
MLUP3:	MOVE C,MEMTB-MXHUSR(A)
	XOR C,[404040404040]
	DWRD C
	ADD X,[VSPACE,,]
	DWRD [370000,,20137]
	CAIL A,37
	JRST MLUP4
	DWRD X
	AOJA A,MLUP3

MLUP4:	DWRD [0]
	MOVEI A,OBUF
	SUB A,OBUFP
	SOS A
	HRLS A
	HRRI A,OBUF
	.IOT DISWC,A
	AOS PAGEPOS
	MOVE OBUFP,[440700,,OBUF]
	JRST PUTPKR

;DISPLAY TRANSLATE TABLE.
TRANPK:	SETZB A,U	;LOOK AT USERS IN NUMER. ORDER.
TRANP4:	SKIPGE @TRNLST
	JRST TRANP1	;DO NOTHING IF LIST EMPTY.
TRANP3:	TRO A,400000	;INDICATE JOB SPEC IS USER NUMBER.
	.CALL TRANPB	;READ LIST INTO RHIST.
	JFCL
	TRZ A,400000
	CAMN B,TRANAP	;COUNTED-UP AOBJN IN B.
	JRST TRANP1	;DO NOTHING IF LIST EMPTY.
	6XTYPE @UNAME	;PRINT NAME OF JOB.
	CTYPE 40
	6XTYPE @JNAME
	TLNE A,200000	;IF THIS IS TRNLS1, SAY SO.
	XTYPE [SIXBIT/ & INFERIORS!/]
	CTYPE ":
	PUSHJ P,CRR
	HLLZS B
	MOVNS B
	ADD B,TRANAP	;AOBJN -> PART OF RHIST THAT WAS FILLED.
TRANP0:	XTYPE [SIXBIT/   !/]
	MOVE C,(B)	;GET MODE BITS.
IRPS X,,A I O,Y,,400000 1 2
	TLNE C,Y
	CTYPE "X
TERMIN
IRP X,,[^I,":,";," ]Y,,[1,4,2,3]
	CTYPE X
	6XTYPE Y(B)	;PRINT NEXT NAME.
	SKIPN Y(B)
	CTYPE "*	;IF NAME BLANK.
TERMIN
	XTYPE [SIXBIT/ => !/]
IRP X,,[" ,":,";," ]Y,,[1,4,2,3]
	CTYPE X
	6XTYPE 4+Y(B)
	SKIPN 4+Y(B)
	CTYPE "*
TERMIN			;PRINT OUTPUT NAMES.
	PUSHJ P,CRR
	ADD B,[9,,9]
	JUMPL B,TRANP0	;PRINT ALL ENTRIES SYS STORED.
TRANP1:	TLCE A,200000	;IF WAS TRNLST, PRINT TRNLS1.
	AOJA A,TRANP2	;ELSE PRINT NEXT USER'S TRNLST.
	SKIPGE @TRNLS1
	JRST TRANP1	;DON'T BOTHER WITH .CALL IF NOTHING.
	JRST TRANP3
TRANP2:	ADD U,LUBLK
	CAMGE U,@USRHI
	JRST TRANP4
	JSP U,UTPKR
	5.

TRANPB:	SETZ
	SIXBIT/TRANEX/
	A
	TRANAP	;-> BUFFER.
	SETZM B	;UPDATED PTR GOES THERE.
TRANAP:	RHIST-GO,,RHIST

;PRINT INFO FOR ALL INFERIORS OF PROCEDURE WHOSE INDEX IS IN -1(P)
;  X HAS PROCEDURE DEPTH (0=TOP LEVEL)
ULOOK:	SKIPGE U,UDISP
	MOVEI U,0	;INITIALIZE TO LOOK AT PROCEDURE WITH INDEX 0
	SKIPE X
	MOVEI U,0
	MOVE A,-1(P)	;GET INDEX OF SUPERIOR;  IF TOP, =[,-1]
ULOOK1:	SKIPN @UNAME	;IS JOB SLOT ACTIVE?
	JRST ULOOKE	;NO, TRY NEXT
	HRRZ B,@SUPPRO	;GET SUPPRO
	CAME A,B	;SKIP IF RIGHT SUPPRO
	JRST ULOOKE	;DIFFERENT TRY NEXT
	MOVE A,U
	IDIV A,LUBLK	;GET INDEX/L
	ONUM 2,A	;OUTPUT INDEX/L
	XCT FLKT2(OMODE)	;GO TO FLKD IF DIS OR LPT
	ALIGN 3(X)	;INDENT TO INDICATE PROCEDURE DEPTH
	SKIPGE @APRC	;SKIP IF NOT DISOWNED
	JRST FLKDSN	;DISOWNED
	MOVE A,@UNAME	;NOT DISOWNED, PICK UP UNAME
	SKIPE X		;SKIP IF TOP LEVEL
	MOVE A,@JNAME	;NOT TOP, USE JNAME
	6TYPE A		;OUTPUT U OR J NAME
	XCT FLKT21(OMODE)
	JRST FLK6

	;DISOWNED PROCEDURE WITH TTY OR GE OUTPUT
FLKDSN:	6TYPE @UNAME	;MUST OUTPUT BOTH NAMES FOR FULL INFO
	CTYPE 40
	6TYPE @JNAME
	JRST FLK6

FLKD:	ALIGN 4(X)	;FOR DIS OR LPT OUTPUT	;INDENT TO INDICATE PROCEDURE DEPTH
	6TYPE @UNAME
	CTYPE 40
	6TYPE @JNAME
	CTYPE 40
	6TYPE @USYSNM
	CTYPE 40
FLK6:	XCT FLKT3(OMODE)	;SPACE OVER
	PUSHJ P,USTATUS	;OUTPUT STATUS COLUMN
	XCT FLKT4(OMODE)	;SPACE OVER
	SKIPGE @APRC	;SKIP IF NOT DISOWNED
	JRST TTYO3	;DISOWNED
	SKIPL B,@TTYTBL	;SKIP IF USER DOES NOT CURRENTLY HAVE TTY
	JRST TTYO2
	MOVEI A,"?
	AOJE B,TTYO0	;NO SIGN OF PROCEDURE EVER HAVING TTY, OUTPUT "?"
	CAMN B,[600000,,1]
	JRST TTYO0	;NEWLY CREATED PROCEDURE, NO TTY, OUPUT "?"
	MOVEI A,">
	TLNE B,10000	;SKIP & OUTPUT ">" IF PROCDURE HAS GIVEN AWAY TTY
	MOVEI A,"<	;OUTPUT "<" IF PROCEDURE HAS HAD TTY TAKEN AWAY FROM IT
TTYO0:	CTYPE (A)
TTYO1:	XCT FLKT6(OMODE)	;SPACE OVER
	PUSHJ P,RESORS	;OUTPUT SPECIAL RESOURCES PROCEDURE IS USING
	XCT FLKT7(OMODE)	;SPACE OVER
	MOVE A,@NMPGS	;TOP OF USER MEM
	ADDM A,USRMEM	;ADD INTO RUNNING TOTAL OF USER MEM
	XCT FLKT8(OMODE)	;OUTPUT
	XCT FLKT85(OMODE)	;SPACE OVER
	XCT FLKT87(OMODE)	;PRINT PAGES SWAPPED OUT
	XCT FLKT88(OMODE)	;ALIGN
TIMOUT:	MOVE A,@JTMU
	ADDM A,USRTIM	;INCREMENT RUNNING TOTAL USER TIME
	ADDI A,9830.
	IDIVI A,19661.
	DNUM 2,A
	CTYPE "%
	HRRZ F,MODE
	CAIN F,14
	JRST GPK1	;DISPLAY SCHED VARIABLES, SWPIN RQ ETC INSTEAD OF RUN TIMES
	XCT FLKT9(OMODE)	;GO TO TIMOT1 IF TTY OR GE, OTHERWISE SPACE OVER
	ONUM @PIRQC	;OUTPUT 1ST WORD OF INTERRUPT REQUESTS
	XCT FLKT11(OMODE)	;GO TO TIMOT1 IF GE, OTHERWISE SPACE OVER
	ONUM @IFPIR	;OUTPUT 2ND WORD OF INTERRUPT REQUESTS
TIMOT1:	XCT FLKT13(OMODE)	;SPACE OVER
	MOVEM A,TMPTCL	;STORE COLUMN NUMBER
	MOVE A,@UTRNTM	;GET TOTAL RUN TIME FOR THIS PROCEDURE
	ADDM A,USRJTM	;INCREMENT TOTAL RUN TIME
	PUSHJ P,TMPTH	;OUTPUT AMOUNT OF TIME USED BY PROCEDURE
TIMOT2:	PUSHJ P,CRR	;END OF LINE FOR PROCEDURE
	PUSH P,U	;STORE POINTER IN -1(P) FOR ULOOK
	AOS X		;SET TO ONE LEVEL DEEPER
	PUSHJ P,ULOOK	;RECURSE
	SOS X		;RETURN LEVEL COUNT
	POP P,U		;RESTORE U
	MOVE A,-1(P)	;RESTORE A
ULOOKE:	ADD U,LUBLK		;GO TO NEXT BLOCK OF USER VARS
	JUMPN X,.+3
	SKIPL UDISP
	POPJ P,
	CAMGE U,@USRHI	;CHECK FOR NONE LEFT
	JRST ULOOK1	;MORE
	POPJ P,		;END
GPK1:	CTYPE 40
	DNUM 4,@USIPRQ	;OUTPUT # PG SWPIN RQ
	CTYPE 40
	MOVE A,@USWPRI
	IDIVI A,15000.	;CONVERT TO PG MILLISEC'S
	DNUM 5,A
	SKIPL @SUPPRO
	JRST TIMOT2	;NOT TOP LVL
	PUSHJ P,CRR
	ALIGN 10.
	XTYPE [SIXBIT /TOTAL FOR TREE !/]
	MOVE B,@UTMPTR
	MOVE A,400000(B)
	IDIVI A,19661.
	DNUM 2,A
	CTYPE "%
	CTYPE 40
	MOVE B,@UTMPTR
	SUB B,USRRCE
	ADD B,SWRCE
	MOVE A,400000(B)
	IDIVI A,15000.	;CONVERT TO ASYMPTOTIC PG-MS
	DNUM 5,A
	XTYPE [SIXBIT / PG-MS !/]
	JRST TIMOT2

FLKT2:	JFCL		;TTY
	JFCL		;DATAPOINT OR OTHER DISPLAY
	JRST FLKD	;DISPLAY
	JRST FLKD	;LPT

FLKT21:	JFCL
	PUSHJ P,SNMTYP
	.VALUE
	.VALUE

SNMTYP:	XTYPE [SIXBIT /   !/]
	6TYPE @USYSNM
	POPJ P,

FLKT3:	ALIGN 1,11.	;STATUS
	ALIGN 1,21.
	ALIGN 1,28.
	ALIGN 1,28.

FLKT4:	ALIGN 1,19.	;TTY
	ALIGN 1,28.
	ALIGN 1,37.
	ALIGN 1,37.

FLKT6:	ALIGN 1,23.	;RESOURCES
	ALIGN 0,32.
	ALIGN 1,41.
	ALIGN 1,41.

FLKT7:	ALIGN 1,26.	;CORE
	ALIGN 0,36.
	ALIGN 1,45.
	ALIGN 1,45.

FLKT8:	ONUM 2,A
	ONUM 2,A
	ONUM 3,A
	ONUM 3,A

FLKT85:	ALIGN 1,29.	;OUT
	ALIGN 1,40.
	ALIGN 1,49.
	ALIGN 1,49.

FLKT87:	ONUM 2,@NSWPGS
	ONUM 2,@NSWPGS
	ONUM 3,@NSWPGS
	ONUM 3,@NSWPGS

FLKT88:	ALIGN 1,32.	;PI
	ALIGN 1,44.
	ALIGN 1,54.
	ALIGN 1,54.

FLKT9:	JRST TIMOT1
	ALIGN 1,50.
	ALIGN 1,57.
	ALIGN 1,57.

FLKT11:	.VALUE
	CTYPE 40
	CTYPE 40
	CTYPE 40

FLKT13:	MOVEI A,34.
	MOVEI A,53.
	MOVEI A,62.
	MOVEI A,62.

RESORS:	MOVEI F,0
	SKIPL @IOTLSR
	JRST RESR2
	MOVEI T,"I
	JSP A,RESCHO
RESR2:	MOVEI T,"%
	HRRZ B,@UREALT
	CAMN U,B
	JSP A,RESCHO
	CAME U,@PDPUSR
	JRST RESR4
	MOVEI T,"6
	JSP A,RESCHO
	MOVEI T,"D
	CONI 130,A
	SKIPN A
	JSP A,RESCHO
RESR4:	MOVSI B,RESTAB-RESTBE
	CAME U,@RESTAB(B)
RESR3:	AOBJN B,.-1
	JUMPGE B,RESRND
	LDB T,[350700,,RESTAB(B)]
	MOVEI A,RESR3
RESCHO:	TRON F,1
	XCT RESOR2(OMODE)	;BLINKING ON (IF NOT ALREADY)
	CTYPE (T)
	JRST (A)

RESRND:	TRNE F,1
	XCT RESOR3(OMODE)	;BLINK OFF
	POPJ P,

RESOR2:	JFCL
	CTYPE 40
	CTYPE ^B
	JFCL

RESOR3:	JFCL
	CTYPE 40
	CTYPE ^E
	JFCL

RESTAB:	"C_11.,,@CUSER
	"D_11.,,@DISUSR
	"L_11.,,@LPTUSR
	"O_11.,,@OLPUSR
	"R_11.,,@PTRUSR
	"M_11.,,@UMASTER
	"P_11.,,@PLTUSR
	"T_11.,,@PTPUSR
	"V_11.,,@NVDUSR
	"S_11.,,@TABUSR
	"B_11.,,@MTUSR
RESTBE:

	;USER HAS TTY
TTYO2:	CTYPE "T
	ONUM B
	JRST TTYO1

	;DISOWNED PROCEDURE
TTYO3:	6TYPE [SIXBIT /DISOWN/]
	JRST TTYO1

USTATUS:	MOVEI A,40	;LOAD WITH CODE FOR SPACE
	SKIPN @PICLR	;SKIP IF PROCEDURE NOT PROCESSING INTERRUPT
	MOVEI A,"*	;REPLACE SPACE WITH * IF INTERRUPTED
	SKIPGE B,@USWST
	MOVEI A,"_	;USER DESIRED OUT
	SKIPGE @USWSCD
	MOVEI A,">
	CTYPE (A)	;OUTPUT
	SKIPE A,@USTP	;SKIP IF RUNNING
	JRST URUN1	;NOT RUNNING, OUTPUT STOP WORD
	SKIPE @FLSINS	;SKIP IF NOT BLOCKED
	JRST HAIR2	;BLOCKED, OUTPUT MNEMONIC FOR HUNG OPERATION
	MOVE B,@UPC	;GET USER PC
	TLNN B,10000	;SKIP IF USER MODE
	JRST EHAIR	;EXEC MODE, OUTPUT + AND MNEMONIC
	6XTYPE [SIXBIT /RUN/]	;ANNOUNCE PROCEDURE RUNNING IN USER MODE
USTAT2:	SKIPN A,@RPCL	;SKIP IF RPCLSR'ING POING ON
	POPJ P,
	SKIPL A
	CTYPE ">	;RPCLSR'ING (STOPPING <'ED PROCEDURE)
	SKIPG A
	CTYPE "<	;BEING RPCLSR'ED (STOPPED BY >'ED PROCEDURE)
	ANDI A,-1	;GET USER INDEX
	IDIV A,LUBLK	;GET USER # OF OBJECT OR SOURCE OF RPCLSR'ING
	ONUM A	;OUTPUT USER NUM
	POPJ P,

	;NOT RUNNING
URUN1:	LSHC A,-30.	;RIGHT JUSTIFY LEFT TWO DIGITS
	ONUM 2,A	;OUTPUT LEFT TWO DIGITS
	CTYPE "!	;OUTPUT "!"
	LSH B,-6	;RIGHT JUSTIFY REMAINDER
	ONUM B		;OUTPUT COUNT OF TRANSIENT REASONS TO BE STOPPED
	JRST USTAT2

HAIR2:	TLNN B,200000
	JRST HAIR
	TLNE B,10000
	SKIPA A,[SIXBIT /IPAGE/]
	MOVE A,[SIXBIT /PAGE/]
	JRST HAIR1

EHAIR:	CTYPE "+
HAIR:	SKIPGE A,@SV40	;SKIP IF SIGN BIT ON
	JRST USRIOT
	CAML A,[100000,,]	;SKIP IF UUO
	JRST ILLOP	;NOT A UUO
	LSH A,-27.	;RIGHT JUSTIFY OP CODE AND AC
	CAIG A,47	;SKIP IF TOO LARGE FOR SYS UUO
	CAIGE A,40	;SKIP IF SYS UUO
	SKIPA A,[SIXBIT /UUO/]	;NOT SYS UUO, OUTPUT "UUO"
	XCT UUOTB-40(A)	;SYS UUO, DISPATCH
HAIR1:	6XTYPE A	;OUTPUT MNEMONIC
	JRST USTAT2

ILLOP:	6XTYPE [SIXBIT /XXX/]	;ILLEGAL OPERATION
	JRST USTAT2

USRIOT:	LDB A,[270300,,@SV40]
	MOVE A,UIOTAB(A)
	JRST HAIR1

UIOTAB:	IRPS A,,[BLKI DATAI BLKO DATAO CONO CONI CONSZ CONSO]
	SIXBIT /A/
	TERMIN

UUOTB:	JRST AIOT
	MM /OPEN/
	JRST AOPER
	JRST ACALL
	MM /USET/
	MM /BREAK/
	MM /STATUS/
	MM /ACCESS/

AIOT:	LDB C,[270400,,@SV40]	;GET AC FIELD
	MOVEI A,@IOCHNM
	ADD A,U
	HRRZ C,(A)	;RIGHT HALF OF IOCHNM IS INDEX TO IOTTB
	PUSHJ P,AIOTNM
	JRST HAIR1

AIOTNM:	HLLZ A,@DCHSTB	;DEVICE NAME
	MOVE B,[300600,,A]
	TLNE A,77
	IBP B
	MOVE T,@IOTTB
	MOVEI C,'B
	TLNE T,400000
	IDPB C,B
	MOVEI C,'I
	TLNE T,200000
	MOVEI C,'O
	IDPB C,B
	POPJ P,

ACALL:	LDB A,[270400,,@SV40]	;GET AC FIELD
	JUMPE A,ACALL0
	6XTYPE ACALTB(A)	;OUTPUT MNEMONIC
	JRST USTAT2
ACALL0:	6XTYPE @LSCALL
	JRST USTAT2

AOPER:	HRRZ A,@SV40	;GET OPER NUM
	CAILE A,MXOPER	;SKIP IF LEGAL
	SKIPA A,[SIXBIT /ILOPER/]	;ILLEGAL OPER, SKIP
	MOVE A,AOPTB(A)	;GET MNEMONIC
	JRST HAIR1

ACALTB:	IRPS A,,[CALL,DISMIS,TRAND,TRANA,VALUE,UTRAN,CORE
TRNDL,DSTART,FDELE,DSTRTL,SUSET,LTPEN,VSCAN,POTSET]
	SIXBIT /A/
TERMIN
REPEAT 20-.+ACALTB,SIXBIT /ILCALL/

AOPTB:	IRPS A,,[OPER,ITYI,LISTN,SLEEP,SETMS,SETM2,LOGIN,CLOSE
UCLOSE,ATTY,DTTY,IOPUSH,IOPOP,DCLOSE,DSTOP,RDTIME
RDSW,GUN,UDISMT,GETSY,IPDP,GETLOC,SETLOC,DISOWN
ILUUO,ILUUO,GENSYM,LOGOUT,REALT,WSNAME,UPISET,RESET
ARMOVE,ILUUO,CBLK,ASSIGN,DESIGN,RTIME,RDATE,HANG
EOFC,IOTLSR,RSYSI,SUPSET,PDTIME,ARMRS,UBLAT,IOPDL
ITYIC,MASTER,VSTST,DIAL,DIALW,HANGUP,DIETIM,SHUTDN
ARMOFF,NDIS,FEED,REDEF,IFSET,UTNAM,UINIT
RYEAR,RLPDTIM,RDATIM,RCHST,RBTC]
	SIXBIT \A\
TERMIN
MXOPER==.-AOPTB-1	;NUM OF ENTRIES IN AOPTB

TTAB:	PUSH P,A
	CTYPE 40
	LDB U3,[300,,LINEPOS]
	JUMPN U3,.-3
	POPJ P,

CRR2:	PUSHJ P,CRR
CRR:	ATYPE [ASCIZ /
/]
	POPJ P,

	;OUTPUT TIME IN SECONDS AS HH:MM:SS
TMPTH:	LSH A,-6	;WIN FOR SIGN BIT
	IDIVI A,1000.*1000000./<4069.*100>	;CONVERT HOLLOWAY CLOCK TICKS TO SECONDS
TMPT:	JUMPE A,CPOPJ
	SETZM SPNDD	;INITIALIZE TO ZERO SPACES RIGHT JUSTIFICATION
	MOVEI D,0	;INITIALIZE DIGIT COUNT
TMP2:	CAMGE A,TMT1(D)	;SKIP IF REMAINING NUM OF SECS IS DIVISIBLE BY APPROPRIATE DIVISOR
	JRST TMP1	;NOT DIVISIBLE
TMP3:	IDIV A,TMT1(D)	;DIVIDE OFF DIGIT
	SKIPL SPNDD	;SKIP IF PAST FIRST DIGIT TO BE OUTPUT
	JRST TMP4	;RIGHT JUSTIFY FIRST DIGIT
TMP5:	CTYPE "0(A)	;OUTPUT DIGIT
	MOVE A,B	;REMAINDER NEW BECOMES NUM OF UNCONVERTED SECS
	TRNN D,1	;SKIP IF 2ND DIGIT OF PAIR WAS JUST OUTPUT
	AOJA D,TMP3	;INCREMENT COUNT AND GO DO 2ND DIGIT
	CAIL D,7	;SKIPE IF NOT DONE
CPOPJ:	POPJ P,		;DONE, EXIT
	CTYPE ":	;OUTPUT COLON
	AOJA D,TMP3	;INCREMENT COUNT AND START NEXT PAIR

	;NOT DIVISIBLE- ACCUMULATE SPACES FOR EVENTUAL OUTPUT AT START
TMP1:	TRNE D,1	;SKIP IF EVEN NUM OF DIGITS OUTPUT (START OF PAIR)
	AOS SPNDD	;2ND DIGIT, EXTRA SPACE FOR COLON
	AOS SPNDD	;SPACE FOR DIGIT
	AOJA D,TMP2	;INCREMENT COUNT AND TRANSFER

	;RIGHT JUSTIFICATION OF OUTPUT
TMP4:	MOVE U3,SPNDD	;NUMBER OF SPACES NEEDED
	CAIG U3,2	;IF GREATER THAN 1 DAY
	MOVEI U3,2	;THEN SCREW ALIGNMENT
	SUBI U3,2
	ADD U3,TMPTCL
	ALIGN 1,(U3)	;SPACE OVER
	SETOM SPNDD	;INDICATE FIRST DIGIT OUT, TURNS OFF TMP1 & TMP4
	JRST TMP5

	;TABLE OF SECONDS
TMT1:	36000.*24.	;10 DAYS
	3600.*24.	;DAYS
	36000.	;10 HOURS
	3600.	;HOURS
	600.	;10 MINUTES
	60.	;MINUTES
	10.	;10 SECONDS
	1	;SECONDS


	;MEMORY HISTOGRAM
MHIST:	ATYPE HTOP
	SETZM RHIST
	MOVE A,[RHIST,,RHIST+1]
	BLT A,RHIST+377
	MOVN C,TSYSM
	HRLZS C
HL4D:	LDB A,[321000,,@MEMBLT]
	CAIN A,MURUSR
	JRST HL4A	;USER
	AOS RHIST(A)	;COMPUTE BASIC HIST
HL4B:	AOBJN C,HL4D
HL4:	MOVEI A,0
	MOVEI B,377
HL2:	HRRZ C,RHIST(B)	;FIND BIGGEST USE
	CAML A,C
	JRST HL1
	MOVE A,C
	MOVE U,B
HL1:	SOJGE B,HL2
	JUMPE A,PUTPKR	;THRU
	HLRZ D,RHIST(U)	;SHARED PGS IF USER
	SETZM RHIST(U)
	PUSH P,A
	MOVE A,U
	IMUL U,LUBLK
	CAIL A,400-MEMTBL
	JRST HL3	;SPECIAL CODE KNOWS ABOUT
	CAML U,@USRHI
	JRST HL5	;SPECIAL CODE DONT KNOW ABOUT
	6TYPE @UNAME
	CTYPE 40
	6TYPE @JNAME
	SKIPN @USTP
	CTYPE 40
	SKIPE @USTP
	CTYPE "*
	POP P,A
	ONUM 3,A
	CTYPE 40
	MOVE A,@HUSRAD	;TOP
	LSH A,-10.
	ONUM 3,A
	ALIGN 3,
	ONUM 3,D	;SHARED
	ALIGN 3,
	ONUM 3,@NSWPGS	;PGS OUT
	CTYPE 40
	ONUM 3,@NMPGS	;TOTAL
	XCT HLTT2(OMODE)
	PUSHJ P,RESORS
NMOUT:	PUSHJ P,CRR
	JRST HL4

HL4A:	PUSH P,C
	HRRZ D,@MMSWP	;LENGTH OF CIRC P
	ADD C,MEMPNT
	HRLI C,2200
	PUSHJ P,UCPRL
	400000,,HL4C
	POP P,C
	JRST HL4B

HL4C:	MOVE A,U
	IDIV A,LUBLK
	AOS RHIST(A)
	MOVSI B,1
	CAILE D,1
	ADDM B,RHIST(A)
	POPJ P,


HL5:	ONUM 6,A
	CAML A,MSPL
	XTYPE [SIXBIT /SPECIAL!/]
	JRST HL6

HL3:	SUBI A,400-MEMTBL
	6TYPE MEMTB(A)
HL6:	ALIGN 14.
	POP P,A
	ONUM 3,A
	JRST NMOUT

MURUSR==1

MEMTB:	SIXBIT /EXDDT/
	SIXBIT /HOLE/
	SIXBIT /DIRCPY/
	SIXBIT /DSKTUT/	;364
	SIXBIT /DSKMFD/
	SIXBIT /DSKUDR/
	SIXBIT /DSKBUF/
	SIXBIT /SFREE/	;370
	SIXBIT /DISPLA/
	SIXBIT /MMP/
	SIXBIT /MAGBUF/
	SIXBIT /PROCES/	;374
	SIXBIT /FREE  /
	SIXBIT /IOBUF /
	SIXBIT /EXEC  /	;377

MEMTBL==.-MEMTB

HLTT2:	JFCL
	CTYPE 40
	CTYPE 40
	CTYPE ^I
;DEC TAPE STATUS DISPLAY
UTPEEK:	ATYPE UTTOP
	MOVN C,NUNITS
	HRLZS C
	HRRI C,1
UTP1:	CTYPE "0(C)
	CTYPE 40
	SONUM @UDIR
	ALIGN 5
	SONUM @UGOAL
	ALIGN 10.
	ONUM 2,@EUPOS
	ALIGN 14.
	SONUM @DG2
	ALIGN 18.
	SKIPL A,@UDIRO
	HRRZ A,A
	SONUM A
	SKIPN @UMNTR
	JRST UTP2
	ALIGN 25.
	6XTYPE @UMNTR
	SKIPN @UTASS
	JRST UTP2
	ALIGN 32.
	6XTYPE @UTASS
UTP2:	PUSHJ P,CRR
	MOVE B,@DRTM
	CAMN B,[177777,,-1]
	JRST UTP3
	SUB B,@TIME
	ALIGN 5
	ONUM @ULCTM
	ALIGN 1,15.
	SONUM B
	PUSHJ P,CRR
UTP3:	AOBJN C,UTP1
	PUSHJ P,CRR
	SETZM F
	MOVN C,NUTIC
	SUB C,NUTOC
	HRLZS C
UTP5:	SKIPG @UTUSR
	JRST UTP9
	TRON F,1
	ATYPE UTMID
	HRRZ X,C
	ONUM 2,X
	HRRZ A,@UTTNO
	ONUM 2,A
	ALIGN 6
	HLRZ U,@UTUSR
	6TYPE @UNAME
	CTYPE 40
	6TYPE @JNAME
	CTYPE 40
	CAMGE X,NUTIC
	XTYPE [SIXBIT /IN  !/]
	CAML X,NUTIC
	XTYPE [SIXBIT /OUT !/]
	ONUM @UTBFS
	PUSHJ P,CRR
UTP9:	AOBJN C,UTP5
	JRST PUTPKR

DTOP:	SIXBIT /INDEX UNAME JNAME SNAME     STATUS   TTY    CORE OUT %TIM PIR1,2 TIMUSD!/
GTOP:	SIXBIT /I= U-JNAME  STATUS TTY   CORE OUT %TM TIMUSD!/
DPTOP:	SIXBIT /IDX U-JNAME SNAME     STATUS TTY    CORE OUT %TM PIR1,2 TIMUSD!/

UTTOP:	ASCIZ /DIRC GOAL POS DG2 DIR   UMNTR  UTASS
     ULCTM     DRTM
/
UTMID:	ASCIZ /CN TN UNAME  JNAME  DIR BUFS
/

HTOP:	ASCIZ /UNAME JNAME   MEM  TOP SHARED OUT TOTAL
/

CONSTANTS
HUSED=.-1
INFORM [HIGHEST USED]\.-1

END GO
