TITLE DUMPER

A=1
B=2
C=3
D=4
E=5
I=5
F=6
N=6

SYM=7
TER=10
U=11
V=12
W=13
X=14
P=17

AI==1	;1=>AI 0=>DMCG

BTTYP==1
BIOCE==400
UFDBYT==6	; BYTE SIZE IN UFD DISCRIPTOR
UNDSCP==1500,,	; BYTE POINTER TO DISCRIPTOR IN UFD (3RD WORD IN NAME AREA)
UDDESC==11.	; RELITIVE FIRST LOCATION IN DISCRIPTOR

MAXTAP==3400	;DON'T CHANGE THESE IF YOU'RE NOT RJL
DIRADR==74000	;AND EVEN THEN YOU SHOULD BE CAREFUL
IFG MAXTAP*20-DIRADR, PRINTX /LOSE. DIRECTORY IN TAPE AREA/
MFDCH==1	;MASTER FILE DIRECTORY INPUT
UFDCH==2	;FILE DIRECTORY INPUT
DSKIN==3	;DISK INPUT
MAGOUT==4	;MAG TAPE  OUTPUT 
TYIC==5		;TTY INPUT
TYOC==6		;TTY OUTPUT
DSKOUT==7	;DISK OUTPUT
MAGIN==10	;MAG TAPE INPUT
LPTCH==11	;LPT OR TPL OUTPUT
ERRC==12	;ERR DEVICE INPUT
STATC==13	;TAPE STATUS STORED ON DISK
SAVET==14	;SAVED TAPE FILE NAMES

LBUF==2000	;LENGTH OF DATA BUFFER
LPDL==100	;LENGTH OF PDL
LPAT==100	;LENGTH OF PATCH AREA

RPCNT==0
UUOTAB:		;THIS TABLE GENERATED BY FOLLOWING IRPW
IFN AI,[
IRPW X,,[
PSIS	;PRINT SPACE AND A SIXCHARACTER SIX-BIT WORD UUO
PDPT	;PRINT SPACE AND DECIMAL NUMBER UUO
POCT	;PRINT SPACE AND OCTAL NUMBER UUO
PERR	;PRINT ASCIZ STRING ERROR MESSAGE AND DIE UUO
PASC	;PRINT ASCIZ STRING
SIXTYP	;PRINT SIXBIT STRING
MTAPE	;MAG TAPE INSTRUCTION "MTÁPE COMMAND,SUBCOMAND
OPEN	;.OPEN WITH ERROR ANALYSIS
]
RPCNT==RPCNT+1
IRPS Y,,X
Y=RPCNT_33
.ISTOP
TERMIN
LOC UUOTAB+RPCNT-1
A!X
TERMIN
]
IFE AI,[IRP X,,[PSIS,PDPT,POCT,PERR,PASC,SIXTYP,MTAPE,OPEN]
RPCNT==RPCNT+1
IRPS Y,,X
Y=RPCNT_33
.ISTOP
TERMIN
LOC UUOTAB+RPCNT-1
A!X
TERMIN
]
LUUOTB==RPCNT
IFG LUUOTB-37,PRINTX /TOO MANY UUOS DEFINED/

DEFINE PRINT ARG
	PASC [ASCIZ \ARG\]
TERMIN

DEFINE DIE ARG
	PERR [ASCIZ /ARG/]
TERMIN

ZZ==.
LOC 41
	JSR UUOH
	JSR INT
LOC ZZ
NLINES:	0		;LINES PRINTED ON SCREEN
TTYTYP:	0		;HARD COPY
PRNAM1:	.FNAM1
PRNAM2:	.FNAM2

MYNAME:	0	;ORIGINAL USER NAME
USNM:	SIXBIT /FIRST/	;CURRENT SYS (USER) NAME
LUSNM:	0	;LAST USER NAME DUMP COMPLETED FOR
FUSNM:	0	;FIRST USER NAME ON TAPE
NTAPES:	-1	;NUMBER OF REEL IN CURRENT DUMP, -1==> WE DON'T KNOW THIS PARAMETER
FDATE:	0	;CREATION DATE OF FILE

APPENF:	-1	;NO FILES DUMPED FOR CURRENT USER YET
FLNI:	-1	;-1 FIRST TIME THRU FNG (NEED TO OPEN FILE DIRECTORY)
MFDIN:	-1	;-1 FIRST TIME THRU M.F.D. (NEED TO OPEN M.F.D.)
ITAPE:	-1	;-1 IF JUST REWOUND (NEED TO READ/WRITE TAPE-HEADER)
TAPEF:	0	;HOLDS TAPE STATUS REGISTER

IFE AI,	MTCMD:	0	;STORAGE FOR .MTAPÅ
MAGOPN:	0	; 0=> MAGOUT NOT OPEN,-1=> OPEN
LNKFLG:	0	;-1=>DUMPING OR LOADING A LINK
DMPMOD:	0	;-1 DUMPING, 0 RETRIEVING
DPACK:	0	;PACK TO DUMP OR -1 IF ALL
DMPNWF:	0	;-1 DUMP INCREMENTAL, 0 ALL FILES
DMPNW1:	0	;SET FROM DMPNWF FOR EACH USER, SET TO 0 ON TAPE FULL
		;IE DOESNT REALLY KNOW WHAT FILES IT DMPED
		;FIRST TIME SO DUMP ALL
MRGSW:	0	;-1 MERGE, 0 LOAD ALL
FULLDMP:	0	;-1 FULL DUMP, 0 SPECIFIC FILES
MICFLG:	0	;-1 MICROTAPE, 0 DISK
LPTSW:	0	;-1 LPT OR TPL OUTPUT ON, 0 OUTPUTTING TO TTY
EOTFLG:	0	;-1 WHEN HIT EOT ON READ, RESET BY REWIND
EXPERM:	0	;-1 WHEN ONLY EXPERIMENTING => .DMPCH NOT SET
CAREF:	0	;-1 DONT OVERWRITE FILES WHICH HAVEN'T BEEN DUMPED
CDMFL:	0	;-1 CONTINUE A FULL DUMP FROM GIVEN USER, 0 ORDINARY DUMP
LSTWHL:	0	;-1 LIST WHILE DOING DUMP OR LOAD
CHKFLG:	0	;-1 CHECK OPERATION, 0 DUMP/LOAD
DECIDF:	0	;-1 DECIDE WHICH TAPES TO USE
ARCHVF:	0	;-1 CALL THIS AN ARCHIVE
DEVICE:	0	;DEVICE IF SPECIFIED
SUPERC:	0	;-1 TO SUPPRESS DATA ERROR MESSAGES
BASE:	10.	;OUTPUT BASE

;WORDS USED BY CHECKER
ERRCNT:	0	;ERRORS ENCOUNTERED THIS FILE ON TAPE IN
ERRDSK:	0	;ERRORS ENCOUNTERED THIS FILE IN DISK IN
PNTALL:	0	;-1 TO PRINT ALL FILES AS THEY GO
ERRALL:	0	;SET IF ANY ERRORS HAPPENED
NEWCHR:	0	;DUMP CHARACTER FOR THIS FILE
WRDONG:	0	;COUNT OF BAD WORDS
LNTCNT:	0	;DIFFERENCE IN LENGTH OF TWO FILES
ALLWRD:	0	;TOTAL WORDS ON THIS REEL SO-FAR
LENGTH:	0	;NUMBER OF FILE SPECS
EOFF:	0	;EOF FLAG FOR TAPE FILES ON DISK.  USED IN AFIND COMMAND
DIRIDX:	0	;POINTER TO FILE DIRECTORY BUFFER(FDIRBF)
BARROW:	0	;BACK-ARROW FLAG
LLIST==20.		;NUMBER OF FILE SPECS ALLOWED
IRP Y,,[TO,FM]
IRP X,,[DEV,SNM,FN1,FN2]
Y!!X:	BLOCK LLIST
TERMIN
TERMIN
FMDUMP:	BLOCK LLIST
IRP X,,[DEV,SNM,FN1,FN2]
TIN!X:	0		;HOLDS SPECS FOR FILGET
TERMIN
IRP X,,[DEV,SNM,FN1,FN2]
TYN!X:	0		;HOLDS SPECS FOR FILGET
TERMIN
DAYTIM:	0	;HOLDS  CREATION DATE AND TIME OF FILE DURING FIND COMMAND
PSNAM:	0	;SNAME TO BE PRINTED BY FIND COMMAND
PFF1:	0	;FILE NAME TO BE PRINTED BY FIND COMMAND
PFF2:	0	;
WRDCNT:	0	;COUNT OF WORDS IN FILE
SAVAOB:	0	;AOB OF FIRST BAD WORD

INTAC:	BLOCK 20	;SAVED ACS DURING INTERRUPT

GREATF:	-1		;0 ==> > FILE HACKED DURING DUMP
THBLK:	-LTHBLK,,0	;TAPE-HEADER-BLOCK
THTPN:	-1	;TAPE NUMBER,,NUMBER OF REEL IN THIS DUMP, -1==> WE DON'T YET KNOW THIS PARAMETER
THDATE:	0	;TAPE CREATION DATE
THTYPE:	0	;0 RANDOM, >0 FULL DUMP, <0 INCREMENTAL DUMP
LTHBLK==.-THBLK

HBLK:	-LHBLK,,0		;FILE-HEADER-BLOCK
HSNM:	0	;SYS NAME
HFN1:	0	;FN1
HFN2:	0	;FN2
HPKN:	0	;PACK NUMBER
HDATE:	0	;CREATION DATE OF FILE ON DISK
LHBLK==.-HBLK

STAPST:		;BLOCK OF DATA STORED ON DISK FOR TAPE STATUS
STAPEN:	0	;TAPE NUMBER,,REEL NUMBER
STDATE:	0	;DATE TAPE LAST WRITTEN
STYPE:	0	;TYPE OF DATA LAST WRITTEN AS THTYPE ABOVE
SFUSNM:	0	;FIRST USER ON THIS TAPE
SLUSNM:	0	;LAST USER ON THIS TAPE
SUSER:	0	;UNAME OF PERSON WHO DUMPED THIS TAPE
SDONE:	0	;ZERO IF DUMP NOT COMPLETED,-1 REGULAR, 1 ARCHIVE
	BLOCK 20+.-STAPST

INTERR:	SIXBIT /DEVICE/		;USED FOR DISK ERROR ANALYSIS
	SIXBIT /RANDOM/
	SIXBIT /FILE/
	SIXBIT /LOSER/
LPTO:	SIXBIT /  !LPT/	;OUTPUT TO LPT (AND TPL ETC.)
	SIXBIT /WALL/
	SIXBIT />/
	0
	0		;LEAVE THESE HERE !!!!

IFN AI,MAGI:	SIXBIT /  &MT0/	;INPUT FROM MAG-TAPE
IFE AI,MAGI:	26,,(SIXBIT /MT0/)	; BLOCK IMAGE,DON'T FLUSH TO EOF ON CLOSEî
	SIXBIT /MACRO/
	SIXBIT /IN/
	0
	0		;LEAVE ALONE

MAGO:	SIXBIT /  'MT0/	;OUTPUT TO MAG-TAPE
	SIXBIT /MACRO/
	SIXBIT /OUT/
	0
	0

MFO:	(SIXBIT /DSK/)	;MASTER FILE DIRECTORY IN
	SIXBIT /M.F.D./
	SIXBIT /(FILE)/
	0
	0

FNO:	SIXBIT /  &DSK/		;FILE DIRECTORY IN
	SIXBIT /.FILE./
	SIXBIT /(DIR)/
	0
	0


TRNI:	SIXBIT /  &DSK/	;INPUT FROM DISK
FN1:	0	;FILE NAME 1
FN2:	0	;FILE NAME 2
	0
	0	;HERE IN CASE OF .FDELE TRN1

;*****   ***** KEEP THESE NEXT 6 LOCATIONS TOGETHER FOR LINK INFO *****
LNKBLK:	200000,,(SIXBIT /DSK/)
	0
	0
LNKNM1:	0	; LINK FN1
LNKNM2:	0	;LINK FN2
PACKN:	0	;PACK NUMBER OR SNAME IN LINK IF LEFT HALF NON ZERO
;******   *****			*****

CPYO:	SIXBIT /  #DSK/	;OUTPUT TO DISK
LFN1:	0
LFN2:	0
	0
	0

ERROP:	0,,(SIXBIT/ERR/)
	1
	0
	0
	0

SPLACE:	SIXBIT /SYSENG/	;PLACE TO STORE MACRO TAPES
STATOP:	SIXBIT /   DSK/	;FILE TO SAVE TAPE DATA IN
	SIXBIT /MACRO/
	SIXBIT /TAPES/
	0
	0

USRUFD:	SIXBIT /  &DSK/		;PLACE TO STORE TAPE INFO FOR CURRENT USER
	SIXBIT /USER/
	SIXBIT /UFD/
USRDEL:	0		;FOR .FDELE
	0
	0
NPLACE:	SIXBIT /.TAPE./
NSVOP:	SIXBIT /  'DSK/
	SIXBIT /TAPE/
NSVTPN:	0
	0		;FOR .FDELE
	0
	0

RUSN:	0	;NAMES USED IN SINGLE FILE RESTORE
RFN1:	0
RFN2:	0
	0
	0

CUSN:	0	;CURRENT USER NAME USED WHEN LSTWHL IS ON
RDATE:	SETZ
	SIXBIT /RFDATE/
	[DSKIN]
	SETZ FDATE(2000)

SDATE:	SETZ
	SIXBIT /SFDATE/
	[DSKOUT]
	SETZ FDATE

CLBIT:	SETZ
	SIXBIT /SDMPBT/
	[STATC]
	SETZ [0]

UUOH:	0
	PUSH P,40
	PUSH P,UUOH		;FOR RECURSIVE UUOS
	PUSH P,A
	PUSH P,B
	PUSH P,C
	LDB C,[330600,,40]	;OP CODE
	CAILE C,0
	CAILE C,LUUOTB
	.VALUE		;ILLEGAL UUO
	PUSHJ P,@UUOTAB-1(C)
	CAIA		;REGULAR RETURN
	JRST SKPRET		;SKIP RETURN
	POP P,C
	POP P,B
	POP P,A
	POP P,UUOH
	POP P,40
	JRST 2,@UUOH
SKPRET:	POP P,C
	POP P,B
	POP P,A
	POP P,UUOH
	POP P,40
	AOS UUOH
	JRST 2,@UUOH



AMTAPEK:	PUSH P,40
	OPEN MAGIN,MAGI
	JRST RET
	POP P,40
	LDB A,[270400,,40]	; SPACE, DO SOMETHING ELSE, OR SET MODE(S)
	HRRZ B,40	;SUBCOMMAND
	.CALL TAPBLC
	.VALUE
	POPJ P,
TAPBLC:	SETZ
	XWD SIXBIT /   MTA/,SIXBIT /   PE/		;SO NMTAPE WILL NOT FIND THIS
	[MAGIN]
	A
	SETZ B

APSIS:	PUSHJ P,TYOS	;PRINT SIXCHARACTER SIXBIT WORD
ASIXTYP:	MOVE B,@40
	JRST SIXTYO

APDPT:	MOVE C,-1(P)	;PRINT DECIMAL NUMBER
	MOVE A,@40
	PUSHJ P,ADJUS
	JRST DPT

ADJUS:	PUSH P,A	;'FIXED' FORMAT HACK
	MOVM B,A
	SKIPN B
	MOVEI B,1
	MOVEI C,10000.
	SKIPGE A
	IDIVI C,10.
ADJUS1:	PUSHJ P,TYOS
	CAML B,C
	JRST POPAJ
	IMULI B,10.
	JRST ADJUS1

APOCT:	MOVE C,-1(P)	;PRINT OCTAL NUMBER
	PUSHJ P,TYOS
	MOVE A,@40
	JRST DOT

APERR:	PUSHJ P,APASC	;PRINT ASCII AND DIE
	JRST ERR

CRRPNT:	PUSHJ P,CRR
	JRST PRINL5

AOPEN:	MOVEI A,<.OPEN_-27.>		;DO A .OPEN, BUT ANALYZE FAILURE
	MOVE B,40
	DPB A,[331100,,B]
	XCT B
	CAIA
	JRST POPJ1		;SKIP RETURN
	PUSH P,40
	HRRZ B,UUOH
	SOS B
	POCT B		;PC OF OFFENDING OPEN
	POP P,A
	.SUSET [.RSNAM,,B]
TELL:	PSIS (A)
	PRINT :
	PSIS 1(A)
	PSIS 2(A)
	PSIS B
	PASC [ASCIZ /;/]
	PUSHJ P,OPINFL
	JRST CRR
APASC:	MOVE B,40	;PRINT ASCIZ STRING
	HRLI B,440700
PRINL5:	ILDB A,B
	JUMPE A,CPOPJ
	CAIN A,"_	;GETS MAPPED INTO CR-LF
	JRST CRRPNT
	PUSHJ P,TYO
	JRST PRINL5

SIXTYO:	MOVE C,[440600,,B]	;TYPE 6 SIXBIT CHARACTERS
SIXTY1:	ILDB A,C
	ADDI A,40
	PUSHJ P,TYO
	TLNE C,770000
	JRST SIXTY1
	POPJ P,

DOT:	SKIPA B,[10]
DPT:	MOVEI B,10.
	MOVEM B,BASE
	JUMPL A,NDPT
DPT1:	IDIV A,BASE	;DECIMAL OUTPUT ROUTINE
	HRLM B,(P)
	SKIPE A
	PUSHJ P,DPT1
	HLRZ A,(P)
	ADDI A,"0
	JRST TYO

NDPT:	PUSH P,A
	MOVEI A,"-
	PUSHJ P,TYO
	POP P,A
	MOVNS A
	JRST DPT1

OPINFL:	PUSH P,A	;ANALYZE IOC ERROR
	OPEN ERRC,ERROP
	JRST RET
	SKIPA A,[40]	;SPACE
ERRLOP:	.IOT ERRC,A
	CAIE A,15
	CAIN A,14
	JRST CLORIN
	PUSHJ P,TYO
	JRST ERRLOP

CLORIN:	.CLOSE ERRC,
	PUSHJ P,CRR
POPAJ:	POP P,A
	POPJ P,
FUNCT:	.STATUS UFDCH,A
	LDB A,[220600,,A]
	CAIN A,20
	POPJ P,
	PSIS CHNTAB+UFDCH	;MAY JUST BE 'DEVICE NOT AVAILABLE'
	PUSHJ P,OPINFL
	PUSHJ P,CRR
	MOVEI A,150.
	.SLEEP A,
	JRST FNG8
LFBLOC==5
FNG:	AOSE FLNI		;PUT ONE FILE NAME AND PACK # IN FN1,FN2,PACKN
	JRST NEXFLN	;NOT THE FIRST TIME
FNG8:	OPEN UFDCH,FNO
	JRST FUNCT		;MAYBE TOO MUCH DISK ACTIVITY
	MOVE A,[-2000,,FDIRBF]
	.IOT UFDCH,A
	MOVE A,FDIRBF+1
	MOVEM A,DIRIDX
	ADDI A,FDIRBF		;A POINTS TO BEGINNING OF NAME AREA
	MOVE C,A
GETNM:	CAILE A,FDIRBF+1777-4
	JRST OUTENT		;END OF NAME AREA
	SKIPN W,(A)
	JRST NEXENT		;EMPTY SLOT
	MOVE B,2(A)
	SKIPN DMPNWF
	JRST IGNORQ
	TLNE B,1	; LINK
	JRST NEXENT	; DON'T INCREMENTAL DUMP LINKS
	TLNE B,400000		;FILE-DUMPED BIT
	JRST NEXENT
IGNORQ:	TLNE B,200064
	JRST NEXENT		;FILE IS EITHER OPEN FOR WRITING OR SOME FLAVOR OF BEING DELETED
	MOVEM W,(C)		;FIRST NAME
	MOVE W,1(A)
	MOVEM W,1(C)
	TLNE B,1	; LINK
	JRST GETLNK
	LDB W,[150500,,B]
	MOVEM W,2(C)		;PACK #
	ADDI C,LFBLOC
NEXENT:	ADDI A,5
	JRST GETNM
OUTENT:	SETZM (C)		;ZERO ENTRY MEANS END OF DIRECTORY
	SETZM 1(C)
	MOVE A,DIRIDX
	ADDI A,FDIRBF
	MOVEI D,LFBLOC
	MOVEI N,0
	PUSHJ P,SORT
	MOVE A,DIRIDX
	ADDI A,FDIRBF
	MOVEI N,1		
	MOVE C,A
BLUP:	SKIPN B,(A)
	JRST OUTLUP
BLUP1:	ADDI C,LFBLOC
	CAMN B,(C)
	JRST BLUP1
	PUSHJ P,SORT		
	JRST BLUP
OUTLUP:	
NEXFLN:	MOVE A,DIRIDX
	SKIPN B,FDIRBF(A)
	POPJ P,		;NO MORE FILES
	MOVEM B,FN1
	MOVE B,FDIRBF+1(A)
	MOVEM B,FN2
	MOVE B,FDIRBF+2(A)
	MOVEM B,PACKN
	MOVE B,FDIRBF+3(A)
	MOVEM B,LNKNM1
	MOVE B,FDIRBF+4(A)
	MOVEM B,LNKNM2
	ADDI A,LFBLOC
	MOVEM A,DIRIDX
	SETZM LNKFLG
	HLRZ A,PACKN
	SKIPE A
	SETOM LNKFLG
POPJ1:	AOS (P)
CPOPJ:	POPJ P,

GETLNK:	LDB B,[UNDSCP+2(A)]	; GET FIRST BYTE INDEX
	PUSH P,B+1
	IDIVI B,UFDBYT
	ADDI B,FDIRBF+UDDESC
	MOVNI N,-6(C)
	IMULI N,6
	HRLI N,60200		;ASSUMING B=2 !!!
	ROT N,30.
	POP P,B+1
	PUSHJ P,GETLSL
	MOVEM W,2(C)	; SNAME
	PUSHJ P,GETLSL
	MOVEM W,3(C)	; LINK FN1
	PUSHJ P,GETLSL
	MOVEM W,4(C)
	ADDI C,LFBLOC
	JRST NEXENT

;GETLSL	GET LINK SYLABL. 6 BIT CHARACTERS. AT MOST 6 TO A WORD RETURNED IN W
;	NEXT CHARACTER QUOTED BY : DELIMITER IS ; OR ZERO CHARACTER
GETLSL:	PUSH P,A
	PUSH P,C
	PUSH P,D
	MOVEI D,6	;AT MOST 6 CHARACTERS
	MOVE C,[440600,,W]
	SETZM W
GETLS1:	ILDB A,N
	CAIN A,';	; END?
	JRST GETLS2
	CAIN A,':	; QUOTE NEXT CHAR
	ILDB A,N
	IDPB A,C	; STORE CHARACTER
	SOJG D,GETLS1
GETLS2:	POP P,D
	POP P,C
	POP P,A
	POPJ P,


START:	SKIPN MYNAME		;DON'T CHANGE IF NOT JUST LOADED
	.SUSET [.RSNAME,,MYNAME]
	.SUSET [.SSNAM,,MYNAME]
	.OPEN TYOC,[21,,(SIXBIT /TTY/)]
	.VALUE
	.SUSET [.SMASK,,[BIOCE+BTTYP]]	;ALLOW IOC INTERUPTS AND CHARACTER TYPED
	MOVEI P,PDL
	.CORE CORSIZ
	JRST .-1
	PUSHJ P,INMFD
	.OPEN TYIC,[SIXBIT /   TTY/(30)]		;CHANGE LOWER CASE TO UPPER CASE
	.VALUE
	.STATUS TYOC,A
	LDB A,[300,,A]
	MOVEM A,TTYTYP
	SOS TTYTYP		;0==> PAPER  1==> SCREEN
	PRINT _
	PUSHJ P,FORMF
	SIXTYP PRNAM1
	PRINT .
	SIXTYP PRNAM2
	PUSHJ P,CRR
	CONI 344,TAPEF
	PRINT TAPE
	MOVE A,TAPEF
	SETOM ITAPE
	TRZE A,100000
	JRST TREW
	PUSHJ P,TYOS
	PRINT NOT
	SETZM ITAPE
TREW:	PUSHJ P,TYOS
	PRINT REWOUND_

RET:MLP:	.CORE CORSIZ
	JRST .-1	;NO CORE
	SETZM EOTFLG
	SETZM USRDEL
IFN AI,[
	.SUSET [.SSNAM,,[SIXBIT /.TAPE0/]]
	.FDELE USRUFD
	JFCL
	.SUSET [.SSNAM,,[SIXBIT /.TAPE1/]]
	.FDELE USRUFD
	JFCL
]
IFE AI,[
	.SUSET [.SSNAM,,[SIXBIT /.TAPE./]]
	.FDELE USRUFD
	JFCL
]
	MOVEI P,PDL
	CLEARM LPTSW
	.CLOSE SAVET,
	.CLOSE LPTCH,
	.RESET MAGIN,		;ASSUMING MTAPE USES MAGIN AS ITS CHANNEL
	.CLOSE MAGIN,	;BEGINNING AND ERROR RESTART
	.CLOSE MAGOUT,
	SETZM MAGOPN
	SETZM LNKFLG
PROMPT:	PUSHJ P,CRR
	MOVEI A,"_
	PUSHJ P,TYO	;PROMPT THE LOSER
	PUSHJ P,TYI
	CAIN A,"?
	JRST AHELP
	PUSHJ P,GETSL1	;READ THE COMMAND
	JRST PROMPT
	JRST NOQ
NOQ:	CLEARM SUPERC
	CLEARM DMPMOD
	CLEARM CHKFLG
	MOVSI B,-NCOMS
	JUMPE SYM,RET
	CAME SYM,COMT(B)	;SEARCH THE COMMAND TABLE
	AOBJN B,.-1
	MOVEI C,0	;USED IN SOME COMMANDS AS DEFAULT
	JUMPL B,MLP1	;NOT REASONABLE COMMAND ?
ERR:	PRINT  ? 
	JRST MLP
FORMF:	SKIPG TTYTYP
	POPJ P,
	SETZM NLINES
	PASC [ASCIZ /C/]
	POPJ P,
;THE FOLLOWING ROUTINE READS IN AND ALPHABETIZES THE MASTER FILE
;DIRECTORY OF THE DISK USING THE ASSUMED NAME M.F.D. (FILE).
;THE DIRECTORY IS READ IN WITH BLOCK IMAGE MODE INPUT INTO MFDLST,
;AND IS ASSUMED TO BE COMPLETELY CONTAINED IN 2000 OCTAL LOCATIONS.
;THE FIRST ENTRY IS ASSUMED TO BE IN LOCATION MFDLST+N, WHERE N IS THE CONTENTS OF MFDLST+1.
;EVERY ENTRY IS ASSUMED TO TAKE TWO LOCATIONS WITH THE NAME TO BE ALPHABETIZED IN THE FIRST
;LOCATION OF THE TWO.
;  THE FINAL ALPHABETIZED LIST IS ONE WORD ENTRIES STARTING AT MFDLST.
MFDN:	SETOM APPENF
	AOS A,MFDIN
	MOVE A,MFDLST(A)
	JUMPE A,CPOPJ
	MOVEM A,USNM
	JRST POPJ1
INMFD:	MOVEI A,6		;BLOCK IMAGE
	HRLM A,MFO
	OPEN STATC,MFO
	JRST RET
	MOVE A,[-2000,,MFDLST]
	.IOT STATC,A
	MOVEI B,0
	MOVE A,MFDLST+1		;LOCATION OF FIRST ENTRY
NEXUFD:	SKIPN C,MFDLST(A)
	JRST GOON
	MOVEM C,MFDLST(B)
	ADDI B,1
GOON:	ADDI A,2
	CAIGE A,2000
	JRST NEXUFD
	SETZM MFDLST(B)
	MOVEI A,MFDLST
	MOVEI C,MFDLST(B)
	MOVEI N,0
	MOVEI D,1
;THIS ROUTINE SORTS A BLOCK OF CORE LOGICALLY (NOT ARITHMETICALLY)
;A POINTS TO FIRST ENTRY
;C POINTS TO LOCATION AFTER LAST ENTRY
;N HOLDS ADDRESS OF KEY WORD RELATIVE TO BEGINNING OF BLOCK
;D HOLDS NUMBER OF WORDS TO BE MOVED TOGETHER
;BORROWED FROM SYSENG;PRUFD >
SORT:	MOVSI B,(SETZ)

SORT1:	HRLM C,(P)	;SAVE UPPER BOUND
	MOVN W,D
	ADD W,C
	CAML A,W
	JRST SORT7	;ONE OR ZERO ENTRIES
	PUSH P,A	;SAVE LOWER BOUND
SORT3:	ADD A,N
	TDNN B,(A)	;BIT SET IN LOWER ENTRY?
	JRST SORT5	;NO, INCREMENT TO NEXT AND MAYBE TRY AGAIN
	SUB A,N
	SUB C,D
	ADD C,N
	TDNE B,(C)	;BIT CLEAR IN UPPER ENTRY?
	JRST SORT8	;NO, CHECK FOR END, DECREMENT C, AND TRY AGAIN
	SUB C,N
	IMUL D,[-1,,]		;MAKE AOBJN POINTER
SHUFFL:	ADDI A,(D)
	ADDI C,(D)
	MOVE W,(A)
	EXCH W,(C)
	MOVEM W,(A)
	SUBI A,(D)
	SUBI C,(D)
	AOBJN D,SHUFFL
SORT4:	ADD A,D	;INCREMENT LOWER BOUND POINTER TO NEXT ENTRY
SORT2:	CAME A,C	;ANY MORE ENTRIES LEFT?
	JRST SORT3	;YES, GO PROCESS THEM
		;A AND C NOW BOTH POINT TO FIRST ENTRY WITH BIT SET
	ROT B,-1	;ROTATE BIT INDICATOR TO NEXT (LESS SIGNIFICANT) BIT
	POP P,A		;RESTORE LOWER BOUND OF ENTIRE SORT
	JUMPL B,SORT6	;JUMP IF NO MORE KEY TO SORT ON
	PUSHJ P,SORT1	;SORT BOTTOM PART OF TABLE
	HLRZ C,(P)	;RESTORE UPPER BOUND (SORT1 CLOBBERED A TO MIDDLE)
	PUSHJ P,SORT1	;SORT TOP PART OF TABLE
SORT6:	ROT B,1		;BACK UP KEY AGAIN SO AS TOO "NOT CLOBBER B"
SORT7:	HLRZ A,(P)	;MAKE A POINT ABOVE TABLE ENTRIES SORTED
	POPJ P,
SORT5:	SUB A,N
	JRST SORT4
SORT8:	SUB C,N
	JRST SORT2

MLP1:	SKIPGE COMDTB(B)		;NOT ALL COMMANDS USE THE TAPE DRIVE
	PUSHJ P,SETIT
	PUSHJ P,@COMDTB(B)	;DO COMMAND
	JRST RET

TYI:	.IOT TYIC,A	;TTY IN
	CAIN A,^G
	JRST TYI
	CAIE A,15
	POPJ P,
	PUSHJ P,CAR
	MOVEI A,15
	POPJ P,

CRR:	MOVEI A,15	;RETURN CARRIAGE
CAR:	PUSHJ P,TYO
	MOVEI A,12
	JRST TYO
TYO:	SKIPGE LPTSW	;TTY/LPT/TPL OUT
	JRST LPTTYO
	PUSH P,A
	PUSH P,40
	PUSH P,UUOH
	MOVE A,NLINES
	SKIPLE TTYTYP
	CAIGE A,24.
	CAIA
	PUSHJ P,NPAGE
	POP P,UUOH
	POP P,40		;FOR RECURSIVE UUOS
	POP P,A
	CAIN A,12
	AOS NLINES		;FOR --MORE-- HACK
	.IOT TYOC,A
	POPJ P,
NPAGE:	SETZM NLINES
	PRINT --MORE--
	PUSHJ P,TYI
	JRST FORMF

LPTTYO:	.IOT LPTCH,A	;LPT/TPL OUT
	POPJ P,

TYOS:	PUSH P,A
	MOVEI A,40	;OUTPUT SPACE
	PUSHJ P,TYO
	JRST POPAJ

;THE FOLLOWING ROUTINE INPUTS A SYLLABLE.
;THE SYLLABLE ENDS UP AS SIXBIT IN SYM.
;IF IT IS COMPOSED OF DIGITS, THEY ARE COMPILED INTO A DECIMAL NUMBER
;AND STORED IN N.
;CARRIAGE RETURN, LINEFEED, SEMI-COLON, COLON, BACKARROW, AND ALTMODE END THE
;SYLLABLE BUT ARE NOT PART OF IT. THE TERMINATOR IS PUT IN TER.
;NON-SIXBIT CHARACTERS CAUSE GETSYL TO PRINT ?? AND WAIT FOR THE
;ENTIRE SYLLABLE AGAIN.  SINGLE CHARACTER RUBOUT WORKS,
;BUT IF YOU RUBOUT BEYOND THE FIRST CHARACTER, GETSYL RETURNS WITHOUT
;SKIPPING.  SUCCESSFUL RETURN IS A SKIP RETURN.  ^Q MAY BE USED TO ENTER
;A TERMINATOR AS SIXBIT SUCH AS SEMI-COLON, OR COLON.
;RUBBED OUT CHARACTERS ARE ECHOED.
GETSYL:	SETZB N,SYM
	MOVE B,[440600,,SYM]
GETCH:	PUSHJ P,TYI
SKCHAR:	CAIN A,177
	JRST RUBOUT
	CAIE A,"_		;BACK-ARROW
	CAIN A,33		;ALTMODE
	JRST OUTSYL
	CAIE A,15		;CARRIAGE RETURN
	CAIN 1,12		;LINEFEED
	JRST OUTSYL
	CAIE A,";		;SEMI-COLON
	CAIN A,":		;COLON
	JRST OUTSYL
	CAIN A,40		;SPACE
	JRST OUTSYL
	CAIN A,^Q
	JRST QUOTE
NUMQ:	CAIGE A,40
	JRST CHERR
	CAIL A,"0
	CAILE A,"9
	JRST NONUM
	IMULI N,10.
	ADDI N,-"0(A)
NONUM:	SUBI A,40
	TLNE B,770000
	IDPB A,B
	JRST GETCH
QUOTE:	PUSHJ P,TYI
	CAIE A,177
	JRST NUMQ
	MOVEI A,"^
	PUSHJ P,TYO
	MOVEI A,"Q
	PUSHJ P,TYO
	JRST GETCH
RUBOUT:	CAMN B,[440600,,SYM]
	JRST RUB1
	LDB A,B
	ADDI A,40
	PUSHJ P,TYO
	CAIL A,"0
	CAILE A,"9
	JRST NOUNM
	SUBI N,-"0(A)
	PUSH P,SYM
	IDIVI N,10.
	POP P,SYM		;DIVISION CLOBBERS SYM
NOUNM:	SETZ A,
	DPB A,B
	ADD B,[60000,,]
	JRST GETCH
RUB1:	PRINT ??
	PUSHJ P,TYOS
	POPJ P,
CHERR:	PRINT ??
	PUSHJ P,TYOS
	JRST GETSYL
OUTSYL:	MOVEM A,TER
	JRST POPJ1
AHELP:	MOVSI D,-NCOMS	;LIST COMMANDS
	PUSHJ P,CRR
HELP1:	PSIS COMT(D)
	PUSHJ P,CRR
	AOBJN D,HELP1
	JRST MLP
GETSL1:	SETZB N,SYM
	MOVE B,[440600,,SYM]
	JRST SKCHAR

;COMMAND LOOK-UP TABLES

COMT:	SIXBIT /TAPED/	;GENERATE TAPE DIRECTORY FROM MOUNTED TAPE
	SIXBIT /FIND/	;FIND WHAT TAPE PARTICULAR FILE IS ON
	SIXBIT /DUMP/	;DUMP FILES
	SIXBIT /LOAD/	;LOAD FILES
	SIXBIT /CDUMP/	;CONTINUE FULL DUMP
	SIXBIT /REWIND/	;REWIND MAG TAPE
	SIXBIT /EOT/	;GO TO END OF TAPE
	SIXBIT /LIST/	;LIST FILES ON TAPE
	SIXBIT /MFD/	;LIST OUT MFD
	SIXBIT /LISTF/	;LIST OUT FILE DIRECTORY
	SIXBIT /HELP/	;TYPE OUT COMMANDS
	SIXBIT /SPACE/	;SPACE FORWARD N FILES
	SIXBIT /LSPACE/	;SPACE FORWARD AND LIST FILES
	SIXBIT /CHECK/	;CHECK FILES
	SIXBIT /LCHECK/	;CHECK FILES AND LIST THEM
	SIXBIT /TAPES/	;LIST ALL SAVED TAPE INFO
	SIXBIT /TAPE/	;LIST SAVED INFO ABOUT ONE TAPE
	SIXBIT /TAPSET/	;SET TAPE INFO FOR ONE TAPE
	SIXBIT /TLIST/	;LIST FILES ON A TAPE(AS STORED ON DISK)
NCOMS==.-COMT

COMDTB:	ATAPED		;SETZ COMMAND MEANS THAT COMMAND USES THE TAPE DRIVE
	AFIND
	SETZ DUMP
	SETZ LOAD
	SETZ ACDUMP
	ARWND
	AEOT
	SETZ ALIST
	AMFD
	ALISTF
	AHELP
	SETZ ASPACE
	SETZ ATPACE
	SETZ ACHECK
	SETZ ALCHEC
	ATAPES
	ATAPE
	TAPSET
	ATLIST

INT:	0		;INTERRUPT ROUTINE
	0
	PUSH P,A
	MOVE A,INT
	TRNE A,BTTYP
	JRST TYILK	;CHARACTER TYPED
	POP P,A
	MOVEM 17,INTAC+17
	MOVEI 17,INTAC
	BLT 17,INTAC+16	;SAVE ACS
	MOVE 17,INTAC+17
	MOVE A,INT
	TRNN A,BIOCE
	JRST RNDINT	;NOT TTY OR IOC
	.SUSET [.RAPRC,,A]
	LDB A,[330400,,A]
	CAIN A,MAGIN
	JRST INT1
	CAIN A,DSKIN
	JRST INT3
	CAIE A,MAGOUT	;NOT MACRO-TAPE INPUT
	JRST NTMGTP	;NOT MACRO TAPE OUTPUT EITHER !
	SKIPN DMPMOD
	JRST NTDMMP	;NOT DUMPING ON MACRO-TAPE
	.STATUS MAGOUT,A
	LDB A,[330600,,A]
	CAIE A,9
	JRST NTNDOF	;NOT END OF TAPE
	MOVEI A,FOOB	;AH ! I KNOW HOW TO HANDLE END OF TAPE !
	SKIPGE FULLDMP
	JRST INTX1	;CAUSE PROGRAM TO RESTART AT FOOB
	PRINT _PHYSICAL END OF TAPE
	.DISMISS [ERR]

RNDINT:	PRINT _INTERRUPT 
	POCT A
	.DISMIS [ERR]

NTMGTP:	PRINT _INTERRUPT ON CHANNEL
	POCT A
	PSIS CHNTAB(A)	;TYPE DEVICE AND DIRECTION
	.DISMIS [NAUGHT]

NTDMMP:	PRINT _INTERRUPT MAG TAPE OUT WHEN NOT DUMPING 
	.DISMIS [NAUGHT]

NTNDOF:	PRINT _INTERRUPT
	POCT A
	PRINT  MAG TAPE OUT
	.DISMIS [NAUGHT]

CHNTAB:	SIXBIT /RANDOM/
	SIXBIT /MFD IN/
	SIXBIT /DRC IN/
	SIXBIT /DSK IN/
	SIXBIT /MAGOUT/
	SIXBIT /TTY IN/
	SIXBIT /TTYOUT/
	SIXBIT /DSKOUT/
	SIXBIT /MAG IN/
	SIXBIT /LPTOUT/
	SIXBIT /ERR IN/
	SIXBIT /STATUS/
	SIXBIT /RANDOM/

INT3:	.STATUS DSKIN,A	;DISK INPUT  ERROR
	LDB A,[330600,,A]
	CAIN A,3
	JRST INT4
	PRINT INTERRUPT
	POCT A
	PRINT  DISK IN
	.DISMIS [NAUGHT]

INT4:	SKIPN SUPERC
	PRINT  DATA ERROR DISK IN_
	AOS ERRDSK
	SETOM ERRALL
	SOS C,INT+1
	TLZ C,-1
	POCT C		;PC OF LOSING INSTRUCTION
	MOVE A,[DSKIN,,INTERR]
	.RCHST A,
	MOVEI A,INTERR
	MOVE B,INTERR+3
	PUSHJ P,TELL
	HLLZ B,(C)		;SO RETRY WILL HAPPEN
	CAME B,[.IOT DSKIN,]
	CAMN B,[.CLOSE DSKIN,]
	JRST INTX
	CAMN B,[.OPEN DSKIN,]
	JRST INTX
	.VALUE
	AOS INT+1
	JRST INTX

TYILK:	MOVEI A,TYIC	;CHARACTER TYPED
	.ITYIC A,
	JRST POPEN
	CAIN A,^G
	.RESET TYOC,
	CAIN A,^G
	.DISMIS [ERR]	;DEATH TO CURRENT OPERATION
POPEN:	POP P,A
	.DISMIS INT+1

NAUGHT:	PUSHJ P,OPINFL
	JRST ERR

FOOB:	.CLOSE MAGOUT,	;CLOSE TAPE OUTPUT
	SETZM MAGOPN
	PUSHJ P,ARWND	;REWIND IT
	PUSHJ P,GESELL	;GIVE AWAY BEGINNING AND LAST USER ON THIS REEL
	.RESET TYIC,
FOOD:
IFE AI,[
	PUSH P,LPTSW
	SETZM LPTSW
]
	PRINT _MOUNT NEW TAPE THEN TYPE OK.  
IFE AI,POP P,LPTSW
	PUSHJ P,GETSYL
	JRST .-1
	MOVE A,SYM
	CAMN A,[SIXBIT /OK/]
	JRST FOOC
	CAMN A,[SIXBIT /STOP/]
	JRST MAYBE
	JRST FOOD
FOOC:	PUSHJ P,ARWND
	MOVE A,USNM
	MOVEM A,FUSNM
	AOS NTAPES
	CLEARM DMPNW1
	SETOM APPENF		;SO USER UFD WILL BE OPENED
	MOVEI A,DMPAGN	;RESTART LOCATION FOR NEXT REEL
INTX1:	MOVEM A,INT+1
INTX:	MOVSI 17,INTAC
	BLT 17,17	;RESTORE ACS
	.DISMIS INT+1

MAYBE:	PRINT  GIVE UP ?
	PUSHJ P,TYI
	CAIE A,"Y
	JRST FOOD
	JRST MLP	;HE REALLY WANTS TO STOP DUMPING NOW

GESELL:	SETOM SDONE
	MOVEI A,1
	SKIPE ARCHVF
	MOVEM A,SDONE
	PUSHJ P,SINFO
	PRINT  REEL 
	PDPT NTAPES	;OUTPUT REEL NUMBER AND USER SPAN ON THIS REEL
	PRINT  FIRST USER = 
	PSIS FUSNM
	PRINT  LAST USER = 
	PSIS LUSNM
	JRST CRR


INT1:	.STATUS MAGIN,A	;INTERUPT ON MAG TAPE INPUT
	LDB A,[330600,,A]
	CAIN A,3
	JRST INT2	;NON RECOV DATA ERR
	PRINT _INTERRUPT
	POCT A
	PRINT  MAG TAPE IN
	.DISMIS [NAUGHT]

INT2:	AOS ERRCNT
	SETOM ERRALL
	SOS A,INT+1	;SO WILL RETRY IO OPERATION
	SKIPE SUPERC
	JRST NOMESS
	HRRZS A		;WE DON'T CARE ABOUT PC FLAGS FOR NOW
	HRRZS A
	POCT A
	PUSHJ P,TYOS
	PRINT DATA ERROR TAPE IN_
	PUSHJ P,OPINFL
NOMESS:	HLLZ B,(A)	;GET OP CODE OF FAILING INSTRUCTION
	CAME B,[.IOT MAGIN,]
	CAMN B,[.CLOSE MAGIN,]
	JRST INTX	;WELL ... I SUPPOSE
	CAMN B,[.OPEN MAGIN,]
	JRST INTX	;YECH ...
	.VALUE
	AOS INT+1
	JRST INTX

ACDUMP:	SETOM CDMFL	;CONTINUE FULL DUMP
	SKIPA
DUMP:	CLEARM CDMFL
	SETOM DMPMOD	;GENERALISED DUMP
	SKIPA
LOAD:	CLEARM DMPMOD	;GENERALISED LOAD
	MOVSI A,-NFIGS
	CLEARM @FIGTB2(A)
	AOBJN A,.-1
	CLEARM MICFLG
	CLEARM CUSN
	SETOM DPACK
	MOVEI A,1
	MOVEM A,THTYPE
	CAIN TER,15
	JRST EXECU		;NO SWITCHES FORTH COMING
LOOP:	PUSHJ P,GETSYL
	POPJ P,
	CAIE TER,15
	JUMPE SYM,LOOP

	PUSHJ P,SPACET
	CAIN TER,15
	JRST EXECU
	JRST LOOP

SPACET:	JUMPE SYM,CPOPJ
	MOVSI A,-NFIGS
	CAMN SYM,FIGTB1(A)
	JRST SPASED
	AOBJN A,.-2
	SUB P,[1,,1]
	PRINT  ? 
	PSIS SYM
	PUSHJ P,TYOS
	PRINT IGNORED
	PUSHJ P,TYOS
	JRST LOOP


SPASED:	SETOM @FIGTB2(A)
	POPJ P,


FIGTB1:	SIXBIT /INCREM/
	SIXBIT /I/
	SIXBIT /MERGE/
	SIXBIT /M/
	SIXBIT /FULL/
	SIXBIT /F/
	SIXBIT /CARE/
	SIXBIT /C/
	SIXBIT /EXPERI/
	SIXBIT /E/
	SIXBIT /LIST/
	SIXBIT /L/
	SIXBIT /DECIDE/
	SIXBIT /D/
	SIXBIT /ARCHIV/
	SIXBIT /A/
NFIGS==.-FIGTB1

FIGTB2:	DMPNWF
	DMPNWF
	MRGSW
	MRGSW
	FULLDMP
	FULLDMP
	CAREF
	CAREF
	EXPERM
	EXPERM
	LSTWHL
	LSTWHL
	DECIDF
	DECIDF
	ARCHVF
	ARCHVF



EXECU:	IFN AI,	MTAPE 4		;BEGINNING OF CURRENT FILE
IFE AI,[
	PUSHJ P,SPRF
	CONSO 344,100000	;BOT
	PUSHJ P,SPFF	; GET TO BEGINNING OF FILE
]
	SKIPGE CDMFL
	SETOM FULLDMP		;CDUMP IS A FULL ONE
	CLEARM PACKN		;DO THE DUMP OR LOAD
	SKIPE MICFLG
	CLEARM DMPNWF	;NO INCREMENTAL DUMPS FROM DEC-TAPE
	SETZM THTYPE		;DEFAULT TO RANDOM
	SKIPGE FULLDMP
	AOS THTYPE
	SKIPGE DMPNWF
	SOS THTYPE
	SKIPGE A,DMPNWF
	SETOM FULLDMP		;AN INCREMENTAL DUMP IS ALWAYS A FULL ONE
	MOVEM A,DMPNW1
	SKIPGE DMPMOD
	SKIPL FULLDMP
	PUSHJ P,FILGET	;GET FILE NAMES OF FILES TO DUMP AR LOAD
	SKIPE LSTWHL
	PUSHJ P,DEVGET	;GET LISTING DEVICE
	.SUSET [.SSNAME,,USNM]
	SKIPN DMPMOD
	JRST ART1
	SKIPL CDMFL
	SKIPE ITAPE
	CAIA
	CLEARM NTAPES	;COMMAND WAS DUMP ONLY DO THIS IF NOT CDUMP AND TAPE IS REWOUND
	SETOM MFDIN
	SETOM FLNI
	SKIPE CDMFL
	JRST EXECU1
	SKIPL FULLDMP
	JRST ADUMP2	;SINGLE FILE DUMP
	JRST ADMP1	;ALL

CONSTA
EXECU2:		PRINT _MAY I REWIND AND RESTART THIS REEL ??
	PUSHJ P,CHECK2
	PUSHJ P,ARWND
	PRINT ON THE LAST REEL_
EXECU1:	SKIPGE ITAPE		;REWOUND ???
	JRST SETFNG		;YES
	PUSHJ P,TAPEMB
	PUSHJ P,SNPLAC
	MOVEI A,6
	HRLM A,NSVOP
	OPEN SAVET,NSVOP
	JRST EXECU2
	PUSHJ P,ACCESS
	SUBI B,LHBLK-1		;ACCESS TO WORD TELLING LAST USER DUMPED
	.ACCESS SAVET,B
	HRROI A,USNM
	.IOT SAVET,A		;GET NAME OF LAST DIRECTORY DUMPED
LOOKSM:	IFN AI,MTAPE 2		;BEGINNING OF PREVIOUS FILE
	IFE AI,[
	PUSHJ P,SPRF
	PUSHJ P,SPRF
	CONSO 344,100000
	PUSHJ P,SPFF
]
	PUSHJ P,SETIT
	SKIPGE ITAPE		;DID WE BACK UP TO BEGINING OF TAPE ???
	JRST SETFNG		;YES
	PUSHJ P,MAGOP		;READ HEADER FOR DIRECTORY NAME
	.VALUE		;EOT AFTER BACKSPACING ?????
	MOVE A,USNM
	CAME A,HSNM		;IS DIRECTORY NAME OF FILE ON TAPE THE SAME AS THE
;ONE WE ARE LOOKING FOR ???
	JRST LOOKSM		;NO
	PUSHJ P,ART3		;YES, FLUSH TO END OF THIS FILE(END OF LAST DIRECTORY
;DUMPED ON TAPE
	MOVE B,USNM
	JRST KSUSER
SETFNG:	PRINT WHAT WAS THE LAST DIRECTORY DUMPED ?
	PUSHJ P,GETSYL
	JRST SETFNG
	MOVE B,SYM
KSUSER:	PUSHJ P,MFDN
	DIE NO SUCH DIRECTORY
	CAME B,USNM
	JRST KSUSER
	JRST ADMP1
SETIT:	OPEN MAGIN,MAGI		;WAIT FOR ALL TAPE ACTIVITY TO STOP
	JRST RET		;BARF
	.CLOSE MAGIN,
	CONI 344,TAPEF		;READ MAG TAPE STATUS
	MOVE A,TAPEF
	TRZE A,100000		;IS TAPE REWOUND ?
	SETOM ITAPE		;YES
	POPJ P,


ADUMP2:	SETZM STYPE
	SETOM MFDIN
NXUFD:	PUSHJ P,MFDN		;GET SNAM INTO USNM
	JRST DUNG		;NO MORE SNAMES LEFT
	MOVN W,LENGTH
	HRLZS W		;MAKE AOBJN POINTER
SNMCHK:	SKIPN A,FMSNM(W)
	JRST UGLY		;ANY SNAME MATCHES, INVESTIGATE
	CAMN A,USNM
	JRST UGLY		;SOME SNAME MATCHES, INVESTIGATE
	AOBJN W,SNMCHK		;CONTINUE CHECKING
	JRST NXUFD		;NO MATCH POSSIBLE
UGLY:	MOVEI V,0
	SETOM GREATF		;FOR > AND < FILE HACKERY
	.SUSET [.SSNAM,,USNM]
	SETOM FLNI
NXFIL:	PUSHJ P,FNG
	JRST EODIRK		;NO MORE FILES IN THIS DIRECTORY
	MOVN W,LENGTH
	HRLZS W		;AOBJN
	MOVS A,FMDEV(W)
	HRLI A,6		;BLOCK IMAGE INPUT
	MOVEM A,TRNI
CMCON:	SKIPN D,FMSNM(W)
	JRST CMFN1
	CAME D,USNM
	JRST NXCOM
CMFN1:	SKIPN D,FMFN1(W)
	JRST CMFN2
	CAME D,[SIXBIT /</]
	CAMN D,[SIXBIT />/]
	CAIA
	JRST RCMFN1
	SKIPN LNKFLG
	MOVEM D,FN1
	SETZM GREATF
	JRST CMFN2
EODIRK:	PUSHJ P,FILAPP
	SKIPGE APPENF		;ANY FILES DUMPED FOR THIS USER ???
	JRST NXUFD
EODIR3:	MOVN W,LENGTH		;YES, MAYBE REMOVE SOME SPECS
	HRLZS W
EODIR2:	SKIPN A,FMSNM(W)
	JRST EODIR1		;DON'T REMOVE "*;" SPECS
	CAMN A,USNM		;IS THIS ENTRY ONE FOR USER JUST DUMPED ?
	JRST REMOVE		;YES
EODIR1:	AOBJN W,EODIR2		;NO
	JRST NXUFD
REMOVE:	SKIPN FMDUMP(W)
	JRST EODIR1		;DON'T REMOVE SPEC IF NOTHING EVER MATCHED IT
	PUSHJ P,FLUSH		;DELETE SPEC
	POPJ P,		;NO MORE SPECS LEFT
	ADD W,[1,,]
	JRST EODIR2
RCMFN1:	CAME D,FN1
	JRST NXCOM
CMFN2:	SKIPE D,FMFN2(W)
	CAMN D,FN2
	JRST DUMPIT
	CAME D,[SIXBIT /</]
	CAMN D,[SIXBIT />/]
	CAIA
	JRST NXCOM
	SKIPN LNKFLG		;'>' AND '<' FILES DON'T GET OPENED FOR LINKS
	MOVEM D,FN2
	SETZM GREATF		;WE FOUND A < OR >
	JRST DUMPIT
NXCOM:	AOBJN W,CMCON
	JRST NXFIL
DUMPIT:	SKIPE LNKFLG
	JRST AWRITE
	.SUSET [.SSNAM,,USNM]
	OPEN DSKIN,TRNI
	JRST NXCOM		;JUST CONTINUE
	MOVE A,[DSKIN,,TRNI]
	PUSH P,TRNI
	.RCHST A,
	POP P,TRNI
	MOVEI A,0
	MOVE B,FN1
	MOVE C,FN2
LOOP69:	CAML A,V
	JRST APPEND
	CAME B,BIF(A)
	JRST LUP691
	CAMN C,BIF+1(A)
	JRST EODIR3
LUP691:	ADDI A,2
	JRST LOOP69
APPEND:	MOVEM B,BIF(A)
	MOVEM C,BIF+1(A)
	ADDI V,2
AWRITE:	PUSHJ P,ADMP3
	SETOM FMDUMP(W)		;MARK THIS ARG AS HAVING BEEN SATISFIED AT LEAST ONCE
	SKIPN FMSNM(W)
	JRST NXCOM		;DON'T DELETE ENTRY IF ANY "*" IN IT
	SKIPE FMFN1(W)
	SKIPN FMFN2(W)
	JRST NXCOM
	PUSHJ P,FLUSH
	POPJ P,
	ADD W,[1,,]
	SOJA W,NXCOM
DUNG:	MOVN W,LENGTH
	HRLZS W
REMOV2:	SKIPN A,FMSNM(W)
	JRST REMOV1		;"*;"
REMOV3:	AOBJN W,REMOV2
	PRINT _NOT DUMPED:_
NOREM1:	IRP X,,[SNM,FN1,FN2]
	SKIPN A,FM!X(W)
	MOVSI A,(SIXBIT /*/)
	PSIS A
	IFSE X,SNM,[PASC [ASCIZ /;/]]
TERMIN
	PUSHJ P,CRR
	AOBJN W,NOREM1
	POPJ P,
REMOV1:	SKIPL FMDUMP(W)		;WAS ANYTHING DUMPED FOR THIS SPEC ??
	JRST REMOV3		;NO	PUSHJ P,FLUSH
	POPJ P,
	ADD W,[1,,]
	JRST REMOV2

ADMP1:	PUSHJ P,MFDN	;READ A LOSER NAME FROM M.F.D.
	JRST RAT	;DONE
	SKIPE LSTWHL	;LIST ?
	PUSHJ P,LDMUT1
ADMPL1:	MOVE A,USNM
	SKIPGE ITAPE
	MOVEM A,FUSNM	;FIRST LOSER DUMPED
	.SUSET [.SSNAM,,A]		;SO FNG READS THE CORRECT DIRECTORY
	MOVE A,DMPNWF	;COPY INCREMENTAL FLAG
	MOVEM A,DMPNW1
DMPAGN:	SETOM FLNI	;RESTART ON NEW REEL
ADMP2:	SKIPN FULLDMP
	POPJ P,
	PUSHJ P,FNG	;READ ANOTHER FILE NAME
	JRST FULNMF	;NO MORE
	MOVE A,PACKN
	SKIPL DPACK	;RIGHT PACK ?
	CAMN A,DPACK
	JRST ADMP3
	JRST ADMP2	;NOT RIGHT PACK
FULNMF:	PUSHJ P,FILAPP
	JRST ADMP1

RAT:	PUSHJ P,GESELL
	JRST RET

LDMUT1:	PUSHJ P,TAPN
	PSIS USNM
IFE AI,[
	PUSH P,LPTSW
	SETZM LPTSW
	PSIS USNM
	PUSHJ P,CRR
	POP P,LPTSW
]
	JRST CRR
TAPN:	MOVE D,ITAPE
	AOS D
	PDPT D
	POPJ P,
ADMP3:	SKIPE LNKFLG
	JRST ADMP4
	OPEN DSKIN,TRNI	;OPEN DISK INPUT
	JRST ADMP2	;FILE DOESN'T SEEN TO EXIST AFTER ALL
ADMP4:	PUSHJ P,TAPEMB
	AOSE APPENF
	JRST ADMP5		;DON'T OPEN USER UFD
	PUSHJ P,SNPLAC
	MOVEI A,7
	HRLM A,USRUFD
	OPEN SAVET,USRUFD
	JRST RET
ADMP5:	.SUSET [.SSNAM,,USNM]		;SO .OPEN DSKIN, LOOKS ON THE CORRECT DIRECTORY
IFE AI,[
	SKIPE MAGOPN	; OPEN YET?
	JRST ADMP7	; YES
	SETOM MAGOPN
]
	OPEN MAGOUT,MAGO	;OPEN MAG TAPE OUTPUT
	JRST RET
ADMP7:	SETOM EOTFLG
	AOSE ITAPE	;BEGINNING OF TAPE ?
	JRST LP2A	;NO
	SETZM NSVTPN+1
	.SUSET [.SSNAM,,NPLACE]
	.FDELE NSVOP		;SO WE DON'T APPEND TO ANY OLD ONE
	JFCL
	.SUSET [.SSNAM,,USNM]
	PUSH P,LPTSW
	PUSHJ P,GINFO
	SKIPG SDONE
	JRST LP2B
	PRINT THAT'S AN ARCHIV TAPE.
	PUSHJ P,CHECK
LP2B:	POP P,LPTSW
	SETZM SDONE
	AOSE A,NTAPES		;IS THIS THE FIRST RUN FOR THIS LOADING ????
	SOS A,NTAPES		;NO.  WE WEREN'T SUPPOSED TO TOUCH NTAPES
	HRRM A,THTPN	;REEL NUMBER IN CURRENT DUMP
	PUSHJ P,SINFO
	.RDATE A,
	MOVEM A,THDATE
	.SUSET [.RSNAM,,I]
	.SUSET [.SSNAM,,I]
	MOVE A,[-LTHBLK,,THBLK]
	.IOT SAVET,A
	MOVE A,[-1,,[-LHBLK+1,,0]]
	.IOT SAVET,A
	MOVE A,[-LTHBLK,,THBLK]	;OUTPUT TAPE-HEADER
	.IOT MAGOUT,A
LP2A:	MOVE A,USNM
	MOVEM A,HSNM
	MOVE A,FN1
	MOVEM A,HFN1
	MOVE A,FN2
	MOVEM A,HFN2
	MOVE A,PACKN
	MOVEM A,HPKN
	SKIPE LNKFLG
	JRST LP3A
	.CALL RDATE
	SETOM FDATE
	MOVE A,FDATE
	MOVEM A,HDATE
LP3A:	MOVE A,[-LHBLK,,HBLK]
	.IOT MAGOUT,A
	MOVE A,[-LHBLK+1,,HBLK+1]	;OUTPUT FILE-HEADER
	.IOT SAVET,A
	SKIPE LSTWHL
	PUSHJ P,LOUSY
	JFCL
	SKIPE LNKFLG
	JRST LP4A
LP:	MOVE A,[-LBUF,,BUF]	;OUTPUT FILE
	.IOT DSKIN,A
	HRLOI B,-BUF-1(A)
	EQVI B,BUF
	SKIPGE A
	.CLOSE DSKIN,
	JUMPGE B,LP1
	.IOT MAGOUT,B
	JUMPGE A,LP	;MORE TO DO ?
LP1:	SKIPN MICFLG
	SKIPE EXPERM
	JRST LP1A
	OPEN DSKIN,TRNI	;RE OPEN SINCE CLOSED BY EOF
	JRST LP1A
	MOVE A,[400000,,DSKIN]
	.DMPCH A,	;SET DUMP CHARACTER SO WONT BE INCREMENTALLY DUMPED AGAIN
	.CLOSE DSKIN,
LP1A:IFN AI,	.CLOSE MAGOUT,
IFE AI,	PUSHJ P,AEOF
	MOVE A,USNM
	MOVEM A,LUSNM	;LAST LOSER DUMPED
	JRST ADMP2


LDMUT2:	PUSHJ P,TAPN
	PSIS FN1
	PSIS FN2
	PUSH P,A
	HLRZ A,PACKN
	SKIPE A
	PUSHJ P,LDMUT5	; LINK
	SKIPN A
	PDPT PACKN
	POP P,A
	JRST CRR

LDMUT5:	PSIS [SIXBIT /L/]
	PSIS PACKN	; SYSNM
	PSIS LNKNM1
	PSIS LNKNM2
	POPJ P,
LP4A:	MOVE A,[-3,,LNKNM1]	;DUMP A LINK AS A 3 WORD FILE ;  LKNM1,LKNM2,SNAM
	.IOT MAGOUT,A
	JRST LP1A
;THE FOLLOWING ROUTINE GOBBLES INPUT LINES
;FROM THE TTY AND INTERPRETS THEM AS STANDARD MIDAS OR COPY INPUT
;LINES.  EX. TODEV:TOSNM;TOFN1 TOFN2_FMDEV:FMSNM;FMFN1 FMFN2(CR)
;THE ROUTINE KEEPS TYPING FILE= AND WAITS FOR ANOTHER LINE
;UNTIL AN ALTMODE A LONELY CR IS TYPED.  ALL THE TODEV'S  ARE STORED IN A LIST
;CALLED TODEV:.  ALL THE FMFN1'S ARE STORED ON A LIST CALLED FMFN1:
;ETC.  THERE ARE EIGHT LISTS IN ALL.  AN UNSPECIFIED ARGUMENT IN THE
;LINE IS GIVEN THE VALUE OF THE DEFAULT FOR
;THAT SPEC.  A SPECIFIED ARG BECOMES THE DEFAULT FOR THAT SPEC.
;IF THE _ IS OMMITTED, ALL ARGS ARE FM ARGS.
;INITIAL DEFAULT FOR FM NAMES IS DSK:<MSNAME>;* *
;THE ROUTINE EXITS IF THE LAST INPUT LINE OF FM NAMES
;EVALUATES TO *;* *
;TO NAMES UNSPECIFIED IN A LINE ARE SET
;TO FM NAMES OF THE SAME CORRESPONDING TYPE(DEV,SNM,FN1,FN2)
FILGET:	MOVSI D,-LLIST		;NUMBER OF ENTRIES ALLOWED
	SETZM FMDUMP(D)
	AOBJN D,.-1
	MOVSI D,-LLIST
	CAIA
ONEFIL:	MOVSI D,-1	;ENTRY FOR ONLY ONE SPEC TO BE READ
	MOVSI X,(SIXBIT /DSK/)		;DEFAULT FOR DEV
	MOVE U,MYNAME		;DEFAULT FOR SNAME
	MOVE V,[SIXBIT /*/]		;FIRST FILE NAME DEFAULT
	MOVE W,V		;SECOND FILE NAME DEFAULT
	IRP X,,[TO,FM]
	IRP Y,,[DEV,SNM,FN1,FN2]
	SETZM !X!!Y
	MOVE A,[!X!!Y,,!X!!Y+1]
	BLT A,!X!!Y+LLIST-1
TERMIN
TERMIN
TRAGEN:	PRINT FILE=
	SETZM TINDEV
	MOVE A,[TINDEV,,TINSNM]
	BLT A,TINFN2		;SO UNSPECIFIEDS WILL BE 0
	SETOM BARROW		;SAYS NO BACK-ARROW TYPED YET
	PUSHJ P,TYI
	CAIE A,33
	CAIN A,15
	JRST TIDONE		;LONELY CR
	PUSHJ P,GETSL1		;READ A SYLLABLE BUT FIRST CHARACTER ALREADY READ
	JRST TRAGEN		;ENTIRE SYLLABLE RUBBED OUT
	JRST OVER
TGET:	PUSHJ P,GETSYL
	JRST TRAGEN
OVER:	CAIN TER,":
	JRST TDEV
	CAIN TER,";
	JRST TSNM
	CAIN TER,40
	JUMPE SYM,TGET
	CAIE TER,33
	CAIN TER,15
	JUMPE SYM,ENDLIN
	CAIN TER,"_
	JUMPE SYM,BASET
	SKIPN TINFN1
	JRST TFN1
	SKIPE TINFN2
	MOVEI TER,40		;MORE THAN TWO FILE NAMES
	SKIPE TINFN2
	JRST TOMANY
	MOVEM SYM,TINFN2
TFNC:	CAIN TER,40
	JRST TGET
	CAIN TER,"_
	JRST BASET
ENDLIN:	AOS BARROW		;NO BACKARROW IMPLIES ONLY FM NAMES
	AOS BARROW
	PUSHJ P,DACIT
IRP X,,[DEV,SNM,FN1,FN2]
	SKIPN A,TO!X(D)
	JRST Z!X
	CAME A,[SIXBIT /*/]
	JRST NZ!X
Z!X:	MOVE A,FM!X(D)
	MOVEM A,TO!X(D)
NZ!X:
TERMIN
	AOBJN D,.+1
	MOVEI A,0
	CAMN A,TYNSNM
	CAME A,TYNFN1
	JRST NOCOM
	CAMN A,TYNFN2
	JRST TIDONE		;CAN'T ASK FOR MORE THAN THE UNIVERSE !
NOCOM:	CAIN TER,33
	JRST TIDONE	;ALTMODE MEANS NO MORE LINES TO BE TYPED
	JUMPL D,TRAGEN
	JRST NOMORE
BASET:	PUSHJ P,DACIT
	AOSE BARROW
	JRST TOMANY
	SETZM TINDEV
	MOVE A,[TINDEV,,TINSNM]
	SETZM TINDEV
	BLT A,TINFN2
	JRST TGET
NOMORE:	CAIN D,1
	JRST TIDONE	; DON'T SAY FILE IF ONLY ONE LINE WAS ASKED FOR
	PRINT FILE=
	PUSHJ P,TYI
	CAIE A,15
	JRST TOOMCH
TIDONE:	HRRZM D,LENGTH
	SKIPN LENGTH
	JRST MLP		;NO ENTRIES
	JRST CRR
DACIT:	MOVSI B,-4
	MOVE A,[TINDEV,,TYNDEV]
	BLT A,TYNFN2
DEFINE INITFD AC,DES
	SKIPN E,TYN!DES
	MOVEM AC,TYN!DES		;SET UNSPECIFIED ARG TO DEFAULT
	CAIE E,0
	MOVE AC,E		;SET DEFAULT TO SPECIFIED ARG
	CAMN AC,[SIXBIT /*/]
	SETZM TYN!DES		;ASTERISKS MATCH TO ANYTHING
	CAME AC,[SIXBIT / */]
	JRST NOAST!AC
	MOVE E,[SIXBIT /*/]
	MOVEM E,TYN!DES		;SPACE * GETS CHANGED TO A REAL ASTERISK
NOAST!AC:
TERMIN
	SKIPG BARROW
	JRST ENDLUP
	IRP K,,[X,U,V,W]B,,[DEV,SNM,FN1,FN2]
	INITFD K,B
TERMIN
	MOVSI C,(SIXBIT /DSK/)
	SKIPE A,TYNDEV
	CAMN A,[SIXBIT /*/]
	MOVEM C,TYNDEV
ENDLUP:	MOVE A,TYNDEV(B)
	SKIPL BARROW
	PUSHJ P,FMLST
	SKIPGE BARROW
	PUSHJ P,TOLST
	AOBJN B,ENDLUP
	POPJ P,
TOOMCH:	PRINT _NO MORE ENTRIES ALLOWED.
QUES:	PRINT SHALL I CONTINUE?
	.RESET TYIC,
	PUSHJ P,TYI
	CAIN A,"Y
	JRST TIDONE
	CAIN A,"N
	JRST MLP
	PRINT _TYPE Y FOR YES OR N FOR QUIT._
	JRST QUES
IRP X,,[TO,FM]
X!LST:	MOVEI C,LLIST
	IMULI C,(B)
	ADDI C,X!DEV(D)
	MOVEM A,(C)
	POPJ P,
TERMIN
IRP X,,[DEV,SNM]
T!X:	SKIPE TIN!X
	JRST TOMANY
	MOVEM SYM,TIN!X
	JRST TGET
TERMIN
TOMANY:	PRINT UNACCEPTABLE WITH
	CAIN TER,"_
	JRST NOTWO
	CAIE TER,":
	CAIN TER,";
	JRST NOTWO
	PUSHJ P,TYOS
	PRINT THREE FILE NAMES!
	MOVEI TER,0
	CAIA
NOTWO:	PUSHJ P,TYOS
	CAIE TER,":
	CAIN TER,";
	PRINT TWO
	CAIN TER,"_
	PRINT TWO
	CAIE TER,0
	PUSHJ P,TYOS
	CAIN TER,";
	PRINT SNAMES!
	CAIN TER,":
	PRINT DEVICES!
	CAIN TER,"_
	PRINT BACKARROWS!
	PUSHJ P,CRR
	JRST TRAGEN
TFN1:	MOVEM SYM,TINFN1
	JRST TFNC
AFIND:	PUSHJ P,FILGET		;WHAT SHOULD I FIND ??
	PUSHJ P,DEVGET
	MOVEI B,6
	HRLM B,TRNI
	MOVSI V,-2		;ONCE FOR EACH TAPE DIRECTORY ON DISK
FLOOP:	SETOM FLNI		;SO FNG WILL OPEN
IFN AI,	MOVE B,[SIXBIT /.TAPE0.TAPE1/](V)
IFE AI,	MOVE B,[SIXBIT /.TAPE..TAPE./](V)
	.SUSET [.SSNAM,,B]
NEXFIL:	PUSHJ P,FNG
	JRST NEXDIR
	OPEN DSKIN,TRNI		;OPEN TAPE DIRECTORY
	JRST RET
	SETOM EOFF
	MOVEI B,0		;SO THAT GWÄ WILL .IOT IMMEDIATELY THE FIRST TIME THROUGH
	JSR GWD
	MOVE C,A
	JSR GWD
	AOBJN C,.-1		;SKIP TAPE HEADER
	MOVE C,A
COMPR:	IRP X,,[SNAM,FF1,FF2]
	JSR GWD
	MOVEM A,P!X
TERMIN
	ADD C,[3,,3]		;WE JUST READ THREE WORDS
	MOVE W,LENGTH
	IMUL W,[-1,,]
COMCON:	SKIPN D,FMSNM(W)
	JRST COMFN1		;ZERO MATCHES TO ANYTHING
	CAME D,PSNAM
	JRST NEXCOM		;NO MATCH
COMFN1:	SKIPN D,FMFN1(W)
	JRST COMFN2
	CAME D,PFF1
	JRST NEXCOM
COMFN2:	SKIPE D,FMFN2(W)
	CAMN D,PFF2
	JRST MATCH
NEXCOM:	AOBJN W,COMCON
NEXNAM:	JUMPGE C,INITC		;ALREADY CORRECT PLACE
	JSR GWD
	AOBJN C,.-1		;GET TO BEGINNING OF NEXT ENTRY
INITC:	IMUL C,[-1,,]
	JRST COMPR
NEXDIR:IFN AI,	AOBJN V,FLOOP
	JRST CRR
MATCH:	JSR GWD		;IGNORE PACK #
	JSR GWD		;READ DATE AND TIME
	PUSH P,B
	MOVEM A,DAYTIM
	ADD C,[2,,2]
	PUSHJ P,CRR
	PSIS FN1
	PSIS FN2
	PSIS PSNAM
	PSIS PFF1
	PSIS PFF2
	PASC [ASCIZ / /]
	PUSHJ P,PFDATE
	POP P,B
	JRST NEXNAM
DDPA:	CAIGE A,10.		;SHOULD WE PRINT A '0' AS IN 4:07?
	PRINT 0
	PUSH P,B
	PUSHJ P,DECPNT
	POP P,B
	POPJ P,
DECPNT:	IDIVI A,10.		;PRINTS A AS A DECIMAL NUMBER, CLOBBERING A AND B
	PUSH P,B
	CAIE A,0
	PUSHJ P,DECPNT
	POP P,A
	ADDI A,"0
	JRST TYO
PFDATE:	MOVE A,DAYTIM		;PRINTS CONTENTS OF DAYTIM AS FILE CREATION DATE AND TIME
	AOJE A,NODATE
	LDB A,[270400,,DAYTIM]		;CREATION DATE AND TIME
	PUSHJ P,DECPNT		;PRINT MONTH
	PASC [ASCIZ \/\]
	LDB A,[220500,,DAYTIM]
	PUSHJ P,DECPNT		;PRINT DAY
	PASC [ASCIZ \/7\]		;71 OR 72
	MOVE A,DAYTIM
	TLNE A,1000
	PASC [ASCIZ /1/]		;1971
	TLNN A,1000
	PASC [ASCIZ /2/]		;1972
	TLZ A,-1		;FLUSH DATE, LEAVE TIME
	PASC [ASCIZ / /]
	IDIVI A,60.*60.*2		;HALF SECONDS IN AN HOUR
	PUSHJ P,DDPA		;PRINT HOURS
	PRINT :
	MOVE A,B
	IDIVI A,60.*2		;HALF SECONDS IN A MINUTE
	PUSHJ P,DDPA		;PRINT MINUTES
	PRINT :
	MOVE A,B
	IDIVI A,2		;HALF SECONDS IN A SECOND
	PUSHJ P,DDPA		;PRINT SECONDS
	CAIE B,0
	PRINT .5
	POPJ P,
NODATE:	PRINT -
	POPJ P,
GWD:	0
GWD1:	MOVE A,(B)		;THIS ROUTINE READS ONE WORD, BUT ASSUMES BLOCK INPUT
	AOBJN B,[JRST @GWD]		;NO NEED TO READ FROM DISK YET(MORE IN BUFFER)
	SKIPL EOFF
	JRST NEXFIL		;END OF FILE
	MOVE B,[-2000,,BUF]
	.IOT DSKIN,B
	SUBI B,BUF-1		;SO ONE WORD BUFFER WILL WIN
	MOVNS B
	HRLS B
	HRRI B,BUF
	CAME B,[-LBUF-1,,BUF]		;FULL BUFFER?
	AOS EOFF		;NO, MUST BE LAST BUFFER IN FILE
	JRST GWD1		;NOW GET THE WORD
AEOF:	IFE AI,[
	MOVEI A,5	; WRITE EOF,MAGOUT ASUMED OPEN
	MOVEM A,MTCMD
	MOVE A,[MAGOUT,,MTCMD]
	.MTAPE A,
	JRST NAUGHT
	POPJ P,
]

AEOT:	IFE AI,MOVEI A,10
IFN AI,[
	OPEN MAGIN,MAGI		;GO TO END OF TAPE DATA
	JRST RET
	HRROI A,B
	.IOT MAGIN,A
	JUMPL A,KNOMOR		;CAN'T READ ONE WORD, MUST BE EOT
	PUSHJ P,ART3		;FLUSH TO END OF FILE
	JRST AEOT
KNOMOR:
]
IFE AI,	PUSHJ P,TAPOPR
	SETOM EOTFLG
	CLEARM ITAPE
	POPJ P,

IFE AI,[
SPRF:	MOVE A,[-1,,7]	;SPACE REVERSE FILE
	JRST TAPOPR

SPFF:	MOVEI A,7	;SPACE FORWARD FILE
	JRST TAPOPR
]
ARWND:	IFE AI,	MOVEI A,1
IFN AI,[
	MTAPE	; REWIND THE TRANSPORT
]
IFE AI,	PUSHJ P,TAPOPR
	CLEARM EOTFLG
	SETOM ITAPE
	POPJ P,

IFE AI,[
TAPOPR:	OPEN MAGIN,MAGI
	JRST RET
	MOVEM A,MTCMD
	MOVE A,[MAGIN,,MTCMD]
	.MTAPE A,
	JRST NAUGHT
	.CLOSE MAGIN,
	POPJ P,
]

ATPLA:	HRRZ A,LPTO
	CAIN A,(SIXBIT /TPL/)
	JRST NAUGHT
	PRINT  CHANGED TO TPL_
	MOVEI SYM,(SIXBIT /TPL/)
	JRST SETOU1

DEVGET:	PRINT  LIST DEV =
SETOUT:	PUSHJ P,GETSYL	;READ DEVICE TO BE USED FOR LISTING STUFF ON
	JRST DEVGET
	HLRZS SYM
	CAIN SYM,(SIXBIT /TTY/)
	POPJ P,
SETOU1:	HRRM SYM,LPTO
	.SUSET [.SSNAM,,MYNAME]
	OPEN LPTCH,LPTO	;LIST FILES ON TAPE
	JRST ATPLA
	SETOM LPTSW	;SET LPT SWITCH ON
	POPJ P,

ATLIST:	PUSHJ P,DEVGET
	PUSHJ P,TAPGET
	MOVEI A,6
	HRLM A,NSVOP
	OPEN SAVET,NSVOP
	JRST RET
	SETZM ITAPE
	MOVE A,[-1,,B]
	.IOT SAVET,A
	ADD B,[1,,THBLK+1]
	.IOT SAVET,B
	PUSHJ P,PTHEAD
	MOVE A,[-1,,I]
	.IOT SAVET,A
	HRRI I,HBLK+1
ATLST1:	MOVE A,I
	.IOT SAVET,A
	JUMPL A,CPOPJ
	PUSHJ P,LOUSY
	JFCL
	AOS ITAPE
	JRST ATLST1

ALIST:	PUSHJ P,DEVGET	;LIST FILES ON MACRO-TAPE
	PUSHJ P,LAST
	POPJ P,
	JRST .-2

TAPGET:	PUSH P,LPTSW
TAPGT1:	SETZM LPTSW
	PRINT TAPE NO=
	PUSHJ P,GETSYL
	JRST TAPGT1
	JUMPL N,TAPGT1
	CAIL N,MAXTAP
	JRST TAPGT1
	POP P,LPTSW
	HRLM N,THTPN
	MOVEM SYM,NSVTPN
	IFE AI,[
	SKIPN LPTSW
	JRST SNPLAC
	PRINT TAPE NO =
	PDPT N
]
SNPLAC:	PUSH P,1
	PUSH P,2		;ODD TAPE #S ARE ON TAPE1, EVENS ON TAPE0;
	HLRZ 1,THTPN
	IDIVI 1,2
	ADDI 2,20
IFE AI,	MOVEI 2,16	;.TAPE. ONLY
	DPB 2,[600,,NPLACE]
	.SUSET [.SSNAM,,NPLACE]
	POP P,2
	POP P,1
	POPJ P,

SINFO:	IRPS X,,[THTPN THTYPE FUSNM LUSNM]Y,,[STAPEN STYPE SFUSNM SLUSNM]
	MOVE A,X
	MOVEM A,Y
TERMIN
	.RDATE A,
	MOVEM A,STDATE
SINFO1:	.SUSET [.RUNAME,,SUSER]
	.SUSET [.SSNAM,,SPLACE]
SINFO4:	MOVEI A,100007
	HRLM A,STATOP
	.OPEN STATC,STATOP
	JRST SINFO2
	.CALL CLBIT
	JFCL
	HLRZ A,STAPEN
	LSH A,4
	.ACCESS STATC,A
	MOVE A,[-20,,STAPST]
	.IOT STATC,A
	.CLOSE STATC,
	.SUSET [.SSNAM,,USNM]
	POPJ P,
SINFO2:	MOVEI A,7	; MACRO TAPES DOESN'T EXIST,CREATE IT
	HRLM A,STATOP
	OPEN STATC,STATOP
	JRST RET
	SETZM BUF
	MOVE A,[BUF,,BUF+1]
	BLT A,BUF+LBUF-1
	MOVEI B,MAXTAP
SINFO3:	MOVE A,[-20,,BUF]
	.IOT STATC,A
	SOJG B,SINFO3
	.CLOSE STATC,
	JRST SINFO4

GINFO:	MOVEI B,6
	HRLM B,STATOP
	.SUSET [.SSNAM,,SPLACE]
	.OPEN STATC,STATOP
	JRST GINFO1
	LSH N,4
	.ACCESS STATC,N
	MOVE A,[-20,,STAPST]
	.IOT STATC,A
	.CLOSE STATC,
GINFO2:	.SUSET [.SSNAM,,USNM]
	POPJ P,
GINFO1:	SETZM STAPST
	MOVE A,[STAPST,,STAPST+1]
	BLT A,STAPST+20-1
	JRST GINFO2

ATAPES:	PUSHJ P,DEVGET
	.SUSET [.SSNAM,,SPLACE]
	MOVEI A,6
	HRLM A,STATOP
	OPEN STATC,STATOP
	JRST RET
	MOVEI U,0
TAPES1:	MOVE A,[-20,,STAPST]
	.IOT STATC,A
	SKIPE STAPEN
	PUSHJ P,LINFO
	ADDI U,1
	CAIGE U,1040.
	JRST TAPES1
	.CLOSE STATC,
	JRST CRR

ATAPE:	PUSHJ P,TAPGET
	PUSHJ P,GINFO
	PUSHJ P,LINFO
	JRST CRR

LINFO:	HLRZ A,STAPEN
	JUMPE A,NOINFO
	PRINT TAPE NO 
	PDPT A
	PRINT  LAST WRITTEN 
	PSIS STDATE
	PUSHJ P,CRR
	SKIPN STYPE
	JRST LINFO1
	PRINT REEL 
	HRRZ A,STAPEN
	PDPT A
	SKIPG STYPE
	PRINT  OF INCREMENTAL DUMP
	SKIPL STYPE
	PRINT  OF FULL DUMP
	PUSHJ P,CRR
	PRINT FIRST USER=
	PSIS SFUSNM
	PRINT   LAST USER=
	PSIS SLUSNM
	PUSHJ P,CRR
LINFO1:	SKIPN SDONE
	PRINT ABORTION BY 
	SKIPLE SDONE
	PRINT ARCHIV MADE BY 
	SKIPGE SDONE
	PRINT DUMPED BY 
	PSIS SUSER
	PUSHJ P,CRR
	JRST CRR
NOINFO:	PRINT NO INFORMATION
	JRST CRR

ATAPED:	PUSHJ P,ARWND		;CREATE TAPE DIRECTORY ON DISK FROM MOUNTED TAPE
	PUSHJ P,MAGOP
	POPJ P,
	MOVEI A,6
	HRLM A,NSVOP
	.OPEN SAVET,NSVOP
	JRST NOEXIS
	PRINT _DIRECTORY ALREADY EXISTS._
	PUSHJ P,CHECK
NOEXIS:	MOVEI A,7
	HRLM A,NSVOP		;BLOCK IMAGE OUTPUT
	OPEN SAVET,NSVOP
	JRST RET
	MOVE A,[-LTHBLK,,THBLK]
	.IOT SAVET,A
	MOVE A,[-1,,[-LHBLK+1,,0]]
	.IOT SAVET,A
DLUP:	PUSHJ P,ART3
	PUSHJ P,MAGOP
	POPJ P,		;EOT
	MOVE A,[-LHBLK+1,,HBLK+1]
	.IOT SAVET,A		;FILE-HEADER
	JRST DLUP
TAPSET:	PUSHJ P,TAPGET
	MOVE U,N
	PUSHJ P,GINFO
	PUSHJ P,LINFO
	HRLM U,STAPEN
LWREQ:	PRINT LAST WRITTEN=
	PUSHJ P,GETSYL
	JRST LWREQ
	CAIN A,33
	JRST TAPST1
	SKIPE SYM
	MOVEM SYM,STDATE
	PRINT TYPE=
	PUSHJ P,TYI
	MOVEI C,1
	CAIN A,33
	JRST TAPST1
	CAIN A,"F
	MOVEM C,STYPE
	CAIN A,"R
	SETZM STYPE
	CAIN A,"I
	SETOM STYPE
	PRINT _ARCHIV?
	PUSHJ P,TYI
	CAIN A,"Y
	MOVEM C,SDONE
	CAIN A,"N
	SETOM SDONE
	SKIPN STYPE
	JRST TAPST1
RNFULU:	PRINT _REEL NO FIRST USER LAST USER 
BACK:	PUSHJ P,GETSYL
	JRST RNFULU
	CAIN A,33
	JRST TAPST1
	MOVEM SYM,W
	SKIPE SYM
	HRRM N,STAPEN
BACK1:	PUSHJ P,GETSYL
	JRST UNDO1
	CAIN A,33
	JRST TAPST1
	SKIPE SYM
	MOVEM SYM,SFUSNM
	PUSHJ P,GETSYL
	JRST UNDO2
	SKIPE SYM
	MOVEM SYM,SLUSNM
TAPST1:	PUSHJ P,CHECK
	JRST SINFO1
UNDO1:	PSIS W
	PUSHJ P,TYOS
	JRST BACK
UNDO2:	PSIS SYM
	PUSHJ P,TYOS
	JRST BACK1


FILAPP:	SKIPGE APPENF
	POPJ P,		;NOTHING WAS DUMPED FOR THIS USER
	MOVEI A,6
	HRLM A,USRUFD
	HRLM A,NSVOP
	.CLOSE SAVET,
	.SUSET [.SSNAM,,NPLACE]
	.OPEN SAVET,NSVOP
	JRST KARILY		;FIRST TIME THROUGH
	OPEN DSKIN,USRUFD
	JRST RET
	PUSHJ P,ACCESS
	MOVEI A,100007		;WRITE-OVER MODE
	HRLM A,NSVOP
	OPEN SAVET,NSVOP
	JRST RET
	.ACCESS SAVET,B		;WE'RE ABOUT TO APPEND "USER" UFD" ONTO "TAPE XXX"
FLY:	MOVE A,[-2000,,BUF]
	.IOT DSKIN,A
	MOVNI B,-BUF(A)		;SET UP POINTER FOR OUTPUT
	HRLI B,BUF
	MOVSS B
	.IOT SAVET,B
	JUMPGE A,FLY		;THIS PROBABLY ISN'T NECESSARY
	.CLOSE SAVET,
	.CLOSE DSKIN,		;NIETHER THIS
	POPJ P,
KARILY:	MOVE A,[NSVOP+1,,USRDEL]
	BLT A,USRDEL+1
	.FDELE USRUFD		;FIRST TIME, JUST RENAME THE FILE
	.VALUE
	POPJ P,
ACCESS:	MOVEI B,0		;ACCUMULATED ACCESS POINTER
MORCRF:	MOVE A,[-2000,,BUF]		;THIS ROUTINE ACCESSES TO THE END OF THE FILE
	.IOT SAVET,A		;THIS READING ONLY TO GET POINTER
	HLRE C,A
	ADDI B,2000(C)		;INCREMENT ACCESS POINTER
	JUMPGE A,MORCRF		;CONTINUE READING
	POPJ P,
TAPEMB:	SKIPGE ITAPE		;DETERMINE INTELLIGENTLY WHETHER OR NOT TO ASK FOR 
;TAPE AND REEL NUMBER
;AND ASK WHAT IS NECESSARY
	JRST ADMPK		;BEGINNING OF TAPE
	SKIPL THTPN
	JRST ADMP6		;WE ALREADY KNOW WHAT TAPE THIS IS
ADMPK:	PUSHJ P,TAPGET
	MOVEM SYM,NSVTPN
	SKIPGE CDMFL		;DON'T ASK REEL # FOR NOT CDUMP
	SKIPL NTAPES		;DON'T ASK REEL # IF YOU KNOW IT
	JRST ADMP6		;WE ALREADY KNOW WHAT REEL THIS IS
	PRINT REEL =
	PUSHJ P,GETSYL
	JRST .-2
	HRRM N,THTPN
	MOVEM N,NTAPES
ADMP6:	POPJ P,
LAST:	PUSHJ P,LOUSE
	POPJ P,
	PUSHJ P,ART3	;FLUSH REST OF FILE (PITY WE HAVE TO READ ALL THIS CRUFT)
	AOS (P)
	POPJ P,

LOUSE:	PUSHJ P,MAGOP	;OPEN TAPE AND READ HEADER
	JRST ENDMAG	;END OF TAPE
LOUSY:	PUSHJ P,CRR
	PUSHJ P,TAPN
	PSIS HSNM
	PSIS HFN1	;OUTPUT FILE NAME
	PSIS HFN2
	SKIPE LNKFLG
	PUSHJ P,LDMUT5
	SKIPE LNKFLG
	JRST NOPP
	SKIPL HPKN
	PDPT HPKN	;OUTPUT PACK NUMBER
NOPP:	SIXTYP [SIXBIT/ /]
	MOVE A,HDATE
	MOVEM A,DAYTIM
	SKIPN LNKFLG
	PUSHJ P,PFDATE
	AOS (P)
	POPJ P,

ENDMAG:	PRINT _ REEL = 
	HRRZ A,THTPN
	PDPT A	;OUTPUT REEL NUMBER
	JRST CRR

AMFD:	PUSHJ P,DEVGET	;LIST MFD
	SETOM MFDIN
AMFD1:	PUSHJ P,MFDN
	POPJ P,
	PSIS USNM
	PUSHJ P,CRR
	JRST AMFD1

ALISTF:	SETOM FLNI
	CLEARM MICFLG
	MOVEI A,(SIXBIT /DSK/)
	HRRM A,FNO
GETDIR:	PRINT DIRECTORY=
	PUSHJ P,GETSYL
	JRST GETDIR
	CAIN TER,15
	PUSHJ P,CRR
	CAIN TER,":
	HLRM SYM,FNO
	MOVEM SYM,USNM
	CAIE TER,":
	.SUSET [.SSNAM,,USNM]
	PUSHJ P,DEVGET	;LIST FILE DIRECTORY
ALISTK:	PUSHJ P,FNG
	JRST CRR
	PUSHJ P,CRR
	PSIS FN1
	PSIS FN2
	SKIPN MICFLG
	PDPT PACKN
	JRST ALISTK

ART6:	PUSHJ P,ART3	;FLUSH CURRENT FILE
ART1:	PUSHJ P,MAGOP	;OPEN TAPE-LOAD SINGLE FILE
	POPJ P,		;END OF TAPE
	SKIPE LSTWHL	;LIST ?
	PUSHJ P,LDMUT4
	MOVN W,LENGTH
	HRLZS W
COMCN2:	SKIPN D,FMSNM(W)
	JRST CM2FN1
	CAME D,HSNM
	JRST NEXCM2
CM2FN1:	SKIPN D,FMFN1(W)
	JRST CM2FN2
	CAME D,HFN1
	JRST NEXCM2
CM2FN2:	SKIPE D,FMFN2(W)
	CAMN D,HFN2
	JRST ALD1B
NEXCM2:	AOBJN W,COMCN2
	JRST ART6
ALD1B:	IRP X,,[FN1,FN2]
	SKIPE A,TO!X(W)
	MOVEM A,L!X
	MOVE A,H!X
	SKIPN TO!X(W)
	MOVEM A,L!X
TERMIN
	MOVEI A,(SIXBIT /DSK/)
	SKIPN TODEV(W)
	HRRM A,CPYO		;UNSPECIFIED DESTINATION FOR LOADS IS DISK
	SKIPE A,TODEV(W)
	HLRM A,CPYO		;SPECIFIED DESTINATION
	SKIPN A,TOSNM(W)
	MOVE A,HSNM		;UNSPECIFIED SNAME IS THE ONE READ FROM TAPE
	.SUSET [.SSNAM,,A]		;SET SNAME FOR MERGE TEST
	MOVEI A,6
	HRLM A,CPYO
	SKIPL MRGSW
	JRST ALD9
	.OPEN DSKOUT,CPYO
	JRST ALD3	;FILE DOESNT EXIST
	PUSHJ P,ART3	;FILE EXISTS, DONT FILE ON TOPE OF, FLUSH INPUT FILE
	JRST ART5

ALD3:	SKIPE LNKFLG
	JRST ALD4
	MOVEI A,7
	HRLM A,CPYO		;IMAGE BLOCK OUTPUT
	OPEN DSKOUT,CPYO
	JRST RET

	SKIPE LSTWHL
	PUSHJ P,LDMUT3
	MOVE A,HDATE
	MOVEM A,FDATE
	SKIPE A
	.CALL SDATE
	JFCL	;IT DOESN'T MATTER WEATHER YOU WIN OR LOSE, ITS HOW YOU PLAY THE GAME.
ART4:	MOVE A,[-LBUF,,BUF]
	.IOT MAGIN,A	;READ A BUFFER LOAD FULL
	HRLOI B,-BUF-1(A)
	EQVI B,BUF
	SKIPGE A
	PUSHJ P,ART3
	JUMPGE B,ART5
	.IOT DSKOUT,B	;OUTPUT IT TO DISK
	JUMPGE A,ART4
ART5:	.CLOSE DSKOUT,
	SKIPE FMSNM(W)
	SKIPN FMFN1(W)
	JRST ART1	;WAS "*"=> DON'T FLUSH ENTRY
	SKIPN FMFN2(W)
	JRST ART1
	PUSHJ P,FLUSH
	POPJ P,
	JRST ART1
FLUSH:	SOSN LENGTH	; FLUSH ENTRY OF FILE THAT WAS JUST DUMPED
	POPJ P,
	MOVE B,LENGTH
	SUBI B,1
	HRLI A,FMDUMP+1(W)
	HRRI A,FMDUMP(W)
	BLT A,FMDUMP(B)
	IRP X,,[FM,TO]
	IRP Y,,[DEV,SNM,FN1,FN2]
	HRLI A,!X!!Y+1(W)
	HRRI A,!X!!Y(W)
	BLT A,!X!!Y(B)
TERMIN
TERMIN
	JRST POPJ1

LDMUT4:	MOVE A,HSNM
	CAMN A,CUSN
	POPJ P,		;SAME NAME 
	PUSHJ P,TAPN
	MOVEM A,CUSN	;NEW NAME
	PSIS CUSN
	JRST CRR


LDMUT3:	PUSHJ P,TAPN
	PSIS HFN1
	PSIS HFN2
	SKIPE LNKFLG
	PUSHJ P,LDMUT5
	SKIPN LNKFLG
	PDPT HPKN
	JRST CRR

ALD4:	SKIPE LSTWHL	; FORM LINK
	PUSHJ P,LDMUT3
	MOVE A,HFN1
	MOVEM A,LNKBLK+1
	MOVE A,HFN2
	MOVEM A,LNKBLK+2
	.OPEN DSKOUT,LNKBLK
	JFCL
	JRST ART5

ALD9:	SKIPE CAREF	;NOT MERGING, DO WE NEED TO CARE ABOUT UNDUMPED FILES ?
	SKIPE MICFLG
	JRST ALD3
	.OPEN DSKOUT,CPYO
	JRST ALD3	;DOESNT EXIST
	MOVEI A,DSKOUT
	.DMPCH A,	;SEE IF DUMPED
	JUMPN A,ALD3	;YES WAS DUMPED
	PUSHJ P,ART3
	JRST ART5
ART3:	IFE AI,[
	PUSH P,A
	PUSH P,B
	MOVEI A,7
	MOVE B,[MAGIN,,A]
	.MTAPE B,	; SKIP TO EOF
	.VALUE
	.CLOSE MAGIN,
	POP P,B
	POP P,A
	POPJ P,
]
	MOVE A,[-LBUF,,BUF]
	.IOT MAGIN,A
	JUMPGE A,ART3
	.CLOSE MAGIN,
	POPJ P,


BDHD:	PRINT _BAD HEADER 
	MOVE A,[-3,,HSNM]
	.IOT MAGIN,A
	PSIS HSNM	;TRY TO  TYPE STUFF PAST LOSING HEADER
	PSIS HFN1
	PSIS HFN2
	PUSHJ P,CRR
	PUSHJ P,ART3	;FLUSH CURRENT FILE
	JRST MAGOP




CHECK:	PUSHJ P,CRR
	PRINT  ARE YOU SURE ? 
CHECK2:	PUSHJ P,TYI
	CAIE A,"Y
	JRST ERR
	JRST CRR


ATPACE:	PUSHJ P,CRR
	PUSHJ P,TYOS
ASPAC2:	PUSHJ P,LAST
	POPJ P,
	PUSHJ P,TYI
	CAIN A,177
	JRST ASPAC5
	JRST ASPAC2


ASPACE:	PUSHJ P,GETSYL	;SPACE N FILES FORWARD
	POPJ P,
	JUMPLE N,CPOPJ
ASPAC1:	PUSHJ P,MAGOP
	POPJ P,
	PUSHJ P,ART3	;FLUSH FILE
	SOJG N,ASPAC1
ASPAC5:	PUSHJ P,ART3
	POPJ P,

MAGOT:	PSIS CHNTAB+MAGIN
	PUSHJ P,OPINFL
	PUSHJ P,CRR
	MOVEI A,150.
	.SLEEP A,
MAGOP:	.OPEN MAGIN,MAGI	;OPEN MAG TAPE INPUT (READ HEADERS)
	JRST MAGOT		;WAIT FOR HIM TO MOUNT TAPE OR REWIND ???
	CLEARM ERRCNT	;RESET ERR COUNT FOR THIS FILE
	AOSE ITAPE
	JRST ART2
	SETZM THTYPE
	SETOM THDATE
	HRROI A,B
	.IOT MAGIN,A	;READ AOBJN WORD INTO B
	TRNE B,-1
	JSP D,BDHD	;BAD TAPE-HEADER - AOBJN WORD HAS NON-ZERO RIGHT HALF
	CAMGE B,[-LTHBLK,,]
	JSP D,BDHD	;BAD TAPE-HEADER - FIRST RECORD TOO LONG
	ADD B,[1,,THBLK+1]
	.IOT MAGIN,B	;READ REEL NUMBER
	PUSHJ P,PTHEAD
ART2:	HRROI A,B
	.IOT MAGIN,A	;READ ANOTHER WORD
	JUMPL A,EOTISH	;EOT
	TRNE B,-1
	JSP D,BDHD	;BAD FILE-HEADER - AOBJN WORD NON-ZERO RIGHT HALF
	CAMGE B,[-LHBLK,,]
	JSP D,BDHD	;BAD FILE-HEADER - RECORD TOO LONG
	ADD B,[1,,HBLK+1]
	.IOT MAGIN,B	;READ USER NAME, FILE NAMES AND PACK NUMBER
	SETZM LNKFLG
	HLRZ B,HPKN
	SKIPN B	; LINK?
	JRST POPJ1
	MOVE B,[-3,,LNKNM1]
	.IOT MAGIN,B
	SETOM LNKFLG
	AOS (P)
	POPJ P,
PTHEAD:	PRINT TAPE NO 
	HLRZ A,THTPN
	PDPT A
	MOVE C,[440600,,NSVTPN]
	PUSHJ P,SIXNUM
	PRINT  CREATION DATE 
	PSIS THDATE
	PUSHJ P,CRR
	SKIPN THTYPE
	POPJ P,
	PRINT REEL NO 
	HRRZ B,THTPN
	PDPT B
	SKIPGE THTYPE
	PRINT  OF INCREMENTAL DUMP
	PUSHJ P,SNPLAC
	SKIPLE THTYPE
	PRINT  OF FULL DUMP
	JRST CRR
SIXNUM:	IDIVI A,12		;CREATES SIXBIT FILE NAME FROM CONTENTS OF A
	PUSH P,B		;C INITIALLY SHOULD CONTAIN 440600,,LOC
	CAIE A,0
	PUSHJ P,SIXNUM
	POP P,A
	ADDI A,20
	IDPB A,C
	POPJ P,
EOTISH:	PRINT  E-O-T 
	SETOM EOTFLG
	.CLOSE MAGIN,
	POPJ P,

ALCHEC:	SETOM PNTALL
	SKIPA
ACHECK:	CLEARM PNTALL
	SETOM SUPERC	;SUPPRESS DATA ERROR COMMENTS
	CLEARM MICFLG
	SETOM CHKFLG
	.CORE CORSIZ+1
	JRST .-1
	PUSHJ P,DEVGET	;CRUDE FILE CHECKER
	CLEARM ALLWRD	;RESET TOTAL NUMBER OF WORDS FOR THIS REEL
	SKIPN MICFLG
	MOVEI A,(SIXBIT /DSK/)
	HRRM A,TRNI
ACHUCK:	PUSHJ P,MAGOP	;OPEN NEXT TAPE FILE
	JRST ACHIND		;END-OF-TAPE
	SKIPE LNKFLG
	JRST ACHUK1
	.SUSET [.SSNAME,,HSNM]
	MOVE A,HFN1
	MOVEM A,FN1
	MOVE A,HFN2
	MOVEM A,FN2
	CLEARM WRDCNT
	CLEARM LNTCNT
	CLEARM WRDONG
	CLEARM ERRALL
	CLEARM ERRCNT	;RESET # OF TAPE IOCS
	CLEARM ERRDSK	;RESET # OF DISK IOCS
	.OPEN DSKIN,TRNI
	JRST DSKOPL
	SETOM NEWCHR
	SKIPE MICFLG
	JRST ACHUF1
	MOVEI A,DSKIN
	.DMPCH A,
	MOVEM A,NEWCHR
ACHUF1:	MOVE A,[-LBUF,,BUF]
	.IOT DSKIN,A
	HRLOI B,-BUF-1(A)
	EQVI B,BUF	;AOBJN POINTER 1
	SKIPGE A
	.CLOSE DSKIN,
	MOVE C,[-LBUF,,BIF]
	.IOT MAGIN,C
	HRLOI D,-BIF-1(C)
	EQVI D,BIF	;AOBJN POINTER 2
	SKIPGE C
	PUSHJ P,ART3
	PUSHJ P,COMPAR	;COMPARE THE TWO BUFFERS
	HRRZI D,-BIF(C)
	ADDM D,WRDCNT
	SKIPL A
	JUMPGE C,ACHUF1	;MORE TO COME

	SKIPN PNTALL
	SKIPE ERRALL
	SKIPA
	JRST CHKT5
	PUSHJ P,LOUSZ
CHKT6:	PDPT WRDCNT
	PRINT  WORD
	SOSE WRDCNT
	PRINT S
	SKIPN WRDCNT
	PRINT  
CHKT5:	SKIPN WRDONG
	JRST CHKT4
	PDPT WRDONG
	PRINT  BAD WORD
	SOSE WRDONG
	PRINT S
	SKIPN WRDONG
	PRINT  
	PRINT  AT
	PDPT SAVAOB
	.CLOSE DSKIN,
CHKT4:	MOVE A,WRDCNT
	ADDM A,ALLWRD
	SKIPN V,LNTCNT
	JRST CHKT7
	MOVM W,V
	PDPT W
	SKIPL V
	PRINT  LONGER 
	SKIPG V
	PRINT  SHORTER
	PRINT  ON DISK
CHKT7:	SKIPN ERRCNT
	JRST CHKTA
	PDPT ERRCNT
	PRINT  *TAPE IOC
	SOSE ERRCNT
	PRINT S
	SKIPN ERRCNT
	PRINT  
	PRINT *
	CHKTA:	SKIPN ERRDSK
	JRST CHKTB
	PDPT ERRDSK
	PRINT  *DISK IOC
	SOSE ERRDSK
	PRINT S
	SKIPN ERRDSK
	PRINT  
	PRINT *
CHKTB:	SKIPN PNTALL
	SKIPE ERRALL
	PRINT  ! 
	JRST ACHUCK
ACHUK1:	PUSHJ P,LOUSY
	JFCL
	PUSHJ P,ART3
	JRST ACHUCK

LOUSZ:	PUSHJ P,LOUSY
	JFCL
	SKIPE MICFLG
	POPJ P,
	SKIPN NEWCHR
	PRINT  NEW 
	SKIPE NEWCHR
	PRINT      
	POPJ P,


DSKOPL:	PUSHJ P,LOUSY
	JFCL
	PUSHJ P,OPINFL
	SETOM ERRALL
	PUSHJ P,CHKT3	;FLUSH TAPE FILE
	JRST CHKT6

CHKT3:	MOVE C,[-LBUF,,BIF]
	.IOT MAGIN,C
	HRRZI D,-BIF(C)
	ADDM D,WRDCNT
	JUMPGE C,CHKT3
	PUSHJ P,ART3
	POPJ P,

ACHIND:	.CORE CORSIZ
	JRST .-1
	.CLOSE DSKIN,
	.CLOSE MAGIN,
	PRINT _ REEL =
	HRRZ A,THTPN
	PDPT A
	PRINT  HAS 
	PDPT ALLWRD
	PRINT  WORDS__
	POPJ P,

COMPAR:	MOVE U,B
	MOVE V,D
	MOVE W,U
	XOR W,V
	TLNE W,-1
	JRST DSKUNC
COMPA0:	JUMPGE U,CPOPJ
	JUMPGE V,CPOPJ
COMPA1:	MOVE W,(U)
	CAME W,(V)
	JRST WRNWRD
COMPA2:	AOBJN U,.+2
	POPJ P,
	AOBJN V,COMPA1
	POPJ P,

WRNWRD:	SKIPN WRDONG	;FIRST LOSSAGE ?
	PUSHJ P,WRNWR1
	AOS WRDONG
	JRST COMPA2

WRNWR1:	HRRZ W,U
	SUBI W,BUF
	ADD W,WRDCNT
	MOVEM W,SAVAOB
	POPJ P,

DSKUNC:	HLRES U
	HLRES V
	SUB V,U
	ADDM V,LNTCNT
	SETOM ERRALL
	MOVE U,B
	MOVE V,D
	JRST COMPA0

CONSTA
VARIAB

PATCH:
PAT:	BLOCK LPAT
PDL:	BLOCK LPDL
MFDLST:	BLOCK 1000	;MUST BE IN THIS ORDER
BUF:	BLOCK LBUF	;NORMAL BUFFER
FDIRBF:	BLOCK 2000+10		;FOR FNG+POSSIBLE OVERFLOW


BIF:	BLOCK LBUF	;COMPARE BUFFER

CORSIZ==<.+1777>_-10.
	END START

