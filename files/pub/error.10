BEGOF("ERROR")
COMMENT

                *** Variations at Different Sites ***

CALLEDITOR works only if compiler-editor linkages are available, and
is different at each site.

LOSERR is used at sites with a pre-April-74 SAIL lacking the
three-argument form of USERERR.

                                 ***

Pass One Error Handler, first done sans-SAIL by Rich Johnsson.
Whenever possible, PUB and SAIL errors are trapped by the procedure
REPORT.  However, SAIL requires that REPORT be a SIMPLE PROCEDURE, so
to avoid recursion, there are times that REPORT is disabled and
NREPORT or USERERR is used instead. Furthermore, before PUB
initiallization is complete, REPORT would not work, so EARLYWARNING
(which calls USERERR) is used for errors instead of the usual WARNN
(which calls REPORT).

WARN(SHORT, LONG) puts the error message LONG on the terminal.  IF
SHORT = "=", the same message is put in the right margin in
DEBUGmode., if SHORT = NULL, no message goes in the right margin.,
else, SHORT goes in the right margin.

Actually, WARN(SHORT,LONG) is a macro which expands to
WARNN(UNIQUEOWNINTEGERVARIABLE, SHORT, LONG) so that there is a place
to remember the occurrence of "Q" and "A" responses.

;

EXTERNAL INTEGER !ERRP! ;

PROCEDURES
PUBLIC SIMPLE PROCEDURE ERROR! ;$"#
BEGIN "ERROR!"
TES 8/20/74 INTERCEPT SAIL ERRORS ;
!ERRP! _ LOCATIONOFERROR _ LOCATION(REPORT) ;
COMMENT THE VARIABLE GETS AROUND A SAIL BUG FIXED BY RHT SEP 74;
END "ERROR!" ;
IFK CMUVER OR SAILVER THENK
RKJ:	6-25-74 Do your own USERERR;

PRIVATE PROCEDURE CALLEDITOR(STRING EDNAME) ;$"#
	BEGIN TES 8/20/74 ADDED SAIL CASES ;
	SAFE INTEGER ARRAY B[0:5];
	STRING FILE;
	INTEGER LINE,PAGE,F,E,P;
	FILE_INCHWL;
	IF FULSTR(FILE)
	    THEN LINE_PAGE_0
	    ELSE
		BEGIN "DEFAULTFILE"
		FILE_THISFILE;
		LINE_CVASC(SRCLINE) LOR 1;
		PAGE_CVD(SRCPAGE);
		END "DEFAULTFILE";
	B[0]_CVSIX("SYS");
	B[1]_CVSIX(EDNAME);
	B[2]_B[3]_B[4]_B[5]_0;
	F_CVFIL(FILE,E,P);
	START!CODE "RUNEDITOR"
	 MOVE '14,F; MOVE '13,E; MOVE '11,P; MOVE '16,PAGE; MOVE '15,LINE;
	 MOVE 1,B; HRLI 1,1;
	 IFC CMUVER THENC CALLI 1,-'22; ELSEC CALLI 1,'35; ENDC  RKJ: 7-Nov-74 and 6-Feb-75;
	 JRST 4,0;
	END "RUNEDITOR";
	END "CALLEDITOR";
ENDC
PUBLIC SIMPLE PROCEDURE DUSERERR ;$"#
BEGIN "DUSERERR"
STRING USER!MESSG;
PASS;
USER!MESSG _ E(NULL,NULL);
IF ON THEN WARN("=",USER!MESSG);
END "DUSERERR";
PUBLIC STRING SIMPLE PROCEDURE EARLYWARNING(STRING MESSG) ;$"#
	USERERR(0,1,MESSG) ; TES 8/20/74 USED BEFORE INITIALLIZATION IS COMPLETE ;
PUBLIC STRING SIMPLE PROCEDURE ERRLINE ;$"#
	RETURN(IF EQU(MAINFILE, THISFILE) THEN SRCLINE
	       ELSE THISFILE&SP&SRCLINE) ;
PUBLIC SIMPLE PROCEDURE IMPOSSIBLE(STRING WHERE) ;$"#
	WARN("=","Impossible CASE index in " & WHERE &
		" at " & SOMEINPUT);
IFSITE TENEX THENK

PRIVATE SITE(TENEX) SIMPLE STRING PROCEDURE INCHWL ;$"#
BEGIN
STRING S ; INTEGER C ;
S _ NULL ;
DO
BEGIN
C _ PBIN ;
IF C = CTLA THEN
	IF NULSTR(S) OR EQU(S[-3 TO ], CRLF&"##") THEN
	ELSE	BEGIN
		TES 8/23/74 ^A ECHOES ANYWAY, SO FORGET PBOUT("\") ;
		PBOUT(S[ FOR 1]) ;
		S _ S[1 TO -1] ;
		END
ELSE IF C = CTLS THEN OUTSTR("   =" & EOL & "#" & S)
ELSE IF C = EOL OR C = ALTMODE THEN RETURN(S)
ELSE IF C = CTLV THEN S _ S & PBIN
ELSE IF C=RUBOUT THEN
	BEGIN
	OUTSTR(" XXX" & EOL & "#") ;
	S _ NULL ;
	END
ELSE IF C = LF THEN  TES 8/23/74 ;
	IF LAST<4 THEN RETURN(S)
	ELSE BEGIN OUTSTR(CR&"##") ; S _ S & (CRLF&"##") END
ELSE IF C = CTLQ THEN  TES 8/23/74 ;
	BEGIN
	OUTSTR("_"&CRLF&"#") ;
	WHILE FULSTR(S) AND NOT EQU(S[-3 TO ],CRLF&"##") DO S_S[1 TO -1] ;
	IF FULSTR(S) THEN OUTSTR("#") ;
	END
ELSE S _ S & C ;
END UNTIL FALSE ;
END "INCHWL" ;

ENDC
IFK ITSVER THENK COMMENT THEIR USERERR HAS 3 ARGS ;
PRIVATE SIMPLE PROCEDURE LOSERR(INTEGER RSP) ;$"#
    BEGIN
    DEFINE !BREAK = " '45000000000" ;
    EXTERNAL INTEGER JOBSA ;

    IF RSP="X"
	THEN START!CODE !BREAK '16,'40000 END
	ELSE IF RSP="S"
	    THEN START!CODE MOVE 1,JOBSA; JRST (1) END
	    ELSE IF RSP="D" THEN START!CODE !BREAK '16,'3000000 END;
    END "LOSERR";
ENDC
PRIVATE SIMPLE INTEGER PROCEDURE NREPORT(INTEGER LOC; STRING MESG, RSP) ;$"#
	RETURN(RSP + 3 LSH 18) ; TES 8/20/74 CALLED BY REPORT  ;
PUBLIC SIMPLE INTEGER PROCEDURE REPORT (INTEGER LOC; STRING MESG, RSP) ;$"#
	BEGIN "REPORT" RKJ 6/25/74 TES 8/20/74 ;
	COMMENT SAIL CALLS REPORT(LOC,CRLF&MESG&CRLF,NULL),
		WARN CALLS REPORT(0,MESG,NULL|"A"),
		OTHERS CALL REPORT(0,MESG|NULL,RSP) ;
	EXTERNAL INTEGER !JBSA,!JBDDT;
	INTEGER CHAR;
	DEFINE CLRBFI= [START!CODE TTCALL '11,0 END];
	IF LOC=0 AND NOT SWDBACK THEN OUTSTR(CRLF) ; SWDBACK_TRUE;
	IF FULSTR(MESG) THEN BEGIN OUTSTR(MESG); IF LOC=0 THEN OUTSTR(CRLF) END ;
	IF NOT ERRLF THEN
	    IF (CHAR_INCHRS)=LF
		THEN ERRLF_TRUE;
	IF LOC THEN OUTSTR(
	    "This is a SAIL error - Probably a PUB bug. Called from location "&CVOS(RH(LOC))&CRLF) ;
	IF NOT ON THEN OUTSTR("In the false part of a conditional"&CRLF) ;
	OUTSTR("Line/Page "&ERRLINE&"/"&SRCPAGE&"["&MACLINE&"]"&CRLF) ;
	CHAR _ RSP ;
	IF NOT ERRLF THEN
	WHILE TRUE DO
	    BEGIN "ERRLOOP"
	    IF NOT CHAR THEN
		    BEGIN
		    OUTCHR("^");
		    IFC TENEX THENC CLRBUF ELSEC CLRBFI ENDC ;
		    CHAR _ INCHRW ;
		    IF "a" LEQ CHAR LEQ "z" THEN CHAR _ CHAR LAND '137 ;
		    END ;
	    IF CHAR=CR THEN BEGIN INCHWL; CHAR_0; DONE END ELSE
	    IF CHAR="C" OR CHAR='37 THEN BEGIN CHAR_0; DONE END ELSE
	    IF CHAR=LF THEN BEGIN ERRLF_TRUE; CHAR_0; DONE END ELSE
	    IF CHAR="X" THEN DONE ELSE
	    IF CHAR="S" THEN DONE ELSE
	    IF CHAR="D" THEN
		IFC TENEX THENC DONE ELSE ELSEC
		BEGIN
		IF !JBDDT NEQ 0
		    THEN DONE
		    ELSE OUTSTR(CRLF&"No DDT"&CRLF);
		END ELSE
		ENDC
	    IFC SAILVER OR CMUVER THENC
	    IF CHAR="E" THEN CALLEDITOR(IFC SAILVER THENC "SOS" ELSEC "LINED" ENDC) ELSE
	    ENDC
	    IFC SAILVER THENC
	    IF CHAR="T" THEN CALLEDITOR("E") ELSE
	    ENDC
	    IF CHAR="P" THEN
		    BEGIN TES: PUB INTERACTIVE DEBUGGER ;
		    INTEGER LASTWAS, TEXTWAS, BRCWAS, ONWAS ;
		    LASTWAS_LAST ; TEXTWAS_TEXTMODE ; ONWAS_ON ; ON_TRUE ;
		    OUTSTR(CRLF&"= = = = ="&CRLF) ;
		    !ERRP! _ 0 ; COMMENT PREVENT RECURSION ;
		    SWICH("START PUB!DEBUG END;;" &
			(IF NOT TEXTMODE THEN CRLF&TB&TB
			 ELSE RCBRAK), -1, 0) ; TES 8/23/74;
		    TEXTMODE _ 0 ; TES 8/23/74 ;
		    PASS ; STATEMENT ;
		    !ERRP! _ LOCATIONOFERROR ;
		    OUTSTR("= = = = ="&CRLF) ;
		    ON _ ONWAS ;
		    IF TEXTWAS THEN
			BEGIN
			WHILE LAST>LASTWAS DO SWICHBACK ;
			EMPTYTHIS ; EMPTYTHAT ;
			TEXTMODE _ TRUE ; BRC _ BRCWAS ;
			END ;
		    END
	    ELSE
	    IF CHAR = "Q" AND NOT LOC THEN
		BEGIN LOC_TRUE; OUTSTR(CRLF) ; DONE END ELSE
	    IF CHAR = "A" AND NOT LOC THEN
		BEGIN
		LOC_TRUE;
		OUTSTR(IF RSP="A" THEN "AUTO-CONTINUE"&CRLF ELSE CRLF) ;
		DONE ;
		END ELSE
	    IF CHAR = "?" THEN
	    BEGIN
	    OUTSTR("Reply" & CRLF &
		"<CR> to continue," & CRLF &
		"<LF> to continue automatically from all messages," & CRLF &
		"""A"" to continue automatically from this message,"& CRLF &
		"""Q"" to quiet this message," & CRLF &
		"""P"" to enter PUB debug loop, " & CRLF
		);
	    IFC NOT TENEX THENC IF !JBDDT NEQ 0 THEN ENDC
		OUTSTR("""D"" to enter DDT, ") ; 
	    OUTSTR(
	    IFC SAILVER THENC
	    """E"" or ""T"" to EDIT, "&
	    ELSEC
	    IFC PARCVER THENC
	    """E"" to EDIT, "&
	    ENDC ENDC
		"""X"" to exit, ""S"" to start over"&CRLF);
	    END ELSE OUTSTR("	? FOR HELP"&CRLF) ;
	    CHAR _ 0 ;
	    END "ERRLOOP" ;
	IF LOC OR NOT CHAR THEN RETURN(CHAR + 3 LSH 18)
	ELSE	BEGIN "BUGGY"
		!ERRP! _ LOCATION(NREPORT) ; COMMENT SIMPLE PROCEDURES CAN'T RECURSE ;
		IFC ITSVER THENC
		LOSERR(CHAR) ;
		ELSEC
		USERERR(0, 1, NULL, CHAR) ;
		ENDC
		!ERRP! _ LOCATIONOFERROR ;
		RETURN(0) ;
		END "BUGGY" ;
	END "REPORT";
PUBLIC STRING SIMPLE PROCEDURE SOMEINPUT ;$"#
	RETURN(SP&THISWD&SP&
	   (IF THATISFULL THEN LIT!ENTITY&LIT!TRAIL ELSE NULL)&INPUTSTR[1 TO 80]);
PUBLIC STRING PROCEDURE TYPEIN ;$"#
	BEGIN
	RKJ: 6-FEB-75 MODS FOR AUTOCRLF;
	IF NOT ON THEN RETURN (NULL);  RKJ: 5-10-74 ;
	IF (NOT SWDBACK) AND AUTOCRLF THEN BEGIN  OUTSTR(CRLF) ;  SWDBACK _ TRUE END ;
	IF AUTOCRLF THEN OUTSTR("#") ;
	RETURN(INCHWL) ;
	END "TYPEIN" ;
PUBLIC STRING SIMPLE PROCEDURE WARNN(REFERENCE BOOLEAN QUIETER; STRING SHORT!VERSION,LONG!VERSION) ;$"#
BEGIN "WARN"
COMMENT USUALLY CALLED BY WARN(SHORT, LONG) -- DEFINED AS:
	BEGIN OWN INTEGER <NEWNAME> ., WARNN(<NEWNAME>, SHORT, LONG) END ;
COMMENT MAYBE THERE WAS A "Q" RESPONSE BEFORE ;
IF QUIETER="Q" OR NULSTR(LONG!VERSION) THEN
ELSE IF !ERRP! THEN QUIETER _ RH(REPORT(0, LONG!VERSION, QUIETER))
ELSE USERERR(0, 1, LONG!VERSION) ; COMMENT PREVENT RECURSION ;
IF DEBUG AND MESGS<MESSMAX AND FULSTR(SHORT!VERSION) THEN
	MESGSARR[MESGS_MESGS+1] _ IF SHORT!VERSION = "=" THEN LONG!VERSION ELSE SHORT!VERSION ;
RETURN(NULL) ;
END "WARN" ;
FINISHED

ENDOF("ERROR")
