.command character "_";
_macro typvar(name)tty_"name="&name
_
_font 1 "30vr" font 2 "fix25" font 3 "30vrb" turn on "" for "%" select 1
_
_MARGINS 1000; TEXT!INDENT_8;
_TYPVAR PAGE!HEIGHT; TYPVAR PAGE!WIDTH;
_
_indent text!indent,text!indent;
_
_macro pub begin if lines < 7 then next page;
_skip 1 group nofill indent 0; turn on "{" select 2
_macro endpub skip 1 end
_
_if xcribl then start at "" "3" at "" "*" end else turn on "";
_
_macro sec(name) begin if lines < 7 then next page; skip spread+1 nofill indent 0;
name
_end
_
_units_"[MILL|MILLS|INCH|INCHES|LINE|LINES]"
_
_begin group skip 5 nofill center turn on "{"
Using PUB to Produce XGP Output
by Pitts Jarvis (PJ@MIT-AI)
{date}
_skip 3 end
_
_every heading(Using PUB to Produce XGP Output,,Page {page}) page_page+1;

There have been several additions and extensions to PUB to facilitate XGP
output. Various fonts with variable width characters can be used; and, the high
resolution of the XGP allows fine control over margins.

_sec New XGP commands
There are two ways to specify XGP output.  The manuscript may contain a DEVICE
statement which specifies XGP in exactly the same way that LPT and TTY are
specified. The second method is to use the "X" compilation switch in the command
line entered from your console.  Once you are in XGP mode, the PUB variable
XCRIBL will be set to -1 and THISDEVICE will be set to "XGP".

Fonts are specified with a FONT declaration of the form.
_pub
.FONT <c> <s>
_endpub continue
where <c> is a character and <s> is a string.  The exact form of <c> and <s> are
site dependent.  At MIT, <c> can be a digit or alphabetic, and <s> is a file
name which contains the font.  File name defaults are established such that the
"system" font will be used, i.e. the default directory is FONTS, the default
device is DSK, and the default second file name is KST.  Font switching is
accomplished two ways.
_pub
.SELECT <c>
_endpub continue
selects the specified font.  An alternative method consists of the using "%" as
a PUB control character.  For example, "%3" would select font 3.
As with other PUB control characters, "%" must be
turned on to have any affect.  "%*" causes PUB to switch back to the previously
selected font.  "%*" is not a stack mechanism.  At the beginning of each PUB
block, the selected font is saved and restored at the end of the block.

_sec New or Extended Commands

_pub
.PREFACE <e> {units}
_endpub continue
evaluates the expression <e> and causes each paragraph to begin with specified
amount of blank area.  If no third argument is given, then LINES is used.
The predeclared variable MILLPREFACE is set to the size of the
preface if in XGP mode; otherwise, it is in lines.

_pub
.SKIP <e> {units}
_endpub continue
leaves the amount of blank space as specified by the second argument.

_pub
.SPACING <e> {units}
_endpub continue
sets the distance between the bottom of one text line and the top of the next.
The predeclared variable MILLSPACING is set up much the way MILLPREFACE is.

_pub
.XLENGTH <s>
_endpub
_turn on ""
returns the bit length of <s> in the selected font.  Be careful, font switching
does not take place inside <s>!
_turn on

_pub
.SNEAK <s>
_endpub
takes the string <s> and sneaks it into the XGP output.  <s> is not considered for
justification purposes.  For example the command
_turn on "#"
2SNEAK#BEWARE("'177");*
_turn on
would cause a rubout to appear in the document.

_pub
PAPER SIZE <e1>, <e2>;
_endpub
has no effect when not in XCRIBL mode.  In XCRIBL mode, PAPER SIZE takes two
arguments both of which are optional.  The first argument is the length of the
page in mills, and the second argument is the width of the page in mills.  If
you desire 8.5" x 11" pages, it is not necessary to call PAPER SIZE.

_pub
MARGINS <e1>, <e2>, <e3>, <e4>;
_endpub
also has no effect when not in XCRIBL mode.  In XCRIBL mode, the four arguments
specify the left, right, top, and bottom margins respectively in mills.  MARGINS
causes a paragraph break and calculates a page frame using font 1.  If you don't
like the placement of the heading, footing, and text areas set up by MARGINS; the
variables PAGE!HEIGHT and PAGE!WIDTH may be used in AREA statements to redeclare
these areas as you see fit.  Other variables affected by MARGINS include TOPBORDER,
BOTTOMBORDER, EVENLEFTBORDER, ODDLEFTBORDER, AND RIGHTBORDER.  If you are producing
pages that are not 8.5" x 11"; then you must call PAPER SIZE before you call MARGINS
to get the desired results.

_begin turn on "#"
2MARGINS;* is exactly equivalent to 2MARGINS#1500,#1000,#1000,#500;*
_end

_sec Stop Reading Here
if you have no desire to do fancy things.  All of the information that follows
is included only for completeness.  It is suggested that you use the MARGINS and
PAPER SIZE if at all possible.


_sec New Variables

_pub
VBPI 1and* HBPI
_endpub continue
initially have the vertical and horizontal resolution of the
specified device.  For LPT and TTY they are 1.  For other devices they are in
units of bits per inch.  These variables can be changed from their initial
values if you so desire.

_pub
CHARW
_endpub continue turn on "#"
is 1 for LPT and TTY and read-only.  For other devices CHARW is the bit
width of a space.  It is initially set to 16, but can be set by the user.  CHARW
is used by PUB to calculate the bit width of a line; thus the statement
2PAGE#FRAME#PAGE!HEIGHT#HIGH#PAGE!WIDTH#WIDE* would cause PUB to
generate lines of CHARW*PAGE!WIDTH bits.  CHARW is independent of the selected font.
_turn on

_pub
CHARH
_endpub continue
is read-only at all times and is 1 for LPT and TTY.  For other devices CHARH
is bit height of the selected font.

_pub
MILLPREFACE 1and* MILLSPACING
_endpub continue
are both 1 for LPT and TTY.  For other devices it is the inter-paragraph spacing
and inter-line spacing set by the PREFACE and SPACING statements respectively.

_pub
EVENLEFTBORDER, ODDLEFTBORDER, TOPBORDER, 1and* BOTTOMBORDER
_endpub
all are in mills.  They have no effect for LPT and TTY.  For other devices,
they set the borders around the area on the page where text is printed.

_pub
!XGPCOMMANDS
_endpub
allows the user to give commands to the XGP system that PUB might not otherwise
permit.  At MIT, this string is put on the first page of the document after the
commands that PUB routinely puts there.  Since carriage return and line feed
('15 and '12) are illegal in PUB strings,
all occurences of "" are replaced by the string '15&'12.  The string
_turn on "#"
";size#5;skip#100" would cause all pages of the document to be 5 inches long,
_turn on
and the first 100 pages would not be printed.

_pub
XGENLINES, MINTEMPLATE, MINCHARW, . . . .?
_endpub

_sec Example
The following example defines a macro that given a page size adjusts the page frame
to fit font 1 on a page with the standard "textbook" typewriter margins.
_pub turn off ""
.VARIABLE PAGE!HEIGHT, PAGE!WIDTH, RIGHTBORDER
.
.MACRO PAPER SIZE(Y,X)!PAPERSIZE!(X+0,Y+0)
.
.MACRO !PAPERSIZE!(X,Y)MILL!PAPER!HEIGHT_IF Y>0 THEN Y ELSE 11000;
.MILL!PAPER!WIDTH_IF X>0 THEN X ELSE 8500;
.!XGPCOMMANDS_!XGPCOMMANDS&";SIZE "&(MILL!PAPER!HEIGHT/1000)&"."
.    &"00"[1 TO 3-LENGTH(MILL!PAPER!HEIGHT MOD 1000)]
.    &(MILL!PAPER!HEIGHT MOD 1000)&"";
.
.MACRO MARGINS(LEFT,RIGHT,TOP,BOTTOM)IF XCRIBL
.    THEN
.	START
.	!MARGINS!(LEFT+0,RIGHT+0,TOP+0,BOTTOM+0);
.	PAGE FRAME PAGE!WIDTH WIDE PAGE!HEIGHT HIGH;
.	TITLE AREA HEADING LINES 1 TO 3;
.	AREA TEXT LINES 4 TO PAGE!HEIGHT-2;
.	TITLE AREA FOOTING LINE PAGE!HEIGHT;
.	PLACE TEXT;
.	END
.    ELSE START PAGE!HEIGHT_59; PAGE!WIDTH_72; END
.
.MACRO !MARGINS!(LEFT,RIGHT,TOP,BOTTOM) BEGIN GROUP SELECT 1
.IF MILL!PAPER!HEIGHT  0 THEN MILL!PAPER!HEIGHT_11000;
.IF MILL!PAPER!WIDTH   0 THEN MILL!PAPER!WIDTH _ 8500;
.
.BIT!RASTER!WIDTH_(MILL!PAPER!WIDTH*HBPI)/1000;
.BIT!RASTER!HEIGHT_(MILL!PAPER!HEIGHT*VBPI)/1000;
.
.IF LEFT > 0 THEN ODDLEFTBORDER_LEFT ELSE ODDLEFTBORDER_1500;
.IF RIGHT > 0 THEN RIGHTBORDER_RIGHT ELSE RIGHTBORDER_1000;
.IF TOP > 0 THEN TOPBORDER_TOP ELSE TOPBORDER_1000;
.IF BOTTOM > 0 THEN BOTTOMBORDER_BOTTOM ELSE BOTTOMBORDER_500;
.
.EVENLEFTBORDER_ODDLEFTBORDER; XGP!VSP_(MILLSPACING*VBPI)/1000;
.
.PAGE!WIDTH_(BIT!RASTER!WIDTH
.    -(HBPI*(ODDLEFTBORDER+RIGHTBORDER))/1000)/CHARW;
.PAGE!HEIGHT_(BIT!RASTER!HEIGHT
.    -(VBPI*(TOPBORDER+BOTTOMBORDER))/1000)/(CHARH+XGP!VSP);
.END 
_endpub
 