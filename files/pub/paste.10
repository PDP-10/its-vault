BEGOF("PASTE")

COMMENT

                *** Variations at Different Sites ***

In PLACELINE, some sites don't need to allocate extra text lines for
superscripts and subscripts in XCRIBL mode.

                                 ***

Paste a line, with its leading and somescripts and footnotes,
into a column obeying GROUP constraints.

;

PROCEDURES
PUBLIC SIMPLE PROCEDURE PASTE! ;$"#
BEGIN "PASTE!"
FTGP _ 0 ;
FTGP2 _ 0 ; TES 11/2/74 ;
MILLVERTI _ -MILLVERTIDEFAULT ; TES 11/2/74 SET TO MSPREADM AT 1ST TEXT LINE ;
NEEDMILLVERTI _ FALSE ; TES 11/2/74 ;
BIND(DECLARE(SYMNUM("FOOT"), PORTYPE), IXFOOT _ PUTI(4, -1)) ;
MESGS _ 0 ;
NOPGPH _ TRUE ;
END "PASTE!" ;
PUBLIC RECURSIVE PROCEDURE DBREAK ;$"#
IF ON THEN	IF NOPGPH THEN NOPGPH _ -1 ELSE
BEGIN INTEGER STTS ;
NOPGPH _ -1 ;
BOUND(3) ;
IF POSN > INDENT OR VERBATIM OR SNUCK THEN  TES 11/17/74 SNUCK;
	BEGIN "A PGPH"
	SNUCK _ FALSE ; TES 11/17/74 ;
	PLACELINE(IF LASTWDBRK=OAKS THEN OAKS-1 ELSE OAKS, POSN MIN MAXIM, XMAXIM-FSHORT,
		FAKE, ABOVEX MAX BRKABX,
		-(BELOWX MIN BRKBLX),
		IF NOFILL THEN LEADNM ELSE IF FIRST THEN LEADFM ELSE SPREADM-1,
		IF NOFILL THEN MLEADNM ELSE IF FIRST THEN MLEADFM ELSE MSPREADM,
		PLBL, JUSTJUST, 0) ;
	FSHORT _ SINCELFM _ 0 ;
	IF ENDCASE=2 THEN BEGIN STTS_STARTS; IF ENDBLOCK THEN WARN("=","Missed END in Response|Footnote");
	STARTS _ STARTS + STTS ; END ;
	END "A PGPH"
ELSE SNUCK _ FALSE  ;  TES 11/17/74 ;
END "DBREAK" ;
PUBLIC SIMPLE STRING PROCEDURE ENOUGH(STRING STR ; INTEGER WID, F) ;$"#
	BEGIN TES 11/29/73 enough of STR to extend WID charws in font F ;
	INTEGER WASF, N, X ; STRING S2 ;
	WASF _ THISFONT ; S2 _ STR ;
	IDASSIGN(FNTFIL[F], CW) ; X _ WID * CHARW ; N _ 0 ;
	WHILE FULSTR(S2) AND X GEQ 0 DO
		BEGIN N_N+1 ; X _ X-CW[LOP(S2)] END ;
	IF X<0 THEN N _ N-1 ;
	IDASSIGN(FNTFIL[WASF], CW) ;
	RETURN(STR[1 TO N]) ;
	END ;
PUBLIC INTEGER SIMPLE PROCEDURE LINESLEFT ;$"#
BEGIN
INTEGER TOT, LEFT ;
TOT _ LEFT _ IF AREAIXM AND 0 LEQ STATUS LEQ 2 THEN LINES ELSE LINECT(IXTEXT) ;
LEFT _ LEFT + XGENLINES; RKJ;
IF STATUS=1 THEN LEFT _ LEFT - (LINE + COVERED + PINE) ;
IF NOT NOPGPH THEN LEFT _ LEFT - ( 1+(ABOVEX MAX BRKABX)-(BELOWX MIN BRKBLX)+
	(IF NOFILL THEN LEADNM ELSE IF FIRST THEN LEADFM ELSE SPREADM-1) ) ;
RETURN(IF LEFT<0 THEN -(LEFT+TOT) ELSE LEFT) ;
END "LINESLEFT" ;
PUBLIC RECURSIVE INTEGER PROCEDURE FIND!ROOM(INTEGER SOURCE,
	EXTRA, FROMCOL, FROMLINE, MORECOMING) ;$"#
BEGIN "FIND!ROOM"
INTEGER WANT, LEAD, I, C, L, SAVEAREA, KOLS ;  LABEL FOUND, TRYHERE ;
STRING FTSTR ; TES 9/12/74 ;
ASSUREAREA ;
IF SOURCE LEQ 0 THEN BEGIN WANT_EXTRA ; LEAD_-SOURCE END ELSE BEGIN WANT_1; LEAD_0 END;
IF WANT > LINES THEN TES 12/6/73 LENGTHENED MESSAGE ;
	BEGIN WARN("Can't fit here",
	<"This line (with its PREFACE,SPREAD,SOMESCRIPTS) needs " &
	CVS(WANT) & " lines of paper,
	but AREA " & SYM[LDB(BIXNUM(AREAIXM))] &
	" is declared only " & CVS(LINES) & " lines HIGH">);
	RETURN(FALSE) ;
	END;
KOLS _ IF FROMCOL > COLS THEN 2*COLS ELSE COLS ;
TRYHERE:
FOR C _ FROMCOL THRU KOLS DO
	IF (LINES-MORECOMING) - (L_ IF C=FROMCOL THEN FROMLINE ELSE 0) + XGENLINES  - PINE  GEQ 
		(IF L THEN WANT+LEAD ELSE WANT) THEN GO TO FOUND ;
IF GLINEM AND C NEQ FROMCOL AND MOVEGROUP(TRUE, KOLS+1-COLS,0,EXTRA) THEN
	BEGIN C_COL; L_LINE; GO FOUND END ;
IF TEXTAR(AREAIXM) THEN
	BEGIN
	FTSTR _ SSTK[FOOTSTR(AREAIXM)] ; SSTK[FOOTSTR(AREAIXM)] _ NULL ; TES 9/12/74 ;
	NEXTPAGE ; OPENAREA(AREAIXM) ;
	SSTK[FOOTSTR(AREAIXM)] _ FTSTR & SSTK[FOOTSTR(AREAIXM)] ; TES 9/12/74 ;
	IF FROMCOL>COLS  AND COL LEQ COLS  OR FROMCOL LEQ COLS AND COL>COLS THEN
		BEGIN
		TES 12/6/73 DELETED: IF FROMCOL>COLS THEN FOOTTOP _ 1 ; COMMENT ADDED BY RKJ ;
		PAL SWAP COL ; LINE SWAP PINE ;
		END ;
	FROMCOL _ COL ; FROMLINE _ LINE; GO TO TRYHERE ;
	END
ELSE	BEGIN  TES 12/6/73 LENGTHENED MESSAGE ;
	WARN("TITLE AREA overflow","Overflowed title area " & SYM[LDB(BIXNUM(AREAIXM))]) ;
	FOR C _ 1 THRU COLS DO AA[C, 0] _ AA[COLS+C,0] _ 0 ;
	PAL _ (C _ COL _ 1) + COLS ;  L _ 0 ;
	END ;
FOUND:
IF C=COL THEN LINE_L
ELSE IF GLINEM AND MOVEGROUP(FALSE, C, L, EXTRA) THEN BEGIN L _ LINE ; C _ COL END
ELSE	BEGIN
	COL _ C ;  PAL _ (COL+COLS-1) MOD (2*COLS) + 1 ;
	LINE _ L ;  PINE _ RH(AA[PAL,0]) ;
	END ;
IF OLX+WANT+LEAD > OLXX THEN GROWOWLS(WANT+LEAD+25) ;
IF LINE+WANT+LEAD > ARRINFO(AA,4) THEN GROWAA(LINE+WANT+LEAD+10) ; TES 11/6/74;
IF LINE AND LEAD THEN
        BEGIN
	FOR I _ 1 THRU LEAD DO AA[COL, LINE+I] _ NEWBLANK(IF GROUPM OR I>1 THEN ABV!BLW ELSE BLW) ;
	LINE _ LINE + LEAD ;
	END ;
RETURN(L+1) ;
END "FIND!ROOM" ;
PUBLIC INTEGER SIMPLE PROCEDURE NEWBLANK(INTEGER MOLE) ;$"#
BEGIN MOLES[OLX_OLX+1]_MOLE ; OWLS[OLX]_0 ; RETURN(OLX); END "NEWBLANK";

PUBLIC INTEGER SIMPLE PROCEDURE NEWNEWBLANK(INTEGER NMOLE) ;$"#
BEGIN NMOLES[NOLX_NOLX+1]_NMOLE ; NOWLS[NOLX]_0 ; RETURN(NOLX); END "NEWNEWBLANK";
PRIVATE SIMPLE INTEGER PROCEDURE OWLOUT(STRING C1,C2,C3) ;$"#
	BEGIN "OWLOUT"
	TES 11/2/74 2 ARGUMENTS TO AVOID CONCATENATION ;
	IF 0=LENGTH(C1)+LENGTH(C2)+LENGTH(C3) THEN RETURN(0) ;
	OWLSEQ _ OWLSEQ + 1 ;
	IF INTER LEQ 0 THEN NOPORTION ;
	OUT(SINTER, CVS(OWLSEQ)) ; OUT(SINTER, ALTMODE) ;
	OUT(SINTER, C1) ; OUT(SINTER, C2) ; OUT(SINTER, C3) ;
	RETURN(OWLSEQ) ;
	END "OWLOUT" ;

PRIVATE SIMPLE PROCEDURE OWLPLACE(INTEGER OWLOUTVALUE, MILLLEAD) ;$"#
	BEGIN "OWLPLACE"
	TES 11/2/74 ALLOWS OWLOUT (FORMERLY OWT) TO BE CALLED WITHOUT COPYING OWL ;
	OWLS[OLX] _ OWLOUTVALUE ;
	IF MILLVERTI<0 THEN MILLVERTI_MSPREADM
	ELSE IF MILLVERTI NEQ MILLLEAD THEN
		BEGIN
		NEEDMILLVERTI _ TRUE ;
		RKJ: 6-FEB-75 make the following agree with what actually happens in pass 2 ;
		IF MILLLEAD<MILLVERTI
		    THEN OVEREST _ OVEREST + ((MILLVERTI-MILLLEAD)*VBPI+500) DIV 1000
		    ELSE OVEREST _ OVEREST - ((MILLLEAD-MILLVERTI)*VBPI+500) DIV 1000 ;
		END ;
	MLEAD[OLX] _ MILLLEAD-MILLVERTI ; TES 11/2/74 EXTRA LEADING ;
	END "OWLPLACE" ;
PUBLIC RECURSIVE PROCEDURE PLACELINE(INTEGER CHARS,POSN,XPOSN,FAKE,
	ABOVE,BELOW,LEADB,MLEADB,FIRSTLBL,
	JUSTIFY,MORECOMING) ;$"#
BEGIN "PLACELINE"
INTEGER FOOTFLAG, NEEDS, TOPLINE, GR, ATOP, I, TOLBL, LBL, FOOTNUM, WASFRAME, WASCOL, WASOLX ;
    COMMENT FOOTFLAG CHANGES  RKJ  10-10-73;
STRING XREF; 
INTEGER SOWL, MSKIP, MGSKIP, MCHARH ; TES 11/2&7/74 ;
IF  NOT DEBUG THEN XREF _ ALTMODE
ELSE	BEGIN
	XREF _ ERRLINE&"/"&SRCPAGE&"["&MACLINE&"]" ;
	FOR I _ 1 THRU MESGS DO XREF _ XREF & RUBOUT & MESGSARR[I] ;
	MESGS_0 ; XREF _ XREF & ALTMODE ;
	END ;
IFC SAILVER OR PARCVER OR ITSVER OR CMUVER
    THENC IF XCRIBL THEN ABOVE_BELOW_0; comment scripts; ENDC
SOWL _ OWLOUT(XREF,OWL[1 TO CHARS], CRLF) ; TES 11/2/74 AVOID CAT ;
ASSUREAREA ;
MGSKIP _ MILLGSKIP(AREAIXM) ; MILLGSKIP(AREAIXM) _ 0 ; TES 11/7/74 ;
MSKIP _ MILLSKIP(AREAIXM) ; MILLSKIP(AREAIXM) _ 0 ; TES 11/7/74 ;
IF COL > COLS THEN
	BEGIN "INFOOT" TES 12/6/73 SEPARATED CASES ;
	IF FOOTNUM _ FOOTTOP THEN
		BEGIN comment First Footnote belonging to a line ;
		GR _ GROUPM ; TES 1/15/74 ADDED 'OR GLINEM=0' BELOW: ;
		TES 8/22/74 PAL BELOW WAS COL! ;
		IF GROUPM=0 OR GLINEM=0 THEN GLINEM _ AA[PAL,PINE] ;
		GROUPM _ 1 ; FOOTTOP _ 0 ;
		END ;
	IF ATOP _ LINE=0 THEN ABOVE _ ABOVE + 1 + (FTGP+FTGP2) ; comment assure room for FOOTSEP ;
	END "INFOOT" ;
FOOTFLAG _ COL LEQ COLS AND FULSTR(SSTK[FOOTSTR(AREAIXM)]);
IF FOOTFLAG THEN
    MORECOMING_MORECOMING+2; RKJ 11/20/73 ;

TES ADDED 11/7/74 : ;
MLEADB _ MLEADB + MSKIP ;
MCHARH _ IF XCRIBL THEN ABS(MILLVERTI) + (CHARH*1000 + VBPI DIV 2) DIV VBPI ELSE 166 ;
LEADB _ LEADB + MLEADB DIV MCHARH ; MLEADB _ MLEADB MOD MCHARH ;
ABOVE _ ABOVE + MGSKIP DIV MCHARH ;
MGSKIP _ MGSKIP MOD MCHARH ;

WHILE NOT (TOPLINE _ FIND!ROOM(-LEADB,NEEDS_ABOVE+BELOW+1,COL,LINE,MORECOMING)) DO
	BEGIN ABOVE_(ABOVE-1)MAX 0; BELOW_(BELOW-1)MAX 0 END;
IF XCRIBL AND (COL = 1 OR COL = COLS+1) THEN TES 11/19/73 COL 1 ONLY! ;
  BEGIN "KLUDGE"
	OWN INTEGER STD;
	OVEREST_OVEREST+NEEDS*((STD_STDCHARH)-CHARH);
					RKJ: 6-Feb-75 made code below more nearly correct ;
	IF OVEREST NEQ 0 THEN
	    BEGIN "MUST FIXUP"
	    STD_STD + (MILLVERTI*VBPI+500) DIV 1000;
	    IF OVEREST>0
		THEN BEGIN XGENLINES_XGENLINES+OVEREST DIV STD; OVEREST_OVEREST MOD STD END
		ELSE WHILE OVEREST<0 DO BEGIN XGENLINES_XGENLINES-1; OVEREST_OVEREST+STD; END;
	    END "MUST FIXUP";
  END "KLUDGE";
WASOLX _ OLX - (LINE + 1 - TOPLINE) ;
IF COL > COLS THEN
	BEGIN "BEGFOOT" TES 12/6/73 SEPARATED CASES ;
	IF FOOTNUM THEN  COMMENT FIRST FOOTNOTE BELONGING TO A LINE ;
		BEGIN "FOOT1"
		GROUPM _ GR ; IF GROUPM=0 THEN GLINEM _ 0 ;
		END "FOOT1" ;
	IF ATOP THEN BEGIN ABOVE _ ABOVE - 1 - (FTGP+FTGP2) ; TES 11/29/73 ;
			NEEDS _ NEEDS - 1 - (FTGP+FTGP2) END ;
	IF LINE = 0 THEN
		BEGIN "PUTFOOTSEPS"
		TES 11/29/73 ADDED FTGP AND ENOUGH ;
		TES 11/2&7/74 ADDED FTGP2 AND MILLVERTIDEFAULT ;
		MLEADB _ MILLVERTIDEFAULT ; TES 11/7/74 ;
		FOR I _ 1 THRU FTGP DO AA[COL,I] _
			NEWBLANK(IF I=1 THEN ABV ELSE ABV!BLW) ;
		AA[COL, LINE_TOPLINE_1+FTGP] _ OLX _ OLX + 1 ;
		IF XCRIBL THEN
			OWLPLACE(OWLOUT(XREF,PICKFONT(FSFONT),
					ENOUGH(FOOTSEP,COLWID(AREAIXM),FSFONT)&CRLF),
				MILLVERTIDEFAULT)
		ELSE
			OWLPLACE(OWLOUT(XREF,
					FOOTSEP[1 TO COLWID(AREAIXM)],
					CRLF),
			MILLVERTIDEFAULT) ;
		MOLES[OLX] _ IF FTGP=0 THEN BLW ELSE ABV!BLW ;
		FOR I _ LINE+1 THRU LINE+FTGP2 DO AA[COL,I] _ NEWBLANK(ABV!BLW);
		LINE _ LINE + FTGP2 ; TES 11/6/74 ;
		END "PUTFOOTSEPS" ;
	END "BEGFOOT" ;
FOR I _ 1 THRU ABOVE DO AA[COL,LINE+I] _
	NEWBLANK(IF GROUPM OR TOPLINE<LINE+I THEN ABV!BLW ELSE BLW) ;
AA[COL, LINE+ABOVE+1] _ OLX _ OLX + 1 ;
IF LINE = 0 THEN MLEADB _ MILLVERTIDEFAULT ; TES 11/7/74 ;
OWLPLACE(SOWL, MGSKIP+MLEADB) ; TES 11/2&7/74 ;
MOLES[OLX] _ (IF GROUPM OR TOPLINE<LINE+ABOVE+1 THEN ABV ELSE 0) LOR (IF GROUPM OR BELOW THEN BLW ELSE 0);
IF XCRIBL THEN I_MAXIM*CHARW + FAKE - XPOSN ELSE I_MAXIM - (POSN-FAKE);
IF JUSTIFY AND I > 0 THEN SHORT[OLX]_I ;
IF FIRSTLBL NEQ -TWO(13) THEN
	BEGIN "PAGE LABELS"
	LBL _ PLBL ; TOLBL _ 0 ;
	WHILE LBL NEQ FIRSTLBL AND LBL NEQ -TWO(13) DO
		LBL _ IF (TOLBL_LBL)>0 THEN ITBL[TOLBL] ELSE NUMBER[-TOLBL] ;
	IF LBL=-TWO(13) THEN WARN("=","Page label not in Page Label L.L.!!!")
	ELSE IF TOLBL=0 THEN PLBL _ -TWO(13)
	ELSE IF TOLBL > 0 THEN ITBL[TOLBL] _ -TWO(13)
	ELSE NUMBER[-TOLBL] _ -TWO(13) ;
	BRKPLBL _ PLBL ;
	DPB(IF FIRSTLBL<0 THEN PUTI(1,FIRSTLBL) ELSE FIRSTLBL, LABELM(OLX)) ;
	END "PAGE LABELS" ;
FOR I _ ABOVE+2 THRU NEEDS DO AA[COL,LINE+I] _ NEWBLANK(IF GROUPM OR I<NEEDS THEN ABV!BLW ELSE BLW) ;
IF GROUPM AND  NOT GLINEM THEN
	DPB(0,ABOVEM(GLINEM_IF COL>COLS THEN TOPMOST(PAL,PINE) ELSE AA[COL,TOPLINE])) ;
	TES 12/6/73 ADDED TOPMOST(PAL,PINE) ;
LINE _ LINE + NEEDS ;
IF FOOTFLAG THEN comment, Footnotes ;
BEGIN "FOOTNOTES"
WHILE (FOOTNUM_IF PINE=0 THEN 1 ELSE LDB(FOOTM(AA[PAL,PINE])) + 1) = 31 DO
	BEGIN
	WARN("=",">30 lines in col. "&COL&" want footnotes.") ;	
	FIND!ROOM(LINE, 1, COL+1, 0, 0) ;
	END ;
IF FOOTNUM=32 THEN FOOTNUM _ 1 ;  DPB(FOOTNUM, FOOTM(OLX)) ;
SEND(IXFOOT, CRLF&TB&TB& "END ""!FOOTNOTES"";;") ;
AA[COL,0] _ LHRH(COVERED, LINE) ;  PINE SWAP LINE ;  PAL SWAP COL ;
WASCOL _ COL ; WASFRAME _ FRAMEIDA ; BEGINBLOCK(TRUE, 3, "!FOOTNOTES") ; BREAKM _ 0 ;
FOOTTOP _ -1 ; WASOLX _ OLX ; RECEIVE(IXFOOT, NULL) ; PASS ; TOEND ; FOOTTOP _ 0 ;
AA[COL,0] _ LHRH(COVERED, LINE) ;
IF WASCOL NEQ COL OR WASFRAME NEQ FRAMEIDA THEN
	BEGIN FOOTNUM _ 31 ; IF WASFRAME=FRAMEIDA THEN DPB(31, FOOTM(WASOLX)) END ;
DPB(FOOTNUM, FOOTM(AA[COL,LINE])) ; PAL SWAP COL ; PINE SWAP LINE ;
END "FOOTNOTES" ;
END "PLACELINE" ;
PUBLIC SIMPLE PROCEDURE SNEAKLINE(STRING S) ;$"#
RKJ: added following procedure for change to SNEAK 6-Feb-75 ;
BEGIN "SNEAKLINE"
ASSUREAREA;
XGENLINES _ XGENLINES + 1;
FIND!ROOM(1, 0, COL, LINE, 0) ;
AA[COL,LINE+1] _ OLX _ OLX + 1 ;
OWLPLACE(OWLOUT(ALTMODE, S, CRLF), ABS(MILLVERTI)) ;
LINE _ LINE + 1 ;
END "SNEAKLINE";
PRIVATE SIMPLE INTEGER PROCEDURE TOPMOST(INTEGER COLNO, LINO) ;$"#
	BEGIN TES 12/6/73 USED BY PLACELINE FOR GLINEM IN FOOT ;
	WHILE LINO>1 AND (LDB(ABOVEM(AA[COLNO,LINO])) OR LDB(BELOWM(AA[COL,LINO-1]))) DO
		LINO _ LINO - 1 ;
	RETURN(AA[COLNO,LINO]) ;
	END "TOPMOST" ;
FINISHED

ENDOF("PASTE")
