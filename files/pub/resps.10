BEGOF("RESPS")


COMMENT

Each variety of response has its own linked list of RESPTYPE records
with currently declared responses.  Each record has an OLD!RESP link
to outer block versions of the same response.  Calling a response is
tricky, especially in the midst of a text line --- the state must be
preserved and restored carefully.

;

PROCEDURES
PUBLIC SIMPLE PROCEDURE RESPS! ;$"#
BEGIN "RESPS!"
GENSYM _ LEADRESPS _ WAITRESP _ 0 ;
RESP!BODY _ FALSE ;
END "RESPS!" ;
PUBLIC RECURSIVE BOOLEAN PROCEDURE ATLEAD(INTEGER LEADSPACES) ;$"#
BEGIN
IF FINDINSET(LEADSPACES) AND FULSTR(SSTK[BODY(LLTHIS)])THEN RESPOND(LLTHIS)
ELSE RETURN(FALSE) ;
RETURN(TRUE) ;
END "ATLEAD" ;
PUBLIC RECURSIVE PROCEDURE CLOSET(INTEGER ITSIX; BOOLEAN CLOSEIT, DISDECLAREIT) ;$"#
BEGIN "CLOSET"
IF DISDECLAREIT THEN DBREAK ;
IF FINDTRAN(LDB(BIXNUM(ITSIX)), 3) THEN
	IF CLOSEIT AND ITSIX NEQ IXPAGE AND  comment AFTER ;
		(IXTYPE(ITSIX)=AREATYPE OR FULSTR(CTR!VAL(PATT!STRS(ITSIX)))) THEN RESPOND(LLTHIS) ;
IF DISDECLAREIT THEN DISD(ITSIX) _ -1 ;
END "CLOSET" ;
PUBLIC SIMPLE PROCEDURE DRESPONSE(INTEGER COMDWD) ;$"#
BEGIN
INTEGER ARGS, SIHIGH, L1, L2, SIG, CLU, VARI, S, A, RIX, J, TYP, XIX, OLDIX ;
STRING PHR, X, BOD ; BOOLEAN ROTTEN, HASBODY ;
SIMPLE PROCEDURE RESPREPL ;
	BEGIN
	RIX _ PUSHI(RESPWDS, RESPTYPE) ;
	NEXT!RESP(RIX) _ LLPOST ; OLD!RESP(RIX) _ LLTHIS ;
	END "RESPREPL" ;
ROTTEN _ FALSE ; ARGS _ 0 ; SIHIGH _ IHIGH ;
IF COMDWD = 1 THEN
	BEGIN "AT"
	PASS ;
	IF ITS(PAGEMARK) THEN BEGIN VARI_2 ; CLU_0 ; L1_FF ; SIG_FF ROT -7 ; PASS END
	ELSE	BEGIN
		X _ SIMPAR ; L1 _ X ;
		IF NULSTR(X) THEN BEGIN VARI_2 ; CLU_0 ; L1_CR ; SIG_CR ROT -7 ; PASS END
		ELSE IF THISWD[1 FOR 1]="0" THEN BEGIN VARI_1 ; CLU_CVD(X) ; PASS END
		TES 11/15/73: TEST ABOVE USED TO BE "0" LEQ L1 LEQ "9".
			ALSO, TOOK OUT "PHRASE RESPONSE", VARI=0;
		ELSE	BEGIN VARI _ 2 ; L1 _ X ; SIG _ CVASC(X) ; CLU _ LENGTH(X) ;
			DPASS ; A _ 0 ;
			WHILE  NOT (ITSCH(;) OR ITSCH()) DO
				BEGIN
				IF  NOT THISISID THEN
					BEGIN
					WARN("=","Argument must be identifier.") ;
					ROTTEN_TRUE ;
					END ;
				S_SYMB ; PASS ; IF LENGTH(X_SIMPAR) NEQ 1 THEN WARN("=","Separator 1 character only");
				PUTI(1, S) ; A _ A LSH 7 LOR X ; DPASS ;
				END ;
			ARGS _ IHIGH - SIHIGH ;
			IF ARGS>5 THEN
				BEGIN TES 8/26/74 ;
				IHIGH _ SIHIGH + 5 ;
				WARN(NULL, <"SORRY, I FORGOT TO TELL YOU..." & CRLF &
					"THERE IS A 5 ARGUMENT LIMIT ON SIGNAL RESPONSES, WHICH YOU HAVE VIOLATED" & CRLF &
					"MACROS AND PROCEDURES ARE BETTER ANYWAY.">) ;
				END ;
			END ;
		END ;
	END "AT"
ELSE	BEGIN
	PASS ; IF  NOT THISISID THEN BEGIN WARN("=","BEFORE/AFTER need area/counter name") ; ROTTEN_TRUE END
	ELSE BEGIN VARI_IF COMDWD THEN 3 ELSE 4; CLU_SYMB; TYP_THISTYPE; XIX_IX; PASS END ;
	END ;
BOD _ DEFN(FALSE, FALSE,ARGS,SIHIGH) ; OLDIX _ RIX _ -1 ;
IF ROTTEN OR  NOT ON THEN BEGIN IHIGH _ SIHIGH ; RETURN END ;
X _ BOD ; SCAN(X, TO!NON!SP, HASBODY) ; IF  NOT HASBODY THEN BOD _ NULL ;
CASE VARI-1 MIN 2 OF
BEGIN
COMMENT 0... Phrase TES 11/15/73 removed this case ;
COMMENT 1 ... Inset ;IF FINDINSET(CLU) THEN
			IF DEPTH!RESP(LLTHIS) < DEPTH THEN
				BEGIN
				RESPREPL ;
				IF LLPREV<0 THEN LEADRESPS_RIX ELSE NEXT!RESP(LLPREV) _ RIX ;
				END
			ELSE IF HASBODY THEN OLDIX _ RIX _ LLTHIS  TES 11/29/73 OLDIX;
			ELSE	BEGIN
				OLDIX _ LLTHIS ; TES 11/29/73 ;
				LLSKIP(LEADRESPS, <NEXT!RESP>)
				END
		ELSE	BEGIN
			RIX_PUSHI(RESPWDS,RESPTYPE) ;
			LLINS(LEADRESPS,<NEXT!RESP>,RIX) ;
			END ;
COMMENT 2 ... Signal;BEGIN S _ 0 ; comment Old response of same signal: >0 for outer block, <0 same block;
		IF FINDSIGNAL(SIG) THEN 
			BEGIN
			S _ IF DEPTH!RESP(LLTHIS) < DEPTH THEN LLTHIS ELSE -LLTHIS ;
			IF S<0 THEN OLDIX _ LLTHIS; TES 11/29/73 ;
			LLSKIP(SIGNALD[L1], <NEXT!RESP>) ; LLTHIS _ LLPOST ;
			END ;
		IF HASBODY OR S > 0 THEN
			BEGIN
			RIX_PUSHI(SIGWDS,RESPTYPE); SIGNAL(RIX)_SIG ; NUMARGS(RIX) _ ARGS ;
			LLINS(SIGNALD[L1], <NEXT!RESP>, RIX) ; RESP!SEP(RIX) _ A ;
			IF S = 0 THEN SIG!BRC _ (SIG LSH -29) & SIG!BRC ; OLD!RESP(RIX) _ S MAX 0;
			END ;
		IF NULSTR(BOD) AND S THEN
			BEGIN
			X _ NULL ;
			WHILE FULSTR(SIG!BRC) AND (A _ LOP(SIG!BRC)) NEQ L1 DO X _ X & A ;
			SIG!BRC _ X & SIG!BRC ;
			END ;
		SETBREAK(TEXT!TBL, TEXT!BRC&SIG!BRC, NULL, "IS") ;
		END ;
COMMENT 3,4... AFTER/BEFORE area|counter ;
	IF FINDTRAN(CLU, VARI) THEN
		IF DEPTH!RESP(LLTHIS) < DEPTH THEN
			BEGIN
			RESPREPL ;
			IF LLPREV < 0 THEN WAITRESP_RIX ELSE NEXT!RESP(LLPREV) _ RIX ;
			END
		ELSE IF HASBODY THEN OLDIX _ RIX _ LLTHIS
		ELSE	BEGIN
			OLDIX _ LLTHIS ; TES 11/29/73 ;
			LLSKIP(WAITRESP, <NEXT!RESP>)
			END
	ELSE	BEGIN
		RIX_PUSHI(RESPWDS,RESPTYPE) ;
		LLINS(WAITRESP,<NEXT!RESP>,RIX) ;
		END ;
END ;
IF OLDIX GEQ 0 THEN SSTK[BODY(OLDIX)] _ NULL ; TES 11/29/73 GC ;
IF RIX GEQ 0 THEN
BEGIN
CLUE(RIX) _ CLU ; VARIETY(RIX) _ VARI ;
BODY(RIX) _ PUSHS(1,BOD) ; DEPTH!RESP(RIX) _ DEPTH ;
END ;
END "DRESPONSE"  ;
PUBLIC BOOLEAN SIMPLE PROCEDURE FINDINSET(INTEGER HM) ;$"#
BEGIN "FINDINSET"
INTEGER ARE ;
LLSCAN(LEADRESPS, <NEXT!RESP>, <(ARE _ CLUE(LLTHIS)) GEQ HM>) ;
RETURN(LLTHIS AND ARE = HM) ;
END "FINDINSET" ;
PUBLIC INTEGER SIMPLE PROCEDURE FINDSIGNAL(INTEGER SIGASC) ;$"#
BEGIN "FINDSIGNAL"
INTEGER CHR ;
CHR _ SIGASC LSH -29 ;
LLSCAN(<SIGNALD[CHR]>, <NEXT!RESP>, <SIGASC = SIGNAL(LLTHIS)>) ;
RETURN(LLTHIS) ;
END "FINDSIGNAL" ;
PUBLIC INTEGER SIMPLE PROCEDURE FINDTRAN(INTEGER UASYMB, VARI) ;$"#
BEGIN "FINDTRAN"
LLSCAN(WAITRESP, <NEXT!RESP>,
	<CLUE(LLTHIS) = UASYMB AND (VARI=0 OR VARIETY(LLTHIS)=VARI)>) ;
RETURN(LLTHIS) ;
END "FINDTRAN" ;
PUBLIC RECURSIVE PROCEDURE RESPOND(INTEGER IX) ;$"#
IF ON THEN
BEGIN "RESPOND"
INTEGER ARGS ; STRING COM!ENT ;
ARGS _ IF VARIETY(IX) = 2 THEN NUMARGS(IX) ELSE 0 ;
IF VARIETY(IX) < 3 AND IX NEQ SIGNALD[FF] THEN
	BEGIN "AT"
	SWICH(IF IX=SIGNALD[CR] THEN SSTK[BODY(IX)] ELSE ALTMODE&SSTK[BODY(IX)]&RCBRAK, -1, ARGS) ;
	RETURN ;
	END "AT" ;
GENSYM_GENSYM+1 ; COM!ENT _ "!?@"&CVS(GENSYM) ;
BEGINBLOCK( TRUE, 3 , COM!ENT ) ;
SWICH(SSTK[BODY(IX)]&(CRLF&TB&TB&"END """)&COM!ENT&""";;", -1, ARGS) ;
PASS ; TOEND ;
END "RESPOND" ;
PUBLIC BOOLEAN SIMPLE PROCEDURE SIGNA(INTEGER SIGCH1) ;$"#
BEGIN
INTEGER ARG, RIX, ARGS, SEPS ; STRING SEE ;
SEE _ SIGCH1 & INPUTSTR ;
LLSCAN(<SIGNALD[SIGCH1]>, <NEXT!RESP>, <CVASC(SEE[1 FOR CLUE(LLTHIS)])=SIGNAL(LLTHIS)>) ;
IF LLTHIS = 0 THEN RETURN(FALSE) ; RIX _ LLTHIS ; ARGS _ NUMARGS(RIX) ;
INPUTSTR _ INPUTSTR[CLUE(RIX) TO ] ;
IF ARGS THEN	BEGIN "SCAN ARGS"
		SEPS _ RESP!SEP(RIX) ; IF LAST + ARGS > SIZE THEN GROWNESTS ;
		FOR ARG _ 1 THRU ARGS DO
			BEGIN "SEPBREAK"
			SETBREAK(LOCAL!TABLE,
				(SEPS LSH ((ARG-ARGS)*7) LAND '177) & CRLF, NULL, "IS") ;
			SEE _ NULL ;
			DO	BEGIN
				SEE _ SEE & RD(LOCAL!TABLE) ;
				IF BRC = CR THEN
					BEGIN
					IF FULSTR(RD(TO!NON!SP)) OR BRC NEQ RCBRAK
						 OR  INPUTSTR[2 FOR 1] NEQ VT THEN DONE ;
					LOPP(INPUTSTR) ; LOPP(INPUTSTR) ; IF FULSTR(SEE) THEN SEE _ SEE & SP ;
					END
				ELSE BRC _ -1 ;
				END UNTIL BRC < 0 ;
			SNEST[LAST + ARG] _ SEE ;
			IF BRC > 0 THEN
				BEGIN
				WARN("=","Missing Signal Separator") ;
				FOR ARG _ ARG+1 THRU ARGS DO SNEST[LAST+ARG] _ NULL ;
				END ;
			END "SEPBREAK" ;
		IF ON THEN LAST _ LAST + ARGS ; COMMENT "IF" JAN 9 1973 ;
		END "SCAN ARGS" ;
RESPOND(RIX) ; RETURN(TRUE) ;
END "SIGNA" ;
FINISHED

ENDOF("RESPS")
