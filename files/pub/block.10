BEGOF("BLOCK")

COMMENT

Block structure is implemented by various methods.  The principle
data structure is ISTK which is an integer stack of declaration
records, each linked to the record below.  An associated data
structure is SSTK, which is a string stack whose records are
referenced from corresponding entries in ISTK.

At block BEGIN, the mode-state of PUB is BLockTransferred onto ISTK
in a MODETYPE record.  Each declaration in the block causes another
record to be stacked on top.  At block END, records are peeled off
top-down, usually with the side effect of resetting global
parameters.  Finally, the MODETYPE record is unstacked, and its
contents BLockTransferred back to the mode-state.

;

PROCEDURES
PUBLIC SIMPLE PROCEDURE BLOCK! ;$"#
BEGIN "BLOCK!"
ENDCASE _ STARTS _ 0 ;
BLNMS _ -1 ;
IXEND _ LDB(IXN(<SYMNUM("END")>)) ;
END "BLOCK!" ;
PUBLIC RECURSIVE PROCEDURE BEGINBLOCK(BOOLEAN MIDPGPH; INTEGER ECASE ; STRING NAME) ;$"#
BEGIN "BEGINBLOCK"
INTEGER MIX, I, X ;
IF ECASE = 0 THEN STARTS _ STARTS + 1 comment START...END ;
ELSE IF ECASE=-1 THEN ENDCASE_1  comment, ONCE merging with BEGIN ;
ELSE	BEGIN "NOT CLUMP"
	I_ENDCASE; ENDCASE_0; DBREAK; ENDCASE_I;   RKJ: 7/15/74;
	DEPTH _ DEPTH + 1 ; MIX _ PUSHI(MODEWDS, MODETYPE) ;
	ARRBLT(ISTK[MIX-MODEWDS], BREAKM, MODEWDS) ;
	PUSHI(TABLIMIT+1, TABTYPE) ; I _ 0 ;
	DO ISTK[MIX_MIX+1] _ X _ TABSORT[I_I+1] UNTIL X>TWO(32) ;
	ISTK[MIX+1] _ ISTK[IHED] ; OLDIHED _ IHED;TES 11/15/73; IHED _ MIX + 1 ;
	IF MIDPGPH THEN
		BEGIN "SAVE FILL PARAMS"
		X _ MIDWDS + 1 ; PUSHI(X, MIDTYPE) ;
		ILBF _ CVASC(LBF) ; ARRBLT(ISTK[IHED-X], THISTYPE, X-1) ;
		ISTK[IHED-1]_PUSHS(1, THISWD) ; NOPGPH _ TRUE ; PLBL_BRKPLBL_-TWO(13) ;
		END "SAVE FILL PARAMS" ;
	ENDCASE _ ECASE ; STARTS _ 0 ;
	END "NOT CLUMP" ;
IF BLNMS=MAXBLNMS THEN WARN(NULL, "Deep block nest/possibly infinite recursion");
RKJ: 5-10-74 - added CAPITALIZE below ;
IF NAME NEQ ALTMODE THEN BLKNAMES[BLNMS_BLNMS+1] _ CAPITALIZE(NAME) ; comment not for ONCE! ;
END "BEGINBLOCK" ;
PUBLIC SIMPLE PROCEDURE ENDANY(BOOLEAN CHECK) ;$"#
BEGIN "ENDANY"
STRING BLOCKNAME ;
BLOCKNAME _ IF BLNMS<0 THEN "!MISSING!" ELSE BLKNAMES[BLNMS] ;
BLNMS _ (BLNMS MAX 0) - 1 ;
IF CHECK AND THATISCON THEN
	BEGIN
	PASS ;
	LOPP(THISWD) ;
	RKJ: 5-10-74 - added CAPITALIZE below ;
	IF NOT EQU(CAPITALIZE(THISWD),BLOCKNAME) THEN WARN("Mismatched BEGIN-END",<"BEGIN """&BLOCKNAME&""" but END """&THISWD&"""">) ;
	END
ELSE IF FULSTR(BLOCKNAME) THEN WARN("Mismatched BEGIN-END",<"BEGIN """&BLOCKNAME&""" but END <blank>">) ;
END "ENDANY" ;

PUBLIC RECURSIVE PROCEDURE ENDBEGIN ;$"#
	BEGIN ENDANY(TRUE) ; IF ENDBLOCK THEN WARN("=","Missed END in Response|Footnote") ELSE PASS END ;

PUBLIC RECURSIVE PROCEDURE ENDONCE ;$"#
	IF ENDBLOCK THEN WARN("=","Missing END in Response|Footnote") ELSE ENDBEGIN ;

PUBLIC RECURSIVE PROCEDURE ENDRESP ;$"#
	BEGIN ENDANY(TRUE) ; PASS ; IF ENDBLOCK THEN MYEND_TRUE ELSE WARN("=","Extra END") ; END ;

PUBLIC RECURSIVE PROCEDURE ENDSTART ;$"#
	BEGIN ENDANY(TRUE) ; STARTS _ STARTS - 1 ; PASS ; END ;
PUBLIC RECURSIVE BOOLEAN PROCEDURE ENDBLOCK ;$"#
IF BLNMS<0 AND LAST>2 THEN BEGIN WARN("=","Extra END ignored"); BLNMS_0; RETURN(FALSE) END ELSE
BEGIN "ENDBLOCK"
INTEGER TYP, OLD, MIX, I, X, L1, L2, PASSED, NARROWED ; STRING S ;
I_ENDCASE; ENDCASE_0; DBREAK; ENDCASE_I; RKJ: 7/11/74;
NARROWED _ PASSED _ FALSE ;
DO COMMENT Skip through ISTK restoring former state and terminating INDENT etc. ;
BEGIN "ISTK ENTRY"
TYP _ IXTYPE(IHED) ;
CASE TYP - 12 OF
BEGIN COMMENT BY TYPE ;
[AREATYPE-12]	IF  NOT DISD(IHED) THEN BEGIN CLOSEAREA(IHED,TRUE) ; NUMBER[LDB(BIXNUM(IHED))]_0 END;
[COUNTERTYPE-12]	IF  NOT DISD(IHED) THEN BEGIN CLOSECOUNTER(IHED,TRUE) ; NUMBER[LDB(BIXNUM(IHED))]_0 END;
[MACROTYPE-12]	BEGIN SSTK[BODY(IHED)]_NULL;TES 11/15/73; NUMBER[LDB(BIXNUM(IHED))] _ 0 END;
[RESPTYPE-12]	BEGIN "POP RESP"
		X _ CLUE(IHED) ; I _ VARIETY(IHED) ; OLD _ OLD!RESP(IHED) ;
		SSTK[BODY(IHED)] _ NULL ; TES 11/15/73 ;
		CASE I-1 MIN 2 OF
		BEGIN "BY VARIETY"
		COMMENT 0 ... Phrase ;
			TES 11/15/73 removed this case ;
		COMMENT 1 ... Inset ;
			IF FINDINSET(X) THEN
			IF  NOT OLD THEN LLSKIP(LEADRESPS, <NEXT!RESP>)
			ELSE	BEGIN
				NEXT!RESP(OLD) _ LLPOST ;
				IF LLPREV<0 THEN LEADRESPS_OLD ELSE NEXT!RESP(LLPREV) _ OLD ;
				END ;
		COMMENT 2 ... Signal ;
			BEGIN "SIGNAL"
			X _ SIGNAL(IHED) ; L1 _ X LSH -29 ;
			IF FINDSIGNAL(X) THEN
			IF  NOT OLD THEN	BEGIN
					S _ NULL ;
					WHILE FULSTR(SIG!BRC) AND (L2_LOP(SIG!BRC)) NEQ L1 DO S_S&L2;
					SIG!BRC _ S & SIG!BRC ;
					LLSKIP(<SIGNALD[L1]>, <NEXT!RESP>) ; COMMENT JAN 8 1973 ;
					END
			ELSE	BEGIN
				NEXT!RESP(OLD) _ LLPOST ;
				IF LLPREV<0 THEN SIGNALD[L1]_OLD ELSE NEXT!RESP(LLPREV) _ OLD ;
				END ;
			END "SIGNAL" ;
		COMMENT 3, 4 ... After, Before ;
			IF FINDTRAN(X,I) THEN
			IF  NOT OLD THEN LLSKIP(WAITRESP, <NEXT!RESP>)
			ELSE	BEGIN
				NEXT!RESP(OLD) _ LLPOST ;
				IF LLPREV<0 THEN WAITRESP_OLD ELSE NEXT!RESP(LLPREV) _ OLD ;
				END ;
		END "BY VARIETY" ;
		END "POP RESP" ;
[MARGTYPE-12]	IF OLD_AREAX(IHED) THEN
			BEGIN NARROWED _ TRUE ; MARGINS(OLD) _ X _ OLD!MARGX(IHED) ;
			LMARG _ IF X THEN LMARGX(X) ELSE 0 ;
			RMARG _ IF X THEN RMARGX(X) ELSE COLWID(OLD) ;
			END ;
[TURNTYPE-12]	IF (OLD_ISTK[IHED-1]) GEQ 0 THEN TURN(OLD LSH -7  , OLD LAND '177 , 1 ) ;
[MODETYPE-12]	BEGIN
		I _ GROUPM ; OLD _ AREAIXM ; X _ GLINEM ; TES 11/15/73 REMOVED J _ THISFONT ;
		ARRBLT(BREAKM, ISTK[IHED-MODEWDS], MODEWDS) ; OLD SWAP AREAIXM ;
		TES 11/14/73 removed IF J NEQ THISFONT THEN SELECTFONT(THISFONT);
		IF I THEN IF  NOT GROUPM THEN DAPART
			  ELSE IF GLINEM=0 THEN GLINEM _ X ;
				COMMENT ADDED THIS ^ LINE 2/20/73 ;
		IF  NOT PASSED AND NARROWED THEN NOPGPH _ 1 ;
		JUSTIFY _ FILL AND ADJUST OR JUSTJUST ;
		PLACE(IF OLD THEN OLD ELSE IXTEXT);
		COMPMAXIMS ;
		END ;
[NUMTYPE-12]	BEGIN
		OLD _ OLD!NUMBER(IHED) ;
		NUMBER[X _ LDB(SYMBOLWD(OLD))] _ OLD ;
		IF X = SYMPAGE THEN BEGIN IXPAGE _ LDB(IXN(X)) ; PATPAGE _ PATT!STRS(IXPAGE) END
		ELSE IF X = SYMTEXT THEN IXTEXT _ LDB(IXN(X)) ;
		END ;
[TABTYPE-12]	BEGIN
		MIX _ IXOLD(IHED) ; I _ 0 ;
		DO TABSORT[I_I+1] _ X _ ISTK[MIX_MIX+1] UNTIL X>TWO(32) ;
		END ;
[MIDTYPE-12]	BEGIN
		IF LENGTH(INPUTSTR)>1 THEN WARN("Imbalance","Unbalanced Response|Footnote! "&SOMEINPUT) ;
		THISWD_SSTK[ISTK[IHED-1]] ; OLD_PLBL ;
		ARRBLT(THISTYPE,ISTK[X_IXOLD(IHED)+1],IHED-X-1) ;
 		LBF _ CVSTR(ILBF) ;
		WHILE FULSTR(LBF) AND LBF[ FOR 1]=0 DO LBF_LBF[1 TO -1] ;
		IF OLD NEQ -TWO(13) THEN
			BEGIN COMMENT UNDEFINED PAGE LABELS -- PASS UP TO OUTER BLOCK ;
			X _ OLD ;
			DO BEGIN L1_X ; X_IF X<0 THEN NUMBER[-X] ELSE ITBL[X] END UNTIL X=-TWO(13) ;
			IF L1<0 THEN NUMBER[-L1] _ PLBL ELSE ITBL[L1] _ PLBL ;
			PLBL _ OLD ;
			END ;
		INPUTSTR_NULL ; IF THATISFULL THEN RDENTITY ELSE INPUTSTR_SWICHBACK ; PASSED_TRUE ;
		END ;
[FONTYPE-12]	IF (OLD_AREAX(IHED)) AND XCRIBL THEN TES 11/15/73 ;
			BEGIN
			FONTSIX(OLD) _ OUTERX(IHED) ;
			TFONT(OLD) _ THISFONTX(IHED) ;
			OFONT(OLD) _ OLDFONTX(IHED) ;
			IF OLD = AREAIXM THEN
				BEGIN
				THISFONT _ TFONT(OLD) ;
				OLDFONT _ OFONT(OLD) ;
				IDASSIGN(FNTFIL[THISFONT], CW) ;
				END ;
			END ;
[PITYPE-12]	PICHAR[PIKEY(IHED)] _ SSTK[PIVAL(IHED)]  TES 11/29/73;
END ; COMMENT BY TYPE ;
IHED _ IXOLD(IHED) ;
END "ISTK ENTRY"
UNTIL TYP=MODETYPE OR IHED=0 ;
DEPTH _ DEPTH - 1 ;
RETURN(PASSED) ;
END "ENDBLOCK" ;
PUBLIC RECURSIVE PROCEDURE TOEND ;$"#
	BEGIN "TOEND"
	BOOLEAN VALID ;
	VALID _ TRUE ;
	DO VALID _ CHUNK(VALID) UNTIL MYEND ;
	MYEND _ FALSE ;
	END "TOEND" ;
FINISHED

ENDOF("BLOCK")
