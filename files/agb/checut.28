& (PROG NIL (CHEOPS-PARAMETERS
(DEFINE-AC AC-A 0)
(DEFINE-AC AC-B 1)
(DEFINE-AC AC-C 2)
(DEFINE-AC AC-N 3)
(DEFINE-AAC PAR 0)
(SET-STARTING-ADDRESS GO))(RETURN T))
&(WHITE-TO-PLAY)

STEP:	ALU:	ALU-FCTN[SET-A], A-BUS FROM PDL-POINTED-TO-BY-PAR $
	ALU:	ALU-FCTN[SETO],  -> PDL-POINTED-TO-BY-PAR,
		@ INHIBIT-WRITE-IF-BRANCH,
		 ALU-LESS+ALU-LESS-OR-EQUAL STEP2|CPOPJ|SCORE|SCORE $
CPOPJ:	ALU:	NO-OP, @ POPJ $
SCORE:	ALU:	NO-OP, @ STATISTICS-BIT,  POPJ $
STEP2:	ALU:	ALU-FCTN[B-A-1], A-BUS FROM AC[AC-C], B-BUS FROM AAC[PAR], -> AAC[PAR] $
	ALU:	ALU-FCTN[SET-C-B], B-BUS FROM AAC[PAR], -> AAC[PAR] $
	ALU:	ALU-FCTN[SETO], -> PDL-POINTED-TO-BY-PAR $
	ALU:	ALU-FCTN[+], A-BUS FROM IMMEDIATE-DATA[1], B-BUS FROM AAC[PAR],
		-> AAC[PAR], @ PUSHJ STEP $
	ALU:	ALU-FCTN[DEC-B], B-BUS FROM AC[AC-A], -> AC[AC-A] $
	ALU:	ALU-FCTN[+], A-BUS FROM IMMEDIATE-DATA[14], B-BUS FROM AAC[PAR],
		-> AAC[PAR], @ PUSHJ STEP $
	ALU:	ALU-FCTN[INC-B], B-BUS FROM AC[AC-A], -> AC[AC-A] $
	ALU:	ALU-FCTN[-], A-BUS FROM IMMEDIATE-DATA[32], B-BUS FROM AAC[PAR],
		-> AAC[PAR], @ INHIBIT-WRITE-IF-BRANCH ALU-LESS STEP4|STEP3 $
STEP3:	ALU:	ALU-FCTN[-], A-BUS FROM IMMEDIATE-DATA[32], B-BUS FROM AAC[PAR],
		-> AAC[PAR], @ PUSHJ STEP $
STEP4:	ALU:	ALU-FCTN[+], A-BUS FROM IMMEDIATE-DATA[14], B-BUS FROM AAC[PAR],
		-> AAC[PAR], @ PUSHJ STEP $
	ALU:	ALU-FCTN[+], A-BUS FROM IMMEDIATE-DATA[1], B-BUS FROM AAC[PAR],
		-> AAC[PAR] $
	ALU:	ALU-FCTN[SETZ], -> PDL-POINTED-TO-BY-PAR $
	ALU:	ALU-FCTN[B-A-1], A-BUS FROM AC[AC-C], B-BUS FROM AAC[PAR], -> AAC[PAR] $
	ALU:	ALU-FCTN[SET-C-B], B-BUS FROM AAC[PAR], -> AAC[PAR] $
	ALU:	ALU-FCTN[SETZ], -> PDL-POINTED-TO-BY-PAR, @ POPJ $

GO:	ALU:	ALU-FCTN[SETZ], -> STATA $
	ALU:	ALU-FCTN[SETZ], -> STATB $

	ALU:	O-BUS FROM IMMEDIATE-DATA[250], -> AAC[PAR] $
LUP1:	ALU:	ALU-FCTN[SETZ], -> PDL-POINTED-TO-BY-PAR, 
		@ INHIBIT-WRITE-IF-BRANCH ALU-EQUAL LUP1A|LUP1B $
LUP1A:	ALU:	ALU-FCTN[DEC-B], B-BUS FROM AAC[PAR], -> AAC[PAR], @ LUP1 $

LUP1B:	ALU:	ALU-FCTN[SETZ], -> AAC[PAR] $
	ALU:	O-BUS FROM IMMEDIATE-DATA[251], -> AC[AC-C] $
	ALU:	O-BUS FROM AC[AC-N], -> AC[AC-A] $
LUP2:	ALU:	NO-OP, @ ALU-EQUAL LUP2A|LUP2B $
LUP2A:	ALU:	O-BUS FROM IMMEDIATE-DATA[14], -> AC[AC-B] $
LUP3:	ALU:	ALU-FCTN[SET-C-A], A-BUS FROM AC[AC-C], -> PDL-POINTED-TO-BY-PAR,
		@ INHIBIT-WRITE-IF-BRANCH ALU-EQUAL LUP3A|LUP3B $
LUP3A:	ALU:	ALU-FCTN[INC-B], B-BUS FROM AAC[PAR], -> AAC[PAR], @ PUSHJ REFLCT $
	ALU:	ALU-FCTN[DEC-B], B-BUS FROM AC[AC-B], -> AC[AC-B], @ LUP3 $
LUP3B:	ALU:	ALU-FCTN[DEC-B], B-BUS FROM AC[AC-A], -> AC[AC-A] @ LUP2 $

LUP2B:	ALU:	ALU-FCTN[SETZ], -> AAC[PAR] $
	ALU:	O-BUS FROM IMMEDIATE-DATA[14], -> AC[AC-B] $
LUP4:	ALU:	O-BUS FROM AC[AC-N], -> AC[AC-A], @ ALU-EQUAL LUP4A|LUP4B $
LUP4A:	ALU:	ALU-FCTN[SET-C-A], A-BUS FROM AC[AC-C], -> PDL-POINTED-TO-BY-PAR,
		@ INHIBIT-WRITE-IF-BRANCH, ALU-EQUAL LUP5A|LUP5B $
LUP5A:	ALU:	ALU-FCTN[INC-B], B-BUS FROM AAC[PAR], -> AAC[PAR], @ PUSHJ REFLCT $
	ALU:	ALU-FCTN[DEC-B], B-BUS FROM AC[AC-A], -> AC[AC-A], @ LUP4A $
LUP5B:	ALU:	ALU-FCTN[+], A-BUS FROM IMMEDIATE-DATA[14], B-BUS FROM AAC[PAR],
		-> AAC[PAR] $
	ALU:	ALU-FCTN[-], B-BUS FROM AAC[PAR], A-BUS FROM AC[AC-N], -> AAC[PAR] $
	ALU:	ALU-FCTN[DEC-B], B-BUS FROM AC[AC-B], -> AC[AC-B], @ LUP4 $

LUP4B:	ALU:	O-BUS FROM IMMEDIATE-DATA[124], -> AAC[PAR] @ PUSHJ PUSH-ONES $
;	ALU:	NO-OP, @PUSHJ PUSH-ONES $
;	ALU:	ALU-FCTN[+], A-BUS FROM IMMEDIATE-DATA[10], B-BUS FROM AAC[PAR], -> AAC[PAR],
;		@ PUSHJ PUSH-ONES $
;	ALU:	NO-OP, @PUSHJ PUSH-ONES $
	ALU:	ALU-FCTN[SETO], -> AC[AC-A] $
	ALU:	O-BUS FROM IMMEDIATE-DATA[250], -> AC[AC-C], @ PUSHJ STEP $
	ALU:	NO-OP, -> HALT $

PUSH-ONES:	ALU:	ALU-FCTN[SETO], -> PDL-POINTED-TO-BY-PAR, PAF[+1 -> PAR], @POPJ $

REFLCT:	ALU:	ALU-FCTN[B-A-1], A-BUS FROM AC[AC-C], B-BUS FROM AAC[PAR], -> AAC[PAR] $
	ALU:	ALU-FCTN[SET-C-B], B-BUS FROM AAC[PAR], -> AAC[PAR] $
	ALU:	ALU-FCTN[SET-C-A], A-BUS FROM AC[AC-C], -> PDL-POINTED-TO-BY-PAR $
	ALU:	ALU-FCTN[B-A-1], A-BUS FROM AC[AC-C], B-BUS FROM AAC[PAR], -> AAC[PAR], $
	ALU:	ALU-FCTN[SET-C-B], B-BUS FROM AAC[PAR], -> AAC[PAR], @ POPJ $
&T 
