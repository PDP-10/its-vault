; SYSTBL.MAC -- SYSTEM DEVICE TABLES	V02.10
;
; COPYRIGHT (C)   1978
; 
; DIGITAL EQUIPMENT CORPORATION,  MAYNARD,   MASS.
;
; THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY ONLY BE USED
; OR COPIED IN ACCORDANDE WITH THE TERMS OF SUCH LICENSE.
;
;
	#NAME	SYSTBL
	#FILE	SYSTBL.MAC
	.TITLE SYSTEM DEVICE TABLES
	; SYSTBL.MAC -- SYSTEM DEVICE TABLES
	; 
	; COPYRIGHT (C)   1978
	; 
	; DIGITAL EQUIPMENT CORPORATION,  MAYNARD,   MASS.
	;

.IIF NDF MMG$T, MMG$T=0
.IIF NDF BF, BF=0
.IIF NDF MTS$J,	MTS$J=0
.IIF EQ	MTS$J + BF, MTT$Y=0
.ENABL	GBL
.GLOBL	$SLOT
.MACRO DEV NAME,S,TYPE
.NLIST
.NLIST CND
.LIST ME
.LIST
.IF NB TYPE
.IF NB NAME
.GLOBL NAME'SYS
.ENDC
.IFTF
.PSECT PNAME$
$SLOT	= $SLOT +1
.IF NB NAME
.RAD50 /NAME/			;PNAME$ - DEVICE ->> NAME <<-
.IFF
.WORD	0			;PNAME$ - DEVICE ->> EMPTY <<-
.ENDC
.PSECT STAT$
.IF NB S
.WORD	S			;STAT$
.IFF
.WORD	0			;STAT$
.ENDC
.PSECT	ENTRY$
.IFF
.IF NB NAME
.IF IDN NAME,BA
BA.NUM	==	2 * <$SLOT - 1>
.ENDC
.IF IDN NAME,TT
.IF NE BF!MTS$J
.WORD	TTLQE			;ENTRY$ - TT ENTRY POINT
.IFF
TT.NUM	==	0
.WORD	0			;ENTRY$
.ENDC
.IFF
.WORD	0			;ENTRY$
.ENDC
.IFF
.WORD	0			;ENTRY$
.ENDC
.IFT
.WORD	NAME'SYS		;ENTRY$ - ENTRY POINT NAME
.ENDC
.PSECT	UNAM1$
.WORD	0			;UNAM1$
.PSECT	UNAM2$
.WORD	0			;UNAM2$
.IF NE BF
.PSECT	OWNER$
.WORD	0,0			;OWNER$
.ENDC
.PSECT	DVREC$
.WORD	0			;DVREC$
.NLIST
.NLIST ME
.LIST CND
.LIST
.ENDM
FILST$	==100000		;RT-11 FILE STRUCTURED DEVICE
RONLY$	== 40000		;READ ONLY DEVICE
WONLY$	== 20000		;WRITE ONLY DEVICE
SPECL$	== 10000		;SPECIAL DIRECTORY STRUCTURED DEVICE
HNDLR$	==  4000		;CALL ABORT ENTRY ON EVERY HARD RESET
SPFUN$	==  2000		;DEVICE ACCEPTS SPECIAL FUNCTIONS
 ; FOLLOWING IS THE DECLARATION OF THE SYSTEM DEVICE TABLES. A DEVICE MAY BE
 ; ADDED TO THE SYSTEM BY EDITING SYSTBL, INSERTING IT VIA THE DEV MACRO.
 ; NOTE: THE TT DEVICE MUST BE POSITIONED FIRST IN THE TABLES!!
$SLOT	= 0		;COUNT OF NUMBER OF DEVICES
 ;
DEV	TT,4			;MUST BE FIRST DEVICE
	#IF	RK
DEV	RK,0+FILST$,SYS
	#ENDC
	#IF	DL
DEV	DL,5+FILST$+SPFUN$,SYS
	#ENDC
	#IF	FL
DEV	FL,100+FILST$,SYS
	#ENDC
	#IF	FD
DEV	FD,101+FILST$,SYS
	#ENDC
	#IF	DY
DEV	DY,6+FILST$+SPFUN$,SYS
	#ENDC
	#IF	DS
DEV	DS,16+FILST$,SYS
	#ENDC
	#IF	DM
DEV	DM,23+FILST$+SPFUN$,SYS
	#ENDC
	#IF	RF
DEV	RF,12+FILST$,SYS
	#ENDC
	#IF	DP
DEV	DP,21+FILST$,SYS
	#ENDC
	#IF	DX
DEV	DX,22+FILST$+SPFUN$,SYS
	#ENDC
	#IF	DT
DEV	DT,1+FILST$,SYS
	#ENDC
	#IF	TM
DEV	MT,11+SPECL$+SPFUN$
	#ENDC
	#IF	TJU
DEV	MM,20+SPECL$+SPFUN$
	#ENDC
	#IF	CT
DEV	CT,13+SPECL$+SPFUN$
	#ENDC
	#IF	LP
DEV	LP,3+WONLY$
	#ENDC
	#IF	PC
DEV	PC,10
	#ENDC
	#IF	PR
DEV	PC,10+RONLY$
	#ENDC
	#IF	CR
DEV	CR,14+RONLY$
	#ENDC
	#IF	BATC$H
DEV	BA,4
	#ENDC
	#IF	ERL$G
DEV	EL,24
	#ENDC
	#IF	NULL
DEV	NL,24
	#ENDC
	#SUBS	"EX$"EMPTY
.REPT	EX$.
DEV	
.ENDR
.PSECT	UNAM1$
DKASSG:: .RAD50	/DK0/
SYASSG:: .RAD50	/SY0/
.PSECT	UNAM2$
.RAD50	/DK /
.RAD50	/SY /
.PSECT	STAT$
.WORD	0,0			;FOR MESSAGE CHANNEL
.PSECT	ENTRY$
.WORD	-1			;TABLE TERMINATOR
.IF NE BF
MSGENT::JBLQE			;MESSAGE HANDLER ENTRY POINT
.ENDC
	#IF	MTTY
  ; MULTI-TERMINAL DEFAULT DEFINITIONS

.IIF NDF DZ11$N, DZ11$N=0
.IIF NDF DZ11$M, DZ11$M=0
.IIF NDF DZ11$L, DZ11$L=0
.IIF NDF MTI$M, MTI$M=0
.IIF NDF MAT$S, MAT$S=0
.IIF NDF DLMD$M, DLMD$M=0
.IIF NDF DZMD$M, DZMD$M=0

.IF NE DZ11$N
.IIF NDF DZSP$D, DZSP$D = 2400	;DEFAULT SPEED IS 300 BAUD
.IIF NDF DZLE$N, DZLE$N = 30	;DEFAULT CHAR LENGTH IS 8
.IIF NDF DZST$P, DZST$P = 00	;DEFAULT STOP CODE IS 1 UNIT STOP
.IIF EQ DZSP$D-1000, DZST$P = 40 ;STOP CODE IS 2 UNIT STOPS FOR 110 BAUD
.ENDC

.IIF EQ MTT$Y,	.NLIST
.IF NE MTT$Y			;+DV56
.SBTTL	TCB DEFINITIONS
 ;
 ; DEFINITION OF TERMINAL CONTROL BLOCK
 ;
.MACRO	DSECT	N
..TEMP	= N
.ENDM
.MACRO	DS	NAME,SIZE,UNIT
.IF NB NAME
.LIST
NAME	== ..TEMP
.NLIST
.ENDC
.IF B SIZE
..TEMP	= ..TEMP+2
.IFF
.IF NB UNIT
..TEMP	= ..TEMP+SIZE
.IFF
..TEMP	= ..TEMP+<2*<SIZE>>
.ENDC
.ENDC
.ENDM
 ;
 ; THE FOLLOWING MACROS DEFINE THE OFFSETS WITHIN A TERMINAL CONTROL
 ; BLOCK (TCB).  THERE IS ONE TCB FOR EACH TERMINAL INSTALLED
 ; IN THE SYSTEM.

	DSECT	0
	DS	T.CNFG		;1 TERMINAL CONFIGURATION WORD 1
	DS	T.CNF2		;1 TERMINAL CONFIGURATION WORD 2
	DS	T.TFIL,1,BYTE	;1 CHAR REQUIRING NULL FILLERS
	DS	T.FCNT,1,BYTE	;1 # OF FILLS REQUIRED
	DS	T.WID		;1 CARRIAGE WIDTH
	DS	T.OCHR,1,BYTE	;1 CURRENT CHARACTER TO PRINT
	DS	T.LPOS,1,BYTE	;1 CURRENT CARRIAGE POSITION
	DS	T.OWNR		;PTR TO OWNING JOB'S IMPURE AREA
	DS	T.STAT		;UNIT STATUS WORD
	DS	T.CSR		;CSR OF KEYBOARD (RECEIVER)
	DS	T.VEC		;DEVICE VECTOR
	DS	T.PRI		;DEVICE PRIORITY
.IF NE MTI$M!DL11$M
	DS	T.RTRY		;RE-TRY COUNT FOR RE-TRANSMISSION OF OUTPUT CHR. ;SL12
	DS	T.TBLK,7	;TIME OUT BLOCK
.ENDC
	DS	T.JOB,1,BYTE	;JOB # OF OWNER
	DS	T.PUN,1,BYTE	;PHYSICAL UNIT # (0 FOR DL11)
	DS	T.NFIL,1,BYTE	;ACTIVE FILL COUNT
	DS	T.PTTI,1,BYTE	;PREVIOUS CHARACTER
	DS	T.TCTF,1,BYTE	;CHARACTER FOR SPECIAL FILL
	DS	T.TNFL,1,BYTE	;NUMBER OF SPECIAL FILLERS
.IF NE MAT$S
.IF EQ MMG$T
	DS	T.AST		;TERMINAL AST FLAG WORD
.IFF
	DS	T.AST,2		;TERMINAL AST FLAG WORD
.ENDC
.ENDC
	DS	T.TID,2		;BUFFER, PAR OF PROMPT STRING
	DS	T.TTLC		;2 LINE COUNT
	DS	T.IRNG		;2 INPUT RING LOW LIMIT
	DS	T.IPUT		;2 INPUT 'PUT' POINTER FOR INTERRUPTS
	DS	T.ICTR		;2 INPUT CHARACTER COUNT
	DS	T.IGET		;2 INPUT 'GET' POINTER FOR TTYIN
	DS	T.ITOP		;2 INPUT RING HI LIMIT
	DS	,TTYIN,BYTE	;2 INPUT RING BUFFER (SAME SIZE AS CONSOLE RING)
	DS	T.OPUT		;2 OUTPUT 'PUT' POINTER FOR .TTYOUT
	DS	T.OCTR,1,BYTE	;2 OUTPUT CHARACTER COUNT
	DS	,1,BYTE		;2 CTRL/O FLAG
	DS	T.OGET		;2 OUTPUT 'GET' POINTER FOR INTERRUPT
	DS	T.OTOP		;2 OUTPUT RING HI LIMIT
	DS	,TTYOUT,BYTE	;2 OUTPUT RING BUFFER (SAME SIZE AS CONSOLE RING)
.IF	NE	ESC$P
	DS	T.ECEI,2	;2 ESCAPE SEQUENCE EMT INPUT BLOCK
	DS	T.ECEO,2	;2 	"	"  EMT OUTPUT BLOCK
	DS	T.ECII,2	;2	"	"  INTERRUPT INPUT
	DS	T.ECIO,2	;2	"	"	"    OUTPUT
	DS	T.ESCP		;2 PROGRAM ESC SEQ OUTPUT STATUS
	DS	T.ESCK		;2 KBD ESC SEQ ECHO STATUS
.ENDC

TCBSZ	==  ..TEMP		;SIZE OF TCB IN BYTE

 ; DEFINITION OF BITS IN T.CNFG

HWTAB$	== 1			; 0 HARDWARE TAB IF SET
CRLF$	== 2			; 1 OUTPUT CR/LF WHEN T.TLPOS>T.WID
FORM$	== 4			; 2 HARDWARE FF IF SET
FBTTY$	== 10			; 3 PROCESS CTRL/F & CTRL/B IF SET
ESCSQ$	== 20			; 4 ENABLE ESC SEQUENCE PROCESSING
ESCFL$	== 40			; 5 FILTER ESC SEQUENCES
TCBIT$	== 100			; 6 INHIBIT TT WAIT IF SET
PAGE$	== 200			; 7 XON/XOFF PROCESSING ENABLED
LINSP$	== 7400			;8-11 LINE SPEED MASK
TTSPC$	== 10000		;12 CHAR MODE INPUT (SPECIAL MODE)
REMOT$	== 20000		;13 TERMINAL IS REMOTE IF SET
TTLC$	== 40000		;14 LOWER TO UPPER CASE CONVERSION DISABLED IF SET
BKSP$	== 100000		;15 USE BACKSPACE FOR RUBOUT
VT05$	== BKSP$		;   USE SAME BIT TO INDICATE VT05
INICF$ == HWTAB$ + FORM$ + ESCSQ$ + ESCFL$ + TCBIT$ + TTSPC$ + TTLC$ +BKSP$

 ; DEFINITION OF BITS IN T.STAT

FILL$	== 1			; 0 FILL SEQUENCE IN PROGRESS
CTRLU$	== 2			; 1 CTRL/U IN PROGRESS
DTACH$	== 20			; 4 DETACH IN PROGRESS
WRWT$	== 40			; 5 .PRINT <-> .WRITE SYNCH FLAG
INEXP$	== 100			; 6 OUTPUT INTERRUPT EXPECTED
PAGE$	== 200			; 7 TERMINAL IS X-ED OFF
				;NOTE: SAME POSITION AS T.CNFG!!
SHARE$	== 2000			;10 TERMINAL IS SHARED CONSOLE
HNGUP$	== 4000			;11 TERMINAL HAS HUNG UP
DZ11$	== 10000		;12 TERMINAL INTERFACE IS DZ11
CTRLC$	== 40000		;14 DOUBLE CTRL/C WAS STRUCK
CONSL$	== 100000		;15 TERMINAL IS ACTING AS CONSOLE (DL11 ONLY)
INIST$	== FILL$ + CTRLU$ + PAGE$ + CTRLC$

; ASYNCHRONOUS TERMINAL STATUS WORD BIT DEFINITIONS:

AS.CTC	== 100000		;DOUBLE CTRL/C
AS.INP	== 40000		;INPUT IS AVAILABLE
AS.OUT	== 20000		;OUTPUT BUFFER EMPTY

AS.CAR	== 200			;MODEM CARRIER IS PRESENT
 ; TCBBLK IS A MACRO TO DEFINE A TERMINAL CONTROL BLOCK.
 ; 	TYPE = [DL,DZ]
 ;	LINE = [LOCAL,REMOTE]
 ;	CSR = RECEIVER CSR
 ;	UNIT = LINE # (0 FOR DL, 0-7 FOR DZ)
 ;	LUN = LOGICAL UNIT NUMBER (0-N)
 ;	VEC = RECEIVER VECTOR
 ;	CTRL = CONTROLLER NUMBER (E.G., 0 OR 1 FOR DZ; 0,1,...,7 FOR DL)
.MACRO	TCBBLK	TYPE,LINE,CSR,VEC,UNIT,CTRL
.NLIST
.NLIST	CND
.LIST	ME
.LIST
LUN	= LUN + 1
CTMP	= 0
STMP	= 0
.IF IDN TYPE,DL
.IF EQ CTRL
.IF NE BF
STMP	= STMP + CONSL$ + SHARE$
CTMP	= CTMP + FBTTY$
.IFF
STMP	= STMP + CONSL$
.ENDC
.ENDC
X=CTRL*TCBSZ+DLTCB
.ENDC
.IF IDN TYPE,DZ
X=<CTRL+1*UNIT>*TCBSZ+DZTCB
CTMP	= CTMP + DZSP$D
STMP	= STMP + DZ11$
.ENDC
.IF NB LINE
.IF IDN LINE,REMOTE
CTMP	= CTMP + REMOT$
STMP	= STMP + HNGUP$
.ENDC
.ENDC
CTMP	= CTMP + CRLF$ + PAGE$
	.WORD	CTMP	;T.CNFG - TCB FOR TYPE CONTROLLER # CTRL PUN # UNIT (LINE)
	.WORD	0			;T.CNF2
	.BYTE	0,0			;T.TFIL, T.FCNT
	.WORD	80.			;T.WID
	.BYTE	0,0			;T.OCHR, T.LPOS
.IF NE BF
	.WORD	0			;T.OWNR
.IFF
.IF EQ LUN-1
PBCTCB:: .WORD	DLTCB			;T.OWNR
.IFF
	.WORD	0			;T.OWNR
.ENDC
.ENDC
	.WORD	STMP			;T.STAT
	.WORD	CSR			;T.CSR
	.WORD	VEC,340+'CTRL		;T.VEC, T.PRI
.IF NE MTI$M!DL11$M
	.WORD	0		;T.RTRY						;SL12
	.WORD	0,0,0,0,177400+<<LUN-1>*2>,-1,0
.ENDC
	.BYTE	0			;T.JOB
	.BYTE	UNIT			;T.PUN
	.BYTE	0,0			;T.NFIL, T.PTTI
	.BYTE	0,0			;T.TCTF, T.TNFL
.IF NE MAT$S
	.WORD	0			;T.AST
.IF NE MMG$T
	.WORD	0
.ENDC
.ENDC
	.WORD	0,0			;T.TID
	.WORD	0			;T.TTLC
	.WORD	X+T.ITOP+2		;T.IRNG *** BOOT ***
	.WORD	X+T.ITOP+2		;T.IPUT *** BOOT ***
	.WORD	0			;T.ICTR
	.WORD	X+T.ITOP+2		;T.IGET *** BOOT ***
	.WORD	X+T.ITOP+2+TTYIN	;T.ITOP *** BOOT ***
	.BLKB	TTYIN			;INPUT RING BUFFER
	.WORD	X+T.OTOP+2		;T.OPUT *** BOOT ***
	.WORD	0			;T.OCTR
	.WORD	X+T.OTOP+2		;T.OGET *** BOOT ***
	.WORD	X+T.OTOP+2+TTYOUT	;T.OTOP *** BOOT ***
	.BLKB	TTYOUT			;OUTPUT RING BUFFER
.IF	NE	ESC$P
	.REPT	4
	.WORD	0			;UNINITIALIZED COROUTINE POINTER
	.WORD	0			;ESCTST SCRATCHPAD
	.ENDR
	.WORD				;PROGRAM OUTPUT ESC SEQ STATUS
	.WORD				;KBD ECHO ESC SEQ STATUS
.ENDC
.NLIST
.LIST	CND
.NLIST	ME
.LIST
.ENDM
DL11$N	= DL11$L + DL11$M	;# OF DL11'S = LOCAL PLUS REMOTE
.IIF EQ DL11$L, .ERROR MUST HAVE AT LEAST ONE LOCAL DL11 FOR CONSOLE.
.IIF GT DL11$N-8., .ERROR MAXIMUM OF 8 DL11 INTERFACES PERMITTED.
.PSECT	MTTY$
 ;
 ; TABLE OF POINTERS TO TCB'S. ORDERED BY LOGICAL UNIT NUMBER.
 ; TCBLST IS A GLOBAL LABEL FOR THE START OF THE TCB POINTER TABLE.
 ; DLTBL IS A LABEL FOR THE START OF THE DL11 POINTERS AND DZTBL IS A
 ; LABEL FOR THE START OF THE DZ11 POINTERS.
 ;
TCBLST::
.IF NE DL11$N
 ;
 ; DL11'S COME FIRST IN TABLE
 ;
DLTBL::			;REFERENCE LABEL
.IRP	T,<0,1,2,3,4,5,6,7>
TTMP	= 'T
.IF GT DL11$N-TTMP
.WORD	DLTCB+<TTMP*TCBSZ>	;TCB PTR FOR DL11 #'T *** BOOT ***
.ENDC
.ENDM
.ENDC

.IF NE DZ11$N
.IIF GT DZ11$N-2,	.ERROR	TOO MANY DZ11 SPECIFIED, MAXIMUM IS TWO
 ; POINTERS TO TCB'S FOR DZ11
DZTCTB::					;TABLE OF POINTERS TO DZ11 TCB'S
.IRP	Q,<0,1,2,3,4,5,6,7,10,11,12,13,14,15,16,17>
TTT	= 'Q
.IF GT DZ11$L - TTT
.WORD	DZTCB + <TTT * TCBSZ>	;TCB PTR FOR DZ11 LOCAL LINE #'Q **BOOT**
.IFF
.IF GT DZ11$L + DZ11$M - TTT
.WORD	DZTCB + <TTT * TCBSZ>	;TCB PTR FOR DZ11 REMOTE LINE #'Q **BOOT**
.IFF
.IF LT TTT- <DZ11$N*8.>
	.WORD	0
.ENDC
.ENDC
.ENDC
.ENDM
.ENDC
.IF GT DL11$N-1
DLTMP::	.WORD	0			;PSW SAVE AREA FOR DL11
.ENDC
.IF NE DZ11$N
DZTBL::					;REFERENCE LABEL
TTMP	= 0
.REPT	DZ11$N
.WORD	DZTCTB+<TTMP*16.>		;*** BOOT ***
					;POINTER TO TABLE OF TCB POINTERS
TTMP	= TTMP + 1
.ENDR
.ENDC
.IF GT DZ11$N-1
DZTMP::.WORD	0			;PSW SAVE AREA FOR DZ11
.ENDC
TCBPEND::				;REFERENCE LABEL FOR BOOT
.IF NE DZ11$N
DZCSR::					;TABLE OF CSR'S FOR DZ11
.IRP	T,<0,1>
.IF GT DZ11$N-T
.WORD	DZCS$'T
.ENDC
.ENDM
.ENDC

.IIF LT DL11$N-DL11$M,	.ERROR	ERROR IN DL11 SPECIFICATION
 ;
 ; TERMINAL CONTROL BLOCKS ALLOCATED IN ORDER OF INCREASING UNIT NUMBER:
 ; LOCAL DL11 LINES FIRST, THEN REMOTE DL11S, THEN LOCAL DZ11 LINES, THEN
 ; REMOTE DZ11 LINES. LOGICAL UNIT 0 IS THE BOOT-TIME CONSOLE LUN.

LUN	= 0				;INITIALIZE LOGICAL UNIT COUNTER

DLTCB::					;REFERENCE LABEL
.IRP	Q,<0,1,2,3,4,5,6,7>
.IF GT DL11$L-Q
TCBBLK	DL,LOCAL,DLC$'Q,DLV$'Q,0,Q	;TCB FOR LOCAL DL11
.IFF
.IF GT DL11$M+DL11$L-Q			;DEFINE TCB'S FOR REMOTE LINES
TCBBLK	DL,REMOTE,DLC$'Q,DLV$'Q,0,Q	;TCB FOR REMOTE DL11-E
.ENDC
.ENDC
.ENDM
 ;
.IIF LT DZ11$N*8.-DZ11$L-DZ11$M, .ERROR	ERROR IN DZ11 SPECIFICATION
 ;
DZTCB::					;REFERENCE LABEL
.IRP	P,<0,1>
.IRP	Q,<0,1,2,3,4,5,6,7>
.IF GT DZ11$N - P
.IF GT DZ11$L - <P*8.> - Q
TCBBLK	DZ,LOCAL,DZCS$'P,DZVC$'P,Q,P	;TCB FOR DZ11 #'P LINE #'Q, LOCAL
.IFF
.IF GT DZ11$M + DZ11$L - <P*8.> - Q
TCBBLK	DZ,REMOTE,DZCS$'P, DZVC$'P,Q,P	;TCB FOR DZ11 #'P LINE #'Q, REMOTE
.ENDC
.ENDC
.ENDC
.ENDM
.ENDM
.GLOBL	TCBMAX
TCBMAX	= <.-DLTCB>/TCBSZ		;# OF TCB'S
.ENDC					;-DV56
.IIF EQ MTT$Y,.LIST
	#ENDC
.END

