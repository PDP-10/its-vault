.sec(The IMSL Library,imsl!lib)

The IMSL Library is a set of numerical analysis routines written originally
in Fortran and translated to Lisp by an automatic Fortran->Lisp translator
(written by KMP@MC).

.subsec(Information)

The calling conventions of the original Fortran have been adhered to 
wherever possible. Some info on the source Fortran calling conventions
can be gotten via

			:INFO IMSL

Support: To request IMSL routines, send mail to IMSL@MC.

.subsec(Usage)

To use the library, do the following in a Macsyma:

	LOADFILE(IMSL,FASL,SHARE2)$

This will set up an environment for the running of IMSL routines
and will make them load automatically when you call them.

Things which you can use after having done this are:

.function(POLYROOTS,polynomial)
A package that uses Jenkins-Traub method for finding zeros
of polynomials with real coefficients.
See documentation in MC:IMSL1;ZRPOLY USAGE.
See demo BATCH(ZRPOLY,DEMO,IMSL1)$
.endfunction
.function(ZSOLVE,|[f1,f2,f3,...,fn],[x1,x2,x3,...,xn])
A package for solving systems non-linear equations.
See documentation in MC:IMSL1;ZSOLVE USAGE.
See demo BATCH(ZSOLVE,DEMO,IMSL1)$
.endfunction
LEQT1B, LEQT1F - These work exactly as described in the IMSL documentation.
		 See demos    BATCH(LEQT1B,DEMO,IMSL1)$ 
		 and	      BATCH(LEQT1F,DEMO,IMSL1)$
		 Nicer interfaces will be created at a later date if there
		 is interest in this.

For info on other functions that get defined, print the file
MC:IMSL1;.IMSL. > which contains commented definitions.

