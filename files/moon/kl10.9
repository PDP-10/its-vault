	TITLE Ackerman's Function

;THIS PROGRAM RUNS STANDALONE ON THE KL10 WITH CACHE AND PAGING TURNED OFF

A=1
B=2
C=3
D=4
E=5
T=6
TT=7
I=10
J=11
Q=12
R=13
P=17

DDT=774000

LOC 1000

;PATCH THESE WITH DDT TO TELL THE PROGRAM WHAT TO DO.

CYL:	0	;NEXT CYLINDER TO BE DONE
TRK:	0	;NEXT TRACK TO BE DONE
STOPNT:	0	;STORING POINTER, RELATIVE TO TAPBUF
CYLS:	120.	;NUMBER OF CYLINDERS TO DO BEFORE RETURNING TO DDT.
		;SHOULD BE A MULTIPLE OF 4

LPDL==60
PDL:	-LPDL,,.
	BLOCK LPDL

ICWA=20

.INSRT SYSTEM;RH10 >

;USUAL RHGET AND RHSET ROUTINES
;STUFF IN TT

RHGET:	TLZA TT,%HRLOD
RHSET:	 TLO TT,%HRLOD
	DATAO DSK,TT
	MOVEI TT,10
	SOJG TT,.
	DATAI DSK,TT
	TLNE TT,%HDERR
	 JSR LOSE		;DRIVE NOT RESPONDING, BUS LOSING, ETC.
	ANDI TT,177777
	POPJ P,

;READ DISK UNIT 0.
;A HAS ADDRESS TO READ INTO
;B HAS WORD COUNT
;C HAS CYLINDER
;D HAS SURFACE
;E HAS SECTOR
;CLOBBERS ARGS

RDISK:	IRPS CM,,CLR RDP ACK
	 MOVEI TT,%HM!CM		;%HRDCL=0
	 PUSHJ P,RHSET
	 TERMIN

RDISK0:	JUMPE B,RDISK9
	MOVE TT,C
	HRLI TT,%HRCYL
	PUSHJ P,RHSET
	MOVE TT,D
	LSH TT,8
	IOR TT,E
	HRLI TT,%HRADR
	PUSHJ P,RHSET
	MOVEI T,-1(A)
	CAIGE B,20000
	 JRST [	MOVN TT,B
		JRST .+2 ]
	MOVNI TT,20000
	ADD B,TT
	SUB A,TT
	LSH TT,4
	HRL T,TT
	MOVEM T,ICWA
	ASH TT,-4-7		;- # SECTORS
	MOVNS TT
	ADD E,TT		;ADVANCE THE DISK ADDR
	IDIVI E,NSECS
	EXCH E,T		;# SURFACES
	ADD T,D
	IDIVI T,NHEDS
	MOVE D,TT
	ADD C,T			;# CYLINDERS
	
	SETZM ICWA+1
	MOVSI TT,%HRCTL
	HRRI TT,%HMRED
	MOVEI T,ICWA
	DPB T,[$HCICWA TT]
	PUSHJ P,RHSET
	CONSZ DSK,%HIBSY
	 JRST .-1
	CONSZ DSK,%HIERR
	 JSR LOSE		;DISK ERROR
	MOVSI TT,%HRSTS
	PUSHJ P,RHGET
	TRNE TT,%HSERR
	 JSR LOSE		;DISK ERROR
	JRST RDISK0		;TRANSFER NEXT HUNK

RDISK9:	POPJ P,

;WRITE TAPE UNIT 0
;A HAS ADDRESS TO WRITE FROM
;B HAS WORD COUNT
;WRITES A BUNCH OF 1024 WORD RECORDS FOLLOWED BY EOF
;CLOBBERS ITS ARGS

MAGCOM==0_15.+1_14.+2_6.+1_13.

MWRITE==MAGCOM+4000
MWREOF==MAGCOM+5000
MNOOP==MAGCOM+0000
MSPRR==MAGCOM+7000
MTC==340
MTS==344
JOBDON==100

WRTAPE:	JUMPLE B,WRTAP9
	MOVEI TT,-1(A)
	CAIGE B,2000
	 JRST [	MOVN T,B	;LAST RECORD IS SHORT
		JRST .+2 ]
	MOVNI T,2000
	ADD B,T		;ADVANCE WORD COUNT AND ADDRESS
	SUB A,T
	LSH T,4
	HRL TT,T
	MOVEM TT,ICWA
	SETZM ICWA+1
	DATAO MTS,[ICWA]
	CONO MTC,MWRITE
	CONSO MTS,JOBDON
	 JRST .-1
	CONI MTS,TT		;GET ERROR STATUS
	TDNE TT,[20440400]	; ERRORS?
	 JSR LOSE
	JRST WRTAPE

WRTAP9:	SETZM ICWA
	CONO MTC,MWREOF
	CONSO MTS,JOBDON
	 JRST .-1
	CONO MTC,MNOOP
	POPJ P,

LOSE:	0
	JRST DDT		;JUST GO TO DDT, WE DON'T KNOW HOW TO TYPE OUT

GO:	SETOM LOSE
	MOVE P,PDL
NXT:	MOVEI A,DSKBUF		;READ NEXT TRACK
	MOVEI B,TRKLEN
	MOVE C,CYL
	MOVE D,TRK
	MOVEI E,0
	PUSHJ P,RDISK
	MOVE B,[440600,,TAPBUF]	;FETCH BYTES AND STORE INTO TAPE BUFFER
	ADD B,STOPNT
	MOVSI D,-TRKLEN		;D IS AOBJN POINTER TO DSKBUF
CVB:	IRPS POS,,22 32 00 10
	 LDB E,[POS*10000+0600,,DSKBUF(D)]  ;GET NEXT BYTE
	 IDPB E,B
	 TERMIN	
	AOBJN D,CVB
	MOVEI B,TRKLEN*4/6	;ADVANCE TAPE POINTER
	ADDB B,STOPNT
	CAIGE B,TPBFLN
	 JRST ADP1
	MOVEI A,TAPBUF		;TIME TO WRITE TO TAPE
	PUSHJ P,WRTAPE
	SETZM STOPNT
ADP1:	AOS B,TRK		;ADVANCE DISK POINTERS
	CAIGE B,NHEDS
	 JRST NXT
	SETZM TRK
	AOS CYL
	SOSLE CYLS
	 JRST NXT
	MOVEI A,TAPBUF		;DONE, WRITE OUT FINAL TAPE STUFF IF ANY
	SKIPE B,STOPNT
	 PUSHJ P,WRTAPE
	SETZM STOPNT
	SETZM ICWA		;PUT 2 EOFS AT END OF TAPE
	CONO MTC,MWREOF
	CONSO MTS,JOBDON
	 JRST .-1
	CONO MTC,MSPRR		;AND BACKSPACE OVER ONE OF THEM
	CONSO MTS,JOBDON
	 JRST .-1
	CONO MTC,MNOOP
	SETZM LOSE		;NOT LOSING
	JRST DDT

PAT:
PATCH:	BLOCK 100

CONSTANTS
VARIABLES

;BUFFERS

TRKLEN==12.*128.		;12 SECTORS OF DATA PER TRACK
DSKBUF:	BLOCK TRKLEN		;THIS HOLDS ONE TRACK READ FROM DISK

TPBFLN==4.*19.*1024.		;4 CYLINDERS OF 19 TRACKS OF 6K 6-BIT BYTES.
TAPBUF:	BLOCK TPBFLN

IFG .-DDT, .ERR TOO BIG

END GO
