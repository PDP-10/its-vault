TITLE QUICK HACK

A=1
B=2
C=3
D=4
E=5
F=6
G=7
H=10
P=11
I=12
J=13
K=14
L"=15
M=16
N=17

PLTC==1
FC==2
PLBUFL==100

VI==40
IV==20
RT==1	;+X
LT==2	;-X
UP==10	;-Y
DN==4	;+Y

MAXNP"==10.

PLOTCT=373
PLBN=100
LOC 3000

;DESTIN X IN A, Y IN M, FIG PTR IN E

PLOTGO:	HLRE B,(E)
	ASH B,11.
	MUL B,FGSCAL
	ADD A,B
	HRRE B,(E)
	ASH B,11.
	MUL B,FGSCAL
	AOS E
	ADD M,B
PLOTG0:	MOVEM A,PLX'	;HERE IF NO FIG PTR
	MOVEM M,PLY'
	ADD A,PLINC
	ADD M,PLINC
	MUL A,PLSCAL	
	MUL M,PLSCAL
PLOTG8:	SUB A,PLXPOS'
	SUB M,PLYPOS'
	JUMPN A,PLOTG9
	JUMPE M,CPOPJ
PLOTG9:	PUSHJ P,PLINV
	MOVEI C,RT+DN
	JUMPGE A,PLOTG1
	XORI C,RT+LT
	MOVMS A
PLOTG1:	JUMPGE M,PLOTG2
	XORI C,UP+DN
	MOVMS M
PLOTG2:	CAMG A,M
	JRST PLOTG3
	EXCH A,M
	SKIPA B,[UP+DN]
PLOTG3:	MOVEI B,RT+LT
	SUB M,A
	PUSHJ P,PLINE9
	MOVE A,M
	TDZ C,B
PLINE9:	JUMPE A,CPOPJ
PLINE1:	PUSHJ P,PLOINT
	SOJG A,PLINE1
	POPJ P,

PLOPN:	.OPEN PLTC,[SIXBIT \  #PLT\]
	.VALUE
	JRST PLBLT

PLINV:	SKIPA C,[IV]
PLVIS:	MOVEI C,VI
	CAMN C,PLINVS'
	POPJ P,
	MOVEM C,PLINVS
PLOINT:	IDPB C,PLBP
	TRNE C,RT
	AOS PLXPOS
	TRNE C,LT
	SOS PLXPOS
	TRNE C,UP
	SOS PLYPOS
	TRNE C,DN
	AOS PLYPOS
	EXCH C,PLBP
	CAME C,[10700,,PLBUFE-1]
	JRST PLOIN1
	MOVE C,[-PLBUFL,,PLBUF]
	.IOT PLTC,C
PLBLT:	MOVE C,[440700,,PLBUF]
PLOIN1:	EXCH C,PLBP
CPOPJ:	POPJ P,

PLCLS:	SKIPGE D,PLBP
	JRST PLCLS1
	LSH D,-36
	DPB D,[301400,,PLBP]
	MOVEI C,0
	DPB C,PLBP
	HRRZ D,PLBP
	MOVSI D,-PLBUF(D)
	EQVI D,-PLBUF-1
	.IOT PLTC,D
PLCLS1:	.CLOSE PLTC,
	POPJ P,

PLBP:	0
PLBUF:	BLOCK PLBUFL
PLBUFE:


PLSCAL:	(1760)
FGSCAL:	(4000)
PLINC:	1253

PLOTXT:	2100.


PLFIG:	PUSH P,E
	HRLI E,441400
PLFIG0:	ILDB B,E
	LDB A,[700,,B]
	JUMPE A,PLFIG1
	TRNE B,200
	PUSHJ P,PLINV
	TRZN B,200
	PUSHJ P,PLVIS
	LDB C,[100400,,B]
	ASH A,9+2
	MOVE M,A
	XCT PLXI(C)
	XCT PLYI(C)
	MUL A,FGSCAL
	MUL M,FGSCAL
	ADDB A,PLX'
	ADDB M,PLY'
	PUSHJ P,PJ
	JRST PLFIG0

PLFIG1:	TRNE B,200
	JRST PLFIG2
	MOVE C,(P)
	ILDB A,E
	SUB C,A
	PUSH P,E
	MOVE E,C
	PUSHJ P,PLFIG
	POP P,E
	JRST PLFIG0

PLFIG2:	MOVE A,1(E)
	ASH A,2
	MUL A,FGSCAL
	MOVE B,2(E)
	ASH B,2
	MUL B,FGSCAL
	POP P,C
	POPJ P,

PLXI:	MOVEI A,0
	JFCL
	JFCL
	JFCL
	MOVNS A
	MOVNS A
	MOVEI A,0
	MOVNS A

	ASH A,-1
	JFCL
	ASH A,-1
	JFCL
	MUL A,[(600000)]
	MOVNS A
	MUL A,[(600000)]
	MOVNS A

PLYI:	MOVNS M
	MOVNS M
	JFCL
	MOVEI M,0
	MOVNS M
	MOVEI M,0
	JFCL
	JFCL

	MOVNS M
	MUL M,[(600000)]
	JFCL
	ASH M,-1
	MOVNS M
	MUL M,[(600000)]
	JFCL
	ASH M,-1



PJ:	ADD A,PLINC
	ADD M,PLINC
	MUL A,PLSCAL
	MUL M,PLSCAL
	SUB A,PLXPOS
	SUB M,PLYPOS
PJ0:	MOVEI B,RT
	MOVEI C,DN
	SKIPGE A
	MOVEI B,LT
	SKIPGE M
	MOVEI C,UP
	MOVMS A
	MOVMS M
	CAMGE A,M
	EXCH B,C
	MOVEM B,PFSD1'
	MOVEM C,PFSD2'
	CAML A,M
	EXCH A,M
	JUMPE M,CPOPJ
	ASH A,17.
	IDIV A,M
	MOVEI B,0
PFS2:	ADD B,A
	MOVE C,PFSD1
	CAIL B,200000
	IOR C,PFSD2
	CAIL B,200000
	SUBI B,400000
	PUSHJ P,PLOINT
	SOJG M,PFS2
	POPJ P,

XMRG:	25000.
YMRG:	25000.
XMAX:	75000.
YMAX:	200000.

ICR:	MOVE A,XMRG
	MOVEM A,SX
	MOVE M,LNHITE
	MUL M,FGSCAL
	ADDB M,SY
	POPJ P,

LNHITE:	448000.

BEG:	MOVEI P,PDL-1
	MOVSI A,-200
BEG0:	SKIPN B,PLOTCT(A)
	JRST BEG2
	ADD B,[441400,,1]
BEG1:	ILDB C,B
	CAIE C,200
	JRST BEG1
	MOVE C,1(B)
	MOVEM C,WTAB(A)
BEG2:	AOBJN A,BEG0
	CLEARM PLX
	CLEARM PLY
	CLEARM PLXPOS
	CLEARM PLYPOS

BEGG:	PUSHJ P,PLOPN
	.OPEN FC,FN
	.VALUE
BEGG1:	.IOT FC,A
	CAIN A,"\
	JRST BEGG3
	CAIE A,14
	JRST BEGG1
	JRST PLEND

YTAB:	BLOCK 12
BEGY:	.IOT FC,A
	MOVE B,SY
	MOVEM B,YTAB-"0(A)
	JRST BEGG3
BEGQ:	.IOT FC,A
	MOVE B,YTAB-"0(A)
	MOVEM B,YMRG
BEGG3:	MOVEI B,0
BEGG3A:	.IOT FC,A
	IRPC XX,,CTBSYQ
	CAIN A,"XX
	JRST BEG!XX
TERMIN
	CAIN A,15
	JRST BEGG2
	CAIL A,"0
	CAILE A,"9
	.VALUE
	IMULI B,10.
	ADDI B,-"0(A)
	JRST BEGG3A

BEGCT1:	12500.
	12500.
	112500.
BEGCT2:	180000.
	80000.
	180000.
BEGC:	MOVE A,BEGCT1(B)
	MOVEM A,XMRG
	MOVE A,BEGCT2(B)
	MOVEM A,XMAX
	JRST BEGG3
BEGT:	MOVEM B,YMRG
	JRST BEGG3
BEGB:	MOVEM B,YMAX
	JRST BEGG3
BEGST1:	350000.
	350000.
	448000.
BEGST2:	24000,,
	10000,,
	4000,,
BEGS:	MOVE A,BEGST1(B)
	MOVEM A,LNHITE
	MOVE A,BEGST2(B)
	MOVEM A,FGSCAL
	JRST BEGG3
BEGG2:	MOVE C,[440700,,TXT]
	MOVEM C,TXP
BEGG4:	.IOT FC,A
	IDPB A,C
	CAIN A,"\
	JRST BEGG5
	CAIE A,14
	JRST BEGG4
	MOVEI A,0
	DPB A,C
BEGG5:	MOVE A,XMRG
	MOVE M,YMRG
	MOVEM M,SY
PLW:	MOVEM A,SX'
	MOVE K,TXP
	MOVEM K,STXP'
PLW1:	ILDB K,TXP
	JUMPE K,PLW2A
	CAIN K,"\
	JRST BEGG3
	CAIN K,11
	JRST PLW9
	CAIE K,40
	CAIN K,15
	JRST PLW2
	MOVE B,WTAB(K)
PLW9A:	MUL B,FGSCAL
	ADD A,B
	JRST PLW1
PLW9:	MOVE B,TABWID
	JRST PLW9A
PLW2:	CAMN A,SX
	JRST PLW
PLW2A:	CAMLE A,XMAX
	PUSHJ P,ICR
	CAML M,YMAX
	JRST BEGG3
	MOVE K,STXP
	MOVEM K,TXP
	MOVE A,SX
	MOVEM A,PLOTIW

PLOTI1:	MOVE M,SY'
PLOTI2:	ILDB K,TXP
	JUMPE K,PLEND
	CAIN K,11
	JRST PLOTI5
	CAIN K,40
	JRST PLOTI3
	CAIN K,15
	JRST PLOTI4
	MOVE E,PLOTCT"(K)
	JUMPE E,PLOTI2
	PUSHJ P,PLOTGO
	PUSHJ P,PLFIG
	ADDB A,PLOTIW'
	JRST PLOTI1

PLOTI4:	PUSHJ P,ICR
	JRST PLW

PLOTI5:	SKIPA A,TABWID
PLOTI3:	MOVE A,EMWID"
	MUL A,FGSCAL
	ADDB A,PLOTIW
	JRST PLW
PLEND:	PUSHJ P,PLINV
	PUSHJ P,PLCLS
	.VALUE
TABWID:	342._12
EMWID:	114._12
ENWID:	76._12
FN:	(SIXBIT \DSK\)
	SIXBIT \FOB\
	SIXBIT \ALL\
CONSTA
VARIAB
WTAB:	BLOCK 200
PDL:	BLOCK 40
TXP:	440700,,TXT
TXT:	BLOCK 4000
	-1
END BEG
B A,T1
	CAIE A,15
	JRST ST2

STR:	CAMN T1,[10700,,CBUF-1]
	JRST ST1
	LDB A,T1
	.IOT TYOC,A
	ADD T1,[70000,,]
	JUMPGE T1,ST2
	SUB T1,[430000,,1]
	JRST ST2

CR:	.IOT TYOC,[15]
	.IOT TYOC,[12]
	POPJ P,

;HOW SIMILAR ARE WORDS POINTED TO BY A AND B?
;RETURNS IN T A VALUE FROM 0 (WORDS IDENTICAL)
;TO 69 (69 DIFFERENCES BETWEEN WORDS), OR
;INFINTY IF 3 CONSEC LETTERS IN ONE WORD
;DON'T ANY MATCH ANY OF 3 CONSEC IN OTHER WORD
HOWSIM:	MOVEI T,0	;POSITION
	MOVSI T1,-MMM
	MOVSI T2,-MMM	;PTRS TO ABUF, BBUF
	PUSH P,A
	PUSH P,B
	ILDB CH1A,A
	ILDB CH2A,A
	ILDB CH3A,A
	ILDB CH1B,B
	ILDB CH2B,B
	ILDB CH3B,B
HOW0:	CAME CH1A,CH1B
	JRST HOW1
	JUMPE CH1A,HOWX
HOW2:	MOVSI C,CH2A	;MOVE C,[CH1A,,CH2A]
	BLT C,CH2B
	ILDB CH3A,A
	ILDB CH3B,B
	AOJA T,HOW0
HOW1:	CAMN CH1A,CH2B
	JRST H1A2B
	CAMN CH1B,CH2A
	JRST H1B2A
	CAMN CH1A,CH3B
	JRST H1A3B
	CAMN CH1B,CH3A
	JRST H1B3A
	CAMN CH2A,CH2B
	JRST H2A2B
	CAMN CH2A,CH3B
	JRST H2A3B
	CAMN CH2B,CH3A
	JRST H2B3A
	CAMN CH3A,CH3B
	JRST H3A3B
HOWX1A:	HRLOI T,377777	;GIVE UP, RETURN INFINITY
HOWX1:	POP P,B
	POP P,A
	POPJ P,
H1A3B:	JSP X,S1B
	MOVE CH1B,CH2B
	MOVE CH2B,CH3B
	ILDB CH3B,B
H1A2B:	JSP X,S1B
	JUMPE CH1A,HOWX
	MOVE CH2B,CH3B
	ILDB CH3B,B
	JRST HOW2
H1B3A:	JSP X,S1A
	MOVE CH1A,CH2A
	MOVE CH2A,CH3A
	ILDB CH3A,A
H1B2A:	JSP X,S1A
	JUMPE CH1B,HOWX
	MOVE CH2A,CH3A
	ILDB CH3A,A
	JRST HOW2
H3A3B:	JSP X,S1A
	JSP X,S1B
	MOVSI C,CH2A
	BLT C,CH2B
	ILDB CH3A,A
	ILDB CH3B,B
H2A2B:	JSP X,S1A
	JSP X,S1B
	JUMPE CH2A,HOWX
	SOJA T,HOW2
H2A3B:	JSP X,S1B
	MOVE CH1B,CH2B
	MOVE CH2B,CH3B
	ILDB CH3B,B
	JRST H2A2B
H2B3A:	JSP X,S1A
	MOVE CH1A,CH2A
	MOVE CH2A,CH3A
	ILDB CH3A,A
	JRST H2A2B
S1A:	MOVEM CH1A,ABUF(T1)
	HRLM T,ABUF(T1)
	AOBJN T1,(X)
	JRST HOWX1A
S1B:	MOVEM CH1B,BBUF(T2)
	HRLM T,BBUF(T2)
	AOBJN T2,(X)
	JRST HOWX1A
HOWX:	MOVEI T,0	;INITIALIZE ANSWER
	HRRZS T1
	HRRZS T2
	JUMPE T1,HOWX2
	JUMPE T2,HOWX6A
	IMUL T1,[-1,,]
HOWX4:	IMUL T2,[-1,,]
HOWX5:	HRRZ CH1A,ABUF(T1)
	HRRZ CH1B,BBUF(T2)
	CAME CH1A,CH1B
	JRST HOWX6
	HLRZ CH1A,ABUF(T1)
	HLRZ CH1B,BBUF(T2)
	SUB CH1B,CH1A
	MOVMS CH1B
	CAIG CH1B,2
	ADDI T,-4(CH1B)
HOWX6:	AOBJN T2,HOWX5
	AOBJN T1,HOWX4
	ADD T1,T2
HOWX6A:	IMULI T1,3
	HRRES T
	ADD T,T1
	JRST HOWX1
HOWX2:	JUMPE T2,HOWX1
	JRST HOWX6A
AANTHE:	IRP A,,[A,AN,THE,AND,OF,FOR]
ASCII \A\
TERMIN
ABUF:	BLOCK MMM
BBUF:	BLOCK MMM
CBUF:	BLOCK 40
TBUF:	BLOCK 20
PDL:	BLOCK 10
SBUF:	BLOCK 1000
STAB:	BLOCK 1000
STOP:	STAB
NTAB:	BLOCK 200
END BEG
O(A)	;PICK UP BIT FROM SUPPRO
	JRST DPUTDJ	;GIVE TO USER

IORPIR:	IORM D,PIRQC(A)	;OR BITS INTO FIRST INT RQ WD
	POPJ P,

ANDPIR:	ANDCAM D,PIRQC(A)	;FLUSH BITS FROM FIRST INT RQ WD
	POPJ P,
;
;.FDELE FILBLK	;DELETE OR RENAME FILE SPECIFIED AT FILBLK
;
AFDELE:	PUSH P,(C)	;GET DEVICE
	MOVSI T,(SETZ)
	IORM T,(P)	;TURN ON 4.9 BIT TO SPECIFY AN .FDELE
	JRST AFDEL1
;
;OPEN SET UP AND DISPATCH
;3.1=0 => INPUT  =1 OUTPUT
;3.2=0  => UNITS   =1  BLOCK
;3.3=0  => ASCII   =1 IMAGE
;4.9=1 => DELETE OR RENAME (INTERNAL)
;
;.OPEN CH,FILBLK	;OPEN FILE SPECIFIED AT FILBLK ON LOGICAL CHANNEL CH
;
AOPEN:	JUMPE U,AOPENA	;JUMP ON SYS JOB
	CAML C,MEMTOP(U)	;CHECK MEMORY PROTECT
	JRST IOADC	;JUMP IF VIOLATION
	ADDI C,@UPR(U)	;RELOCATE EFF ADR OF UUO
AOPENA:		;C HAS EFF ADR OF UUO AND R ITS AC FIELD
	ADDI R,IOCHNM(U)	;MAKE R POINT TO SPECIFIED I/O CHANNEL WORD
	PUSH P,C
	PUSHJ P,ACLOSE	;CLOSE PREV
	POP P,C
	PUSH P,(C)	;GET DEV AND MODE BITS
	MOVSI T,(SETZ)
	ANDCAM T,(P)	;CLEAR 4.9 BIT TO INDICATE AND .OPEN
AFDEL1:	PUSH P,1(C)	;GET EFF ADR OF UUO + 1 (FIRST FILE NAME FOR OPEN)
	PUSH P,2(C)	; " + 2 (SECOND " )
	SKIPGE -2(P)	;SKIP ON NOT .FDELE
	SKIPN 3(C)	;SKIP ON RENAME
	JRST AOPEN3	;JUMP IF A .OPEN OR DELETING .FDELE
	SKIPE 1(C)	;SKIP IF RENAME OF AN OPEN FILE
	JRST AOPEN3	;NOT R OF OPEN FILE
	MOVE TT,2(C)	;GET CH ON WHICH FILE IS SUPPOSIDLY OPEN
	TDNE TT,[-1,,777760]	;SKIP IF CH LOGICALLY LESS THAN 20
	JRST AOPBCH	;BAD CHANNEL NUM
	ADDI TT,IOCHNM(U)	;RELOCATE TO POINT TO CH WORD FOR USER
	MOVE Q,(TT)	;GET CH WORD
	HLRZ Q,CLSTB(Q)	;GET LEFT HALF OF CLOSE TABLE ENTRY FOR INDEX IN I/O CH WORD
	TRNN Q,302000	;SKIP IF A DIRECTORY DEVICE
	JRST AOPEN6	;JUMP IF NOT DIRECTORY DEVICE
	HLRZ J,(TT)	;PICK UP DEV CHNL NO
	MOVEI A,(SIXBIT /UT1/)	;PICK UP DUMMY DEC TAPE DEV NAME
IFN DISK,[	TRNN Q,200000	;SKIP IF DEC TAPE
	MOVEI  A,(SIXBIT /DK0/)	;PICK UP DUMMY 2311 DEV NAME
]	HRRZ I,UTTNO(J)	;GET POSSIBLE TAPE NUM
	DPB I,[300,,A]	;STORE IN DEV NAME
IFN DISK,[	MOVE I,QDSKN(J)	;GET POSSIBLE 2311 DRIVE NUM
	TRNN Q,200000	;SKIP IF DEC TAPE
	DPB I,[300,,A]	;STORE UNIT NUM IN DEV NAME
]	HRRM A,-2(P)	;STORE DEV NAME IN SLOT ON PDL
	JRST AOPEN4

AOPEN3:	PUSHJ P,TRAN	;PERFORM I/O