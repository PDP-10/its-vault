(OR(GETL 'ERT '(FEXPR FSUBR))(DEFPROP ERT
	 (LAMBDA (/0ERTA )
		 (PROG (/0LISTEN ^W ^Q)
		       (PRINT (QUOTE >>>))
		       (MAPC (FUNCTION
(LAMBDA(X)(PRINC X)(PRINC '/ ))) /0ERTA)
		       (PRINT 'LISTENING)
		  LISTEN
		       (COND ((NOT(ERRSET (SETQ /0LISTEN (READ)))))
			     ((MEMQ /0LISTEN (QUOTE (T %P P)))
			      (RETURN T))
			     ((NULL /0LISTEN) (RETURN NIL))
			     ((EQ (CAR /0LISTEN) (QUOTE RETURN))
			      (RETURN (EVAL (CADR /0LISTEN))))
			     (T (ERRSET(PRINT (EVAL /0LISTEN)))))
		       (GO LISTEN)))
	 FEXPR))

(DEFUN WBREAK FEXPR (A) (MAPC (QUOTE BREAK1) A) T)

(DEFUN BREAK1
       (A)
       (PROG (X Y Z W)
	     (COND ((ATOM A)) ((SETQ Y (CADR A)) (SETQ A (CAR A))))
	     (PRINT A)
	     (OR (SETQ X (GETL A (QUOTE (EXPR FEXPR SUBR FSUBR  LSUBR))))
		 (RETURN (PRINC (QUOTE UNDEFINED))))
	     (AND (MEMQ (CAR X) (QUOTE (EXPR FEXPR)))
		  (EQ (CAADDR (CADR X)) (QUOTE BREAK2))
		  (RETURN (PRINC (QUOTE ALREADY/ BROKEN))))
	     (PUTPROP A
		      (LIST (QUOTE LAMBDA)
			    (COND ((SETQ W (MEMQ (CAR X) (QUOTE (FEXPR FSUBR))))
				   (QUOTE (/0A)))
				  ((QUOTE /0A)))
			    (LIST (QUOTE BREAK2)
				  (QUOTIFY A)
				  (QUOTE /0A)
				  (QUOTIFY (CAR X))
				  (QUOTIFY (AND (MEMQ (CAR X)
						      (QUOTE (EXPR FEXPR)))
						(CADADR X)))
				  (QUOTIFY (SETQ Z (GENSYM)))
				  (QUOTIFY (OR Y T))))
		      (QUOTE BREXPR))
	     (RPLACA (GETL A (QUOTE (BREXPR)))
		     (COND (W (QUOTE FEXPR)) ((QUOTE EXPR))))
	     (PUTPROP Z (CADR X) (CAR X))
	     (RPLACA X (QUOTE BREXPR))
	     (RETURN (SETQ BREAKLIST (CONS A BREAKLIST)))))

(DEFUN QUOTIFY (X) (COND ((MEMQ X (QUOTE (T NIL))) X) ((LIST (QUOTE QUOTE) X))))

(DEFUN UNBREAK
       FEXPR
       (A)
       (MAPC (QUOTE (LAMBDA (X)
			    (PROG (Y Z)
				  (AND (SETQ Y (GETL X (QUOTE (EXPR FEXPR))))
				       (EQ (CAADDR (CADR Y)) (QUOTE BREAK2))
				       (SETQ Z (GETL X (QUOTE (BREXPR))))
				       (REMPROP X (CAR Y))
				       (RPLACA Z
					       (CADR (CADDDR (CADDR (CADR Y)))))
				       (PRINT X)
				       (SETQ BREAKLIST (DELQ X BREAKLIST))))))
	     (OR A BREAKLIST))
       T)

(SETQ BREAKLIST NIL)
(DEFUN BREAK2
       (/0NAME /0ARG /0TYPE /0VARS /0FN /0COND)
       (PROG (VALUE /0XX)
	     (SETQ /0ARG
		   (COND ((MEMQ /0TYPE (QUOTE (FEXPR FSUBR))) (LIST /0ARG))
			 ((MAPCAR (QUOTE ARG)
				  (REVERSE (MEMQ /0ARG
						 (QUOTE (7 6 5 4 3 2 1))))))))
	     (SETQ /0VARS (COND (/0VARS)
				((EQ /0TYPE (QUOTE FSUBR)) (QUOTE (ARG)))
				((MAPCAR (QUOTE PROG2)
					 /0ARG
					 (QUOTE (ARG1 ARG2
						      ARG3
						      ARG4
						      ARG5
						      ARG6
						      ARG7))))))
	     (EVAL (LIST (QUOTE PROG) /0VARS (QUOTE (BREAK3))))
	     (RETURN VALUE)))

(DEFUN BREAK3
       NIL
       (MAPC (QUOTE SET) /0VARS /0ARG)
       (AND (SETQ /0XX (EVAL /0COND))
	    (APPLY (QUOTE ERT) (LIST (QUOTE ENTERING) /0NAME /0TYPE /0VARS)))
       (SETQ VALUE
	     (APPLY /0FN (COND ((MEMQ /0TYPE (QUOTE (FEXPR FSUBR))) (CAR /0ARG))
			       (/0ARG))))
       (AND /0XX (APPLY (QUOTE ERT) (LIST (QUOTE EXITING) /0NAME))))
