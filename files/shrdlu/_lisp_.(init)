(COMMENT CORE 200 FXS 5000  FLS 7000  FLPDL 0 FXPDL 400 REGPDL 1000 SPECPDL 1000  BPS 300)


(DEFUN LOADER (*!?KEY) 
	     (OR (ERRSET (EVAL (LIST 'UREAD
				     *!?KEY
				     '>
				     'DSK
				     (COND ((MEMQ *!?KEY
						  '(NG VG CLAUSE
						    GINTER MACR
						    PREPG ADJG
						    GRAMAR PROGMR))
					    'GRAMAR)
					   (T 'SHRDLU))))
			 NIL)
		 (AND (PRINT *!?KEY)
		      (PRINC 'NOT-FOUND)
		      (RETURN NIL)))
(LOADX))

(DEFUN LOADFL FEXPR (*!?KEY)
(COND((ERRSET(APPLY 'UREAD *!?KEY))(LOADX))
((PRINT *!?KEY)(PRINC 'NOT-FOUND))))

(DEFUN LOADX()
       (PROG (*!?H *!?F *!?EOF) 

	     (SETQ *!?EOF (GENSYM))
	     (PRINT 'READING)
	     (PRINC *!?KEY)
	LOOP ((LAMBDA (^Q) (SETQ *!?H (READ *!?EOF))) T)
	     (AND (EQ *!?H *!?EOF) (RETURN T))
	     (OR (ERRSET ((LAMBDA (^W ^Q) (EVAL *!?H))T  T))(PROG2 (PRINT 'ERROR-IN-FILE)(PRINT *!?H)))
	     (GO LOOP)))

(DEFUN LOAD FEXPR (X) (MAPC 'LOADER X)  'DONE)

(DEFUN LOADALL NIL 
(UREAD GRIND > COM)
(IOC Q)
(ERRSET(EVAL(READ)))
(UREAD E LAP COM)
(IOC Q)
(EVAL (READ))
(ERRSET (EVAL( READ)))
(SETQ PURE NIL)
(LOADFL EPLNR1 LAP DSK PLNR)
(THINIT)
( CRUNIT DSK RBRN)
 (LOADFL GRAPH LAP DSK RBRN)
( CRUNIT DSK SHRDLU)

(REMLAP T)
       (LOADER 'BREAK)
       (LOADER 'GLOBAL)
       (MAPC 'LOADER '( SYSCOM PROGMR DICTIO))
       (LOADER 'GINTER)						       ;TO BE REPLACED  BY CHOICE WITH MACR
(LOADER 'GRAMAR)

(MAPC 'LOADER '(SMSPEC SMUTIL SMASS NEWANS ))
(MAPC 'LOADER '(BLOCKS DATA))
(LOADFL THTRAC > DSK PLNR)
(LOADFL TWUTIL > DSK SHRDLU)
(RPLACA(LAST ERRLIST)'(SHRDLU))
)

( CRUNIT DSK SHRDLU)

(LOADALL)
