(PDEFINE CLAUSE(

  ((CQ SIMP) SUBJ NIL)
  ((CQ MAJOR) NIL SEC)
(F (LIST(LIST 'TIME ':NOW)))

REPT 
  ((AND (NQ BINDER)
	(PARSE CLAUSE BOUND INIT))
   NIL
   BI
   BICUT)
  (CUT END)
  (FQ BIND)
(OR SMN(SMBIND)(ERT CLAUSE SMBIND))
BI 
  ((AND (NQ PREP) (PARSE PREPG INIT))
   NIL
   NIL
   (PREPG))
  ((CQ REPORT) FDEC NIL)
  (COND ((EQ PUNCT (Q ?)) (GO QUEST))
	((OR(CQ IMPER)(EQ PUNCT (Q !))) (GO IMPER)))
  (GO INIT)
FDEC 
  (FQ DECLAR)
INIT 
  (SETQ T1 N)
  ((AND (NEXTW THERE) (PARSE NIL THERE)
       (FQ DECLAR))
   THERE
   NIL
   (INIT))
THER2 
  (AND (NQ PREP) (PARSE PREPG INIT))
  (AND (NQ ADV) (PARSE ADV TIMW))
  (AND (NQ ADV) (PARSE ADV TIM2))
  (AND (NQ ADV) (PARSE ADJG ADV VBAD))
  (PARSE NG TIME)
  ((EQ T1 N) NIL INIT INPOP)
  ((CQ DECLAR) SUBJ NIL)
  ((AND (NQ VB)(PARSE VG IMPER) (FQ IMPER)) VG1 NIL)
  (FQ DECLAR)
  ((CQ IMPER) (IMPER) NIL)
SUBJ 
  (CUT END)
SUBJ3 
  ((OR (AND (NEXTW TO)
	    (PARSE CLAUSE RSNG TO SUBJ))
       (AND (NQ ING)
	    (PARSE CLAUSE RSNG ING SUBJ))
       (AND (NQ RELWD)
	    (PARSE CLAUSE RSNG WHRS SUBJ)))
   VB
   NIL
   SUBJ1)
SUBJ4

  ((PARSE NG SUBJ) VB NIL SUBJ1)
  



(COND( (CQ NSUBR)  (GO FAIL))
  ((CQ TRY2)(RQ TRY2)(GO VB2))
((AND H(ISQ H TIME	))(GO HEAD))
 ((UPCHECK)
    (FQ UPREL SUBUPREL)(GO VB))
  ((AND(CQ COMPONENT)NN)(FQ SUBJFORK)(GO VB))
  (H(POP)(GO SUBJ))
  ((GO FAIL)))
INPOP 
  (** N PW)
  ((* C DLC) NIL (INPOP))
  ((AND (ISQ PT CLAUSE) (ISQ PT BOUND)) BICUT
					NIL)
  ((POP NIL) NIL (INPOP))
  (CUT PTW)
  (GO INIT)
BICUT 
  (** N PW)
  (POP)
  (CUT PTW)
  (GO REPT)
HEAD 
  ((OR (** N PW (NOUN)) (** N PW (PRON))) NIL
				       HEAD)
SUB2 
  (POP)
  ((CUT PTW) INIT SUB2)
SUBJ1 
  (AND (MEET FE (Q (QADJ MEASQ
			  NGQ
			  RELADJ
			  NSUBR)))
	(* H PV (QAUX))
	(COND((ISQ PT BE)
(FQ INT AUXBE COMPQ)(RQ NSUBQ)(GO ONT))
((ISQ PT HAVE)(FQ SUBQ)(RQ NSUBQ)(GO VBL))))
SUBJ11 
  ((POP NIL) NIL (SUBJ11))
  (SETQ PTW CUT)
SUBJ2 
  ((** PW) NIL (SUBJ2))
  ((CUT PTW) SUBJ3 SUBJ11)
  (; SUBJECT HIT END CUT AND TRY AGAIN)
VB 
  (CUT END)

(  (SETQ T1 N)NIL SUBJ1 SUBJ1)

(  (PARSE ADJG ADV VBAD)NIL NIL FAIL)

  (; VBLOK IS SET IF VERB FOUND WONT WORK)
  (RQ VBLOK)


VBL 
  ((PARSE VG) VG1 NIL)
  (COND ((CQ NSUBQ) (FQ SUBQ)
		    (RQ NSUBQ)
		    (POP QAUX)
		    (GO VBL))
	((CQ NSUBR) (FQ SUBREL)
		    (RQ NSUBR)
		    (POP QAUX)
		    (GO VBL))
    ((CQ SUBJFORK)(FQ VBFORK)
      (COND((ISQ(* PC)TRANS2)(FQ TRANS2)(GO OB2X))
  ((ISQ PT TRANSL)(FQ TRANSL)(GO TRANSL1))
    ((ERT VBFORK)(GO FAIL))))

   ((NOT (ISQ H SUBJ)) (ERT VBL)
			    (GO FAIL))
((ISQ H CLAUSE)(POP)(FQ TRY2)(GO SUBJ4))
 ((ISQ H SUBJ)
     (POP)(FQ SUBJFORK)(GO VBL)))

VB2
  (SETQ PTW N)
  ((POP NIL) NIL (VBL))
  (CUT (** PW))
  (GO SUBJ3)
VG1 
  (CUT END)
  ((ISQ MVB BE) BE NIL (BE))
  ((ISQ H PASV) PASV NIL PNPRT)
  (FQ ACTV)
  ((ISQ MVB VPRT) NIL NPRT NPRT)
  ((AND (NQ PRT) (PARSE PRT)) NIL PRT)
  ((SETQ
    MVB
    (CDR (SASSOC (CADDDR (CDDAR H))
		 (GET (CADDDR (CDDAR MVB))
		      (Q PRTT))
		 (FUNCTION SASS2))))
   NIL
   NPRT)
  (FQ PRT)
  ((ISQ MVB TRANS) TRANSP NIL TRANSPQ)
IPRT 
  ((ISQ MVB ITRNS) NIL POPRT)
  (FQ PRT ITRNS)
  (GO ONT)
PRT 
  ((SETQ T2 (** N NW (PRT))) NIL NPRT)
  (; SEARCH FOR DISPLACED PARTICLE)
  ((SETQ
    MVB
    (CDR (SASSOC (CADDAR T2)
		 (GET (CADDDR(CDDAR MVB))
		      (Q PRTT))
		 (FUNCTION SASS2))))
   NIL
   NPRT)
  ((ISQ MVB TRANS) NIL NPRT)
  (CUT T2)
  ((OR (PARSE NG OBJ OBJ1)
       (PARSE CLAUSE RSNG WHRS OBJ OBJ1))
   POPRT
   NPRT
   NIL)
  (; POPRT POPS LAST CONSTITUENT)


  (CUT END)
  (PARSE PRT)
  (FQ PRT DPRT TRANS)
  (GO ONT)
TRANSP 
  (; TRANSITIVE PARTICLED VERB)
((AND(OR(NQ PRONREL)(NQ QADJ))
(PARSE CLAUSE WHRS OBJ OBJ1))OBB NIL)
  ((PARSEREL (Q ((INGOB ING) 
			     (TOOB TO)
			     (SUBTOB SUBTO)
			     (REPOB REPORT)))
	     (Q (OBJ OBJ1))
	     MVB)
   OBB
   NIL)
  ((PARSE NG OBJ OBJ1) TR NIL)
TRANSPQ 
  (COND ((CQ NSUBQ) (FQ OBJ1Q) (RQ NSUBQ))
	((CQ NSUBR) (FQ OBJ1REL) (RQ NSUBR))
	((UPCHECK)
	 (FQ UPREL OBJ1UPREL))
	((GO IPRT)))
  (; IPRT CHECKS FOR POSSIBLE ITRNS)
OBB 
  (FQ PRT TRANS)
  (GO ONT)
POPRT 
  (POPTO VG)
NPRT 
  (CUT END)
  ((ISQ MVB TRANS2) NIL TRANS TRANS)
OB2X
  ((AND(OR (PARSE NG OBJ OBJ1)
       (PARSE CLAUSE WHRS RSNG OBJ OBJ1))
(CUT END))
   NIL
   OBJ1Q
   OBJ2Q)
(CUT END)
OBJ2 
  ((PARSEREL (Q ((INGOB2 ING) (TOOB2 TO)
			      (SUBTOB2 SUBTO)
			      (REPOB2 REPORT)
			      (TRANS2 WHRS)))
	     (Q (OBJ OBJ2))
	     MVB)
   TRANS2
   NIL)
  ((PARSE NG OBJ OBJ2) TRANS2 NIL)
OBJ2Q 
  ((COND ((CQ NSUBQ) (RQ NSUBQ) (FQ OBJ2Q))
	 ((CQ NSUBR) (RQ NSUBR) (FQ OBJ2REL))
	 ((UPCHECK)
	  (FQ OBJ2UPREL UPREL)))
   TRANS2
   NIL)

(COND(NN)
((** N PW)(POP)(CUT PTW)(GO OB2X))
((ERT OBJ2Q)))

  ((COND
    ((AND (NEXTW TO)
	  (ISQ MVB TO2)
	  (PARSE PREPG))
     (SETQ H
	   (CONS (CONS (APPEND (CAAR (* H
					DLC))
			       (Q (OBJ2TO)))
		       (CDAR PT))
		 (CDR H)))
     (FQ TRANS2TO TRANS2))
    ((AND (CQ PREPQ)
	  (* H PV (QUEST))
	  (EQ (CADDAR (** FW)) (Q TO)))
     (RQ PREPQ)
     (FQ TRANS2TOQ TRANS2)))
   ONT
   POTR)
TRANS2 
  (FQ TRANS2)
  (GO ONT)
OBJ1Q 
  (CUT END)
  (COND ((CQ NSUBQ) (RQ NSUBQ) (FQ OBJ1Q))
	((CQ NSUBR) (RQ NSUBR) (FQ OBJ1REL))
	((UPCHECK)
	 (FQ UPREL OBJ1UPREL))
	((GO TRANS)))
  (GO OBJ2)
POTR 
  (COND ((CQ OBJ1Q) (FQ NSUBQ)) ((FQ NSUBR)))
  (RQ OBJ1Q OBJ1REL)
  (POPTO VG)
TRANS 
  ((ISQ MVB TRANSL) TRANSL1 NIL NIL)
  ((ISQ MVB TRANS) NIL ITRNS QTRNS)
TRANS1 
  ((PARSEREL (Q ((INGOB ING) (TOOB TO)
			     (SUBTOB SUBTO)
			     (REPOB REPORT)
			     (TRANS WHRS)))
	     (Q (OBJ OBJ1))
	     MVB)
   TR
   NIL)
  ((PARSE NG OBJ OBJ1) TR QTRNS)
TRANSL1 
  ((PARSE NG OBJ OBJ1 NOLOC) TR NIL)
QTRNS 
  (COND ((CQ NSUBQ) (RQ NSUBQ) (FQ OBJ1Q))
	((CQ NSUBR) (RQ NSUBR) (FQ OBJ1REL))
	((UPCHECK)
	 (FQ UPREL OBJ1UPREL))
	((GO ITRNS)))


TR 
  (CUT END)
  (AND NN (NQ ADV) (PARSE ADV VBAD))
  ((OR (AND (ISQ MVB TRANSL) (FQ TRANSL))
       (NOT (FQ TRANS)))
   NIL
   ONT
   TRSLQ)
  (; TRSLQ IS LOCATION QUESTION CHECK)
LOCT 
  (COND ((OR (AND (NQ PREP)
		  (PARSE PREPG PLACE LOBJ))
	     (AND (NQ ADV)
		  (PARSE ADV PLACE (LOBJ))))
	 (GO ONT)))
TRSLQ 
  (COND ((AND (CQ QADJ)
	      (ISQ (* H PV (QADJ)) PLACE))
	 (RQ QADJ)
	 (FQ LOBQ)
	 (GO ONT))
	((CQ NSUBQ) (RQ NSUBQ)
		    (FQ LOBQ)
		    (GO ONT))
	((CQ NSUBR) (RQ NSUBR)
		    (FQ LOBREL)
		    (GO ONT))
	((AND (* C U (QADJ) DLC PV (QADJ))
	      (EQ (CADDAR (NB PT))
		  (Q WHERE)))
	 (FQ UPREL LOBUPREL)
	 (GO ONT)))
  ((OR (AND (CQ TRANSL)
	    (ISQ MVB TRANS)
	    (RQ TRANSL)
	    (FQ TRANS))
       (AND (CQ ITRNSL)
	    (ISQ MVB ITRNS)
	    (RQ ITRNSL)
	    (FQ ITRNS)))
   ONT
   NIL)
LTRAN 
  ((* C DLC PV (NG) DL (PREPG)) NIL CHOP)
  (** FW)
PLWRD 
  (POP)
  ((CUT PTW) TRANS1 PLWRD)
  (POPTO VG)
ITRNS 
  ((ISQ MVB INT) INT1 NIL NIL)


INTT 
  ((ISQ MVB ITRNSL) NIL INTTT)
  (FQ ITRNSL)
  (GOCOND LOCT TRSLQ)
INTTT 
  (AND (ISQ MVB ITRNS) (FQ ITRNS) (GO ONT))
VBLOK 
  (; VERB DOESNT WORK)
  (COND ((MEET FE (Q (QUEST REL)))
	 (ERT VBLOK)
	 (GO FAIL)))
  ((AND (* C DLC PV (VG) DLC PV (MVB))
	(** FW PW))
   NIL
   (VBLOK))
  (; LOOK FOR DIFFERENT VERB)
  (OR (POP SUBJ) (AND (ERT BLOK) (GO FAIL)))
  ((CUT PTW) NIL (ITRNS))
  (FQ VBLOK)
  (GO SUBJ3)
PASV 
  (FQ PASV)
  ((AND
    NN
    (NQ PRT)
    (ISQ MVB VPRT)
    (* H DLC PV (MVB))
    (SETQ
     MVB
     (CDR (SASSOC (CADDAR N)
		  (GET (CADDDR (CAR (** FW)))
		       (Q PRT))
		  (FUNCTION SASS))))
    (ISQ MVB TRANS))
   NIL
   PNPRT)
  (PARSE PRT)
  (FQ PRT TRANS)
  (GO PONT)
PNPRT 
  (FQ PASV)
  ((ISQ MVB TRANS2) OBJ2 NIL)
  ((ISQ MVB TRANSL) TR NIL)
  ((ISQ MVB TRANS) NIL PASBLOK)
  (FQ TRANS)
  (GOCOND PONT ONT)
PASBLOK 
  (** N PV)
  (POP)
  (CUT PTW)
  (GO VBL)


PONT 
  (AND (NEXTW BY)
       (PARSE PREPG AGENT)
       (FQ AGENT)
       (NOT (SETQ T3 NIL))
       (GO ONT))
  ((AND (** N NW (EQ(CADDAR PTW)'BY))
	(OR (NULL CUT) (MEMQ (CAR CUT) PTW)))
   NIL
   ONT)
  (SETQ T1 N)
  (SETQ N PTW)
  (AND (SETQ T3
	     (PARSE2 (Q (PREPG AGENT)) NIL))
       (FQ AGENT))
  (SETQ NN (SETQ N T1))
ONT 
  (OR SMN (SMCL1) (AND (SETQ NOFLAG T)
		       (GO FAIL)))
  (SETQ T1 H)
  ((NOT (MEET FE (Q (NSUBQ NSUBR)))) TONT
				     NIL
				     RETSM)
  ((AND (UPREL H) (RQ NSUBR) (FQ DOWNREL))
   TONT
   NIL
   RETSM)
  ((AND (* C DLC PV (QUEST) DLC PV (NOUN))
	(ISQ PT TIM1))
   TIMEQ
   NIL)
  ((AND NN (NQ PREP) (PARSE PREP)) PQ NIL)
  (GO FAIL)
TIMEQ 
  (RQ NSUBQ)
  (FQ TIMEQ)
  (GO TONT)
PQ 
  (COND ((CQ NSUBQ) (RQ NSUBQ) (FQ PREPQ))
	((RQ NSUBR)
	 (OR SMN (SMPREPQ) (AND (ERT CLAUSE
				     SMPREPQ)
				(GO FAIL)))
	 (FQ PREPREL)))
TONT 
  ((SETQ T1 N) NIL RETSM RETSM)
  (COND ((AND (CQ PASV) T3 (EQ N (CADAR T3)))
	 (SETQ H (APPEND T3 H))
	 (SETQ NN
	       (EQ CUT
		   (SETQ N (CADDAR T3))))))
  (COND ((NULL NN) (GO RETSM)))


NPASV 
  ((AND
    (NQ PREP)
    (PARSE PREPG)
    (OR SMN
	(SMPREP (COND ((AND (CQ THERE)
			    (NOT (ISQ H
				      TIME)))
		       (Q THERE))
		      ((Q P))))
	(AND (POP) (COND ((CQ MAJOR)
			  (ERT CLAUSE SMPREP)
			  (GO FAIL))
			 ((GO RETSM))))))
   NIL
   NIL
   RETSM)
  ((AND (NQ TIMW)
	(PARSE ADV TIMW)
	(OR SMN (SMTIMW) (AND (ERT CLAUSE
				   SMTIMW)
			      (GO FAIL))))
   NIL
   NIL
   RETSM)
  ((AND (NQ TIM2)
	(PARSE ADV TIM2)
	(OR SMN (SMTIM2) (AND (ERT CLAUSE
				   SMTIM2)
			      (GO FAIL))))
   NIL
   NIL
   RETSM)
  ((AND (NOT (CQ BE))
	(PARSE ADJG ADV)
	(OR SMN (SMADV) (AND (ERT CLAUSE
				   SMADV)
			      (GO FAIL))))
   NIL
   NIL
   RETSM)
  ((AND (PARSE NG TIME)
	(OR SMN (SMTIME) (AND (ERT CLAUSE
				   SMTIME)
			      (GO FAIL))))
   NIL
   NIL
   RETSM)


  ((AND (NQ PLACE)
	(PARSE ADV PLACE)
	(OR SMN (SMPLACE) (AND (ERT CLAUSE
				    SMPLACE)
			       (GO FAIL))))
   NIL
   NIL
   RETSM)
  ((AND (NQ BINDER)
	(PARSE CLAUSE BOUND)
	(OR SMN (SMBIND) (AND (ERT CLAUSE
				   SMBIND)
			      (GO FAIL))))
   NIL
   NIL
   RETSM)

((AND(NEXTW TO)(PARSE CLAUSE TO ADJUNCT)
   (OR SMN(SMTOADJ)(ERT CLAUSE SMTOADJ)
   (GO FAIL)))
 NIL
 NIL
 RETSM)


  (COND ((NOT (EQ N T1)) (GO TONT))
	((NQ SPEC) (GO RETSM))
	((MEET FE (Q (RSQ RSNG BOUND)))
	 (GO RETSM))
	((NOT (AND (CQ POLR2)
		   (EQ (CADAR H)
		       (CADDAR H))))
	 (GO CHOP)))
  (ERT CHOP1)
  (GO FAIL)
BE 
  (FQ BE)
  ((OR(CQ COMPQ)(CQ MEASQ))BENT NIL)

  ((AND (NQ TIMW) (PARSE ADV TIMW)) NIL
				    NIL
				    POPBE)
  ((AND (NQ TIM2) (PARSE ADV TIM2)) BEP
				    BEP
				    NIL)
POPBE 
  (POP)
BEP 
  ((AND (NQ PREP) (PARSE PREPG COMP)) INT
				      NIL)
INT1 
  ((PARSE ADJG COMP) BENT NIL INT)
  ((PARSE NG COMP) INT NIL)
  ((AND (NQ PREP) (PARSE PREPG Q COMP)) INT
					NIL)
  ((CQ BE) NIL INTT)
  ((ISQ H VG) CHOP NIL)
  (POP)
  (GO BEP)


BENT 
  ((AND (* H PV (SUBJ))
	(EQ (CADDAR (NB PT)) (Q IT))
       (SETQ T1 PT))
   NIL
   INT)
  ((OR (AND (NEXTW TO)
	    (PARSE CLAUSE RSNG TO SUBJ))
       (AND (NQ ING)
	    (PARSE CLAUSE RSNG ING SUBJ))
       (PARSE CLAUSE REPORT))
   NIL
   INT)
  (FQ IT)
  (RPLACA(CAR T1)(APPEND(SETDIF
   (FE T1)'(SUBJ))'(ITSUBJ)))
INT 
  (FQ INT)
  (GO ONT)
THERE 
  (FQ THERE)
  (CUT END)
  ((OR (PARSE ADV TIMW) (PARSE ADV TIM2))
   NIL
   NIL
   (THERE))
  ((PARSE VG BE MVB) THEF NOTHE (THERE))
THERQ 
  ((ISQ (* H PV (QAUX)) BE) THEF NIL)
  (FQ POLR2)
  ((AND (NQ TIMW) (PARSE ADV TIMW)) NIL
				   NIL
				   (THEREQ))
  ((AND (NQ TIM2) (PARSE ADV TIM2)) NIL
				   NIL
				   (THEREQ))
  ((PARSE VG BE) THEF NIL)
  (RQ POLR2)
  (GO NOTHE)
THEF 
  ((AND (NQ ADV) (PARSE ADV TIMW)) NIL
				   NIL
				   (THEF))
  ((AND (NQ ADV) (PARSE ADV TIM2)) NIL
				   NIL
				   (THEF))
  ((PARSE NG SUBJ SUBJT) NIL NOTHE)
  (GO ONT)
NOTHE 
  (RQ THERE)
  (POP THERE)
  (AND (NQ ADV) (PARSE ADV PLACE))
  (GO THER2)


IMPER 
  ((PARSE NG TIME) NIL NIL IMPOP)
  ((AND (NQ ADV) (PARSE ADJG ADV VBAD))
   NIL
   NIL
   IMPOP)
  ((AND (NQ ADV) (PARSE ADV TIMW)) NIL
				   NIL
				   IMPOP)
IMPE 
  ((PARSE VG IMPER) NIL IMPOP)
  (FQ IMPER)
  (GO VG1)
IMPOP 
  ((POP NIL) IMPE (IMPOP))
QUEST 
  (FQ QUEST)
  ((NQ PREP) NIL NGQUES)
((AND(PARSE PREPG)(ISQ H QUEST)(FQ PREPQ))POLAR NGQUES NIL)
  (ERT CLAUSE PREPQ INCOMPLETE)
  (GO FAIL)
NGQUES 
  ((PARSE NG QUEST) NGQST NIL)
(  (OR (AND (NEXTW HOW)
	   (PARSE ADJG QUEST)
	   (FQ MEASQ))
      (AND (NQ QADJ) (PARSE QADJ) (FQ QADJ)))POLAR POLAR NIL)
(FQ SHORTQUES)
ADJQS
((AND(CQ QADJ)
(OR SMN(SMADJQ)))NIL FAIL RETURN)

NGQST 
  (FQ NGQ)
  (CUT END)
  (COND ((NULL NN) (GO SHORT)))
  (AND (NQ ADV) (PARSE ADJG ADV VBAD))
  (COND ((PARSE VG NAUX) (FQ SUBJQ) (GO VG1))
	((PARSE VB AUX (QAUX))
	(OR(SMVG 'AUX)(ERT NGQST AUX))
	 (SETQ MVB H)
	 (FQ POLR2 NSUBQ))
	(T (** N PW)
	   (POP NG QUEST)
	   (CUT PTW)
	   (GO NGQUES)))
  ((AND (NEXTW THERE) (PARSE NIL THERE)) NIL
				       SUBF)
  (RQ NSUBQ)
  (FQ THERE SUBJQ SUBJTQ)
  ((OR (NOT NN)
       (AND (PARSE VG) (ISQ MVB BE)))
   ONT
   (THERE))

SUBF 
  ((OR (PARSE NG SUBJ)
       (PARSE CLAUSE RSNG WHRS SUBJ))
   VB
   NIL
   SUBJ1)
  (POP NIL)
  (RQ POLR2 NSUBQ)
  (FQ SUBJQ)
  ((PARSE VG) BE NIL)
  (ERT SUBF)
  (GO FAIL)
QPOP 
  (** N PW)
  (POP)
  (CUT PTW)
  (GO NGQUES)
POLAR 
  ((AND (NQ VB)
	(PARSE VB AUX (QAUX))
	(OR(SMVG 'AUX)(ERT POLAR AUX))
	(SETQ MVB H))
   NIL
   QCHOP)
  (OR (MEET (Q (MEASQ QADJ)) FE) (FQ POLAR))
  ((AND (NEXTW THERE)
	(PARSE NIL THERE)
	(OR(MEET FE '(MEASQ ADJQ POLAR))
(AND(NULL NN)(SETQ H(CONS(CONS '(VG)(CDAR(* H PV(QAUX))))H)))
(PARSE VG))
	(FQ THERE))
   THERQ
   NIL)
  (FQ POLR2)
  (GO SUBJ)
QCHOP 
  (ERT QCHOP)
  ((POPTO CLAUSE BOUND) BICUT (QCHOP))
SEC 
   (F(LIST(LIST 'TIME 'SEC)))

  (COND ((CQ BOUND) (GO BOUND))
	((CQ TO) (GO TO))
	((CQ RSQ) (GO RSQ))
	((NOT (CQ RSNG)) (ERT SEC) (GO FAIL))
	((CQ SUBTO) (GO SUBTO))
	((CQ REPORT) (GO REPORT))
	((CQ ING) (GO ING))
	((CQ WHRS) (GO WHRS))
	(T (ERT RSNG) (GO FAIL)))
BOUND 
  ((PARSE BINDER) NIL (BOUND) (BINDER))
  (GO FDEC)


RSQ 
  (COND ((AND (OR (AND (NEXTW NOT)
		       (ISQ (CADR N) EN))
		  (NQ EN))
	      (PARSE VG EN PASV))
	 (OR (ISQ MVB TRANS) (GO FAIL))
	 (FQ SUBREL)
	 (GO PASV))
	((AND (OR (AND (NEXTW NOT)
		       (ISQ (CADR N) ING))
		  (NQ ING))
	      (PARSE VG ING))
	 (FQ SUBREL)
	 (GO VG1))
	((NQ PRONREL))
	((PARSE NG SUBJ) (FQ NSUBR) (GO VB)))
WHRS 
  (COND ((AND (NQ PRONREL) (PARSE NG RELWD))
	 (GO REL))
	((PARSE QADJ) (FQ QADJ RELADJ) (COND(NN(GO ADJQS))(GO INIT)))
	((NOT (CQ COMPONENT)))
	((ISQ RES RELADJ) (FQ RELADJ RELDEL)
			  (GO INIT))
	((ISQ RES SUBREL)
	 (FQ SUBREL RELDEL)
	 (AND (PARSE VG) (GO VG1)))
	((FQ NSUBR RELDEL) (GO SUBJ)))
  (MQ RSQ)
  (GO FAIL)
REL 
((AND(CQ RSNG)(ISQ H NORSNG))FAIL NIL)
  (FQ SUBREL)
  ((PARSE VG) VG1 NIL)
  (RQ SUBREL)
  (FQ NSUBR)
  (GO SUBJ)
TO 
  ((AND (CQ COMPONENT) (PARSE VG TO TODEL))
   VG1
   NIL)
  ((PARSE VG TO) VG1 (TO))
SUBTO 
  (COND ((AND (CQ COMPONENT)
	      (PARSE VG TO TODEL))
	 (FQ TODEL)
	 (GO VG1)))
  ((AND (** N NW (EQ(CADDAR PTW)'TO))
	(CUT PTW)
	(PARSE NG SUBJ SUBTO)
	(OR (CUT END) T)
	(PARSE VG TO))
   VG1
   (SUBTO))


ING 
  ((** N NW( ING))NIL FAIL)
  ((OR(NQ ING)(AND(PARSE NG SUBJ INGSUB)
    (FQ SUBING)(RQ ING)))NIL NIL(ING))
  ((PARSE VG ING) VG1 (ING))
REPORT 
  (AND (NEXTW THAT) (PARSE NIL THAT) (FQ THAT))
  (GO REPT)
CHOP 
  ((ISQ H COMPOUND)NIL CHOPLOSE)
  (SETQ H(CONS(CAR(* H DF))(CDR H)))
  (SETQ NN(EQ CUT(SETQ N(N PT))))
  (GO RETSM)
CHOPLOSE
  (ERT CHOP)
  (GO FAIL)
SHORT 
  (FQ SHORT)
  (GO RETSM)
RETSM 
  (AND (CQ RSQ)
       (CQ PASV)
	(ISQ H VG)
       (NOT (CQ AGENT))
       (GO FAIL))
  (OR SMN
      (SMCL2)
      (AND (ERT CLAUSE SMCL2) (GO FAIL)))
  (AND (CQ MAJOR) (OR SMN (ANSWER NIL)))
  (GO RETURN)
))


(PDEFINE NG(
NGSTART

  (COND ((CQ RELWD) (GO RELWD))
	((CQ REL) (GO REL))
	((CQ QUEST) (GO REL))
	((OR(NQ QDET)(NQ PRONREL))(FQ QUEST)(GO REL))
	((CQ TIME) (GO TIME))
	((NQ CLASF) (GO CLASF))
	((NQ PROPN) (GO START))
	((NQ TPRON) (GO TPRON))
	((NQ PRON) (GO PRON)))
LOOK 
  (COND ((NQ DET) (GO DET))
	((NQ NUM) (GO NUM))
	((OR(NQ ING)(NQ EN)(NQ ADJ))
                    (GO ADJ))
	((NQ CLASF) (GO CLASF))
	((NQ NUMD) (GO NUMD))
	((NEXTW AT) (GO AT))
	((NEXTW AS)(GO AS))
	((NQ NOUN) (GO NOUN))
	((NQ TIMORD) (GO TIMORD))
	((CQ COMPONENT)(FQ QUEST)(GO REL))
	((MQ START) (GO FAIL)))
START 
  (FQ PROPN)
PROPN 
  (PARSE PROPN)
  ((ISQ H POSS) PROPS NIL)
  ((AND NN (NQ PROPN)) PROPN NIL)
PROPS 
  (OR SMN (SMPROP) (AND (ERT NOUN SMPROP)
			(GO FAIL)))
  ((ISQ H POSS) POSSX PRAG)
PRON 
  ((PARSE PRON POSS) POSSD NIL RED2)
PRON2
  ((CQ NPRON) (NPRON) NIL)
  ((OR (AND (CQ SUBJ) (PARSE PRON SUBJ))
       (AND (OR (CQ OBJ) (CQ SUBTO))
	    (PARSE PRON OBJ)))
   NIL
   (PRON))
  (OR SMN (EVAL (SM H)) (ERT NOUN SMPRON))
  (FQ PRONG)
PRAG 
  (FQ DEF)
  (* H)
  (TRNSF NS NPL NFS NEG)
  (GO RETURN)
TPRON 
  (PARSE TPRON)
  (FQ TPRON)
  (* H)
  (TRNSF NS NPL NEG)
  (AND NN (NQ ADJ) (PARSE ADJ))
  (GO SMNG)


DET 
  (PARSE DET)
  (FQ DET)
  (* H)
  (TRNSF NPL NS PART DEF INDEF NEG QNTFR)
  (AND NN (GO IND))
  ((ISQ H INCOM) INCOM (INDET))
AS
((AND(PARSE NIL AS)
    (PARSE NUMD NUMDAS)NN(PARSE NIL AS))
   NUMD2(AS)(AS))
AT 
  ((AND (PARSE NIL AT) (PARSE NUMD NUMDAT))
   NIL
   (AT)
   (AT))
NUMD2 
  ((AND (PARSE NUM) (FQ NUM NUMD)) DET1
				   (NUMD2)
				   INCOM)
NUMD 
  ((PARSE NUMD NUMDAN) NIL ND3 INCOM)
  ((PARSE NIL THAN) NIL INCOM POPCOM)
  ((AND (PARSE NUM) (FQ NUM NUMD)) DET1
				   POPCOM
				   INCOM)
ND3 
  ((PARSE NUMD NUMDALONE) NUMD2
			  (NUMD)
			  (NUMD))
IND 
  ((AND (EQ (CADDAR (NB H)) (Q ALL))
	(EQ (CADDAR N) (Q THE))
	(PARSE DET)
	(FQ DEF))
   ORD
   NIL
   (THE))
  ((AND (ISQ H QNTFR) (FQ QNTFR)) QNUM NIL)
  ((CQ DEF) NIL ADJ)
ORD 
  ((AND (PARSE ORD) (FQ ORD)) NIL NUM INCOM)
  ((AND(NEXTW OF)(ISQ(** N NW)MONTH)
    (PARSE NIL OF)(PARSE NOUN MONTH)
   (FQ DATE))RETSM NIL)
NUM 
  ((PARSE NUM) NIL ADJ)
  (FQ NUM)
  ((CQ DET) NIL DET1)
  ((COND ((AND (ISQ H NS) (CQ NS))
	  (RQ NPL PART))
	 ((CQ NPL) (RQ NS PART)))
   ADJ
   (NUM)
   INCOM)
TIMORD 
  ((PARSE ORD TIMORD) NIL FAIL)
  ((AND (PARSE NOUN TIM1)
	(FQ DET DEF)
	(OR SMN (SMNGTIME)))
   RETURN
   FAIL)


DET1 
  (COND ((ISQ H NS) (FQ NS)) (T (FQ NPL)))
  (OR NN (AND (FQ NUMBER) (GO INCOM)))
NUMBER 
  (FQ DET)
  ((NQ OF) OF ADJ)
QNUM 
  ((ISQ H NONUM) OF NIL)
  ((AND (PARSE NUM) (FQ NUM)) NIL OF)
  ((COND ((EQ (SM H) 1)
	  (AND (CQ NS) (RQ NPL)))
	 ((CQ NPL) (RQ NS)))
   NIL
   (NUMD)
   INCOM)
  ((EQ (CADDR (NB H)) (Q NO)) ADJ NIL)
OF 
  ((AND (NQ OF) (PARSE PREPG OF)) SMOF NIL)
  ((EQ (CADDR (NB H)) (Q NONE)) INCOM ADJ)
SMOF 
  (FQ OF)
  ((OR SMN (SMNGOF) (NOT (POP))) RETSM INCOM)
ADJ 
  ((PARSE ADJ) ADJ CLASF NIL)
EPR 
  ((OR (ISQ H SUP) (ISQ H COMPAR)) NIL REDUC)
  (FQ ADJ)
  (AND (EQ (CADDAR N) (Q OF))
       (PARSE PREPG OF)
       (OR SMN (SMNGOF) (AND (ERT NOUN
				  SMNGOF3)
			     (GO FAIL)))
       (FQ OF)
       (GO RETSM))
  (GO INCOM)
CLASF 
  ((OR(PARSE VB ING(CLASF))
   (PARSE VB EN(CLASF))
  (PARSE CLASF)) CLASF NIL REDUC)
NOUN 
  ((PARSE NOUN) NIL RED2)
  ((AND (CQ TIME) (NOT (ISQ H TIM1))) RED1
				      NIL)
  (SETQ T1 FE)
  (COND ((AND (ISQ H MASS)
	      (OR (CQ PART) (NOT (CQ DET))))
	 (FQ MASS)))
  (COND ((NOT (ISQ H NPL)) (RQ NPL PART)))
  (COND ((NOT (ISQ H NS)) (RQ NS)))
  (COND ((AND (NOT (CQ DET))
	      (NOT (CQ NUMD)))
	 (* H)
	 (TRNSF NPL MASS)))
  ((MEET FE (Q (NS NPL PART MASS))) NIL RED0)


SMNG 
((OR(NOT(CQ OFOBJ))
(CQ DET))NIL FAIL)
  (OR SMN (SMNG1) (AND (ERT NOUN SMNG1)
		       (GO FAIL)))
  ((NOT (ISQ H POSS)) NIL POSS RETSM)
  ((AND (NEXTW TO)
	(MEET FE (Q (COMP SUBJ)))
	(PARSE CLAUSE RSQ TO)
	(OR SMN
	    (SMRSQ (SM H) SM)
	    (GO POPRET)))
   RETSM
   NIL)
  ((AND (OR (NEXTW AS) (NQ COMPAR))
	(PARSE ADJG THANNEED)
	(OR SMN
	    (AND (NULL N)
		 (CQ SUBJ)
		 (ISQ (* C PV) AUX)
		 (ISQ PT BE)
		 (GO POPRET))
	    (SMPREP 'ADJ)
	    (GO POPRET)))
   RETSM
   NIL)
PREPNG
  ((AND (NQ PREP)
	(NOT (OR (AND (NQ PLACE) (CQ NOLOC))
		 (AND (CQ OBJ1)
		      (ISQ MVB TRANSL)
		      (NOT (ISQ (* C U)
				QUEST)))))
	(PARSE PREPG Q)
	(OR SMN
	    (AND (NULL N)
		 (CQ SUBJ)
		 (ISQ (* C PV) AUX)
		 (ISQ PT BE)
(NOT(ISQ(* U)NGQ))
		 (GO POPRET))
	    (SMPREP T)
	    (AND (GO POPRET))))
   PREPNG
   NIL
   RETSM)
  (AND (NOT (AND (ISQ (* C U)POLR2)
		 (CQ SUBJ)
		 (NQ VB)
		 (NOT (CQ SUBJT))
		      (NOT (ISQ PT
				QADJ))))
       (PARSE CLAUSE RSQ)
       (OR SMN
	   (SMRSQ (SM H) SM)
	   (GO POPRET)))
  (GO RETSM)


RED0 
  (SETQ FE T1)
RED1 
  (POP)
RED2 
  (COND ((NULL H) (MQ NO) (GO FAIL))
((ISQ H NUMBER)(GO INCOM))
	((AND(ISQ H POSS)
    (OR(ISQ H PRON)(AND(* H DLC)(ISQ PT PRON))))
    (POP)(GO PRON2))
	((AND (NULL (CDR H)) (CQ DEFPOSS))
	 (GO POSSDEF))
	((AND (OR (CQ REL) (CQ QUEST))
	      (NULL (CDR H)))
	 (POP)
	 (GO RELWD))
	((ISQ H ADJ) (GO EPR))
	((NOT (ISQ H CLASF)) (GO INCOM)))
REDUC 
  (POP)
((AND(NULL H)(NQ PROPN))PROPN NOUN)
POPCOM 
  (POP)
INCOM 
(FQ INCOM)
( (AND(ISQ H DET)(ISQ H INCOM)
(OR SMN(EVAL(SM H))))RETURN NIL)

((AND(NULL CUT)(CQ NUM))SMNG FAIL)
POSSX 
  (FQ DEFPOSS)
POSS 
  (OR SMN (SMNG2) (AND (ERT NOUN POSS SMNG2)
		       (GO FAIL)))
POSS2 
((CQ INGSUB)RETSM NIL)
  (SETQ H (LIST (LIST (REVERSE (CONS (Q POSS)
		(SETDIF FE '(COMPONENT))))
		      NB
		      N
		      H
		      SM)))
  (SETQ FE (APPEND (Q (POSES DET DEF NS NPL))
		   (REVERSE REST)))
  (GOCOND ORD POSSDEF)
POSSD 
  ((ISQ H POSSDEF) NIL PX)
  ((ISQ H POSSREG) NIL POSSDEF POSSDEF)
  (FQ DEFPOSS)
PX 
  ((OR SMN (EVAL (SM H))) POSS2 (POSS)RED2)
POSSDEF 
  (RQ POSES DET DEF DEFPOSS)
  (FQ POSSDEF NS NPL)
  (GO INCOM)


REL 
  (COND ((AND (NEXTW HOW)
	      (EQ (CADDR (CADR N)) (Q MANY))
	      (PARSE NIL HOW)
	      (PARSE NIL MANY))
	 (FQ DET NPL INDEF HOWMANY)
	 (GO OF))
	((PARSE DET QDET)
	 (FQ DET NPL QDET NS)
	 (GO QNUM)))
RELWD 
  ((AND (PARSE PRONREL)
	(OR SMN
	    (EVAL (SM H))
	    (AND (ERT NOUN RELWD SM)
		 (GO FAIL))))
   PRAG
   (REL))
TIME 
  ((AND (NQ TIME) (PARSE NOUN TIME)) RETSM NIL)
  ((** N NW (TIM1)) LOOK (TIME))
POPRET 
  (POP)
RETSM 
  (OR SMN (SMNG2) 
		       (GO TRYA))
  (GO RETURN)
TRYA 
  ((ISQ H NOUN) NIL (TRYA))
(POP)
(CUT N)
UP((POP )UP NIL)
(SETQ FE(REVERSE REST))
(SETQ SM NIL)
(GO NGSTART)
))


(PDEFINE VG(
  (COND ((CQ TO) (GO TO))
	((CQ EN) (GO EN))
	((CQ ING) (GO ING))
	((CQ IMPER) (GO IMPER))
	((ISQ (* C U) POLR2) (GO POLR2)))
  (SETQ T1 (Q NEW))
ON 
  (COND ((AND H (ISQ H NEG)) (FQ NEG)))
  ((AND (PARSE NIL NOT) (FQ NEG)) NIL NIL (NOT))
  ((PARSE ADV TIMW) ON NIL POPV)
  ((PARSE ADV TIM2) NIL NIL POPV)
  (COND ((EQ T1 (Q NEW)) (GO NEW))
	((EQ T1 (Q DO2)) (GO DO2))
	((EQ T1 (Q MODAL2)) (GO MODAL2))
	((EQ T1 (Q BE2)) (GO BE2))
	((EQ T1 (Q HAV2)) (GO HAV2)))
  (ERT ON)
  (GO FAIL)
NEW 
  (COND ((NOT (NQ VB)) (MQ VB) (GO FAIL))
	((AND (NQ DO) (PARSE VB AUX DO))
	 (GO DO))
	((AND (NQ MODAL)
	      (PARSE VB AUX MODAL))
	 (GO MODAL))
	((AND (NQ WILL) (PARSE VB AUX WILL))
	 (GO WILL))
	((AND (NQ BE) (PARSE VB AUX BE))
	 (GO BE))
	((AND (NQ HAVE) (PARSE VB AUX HAVE))
	 (GO HAVE))
	((NOT (PARSE VB (MVB))) (MQ VB)
				(GO FAIL)))
  (* C DLC)
  (TRNSF VPL INF V3PS)
  (COND ((AND (ISQ PT PRESENT) (ISQ PT PAST))
	 (FQ (PAST-PRES)))
	((ISQ PT PAST) (FQ (PAST)))
	(T (FQ (PRES))))
  (GO REV)
TO 
  (FQ NAGR)
  ((AND (PARSE NIL NOT) (FQ NEG)) NIL NIL (NOT))
  ((OR (PARSE NIL TO) (CQ TODEL)) NIL
				   (TO)
				   (TO))
  (SETQ T2 (Q (TO)))
  (SETQ T1 (Q MODAL2))
  (GO ON)


EN 
  (FQ NAGR)
  ((AND (PARSE NIL NOT) (FQ NEG)) NIL NIL (NOT))
  (SETQ T2 (Q (EN)))
  ((NQ EN) EN2 (EN))
ING 
  (FQ NAGR)
  ((AND (PARSE NIL NOT) (FQ NEG)) NIL NIL (NOT))
  (SETQ T2 (Q (ING)))
  (GO BE2)
IMPER 
  ((AND (PARSE VB DO NEG INF) (FQ NEG))
   NIL
   NIL
   (DONT))
  ((AND (PARSE VB (MVB) INF) (SETQ MVB H))
   RETURN
   (IMPER))
POLR2 
  (OR (* DLC PV (AUX))
      (AND (ERT POLR2) (GO FAIL)))
  (SETQ H (LIST (CAR PT)))
  (TRNSF NEG)
  (COND ((ISQ H DO) (GO DO))
	((ISQ H MODAL) (GO MODAL))
	((ISQ H WILL) (GO WILL))
	((ISQ H BE) (GO BE))
	((ISQ H HAVE) (GO HAVE)))
  (ERT POLR2VB)
  (GO FAIL)
DO 
  (FQ DO)
  (* C DLC)
  (TRNSF VPL NEG INF V3PS)
  (SETQ T2 (COND ((ISQ PT PAST) (Q (PAST)))
		 (T (Q (PRES)))))
  (SETQ T1 (Q DO2))
  (GOCOND ON MVB)
DO2 
  ((PARSE VB (MVB) INF) NIL MVB)
  (F T2)
  (GO REV)
MODAL 
  (FQ NAGR MODAL)
  (SETQ T2 (Q (MODAL)))
  (SETQ T1 (Q MODAL2))
  (GOCOND ON INCOMP)
MODAL2 
  (COND ((PARSE VB BE INF) (SETQ T1 (Q BE2)))
	((PARSE VB HAVE INF)
	 (SETQ T1 (Q HAV2)))
	((PARSE VB INF (MVB)) (F T2) (GO REV))
	(T (GO INCOMP)))
  (GOCOND ON MVB)


WILL 
  (FQ NAGR)
  (SETQ T2 (Q (FUT)))
  (SETQ T1 (Q MODAL2))
  (GOCOND ON INCOMP)
BE 
  (* C DLC)
  (TRNSF VPL INF V3PS VFS)
  (SETQ T2 (COND ((ISQ PT PAST) (Q (PAST)))
		 (T (Q (PRES)))))
  (SETQ T1 (Q BE2))
  (GOCOND ON MVB)
BE2 
  (COND ((AND(NEXTW GOING)(PARSE VB))
	 (GO GOING))
	((AND (NQ BE) (PARSE VB ING))
	 (SETQ T2 (CONS (Q PRES) T2))
	 (GO EN2))
	((AND (NQ ING) (PARSE VB ING (MVB)))
	 (F (CONS (Q PRES) T2))
	 (GO REV))
	((CQ ING) (MQ ING) (GO FAIL)))
EN2 
  ((PARSE VB EN (MVB)) NIL MVBE)
  (FQ PASV)
  (F T2)
  (GO REV)
GOING 
  ((PARSE NIL TO) NIL GOI)
  ((NQ INF) GOING2 NIL NIL)
  (POP)
GOI 
  (SETQ T2 (CONS (Q PRES) T2))
  (GO MVB)
GOING2 
  (SETQ T2 (CONS (Q FUT) T2))
  (GO MODAL2)
MVBE 
  ((ISQ (* H PV (VB)) QAUX) NIL MVB)
  ((ISQ PT BE) NIL (MVBE))
  (RPLACA (CAR PT) (CONS (Q MVB) (CAAR PT)))
  (F T2)
  (GO REV)
MVB 
((EQ(CAR MVB)(CAR H))MVB2 NIL)
  (POP VB)
  ((PARSE VB (MVB)) NIL (MVB))
MVB2
  (F T2)
  (GO REV)


HAVE 
  (* C DLC)
  (TRNSF VPL INF V3PS VFS)
  (SETQ T2 (COND ((ISQ PT PAST)(FQ NAGR) (Q (PAST)))
		 (T (Q (PRES)))))
  (SETQ T1 (Q HAV2))
  (GOCOND ON MVB)
HAV2 
  ((PARSE VB BE EN) NIL HAV3)
  (SETQ T2 (CONS (Q PAST) T2))
  (SETQ T1 (Q BE2))
  (GOCOND ON MVB)
HAV3 
  ((PARSE VB (MVB) EN) NIL MVB)
  (F (CONS (Q PAST) T2))
  (GO REV)
INCOMP 
  (FQ INCOMP)
(GO FAIL)
REV 
  (AND NN  (PARSE NIL NOT) (FQ NEG))
  (COND ((OR (MEMBER (Q (PAST)) FE)
	     (CQ NAGR)
	     (ISQ (* C U) IMPER)
	     (ISQ PT THERE)
	     (ISQ PT RSNG))
	 (GO NAUX))
	((* C PV (SUBJ))
	 )
	((ISQ (* C U) QUEST)
	 (* DLC PV (QUEST)))
	((AND (ISQ PT SUBREL) (ISQ PT RSQ))
	 (* U))
((AND(ISQ PT SUBJFORK)(* PC PV
   (NOT(ISQ PT SUBJFORK))DLC PV(SUBJ))))
	(T(ERT NSUB) (GO FAIL)))
  (SETQ T3 NIL)
  (COND
   ((ISQ PT NFS)
    (OR (SETQ T3 (MEET FE (Q (VFS INF))))
	(GO NAGR)))
   ((ISQ PT CLAUSE)
    (OR (SETQ T3 (CQ V3PS)) (GO NAGR)))
   ((OR (ISQ PT NS) (ISQ PT MASS))
    (OR (AND (CQ V3PS) (SETQ T3 T))
	(RPLACA (CAR PT)
		(SETDIF (CAAR PT)
			(Q (NS MASS)))))))
  (COND
   ((OR (ISQ PT PART) (ISQ PT NPL))
    (OR (AND (MEET FE (Q (INF VPL)))
	     (SETQ T3 T))
	(RPLACA (CAR PT)
		(SETDIF (CAAR PT)
			(Q (PART NPL)))))))


NAGR 
  ((OR T3 (AND (MEMBER (Q (PAST-PRES)) FE)
	       (RQ (Q (PAST-PRES)))
	       (FQ (PAST))))
   NIL
   (NAGR))
NAUX 
  (SETQ MVB(OR (* H PV (MVB))MVB))
  ((AND (CQ NAUX) (NULL (CDR H)) (ISQ H AUX))
   (NAUX)
   RETSM)
POPV 
  (ERT POPV)
  (GO FAIL)
RETSM
  ((OR SMN(SMVG NIL)(ERT SMVG))RETURN FAIL)
))


(PDEFINE PREPG(
  ((AND (NQ PREPADV) (PARSE ADV PREPADV))
   NIL
   NIL
   (PREPADV))
  ((COND ((CQ AGENT) (NEXTW BY))
	 ((CQ PLACE) (NQ PLACE))
	 ((CQ Q) (NOT (NQ MOTOR)))
	 (T))
   NIL
   (PREP))
  ((PARSE PREP) NIL (PREP))
  (OR SMN (SETQ SM (SM H)))
  (OR NN (GO SHORT))
  ((OR
    (AND
     (SETQ T1
	   (CDR (SASSOC (CADDAR N)
			(GET (CADDAR (NB H))
			     (Q PREPP))
			(FUNCTION SASS))))
     (OR (AND (ISQ T1 T) (PARSE PREP2))
	 (AND (CDR N)
	      (ISX T1 (CADDR (CADR N)))
	      (PARSE PREP2)
	      (PARSE PREP2)))
     (FQ PREP2)
     (OR SMN (SETQ SM (CADAR T1))))
    (NOT (ISQ H NEED2)))
   NIL
   (NEED2))
PREP 
((CQ OF)NIL NOF)
((PARSE NG OBJ OFOBJ)RETT FAIL)
NOF
  ((CQ QUEST) NIL NOQ)
  ((PARSE NG QUEST OBJ) RETT (QUEST))
NOQ 
  ((PARSE NG OBJ) RETT NIL)
  ((PARSE PRONREL) REL NIL (REL))
  ((PARSE CLAUSE RSNG ING) RETT SHORT)
REL 
  ((AND (PARSE CLAUSE RSNG REPORT PREPREL)
	(FQ RELPREPG))
   RETT
   (PREP))
SHORT 
  ((MEET FE (Q (NOSHORT Q))) (SHORT) NIL)
  ((COND
    ((* C U (NSUBQ))
     (RPLACA(MEMQ 'NSUBQ(FE PT))'PREPQ)
     (FQ SHORT UPQUES)
     (SETQ H (CONS (CAR (* DLC PV (QUEST)))
		   H)))
    ((* C U (NSUBR))
     (RPLACA(MEMQ 'NSUBR(FE PT))'PREPREL)
     (FQ SHORT UPREL)
     (SETQ H (CONS (CAR (* U)) H))))
   RETURN
   (SHORT))
RETT 
(AND(OR(ISQ H QUEST)(AND
(ISQ H COMPOUND)(PROG(X A)(SETQ A
(H H))GO(COND((ISQ A QUEST)(RETURN T))
((SETQ A(CDR A))(GO GO))))))
(FQ QUEST))
  (COND ((CQ COMP)
	 (OR SMN
	     (SMPREP (Q COMP))
	     (AND (ERT PREPG SMPREP COMP)
		  (GO FAIL))))
	((CQ LOBJ)
	 (OR SMN
	     (SMPREP (Q LOBJ))
	     (AND (ERT PREPG SMPREP LOBJ)
		  (GO FAIL)))))
  (GO RETURN)
))

(PDEFINE ADJG(
  ((CQ QUEST) NIL ADVEP)
  ((AND (NEXTW HOW) (PARSE QADJ)) NIL
				  FAIL
				  FAIL)
  ((AND (PARSE ADJ) (FQ ADJ)) RETSM NIL)
  ((AND (PARSE ADV VBAD) (FQ VBAD)) RETURN FAIL)
ADVEP 
((AND(* C U (BE))(NOT(CQ COMP)))FAIL NIL)
  ((AND (NQ AS) (PARSE NIL AS)) AS NIL (AS))
  ((PARSE ADV ADVADV) ADVEP NIL POPAD)
  ((PARSE NIL MORE) NIL ADJ)
  (FQ COMPAR)
ADJ 
  ((COND ((CQ ADV) (PARSE ADV VBAD))
	 (T (PARSE ADJ)))
   NIL
   (ADJ)
   RETS2)
  ((OR (CQ COMPAR) (ISQ H COMPAR)) NIL RETS2)
  (FQ COMPAR)
  (COND ((NOT NN) (GO RETSM)))
  ((PARSE NIL THAN) NIL RETSM (THAN))
  (RQ THANNEED)
  (FQ THAN)
SUBJ 
  ((PARSE NG SUBJ COMPAR) NIL (THAN) RETSM)
  ((AND(NOT(CDR N))(PARSE VB AUX)) NIL RETSM)
  ((OR (AND (ISQ (CDR H) NFS) (ISQ H VFPS))
       (AND (OR (ISQ (CDR H) MASS)
		(ISQ (CDR H) NS))
	    (ISQ H V3PS))
       (AND (ISQ (CDR H) NPL) (ISQ H VPL)))
   RETSM
   NIL)
  (POP)
  (GO RETSM)
AS 
  (FQ AS)
  (RQ THANNEED)
  ((PARSE ADJ) NIL (ADJ) RETSM)
  ((PARSE NIL AS) SUBJ RETSM (AS))
POPAD 
  (POP)
  (GO ADJ)
RETSM 
  ((CQ THANNEED) (THANNEED) NIL)
  (COND ((CQ COMP) (OR SMN
		       (SMPREP 'ADJCOMP)
		       (AND (ERT ADJG SM)
			    (SETQ NOFLAG T)
			    (GO FAIL)))))
  (GO RETURN)
RETS2
((OR SMN(SMADJGS))RETURN FAIL)
))
(DEFUN DEFLIST FEXPR(A)
(MAPC '(LAMBDA(X)(PUTPROP (CAR X)(CADR X)(CAR A)))(CDR A))(CAR A))
(REMPROP 'MACR 'EXPR)
(REMPROP 'MAC 'EXPR)


(DEFLIST ELIM
(ADV(ADV PREPADV TIMW TIM2 ADVADV VBAD
     PLACE LOBJ))
(DET(DET NPL NS PART DEF INDEF NEG DEM
   INCOM OFD QNTFR NONUM QDET))
(ADJ(ADJ SUP COMPAR))
(NOUN(NOUN POSS MASS NPL NS TIM1 TIME MONTH))
(NUM(NUM NPL NS))
(NUMD(NUMD NUMDAN NUMDAT NUMDALONE))
(PREP(PREP MOTOR PLACE  NEED2))
(PRON(PRON POSS SUBJ OBJ NS NPL NFS NEG
 DEFPOSS REL))
(PROPN( PROPN POSS NS NPL))
(VB(VB MVB AUX QAUX MODAL WILL BE DO HAVE
   ING EN INF V3PS VFS VPL PAST PRES
  NEG ITRNS TRANS TRANSL TRANS2 TRANSL2 INT
 ITRNSL  INGOB TOOB SUBTOB REPOB INGOB2
  TOOB2 SUBTOB2 REPOB2 VPRT TO2))

(BINDER(BINDER))
(CLASF(CLASF))
(POSS(NOUN NPL NS MASS NFS PRON))
(ORD(ORD TIMORD))
(PREP2(PREP2))
(PRONREL( NPL NS PRONREL))
(PRT(PRT))
(QADJ(PLACE QADJ))
(TPRON(TPRON NS NPL NEG)))




(DEFLIST MOD
(G((ING)(INF)))
(D((PAST EN)(INF MODAL AUX)))
(R((COMPAR)NIL))
(T((SUP)NIL))
(N((EN)(INF)))
(S((PRES V3PS NPL)(NS INF MODAL AUX MASS)))
(*((NEG)NIL)))


(DEFPROP CONJ
 (LAMBDA (ACONJ)
  (PROG (NBB PC
	     NB
	     NBBB
	     CUT
	     X
	     END
	     FE
	     PREV
	     RES SM)
	(SETQ END (CADR ACONJ))
	(SETQ NBBB (CADAR RE))
	(SETQ NBB N)
	(SETQ RES RE)
   UP	(SETQ PREV (CADDAR (SETQ NB N)))
	(COND
	 ((OR (EQ N END)
	      (EQ (SETQ N (CDR N)) END))
	  (GO LOSE))
	 ((NQ SPEC)
	  (COND
	   ((AND
	     (EQ PREV (QUOTE /,))
	     (OR
	      (CDR RE)
	      (GREATERP
	       (DIFFERENCE (LENGTH NBBB)
			   (LENGTH NBB))
	       4))
	     (MEMQ (CADDAR N)
		   (QUOTE (OR AND NOR BUT)))
	     (NOT (EQ (CDR N) END)))
	    (SETQ PREV
		  (LIST PREV (CADDAR N))))
	    (SETQ N (CDR N))
	   (T (GO LOSE)))))
	(AND (ATOM PREV)
	     (** N NW (EQ (CADDAR PTW) PREV))
	     (CUT PTW))
	(AND (OR (EQ PREV (QUOTE BUT))
		 (EQ (CADR PREV) (QUOTE BUT)))
	     (NEXTW NOT)
	     (OR (NOT (EQ (SETQ N (CDR N))
			  END))
		 (GO LOSE2))
	     (FQ NEGBUT))
	(SETQ PC RE)
	(OR
	 (SETQ
	  RES
	  (COND
	   ((AND (MEMQ (CAAR ACONJ) (QUOTE (ADJ NUM
				       NOUN
				       PREP
				       VB
				       ADV)))
		 (MEMQ (CAAR ACONJ) (CAAR N)))
	    (PARSE3
	     (APPEND (CAR ACONJ)
		     (QUOTE ((COMPONENT))))
	     T))
	   ((MEMQ (CAAR ACONJ)
		  (QUOTE (NG PREPG ADJG)))
	    (PARSE2 (APPEND (CAR ACONJ)
			    (QUOTE (COMPONENT)))
		    T))
	   ((EQ (CAAR ACONJ) (QUOTE CLAUSE))
	    ((LAMBDA(LASTSENT)(PARSE2
	     (APPEND
	      (CAR ACONJ)
	      (MEET (CAAR RE)
		    (QUOTE (DECLAR IMPER)))
	      (QUOTE (COMPONENT)))
	     T))
(COND((MEMQ 'MAJOR(FE RE))RE)
(LASTSENT)))
)))
	 (GO LOSE2))
	(SETQ NN (NOT (EQ N (SETQ CUT END))))
	(SETQ RE (CONS (CAR RES) RE))
	(COND
	 ((NOT (ATOM PREV))
	  (RETURN
	   (AND
	    (OR SMN (SMCONJ) (ERT SMCONJ))
	    (SETQ
	     RE
	     (FIXX
	      (CONS
	       (CADR PREV)
	       (COND
		((CDDR RE)
		 (QUOTE (COMPOUND LIST)))
		(T (QUOTE (COMPOUND))))))))))
	 ((EQ PREV (QUOTE /,))
	  (COND ((AND NN
		      (EQ (CADDAR N) (QUOTE /,)))
		 (FQ LIST)
		 (GO UP))
		(T (GO LIST))))
	 ((MEMQ PREV (QUOTE (AND OR NOR BUT)))
	  (COND ((EQ BOTH NB) (FQ BOTH)))
	  (COND
	   ((AND
	     NN
	     (OR
	      (EQ (CADDAR N) (QUOTE BUT))
	      (AND
	       (EQ (CADDAR N) PREV)
	       (NOT (AND (EQ BOTH NB)
			 (EQ PREV
			     (QUOTE AND)))))))
	    (FQ LISTA)
	    (F PREV)
	    (GO UP))
	   (T (GO LISTA)))))
   LOSE2(SETQ N NB)
	(COND
	 ((NULL (CDR RE))
	  (COND
	   ((AND (MEMQ (QUOTE INIT) (CAAR RE))
		 (EQ PREV (QUOTE /,)))
	    (SETQ
	     NN
	     (NOT (EQ END
		      (SETQ N (CDR N)))))))
	  (RETURN NIL))
	 ((CQ LISTA) (GO LISTA))
	 ((CQ LIST) (GO LIST)))
   LOSE	(COND ((CDR RE)
	       (SETQ RE (LASTC RE))))
	(SETQ N NBB)
	(RETURN NIL)
   LISTA(RETURN
	 (AND
	  (OR SMN (SMCONJ) (ERT SMCONJ))
	  (SETQ
	   RE
	   (FIXX
	    (APPEND (COND ((CDDR RE)
			   (QUOTE (LIST))))
		    (COND (SPEC (LIST SPEC)))
		    (LIST PREV)
		    (QUOTE (COMPOUND)))))))
   LIST	(COND
	 ((AND (EQ PREV (QUOTE /,))
	       (CDR RE)
	       (NULL (CDDR RE))
	       (EQ (CAAAR RE) (QUOTE NG))
(NOT(OR(ISQ RE PRONG)(ISQ(CDR RE)PRONG)))
(OR	   (AND NN (EQ (CADDAR N) (QUOTE /,))
(OR	    (SETQ
	     NN
	     (NOT (EQ END
		      (SETQ N (CDR N)))))T))
(NULL N)))
	  (RETURN
	   (AND
	    (OR SMN (SMCONJ) (ERT SMCONJ))
	    (SETQ
	     RE
	     (FIXX
	      (QUOTE (APPOSITIVE COMPOUND)))))))
	 ((MEMQ (QUOTE INIT) (CAAR RE))
	  (SETQ NN
		(NOT (EQ END
			 (SETQ N
			       (CDR NBB)))))
	  (COND ((CDR RE)
		 (SETQ RE (LASTC RE))))
	  (RETURN NIL)))
	(GO LOSE)))
 FEXPR)

(DEFPROP LASTC
	 (LAMBDA (A)
		 (COND ((OR (NULL A)
			   (NULL (CDR A)))
			   A)
		       (T (LASTC (CDR A)))))
	 EXPR)

(DEFPROP PLEASE
	 (LAMBDA (A)
		 (SETQ NN
		       (EQ (SETQ N (CDR N))
			   CUT)))
	 FEXPR)
(DEFPROP FIXX
 (LAMBDA (FIXX)
  (LIST
   (LIST
    (APPEND
     (CAR ACONJ)
     FIXX
     (MEET FE (QUOTE (NEGBUT BOTH)))
     (COND
      ((MEMQ (CAAR ACONJ) (QUOTE (NOUN NG)))
       (COND ((MEMQ (QUOTE AND) FIXX) (QUOTE (NPL)))
	     (T (MEET (CAAR RE)
		      (QUOTE (NPL NS
			      MASS
			      NFS))))))
      ((EQ (CAAR ACONJ) (QUOTE VB))
       (PROG (XX)
	     (SETQ XX
		   (GET (QUOTE VB) (QUOTE ELIM)))
	     (MAPC
	      (FUNCTION
	       (LAMBDA (X)
		(SETQ XX
		      (MEET XX (CAR X)))))
	      RE)
	     (RETURN XX)))))
    NBBB
    N
    RE
    SM)))
 EXPR)

(DEFPROP UPREL
(LAMBDA(X)
(AND(NOT(ATOM X))(OR(MEMQ 'UPREL(FE X))
(UPREL(H X))
(UPREL(CDR X)))))EXPR)

(DEFPROP UPCHECK(LAMBDA()
(AND(* C U (OR(ISQ PT NSUBR)(ISQ PT NSUBQ)))
(NOT(MEET(FE PT)
'(OBJ1Q OBJ1REL OBJ2Q OBJ2REL LOBREL LOBQ)))))EXPR)

