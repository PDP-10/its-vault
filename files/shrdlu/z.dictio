

(DEFPROP BOTH
	 (LAMBDA (A)
		 (PROG (CUT NBB END BOTH)
		       (SETQ END (CADDR A))
		       (SETQ NBB N)
		       (AND (NOT (EQ (SETQ N (CDR N)) CUT))
			    (** N NW (EQ (CADDAR PTW) (CAR A)))
			    (NOT (EQ PTW END))
			    (CUT PTW)
			    (CUT END)
			    (SETQ BOTH PTW)
			    (SETQ RE (COND ((AND (MEMQ (CAADR A) (Q (PREP ADV)))
						 (MEMQ (CAADR A) (CAAR N)))
					    (PARSE3 (CADR A) T))
					   ((MEMQ (CAADR A)
						  (Q (NG PREPG ADJG CLAUSE)))
					    (PARSE2 (CADR A) T))))
			    (LESSP (LENGTH N) (LENGTH BOTH))
			    (SETQ SPEC (Q BOTH))
			    (RETURN (SETQ SPEC (Q (SKIP)))))
		       (SETQ RE NIL)
		       (SETQ N NBB)
		       (RETURN NIL)))
	 FEXPR)

(DEFLIST SPEC (AND (CONJ)) (OR (CONJ)) (/, (CONJ)) (NOR (CONJ)) (BUT (CONJ)))

(DEFLIST SPECL
	 (EITHER (BOTH OR))
	 (NEITHER (BOTH NOR))
	 (BOTH (BOTH AND))
	 (PLEASE (PLEASE))
	 (THANK (THANK)))

(DEFLIST SMNTC
	 (AND T)
	 (OR T)
	 (NOR T)
	 (BUT T)
	 (EITHER T)
	 (NEITHER T)
	 (PLEASE T)
	 (THANK T))

(DEFUN FLUSHME FEXPR (A) (SETQ NN (EQ (SETQ N (CDR N)) CUT)))

(DEFUN PLEASE FEXPR (A) (FQ IMPERSM) (FLUSHME))
 

(DEFUN THANK FEXPR(A)
(SETQ SPEC '(DONE))
(SETQ RE '(()()()()()()))
(DPRINC '*YOU/'RE/ WELCOME!))
(DEFLIST WORD
	 (A (DET NS INDEF))
	 (ABOVE (PREP PLACE))
	 (AFTER (BINDER))
	 (ALL (DET NPL QNTFR))
	 (AND (SPEC))
	 (ANY (DET NS NPL QNTFR))
	 (ANYTHING (TPRON NS))
	 (AS (AS))
	 (AT (AT))
	 (BE (AUX VB BE INF))
	 (BEFORE (BINDER))
	 (BELOW (PREP PLACE))
	 (BENEATH (PREP PLACE))
	 (BESIDE (PREP PLACE))
	 (BOTH (SPECL QNTFR DET NPL BOTH))
	 (BUT (SPEC))
	 (BY (PREP))
	 (CAN (V3PS VFS VPL VB MODAL AUX))
	 (DO (TRANS VFS PRES VPL VB AUX DO INF))
	 (EACH (DET NS QNTFR))
	 (EITHER (SPECL))
	 (EVERY (DET NS QNTFR))
	 (EVERYTHING (TPRON NS))
	 (EXACTLY (NUMD NUMDALONE))
	 (FEW(NUMD NUMDAS))
	 (FEWER (NUMD NUMDAN))
	 (FIVE(NUM))
	 (FOUR(NUM))
	 (FROM (PREP))
	 (GOING (VB ITRNS ING))
	 (GREATER (NUMD NUMDAN))
	 (HAVE (HAVE VB AUX INF TRANS))
	 (HE (PRON NS SUBJ))
	 (HIS (PRON POSS))
	 (HOW (QADJ))
	 (I (SUBJ PRON NFS))
	 (IF (BINDER))
	 (IN (ADV PLACE PREP PLACE))
	 (INSIDE (PREP PLACE))
	 (INTO (PREP PLACE))
	 (IT (PRON NS SUBJ OBJ))
	 (LEAST (NUMD NUMDAT))
	 (LESS (NUMD NUMDAN))
	 (MANY (DET QNTFR NPL NONUM NUMD NUMDAS))
	 (MORE (NUMD NUMDAN))
	 (MOST (NUMD NUMDAT DET QNTFR NPL NONUM))
	 (NEITHER (SPECL))
	 (NO (DET QNTFR NS NPL))
	 (NONE (DET QNTFR NPL NS NONUM))
	 (NOR (SPEC))
	 (NOT (ADV NEG))
	 (NOTHING (TPRON NEG NS))
	 (NOW (ADV TIMW))
	 (OF (PREP PREP2 OF))
	 (ON (PREP PLACE))
	 (ONE (NUM NOUN NS))
	 (ONLY (NUMD NUMDALONE))
	 (ONTO (PREP PLACE))
	 (OR (SPEC))
	 (OUT (PRT))
	 (OVER (PREP PLACE))
	 (PLEASE (SPECL))
	 (SHE (PRON SUBJ NS))
(SINCE(BINDER))
	 (SOME (DET QNTFR NS NPL NONUM))
	 (SOMETHING (TPRON NS))
	 (THAN (THAN))
	 (THANK (SPECL))
	 (THAT (NS THAT DET DEM DEF PRONREL INCOM NORSNG))
	 (THE (DET NPL NS DEF))
	 (THEN (ADV TIMW))
	 (THERE (ADV PLACE))
	 (THEY (PRON SUBJ NPL))
	 (THING (NOUN NS))
	 (THIS (NS DET DEM DEF))
	 (THREE (NUM))
	 (TO (PREP ))
	 (TOP (PREP2))
	 (TWO (NUM))
	 (UNDER (PREP PLACE))
	 (UNDERNEATH (PREP PLACE))
	 (UP (PRT))
	 (WE (PRON NPL SUBJ))
	 (WHAT (PRONREL QDET DET NPL PRON NS))
	 (WHERE (QADJ PLACE))
	 (WHEN (BINDER QADJ))
	 (WHICH (QDET DET PRONREL NS NPL NORSNG))
	 (WHILE (BINDER))
	 (WHO (PRONREL PRON NS NPL REL))
	 (WHOSE (DET QDET NPL NS))
	 (WHY (QADJ))
	 (WILL (VB AUX WILL V3PS VFS VPL))
	 (WITH (PREP))
	 (WOULD (VB AUX MODAL))
	 (YOU (PRON NPL NS SUBJ OBJ)))

(DEFLIST WORD1
	 (AN (A NIL NIL))
	 (ARE (BE (VPL PRES) (INF)))
	 (DID (DO (PAST V3PS) (INF PRES)))
	 (DOES (DO (V3PS) (VFS VPL INF)))
	 (HAD (HAVE (PAST) (INF)))
	 (HAS (HAVE (V3PS PRES) (INF)))
	 (HIM (HE (OBJ) (SUBJ)))
	 (HER (SHE (OBJ POSS) (SUBJ)))
	 (IS (BE (V3PS PRES) (INF)))
	 (ITS (IT (POSS) NIL))
	 (ME (I (OBJ) (SUBJ)))
	 (MY (I (POSS) (SUBJ)))
	 (THEIR (THEY (POSS) NIL))
	 (THEM (THEY (OBJ) (SUBJ)))
	 (US (WE (OBJ) (SUBJ)))
	 (WAS (BE (V3PS VFS PAST) (INF)))
	 (WERE (BE (VPL PAST) (INF)))
	 (WHOM (WHO (SUBJ) (OBJ)))
	 (YOUR (YOU (POSS) NIL)))

(DEFLIST WORD
	 (ASK (VB TRANS INF SUBTOB))
	 (AWAY (PRT))
	 (BALL (NOUN NS))
	 (BACK (NOUN NS PREP2))
	 (BEGIN (VB TRANS INF TOOB INGOB ITRNS))
	 (BEHIND (PREP PLACE))
	 (BESIDE (PREP PLACE))
	 (BIG (ADJ))
	 (BLACK (ADJ))
	 (BLOCK (NOUN NS))
	 (BLUE (ADJ))
	 (BOX (NOUN NS))
	 (BRICK (NOUN NS))
	 (BUILD (VB INF TRANS))
	 (CALL (VB INF TRANS2))
	 (CHOOSE (VB INF TRANS))
	 (CLEAN (VB INF VPRT TRANS))
	 (CLEAR (VB INF VPRT TRANS))
	 (COLOR (NOUN NS))
	 (CONSTRUCT (VB INF TRANS))
	 (CONTAINER (NOUN NS))
	 (CONTAIN (VB INF TRANS))
	 (CORNER (NOUN NS))
	 (CUBE (NOUN NS))
	 (DOWN (PRT))
	 (DROP (TRANSL TRANSL2 VB INF TRANS))
	 (FIND (VB INF TRANS))
	 (FINISH (VB INF TRANS INFOB))
	 (FRIEND (NOUN NS))
	 (FRONT (NOUN NS PREP2))
	 (GIVE (VB INF TRANS2))
	 (GO (ITRNS VB INF))
	 (GRAB (VB TRANS INF))
	 (GRASP (VB TRANS INF))
	 (GREEN (ADJ))
	 (HAND (NOUN NS))
	 (HANDLE (VB INF TRANS))
	 (HIGH (ADJ))
	 (HOLD (VB INF TRANS))
	 (KNOW (VB INF TRANS REPOB))
	 (LARGE (ADJ))
	 (LEFT (NOUN NS))
	 (LIKE (VB INF TRANS))
	 (LIST (VB VO TRANS))
	 (LITTLE (ADJ))
	 (LONG (ADJ))
	 (MAKE (VB INF TRANS))
	 (MOVE (VB INF TRANS))
	 (NAME (NOUN NS VB INF TRANS))
	 (NARROW (ADJ))
	 (NICE(ADJ))
	 (OBJECT (NOUN NS))
	 (OFF (PRT))
	 (OUT (PRT))
	 (PICK (VPRT VB INF TRANS))
	 (PUT (INF PAST VB TRANSL VPRT))
	 (POINTED (ADJ))
	 (PYRAMID (NOUN NS))
	 (RED (ADJ))
	 (RELEASE (VB TRANS INF))
	 (RIGHT (NOUN NS))
	 (ROUND (ADJ)))
(DEFLIST WORD
	 (SEE (VB INF TRANS))
	 (SET (VB INF))
	 (SHAPE (NOUN NS))
	 (SHORT (ADJ))
	 (SIT (VB INF ITRNSL))
	 (SIZE (NOUN NS))
	 (SMALL (ADJ))
	 (SPHERE (NOUN NS))
	 (SQUARE (ADJ))
	 (STACK (NOUN NS VB INF VPRT TRANS))
	 (START (VB INF TRANS INGOB TOOB))
	 (SUPPORT (VB INF TRANS IMPERF NOUN NS))
	 (TABLE (NOUN NS))
	 (TAKE (VB INF TRANSL TRANS))
	 (TALL (ADJ))
	 (TELL (VB INF TRANS SUBTOB))
	 (THICK (ADJ))
	 (THIN (ADJ))
	 (THING (NOUN NS))
	 (TIME (NOUN NS TIM1))
	 (TOGETHER (PRT))
	 (TOUCH (VB INF TRANS))
	 (TOY (NOUN NS))
	 (WANT (VB INF TRANS TOOB SUBTOB))
	 (WHEN (QADJ BINDER))
	 (WHITE (ADJ))
	 (WIDE (ADJ)))

(DEFLIST WORD1
	 (BEGAN (BEGIN (PAST) (INF)))
	 (GAVE (GIVE (PAST) (INF)))
	 (SAW (SEE (PAST) (INF)))
	 (TOLD (TELL (PAST) (INF))))
(DEFLIST PRTT
	 (CLEAN ((OFF ((TRANS) NIL NIL NIL ((TRANS (#CLEANOFF))))))
		((UP ((TRANS) NIL NIL NIL ((TRANS (#CLEANOFF))))))
		((OUT ((TRANS) NIL NIL NIL ((TRANS (#CLEANOFF)))))))
	 (CLEAR ((OFF ((TRANS) NIL NIL NIL ((TRANS (#CLEANOFF))))))
		((OUT ((TRANS) NIL NIL NIL ((TRANS (#CLEANOFF)))))))
	 (PICK ((UP ((TRANS)
		     NIL
		     NIL
		     NIL
		     ((TRANS (CMEANS ((((#ANIMATE)) ((#MANIP)))
				      (#EVAL (COND ((MEMQ (CAADR (INTERP MAP2))
							  (QUOTE (1 NS)))
						    (QUOTE (#PICKUP #2 *TIME)))
						   ((QUOTE (#PUTIN #2
								   :BOX
								   *TIME)))))
				      NIL))))
		     (PICK UP)))
		(OUT ((TRANS) NIL NIL NIL ((TRANS (#NOTICE))) (PICK OUT)))))
	 (PUT ((TOGETHER ((TRANS) NIL
				  NIL
				  NIL
				  ((TRANS (#BUILD)))
				  (PUT TOGETHER)))
	       (DOWN ((TRANS) NIL
			      NIL
			      NIL
			      ((TRANS (CMEANS ((((#ANIMATE)) ((#MANIP)))
					       (#PUTON #2 :TABLE *TIME)
					       NIL))))
			      (PUT DOWN)))
	       (AWAY ((TRANS) NIL
			      NIL
			      NIL
			      ((TRANS (CMEANS ((((#ANIMATE)) ((#MANIP)))
					       (#PUTIN #2 :BOX *TIME)
					       NIL))))
			      (PUT AWAY)))))
	 (SET ((DOWN ((TRANS) NIL
			      NIL
			      NIL
			      ((TRANS (CMEANS ((((#ANIMATE)) ((#MANIP)))
					       (#PUTON #2 :TABLE *TIME)
					       NIL))))
			      (SET DOWN)))))
	 (STACK ((UP ((TRANS) NIL NIL NIL ((TRANS (#STACKUP))) (STACK UP))))))

(DEFLIST PREPP
	 (IN ((BACK ((OF) ((T (#LOC #BEHIND T)))))
	     (FRONT ((OF) ((T (#LOC #BEHIND NIL)))))))
	 (INSIDE ((OF ((T) ((T (#IN)))))))
	 (ON ((TOP ((OF) ((T (#ON)))))))
	 (OUT ((OF ((T) ((T (#OUTOF))))))))
(DEFLIST SMNTC
	 (A ((DET T)))
	 (ABOVE ((PREP ((T (#LOC #ABOVE T))))))
	 (AFTER ((BINDER (END NIL))))
	 (ALL ((DET (COND ((CQ OF) (Q ALL))
			  ((MEET (Q (NUM DEF)) FE) (Q DEF))
			  ((Q NDET))))))
	 (ANY ((DET (Q INDEF))))
	 (ANYTHING ((TPRON (Q INDEF))))
	 (AS ((NULL T)))
	 (ASK ((VB ((TRANS (CMEANS ((((#ANIMATE)) ((#EVENT)))
				    (#WANT #1 #2 *TIME)
				    NIL)))))))
	 (AT ((NUMD T)))
	 (AWAY ((PRT T)))
	 (BALL ((NOUN (NMEANS ((#MANIP #ROUND) ((#IS *** #BALL))))))))

(DEFPROP BE
 ((VB
   ((THERE (CMEANS ((((#THING))) (#EXISTS #1 *TIME) NIL)))
    (INT
     (COND
      ((CQ COMPQ)
       (CMEANS ((((#PHYSOB)) (SMCOMP (#PLACE))) (#AT #1 #2 *TIME) NIL)
	       ((((#PHYSOB)) (SMCOMP (#PROPERTY)))
		(#EVAL (COND ((SETQ XX
				    (MEET (GET (QUOTE #PROPERTY) (QUOTE SYSTEM))
					  (CADAR (INTERP MAP2))))
			      (LIST (CAR XX) (QUOTE #1) (QUOTE #2)))
			     ((QUOTE (#2 #1)))))
		NIL)))
      ((ISQ (* H PV (COMP)) DEF)
       (CMEANS ((((#THING)) (SMCOMP (#THING))) (THSETQ #1 #2) NIL)))
      ((NOT (ATOM (CAR (SM PT)))) (SETQ LIST1 (SM PT)))
      ((AND (CQ MAJOR)
	    (ISQ (OR (* H PV (SUBJ)) (AND (CQ SUBJQ) (* H PV (QUEST)))) INDEF))
       (CMEANS
	((((#NEWWORD)) (SMCOMP NIL)) (#EVAL (#DEFINE MAP1 MAP2)) NIL)
	(((NIL) (SMCOMP (#NEWWORD))) (#EVAL (#DEFINE MAP2 MAP1)) NIL)
	((((#PHYSOB))
	  (SMCOMP
	   NIL
	   NIL
	   (AND (OR (NULL (CDDDDR (INTERP MAP2)))
		    (EQ (CADDDR (CDR (INTERP MAP2))) MAP1))
		(PUTPROP (SETQ MAP3 (MAKESYM (Q NG)))
			 (CONS (CONS (CONS (UNION (CAAAR (INTERP MAP1))
						  (CAAAR (INTERP MAP2)))
					   (CDR (ORD2 (CDAAR (INTERP MAP2))
						      (CAAR (INTERP MAP1)))))
				     (CDAR (INTERP MAP1)))
			       (CDR (INTERP MAP1)))
			 (Q SM))
		(SETQ REL (LIST MAP3)))))
	 (#EXISTS #3 *TIME)
	 NIL)))
      (T (CMEANS ((((#THING))
		   (SMCOMP NIL NIL (OR (NULL (CDDDDR (INTERP MAP2)))
				       (EQ (CADDDR (CDR (INTERP MAP2))) MAP1))))
		  (#HASPROP #1 #2)
		  NIL))))))))
 SMNTC)

(DEFLIST
 SMNTC
 (BACK ((PREP2 T) (NOUN T)))
 (BEFORE ((BINDER (NIL START))))
 (BEGIN ((VB ((TRANS (CMEANS ((((#ANIMATE)) ((#EVENT))) (#START #2 *TIME) NIL)))
	      (ITRNS (CMEANS ((((#ANIMATE))) (#START EE *TIME) NIL)))))))
 (BEHIND ((PREP((T (#LOC #BEHIND T))))))
 (BELOW ((PREP ((T (#LOC #ABOVE NIL))))))
 (BENEATH ((PREP ((T (#LOC #ABOVE NIL))))))
 (BESIDE ((PREP ((T (CMEANS ((((#PHYSOB)) ((#PHYSOB))) (#NEXTO #1 #2 *TIME)
						       NIL)))))))
 (BIG ((MEASURE ((#SIZE (#PHYSOB) T)))
       (ADJ (NMEANS ((#PHYSOB #BIG) ((#MORE #SIZE *** (200 200 200))))))))
 (BLACK ((ADJ (#COLOR #BLACK))))
 (BLOCK ((NOUN (NMEANS ((#MANIP #RECTANGULAR) ((#IS *** #BLOCK)))))))
 (BLUE ((ADJ (#COLOR #BLUE))))
 (BOTH ((DET (QUOTE BOTH))))
 (BOX ((NOUN (NMEANS ((#BOX) ((#IS *** #BOX)))))))
 (BUILD ((VB ((TRANS (#BUILD))))))
 (BY ((PREP ((T (CMEANS ((((#PHYSOB)) ((#PHYSOB))) (#NEXTO #1 #2 *TIME)
						   NIL)))))))
 (CALL ((VB ((TRANS2 (CMEANS ((((#ANIMATE)) ((#THING)) ((#NAME)))
			      (#CALL #2 #3 *TIME)
			      NIL)))))))
 (CAN ((VB T)))
 (CHOOSE ((VB ((TRANS (#NOTICE))))))
(CLEAN((VB T)))
(CLEAR((VB T)))
 (COLOR ((NOUN (NMEANS ((#COLOR) ((#IS *** #COLOR)))))))
 (CONSTRUCT ((VB ((TRANS (#BUILD))))))
 (CONTAIN ((VB ((TRANS (CMEANS ((((#BOX)) ((#PHYSOB))) (#CONTAIN #1 #2 *TIME)
						       NIL)
			       ((((#CONSTRUCT)) ((#THING))) (#PART #2 #1 *TIME)
							    NIL)))))))
 (CUBE ((NOUN (NMEANS ((#MANIP #RECTANGULAR)
		       ((#IS *** #BLOCK) (#EQDIM ***)))))))
 (CONTAINER ((NOUN (NMEANS ((#BOX) ((#IS *** #BOX)))))))
 (DO ((VB ((TRANS (CMEANS ((((#ANIMATE)) ((#EVENT)))
			   (#EVAL (OR (GET MAP2 (QUOTE REFER))
				      (ERT DO DEFINITION)))
			   NIL)))))))
 (DOWN ((PRT T)))
 (DROP ((VB ((TRANSL (CMEANS ((((#ANIMATE)) ((#MANIP)) (SMOBL (#PLACE *TIME)))
			      (#DROP #1 #2 #3)
			      ((#MOTION)))))
	    (TRANS (CMEANS ((((#ANIMATE)) ((#PHYSOB)))
			     (#DROP #1 #2 PLACE *TIME)
			     ((#MOTION)))))))))
 (EACH ((DET (Q ALL))))
 (EVERY ((DET (Q ALL))))
 (EVERYTHING ((TPRON (QUOTE ALL))))
 (EXACTLY ((NUMD (LIST (Q EXACTLY) NUM))))
 (FEW((NUMD(LIST '< (ADD1 NUM)))))
 (FEWER ((NUMD (LIST (Q <) NUM))))
 (FIND ((VB ((TRANS (#NOTICE))))))
 (FINISH ((VB ((TRANS (CMEANS ((((#ANIMATE)) ((#EVENT))) (#END #2 *TIME)
							 NIL)))))))
(FIVE((NUM 5)))
(FOUR((NUM 4)))

 (FRIEND ((NOUN (NMEANS ((#PERSON) ((#IS *** #PERSON)))))))
 (FRONT ((NOUN T) (PREP2 T)))
 (GIVE ((VB ((TRANS2 (CMEANS ((((#ANIMATE)) ((#ANIMATE)) ((#PHYSOB)))
			      (#GIVE #1 #2 #3 *TIME)
			      NIL)))))))
 (GRAB ((VB ((TRANS (#GRASP))))))
 (GRASP ((VB ((TRANS (#GRASP))))))
 (GREATER ((NUMD (LIST (Q >) NUM))))
 (GREEN ((ADJ (#COLOR #GREEN))))
 (HAND ((NOUN (NMEANS ((#HAND) ((#IS *** #HAND)))))))
 (HANDLE ((VB ((TRANS (#GRASP))))))
 (HAVE
  ((VB ((TRANS (CMEANS (((SMOB1 NIL (MEMQ (QUOTE #ROLE) (CDADR OLD)))
			 (SMSUB NIL
				(CHECK (CADR (OR (ASSQ (QUOTE #ROLE)
						       (CDDAAR (INTERP MAP1)))
						 (ERT HAVE #ROLE)))
				       OLD)))
			(#EVAL (CADDR (ASSQ (QUOTE #ROLE)
					    (CDDAAR (INTERP MAP1)))))
			NIL)
		       ((((#ANIMATE)) ((#PHYSOB))) (#BELONG #2 #1) NIL)))))))
 (HIGH ((MEASURE ((#HEIGHT (#PHYSOB) T)))
	(ADJ (NMEANS ((#PHYSOB) ((#HIGH ***)))))))
 (HOLD ((VB ((TRANS (CMEANS ((((#HAND)) ((#MANIP))) (#GRASPING #2 *TIME) NIL)
			    ((((#ANIMATE)) ((#MANIP))) (#GRASPING #2 *TIME)
						       NIL)))))))
 (HOW ((QADJ T)))
 (I ((PRON (SETQ SM (Q (FRIEND))))))
 (IN ((PREP ((T (#IN))))))
 (INSIDE ((PREP ((T (#IN))))))
 (INTO ((PREP ((T (#IN))))))
 (IT ((PRON (SMIT (Q IT)))))
 (LARGE ((MEASURE ((#SIZE (#PHYSOB) T)))
	 (ADJ (NMEANS ((#PHYSOB #BIG) ((#MORE #SIZE *** (200 200 200))))))))
 (LEAST ((NUMD (LIST (Q >) (SUB1 NUM)))))
 (LEFT ((NOUN (NMEANS ((#DIRECTION) ((#DIRECTION #RIGHT NIL)))))))
 (LESS ((NUMD (LIST (Q <) NUM))))
 (LIKE((VB((TRANS(CMEANS
  ((((#ANIMATE))((#THING)))
  (#LIKE #1 #2)NIL)))))))
 (LIST ((VB ((TRANS (#NAME))))))
 (LITTLE ((MEASURE ((#SIZE (#PHYSOB) NIL)))
	  (ADJ (NMEANS ((#PHYSOB #LITTLE) ((#MORE #SIZE (200 200 200) ***)))))))
 (LONG ((MEASURE ((#LENGTH (#PHYSOB) T)))
	(ADJ (NMEANS ((#PHYSOB) ((#MORE #LENGTH *** (200 200 200))))))))
 (MAKE ((VB ((TRANS (#BUILD))))))
 (MANY ((NUMD(LIST '> (SUB1 NUM)))(DET T))))
(DEFLIST
 SMNTC
 (MORE ((NUMD (LIST (Q >) NUM))))
 (MOST ((NUMD (LIST (Q <) (ADD1 NUM)))))
 (MOVE ((VB ((TRANS (CMEANS ((((#ANIMATE)) ((#PHYSOB))) (#PUT #2 PLACE *TIME)
							((#MOTION)))))))))
 (NAME ((NOUN (NMEANS ((#NAME #ROLE)
		       ((#IS *** #NAME) (#ROLE ((#THING)) (#CALL #2 #1))))))
	(VB ((TRANS (#NAME))))))
 (NARROW ((ADJ (NMEANS ((#PHYSOB) ((#MORE #WIDTH (200 0 0) ***)))))
	  (MEASURE ((#WIDTH (#PHSYOB) NIL)))))
(NICE((ADJ(NMEANS((#THING)((#LIKE :FRIEND ***)))))))

 (NO ((DET (Q NO))))
 (NONE ((DET (Q NO))))
 (NOT ((ADV T)))
 (NOTHING ((TPRON (Q NO))))
 (NOW ((ADV (OR (EQ (CADR (ASSQ (QUOTE TIME) FE)) (QUOTE :NOW))
		(ERT NOW DEFINITION)))))
 (OBJECT ((NOUN (NMEANS ((#PHYSOB #VAGUE) ((#PHYSOB ***)))))))
 (OF
  ((PREP
    ((T (AND (CQ NG)
	     (CMEANS ((((#DIRECTION)) ((#PHYSOB)))
		      (#EVAL (LIST (QUOTE #DIRECTION)
				   (CADR (SETQ XX
					       (OR (ASSQ (QUOTE #DIRECTION)
							 (CDDAAR (INTERP MAP1)))
						   (ERT OF DEFINITION))))
				   (COND ((CADDR XX) (QUOTE *OF)) ((QUOTE #2)))
				   (COND ((CADDR XX) (QUOTE #2))
					 ((QUOTE *OF))) '*TIME))
		      NIL))))))
   (PREP2 T)))
(OFF((PRT T)))
 (ON ((PREP ((T (#ON))))))
 (ONE ((NOUN (SMONE)) (NUM 1)))
 (ONLY ((NUMD (LIST (Q EXACTLY) NUM))))
 (ONTO ((PREP ((T (#ON))))))
 (OUT ((PRT T)))
 (OVER ((PREP ((T ((#LOC #ABOVE T)))))))
 (PICK ((VB ((TRANS (#NOTICE))))))
 (POINTED ((ADJ (NMEANS ((#PHYSOB #POINTED) ((#SHAPE *** #POINTED)))))))
 (PUT ((VB ((TRANSL (CMEANS ((((#ANIMATE)) ((#PHYSOB)) (SMOBL (#PLACE)))
			     (#EVAL (COND ((EQ (CAAAR MAP3) (QUOTE #ON))
					   (LIST (QUOTE #PUTON)
						 (QUOTE #2)
						 (CADAAR MAP3)
						 (QUOTE *TIME)))
					  ((EQ (CAAAR MAP3) (QUOTE #IN))
					   (LIST (QUOTE #PUTIN)
						 (QUOTE #2)
						 (CADAAR MAP3)
						 (QUOTE *TIME)))
					  ((ERT PUT DEFINITION))))
			     ((#MOTION)))))))))
 (PYRAMID ((NOUN (NMEANS ((#PHYSOB #POINTED) ((#IS *** #PYRAMID)))))))
 (RED ((ADJ (#COLOR #RED))))
 (RIGHT ((NOUN (NMEANS ((#DIRECTION) ((#DIRECTION #RIGHT T)))))))
 (ROUND ((ADJ (NMEANS ((#PHYSOB #ROUND) ((#SHAPE *** #ROUND)))))))
 (SET ((VB T)))
 (SHAPE ((NOUN (NMEANS ((#SHAPE) ((#IS *** #SHAPE)))))))
 (SHORT ((MEASURE ((#HEIGHT (#PHYSOB) NIL)))
	 (ADJ (NMEANS ((#PHYSOB) ((#MORE #HEIGHT (200 0 0) ***)))))))
(SINCE((BINDER(END NIL))))
 (SIT ((VB ((ITRNSL (CMEANS ((((#PHYSOB)) (SMOBL (#PLACE)))
(#EVAL(COND((MEMQ(CAAAR MAP2)'(#ON #IN))
(LIST '#SUPPORT (CADAAR MAP2) '#1 '*TIME))
((ERT SIT DEFINITION))))
	   NIL)))))))
 (SIZE ((NOUN (NMEANS ((#SIZE) ((#IS *** #SIZE)))))))
 (SMALL ((MEASURE ((#SIZE (#PHYSOB) NIL)))
	 (ADJ (NMEANS ((#PHYSOB #LITTLE) ((#MORE #SIZE (200 200 200) ***)))))))
 (SOME ((DET (Q INDEF))))
 (SOMETHING ((TPRON (Q INDEF)))))

(DEFLIST SMNTC
	 (SQUARE ((ADJ (NMEANS ((#PHYSOB #RECTANGULAR)
				((#SHAPE ** #RECTANGULAR)))))))
	 (STACK ((NOUN (NMEANS ((#STACK) ((#IS *** #STACK)))))
		 (VB ((TRANS (#STACKUP))))))
	 (START ((VB ((TRANS (CMEANS ((((#ANIMATE)) ((#EVENT)))
				      (#START #2 *TIME)
				      NIL)))))))
	 (SUPPORT ((NOUN (NMEANS ((#PHYSOB #ROLE)
				  ((#SUPPORT *** ?)
				   (#ROLE ((#PHYSOB)) (#SUPPORT #1 #2))))))
		   (VB ((TRANS (CMEANS ((((#PHYSOB)) ((#MANIP)))
					(#SUPPORT #1 #2 *TIME)
					NIL)))))))
	 (TABLE ((NOUN (NMEANS ((#TABLE) ((#IS *** #TABLE)))))))
	 (TALL ((MEASURE ((#HEIGHT (#PHYSOB) T)))
		(ADJ (NMEANS ((#PHYSOB) ((#MORE #HEIGHT *** (200 0 0))))))))
	 (TELL ((VB ((TRANS (CMEANS ((((#ANIMATE)) ((#EVENT)))
				     (#WANT #1 #2 *TIME)
				     NIL)))))))
	 (THAN ((NULL T)))
	 (THAT ((PRONREL T) (DET (SMTHAT)) (NULL T)))
	 (THE ((DET T)))
	 (THEN ((ADV (AND LASTIME(RPLACD (CDDADR (OR (AND (SETQ XX (ASSQ (QUOTE TIME) FE))
					      (NOT (ATOM (CADR XX)))XX)
					 (QUOTE (TIME (#TIME (PAST) NIL)))))
			     (LIST(OR(CADDDR LASTIME)(CAR(CDDDDR LASTIME)))(OR(CAR(CDDDDR LASTIME))(CADDDR LASTIME)))
)))))
	 (THERE ((ADV T)))
	 (THEY ((PRON (SMIT (Q THEY)))))
	 (THICK ((ADJ (NMEANS ((#PHYSOB) ((#MORE #THICKNESS *** (0 200 0))))))
		 (MEASURE ((#THICKNESS (#PHYSOB) T)))))
	 (THIN ((ADJ (NMEANS ((#PHYSOB) ((#MORE #THICKNESS (0 200 0) ***)))))
		(MEASURE ((#THICKNESS (#PHYSOB) NIL)))))
	 (THING ((NOUN (NMEANS ((#THING #VAGUE #PHYSOB) ((#IS *** ?)))))))
	 (THREE ((NUM 3)))
	 (TO ((PREP ((T (CMEANS ((((#PHYSOB)) ((#DIRECTION)))
				 (#EVAL (SUBTOP (QUOTE #1)
					       (QUOTE *OF)
					       (GET MAP2 (QUOTE REFER))))
				 NIL)))))))
	 (TOGETHER ((PRT T)))
	 (TOP ((PREP2 T)))
	 (TOUCH ((VB ((TRANS (#GRASP))))))
	 (TOY ((NOUN (NMEANS ((#PHYSOB) ((#MANIP ***)))))))
	 (TWO ((NUM 2)))
	 (UNDER ((PREP ((T (#LOC #ABOVE NIL))))))
	 (UNDERNEATH ((PREP ((T ((#LOC #ABOVE NIL)))))))
	 (UP ((PRT T)))
	 (WANT ((VB ((TRANS (CMEANS ((((#ANIMATE)) ((#EVENT)))
				     (#WANT #1 #2 *TIME)
				     NIL)))))))
	 (WE ((PRON (SETQ SM (Q (WE))))))
	 (WHAT ((DET T) (PRONREL (SETQ SM (QUOTE (UNKNOWN))))))
	 (WHERE ((QADJ (FQ WHERE))))
	 (WHEN ((BINDER (START END)) (QADJ (FQ WHEN))))
	 (WHITE ((ADJ (#COLOR #WHITE))))
	 (WHICH ((PRONREL T) (DET T)))
	 (WHILE ((BINDER (START END))))
	 (WHO ((PRONREL (SETQ SM (QUOTE (ANIMATE))))
	       (PRON (SETQ SM (Q (ANIMATE))))))
	 (WHY ((QADJ (FQ WHY))))
	 (WIDE ((ADJ (NMEANS ((#PHYSOB) ((#MORE #WIDTH *** (0 200 0))))))
		(MEASURE ((#WIDTH (#PHYSOB) T)))))
	 (WILL ((VB T)))
	 (WOULD ((VB T)))
	 (YOU ((PRON (SETQ SM (Q (SHRDLU)))))))

(DEFLIST SM
	 (ANIMATE ((((ANIM) 0) (0 #ANIMATE #THING) (#THING))
		   (SG-PL INDEF (WHICH))
		   ANIM
		   NIL))
	 (FINDEVENTS ((((FINDEVENTS) 0) (0 #EVENT #THING) (#THING))
		      (SG-PL INDEF)
		      FINDEVENTS
		      NIL))
	 (FRIEND (((NIL 0) (0 #PERSON #ANIMATE #THING) (#ANIMATE #THING))
		  (1 DEF)
		  NIL
		  NIL))
	 (NAME (((NIL 0) (0 #NAME #THING) (#THING)) (1 DEF) NIL NIL))
	 (PLACE ((((PLACE) 0) (0 #PLACE #THING) (#THING)) (SG-PL INDEF (WHICH))
							  PLACE
							  NIL))
	 (SHRDLU (((NIL 0) (0 #ROBOT #ANIMATE #THING) (#ANIMATE #THING)) (1 DEF)
									 NIL
									 NIL))
	 (STACKPARTS ((((PART) 0) (0 #THING #PHYSOB #MANIP) NIL) (3 INDEF)
								 PART
								 NIL))
	 (UNKNOWN ((((UNKNOWN) 0) (0 #THING #PHYSOB #VAGUE) NIL)
		   (SG-PL INDEF (WHICH))
		   UNKNOWN
		   NIL))
	 (UNKNOWNSG ((((UNKNOWN) 0) (0 #THING #PHYSOB #VAGUE) NIL)
		     (NS INDEF (WHICH))
		     UNKNOWN
		     NIL))
	 (WE (((NIL 0) (0 #ANIMATE #THING) (#ANIMATE #THING)) (2 DEF) NIL NIL)))

(DEFLIST REFER (FRIEND :FRIEND) (SHRDLU :SHRDLU) (WE (:SHRDLU :FRIEND)))
(DEFLIST SYS
	 (#ANIMATE (#THING))
	 (#BLACK (#SPECTRUM))
	 (#BLUE (#SPECTRUM))
	 (#BOX (#PHYSOB))
	 (#COLOR (#PROPERTY))
	 (#CONSTRUCT (#PHYSOB))
	 (#EVENT (#THING))
	 (#GREEN (#SPECTRUM))
	 (#HAND (#PHYSOB))
	 (#MANIP (#PHYSOB))
	 (#NAME (#THING))
	 (#NEWWORD (#THING))
	 (#PERSON (#ANIMATE))
	 (#PLACE (#THING))
	 (#RECTANGULAR (#SHAPES))
	 (#PHYSOB (#THING))
	 (#PROPERTY (#THING))
	 (#POINTED (#SHAPES))
	 (#RED (#SPECTRUM))
	 (#RELATION (#THING))
	 (#ROUND (#SHAPES))
	 (#ROW (#CONSTRUCT))
	 (#ROBOT (#ANIMATE))
	 (#SIZE (#PROPERTY))
	 (#SHAPE (#PROPERTY))
	 (#STACK (#CONSTRUCT))
	 (#TABLE (#PHYSOB))
	 (#WHITE (#SPECTRUM)))

(DEFLIST SYSTEM
	 (#ANIMATE (#ROBOT #PERSON))
	 (#CONSTRUCT (#STACK #ROW))
	 (#PHYSOB (#BOX #CONSTRUCT #HAND #MANIP #TABLE))
	 (#PROPERTY (#COLOR #SIZE #SHAPE))
	 (#SHAPES (#RECTANGULAR #ROUND #POINTED))
	 (#SPECTRUM (#BLACK #BLUE #GREEN #RED #WHITE))
	 (#THING (#ANIMATE #EVENT #NAME #PHYSOB #PROPERTY #RELATION)))

(DEFLIST NOGOAL
	 (#DEFINITION T)
	 (#ROLE T)
	 (#SUBST T)
	 (THSETQ T)
	 (THGOAL T)
	 (THOR T)
	 (THNOT T)
	 (THAND T)
	 (THPROG T)
	 (THFIND T)
	 (#DIRECTION T)
	 (#EQDIM T))

(DEFPROP #LIKE T TELLABLE)


(DEFLIST PRIORITY
(#CONTAIN -1)
	 (#EQUIV 1000)
	 (#IS 100)
	 (#COLOR 300)
	 (#SHAPE 200)
(#START -100)
	 (#SUPPORT 400))
(DEFLIST MEASFN
	 (#HEIGHT (LAMBDA (X) (CADDR (SIZE X))))
	 (#SIZE (LAMBDA (X) (APPLY (QUOTE PLUS) (SIZE X))))
	 (#THICKNESS (LAMBDA (X) (CADR (SIZE X))))
	 (#WIDTH (LAMBDA (X) (CAR (SIZE X)))))

(DEFUN #BLUEPRINT
       (X)
       (PROG (PARTS)
	     (COND ((GET X (QUOTE REFER)) (RETURN (QUOTE #2)))
		   ((NULL (SETQ X (CDDAAR (INTERP X)))) (GO DONE)))
	LOOP (COND ((NOT (EQ (CAAR X) (QUOTE THGOAL))) (ERT BLUEPRINT THGOAL))
		   ((EQ (CAADAR X) (QUOTE #IS)))
		   ((EQ (CAADAR X) (QUOTE #PART))
		    (SETQ PARTS (CONS (CADR (CADAR X)) PARTS)))
		   ((ERT #BLUEPRINT)))
	     (AND (SETQ X (CDR X)) (GO LOOP))
	DONE (AND PARTS
		  (GET (CAR PARTS) (QUOTE REFER))
		  (RETURN (GET (CAR PARTS) (QUOTE REFER))))
	     (PUTPROP (QUOTE BLUEPRINT)
		      (COND ((NULL PARTS) (GET (QUOTE STACKPARTS) (QUOTE SM)))
			    ((CDR PARTS) (ERT #BLUEPRINT PARTS))
			    ((GET (CAR PARTS) (QUOTE SM))))
		      (QUOTE SM))
	     (RETURN (QUOTE BLUEPRINT))))

(DEFUN #BUILD
       NIL
       (CMEANS ((((#ANIMATE)) ((#STACK)))
		(#EVAL (LIST (QUOTE #STACKUP) (#BLUEPRINT MAP2) (QUOTE *TIME)))
		NIL)))

(DEFUN #CLEANOFF
       NIL
       (CMEANS ((((#ANIMATE)) ((#PHYSOB))) (#CLEARTOP #2 *TIME) NIL)))

(DEFUN #COLOR FEXPR (A) (EVAL (SUBST (CAR A)
				     (Q COLOR)
				     (Q (NMEANS ((#PHYSOB COLOR)
						 ((#COLOR *** COLOR))))))))

(DEFUN #DEFINE (X Y) (LIST (QUOTE #DEFINITION)
			   (CADADR (CDAAR (INTERP X)))
			   (PROG (X)
				 (PUTPROP (SETQ X (MAKESYM (QUOTE ATM)))
					  (INTERP Y)
					  (QUOTE NEWWORD))
				 (RETURN X))))
(DEFUN #DEFINITION
       FEXPR
       (A)
       (PUTPROP (CADAR A) (QUOTE (NOUN NS)) (QUOTE WORD))
       (PUTPROP (CADAR A)
		(SUBST (SUBST (QUOTE ***)
			      (CADDR (GET (CADR A) (QUOTE NEWWORD)))
			      (CAR (GET (CADR A) (QUOTE NEWWORD))))
		       (QUOTE NG)
		       (QUOTE ((NOUN (SETQ LIST2
					   (LIST (SUBST (SUBST (CADDAR LIST1)
							       (QUOTE ***)
							       (QUOTE NG))
							(CAAR LIST1)
							(CAR LIST1))))))))
		(QUOTE SMNTC)))

(DEFUN #EQDIM (X) (SETQ X (SIZE X)) (AND (EQ (CAR X) (CADR X))
					 (EQ (CAR X) (CADDR X))))

(DEFUN #GRASP NIL (CMEANS ((((#ANIMATE)) ((#MANIP)))
			   (#EVAL (COND ((IMPERF) (QUOTE (#GRASPING #2 *TIME)))
					((QUOTE (#GRASP #2 *TIME)))))
			   NIL)))

(DEFUN #IN
       NIL
       (COND ((CQ LOBJ)
	      (SETQ SKIP T)
	      (SETQ LIST1
		    (MAPCAR (QUOTE (LAMBDA (X) (LIST (LIST (LIST (QUOTE #IN) X)
							   (QUOTE (0 #PLACE))
							   NIL))))
			    SMOB1)))
	     ((CMEANS ((((#MANIP)) ((#BOX))) (#CONTAIN #2 #1 *TIME) NIL)
		      ((((#MANIP)) ((#HAND))) (#GRASPING #1 *TIME) NIL)
		      ((((#PLACE)) ((#BOX))) (#IN #1 #2) NIL)
		      ((((#MANIP)) ((#CONSTRUCT))) (#PART #1 #2 *TIME) NIL)))))

(DEFUN #LOC FEXPR (A) (#LOC2 (CAR A) (CADR A)))

(DEFUN #LOC2
       (LOCTYPE #LOC)
       (COND ((CQ LOBJ)
	      (SETQ SKIP T)
	      (SETQ LIST1
		    (MAPCAR (QUOTE (LAMBDA (X)
	(LIST (LIST    (LIST (QUOTE #LOC) LOCTYPE #LOC X)
		(QUOTE (0 #PLACE)) NIL))))
			    SMOB1)))
	     ((CMEANS ((((#PHYSOB)) ((#PHYSOB)))
		       (#EVAL (LIST (QUOTE #LOC)
				    LOCTYPE
				    (COND (#LOC (QUOTE #1)) ((QUOTE #2)))
				    (COND (#LOC (QUOTE #2)) ((QUOTE #1)))
				    (QUOTE *TIME)))
		       NIL)))))

(DEFUN #NAME NIL (CMEANS ((((#ANIMATE)) ((#PHYSOB))) (#NAME #2) NIL)))

(DEFUN #NOTICE NIL (CMEANS ((((#ANIMATE)) ((#PHYSOB))) (#NOTICE #2 *TIME) NIL)))

(DEFUN #ON
       NIL
       (COND ((CQ LOBJ)
	      (SETQ SKIP T)
	      (SETQ LIST1
		    (MAPCAR (QUOTE (LAMBDA (X) (LIST (LIST (LIST (QUOTE #ON) X)
							   (QUOTE (0 #PLACE))
							   NIL))))
			    SMOB1)))
	     ((CMEANS ((((#PHYSOB)) ((#PHYSOB))) (#ON #1 #2 *TIME)
						 NIL
						 (200 (ANWHERE ON TOP OF)))
		      ((((#PHYSOB)) ((#MANIP))) (#SUPPORT #2 #1 *TIME)
						NIL
						(0 (DIRECTLY ON THE SURFACE)))
		      ((((#PLACE)) ((#PHYSOB))) (#ON #1 #2) NIL)))))

(DEFUN #ROLE FEXPR (A) T)

(DEFUN #PROPDEFINE
       (X)
       (PUTPROP X (QUOTE (PROPN NS)) (QUOTE WORD))
       (PUTPROP X (QUOTE ((PROPN T))) (QUOTE SMNTC)))

(DEFUN #STACKUP
       NIL
       (CMEANS ((((#ANIMATE)) ((#MANIP))) (#STACKUP #2 *TIME) NIL)))
(DEFLIST THMLIST
	 (#ASMUCH ((4 (QUOTE ((THUSE TC-ASMUCH))))))
	 (#BELONG ((3 (QUOTE ((THUSE TC-BELONG))))))
	 (#CALL ((3 (QUOTE ((THUSE TC-3))))))
	 (#CLEARTOP ((2 (QUOTE ((THUSE TC-2)))) (3 (QUOTE ((THUSE TCT-3))))
						(4 (QUOTE ((THUSE TCTE-4))))))
	 (#END ((3 (QUOTE ((THUSE TC-STARTEND3))))
		(4 (QUOTE ((THUSE TC-STARTEND4))))))
	 (#EXISTS ((2 (QUOTE ((THUSE TC-EXISTS))))
		   (3 (QUOTE ((THUSE TCT-EXISTS))))))
	 (#GET-RID-OF ((2 (QUOTE ((THUSE TC-2)))) (3 (QUOTE ((THUSE TCT-3))))
						  (4 (QUOTE ((THUSE TCTE-4))))))
	 (#GRASP ((2 (QUOTE ((THUSE TC-2)))) (3 (QUOTE ((THUSE TCT-3))))
					     (4 (QUOTE ((THUSE TCTE-4))))))
	 (#GRASPING ((3 (QUOTE ((THUSE TCT-GRASPING))))))
	 (#LIKE((3'((THTBF THTRUE)))))
	 (#LOC ((4(QUOTE((THUSE TC-LOC))))(5(QUOTE((THUSE TCT-LOC))))))
	 (#MORE ((4 (QUOTE ((THUSE TC-MORE))))))
	 (#NAME ((2 (QUOTE ((THUSE TC-2))))))
	 (#NOTICE ((2 (QUOTE ((THUSE TC-2))))))
	 (#PACK ((3 (QUOTE ((THUSE TC-3))))))
	 (#PART ((3 (QUOTE ((THUSE TC-PART))))))
	 (#PICKUP ((2 (QUOTE ((THUSE TC-2)))) (3 (QUOTE ((THUSE TCT-PICKUP))))
					      (4 (QUOTE ((THUSE TCTE-PICKUP))))
					      ))
	 (#PUT ((3 (QUOTE ((THUSE TC-3))))
(4(QUOTE((THUSE TCT-PUT))))
(5(QUOTE((THUSE TCTE-PUT))))))
	 (#PUTIN ((3 (QUOTE ((THUSE TC-3)))) (4 (QUOTE ((THUSE TCT-4))))
					     (5 (QUOTE ((THUSE TCTE-5))))))
	 (#PUTON ((3 (QUOTE ((THUSE TC-3)))) (4 (QUOTE ((THUSE TCT-4))))
					     (5 (QUOTE ((THUSE TCTE-5))))))
	 (#RAISE ((1 (QUOTE ((THUSE TC-RAISE))))))
	 (#START ((3 (QUOTE ((THUSE TC-STARTEND3))))
		  (4 (QUOTE ((THUSE TC-STARTEND4))))))
	 (#STACKUP ((2 (QUOTE ((THUSE TC-2))))))
	 (#UNGRASP ((1 (QUOTE ((THUSE TC-UNGRASP))))))
	 (#LOC ((4 (QUOTE ((THUSE TC-LOC))))))
	 (#ON ((3 (QUOTE ((THUSE TC-ON)))) (4 (QUOTE ((THUSE TCT-ON))))))
	 (#PHYSOB ((2 (QUOTE ((THUSE TC-PHYSOB))))))
(#SUPPORT((3 NIL)(4 (QUOTE((THUSE TCT-SUPPORT))))))
	 (#WANT ((4 (QUOTE ((THUSE TC-WANT4))))
		 (5 (QUOTE ((THUSE TC-WANT5)))))))

(DEFLIST CONTRAST
	 (RED #COLOR)
	 (BLUE #COLOR)
	 (GREEN #COLOR)
	 (WHITE #COLOR)
	 (BLACK #COLOR)
	 (BIG #SIZE)
	 (LITTLE #SIZE)
	 (LARGE #SIZE)
	 (SMALL #SIZE)
	 (WIDE #WIDTH)
	 (NARROW #WIDTH)
	 (TALL #HEIGHT)
	 (SHORT #HEIGHT)
	 (THICK #THICKNESS)
	 (THIN #THICKNESS))
(DEFLIST NAMEVENT
	 (#CLEARTOP (I3 (CONS (VBFIX (QUOTE CLEAN) NIL)
			      (PRTPUT (QUOTE OFF) OBJ1))))
	 (#GET-RID-OF (I3 (APPEND (LIST (VBFIX (QUOTE GET) T)
					(QUOTE RID)
					(QUOTE OF))
				  OBJ1)))
	 (#GRASP (I3 (CONS (VBFIX (QUOTE GRASP) NIL) OBJ1)))
	 (#PICKUP (I3 (CONS (VBFIX (QUOTE PICK) NIL) (PRTPUT (QUOTE UP) OBJ1))))
	 (#PUTON (I4 (CONS (VBFIX (QUOTE PUT) T)
			   (APPEND OBJ1 (QUOTE (ON)) OBJ2))))
	 (#STACKUP (I3 (CONS (VBFIX (QUOTE STACK) NIL)
			     (PRTPUT (QUOTE UP) OBJ1))))
(#UNGRASP (I3(APPEND(LIST(VBFIX 'LET T)
'GO 'OF)OBJ1))))

(DEFLIST PAST (PUT PUT))
