Received: from AI.AI.MIT.EDU (CHAOS 3130) by MC.LCS.MIT.EDU  3 Mar 88 00:30:24 EST
Date: Wed,  2 Mar 88 17:18:17 EST
From: Jonathan A Rees <JAR@AI.AI.MIT.EDU>
Subject:  NEX 356 on ITS
To: info-nex@MC.LCS.MIT.EDU
Message-ID: <335149.880302.JAR@AI.AI.MIT.EDU>

I have dumped out a new NEX on the ITS's.  It's based on NTECO (TECO 1212),
so NEX jobs will now share pages with people running NE.


Date: 26 AUG 1985 2043 EDT
From: JAR at MIT-MC.ARPA (Jonathan A Rees)
Subject:  NEX doesn't work on OZ
To: (BUG NEX) at MIT-MC.ARPA

In NEX ?, Emacs ?, Teco ?, TOPS-20 ? on MIT-OZ:

I get ?Internal error at 4004, @ when I start up a NEX.  What gives?  Files
all seem to be there.  It used to work.

Jonathan

Date: 12 AUG 1985 1300 EDT
From: JAR at MIT-MC.ARPA (Jonathan A Rees)
Subject:  Indent LISP Specform
To: (BUG NEX) at MIT-MC.ARPA

In NEX 355, Emacs 162, Teco 1171, ITS 1535 on MIT-MC:

When I do control-tab, sometimes it asks me "always indent FOO forms
this way?," but sometimes it doesn't, when I want it to.  What controls
whether it asks or not?  I think there may be a bug in the logic.  It
may have to do with changing files (it asks for the first file but
doesn't for the second).  If you need more detail let me know & I'll
come up with it.

Jonathan

Date:  9 AUG 1985 1404 EDT
From: JAR at MIT-MC.ARPA (Jonathan A Rees)
Subject:  colon problem
To: (BUG NEX) at MIT-MC.ARPA

In NEX 355, Emacs 162, Teco 1171, ITS 1488 on MIT-MC:

I did control-tab for a form beginning  "(:method ...)", and the following
got inserted at the end of my buffer:

    ;;; Local Modes:
    ;;; Lisp :method Indent:2
    ;;; End:

So far so good; but when I later visited the file, and & Process File
Options was running, I got a NIB error from TECO.  The colon, of course,
was the culprit.

Is there any remedy?  Is this an error in control-tab or in & Process
File Options?  This is distressing.

Jonathan.

Date: 23 JUL 1985 0206 EDT
From: CSTACY at MIT-MC.ARPA (Christopher C. Stacy)
Subject:  minitags
To: (BUG NEX) at MIT-MC.ARPA

In NEX 355, Emacs 162, Teco 1171, ITS 1488 on MIT-MC:

Minitags features request:

1. Whitespace before a label in MIDAS mode should be ignored.
   The line "    FOO:" was not found by <M-,Foo>.

2. In MIDAS mode, .SCALAR and .VECTOR should be recognized as labels.
   So should =,==, =:, etc.

3. I want a variable I can set which contains strings which
   preceede label specs. I would set it to "ATTRIB^OLVAR"
   so that it would find these two lines:
   "LVAR	ERRCOD:	0"
   "ATTRIB 7.,A$CLAS:,|CLASS|"

Thanks!
Chris


Date: 14 JUN 1985 1751 EDT
From: KMP at MIT-MC.ARPA (Kent M Pitman)
To: CSTACY at MIT-MC.ARPA
CC: (BUG NEX) at MIT-MC.ARPA

I think I can arrange to make the functions on c-X B, c-X c-B,
c-X K, and c-m-L conspire to indirect through some higher-level
thing that is not Select Buffer but which calls Select Buffer
after recording some history info so that some semblance of 
history information is kept. I can't guarantee there won't be a
few things that violate this (c-X O, c-X 4 B, ...) but without
wasting gobs of address space re-implementing the world, it's
hard to see how to make everything work perfectly. I'll look at
this next time I get a free little while to do changes...

Received: from SCRC-STONY-BROOK.ARPA by MIT-MC.ARPA 14 Jun 85 16:30:13 EST
Received: from RIO-DE-JANEIRO.SCRC.Symbolics.COM by SCRC-STONY-BROOK.ARPA via CHAOS with CHAOS-MAIL id 254528; Fri 14-Jun-85 16:26:02-EDT
Date: Fri, 14 Jun 85 16:28 EDT
From: Kent M Pitman <KMP@SCRC-STONY-BROOK.ARPA>
Subject: Buffer default after c-X K
To: CSTACY@MIT-MC.ARPA
cc: BUG-NEX@MIT-MC.ARPA
In-Reply-To: <[MIT-MC.ARPA].542803.850614.CSTACY>
Message-ID: <850614162854.7.KMP@RIO-DE-JANEIRO.SCRC.Symbolics.COM>

    Date: Fri, 14 Jun 85 14:33:11 EDT
    From: Christopher C. Stacy <CSTACY@MIT-MC.ARPA>

	Date: Thu, 13 Jun 85 14:08 EDT
	From: Kent M Pitman <KMP at SCRC-STONY-BROOK.ARPA>
	To:   CSTACY at MIT-MC.ARPA, BUG-NEX at MIT-MC.ARPA
	Re:   Buffer default after c-X K
	In-Reply-To: <[MIT-MC.ARPA].540927.850613.CSTACY>

	    Date: Thu, 13 Jun 85 01:53:30 EDT
	    From: Christopher C. Stacy <CSTACY@MIT-MC.ARPA>
	    To: BUG-NEX@MIT-MC.ARPA
	    Message-ID: <[MIT-MC.ARPA].540927.850613.CSTACY>

	    In NEX 355, Emacs 162, Teco 1171, ITS 1488 on MIT-MC:

	    If did a kill buffer command (c-X K), and then returned to the default
	    other buffer offerred, and then typed select buffer (c-X B).
	    It offerred to select the buffer I had just killed.

	This is an Emacs misfeature. There is no buffer selection history. 
	There is only a "Previous Buffer", which is remembered by name. When
	you do Kill Buffer, the Previous Buffer is not voided (because it isn't
	obvious what to put in its place). Had you accepted the default, it would
	have made a new buffer by the old name, not selected the previous buffer.
	I've thought about fixing this from time to time, but it's fairly 
	complicated because qPrevious Buffer is manipulated explicitly by so
	many programs. I guess in the special case of Kill Buffer, I could hook
	it to search the list of buffers and find some arbitrary buffer other than
	the one you'd just selected to make be the default... I'm not sure that
	would feel any better, though.

    If there were some kind of stack or ring used by Select Buffer,
    that could be used to find a reasonable default.

No, you missed the point. Select Buffer could maintain such a ring, but unfortunately,
Select Buffer is called by many functions which don't mean to set the default but
which have no other way to make sure that buffer locals get set up correctly. People
who do this know they have to bind qPrevious Buffer around the call to Select Buffer
so that Select Buffer won't `remember' that it was called and later offer a default that
the user won't expect. However, if Select Buffer decides to maintain a stack/ring,
all code that uses Select Buffer in this secretive way would have to know to bind the
state of the stack/ring and that would be virtually impossible, since probably almost
every library ever written makes assumptions about that feature... So it's fairly hard
to change... at least in that way. I'm still thinking about whether there are other, 
more subtle and creative, ways to guess the right thing to do...


Date: 14 JUN 1985 1433 EDT
From: CSTACY at MIT-MC.ARPA (Christopher C. Stacy)
Subject:  Buffer default after c-X K
To: KMP at SCRC-STONY-BROOK.ARPA
CC: (BUG NEX) at MIT-MC.ARPA
In-reply-to: Msg of Thu 13 Jun 85 14:08 EDT from Kent M Pitman <KMP at SCRC-STONY-BROOK.ARPA>

    Date: Thu, 13 Jun 85 14:08 EDT
    From: Kent M Pitman <KMP at SCRC-STONY-BROOK.ARPA>
    To:   CSTACY at MIT-MC.ARPA, BUG-NEX at MIT-MC.ARPA
    Re:   Buffer default after c-X K
    In-Reply-To: <[MIT-MC.ARPA].540927.850613.CSTACY>

        Date: Thu, 13 Jun 85 01:53:30 EDT
        From: Christopher C. Stacy <CSTACY@MIT-MC.ARPA>
        To: BUG-NEX@MIT-MC.ARPA
        Message-ID: <[MIT-MC.ARPA].540927.850613.CSTACY>

        In NEX 355, Emacs 162, Teco 1171, ITS 1488 on MIT-MC:

        If did a kill buffer command (c-X K), and then returned to the default
        other buffer offerred, and then typed select buffer (c-X B).
        It offerred to select the buffer I had just killed.

    This is an Emacs misfeature. There is no buffer selection history. 
    There is only a "Previous Buffer", which is remembered by name. When
    you do Kill Buffer, the Previous Buffer is not voided (because it isn't
    obvious what to put in its place). Had you accepted the default, it would
    have made a new buffer by the old name, not selected the previous buffer.
    I've thought about fixing this from time to time, but it's fairly 
    complicated because qPrevious Buffer is manipulated explicitly by so
    many programs. I guess in the special case of Kill Buffer, I could hook
    it to search the list of buffers and find some arbitrary buffer other than
    the one you'd just selected to make be the default... I'm not sure that
    would feel any better, though.

If there were some kind of stack or ring used by Select Buffer,
that could be used to find a reasonable default.

Received: from SCRC-STONY-BROOK.ARPA by MIT-MC.ARPA 13 Jun 85 14:14:32 EST
Received: from RIO-DE-JANEIRO.SCRC.Symbolics.COM by SCRC-STONY-BROOK.ARPA via CHAOS with CHAOS-MAIL id 253722; Thu 13-Jun-85 14:05:44-EDT
Date: Thu, 13 Jun 85 14:08 EDT
From: Kent M Pitman <KMP@SCRC-STONY-BROOK.ARPA>
Subject: Buffer default after c-X K
To: CSTACY@MIT-MC.ARPA, BUG-NEX@MIT-MC.ARPA
In-Reply-To: <[MIT-MC.ARPA].540927.850613.CSTACY>
Message-ID: <850613140822.5.KMP@RIO-DE-JANEIRO.SCRC.Symbolics.COM>

    Date: Thu, 13 Jun 85 01:53:30 EDT
    From: Christopher C. Stacy <CSTACY@MIT-MC.ARPA>
    To: BUG-NEX@MIT-MC.ARPA
    Message-ID: <[MIT-MC.ARPA].540927.850613.CSTACY>

    In NEX 355, Emacs 162, Teco 1171, ITS 1488 on MIT-MC:

    If did a kill buffer command (c-X K), and then returned to the default
    other buffer offerred, and then typed select buffer (c-X B).
    It offerred to select the buffer I had just killed.

This is an Emacs misfeature. There is no buffer selection history. 
There is only a "Previous Buffer", which is remembered by name. When
you do Kill Buffer, the Previous Buffer is not voided (because it isn't
obvious what to put in its place). Had you accepted the default, it would
have made a new buffer by the old name, not selected the previous buffer.
I've thought about fixing this from time to time, but it's fairly 
complicated because qPrevious Buffer is manipulated explicitly by so
many programs. I guess in the special case of Kill Buffer, I could hook
it to search the list of buffers and find some arbitrary buffer other than
the one you'd just selected to make be the default... I'm not sure that
would feel any better, though.


Date: 13 JUN 1985 0153 EDT
From: CSTACY at MIT-MC.ARPA (Christopher C. Stacy)
To: (BUG NEX) at MIT-MC.ARPA

In NEX 355, Emacs 162, Teco 1171, ITS 1488 on MIT-MC:

If did a kill buffer command (c-X K), and then returned to the default
other buffer offerred, and then typed select buffer (c-X B).
It offerred to select the buffer I had just killed.

Date: 14 APR 1985 1940 EST
From: KMP at MIT-MC (Kent M Pitman)
Subject: New NEX version: 355
To: INFO-NEX at MIT-MC

This NEX knows to get ZBABYL from EMACS; instead of KMP;, but is otherwise
the same (unless some dumped Emacs library has changed in the interim,
which is doubtful). In any case, please report any problems.
-kmp

Date: 24 November 1984 14:43-EST
From: Kent M Pitman <KMP @ MIT-MC>
Subject:  MINI Library
To: BUG-NEX @ MIT-MC

In NEX 354, Emacs 162, Teco 1171, ITS 1382 on MIT-MC:

The MINI library should be used by NEX instead of there being two
sources.

Also, the strings in q3 and q4 which get set up for searching should be
held by mode-dependent variables.
-kmp

Date: 23 October 1984 01:12-EDT
From: Christopher C. Stacy <CSTACY @ MIT-MC>
Subject:  c-x B
To: BUG-NEX @ MIT-MC

In NEX 354, Emacs 162, Teco 1171, ITS 1382 on MIT-MC:

I think that when a buffer is killed it can remain the default buffer
for c-x B to offer to select.

Date: 21 October 1984 14:24-EDT
From: Kent M Pitman <KMP @ MIT-MC>
Subject: NEX.354
To: INFO-NEX @ MIT-MC

NEX 354 is only a very tiny bit different than NEX 353.
It fixes a minor bug in the file defauling algorithm used
by c-X c-W in the special case of a c-U argument (which I
suspect no one uses but me). Please report any problems
to BUG-NEX@MC. -kmp

Date: 14 March 1984 03:54-EST
From: Kent M Pitman <KMP @ MIT-MC>
Subject: Smaller?
To: INFO-NEX @ MIT-MC

We're running an experimental NEX on MC which should start about 4K 
smaller than it used to (due to some patches I made in the dump
sequence to get around a Teco GC bug which was causing the NEX's
setup command file never to get reclaimed). Let me know if any strange
problems come up with the new version. I hope we won't have to revert
to the older, larger version, but I can't guarantee it. I will see
about getting Teco changed correctly to avoid the "experimental" feel
of this change.
-kmp

Received: from SCRC-MERRIMACK by SCRC-STONY-BROOK with CHAOS; Mon 12-Mar-84 22:35:31-EST
Date: Mon, 12 Mar 84 22:33 EST
From: Mike McMahon <MMcM%SCRC-TENEX@MIT-ML.ARPA>
Subject: GC not reclaiming impure strings held by macro frames
To: Kent M Pitman <KMP@MIT-MC.ARPA>
cc: BUG-TECO@MIT-MC.ARPA, BUG-EMACS@MIT-MC.ARPA, BUG-NEX@MIT-MC.ARPA
In-Reply-To: The message of 10 Mar 84 18:48-EST from Kent M Pitman <KMP at MIT-MC>
Message-ID: <840312223310.2.MMcM@TENEX.SCRC.Symbolics>

    Date: 10 March 1984 18:48-EST
    From: Kent M Pitman <KMP @ MIT-MC>

    It looks probable that Teco is considering all macro frames to be live,
    rather checking to see if they really are.

Your guess is right.

To do it your way, you can change GCC2 to chain through the macro pdl
list starting with what's in MACPTR and following by way of MFLINK.
Something like (untested of course):
GCC1:	MOVE T,MACPTR
GCC2:	MOVEI T,MFCSTR(T)	;POINT TO CSTR
	SKIPE (T)
	 CALL GCMA
	ADDI T,MFARG1-MFCSTR
	CALL GCM	;MARK MACRO ARG 1 (MAY BE A STRING POINTER)
	ADDI T,MFARG2-MFARG1
	CALL GCM	;MARK MACRO ARG 2
	SKIPE T,MFLINK-MFARG2(T)
	 JRST GCC2

Probably an easier solution is to have FLSFRM do SETZM MFCPTR+1(A), so
that the (now dead) frame doesn't point to the string at all.

Date: 10 March 1984 18:48-EST
From: Kent M Pitman <KMP @ MIT-MC>
Subject: GC not reclaiming impure strings held by macro frames
To: BUG-TECO @ MIT-MC
cc: BUG-EMACS @ MIT-MC, BUG-NEX @ MIT-MC

This message records a discussion I had with RMS regarding a 
probable bug in the Teco GC relating to impure strings held by 
inactive macro frame pointers.

I have a Teco init file for dumping an Emacs which does some setup, 
then does:

  er  @y fsrgetty"n@' ftAttempting to macro buffer... :m(hfx*)'

The start file which gets loaded is very large (about 5K) and does

  :m(@:i*| -1f? ei@ejw@ft
  Dumped to N
  0fsechoactivew164000.fs exit|)

at the end of it so that the 5K string can get reclaimed by the -f?

Unfortunately, if I read the resulting BIN file into an editor and 
search for the 5K start file, I find that the string is still present
and not getting GC'd.

From DDT, did searching for the ASCII text of the start file and
found the rubout leading off that string to be in the first char of
47440(8) Given that QRBUF holds 277306(8), I computed the string 
pointer as -34359735078(10), which Teco recognizes as a valid string
pointer and g(-34359735078) seems to yank my start file so I'm sure
I'm looking at the right object.

Using W from DDT again, I determined that the only locations pointing
to -34359735078(10) are MFSTRT+20, MFSTRT+27, MFSTRT+36, and MFSTRT+54,
so it looks to me like it's Teco internals that is holding onto the
only pointer to this.

It looks probable that Teco is considering all macro frames to be live,
rather checking to see if they really are.

For now I will attempt to kludge around this by making my start file into
a library and just not :EJ'ing it upon startup after dump, but if someone
who knows enough to fix this bug for real could do so, I would 
greatly appreciate it.

Thanks, -kmp

Date: 6 March 1984 13:57-EST
From: Kent M Pitman <KMP @ MIT-MC>
Subject:  m-A/c-sh-A and m-D/c-sh-D
To: WGD @ MIT-MC
cc: BUG-NEX @ MIT-MC
In-reply-to: Msg of 6 Mar 1984 06:13-EST from William G. Dubuque <WGD>

    Date: 6 March 1984 06:13-EST
    From: William G. Dubuque <WGD>

    This sounds like it would be a reasonable change. Since when is
    m-A a c-sh-A synonym?

Since c-sh-A was put in, m-A has been a synonym (Lisp Mode only). Since it
is not a destructive operation, I didn't bother changing it in other modes.
The problem with m-D is that I wouldn't want it to be a buffer-modifying
operation in some modes and not in others.

    I must admit that I have m-D wired in so it would probably take some
    experimentation to see if I could get used to the change. Of course I 
    can always control it in my init file. What's the status of this stuff?

Nothing is installed yet, but I'll probably go ahead with the experiment
one of these days soon. I haven't spoken with Chris about it but I imagine
his opinion will about mirror yours in this case.

Date: 1 March 1984 00:59-EST
From: Kent M Pitman <KMP @ MIT-MC>
Subject:  [CSTACY: NEX.352]
To: "(FILE [KMP;NEX MAIL])" @ MIT-MC

Date: 29 February 1984 23:51-EST
From: Christopher C. Stacy <CSTACY>
To:   KMP
Re:   NEX.352
In-reply-to: Msg of 02/29/84 19:18:23 from KMP

Just what I wanted! Thanks!

Date: 29 February 1984 19:35-EST
From: Kent M Pitman <KMP @ MIT-MC>
Subject:  BABYL and NEX - interface feature request
To: CSTACY @ MIT-MC
cc: BUG-NEX @ MIT-MC
Supersedes: Msg of 29 Feb 84 19:33-EST from Kent M Pitman <KMP@MIT-MC>

    Date: 21 February 1984 10:34-EST
    From: Christopher C. Stacy <CSTACY>
    To:   BUG-NEX
    Re:   BABYL and NEX - interface feature request

    I like to use NEX to read my mail, with BABYL and ZBABYL.
    My TS BABYL is linked to TS NEX.  My NEX init, which does seem to be
    getting loaded, has Mail Reader Library set to ZBABYL. I type :BABYL.

     o My CSTACY ZBABYL and CSTACY ZMAIL init files are not being loaded.

This is because ZBABYL was not being loaded. Only BABYL' was being loaded.
This is "fixed" by the following...

     o I currently get the desired behavior when I just start up a
       NEX and do c-X R -- the init files get loaded and stuff.
       I would like :BABYL to be like "NEX^Hc-XR".

I didn't like this because it meant with one init file, you could only get
one choice of mail reader. I made the jname override the default value of
Mail Reader Library.

     o The BABYL job modeline says EMACS and stuff if I get back into
       NEX...this is sort of confusing, but I don't know how hard it
       is to fix.

I think this is fixed.

     o I would like NEX to announce itself when it starts up,
       even if it is hacking BABYL.

I don't like this. You can force this yourself in your NEX init 
file if you really want by doing:

  qNEX Mailread?"n m(m.m & NEX Greeting)'


Date: 29 February 1984 19:33-EST
From: Kent M Pitman <KMP @ MIT-MC>
Subject:  BABYL and NEX - interface feature request
To: CSTACY @ MIT-MC
cc: BUG-NEX @ MIT-MC
In-reply-to: Msg of 21 Feb 1984 10:34-EST from Christopher C. Stacy <CSTACY>

    Date: 21 February 1984 10:34-EST
    From: Christopher C. Stacy <CSTACY>
    To:   BUG-NEX
    Re:   BABYL and NEX - interface feature request

    I like to use NEX to read my mail, with BABYL and ZBABYL.
    My TS BABYL is linked to TS NEX.  My NEX init, which does seem to be
    getting loaded, has Mail Reader Library set to ZBABYL. I type :BABYL.

     o My CSTACY ZBABYL and CSTACY ZMAIL init files are not being loaded.

This is because ZBABYL was not being loaded. Only BABYL' was being loaded.

     o I currently get the desired behavior when I just start up a
       NEX and do c-X R -- the init files get loaded and stuff.
       I would like :BABYL to be like "NEX^Hc-XR".

I didn't like this because it meant with one init file, you could only get
one choice of mail reader. I made the jname override the default value of
Mail Reader Library.

     o The BABYL job modeline says EMACS and stuff if I get back into
       NEX...this is sort of confusing, but I don't know how hard it
       is to fix.

I think this is fixed.

     o I would like NEX to announce itself when it starts up,
       even if it is hacking BABYL.

I don't like this. You can force this yourself in your NEX init 
file if you really want by doing:

  qNEX Mailread?"n m(m.m & NEX Greeting)'


Date: 29 February 1984 19:18-EST
From: Kent M Pitman <KMP @ MIT-MC>
Subject: NEX.352
To: INFO-NEX @ MIT-MC

If you run NEX under a jname of BABYL, NBABYL, or ZBABYL it will try
to find the correct library and run that. This overrides any setting
of Mail Reader Library in your NEX init file.

Date: 29 February 1984 10:32-EST
From: Kent M Pitman <KMP @ MIT-MC>
Subject:  c-L peeking for char
To: BUG-NEX @ MIT-MC

In NEX 348, Emacs 162, Teco 1171, ITS 1367 on MIT-MC:

c-L should peek in full character input mode so as not 
to lose sh- bits on mouse blips if they follow. Ditto for
9, I suppose.

Date: 29 February 1984 10:04-EST
From: Kent M Pitman <KMP @ MIT-MC>
Subject:  Symbolics/LMIT incompatibility about c-sh-A,etc. in SUPDUP
To: RMS @ MIT-MC, BUG-LISPM @ MIT-MC
cc: CSTACY @ MIT-MC, BUG-NEX @ MIT-MC
References:
 Msg of 29 Feb 84 06:00-EST from Christopher C. Stacy <CSTACY @ MIT-MC>,
 Msg of 29 Feb 84 06:21-EST from Christopher C. Stacy <CSTACY @ MIT-MC>

    Date: 29 February 1984 06:00-EST
    From: Christopher C. Stacy <CSTACY @ MIT-MC>

    I can't seem to use NEX from a Stallman-brand LispM SUPDUP window.
    When I hold down CONTROL and type the letter "a", I get mini-arglist.

    Date: 29 February 1984 06:21-EST
    From: Christopher C. Stacy <CSTACY @ MIT-MC>

    In the MIT system, SUPDUP preserves the case of control characters
    as typed on the keyboard.  This was an incompatible change which
    Symbolics did not pick up, and although I don't think you notice
    in EMACS, in NEX it prevents you from typing common commands.

As I understand it, under SUPDUP the LMIT system sends Control-a 
when you hold control and press "A", while the Symbolics system 
sends Control-A in that case. When you hold the shift key on the
LMIT system, you send Control-A, while on a Symbolics system you
send Control-a. In other words, Control-a and Control-A are
interchanged in SUPDUP between these two systems.

Personally, I consider this a bug in the LMIT system. There are
no significant non-LispM-oriented communities out there who are 
using a ton of shift keys, so you can't claim this makes unfair
assumptions about the use of those other keys. And I think it is
important that the thing you get when you hold Control and hit A
be something such that if you mask out the control bit, you're 
left with a capital A.

A decision was made by both sets of LispM designers that if you did
no special shifting, Control-a locally to the LispM should mean 
<Control>+<Capital-A> and I think that decision should be carried 
compatibly through, even on SUPDUP windows.

The problem comes up because I have implemented c-sh-A and c-sh-D
in NEX (my Emacs variant) on MC and users of NEX are unable to use
it from a SUPDUP window on an LMIT system right now due to the
incompatibility.

By the way, in Emacs it turns out to be equally useful to think
of Emacs c-^ as a c-sh- prefix rather than a c- prefix, since the
only char besides c-sh-A or c-sh-D I have ever wanted to access via
c-^ prefix is %, which must be shifted anyway.

One way or another, I would appreciate it if the designers of 
these two systems could come to some agreement on this issue 
since remote programs cannot poll the software type of the 
SUPDUP server in order to decide which convention is in effect.

Until an agreement is made one way or the other, I don't plan to
change the NEX command set, so for now that will mean NEX will
continue to behave as if broken from an LMIT supdup window.
-kmp

Date: 29 February 1984 06:21-EST
From: Christopher C. Stacy <CSTACY @ MIT-MC>
To: BUG-NEX @ MIT-MC


In the MIT system, SUPDUP preserves the case of control characters
as typed on the keyboard.  This was an incompatible change which
Symbolics did not pick up, and although I don't think you notice
in EMACS, in NEX it prevents you from typing common commands.

Date: 28 February 1984 18:24-EST
From: Kent M Pitman <KMP @ MIT-MC>
To: INFO-NEX @ MIT-MC

What command do you use to kill the word in front of the cursor?
Standard Emacs provides m-D for this purpose.
NEX provides m-K as a synonym.
Standard Emacs uses m-K to delete the rest of the sentence, which
 I never use. That's why I use m-K.

I'm thinking of making m-K be the only command that works for this.
I would make m-D just beep except in Lisp Mode, where m-D would be
a c-sh-D synonym (just as m-A is a c-sh-A synonym there).

Any thoughts about whether this change would be worth the 
incompatibility with Emacs?

Date: 28 February 1984 18:03-EST
From: Kent M Pitman <KMP @ MIT-MC>
Subject: NEX.348
To: INFO-NEX @ MIT-MC

Minor fixes to c-sh-A.
When NEX runs under BABYL (or related) jname, the initial mode line
says NEX, not Emacs.

Basically nothing major. Let me know if there are problems.

Date: 26 February 1984 23:39-EST
From: Kent M Pitman <KMP @ MIT-MC>
Subject:  c-sh-A bug
To: BUG-NEX @ MIT-MC

In NEX 347, Emacs 162, Teco 1171, ITS 1367 on MIT-MC:

c-sh-A on a normal function inside a method types (:METHOD before
the name of the function whose arglist it shows.

Date: 21 February 1984 10:34-EST
From: Christopher C. Stacy <CSTACY @ MIT-MC>
Subject: BABYL and NEX - interface feature request
To: BUG-NEX @ MIT-MC

I like to use NEX to read my mail, with BABYL and ZBABYL.
My TS BABYL is linked to TS NEX.  My NEX init, which does seem to be
getting loaded, has Mail Reader Library set to ZBABYL. I type :BABYL.

 o My CSTACY ZBABYL and CSTACY ZMAIL init files are not being loaded.

 o I currently get the desired behavior when I just start up a
   NEX and do c-X R -- the init files get loaded and stuff.
   I would like :BABYL to be like "NEX^Hc-XR".

 o The BABYL job modeline says EMACS and stuff if I get back into
   NEX...this is sort of confusing, but I don't know how hard it
   is to fix.

 o I would like NEX to announce itself when it starts up,
   even if it is hacking BABYL.


Date: 21 February 1984 10:16-EST
From: Kent M Pitman <KMP @ MIT-MC>
To: CSTACY @ MIT-MC
cc: BUG-NEX @ MIT-MC
In-reply-to: Msg of 21 Feb 1984 04:19-EST from Christopher C. Stacy <CSTACY>

    Date: 21 February 1984 04:19-EST
    From: Christopher C. Stacy <CSTACY>

    If I link BABYL to NEX, I don't seem to get the same thing
    I would get from typing c-x R in NEX.

This is a relatively useless comment. Can you tell me what's different?

Date: 21 February 1984 04:19-EST
From: Christopher C. Stacy <CSTACY @ MIT-MC>
To: BUG-NEX @ MIT-MC

If I link BABYL to NEX, I don't seem to get the same thing
I would get from typing c-x R in NEX.

Date: 16 February 1984 20:17 EST
From: Kent M Pitman <KMP @ MIT-MC>
Subject: NEX.347
To: INFO-NEX @ MIT-MC

Slight changes again. (SEND SELF ...) and (LEXPR-SEND SELF ...) now
track through component flavors in c-sh-A and c-sh-D.

Please report any problems.
-kmp

Date: 16 February 1984 05:16 EST
From: Kent M Pitman <KMP @ MIT-MC>
Subject: NEX.345
To: INFO-NEX @ MIT-MC

There's a new NEX. It has a preliminary version of c-sh-D which will
find the documentation string inside a definition (though not the
comments above a definition (for now)). It's c-^ lowercase-d
on an ascii terminal. Of course, there's c-sh-A still, though its
implementation has changed slightly. Both c-sh-D and c-sh-A will
sometimes work in (SEND SELF ...) forms. It will not track through
included flavors (yet) though.

Other than that, things should be the same.
-kmp

Date: 30 January 1984 07:21 EST
From: Kent M Pitman <KMP @ MIT-MC>
Subject:  Occasional bad defaulting in c-X B
To: BUG-NEX @ MIT-MC

In NEX 344, Emacs 162, Teco 1171, ITS 1362 on MIT-MC:

If Previous Buffer is a killed buffer, then c-X B will show 
its name as a default, but typing Return will not select it.

Date: Sunday, 29 January 1984, 01:34-EST
From: Kent M Pitman <kmp at MIT-MC>
Subject: NEX.343
To: INFO-NEX at MC

The new NEX has c-X B and c-X & exchanged.
If for some reason you don't like the new behavior,
you want something like

 q:.X(B)(q:.X(&)u:.X(B))u:.X(&)	  !* Swap c-X & and c-X B !

in your init file to change it back. Also, c-X & has been
changed slightly to make the change a more reasonable one:

 You can type Help (or c-_ H on ASCII terminals) to get help.
 You must type the name of an existing buffer 
   (or some substring of one, which will complete).
 If you want to make a new buffer, type Linefeed rather 
   than CR to end the buffer name.
 In the event of ambiguity, an exact match has preference.
   If no exact match, then the shortest substring will
   be accepted. So if there is FOO and FOOBAR and you type
   FO, you'll get FOO.

These are the best you can get from the existing Emacs completing
reader. To get any better, I'd have to write my own, which would
cost more address space than you'd be willing to pay.
-kmp

Date: 26 January 1984 23:40 EST
From: Kent M Pitman <KMP @ MIT-MC>
Subject:  arglist in Nex
To: WGD @ MIT-MC
cc: BUG-NEX @ MIT-MC
In-reply-to: Msg of 26 Jan 1984 20:50 EST from William G. Dubuque <WGD>

    Date: 26 January 1984 20:50 EST
    From: William G. Dubuque <WGD>

    How hard would it be to add similar functionality for documentation?
    Something that just printed out (or put you in a recursive edit on)
    the comments preceding the definition would be very useful.
    What do you think? Does Zmacs have something like this?

Zmacs has something similar (c-sh-D), but it doesn't find the comments 
above the definitions. Still, that might not be such a bad thing. I will 
think about putting something like that in.
-kmp

Date: 2 January 1984 14:41 EST
From: Kent M Pitman <KMP @ MIT-MC>
Subject: NEX.342 now available on OZ
To: INFO-NEX @ MIT-MC

The latest version of NEX (with autoloading EMOUSE) is now available on OZ.
Nothing has changed on MC.

Problems in the Twenex version of NEX where Tab/Linefeed mysteriously
lost in Lisp Mode have been tracked down and fixed.

Please let me know if there are any more problems with Twenex NEX.

Date: 20 December 1983 02:39 EST
From: Kent M Pitman <KMP @ MIT-MC>
Subject: NEX.342
To: INFO-NEX @ MIT-MC

NEX will understand about the LispM mouse (eg, Mouse-Left will 
move the cursor to where you're pointing) if you have done
    (LOAD "MC:EMACS;EMOUSE LISP")
 or (LOAD "OZ:PS:<EMACS>EMOUSE.LISP")

Date: Saturday, 10 December 1983, 05:55-EST
From: Kent M Pitman <kmp at MIT-MC>
Subject: ZBABYL feature
To: CSTACY at MIT-MC
Cc: BUG-NEX at MIT-MC
In-reply-to: The message of 8 Dec 83 02:01-EST from Christopher C. Stacy <CSTACY>

    Date: 8 December 1983 02:01 EST
    From: Christopher C. Stacy <CSTACY>
    To:   BUG-NEX
    Re:   ZBABYL feature

    In ZBABYL in NEX 339, Emacs 162, Teco 1171, ITS 1356 on MIT-MC:

    I think I might like a hook on the SPACE command in a survey so that
    in addition to exiting the survey to the message being pointed at, it
    put me in one window mode (if I was in two window mode.)

If you set the variable 

  Babyl Two Window Survey Menu

to non-zero in your init file, the Survey Menu will use two window mode.
However, it enters the bottom, not the top window.

Alternatively, since you how have c-X 1, c-X 2, and c-X O available from
Babyl, you can control how many windows are active manually pretty easily.

Date: 8 December 1983 02:01 EST
From: Christopher C. Stacy <CSTACY @ MIT-MC>
Subject:  ZBABYL feature
To: BUG-NEX @ MIT-MC


In ZBABYL in NEX 339, Emacs 162, Teco 1171, ITS 1356 on MIT-MC:

I think I might like a hook on the SPACE command in a survey so that
in addition to exiting the survey to the message being pointed at, it
put me in one window mode (if I was in two window mode.)

Date: Sunday, 4 December 1983, 20:37-EST
From: Kent M Pitman <kmp at MIT-MC>
Subject: minitags
To: CSTACY at MIT-MC, BUG-NEX at MIT-MC
In-reply-to: The message of 3 Dec 83 04:03-EST from Christopher C. Stacy <CSTACY>

    Date: 3 December 1983 04:03 EST
    From: Christopher C. Stacy <CSTACY>
    To:   BUG-NEX
    Re:   minitags

    In NEX 338, Emacs 162, Teco 1171, ITS 1356 on MIT-MC:

    M-, is too slow in MIDAS mode.

NEX.339

Date: 4 December 1983 20:30 EST
From: Kent M Pitman <KMP @ MIT-MC>
Subject: NEX.339
To: INFO-NEX @ MIT-MC

The only change should be that m-, (^R Mini-Find Tag) and
c-m-, (^R Mini-Visit Tag) should be massively faster in
Midas mode. Of course, any changes to other libraries that
get compressed in will have been picked up, too. Please
report problems. -kmp

Date: 3 December 1983 04:03 EST
From: Christopher C. Stacy <CSTACY @ MIT-MC>
Subject:  minitags
To: BUG-NEX @ MIT-MC

In NEX 338, Emacs 162, Teco 1171, ITS 1356 on MIT-MC:

M-, is too slow in MIDAS mode.

Date: 27 November 1983 21:14 EST
From: Kent M Pitman <KMP @ MIT-MC>
Subject: NEX.338: m-X Find Unbalanced Parentheses
To: INFO-NEX @ MIT-MC

NEX has a new command,
 m-X Find Unbalanced Parentheses
It does the obvious thing.

Date: 10 November 1983 00:56 EST
From: Kent M. Pitman <KMP @ MIT-MC>
Subject:  Doctor Mode auto-documentation
To: CSTACY @ MIT-MC
cc: BUG-NEX @ MIT-MC

    Date: 9 November 1983 23:03 EST
    From: Christopher C. Stacy <CSTACY @ MIT-MC>
    In NEX 335, Emacs 162, Teco 1171 under ITS 1356 on MC:
    Doctor Mode claims to autoload the TEX library and run Tex Mode.
NEX.336

Date: 9 November 1983 23:03 EST
From: Christopher C. Stacy <CSTACY @ MIT-MC>
Subject:  Doctor Mode auto-documentation
To: BUG-NEX @ MIT-MC

In NEX 335, Emacs 162, Teco 1171 under ITS 1356 on MC:

Doctor Mode claims to autoload the TEX library and run Tex Mode.

Date: 5 November 1983 22:22 EST
From: Kent M. Pitman <KMP @ MIT-MC>
Subject: New NEX (version 335)
To: INFO-NEX @ MIT-MC

From a LispM keyboard (via Supdup), c-sh-A runs Mini-Arglist.
It tries to find the arglist from a DEFUN elsewhere in the same file.

From an ASCII keyboard, control-^ a (lowercase A, not uppercase A)
will also run this function.

In Lisp Mode only, meta-A will also run this function. On an AAA, this
means you can type Pause-Shift-A which feels almost right...

In non-Lisp Mode, meta-A still runs Beginning of Sentence or whatever
it used to be.

Please report any problems with this.
--KMP

Date: 4 November 1983 05:36 EST
From: Christopher C. Stacy <CSTACY @ MIT-MC>
To: BUG-NEX @ MIT-MC

In NEX 331, Emacs 162, Teco 1171 on MC:

This is pretty fun!

Date: 4 November 1983 03:50 EST
From: Kent M. Pitman <KMP @ MIT-MC>
To: INFO-NEX @ MIT-MC

NEX.331 has the following new commands:
 m-X Update Attribute List
 m-X Reparse Attribute List
These work more or less as you would expect them to from experience
with the analagous commands on the LispM.

Everything else should be essentially unchanged. NEX.330 will stay
around as :ONEX in case there are any problems.
-kmp

Date: 30 October 1983 23:46 EDT
From: Kent M. Pitman <KMP>
To:   INFO-NEX
Re:   NEX 330

Actually, I decided to increment the major version after all. I made some
enhancements to the m-X Bug command. It now inserts a system/version line
at the top of the message and forces you to provide a subject even if you
don't ordinarily have Babyl Require Subjects turned on for other messages.
The version of NEX which has been running for the past couple of weeks is
still around as ONEX in case there's any problem.
-kmp

Date: 30 October 1983 23:01 EDT
From: Kent M. Pitman <KMP>
To:   INFO-NEX
Re:   New NEX dump

There are new NEX dumps on MC and OZ. Very minor bug fixes and feature
additions. Please report any problems. --kmp

Date: 25 October 1983 14:23 EDT
From: Kent M. Pitman <KMP @ MIT-MC>
Subject: NEX size, cont'd
To: CSTACY @ MIT-MC
cc: BUG-NEX @ MIT-MC

NEX 323 and NEX 329 are identical sizes, by the way.

Date: 25 October 1983 14:17 EDT
From: Kent M. Pitman <KMP @ MIT-MC>
Subject:  NEX size
To: CSTACY @ MIT-MC
cc: BUG-NEX @ MIT-MC
In-reply-to: Msg of 25 Oct 1983 11:41 EDT from Christopher C. Stacy <CSTACY>

    Date: 25 October 1983 11:41 EDT
    From: Christopher C. Stacy <CSTACY>
    Re:   NEX

    ITS no longer fits inside a bare NEX.

This is not true. In a bare NEX, ITS fits fine. In fact, in your environment,
ITS fits fine. Your problem is probably that you are trying to load the Tags
library and get the tags table in. In fact, that even works in a bare NEX. It's
your init that pushes it over the limit. Also, in general ITS may be expanding
in size, too (eg, extra comments or wahtever), so this will not be in general
something I can always guarantee.

Sometime I will make a pass over NEX and see if I can shrink its size, though.

For now, why not use m-, instead of m-. -- isn't ITS all in one file anyway?

    Also, I created BUG-NEX@MC ==> KMP.

Thanks. I expanded this to include a log file on my dir.

Also, it would help if your bug reports included NEX version numbers. Maybe
I'll extend m-X Bug to know at least about that...
-kmp

