;-*- mode: lisp; base: 8; package: user -*-
;LISP FORM OF CHEOPS MICROINSTRUCTION.

;( ...  <TAG>  ( (<MAIN-OP> MODIFIERS)  (SUB-OP MOD1 MOD2 ..) .. ))

;  MAIN OP CAN BE ALU, ARRAY, ARRAY-HOLD, DUPLICATE-OP, OR A PSEUDO OP
;  SUCH AS DEFINE-AC, DEFINE-AAC, DEFINE-PDL-REGISTER.

;  SUB-OP CAN BE (FOLLOWED BY ARGS IF ANY): 
;	DESTINATION-ARRAY 
;	ORIGIN-ARRAY
;	ORIG-ALL-SQUARES
;	ORIG-FROM-SIR
;	ENABLE-ALL-PIECES
;	ENABLE-NOBLES-ONLY
;	ENABLE-PAWNS-ONLY
;	CAPTURE-MODE
;	MOVE-MODE
;	FROM  <SOURCE> <DESTINATION>
;	PDL <PDL-SYM>
;	WRITE-PULSE <REGISTER-LIST>
;	NO-OP
;	NEXT-ADDRESS <BRANCH-CONTROL-BIT-LIST> <CONDITION-FIELD-LIST> <TAG-LIST>
;		BRANCH-CONTROL-BIT-LIST MAY CONSIST OF ZERO OR MORE OF
;			PUSHJ, POPJ, STATISTICS-BIT, INHIBIT-WRITE-IF-BRANCH,
;			E-LONG.
;		CONDITION-FIELD LIST MAY CONSIST OF ZERO OR MORE CONDITION
;			FIELD SPECS, ALL OF WHICH MUST BE AVAILABLE IN THE SAME
;			QUARTER FLAGWORD.
;		TAG-LIST MUST CONSIST OF 2**<NUMBER OF MASKED BITS SPECIFIED BY
;			CONDITION-FIELD> TAGS.
;	PAF <PAF-OP> <ARG>
;		PAF-OP MAY BE +, SAVE, RESTORE.
;			+ TAKES A NUMERIC ARG WHICH MUST EVALUATE TO A NUMBER
;				BETWEEN -10 AND +7
;			SAVE, RESTORE, TAKE ARG WHICH MUST BE AN AAC.
;	FLAG-CONTROL <FLAG-CONTROL-OP-NAME>,
;	ZERO-PIECE-EXISTS-BIT,
;	SET-PIECE-EXISTS-BIT,
;	CLEAR-PIECE-HERE,
;	AC[AC-NAME],
;	AAC[AAC-NAME],
;	ALU-FCTN[ALU-OP-NAME],

;CONDITIONALS / SUBSTITUTIONS:
;  IN THE CAR POSITION OF ANY LIST MAY APPEAR AN LISP-EXPRESSION.
;	THIS IS EVALUATED, AND THE RESULT USED INSTEAD OF THE ORIGINAL.

;GENERATION FEATURE:  SEE DISCUSSION IN CHASM4

;PROCESSING OF CHEOPS MICROCODE OCCURS IN SEVERAL PHASES:
; 1)  PASS1:
;	THE CHARACTER STRING FILE IS READ AND PROCESSED INTO A TOKEN STRING.
; 2)  PASS2:
;	THE TOKEN STRING IS "PARSED".  EACH STORAGE WORD IS ASSIGNED A STORAGE-HEAD.
;	THE STORAGE HEAD OF THE STORAGE WORD IMMEDIATELY FOLLOWING A TAG IS
;	THE SAME AS THE TAG.  IF ONE STORAGE WORD FOLLOWS ANOTHER WITHOUT
;	AN INTERVENING TAG, A STORAGE HEAD OF THE FORM FOO+1, FOO+2, ETC IS 
;	GENERATED (WHERE FOO IS THE LAST TAG SEEN.)  THE TRANSLATED PROGRAM
;	IS STORED IN A SERIES OF ARRAYS, INDEXED BY THE CHASM-TAG-BASE PROPERTY
;	OF THE STORAGE HEAD + THE GENERATION NUMBER.  THE NEXT ADDRESS FIELD
;	AND THE "DATA" PART OF THE STORAGE WORD ARE STORED SEPARATELY.
; 3)  PASS4:
;	STORAGE LOCATIONS ARE ASSIGNED TO "CONSTRAINED" STORAGE WORDS.
;	CONSTRAINED STORAGE WORDS ARE THOSE THAT ARE THE TARGET OF A 
;	CONDITIONAL BRANCH, OR ARE PUSHJ INSTRUCTIONS OR THE RETURN-TARGET
;	OF PUSHJ S.
; 4)  PASS5:
;	THE REMAINING STORAGE WORDS ARE FILLED INTO THE AVAILABLE LOCATIONS.

;--PASS3 IS CONSIDERED TO BE THE PROCESSING OF THE DATA PART OF THE STORAGE WORD.
;  THIS CAN HAPPEN AT VARIOUS TIMES.  ALSO INVOLVED IS THE PROCESSING OF ARRAY-HOLD
;  AND DUPLICATE-OP COMMANDS.

; PASS 1 PRODUCES A SINGLE LIST OF SYMBOLS.  ALL COMMENTS ARE IGNORED.
; TOKENS MAY CONSIST OF LETTERS, NUMBERS AND -.  THE SPECIAL CONSTRUCT ->
; IS RECOGNIZED AND TURNED INTO A TOKEN. IF AN & IS ENCOUNTERED,
; IT IS PUT INTO THE TOKEN STRING, AND A CALL TO LISP READ MADE.
; WHATEVER IS RETURNED IS THEN PUT IN AS THE NEXT "TOKEN".

(DECLARE (SPECIAL CHEO-UNRCH CHEO-UNRCH-TOKEN CHEOPS-UCODE))
(DECLARE (SPECIAL *CHASM-STREAM*))

(DECLARE (FIXNUM CH))
;(DECLARE (EXPR-HASH T))
;(SETQ DEFUN T)

(SETQ CHEO-UNRCH NIL)
(SETQ CHEO-UNRCH-TOKEN NIL)

(DEFUN CHEO-RCH NIL 
 (PROG (CH)
	(COND (CHEO-UNRCH 
		(SETQ CH CHEO-UNRCH)
		(SETQ CHEO-UNRCH NIL))
	      (T (SETQ CH (FUNCALL *CHASM-STREAM* ':TYI))))
     X	(RETURN CH)))

(DEFUN CHEO-READ-TOKEN NIL 
  (PROG (TOK CH TERM-TOKEN TEM)
	(COND (CHEO-UNRCH-TOKEN
		(SETQ TOK CHEO-UNRCH-TOKEN)
		(SETQ CHEO-UNRCH-TOKEN NIL)
		(RETURN TOK)))
   L	(SETQ CH (CHEO-RCH))
	(COND ((NULL CH)
		(SETQ TERM-TOKEN '*EOF*)
		(GO X))			;EOF
	      ((OR (AND (< 100 CH)
			(< CH 133))
		   (AND (< 57 CH)
			(< CH 72)))
		(GO ALPHA-NUM))
	      ((= CH 55)
		(GO MINUS))
	      ((OR (= CH 40)
		   (= CH #\RETURN)
		   (= CH #\LINEFEED)
		   (= CH #\TAB)
		   (= CH #\FORM))
		(GO SEP))
	      ((= CH 73)
		(GO SEMI)))
;DROP THRU ON "SCO"
	(SETQ TERM-TOKEN (ASCII CH))
  SEP 
  X	(COND (TOK 
		(SETQ TOK (READLIST (NREVERSE TOK)))
		(SETQ CHEO-UNRCH-TOKEN TERM-TOKEN)
		(RETURN TOK))
	      (TERM-TOKEN
		(RETURN TERM-TOKEN))
	      (T (GO L)))
  SEMI	(COND ((= (CHEO-RCH) #\RETURN)
		(SETQ CHEO-UNRCH #\RETURN)
		(GO L)))
	(GO SEMI)
  MINUS	(COND ((= (SETQ TEM (CHEO-RCH)) 76)
		(GO GETS)))
	(SETQ CHEO-UNRCH TEM)
  ALPHA-NUM
	(SETQ TOK (CONS CH TOK))
	(GO L)
  GETS	(SETQ TERM-TOKEN '->)
	(GO X)))


(DEFUN CHASM-READIN (FILE) 
  (PROG NIL 
;	(UREAD CHUCOD > DSK RG)
;	(APPLY (FUNCTION UREAD) FILE)
;	(SETQ ^Q T)
	(WITH-OPEN-FILE (*CHASM-STREAM* FILE NIL)
	   (CHASM-1)
	   (RETURN T))))

(DEFUN CHASM-1 NIL 
  (PROG (TOK-LIST TOK)
    L	(SETQ TOK (CHEO-READ-TOKEN))
	(COND ((EQ TOK '&)
		(GO AMP-1))
	      ((EQ TOK '*EOF*)
		(RETURN (SETQ CHEOPS-UCODE (NREVERSE TOK-LIST)))))
	(SETQ TOK-LIST (CONS TOK TOK-LIST))
	(GO L)
  AMP-1	(SETQ TOK-LIST (CONS (READ) (CONS TOK TOK-LIST)))
	(GO L)))

