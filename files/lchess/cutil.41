;;; -*-Mode:LISP; Package:USER; Base: 10. -*-

(DEFUN INITIALIZE-ARRAY (AREA ARRAY-TYPE DIM-LIST LEADER INIT-VALUE-LIST)
      (PROG (ARRAYP TEM-ARRAYP)
	    (COND ((NULL DIM-LIST) (SETQ DIM-LIST (LENGTH INIT-VALUE-LIST))))
	    (SETQ ARRAYP (MAKE-ARRAY 
			  AREA 
			  ARRAY-TYPE 
			  DIM-LIST 
			  NIL 		;DISPLACED-P
			  LEADER))
	    (SETQ TEM-ARRAYP (MAKE-ARRAY 
			      'SI:FASL-TEMP-AREA 
			      ARRAY-TYPE 
			      (LENGTH INIT-VALUE-LIST)
			      ARRAYP  
			      '(0)))
	    (DO V INIT-VALUE-LIST (CDR V) (NULL V)
		(ARRAY-PUSH TEM-ARRAYP (CAR V)))
	    (RETURN-ARRAY TEM-ARRAYP)
	    (RETURN ARRAYP)))

;WIPE-ARRAY IS FOR EFFICIENTLY INITIALIZING ARRAYS AND IS 
;INTENDED TO EVENTUALLY BE MICROCODED.  EACH Q OF THE ARRAY IN THE REGION STARTING FROM
;ELEMENT # FIRST-IDX THRU IDX-LEN INDEX NUMBERS WORTH OF QS IS CLOBBERED WITH
;THE 32 BIT QUANTITY LH-DATA,,RH-DATA.  FIRST-IDX AND IDX-LEN MUST BE MULTIPLES
;OF THE ELEMENTS PER Q OF THE GIVEN ARRAYP.
(DEFUN WIPE-ARRAY (ARRAYP FIRST-IDX IDX-LEN LH-DATA RH-DATA)
  (PROG (OFFSET ELEMENTS-PER-Q COUNT)
	(COND ((> (+ FIRST-IDX IDX-LEN)
		  (ARRAY-LENGTH ARRAYP))
		(ERROR "ATTEMPT-TO-CLEAR-BEYOND-ARRAY")))
	(SETQ ELEMENTS-PER-Q (AR-1 (FUNCTION SI:ARRAY-ELEMENTS-PER-Q)
				   (%P-LDB SI:%%ARRAY-TYPE-FIELD ARRAYP)))
	(SETQ OFFSET (+ (COND ((= (%P-LDB SI:%%ARRAY-LONG-LENGTH-FLAG ARRAYP) 0) 1)
			      (T 2))
			(// FIRST-IDX ELEMENTS-PER-Q)))
	(SETQ COUNT (// IDX-LEN ELEMENTS-PER-Q))
   L	(COND ((< (SETQ COUNT (1- COUNT)) 0) (RETURN NIL)))
	(%P-DPB-OFFSET LH-DATA %%Q-HIGH-HALF ARRAYP OFFSET)
	(%P-DPB-OFFSET RH-DATA %%Q-LOW-HALF ARRAYP OFFSET)
	(SETQ OFFSET (1+ OFFSET))
	(GO L)))

(DEFUN ASSIGN-POSITION-IN-LIST (LST)
  (PROG (CNT)
	(SETQ CNT 0)
    L	(COND ((NULL LST) (RETURN T)))
	(SET (CAR LST) CNT)
	(SETQ CNT (1+ CNT) LST (CDR LST))
	(GO L)))

(DEFUN C-COUNT-BITS (N)		;COUNTS # BITS ON IN LOW 16. OF N.
  (DO ((COUNT 0 (1+ COUNT))	;REAL THING SHOULD COUNT ALL 24.
       (ANS 0))
      ((= COUNT 16.) ANS)
      (SETQ ANS (+ ANS (LOGAND N 1)))
      (SETQ N (LSH N -1))))

(DECLARE (SPECIAL SPECIAL-INDICATOR))

;(DEFUN ALLREMPROP (SPECIAL-INDICATOR)
;    (MAPC (FUNCTION (LAMBDA (Y)
;			    (MAPC (FUNCTION 
;				   (LAMBDA (X) (REMPROP X SPECIAL-INDICATOR)))
;				  Y)))
;	  (G-L-P OBARRAY)))

(DEFUN ALLREMPROP (SPECIAL-INDICATOR)
   (MAPATOMS (FUNCTION (LAMBDA (X) (REMPROP X SPECIAL-INDICATOR)))))

(DEFUN DELETE-FROM-LIST (ITEM LIST)
   (DELQ ITEM LIST 1))

;RPLACA THE FIRST INSTANCE OF OLD IN LST WITH NEW.
(DEFUN REPLACE-IN-LIST (OLD NEW LST)
  (PROG (TEM)
	(SETQ TEM LST)
   L	(COND ((NULL TEM) (RETURN LST))
	      ((EQ (CAR TEM) OLD)
	       (RPLACA TEM NEW)
	       (RETURN LST)))
   	(SETQ TEM (CDR TEM))
	(GO L)))

(DEFUN ARRAY-PUSH-AND-EXPAND (ARY DATA)
       (COND ((NULL (ARRAY-PUSH ARY DATA))
	      (ADJUST-ARRAY-SIZE ARY (* 2 (ARRAY-ACTIVE-LENGTH ARY)))
	      (COND ((NULL (ARRAY-PUSH ARY DATA))
		     (ERROR ARY "CANT-PUSH"))))))

(DEFUN ASSQM (K L)
  (PROG ()
    L	(COND ((NULL L) (RETURN NIL))
	      ((EQ K (CAR L))
	       (RETURN (CAR L)))
	      ((AND (LISTP (CAR L))
		    (EQ K (CAAR L)))
	       (RETURN (CAR L))))
    	(SETQ L (CDR L))
	(GO L)
))

(DEFUN ASSQM-KEY (L)
       (COND ((ATOM (CAR L)) (CAR L))
	     (T (CAAR L))))

(DEFUN LOGICAL-XOR (A B)
       (COND (A (NOT B))
	     (T B)))
