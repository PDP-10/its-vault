;-*- mode: lisp; base: 8; package: user -*-
;FLAGWORD BIT DEFINITIONS:
;EACH FLAGWORD FIELD IS REFERRED TO BY A NAME, IE:
;	@ANY-MORE-SQUARES XX|YY ETC.
;ON THE PROPERTY LIST OF ANY-MORE-SQUARES UNDER THE INDICATOR
;   CHEOPS-FLAGBIT-FIELD WILL BE FOUND THE DESCRIPTION OF
;   EXACTLY WHERE THE INDICATED BITS ARE LOCATED IN THE FLAGWORDS (IE WHICH QUARTER
;   OF WHICH WORD),  WHICH BITS OF THAT QUARTER ARE TO BE TESTED,
;   HOW MANY BITS WIDE THE FIELD IS, AND WHAT IS THE STATUS OF THE REMAINING
;   BITS OF THE QUARTER.
; THIS INFORMATION IS ENCODED AND USED AS FOLLOWS:
;  THE CHEOPS-FLAGBIT-FIELD PROPERTY IS A LIST EACH ELEMENT OF WHICH
;   CORRESPONDS TO ONE APPEARANCE OF THE INDICATED BITS IN THE FLAGWORDS.
;   (IN SOME CASES, TO FACILITATE MULTI-WAY BRANCHES, THE SAME BIT MAY APPEAR
;   IN MORE THAN ONE PLACE THE THE FLAGWORDS).  ORDINARILY, THE FIRST
;   ELEMENT OF EACH LIST WILL BE USED TO ASSEMBLE TESTS ON THE GIVEN FLAGWORD-FIELD,
;   BUT IF IT IS SPECIFIED IN COMBINATION WITH OTHER FLAGWORD-FIELDS, THE OTHER
;   ELEMENTS OF THE LIST WILL BE EXAMINED IN AN ATTEMPT TO LOCATE A FLAGWORD-QUARTER
;   WHICH CONTAINS BOTH FIELDS.
;  EACH OF THESE ELEMENTS IS IN TURN A LIST.
;	THE FIRST ELEMENT IS A NUMBER SPECIFING THE FLAGWORD-QUARTER.
;		THIS IS A FOUR BIT NUMBER, THE HIGH TWO ORDER BITS,
;		00, 01, 10, AND 11 SPECIFING FLAGA, FLAGB, FLAGC, AND FLAGD.
;		THE LOW 2 BITS SPECIFY THE QUADRANT, 00 BEING THE RIGHTMOST
;		AND 11 BEING THE LEFTMOST.
;	THE SECOND ELEMENT IS ALSO A FOUR BIT NUMBER, GIVING THE "ACTIVE BITS".
;		THUS IF THE INDICATED FIELD APPEARED IN THE MIDDLE TWO BITS OF THE
;		QUARTER, THIS NUMBER WOULD BE 6.
;	THE THIRD ELEMENT IS ALSO A FOUR BIT NUMBER, HAVING ONES IN THOSE BIT
;		POSITIONS THAT ARE GUARANTEED TO BE 0 IN THE FLAGCELL QUARTER
;		(BY THE HARDWARE).  KNOWING THIS INFORMATION PERMITS THE ASSEMBLER
;		GREATER FREEDOM IN CHOOSING ADDRESSES FOR TESTS ON THIS QUARTER.

(DEFPROP ANY-MORE-SQUARES ( (1 1 16) ) CHEOPS-FLAGBIT-FIELD)
(DEFPROP ANY-MORE-PIECES  ( (2 2 15) ) CHEOPS-FLAGBIT-FIELD)
(DEFPROP KCHK 		  ( (3 4 13) ) CHEOPS-FLAGBIT-FIELD)
(DEFPROP ALU-NO-CARRY-OUT ( (4 1 0)) CHEOPS-FLAGBIT-FIELD)
(DEFPROP ALU-EQUAL	  ( (4 2 0)) CHEOPS-FLAGBIT-FIELD)
(DEFPROP ALU-LESS-OR-EQUAL( (5 1 14)) CHEOPS-FLAGBIT-FIELD)
(DEFPROP O-BUS-15	  ( (5 1 14)) CHEOPS-FLAGBIT-FIELD)  ;SAME AS ALU-LESS-OR-EQUAL
(DEFPROP ALU-LESS	  ( (5 2 14)) CHEOPS-FLAGBIT-FIELD)
(DEFPROP DEEP		  ( (4 4  0) ) CHEOPS-FLAGBIT-FIELD)
(DEFPROP LEGAL		  ( (4 10 0) ) CHEOPS-FLAGBIT-FIELD)
(DEFPROP EXT-BUS-FLAGS	  ( (6 7 10) ) CHEOPS-FLAGBIT-FIELD)
(DEFPROP DOORBELL	  ( (7 1  0) ) CHEOPS-FLAGBIT-FIELD)
;(DEFPROP P-BUS-NOBLE	  ( (7 2  0) ) CHEOPS-FLAGBIT-FIELD)
(DEFPROP STM		  ( (7 4  0) ) CHEOPS-FLAGBIT-FIELD)
(DEFPROP STACK-END-CHECK  ( (7 10 0) ) CHEOPS-FLAGBIT-FIELD)
(DEFPROP ANY-SQUARES	 ( (10 1  0) ) CHEOPS-FLAGBIT-FIELD)
(DEFPROP SELECTED-SQUARE ( (10 2  0) ) CHEOPS-FLAGBIT-FIELD)
(DEFPROP PROMOTING-POSS  ( (10 4  0) ) CHEOPS-FLAGBIT-FIELD)
(DEFPROP TERM-RANK	 ( (10 10 0) ) CHEOPS-FLAGBIT-FIELD)
(DEFPROP PIECE-TYPE      ( (11  7 0) ) CHEOPS-FLAGBIT-FIELD)
(DEFPROP ANY-RANK	 ( (11 10 0) ) CHEOPS-FLAGBIT-FIELD)
(DEFPROP E-P-CAPT	 ( (12  1 10) ) CHEOPS-FLAGBIT-FIELD)
(DEFPROP PROMOTE-MOVE	 ( (12  2 10) ) CHEOPS-FLAGBIT-FIELD)
(DEFPROP OFF-BOARD	 ( (12  4 10) ) CHEOPS-FLAGBIT-FIELD)
(DEFPROP K-CAS-LGL	 ( (13  1  4) ) CHEOPS-FLAGBIT-FIELD)
(DEFPROP Q-CAS-LGL	 ( (13  2  4) ) CHEOPS-FLAGBIT-FIELD)
(DEFPROP SEL-P-EXISTS	 ( (13 10  4) ) CHEOPS-FLAGBIT-FIELD)
;FLAGCELL BITS
(DEFPROP B-K-CS-NOT-POS	 ( (14  1  0) ) CHEOPS-FLAGBIT-FIELD)
(DEFPROP B-Q-CS-NOT-POS	 ( (14  2  0) ) CHEOPS-FLAGBIT-FIELD)
(DEFPROP W-K-CS-NOT-POS	 ( (14  4  0) ) CHEOPS-FLAGBIT-FIELD)
(DEFPROP W-Q-CS-NOT-POS	 ( (14 10  0) ) CHEOPS-FLAGBIT-FIELD)
;15 FLAGCELL BITS WHICH TEST SAME CONDITIONS AS ALTERNATE NAMES ABOVE.
; BUT!! THESE ARE DIRECTLY ON THE FLAGCELL WORD, NOT THE FLAGBIT WORD.
; THUS, THESE SET UP ONE CLOCK SOONER!!
(DEFPROP F-C-BIT-7       ( (15 10  0) ) CHEOPS-FLAGBIT-FIELD)
(DEFPROP F-C-BIT-KCHK    ( (15  4  0) ) CHEOPS-FLAGBIT-FIELD)
(DEFPROP F-C-BIT-DEEP    ( (15  2  0) ) CHEOPS-FLAGBIT-FIELD)
(DEFPROP F-C-BIT-LEGAL   ( (15  1  0) ) CHEOPS-FLAGBIT-FIELD)
(DEFPROP PDP-11-FLAG-0   ( (16  1 10) ) CHEOPS-FLAGBIT-FIELD)
(DEFPROP PDP-11-FLAG-1   ( (16  2 10) ) CHEOPS-FLAGBIT-FIELD)
(DEFPROP UNIBUS-CYCLE	 ( (16  4 10) ) CHEOPS-FLAGBIT-FIELD)
(DEFPROP O-BUS-0	 ( (17  1  0) ) CHEOPS-FLAGBIT-FIELD)
(DEFPROP O-BUS-1	 ( (17  2  0) ) CHEOPS-FLAGBIT-FIELD)
(DEFPROP O-BUS-2	 ( (17  4  0) ) CHEOPS-FLAGBIT-FIELD)
(DEFPROP O-BUS-3	 ( (17 10  0) ) CHEOPS-FLAGBIT-FIELD)

;COMPONENTS CHEOPS MICRO INSTRUCTION WORD

;PUT ON BOTH CHEOPS-UINST-FIELD PROP DESCRIBING FIELD AND
; CHEOPS-UINST-CONST GIVING (BIGNUM) ARITHMETIC VALUE

(DEFUN CHEOPS-DEF-CONST-FIELD (NAME DATA WIDTH BITS-OVER)
  (PUTPROP NAME (LIST DATA WIDTH BITS-OVER) 'CHEOPS-UINST-FIELD)
  (PUTPROP NAME (CHEOPS-MAKE-BIGNUM DATA BITS-OVER) 'CHEOPS-UINST-CONST))

(DEFUN CHEOPS-DEF-VAR-FIELD (NAME WIDTH BITS-OVER)
   (PUTPROP NAME (LIST WIDTH BITS-OVER) 'CHEOPS-VAR-FIELD))

;(DEFUN CHEOPS-DEF-PROPERTY (NAME DATA BITS-OVER PROPERTY)
;  (PUTPROP NAME (CHEOPS-MAKE-BIGNUM DATA BITS-OVER) PROPERTY))

(DEFUN CHEOPS-MAKE-BIGNUM (DATA BITS-OVER)
  (PROG (R)
	(SETQ R 1)
    L	(COND ((< BITS-OVER 30.)
		(RETURN (TIMES R (LSH DATA BITS-OVER)))))
	(SETQ R (TIMES R 10000000000))
	(SETQ BITS-OVER (- BITS-OVER 30.))
	(GO L)))


(CHEOPS-DEF-CONST-FIELD 'NO-OP 0 0 0)
;WD0 DEFS
(CHEOPS-DEF-CONST-FIELD 'INHIBIT-WRITE-IF-BRANCH 1 1 15.)
;WD1 DEFS
(CHEOPS-DEF-CONST-FIELD 'ALU-OP 0 1 31.)
(CHEOPS-DEF-CONST-FIELD 'ARRAY-OP 1 1 31.)
(CHEOPS-DEF-CONST-FIELD 'STATISTICS-BIT 1 1 30.)
 (DEFPROP STATISTICS-BIT T CHEOPS-TRANSFER-FIELD-VALUE)
(CHEOPS-DEF-CONST-FIELD 'PUSHJ 1 1 29.)
 (DEFPROP PUSHJ T CHEOPS-TRANSFER-FIELD-VALUE)
(CHEOPS-DEF-CONST-FIELD 'POPJ 1 1 28.)
 ;THE FOLLOWING CROCK TRIES TO GET 20 INTO THE NAF, IMPLEMENTING THE CONVENTION
 ; THAT POPJ S SKIP 20.
 (PUTPROP 'POPJ (PLUS (GET 'POPJ 'CHEOPS-UINST-CONST) 20) 'CHEOPS-UINST-CONST)
 (DEFPROP POPJ T CHEOPS-TRANSFER-FIELD-VALUE)
(CHEOPS-DEF-CONST-FIELD 'POP-USP 3 2 28.)
	(CHEOPS-DEF-VAR-FIELD 'PAF 5 23.)
	(CHEOPS-DEF-VAR-FIELD 'UB-CTRL 2 21.)
(CHEOPS-DEF-CONST-FIELD 'INITIATE-UNIBUS-READ-CYCLE 1 2 21.)
(CHEOPS-DEF-CONST-FIELD 'INITIATE-UNIBUS-WRITE-CYCLE 2 2 21.)
(CHEOPS-DEF-CONST-FIELD 'INITIATE-UNIBUS-INTERRUPT-CYCLE 3 2 21.)
(CHEOPS-DEF-CONST-FIELD 'E-LONG 1 1 20.)
 (DEFPROP E-LONG T CHEOPS-TRANSFER-FIELD-VALUE)
	(CHEOPS-DEF-VAR-FIELD 'FLAG-CONTROL 4 16.)
;THE FOLLOWING LIST IS SEARCHED BY THE FLAG-CONTROL HACKER. THE VALUE
;WITHIN THE FLAG-CONTROL FIELD IS FOUND BY THE POSITION IN THE LIST.
(SETQ CHEOPS-FLAG-CONTROL-OPS '(
  NULL 
  INITIALIZE-NEXT-FLAGCELL-WORD 
  SAVE-NEXT-GHOST-POSITION 
  MODIFY-NEXT-CASTLE-FLAGS-IF-CASTLE-SQUARE-ON-SQUARE-BUS 
  CHANGE-SIDE-TO-MOVE 
  FORCE-BLACK-TO-MOVE 
  FORCE-WHITE-TO-MOVE 
  CLEAR-DEEP 
  SET-DEEP 
  SET-NEXT-KCHK-FROM-SELECTED-SQUARE 
  SET-LEGAL-MOVE-FROM-THIS-POSITION 
  CLEAR-LEGAL-MOVE-FROM-THIS-POSITION 
  LOAD-FLAGCELL-FROM-NEXT-FLAGCELL 
  CHANGE-SIDE-TO-MOVE-AND-SET-NEXT-KCHK-FROM-SELECTED-SQUARE 
  SAVE-NEXT-GHOST-POSITION-AND-MODIFY-NEXT-CASTLE-FLAGS ))
;WD2 DEFS ARRAY MODULE INSTRUCTION
(CHEOPS-DEF-CONST-FIELD 'ORIGIN-ARRAY 0 1 47.)
(CHEOPS-DEF-CONST-FIELD 'DESTINATION-ARRAY 1 1 47.)
(CHEOPS-DEF-CONST-FIELD 'MOVE-MODE 0 1 46.)
(CHEOPS-DEF-CONST-FIELD 'CAPTURE-MODE 1 1 46.)
(CHEOPS-DEF-CONST-FIELD 'ORIG-FROM-SIR 0 1 45.)		;USE THESE FOR DESTINATION ARRAY
(CHEOPS-DEF-CONST-FIELD 'ORIG-ALL-SQUARES 1 1 45.)
(CHEOPS-DEF-CONST-FIELD 'DEST-FROM-SIR 0 1 45.)		;USE THESE FOR ORIGIN ARRAY
(CHEOPS-DEF-CONST-FIELD 'DEST-ALL-SQUARES 1 1 45.)
 ;ENABLE-ALL-PIECES, ENABLE-PAWNS-ONLY, ENABLE-NOBLES-ONLY, DEFEND-MODE
 ;ARE INTERPRETED BY SPECIAL HACKER AS A FUNCTION OF ARRAY BEING REF'ED.
 ;DEFINITIONS BELOW ONLY FOR FIELD RESOLUTION IN ARRAY-HOLD OP
  (CHEOPS-DEF-CONST-FIELD 'ENABLE-ALL-PIECES 0 2 43.)
    (DEFPROP ENABLE-ALL-PIECES T CHEOPS-PIECE-ENABLE)
    (PUTPROP 'ENABLE-ALL-PIECES (CHEOPS-MAKE-BIGNUM 3 43.) 'ORIGIN-ARRAY-VALUE)
    (PUTPROP 'ENABLE-ALL-PIECES (CHEOPS-MAKE-BIGNUM 2 43.) 'DESTINATION-ARRAY-VALUE)
  (CHEOPS-DEF-CONST-FIELD 'ENABLE-PAWNS-ONLY 0 2 43.)
    (DEFPROP ENABLE-PAWNS-ONLY T CHEOPS-PIECE-ENABLE)
    (PUTPROP 'ENABLE-PAWNS-ONLY 0 'ORIGIN-ARRAY-VALUE)
    (PUTPROP 'ENABLE-PAWNS-ONLY 0 'DESTINATION-ARRAY-VALUE)
  (CHEOPS-DEF-CONST-FIELD 'ENABLE-NOBLES-ONLY 0 2 43.)
    (DEFPROP ENABLE-NOBLES-ONLY T CHEOPS-PIECE-ENABLE)
    (PUTPROP 'ENABLE-NOBLES-ONLY (CHEOPS-MAKE-BIGNUM 2 43.) 'ORIGIN-ARRAY-VALUE)
  (CHEOPS-DEF-CONST-FIELD 'DEFEND-MODE 0 2 43.)
    (DEFPROP DEFEND-MODE T CHEOPS-PIECE-ENABLE)
    (PUTPROP 'DEFEND-MODE (CHEOPS-MAKE-BIGNUM 3 43.) 'DESTINATION-ARRAY-VALUE)
 (CHEOPS-DEF-CONST-FIELD 'NOBLE-ENABLE-BIT 1 1 44.)
 (CHEOPS-DEF-CONST-FIELD 'PAWN-ENABLE-BIT 1 1 43.)
(CHEOPS-DEF-CONST-FIELD 'ZERO-PIECE-EXISTS-BIT 0 1 42.)
(CHEOPS-DEF-CONST-FIELD 'SET-PIECE-EXISTS-BIT 1 1 42.)
 ;WRITE-PULSES INTERPRETED BY -> HACKER
 (CHEOPS-DEF-CONST-FIELD 'WPEX 1 1 41.)
 (CHEOPS-DEF-CONST-FIELD 'WSR 1 1 40.)
 (CHEOPS-DEF-CONST-FIELD 'WSIR 1 1 39.)
 (CHEOPS-DEF-CONST-FIELD 'WPR 1 1 38.)
 (CHEOPS-DEF-CONST-FIELD 'WMOVE 1 1 37.)
 ;PDL-SOURCE-BIT 
(CHEOPS-DEF-CONST-FIELD 'ARRAY-AC-SOURCE 0 2 35.)
(CHEOPS-DEF-CONST-FIELD 'ARRAY-WRITE-PDL 1 2 35.)
(CHEOPS-DEF-CONST-FIELD 'ARRAY-PDL-SOURCE 2 2 35.)
(CHEOPS-DEF-CONST-FIELD 'ARRAY-WRITE-AC 3 2 35.) 
 ;ARY AC (3 BITS)
	(CHEOPS-DEF-VAR-FIELD 'ARRAY-OP-AC 3 32.)
;WD3 DEFS ARRAY MODULE INSTRUCTION
;PS-BUS SELECTOR
 (CHEOPS-DEF-CONST-FIELD 'PSB-FM-PR--SIR  0 3 58.)
 (CHEOPS-DEF-CONST-FIELD 'PSB-FM-POUT--SQ-BUS 1 3 58.)
 (CHEOPS-DEF-CONST-FIELD 'PSB-FM-P-BUS--SQ-BUS 2 3 58.)
 (CHEOPS-DEF-CONST-FIELD 'PSB-FM-VAL 3 3 58.)
 (CHEOPS-DEF-CONST-FIELD 'PSB-FM-TYP 4 3 58.)
 (CHEOPS-DEF-CONST-FIELD 'PSB-FM-LOC 5 3 58.)
 (CHEOPS-DEF-CONST-FIELD 'PSB-FM-FLAGCELL 6 3 58.)
;LAST-PIECE SELECTOR
 (CHEOPS-DEF-CONST-FIELD 'LAST-P-FM-LEFT-A-BUS 0 1 57.)
 (CHEOPS-DEF-CONST-FIELD 'LAST-P-FM-PR 1 1 57.)
;PIECE-BUS SELECTOR
 (CHEOPS-DEF-CONST-FIELD 'PB-FM-LEFT-A-BUS 0 3 54.)
 (CHEOPS-DEF-CONST-FIELD 'PB-FM-PR 1 3 54.)
 (CHEOPS-DEF-CONST-FIELD 'PB-FM-NXP 2 3 54.)
 (CHEOPS-DEF-CONST-FIELD 'PB-FM-POUT 3 3 54.)
 (CHEOPS-DEF-CONST-FIELD 'PB-FM-NULL-PIECE 4 3 54.)
 (CHEOPS-DEF-CONST-FIELD 'PB-FM-RIGHT-A-BUS 5 3 54.)
;PIECE-REGISTER SELECTOR
 (CHEOPS-DEF-CONST-FIELD 'PR-FM-LEFT-A-BUS 0 1 53.)
 (CHEOPS-DEF-CONST-FIELD 'PR-FM-NXP 1 1 53.)
;LAST-SQUARE SELECTOR
 (CHEOPS-DEF-CONST-FIELD 'LAST-SQUARE-FM-HIS-K-LOCN 0 1 52.)
 (CHEOPS-DEF-CONST-FIELD 'LAST-SQUARE-FM-SR 1 1 52.)
;SQUARE-BUS SELECTOR
 (CHEOPS-DEF-CONST-FIELD 'SQ-BUS-FM-SR 0 2 50.)
 (CHEOPS-DEF-CONST-FIELD 'SQ-BUS-FM-RIGHT-A-BUS 1 2 50.)
 (CHEOPS-DEF-CONST-FIELD 'SQ-BUS-FM-SIR 2 2 50.)
 (CHEOPS-DEF-CONST-FIELD 'SQ-BUS-FM-NXS 3 2 50.)
;SQUARE-REGISTER SELECTOR
 (CHEOPS-DEF-CONST-FIELD 'SR-FM-RIGHT-A-BUS 0 1 49.)
 (CHEOPS-DEF-CONST-FIELD 'SR-FM-NXS 1 1 49.)
;SQUARE-INPUT-REGISTER SELECTOR
 (CHEOPS-DEF-CONST-FIELD 'SIR-FM-SQ-BUS 0 1 48.)
 (CHEOPS-DEF-CONST-FIELD 'SIR-FM-LOC 1 1 48.)

;WD2 DEFS ARITHMETIC-LOGICAL INSTRUCTION
 ;INTERPRETED ACCORDING TO INSTRUCTION TYPE ..
 ;CAN HAVE A-SOURCE, IMMEDIATE-DATA, PDL-REGISTER, OR ODEST FIELDS

;WD3 DEFS ALU INSTRUCTION
;OUTPUT-BUS SELECTOR
 (CHEOPS-DEF-CONST-FIELD 'O-BUS-FM-ALU 0 3 58.)
 (CHEOPS-DEF-CONST-FIELD 'O-BUS-FM-ALU-SWAPPED 1 3 58.)
 (CHEOPS-DEF-CONST-FIELD 'O-BUS-FM-RELOC 2 3 58.)
 (CHEOPS-DEF-CONST-FIELD 'O-BUS-FM-DBR 3 3 58.)
 (CHEOPS-DEF-CONST-FIELD 'O-BUS-FM-USP 4 3 58.)
 (CHEOPS-DEF-CONST-FIELD 'O-BUS-FM-USTACK 5 3 58.)
 (CHEOPS-DEF-CONST-FIELD 'O-BUS-FM-SWITCHES 6 3 58.)
 (CHEOPS-DEF-CONST-FIELD 'O-BUS-FM-PS-BUS 7 3 58.)
;CARRY INTO ALU
 (CHEOPS-DEF-CONST-FIELD 'ALU-CRY-0 0 1 57.)
 (CHEOPS-DEF-CONST-FIELD 'ALU-CRY-1 1 1 57.)
;ALU OPERATION
	(CHEOPS-DEF-VAR-FIELD 'ALU-OP 5 52.)
 ;MOST USEFUL ARITHMETIC
 (CHEOPS-DEF-CONST-FIELD 'INC-B 0 5 52.)	; CRY MUST BE SET
   (PUTPROP 'INC-B (PLUS (GET 'INC-B 'CHEOPS-UINST-CONST) 
		       (CHEOPS-MAKE-BIGNUM 1 57.)) 'CHEOPS-UINST-CONST)
 (CHEOPS-DEF-CONST-FIELD 'B-A 6 5 52.)	;CRY MUST BE SET
   (PUTPROP 'B-A (PLUS (GET 'B-A 'CHEOPS-UINST-CONST) 
		       (CHEOPS-MAKE-BIGNUM 1 57.)) 'CHEOPS-UINST-CONST)
 (CHEOPS-DEF-CONST-FIELD 'B-A-1 6 5 52.)
 (CHEOPS-DEF-CONST-FIELD 'B-PLUS-A 11 5 52.)
 (CHEOPS-DEF-CONST-FIELD 'A-PLUS-B 11 5 52.)
 (CHEOPS-DEF-CONST-FIELD 'B-PLUS-B 14 5 52.)
 (CHEOPS-DEF-CONST-FIELD 'DEC-B 17 5 52.)

 ;LOGICAL
 (CHEOPS-DEF-CONST-FIELD 'SET-C-B 20 5 52.)
 (CHEOPS-DEF-CONST-FIELD 'AND-C-BOTH 21 5 52.)
 (CHEOPS-DEF-CONST-FIELD 'AND-C-B 22 5 52.)
 (CHEOPS-DEF-CONST-FIELD 'SETZ 23 5 52.)
 (CHEOPS-DEF-CONST-FIELD 'OR-C-BOTH 24 5 52.)
 (CHEOPS-DEF-CONST-FIELD 'SET-C-A 25 5 52.)
 (CHEOPS-DEF-CONST-FIELD 'XOR 26 5 52.)
 (CHEOPS-DEF-CONST-FIELD 'AND-C-A 27 5 52.)
 (CHEOPS-DEF-CONST-FIELD 'OR-C-B 30 5 52.)
 (CHEOPS-DEF-CONST-FIELD 'EQV 31 5 52.)
 (CHEOPS-DEF-CONST-FIELD 'SET-A 32 5 52.)
 (CHEOPS-DEF-CONST-FIELD 'AND 33 5 52.)
 (CHEOPS-DEF-CONST-FIELD 'SETO 34 5 52.)
 (CHEOPS-DEF-CONST-FIELD 'OR-C-A 35 5 52.)
 (CHEOPS-DEF-CONST-FIELD 'IOR 36 5 52.)
 (CHEOPS-DEF-CONST-FIELD 'SET-B 37 5 52.)
;B-BUS ADR (4 BITS, AC OR 10+AAC)
	(CHEOPS-DEF-VAR-FIELD 'B-BUS 4 48.)

;A-SOURCE DEFS
(DEFPROP PDL-POINTED-TO-BY-PAR 0 A-SOURCE)
;1 AC'S (ILLEGAL)
(DEFPROP O-REG 2 A-SOURCE) 
(DEFPROP PS-BUS 3 A-SOURCE) 
(DEFPROP FLAGCELL 4 A-SOURCE) 
(DEFPROP NEXT-FLAGCELL 5 A-SOURCE) 
(DEFPROP EXTERNAL-BUS 6 A-SOURCE) 
;7 IMMEDIATE-DATA (ILLEGAL)
(DEFPROP FLAGA 10 A-SOURCE) 
(DEFPROP FLAGB 11 A-SOURCE) 
(DEFPROP FLAGC 12 A-SOURCE) 
(DEFPROP FLAGD 13 A-SOURCE)
(DEFPROP STATA 14 A-SOURCE)
(DEFPROP STATB 15 A-SOURCE)
(DEFPROP UAR 16 A-SOURCE)
(DEFPROP UDR 17 A-SOURCE)
;20-27 AC 0 - 7

;ODEST DEFS
(DEFPROP HALT 1 ODEST)
(DEFPROP UDR 2 ODEST)
(DEFPROP UAR 3 ODEST)
(DEFPROP STATA 4 ODEST)
(DEFPROP STATB 5 ODEST)
(DEFPROP WMOVE 10 ODEST)
(DEFPROP SIR 11 ODEST)
(DEFPROP PIECE-TYPE 13 ODEST)
(DEFPROP TYP 13 ODEST)
(DEFPROP PIECE-VALUE 14 ODEST)
(DEFPROP VAL 14 ODEST)
(DEFPROP SR 15 ODEST)
(DEFPROP PR 16 ODEST)
(DEFPROP PR-SR 17 ODEST)
(DEFPROP PDL-POINTED-TO-BY-PAR 20 ODEST)
(DEFPROP USTACK 21 ODEST)
(DEFPROP USP 22 ODEST)
(DEFPROP FLAGCELL 23 ODEST)
(DEFPROP NEXT-FLAGCELL 24 ODEST)
(DEFPROP STAR 25 ODEST)
(DEFPROP EXTERNAL-BUS-CONTROL 26 ODEST)
(DEFPROP EXTERNAL-BUS-DATA 27 ODEST)
;60-67 AC 0-7
;70-77 AAC 0-7

;OUTPUT-SELECTOR CODES (ALU-INST)
(DEFPROP ALU O-BUS-FM-ALU OUTPUT-SELECTOR)
(DEFPROP ALU-SWAPPED O-BUS-FM-ALU-SWAPPED OUTPUT-SELECTOR)
(DEFPROP RELOC O-BUS-FM-RELOC OUTPUT-SELECTOR)
(DEFPROP DBR O-BUS-FM-DBR OUTPUT-SELECTOR)
(DEFPROP USP O-BUS-FM-USP OUTPUT-SELECTOR)
(DEFPROP USTACK O-BUS-FM-USTACK OUTPUT-SELECTOR)
(DEFPROP SWITCH-REGISTER O-BUS-FM-SWITCHES OUTPUT-SELECTOR)
(DEFPROP PS-BUS O-BUS-FM-PS-BUS OUTPUT-SELECTOR)


(DEFPROP PS-BUS  ( (PR--SIR . PSB-FM-PR--SIR)
		   (POUT--SQUARE-BUS . PSB-FM-POUT--SQ-BUS)
		   (PIECE-BUS--SQUARE-BUS . PSB-FM-P-BUS--SQ-BUS)
		   (PIECE-VALUE . PSB-FM-VAL)
		   (PIECE-TYPE . PSB-FM-TYP)
		   (PIECE-LOC . PSB-FM-LOC)
		   (FLAGCELL . PSB-FM-FLAGCELL) ) CHEOPS-FROM-LIST)
(DEFPROP PIECE-SCANNER ( (LEFT-A-BUS . LAST-P-FM-LEFT-A-BUS)
			 (A-BUS . LAST-P-FM-LEFT-A-BUS)
		         (PR  . LAST-P-FM-PR) ) CHEOPS-FROM-LIST)
(DEFPROP PIECE-BUS ( (LEFT-A-BUS . PB-FM-LEFT-A-BUS)
		     (A-BUS . PB-FM-LEFT-A-BUS)		;ASSUME LEFT-A-BUS BY DEFAULT
		     (PR . PB-FM-PR)
		     (NEXT-PIECE . PB-FM-NXP)
		     (POUT . PB-FM-POUT)
		     (NULL-PIECE . PB-FM-NULL-PIECE)
		     (RIGHT-A-BUS . PB-FM-RIGHT-A-BUS) ) CHEOPS-FROM-LIST)
(DEFPROP PR ( (LEFT-A-BUS . PR-FM-LEFT-A-BUS)
	      (A-BUS . PR-FM-LEFT-A-BUS)
	      (NEXT-PIECE . PR-FM-NXP) ) CHEOPS-FROM-LIST)
(DEFPROP SQUARE-SCANNER ( (HIS-K-LOCN . LAST-SQUARE-FM-HIS-K-LOCN)
			  (SR . LAST-SQUARE-FM-SR) ) CHEOPS-FROM-LIST)
(DEFPROP SQUARE-BUS ( (RIGHT-A-BUS . SQ-BUS-FM-RIGHT-A-BUS)
		      (A-BUS . SQ-BUS-FM-RIGHT-A-BUS)
		      (SR . SQ-BUS-FM-SR)
		      (NEXT-SQUARE . SQ-BUS-FM-NXS)
		      (SIR . SQ-BUS-FM-SIR) ) CHEOPS-FROM-LIST)
(DEFPROP SR ( (RIGHT-A-BUS . SR-FM-RIGHT-A-BUS)
	      (A-BUS . SR-FM-RIGHT-A-BUS)
	      (NEXT-SQUARE . SR-FM-NXS) ) CHEOPS-FROM-LIST)
(DEFPROP SIR ( (SQUARE-BUS . SIR-FM-SQ-BUS)
	       (PIECE-LOC . SIR-FM-LOC) ) CHEOPS-FROM-LIST)


;ARRAY INST WRITE PULSES
(DEFPROP PEX WPEX CHEOPS-ARRAY-WRITE-PULSE)
(DEFPROP PIECE-EXISTS-REGISTER WPEX CHEOPS-ARRAY-WRITE-PULSE)
(DEFPROP SR WSR CHEOPS-ARRAY-WRITE-PULSE)
(DEFPROP SIR WSIR CHEOPS-ARRAY-WRITE-PULSE)
(DEFPROP PR WPR CHEOPS-ARRAY-WRITE-PULSE)
(DEFPROP WMOVE WMOVE CHEOPS-ARRAY-WRITE-PULSE)
(DEFPROP PDL-POINTED-TO-BY-PAR ARRAY-WRITE-PDL CHEOPS-ARRAY-WRITE-PULSE)

;THE FOLLOWING PROPS FLAG THESE SO THEY ARE NOT CARRIED ACROSS AN ARRAY-HOLD OP.
(DEFPROP WPEX T CHEOPS-WRITE-PULSE-VALUE)
(DEFPROP WSR T CHEOPS-WRITE-PULSE-VALUE)
(DEFPROP WSIR T CHEOPS-WRITE-PULSE-VALUE)
(DEFPROP WPR T CHEOPS-WRITE-PULSE-VALUE)
(DEFPROP WMOVE T CHEOPS-WRITE-PULSE-VALUE)
(DEFPROP ARRAY-WRITE-PDL T CHEOPS-WRITE-PULSE-VALUE)

;MAIN OPS
(DEFPROP ALU CHASM-5-ALU-OP CHEOPS-OPERATION)
(DEFPROP ARRAY CHASM-5-ARRAY-OP CHEOPS-OPERATION)
(DEFPROP ARRAY-HOLD CHASM-5-ARRAY-HOLD CHEOPS-OPERATION)
(DEFPROP DUPLICATE-OP CHASM-5-DUPLICATE-OP CHEOPS-OPERATION)
(DEFPROP ASSIGN-AC CHASM-5-ASSIGN-AC CHEOPS-OPERATION)
(DEFPROP ASSIGN-AAC CHASM-5-ASSIGN-AAC CHEOPS-OPERATION)
(DEFPROP ASSIGN-PDL-REGISTER CHASM-5-ASSIGN-PDL-REGISTER CHEOPS-OPERATION)
