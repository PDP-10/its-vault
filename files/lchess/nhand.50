;;; -*-Mode:LISP; Package:USER; Base: 10. -*-
;SPECIAL ESCAPES FOR THE FORMAT FUNCTION:

(DEFPROP FORMAT:SQ C-FORMAT-CTL-SQ FORMAT:FORMAT-CTL-ONE-ARG)
(DEFUN C-FORMAT-CTL-SQ (ARG PARAMS)
       (C-OUTPUT-SQUARE ARG STANDARD-OUTPUT))

(DEFPROP FORMAT:PC C-FORMAT-CTL-PC FORMAT:FORMAT-CTL-ONE-ARG)
(DEFUN C-FORMAT-CTL-PC (ARG PARAMS)
       (C-OUTPUT-PIECE ARG STANDARD-OUTPUT))

(DEFPROP FORMAT:LMI C-FORMAT-CTL-LIST-OF-MOVE-INDICIES FORMAT:FORMAT-CTL-ONE-ARG)
(DEFUN C-FORMAT-CTL-LIST-OF-MOVE-INDICIES (ARG PARAMS)
       (C-PRINT-LIST-OF-MOVE-INDICES C-MOVE-LIST ARG STANDARD-OUTPUT))

;OUTPUTS A PIECE-LIST SUCH AS FOUND IN BEARS-ON-SQUARE ARY, ETC.
(DEFPROP FORMAT:PL C-FORMAT-CTL-PIECE-LIST FORMAT:FORMAT-CTL-ONE-ARG)
(DEFUN C-FORMAT-CTL-PIECE-LIST (ARG PARAMS)
       (C-OUTPUT-PIECE-LIST ARG STANDARD-OUTPUT))

;OUTPUTS A SQUARE-AND-DIR-LIST SUCH AS FOUND IN MOVE-OPINION WILL-DEFEND-OUR-PIECES, ETC.
(DEFPROP FORMAT:SQDL C-FORMAT-CTL-SQUARE-AND-DIR-LIST FORMAT:FORMAT-CTL-ONE-ARG)
(DEFUN C-FORMAT-CTL-SQUARE-AND-DIR-LIST (ARG PARAMS)
       (C-OUTPUT-SQUARE-AND-DIR-LIST ARG STANDARD-OUTPUT))

;--
(DEFUN MOVE-LIST (MSG &OPTIONAL SELF STREAM &REST REST)
       (COND ((EQ MSG 'PRINT-SELF)
	      (PRINC "#<MOVE-LIST>" STREAM))
	     ((EQ MSG 'WHICH-OPERATIONS)
	      '(PRINT-SELF))
	     (T (ERROR MSG 'MOVE-LIST))))

(DEFUN BOARD-ARRAY (MSG &OPTIONAL SELF STREAM &REST REST)
       (COND ((EQ MSG 'PRINT-SELF)
	      (TERPRI STREAM)
	      (C-PRINT-BOARD-ARRAY SELF STREAM))
	     ((EQ MSG 'WHICH-OPERATIONS)
	      '(PRINT-SELF))
	     (T (ERROR MSG 'BOARD-ARRAY))))

(DEFUN C-PRINT-BOARD-ARRAY (ARY &OPTIONAL (STREAM STANDARD-OUTPUT) &AUX SQ-CONTENTS)
  (DO RANK 0 (1+ RANK) (= RANK 8)
      (TERPRI STREAM)
      (DO FILE 7 (1- FILE) (< FILE 0)
	  (SETQ SQ-CONTENTS (AR-1 ARY (AR-1 C-RANK-FILE-TO-SQUARE-MAP 
                                            (+ (LSH RANK 3) FILE))))
	  (COND ((= SQ-CONTENTS SQUARE-VACANT)
		 (COND ((ZEROP (LOGAND 1 (LOGXOR RANK FILE)))
			(PRINC "** " STREAM))
		       (T (PRINC "-- " STREAM))))
		(T (PRINC (AR-1 C-PIECE-TEXT-ARRAY SQ-CONTENTS))))))
  (COND ((NOT (= (BOARD-HASH BOARD-ARRAY)
		 (C-HASH-CHECK)))
	 (PRINC "BOARD-HASH WRONG!" STREAM)))
)


(DEFUN PIECE-ARRAY (MSG &OPTIONAL SELF STREAM &REST REST)
       (COND ((EQ MSG 'PRINT-SELF)
	      (TERPRI STREAM)
	      (C-PRINT-PIECE-ARRAY SELF STREAM))
	     ((EQ MSG 'WHICH-OPERATIONS)
	      '(PRINT-SELF))
	     (T (ERROR MSG 'PIECE-ARRAY))))

(DEFUN C-PRINT-PIECE-ARRAY (ARY &OPTIONAL (STREAM STANDARD-OUTPUT) &AUX LOC TEM)
  (COND ((NOT (= (PIECE-WHITE-MAT-PAWNS ARY)
		 (SETQ TEM
		       (DO ((PC 0 (1+ PC))
			    (VAL 0))
			   ((= PC #o10) VAL)
			   (COND ((AND (NOT (ZEROP (AR-1 ARY PC)))
				       (PAWN-P PC))
				  (SETQ VAL (+ VAL (AR-1 (PIECE-VALUE-ARRAY ARY)
							 PC)))))) )))
	 (FORMAT STREAM "PIECE-WHITE-MAT-PAWNS DIFFERS ARY ~S, ACTUAL ~S ~%"
			(PIECE-WHITE-MAT-PAWNS ARY) TEM)))
(COND ((NOT (= (PIECE-BLACK-MAT-PAWNS ARY)
		 (SETQ TEM
		       (DO ((PC #o20 (1+ PC))
			    (VAL 0))
			   ((= PC #o30) VAL)
			   (COND ((AND (NOT (ZEROP (AR-1 ARY PC)))
				       (PAWN-P PC))
				  (SETQ VAL (+ VAL (AR-1 (PIECE-VALUE-ARRAY ARY)
							 PC)))))) )))
	 (FORMAT STREAM "PIECE-BLACK-MAT-PAWNS DIFFERS ARY ~S, ACTUAL ~S ~%"
			(PIECE-BLACK-MAT-PAWNS ARY) TEM)))
  (COND ((NOT (= (PIECE-WHITE-MAT-PCS ARY)
		 (SETQ TEM
		       (DO ((PC 0 (1+ PC))
			    (VAL 0))
			   ((= PC #o20) VAL)
			   (COND ((AND (NOT (ZEROP (AR-1 ARY PC)))
				       (NOT (PAWN-P PC)))
				  (SETQ VAL (+ VAL (AR-1 (PIECE-VALUE-ARRAY ARY)
							 PC)))))) )))
	 (FORMAT STREAM "PIECE-WHITE-MAT-PCS DIFFERS ARY ~S, ACTUAL ~S ~%"
			(PIECE-WHITE-MAT-PCS ARY) TEM)))
  (COND ((NOT (= (PIECE-BLACK-MAT-PCS ARY)
		 (SETQ TEM
		       (DO ((PC #o20 (1+ PC))
			    (VAL 0))
			   ((= PC #o40) VAL)
			   (COND ((AND (NOT (ZEROP (AR-1 ARY PC)))
				       (NOT (PAWN-P PC)))
				  (SETQ VAL (+ VAL (AR-1 (PIECE-VALUE-ARRAY ARY)
							 PC)))))) )))
	 (FORMAT STREAM "PIECE-BLACK-MAT-PCS DIFFERS ARY ~S, ACTUAL ~S ~%"
			(PIECE-BLACK-MAT-PCS ARY) TEM)))
  (DO PC 0 (1+ PC) (= PC PIECE-ARRAY-SIZE)
      (COND ((NOT (ZEROP (SETQ LOC (AR-1 ARY PC))))
	     (C-OUTPUT-PIECE PC STREAM)
	     (C-OUTPUT-SQUARE LOC STREAM)
	     (PRINC "   " STREAM)))))

(DEFUN GAME-ARRAY (MSG &OPTIONAL SELF STREAM &REST REST)
       (COND ((EQ MSG 'PRINT-SELF)
	      (TERPRI STREAM)
	      (C-PRINT-GAME-ARRAY SELF STREAM))
	     ((EQ MSG 'WHICH-OPERATIONS)
	      '(PRINT-SELF))
	     (T (ERROR MSG 'GAME-ARRAY))))

(DEFUN C-PRINT-GAME-ARRAY (ARY &OPTIONAL (STREAM STANDARD-OUTPUT) &AUX LIM CODE)
  (SETQ LIM (ARRAY-ACTIVE-LENGTH ARY))
  (TERPRI STREAM)
  (DO IDX 0 (+ IDX C-GAME-NQS) (NOT (< IDX LIM))
      (COND ((EQ (SETQ CODE (AR-1 ARY (+ IDX C-GAME-CODE)))
		 'CASTLES-KING)
	     (PRINC "O-O" STREAM))
	    ((EQ CODE 'CASTLES-QUEEN)
	     (PRINC "O-O-O" STREAM))
	    (T (C-OUTPUT-PIECE (AR-1 ARY (+ IDX C-GAME-MOVING-PC)) STREAM)
	       (PRINC "// " STREAM)
	       (C-OUTPUT-SQUARE (AR-1 ARY (+ IDX C-GAME-FROM-SQ)) STREAM)
	       (COND ((< (AR-1 ARY (+ IDX C-GAME-CAPT-PC))
			 PIECE-ARRAY-SIZE)
		      (PRINC "X " STREAM)
		      (C-OUTPUT-PIECE (AR-1 ARY (+ IDX C-GAME-CAPT-PC )) STREAM)
		      (PRINC "// " STREAM))
		     (T (PRINC "- " STREAM)))
	       (C-OUTPUT-SQUARE (AR-1 ARY (+ IDX C-GAME-TO-SQ)) STREAM)
	       (COND (CODE (PRINC CODE STREAM)))))
;     (C-OUTPUT-MOVE (AR-1 ARY (+ IDX C-GAME-MOVING-PC))
;		     (AR-1 ARY (+ IDX C-GAME-TO-SQ))
;		     (AR-1 ARY (+ IDX C-GAME-CODE))
;		     STREAM)
      (COND ((ZEROP (LOGAND (// IDX C-GAME-NQS) 1))
	     (PRINC "    " STREAM))
	    (T (TERPRI STREAM))) ))

(DEFUN CHEOPS-RESULTS (MSG &OPTIONAL SELF STREAM &REST REST)
       (COND ((EQ MSG 'PRINT-SELF)
	      (TERPRI STREAM)
	      (C-PRINT-CHEOPS-RESULTS SELF STREAM))
	     ((EQ MSG 'WHICH-OPERATIONS)
	      '(PRINT-SELF))
	     (T (ERROR MSG 'CHEOPS-RESULTS))))

(DEFUN C-PRINT-CHEOPS-RESULTS (&OPTIONAL ARG (STREAM STANDARD-OUTPUT))
  (PROG (IDX LIM MOVE-LIST MOVE-LIST-IDX ARY PROP SIDE)
	(COND ((ARRAYP ARG) (SETQ ARY ARG))
	      (T (SETQ SIDE ARG)
		 (COND ((NULL SIDE)
			(SETQ SIDE (LOGAND 1 (GAME-PLY-NUMBER GAME-ARRAY)))))
		 (SETQ PROP (COND ((= SIDE (LOGAND 1 (GAME-PLY-NUMBER GAME-ARRAY)))
				   'CHEOPS-RESULTS)
				  (T 'HIS-CHEOPS-RESULTS)))
		 (COND ((NULL (SETQ ARY (GET C-CURRENT-POSITION PROP)))
			(RETURN NIL)))))
	(SETQ MOVE-LIST (CHEOPS-RESULTS-MOVE-LIST-POINTER ARY))
	(SETQ IDX 0 LIM (ARRAY-ACTIVE-LENGTH ARY))
   L	(COND ((NOT (< IDX LIM))
	       (RETURN T)))
   	(TERPRI STREAM)
   	(PRINC "After " STREAM)
	(C-PRINT-MOVE-FROM-MOVE-LIST MOVE-LIST
				     (SETQ MOVE-LIST-IDX (AR-1 ARY (+ IDX C-CH-MOVE-IDX)))
				     STREAM)
        (FORMAT STREAM 
"Value ~D, Delta ~D, Pos ~D
"	 (AR-1 MOVE-LIST (+ MOVE-LIST-IDX C-MVL-CH-RESULT-VALUE))
	 (AR-1 MOVE-LIST (+ MOVE-LIST-IDX C-MVL-CH-RESULT-DELTA))
	 (AR-1 MOVE-LIST (+ MOVE-LIST-IDX C-MVL-MOVE-POSITIONALITY)))
	(C-OUTPUT-LIST-OF-MOVES (AR-1 MOVE-LIST (+ MOVE-LIST-IDX C-MVL-CH-PV-LIST)) STREAM)
	(TERPRI STREAM)
	(SETQ IDX (+ IDX C-CH-NQS))
	(GO L)))

(DEFUN SQUARE-CONTROL (MSG &OPTIONAL SELF STREAM &REST REST)
       (COND ((EQ MSG 'PRINT-SELF)
	      (TERPRI STREAM)
	      (C-PRINT-SQUARE-CONTROL-ARRAY SELF STREAM))
	     ((EQ MSG 'WHICH-OPERATIONS)
	      '(PRINT-SELF))
	     (T (ERROR MSG 'SQUARE-CONTROL))))

(DEFUN C-PRINT-SQUARE-CONTROL-ARRAY (&OPTIONAL ARY
						(STREAM STANDARD-OUTPUT)
				  &AUX SQ TEM)
   (COND ((NULL ARY) (SETQ ARY (C-GET-SQUARE-CONTROL))))
   (COND (ARY 
    (DO RANK 0 (1+ RANK) (= RANK 8)
      (DO FILE 7 (1- FILE) (< FILE 0)
	  (PRIN1-THEN-SPACE (AR-1 ARY (AR-1 C-RANK-FILE-TO-SQUARE-MAP 
					    (+ (LSH RANK 3) FILE)))
			    STREAM))
      (TERPRI STREAM)))))

(DEFUN CAPTURE-LIST-ITEM (MSG &OPTIONAL SELF STREAM &REST REST)
       (COND ((EQ MSG 'PRINT-SELF)
	      (C-PRINT-CAPTURE-LIST-ITEM SELF STREAM))
	     ((EQ MSG 'WHICH-OPERATIONS)
	      '(PRINT-SELF))
	     (T (ERROR MSG 'CAPTURE-LIST-ITEM))))

(DEFUN C-PRINT-CAPTURE-LIST-ITEM (ARY STREAM)
       (FORMAT STREAM '("CLI: " (PC) ", VAL ~S PLYN ~S BIAS ~S KEYS ~S")
		      (CAPTURE-LIST-ITEM-CAPTURED-PIECE ARY)
		      (CAPTURE-LIST-ITEM-VALUE ARY)
		      (CAPTURE-LIST-ITEM-PLYN ARY)
		      (CAPTURE-LIST-ITEM-BIAS ARY)
		      (CAPTURE-LIST-ITEM-KEYS ARY)))

(DEFUN THREE-RELATION (MSG &OPTIONAL SELF STREAM &REST REST)
       (COND ((EQ MSG 'PRINT-SELF)
	      (C-PRINT-THREE-RELATION SELF STREAM))
	     ((EQ MSG 'WHICH-OPERATIONS)
	      '(PRINT-SELF))
	     (T (ERROR MSG 'THREE-RELATION))))

(DEFUN C-PRINT-THREE-RELATION (ARY STREAM)
       (FORMAT STREAM '("3R: " (SQ) "~S " (SQ) "VALUE ~S, KEYS ~S" )
	       (THREE-RELATION-CENTER-SQUARE ARY)
	       (THREE-RELATION-ATTACK-DESCRIPTION ARY)
	       (THREE-RELATION-BASE-SQUARE ARY)
	       (THREE-RELATION-VALUE ARY)
	       (THREE-RELATION-KEYS ARY))) 

(DEFUN PAWN-INFO (MSG &OPTIONAL SELF STREAM &REST REST)
       (COND ((EQ MSG 'PRINT-SELF)
	      (TERPRI STREAM)
	      (C-PRINT-PAWN-INFO SELF STREAM))
	     ((EQ MSG 'WHICH-OPERATIONS)
	      '(PRINT-SELF))
	     (T (ERROR MSG 'PAWN-INFO))))

(DEFUN C-PRINT-PAWN-INFO (ARY &OPTIONAL (STREAM STANDARD-OUTPUT))
       (FORMAT STREAM "PAWN-INFO: W-KEYS ~S, B-KEYS ~S, W-PI ~S B-PI ~S~%"
		      (C-PAWN-INFO-WHITE-POSITION-KEYS ARY)
		      (C-PAWN-INFO-BLACK-POSITION-KEYS ARY)
		      (C-PAWN-INFO-WHITE-PAWN-IDENTIFICATION ARY)
		      (C-PAWN-INFO-BLACK-PAWN-IDENTIFICATION ARY))
)

(DEFUN PAWN-GROUP (MSG &OPTIONAL SELF STREAM &REST REST)
       (COND ((EQ MSG 'PRINT-SELF)
	      (TERPRI STREAM)
	      (C-PRINT-PAWN-GROUP SELF STREAM))
	     ((EQ MSG 'WHICH-OPERATIONS)
	      '(PRINT-SELF))
	     (T (ERROR MSG 'PAWN-GROUP))))

(DEFUN C-PRINT-PAWN-GROUP (ARY &OPTIONAL (STREAM STANDARD-OUTPUT))
       (FORMAT STREAM "PAWN-GROUP: FILES ~S ~S, ~S ~S K-HD ~S Q-HD ~S~%"
		      (PAWN-GROUP-LOW-FILE ARY)
		      (PAWN-GROUP-HIGH-FILE ARY)
		      (PAWN-GROUP-MEMBERS ARY)
		      (PAWN-GROUP-KEYS ARY)
		      (PAWN-GROUP-LOW-HEAD-DUO-STATE ARY)
		      (PAWN-GROUP-HIGH-HEAD-DUO-STATE ARY)))

(DEFUN STOP-SQUARE (MSG &OPTIONAL SELF STREAM &REST REST)
       (COND ((EQ MSG 'PRINT-SELF)
	      (TERPRI STREAM)
	      (C-PRINT-STOP-SQUARE-ARRAY SELF STREAM))
	     ((EQ MSG 'WHICH-OPERATIONS)
	      '(PRINT-SELF))
	     (T (ERROR MSG 'STOP-SQUARE))))

(DEFUN C-PRINT-STOP-SQUARE-ARRAY (ARY &OPTIONAL (STREAM STANDARD-OUTPUT) &AUX TEM)
  (DO PC 0 (1+ PC) (= PC PIECE-ARRAY-SIZE)
      (COND ((SETQ TEM (AR-1 ARY PC))
	     (C-OUTPUT-PIECE PC STREAM)
	     (PRIN1 TEM STREAM)
	     (PRINC "   " STREAM)))))

(DEFUN PAWN-KEYS (MSG &OPTIONAL SELF STREAM &REST REST)
       (COND ((EQ MSG 'PRINT-SELF)
	      (TERPRI STREAM)
	      (C-PRINT-PAWN-KEYS-ARRAY SELF STREAM))
	     ((EQ MSG 'WHICH-OPERATIONS)
	      '(PRINT-SELF))
	     (T (ERROR MSG 'PAWN-KEYS))))

(DEFUN C-PRINT-PAWN-KEYS-ARRAY (ARY &OPTIONAL (STREAM STANDARD-OUTPUT) &AUX TEM)
  (DO PC 0 (1+ PC) (= PC PIECE-ARRAY-SIZE)
      (COND ((SETQ TEM (AR-1 ARY PC))
	     (C-OUTPUT-PIECE PC STREAM)
	     (PRIN1 TEM STREAM)
	     (PRINC "   " STREAM)))))

(DEFUN FILE-KEYS (MSG &OPTIONAL SELF STREAM &REST REST)
       (COND ((EQ MSG 'PRINT-SELF)
	      (TERPRI STREAM)
	      (C-PRINT-FILE-KEYS-ARRAY SELF STREAM))
	     ((EQ MSG 'WHICH-OPERATIONS)
	      '(PRINT-SELF))
	     (T (ERROR MSG 'FILE-KEYS))))

(DEFUN C-PRINT-FILE-KEYS-ARRAY (ARY &OPTIONAL (STREAM STANDARD-OUTPUT) &AUX TEM)
  (DO FILE 0 (1+ FILE) (= FILE 9)
      (COND ((SETQ TEM (AR-1 ARY FILE))
	     (C-OUTPUT-FILE FILE STREAM)
	     (PRIN1 TEM STREAM)
	     (PRINC "   " STREAM)))))

(DEFUN CAPTURE-SUMMARY (MSG &OPTIONAL SELF STREAM &REST REST)
       (COND ((EQ MSG 'PRINT-SELF)
	      (TERPRI STREAM)
	      (C-PRINT-CAPTURE-SUMMARY SELF STREAM))
	     ((EQ MSG 'WHICH-OPERATIONS)
	      '(PRINT-SELF))
	     (T (ERROR MSG 'CAPTURE-SUMMARY))))

(DEFUN C-PRINT-CAPTURE-SUMMARY (ARY &OPTIONAL (STREAM STANDARD-OUTPUT))
    (FORMAT STREAM "CAPT SUMMARY: US ~S, HIM ~S; PINS ~S,, ~S; DISCOV ~S,, ~S~%"
		   (CAPTURE-SUMMARY-OUR-CAN-BE-CAPT-LIST ARY)
		   (CAPTURE-SUMMARY-HIS-CAN-BE-CAPT-LIST ARY)
		   (CAPTURE-SUMMARY-OUR-POSSIBLE-PINS ARY)
		   (CAPTURE-SUMMARY-HIS-POSSIBLE-PINS ARY)
		   (CAPTURE-SUMMARY-OUR-POSSIBLE-DISCOVERIES ARY)
		   (CAPTURE-SUMMARY-HIS-POSSIBLE-DISCOVERIES ARY)))

(DEFUN DEFENSE-RELATIONS (MSG &OPTIONAL SELF STREAM &REST REST)
       (COND ((EQ MSG 'PRINT-SELF)
	      (TERPRI STREAM)
	      (C-PRINT-DEFENSE-RELATIONS-ARRAY SELF STREAM))
	     ((EQ MSG 'WHICH-OPERATIONS)
	      '(PRINT-SELF))
	     (T (ERROR MSG 'DEFENSE-RELATIONS))))

(DEFUN C-PRINT-DEFENSE-RELATIONS-ARRAY (ARY &OPTIONAL (STREAM STANDARD-OUTPUT) &AUX TEM)
  (DO PC 0 (1+ PC) (= PC PIECE-ARRAY-SIZE)
      (COND ((SETQ TEM (AR-1 ARY PC))
	     (C-OUTPUT-PIECE PC STREAM)
	     (PRIN1 TEM STREAM)
	     (PRINC "   " STREAM)))))

(DEFUN ATTACK-RELATIONS (MSG &OPTIONAL SELF STREAM &REST REST)
       (COND ((EQ MSG 'PRINT-SELF)
	      (TERPRI STREAM)
	      (C-PRINT-ATTACK-RELATIONS-ARRAY SELF STREAM))
	     ((EQ MSG 'WHICH-OPERATIONS)
	      '(PRINT-SELF))
	     (T (ERROR MSG 'ATTACK-RELATIONS))))

(DEFUN C-PRINT-ATTACK-RELATIONS-ARRAY (ARY &OPTIONAL (STREAM STANDARD-OUTPUT) &AUX TEM)
  (DO PC 0 (1+ PC) (= PC PIECE-ARRAY-SIZE)
      (COND ((SETQ TEM (AR-1 ARY PC))
	     (C-OUTPUT-PIECE PC STREAM)
	     (PRIN1 TEM STREAM)
	     (PRINC "   " STREAM)))))

(DEFUN ATTACK-INSTANCE (MSG &OPTIONAL SELF STREAM &REST REST)
       (COND ((EQ MSG 'PRINT-SELF)
	      (TERPRI STREAM)
	      (C-PRINT-ATTACK-INSTANCE SELF STREAM))
	     ((EQ MSG 'WHICH-OPERATIONS)
	      '(PRINT-SELF))
	     (T (ERROR MSG 'ATTACK-INSTANCE
))))

(DEFUN C-PRINT-ATTACK-INSTANCE (ARY &OPTIONAL (STREAM STANDARD-OUTPUT) &AUX TEM)
  (FORMAT STREAM '( "ATI: " (SQ) "PC " (PC) "VALUE ~S, APL " (PL) ", DPL "(PL) ", KEYS ~S~%")
	  (ATTACK-INSTANCE-SQUARE ARY)
	  (ATTACK-INSTANCE-PIECE ARY)
	  (ATTACK-INSTANCE-VALUE ARY)
	  (ATTACK-INSTANCE-ATTACKING-PIECE-LIST ARY)
	  (ATTACK-INSTANCE-DEFENDING-PIECE-LIST ARY)
	  (ATTACK-INSTANCE-KEYS ARY)))

(DEFUN MOVE-SUMMARY (MSG &OPTIONAL SELF STREAM &REST REST)
       (COND ((EQ MSG 'PRINT-SELF)
	      (TERPRI STREAM)
	      (C-PRINT-MOVE-SUMMARY SELF STREAM))
	     ((EQ MSG 'WHICH-OPERATIONS)
	      '(PRINT-SELF))
	     (T (ERROR MSG 'MOVE-SUMMARY))))

(DEFUN C-PRINT-MOVE-SUMMARY (ARY STREAM &AUX C-MOVE-LIST)
       (SETQ C-MOVE-LIST (MOVE-SUMMARY-MOVE-LIST ARY))
       (FORMAT STREAM '("MS: DG " (LMI) ", CHEO-DG " (LMI) ", DEF " (LMI) "~%" )
	       (MOVE-SUMMARY-DIRECT-GAIN-MOVES ARY)
	       (MOVE-SUMMARY-CHEOPS-DIRECT-GAIN-MOVES ARY)
	       (MOVE-SUMMARY-DEFENDING-MOVES ARY) )
)

(DEFUN BASE-CHEOPS-RESULTS (MSG SELF STREAM &REST REST)
       (C-PRINT-BASE-CHEOPS-RESULTS SELF STREAM))

(DEFUN C-PRINT-BASE-CHEOPS-RESULTS (ARY STREAM &AUX TEM)
  (FORMAT STREAM "BASE-CHEOPS-RESULTS: CURRENT-MAT ~S, VALUE ~S, DELTA ~S~%"
	  (BASE-CHEOPS-RESULTS-CURRENT-MATERIAL ARY)
	  (BASE-CHEOPS-RESULTS-VALUE ARY)
	  (BASE-CHEOPS-RESULTS-DELTA ARY))
  (FORMAT STREAM "PV: ")
    (C-PRINT-VARIATION (BASE-CHEOPS-RESULTS-PV-LIST ARY) STREAM)
  (FORMAT STREAM "~%With HIM to move, VALUE ~S, PV: "
	  (BASE-CHEOPS-RESULTS-VALUE-WHTM ARY))
    (C-PRINT-OTHER-SIDE-VARIATION (BASE-CHEOPS-RESULTS-PV-LIST-WHTM ARY) STREAM)
  (COND ((SETQ TEM (BASE-CHEOPS-RESULTS-KEYS ARY))
	 (FORMAT STREAM "~%KEYS: ~S" TEM)))
)

(DEFUN C-SEARCH (MSG &OPTIONAL SELF STREAM &REST REST)
       (COND ((EQ MSG 'PRINT-SELF)
	      (FORMAT STREAM "
SEARCH-STATUS 
  POSITION ~S 
     ACTIVE-KEYS ~S
     MOVE-TYPE ~S
"
      (C-SEARCH-POSITION SELF)
      (C-SEARCH-ACTIVE-KEYS-ALIST SELF)
      (C-SEARCH-MOVE-TYPE SELF)))
	     ((EQ MSG 'WHICH-OPERATIONS)
	      '(PRINT-SELF))
	     (T (ERROR MSG 'SEARCH))))

