; DELPHI JOTTO PROGRAM, 12/73 STEVE WARD
	.TITLE	JOTTO
	.ENABL	LC

STACK=400	; STACK SIZE
NTRYS=20.	; MAX # OF MY TEST WORDS

	.MCALL	.PARAM
	.PARAM	<TRAP,GPRM,ENTRY>

	.GLOBL	WORDS,EWORDS,NWORDS,KEYS

	.ENTRY	JOTTO

; STATIC STORAGE ALLOCATION MACRO:

	.MACRO	VAR	NAME,LENGTH
	.IF NB NAME
	NAME=.CPTR
	.ENDC
	.IF NB LENGTH
	.CPTR=LENGTH+.CPTR
	.IFF
	.CPTR=.CPTR+2
	.ENDC
	.ENDM

	.CPTR=0


; ALLOCATION OF STATIC STORAGE:

	VAR	,STACK	; STACK ALLOCATION
	VAR	SECRET,6	; SECRET WORD PTR
	VAR	WORD,6	; SECRET WORD STORAGE
	VAR	RAND1	; RANDOM NUMBER
	VAR	TRIALS,6*NTRYS
	VAR	TRYNUM
	VAR	STRATG
	VAR	COMMON	; NONZERO IFF TRYING HARD WORDS.
	VAR	TRYPRE
	VAR	TRYBOD
	VAR	MYFLAG	; NONZERO IF IM PLAYING.
	VAR	HSFLAG	; NONZERO IF HE'S PLAYING.


; ENCODE THE ASCII WORD (AWORD) POINTED TO BY R3, LEAVE CODE IN
;   R0, R1 (PREFIX IN R0, BODY IN R1).

ENCODE:	MOVB (3),R1		; PREFIX FIRST
	SUB #'A,R1
	MUL #26.,R1
	MOVB 1(3),R0
	SUB #'A,R0
	ADD R0,R1
	MOV R1,-(6)		; THATS THE PREFIX.

	MOVB 2(3),R1		; BODY IS SIMILAR
	SUB #'A,R1
	MUL #26.,R1
	MOVB 3(3),R0
	SUB #'A,R0
	ADD R0,R1
	MUL #26.,R1
	MOVB 4(3),R0
	SUB #'A,R0
	ADD R0,R1		; THATS THE BODY
	MOV (6)+,R0
	RTS R7


; UNPACK 3 BYTES 2(3), 3(3), 4(3) - BODY CODE IN R1:

UNPBOD:	MOV R0,-(6)
	MOV R1,-(6)
	BIC #100000,R1	; REMOVE CODE BIT
	CLR R0
	DIV #26.,R0
	ADD #'A,R1
	MOVB R1,4(3)
	MOV R0,R1
	CLR R0
	DIV #26.,R0
	ADD #'A,R1
	MOVB R1,3(3)
	ADD #'A,R0
	MOVB R0,2(3)

	MOV (6)+,R1
	MOV (6)+,R0
	RTS 7

; UNPACK PREFIX INTO 0(3), 1(3) - PREFIX IN R0:

UNPRE:	MOV R0,-(6)
	MOV R1,-(6)
	MOV R0,R1
	CLR R0
	DIV #26.,R0
	ADD #'A,R1
	ADD #'A,R0
	MOVB R1,1(3)
	MOVB R0,(3)
	MOV (6)+,R1
	MOV (6)+,R0
	RTS 7

; CHECK WHETHER C(WORD) IS A WORD, ENQUIRING IFF IN QUESTION.
;   RTS V BIT IFF NOT A GOOD WORD.  SETS C BIT IFF HAD TO ASK.

ISWORD:	MOV R4,-(6)
	MOV R3,-(6)
	MOV R1,-(6)
	MOV R0,-(6)

	MOV #WORD,R3
	JSR 7,ENCODE
	ASL R0
	ADD #KEYS,R0	; INDEX OF WORD PREFIX

	MOV 2(0),R4
	SUB (0),R4	; COUNT OF WORDS WITH SAME PREFIX
	BEQ ISW1	; NONE THERE.

	ASR R4

	MOV (0),R0	; PTR TO TABLE ENTRIES.

1$:	MOV (0)+,R3	; LOOK UP THE WORD
	BIC #100000,R3
	CMP R3,R1
	BEQ ISW2	; ITS OK.

	SOB R4,1$

ISW1:	MOV #ISWMSG,R0	; NOT IN DICT, ENQUIRE.
	JSR 7,@$IOA
	JSR 7,YESNO
	BVS ISW4

	SEC		; SET C BIT - HAD TO ASK.
ISW3:	MOV (6)+,R0
	MOV (6)+,R1
	MOV (6)+,R3
	MOV (6)+,R4
	RTS 7

ISW4:	MOV (6)+,R0
	MOV (6)+,R1
	MOV (6)+,R3
	MOV (6)+,R4
	SEV
	RTS 7

ISW2:	CCC
	BR ISW3		; WORD IS OK.

ISWMSG:	.ASCIZ "\/are you SURE thats a word? "
	.EVEN


; SIMPLE PSEUDO-RANDOM NUMBER GENERATOR,  2/73 STEVE WARD

; CALLS:

; GENERATE A RANDOM 14-BIT WORD, LEAVE IT RT ADJUSTED IN R0:

;	JSR R7,RANDOM

; DISTRIBUTION IS RECTANGULAR.  TO VARY SEQUENCE, MAKE SOME
; ARBITRARY NUMBER OF CALLS TO RANDOM (OR RANNO) FOR INITIALIZATION.

; GENERATE A RANDOM INTEGER BETWEEN 0 AND N-1 (INCLUSIVE): N IN R1,

;	JSR R7,RANNO

; NUMBER RETURNED IN R0.  DISTRIBUTION IS APPROXIMATELY
; RECTANGULAR (WITHIN 1/N, WORST CASE) AND IS EXACTLY RECTANGULAR
; WHEN N IS A POWER OF 2.

; GENERATE A RANDOM # BETWEEN 0 AND N, N IN R1.  LEAVE # IN R0:

RANNO:	JSR R7,RANDOM
	MOV R1,-(6)
	MOV R0,R1
	CLR R0
	DIV (6),R0
	MOV R1,R0
	MOV (6)+,R1
	RTS R7


; GENERATE A RANDOM 14-BIT WORD, LEAVE IN R0:

RANDOM:	MOV R1,-(6)
	MOV RAND1,R0
	MUL RAND1,R0
	ASHC #15.,R0
	ADD #1013,R0
	MOV (6)+,R1
	MOV R0,RAND1
	CCC
	ROR R0
	ASR R0
	RTS R7





; HERE TO QUIT:

QUIT:	MOV #41,-(6)		; FIX UP TTY BITS.
	CLR -(6)
	TTYSET
	EXIT

; ENTRY POINT:

JOTTO:	MOV #.CPTR,R0	; GET SOME CORE
	MOV R0,R1
	JSR 7,@$GETCOR

	MOV #STACK,R6
	MOV #-1,R5	; STREAM FOR I/O

	DATIME		; INIT RANDOM GENERATOR
	MOV (6)+,R0
	ADD (6)+,R0
	ADD (6)+,R0
	MOV R0,RAND1	; 1ST RANDOM NUMBER.
	CLR -(6)	; TURN OFF ECHO, ERASE, KILL.
	MOV #41,-(6)
	TTYSET
	TST (6)+	; IGNORE RESULT

DUMMY:

	MOV #INTRO,R0	; INTRODUCTION.
	JSR 7,@$IOA
	JSR 7,YESNO	; DOES HE KNOW?
	BVS HLPHIM	; NO, GIVE HIM ADVICE.

	BR NGAME1	; ELSE, START THE GAME1!

HLPHIM:	MOV #HLPMSG,R0
	JSR 7,@$IOA
	BR QUIT

HLPMSG:	.ASCIZ 'type DELPHI command "help jotto"\/'
INTRO:	.BYTE 12,12
	.ASCII "Welcome to DELPHI JOTTO\/\/"
	.ASCIZ "  Do you know how to play? "

	.EVEN




; HERE TO START NEW GAME:

NGAME:	MOV #STACK,R6	; INITIALIZS THE STACK
	MOV #ANOTHR,R0	; ANOTHER GAME?
	JSR 7,@$IOA
	JSR 7,YESNO
	BVS QUIT

NGAME1:	MOV #NEWMSG,R0
	JSR 7,@$IOA		; "NEW GAME" MSG
	MOV #1,HSFLAG	; HES PLAYING
	CLR MYFLAG
	JSR 7,YESNO
	BVS NGAME2

	MOV #1,MYFLAG	; YES, SET IT UP.
	CLR TRYPRE
	MOV #1,STRATG
	CLR TRYNUM
	CLR COMMON

NGAME2:	JSR 7,SELECT	; SELECT A NEW WORD.

; HERE FOR HIS TEST WORD:

HTEST:	TST HSFLAG	; IS HE STILL PLAYING?
	BNE HTEST1	; YUP, GIVE 'IM 'IS TURN.
	TST MYFLAG	; HES NOT.  AM I?
	BEQ NGAME	; NOPE, START ANEW.
	BR MTEST	; ILL KEEP PLAYING, THEN.
HTEST1:	MOV #TSTMSG,R0
	JSR 7,@$IOA
	JSR 7,RWORD
	JSR 7,ISWORD	; IS IT A GOOD WORD?
	BVS HTEST	; NOPE, READ ANOTHER ONE.

	MOV #WORD,R3	; SAME WORD?
	MOV #SECRET,R4
	JSR 7,SAMEQ
	BNE NOTYET	; NOPE.

	MOV #GOTMSG,R0
	JSR 7,@$IOA
	TST MYFLAG	; AM I PLAYING?
	BEQ NGAME	; NOPE, START NEW GAME.
	MOV #IKEEP,R0	; SHALL I KEEP PLAYING?
	JSR 7,@$IOA
	CLR HSFLAG	; HE'S NOT PLAYING ANY MORE.
	JSR 7,YESNO
	BVS NGAME	; NOPE, END THE GAME.
	BR MTEST	; YES, ILL KEEP GUESSING.

NOTYET:	MOV #WORD,R3
	MOV #SECRET,R4
	JSR 7,JOT	; COUNT JOTS
	MOV #40,-(6)
	TYPECH
	MOV R0,-(6)
	ADD #'0,(6)
	TYPECH
	MOV #JOTMSG,R0
	JSR 7,@$IOA

MTEST:	JSR 7,MYPLAY	; NOW ITS MY TURN.
	BR HTEST	; THEN HIS AGAIN.



; SOME MESSAGES:

NEWMSG:	.BYTE 14,12
	.ASCIZ "New Game!  Shall I play too? "
ANOTHR:	.ASCIZ /Another game? /
JOTMSG:	.ASCIZ " jots\/"

TSTMSG:	.ASCII /Your test word: /
	.BYTE 0

IKEEP:	.ASCII "Congratulations, you WON!!!\/"
	.ASCIZ "Shall I keep playing? "
UKEEP:	.ASCII "AHA, I beat you!\/"
UKEEP1:	.ASCIZ "Do you want to keep guessing? "

GOTMSG:	.ASCII / you GOT it!!!/
	.BYTE 12,0
	.EVEN

; TEST WHETHER WORDS IN (R3) AND (R4) ARE THE SAME:
;   DESTROYS R4,R3

SAMEQ:	CMPB (3)+,(4)+
	BNE SAMEQ1
	CMPB (3)+,(4)+
	BNE SAMEQ1
	CMPB (3)+,(4)+
	BNE SAMEQ1
	CMPB (3)+,(4)+
	BNE SAMEQ1
	CMPB (3)+,(4)+
SAMEQ1:	RTS 7


; GET YES OR NO ANSWER: SETS V BIT IFF NO.

YESNO:	READCH
	MOV (6)+,R0
	CMP R0,#'N+40
	BEQ YESNO2	; HE SAID NO
	CMP R0,#'N
	BEQ YESNO2
	CMPB R0,#'Y+40
	BEQ YESNO3
	CMP R0,#'Y
	BEQ YESNO3

	BR YESNO

YESNO2:	MOV #YESNO5,R0
	JSR 7,@$IOA
	SEV
	RTS 7

YESNO3:	MOV #YESNO6,R0
	JSR 7,@$IOA
	CCC
	RTS 7

	.BYTE 0

YESNo5:	.ASCII /No/
	.BYTE 12,0
YesNO6:	.ASCII /Yes/
	.BYTE 12,0
	.EVEN

; COUNT JOTS IN (3) VS (4), ANS IN R0.  R4 GETS INCREMENTED BY 5.

JOT:	MOV R3,-(6)
	MOV R5,-(6)
	MOV R2,-(6)
	MOV R1,-(6)		; SAVE THE REGISTERS

	SUB #6,R6	; ALLOCATE TEMP SPACE FROM STACK
	MOV R6,R1
	MOVB (3)+,(1)+		; STACK THE WORD IN R3
	MOVB (3)+,(1)+
	MOVB (3)+,(1)+
	MOVB (3)+,(1)+
	MOVB (3)+,(1)+

	CLR R0		; FOR ANSWER
	MOV #5,R3		; OUTER LOOP COUNT

JOT7:	MOVB (4)+,R5		; LETTER TO COMPARE.
	MOV R6,R1
	MOV #5,R2		; COUNT FOR INNER LOOP

JOT8:	CMPB R5,(1)+
	BEQ JOT1		; MATCH.
	SOB R2,JOT8

JOT9:	SOB R3,JOT7

	ADD #6.,R6		; RESTORE AND RTN
	MOV (6)+,R1
	MOV (6)+,R2
	MOV (6)+,R5
	MOV (6)+,R3
	RTS 7

JOT1:	INC R0		; HERE ON MATCH
	CLRB -(1)
	TSTB (1)+
	BR JOT9


; READ A JOTTO WORD INTO WORD:

RWORD:	MOV R0,-(6)
	MOV R1,-(6)
	MOV R2,-(6)

RWORD1:	MOV #WORD,R1
	MOV #5,R2

RWORD2:	READCH
	MOVB (6)+,R0
	CMPB R0,#'A+40
	BLO RWORD3		; NOT A LC LETTER

	SUB #40,R0

RWORD3:	CMP R0,#'A		; IS IT LEGAL?
	BLO RWORD4		; NOPE.
	CMP R0,#'Z
	BHI RWORD4

	MOVB R0,(1)+
	MOVB R0,-(6)		; ECHO THE CHAR.
	TYPECH

	SOB R2,RWORD2

	MOV (6)+,R2
	MOV (6)+,R1
	MOV (6)+,R0
	RTS 7

RWORD4:	CMP R1,#WORD		; NO COMPLAINTS IFF AN
	BEQ RWORD2		;   INITIAL LETTER.
	MOVB #'?,-(6)
	TYPECH
	MOVB #40,-(6)
	TYPECH
	BR RWORD1


; PRINT AWORD POINTED TO BY R3:

PWORD:	MOVB (3),-(6)
	TYPECH
	MOVB 1(3),-(6)
	TYPECH
	MOVB 2(3),-(6)
	TYPECH
	MOVB 3(3),-(6)
	TYPECH
	MOVB 4(3),-(6)
	TYPECH
	RTS 7

; SELECT A JOTTO WORD - LEAVE IT IN "SECRET":

SELECT:	MOV R0,-(6)
	MOV R1,-(6)
	MOV R3,-(6)

	MOV #EWORDS,R1	; CALC # OF WORDS
	SUB #WORDS,R1
	ASR R1
SEL1:	JSR 7,RANNO
	ASL R0
	ADD #WORDS,R0	; PTR TO BODY.
	TST (0)	; EASY ENUF FOR AN AMATEUR?
	BMI SEL1	; NOPE, FIND ANOTHER.

	MOV #KEYS,R1	; FIND PREFIX
1$:	CMP 2(1),R0
	BHI 3$
	TST (1)+
	BR 1$

3$:	SUB #KEYS,R1
	ASR R1		; FOUND THE PREFIX.
	MOV R0,-(6)
	MOV R1,R0
	MOV (6)+,R1
	MOV (1),R1
	MOV #SECRET,R3
	JSR 7,UNPBOD
	JSR 7,UNPRE

	MOV (6)+,R3
	MOV (6)+,R1
	MOV (6)+,R0

	RTS R7



; STUFF FOR MACHINE'S GAME
; VARIABLES;

; TRIALS:	.BLKB 6*NTRYS	; ARRAY CONTAINING TEST WORDS
				;  AND THEIR RESULTS.  TEST WORDS
				;  ARE IN 1ST 5 BYTES OF EACH
				;  SLOT, LAST BYTE BEING # JOTS.
; TRYNUM:	.WORD 0		; # OF ENTRIES IN TRIALS
; CHEAT:	.ASCII /TEARS/	; ARRAY OF INITIAL TRIAL WORDS.
;		   ...		;  THESE ARE TRIED FIRST (IF THEY
				;  ARE CONSISTENT WITH TRIALS),
				;  THEN WORDS FROM "WORDS" ARE TIRED.
; STRATG:	.WORD 1		; CODE FOR NEXT "CHEAT" WORD TO TRY,
				;  OR 0 IF INTO "WORDS".
; TRYPRE:	.WORD 0		; PTR TO "KEYS" ARRAY FOR PREFIX OF
				;  NEXT WORD TO TRY, OR 0 IF DOING
				;  "CHEAT" ARRAY.
; TRYBOD:	.WORD 0		; PTR TO "WORDS" ARRAY - NEXT
				;  WORD TO TRY.


; ROUTINE TO TRY WORD IN "WORD" - RTNS V BIT IFF C("WORD") IS NOT
;  A CANDIDATE (PTR TO TRIAL WORD VIOLATED IS IN R3).  ELSE RTNS
;  WITH NO V BIT, GARBAGE IN R3, R0.

TRYWRD:	MOV R4,-(6)
	MOV R2,-(6)
	MOV #TRIALS,R3
	MOV TRYNUM,R2
	BEQ TRYWR1	; NO TRIALS - ITS A CANDIDATE.

TRYWR5:	MOV #WORD,R4	; CHECK IT OUT.
	JSR 7,JOT
	CMPB R0,5(3)
	BNE TRYWR6	; NO MATCH.
	ADD #6,R3	; NEXT TRIAL WORD
	SOB R2,TRYWR5
TRYWR1:	CCC		; OK, IT FITS.
	MOV (6)+,R2
	MOV (6)+,R4
	RTS 7

TRYWR6:	MOV (6)+,R2
	MOV (6)+,R4
	SEV		; NOT A CANDIDATE.
	RTS 7

; "CHEAT" ARRAY - CONTAINS COMMON WORDS TO BE USED AS
;  PRELIMINARY TEST WORDS:

; CHEAT ARRAY: EACH ENTRY (STARTING ON AN EVEN WORD BOUNDARY) HAS
;  A 5-BYTE ASCII WORD, A BLANK BYTE, AND A 1-WORD CODE.  MACRO TO
;  MAKE A "CHEAT" ENTRY:

	.MACR	CH	WORD,CODE
	.ASCII "'WORD'"
	.EVEN
	.WORD	CODE
	.ENDM

; ACTUAL ARRAY:

CHEAT:	CH	TEARS,1
	CH	CHINK,10
	CH	IMPLY,77
	CH	DYING,76
	CH	DEIGN,7
	CH	SPOOL,70
	CH	CHUMS,677
	CH	CULLS,676
	CH	SPILL,67
	CH	CROON,670
	CH	BONUS,667
	CH	PITCH,666
	CH	MODEL,66
	CH	LONGS,657
	CH	DIALS,656
	CH	LOVED,65
	CH	DINER,6
	CH	FLOUT,60
	CH	LAMPS,577
	CH	SHOOS,576
	CH	SLEEP,57
	CH	BROOM,570
	CH	SUITS,567
	CH	SWANK,5667

	CH	LEACH,566
	CH	SILKS,5657
	CH	SOUPS,565
	CH	SNAIL,56
	CH	PORCH,560
	CH	WEEDS,557
	CH	OPENS,556
	CH	VISES,5556
	CH	LARGE,555
	CH	SNAIL,55
	CH	FIRRY,547
	CH	NOMAD,546
	CH	HOIST,5
	CH	CLUNG,50
	CH	SLAPS,47
	CH	REEDS,467
	CH	DRUGS,466
	CH	VALET,465
	CH	HIRED,46
	CH	STEEL,457
	CH	HAILS,456
	CH	PRINT,455
	CH	ROACH,45
	CH	PARCH,4
	CH	PITCH,36

; END OF "CHEAT" ARRAY:

ECHEAT:

	.EVEN

; GUTS OF MACHINE PLAYING: GET NEXT TEST WORD, LEAVE IT IN
;  "WORD".  RTS V BIT ON GIVEUP.

GETEST:	MOV R2,-(6)
	MOV R3,-(6)
	MOV R4,-(6)

GETES1:	TST STRATG	; IN THE EARLY PHASE?
	BEQ GETES5	; NOPE, GO DO THE TACKY STUFF.

; HERE FOR THE EARLY ("CHEAT" ARRAY) STUFF:

	MOV #CHEAT,R0	; SEE IF CODE'S IN "CHEAT" ARRAY:
1$:	CMP R0,#ECHEAT	; AT END?
	BLO 2$		; NOPE.

	CLR STRATG	; YES, ENTER LATE PHASE.
	BR GETES5

2$:	CMP STRATG,6(0)	; IS THIS IT?
	BEQ 4$		; YUP, TAKE THIS ONE.

	ADD #10,R0	; ELSE KEEP LOOKING.
	BR 1$

4$:	MOV #5,R2	; COPY IN WORD.
	MOV #WORD,R3
3$:	MOVB (0)+,(3)+
	SOB R2,3$

; FOUND CANDIDATE - RTN.

GETES2:	MOV (6)+,R4
	MOV (6)+,R3
	MOV (6)+,R2
	CCC
	RTS 7

; AH, HERE WE ARE.  WHEN WE GET THRU THE "CHEAT" THING,
;  WE CYCLE THRU THE ENTIRE "WORDS" ARRAY LOOKING FOR
;  A WINNER TO TRY.  THIS IS WHERE IT HAPPENS:

GETES5:	TST TRYPRE	; HAS IT BEEN INITIALISED?
	BNE GET51	; YES, GO TO IT.
	MOV #KEYS,TRYPRE	; INITIAL VALUES
	MOV KEYS,TRYBOD

GET51:	CMP TRYBOD,#EWORDS	; END OF "WORDS"?
	BNE GET52	; NOT YET.

GET99:	MOV (6)+,R4	; YES, GIVE UP.
	MOV (6)+,R3
	MOV (6)+,R2
	SEV
	RTS 7

GET52:	MOV TRYPRE,R0	; END OF THIS PREFIX?
	CMP (0),TRYBOD	; AT THE RIGHT PREFIX?
	BLOS GET53	; YES.

	ADD #2,TRYPRE	; ELSE GO TO NEXT PREFIX.
	BR GET52

GET53:	CMP 2(0),TRYBOD	; END OF THIS PREFIX?
	BHI GET54	; NOPE.


; HERE ON NEW PREFIX:

	ADD #2,TRYPRE
	CMP TRYPRE,#KEYS+<26.*26.*2>
	BEQ GET99	; GIVE UP, AT THE END.

	MOV TRYPRE,R0
	MOV (0),TRYBOD
	BR GET52


; HERE ON A VALID TRYPRE-TRYBOD PAIR: TRY IT OUT:

GET54:	TST COMMON	; TRYING HARD WORDS?
	BEQ GET541	; NOPE.

	TST @TRYBOD	; YES- LOOK FOR "HARD" BIT.
	BGE GET57	; NOPE, NOT A HARD WORD.
	BR GET543	; YUP, ITS HARD.

GET541:	TST @TRYBOD	; LOOK FOR AN EASY WORD.
	BMI GET57	; THIS ONE'S A HARD WORD.
GET543:	MOV TRYPRE,R0
	SUB #KEYS,R0
	ASR R0		; MAKE A VALID PREFIX
	MOV @TRYBOD,R1
	MOV #WORD,R3
	JSR 7,UNPRE	; PUT WORD IN "WORD"
	JSR 7,UNPBOD
	JSR 7,TRYWRD
	BVS GET57	; NOPE, DOESNT WORK.

	JMP GETES2	; YES, RTN SUCCESS.

GET57:	ADD #2,TRYBOD	; GO TO NEXT WORD.
	CMP TRYBOD,#EWORDS
	BEQ GET99		; GIVE UP.

	MOV TRYPRE,R0
	BR GET53

; HERE TO EXECUTE MY PLAY:

MYPLAY:	TST MYFLAG	; AM I PLAYING?
	BNE 1$
	RTS 7		; NOPE.

1$:	JSR 7,GETEST	; GET A TEST WORD
	BVS GIVEUP	; CANT FIND ONE.

	TST TRYNUM	; IN 5-JOT MODE?
	BEQ 6$		; NOPE, NO TRIALS
	CMPB #5,TRIALS+5
	BNE 6$		; NOPE, NOT 5 JOTS.

	MOV #MY0MSG,R0	; IN 5-JOTS MODE,
	JSR 7,@$IOA	; DONT ASK HIM # JOTS.
	MOV #WORD,R3
	JSR 7,PWORD
	MOV #MYXMSG,R0
	JSR 7,@$IOA
	MOV #5,R2	; ASSUMED # OF JOTS
	CLR TRYNUM	; AGN, DONT NEED THE OTHERS.
	ADD #2,TRYBOD	; DONT TRY THE SAME AGN.
	BR MYPLA6
6$:	MOV #MYTMSG,R0
	JSR 7,@$IOA

	MOV #WORD,R3
	JSR 7,PWORD
	MOV #MYJMSG,R0
	JSR 7,@$IOA

MYPLA1:	READCH		; READ # OF JOTS
	MOV (6)+,R0
	CMPB R0,#'0
	BLO MYPLA1
	CMPB R0,#'5
	BHI MYPLA1

	MOV R0,-(6)
	TYPECH

	MOV R0,-(6)	; SAVE IT.
	MOV #MY2MSG,R0
	JSR 7,@$IOA

	MOV (6)+,R0
	SUB #'0,R0
	MOV R0,R2	; # OF JOTS.

	CMP R0,#5	; MIGHT BE A WINNER?
	BNE MYPLA4	; NO CHANCE.

	CLR TRYNUM	; DONT NEED THE OTHER TRIALS, NOW.
	ADD #2,TRYBOD	; DONT REPEAT THE SAME WORD NEXT TIME.

	MOV #MY3MSG,R0	; ASK HIM.
	JSR 7,@$IOA
MYPLA6:	JSR 7,YESNO
	BVS MYPLA4	; NOPE.

; I WON.  CLEAR FLAG (IM NOT PLAYING NOW) AND RTN.

IWIN:	CLR MYFLAG
	TST HSFLAG	; IS HE STILL PLAYING?
	BNE 1$		; YES.
	JMP NGAME	; NO, START A NEW GAME
1$:	MOV #UKEEP,R0	; "DO YOU WANT TO KEEP GUESSING"
	JSR 7,@$IOA
	JSR 7,YESNO
	BVS TELHIM
MYPLA9:	RTS 7

; HERE WHEN I HAVEN'T WON YET:

MYPLA4:	MOV TRYNUM,R1	; PUT IT INTO TRIALS ARRAY
	MUL #6,R1
	ADD #TRIALS,R1
	MOVB WORD,(1)+
	MOVB WORD+1,(1)+
	MOVB WORD+2,(1)+
	MOVB WORD+3,(1)+
	MOVB WORD+4,(1)+
	MOVB R2,(1)+
	INC TRYNUM

	TST STRATG	; ARE WE DOING THE "CHEAT" THING?
	BEQ MYPLA9	; NOPE.

	ASL STRATG	; YES - UPDATE STRATG.
	ASL STRATG
	ASL STRATG
	SUB R2,STRATG
	BR MYPLA9	; THEN RTN.

; HERE WHEN I GIVE UP:

GIVEUP:	TST COMMON	; WERE WE DOING EASY WORDS?
	BNE GIVU1	; NOPE, THIS IS IT.

	INC COMMON	; YES - NOW ROLL OUT THE BIG GUNS
	CLR TRYPRE
	JMP MYPLAY

GIVU1:	MOV #MY4MSG,R0
	JSR 7,@$IOA
	JSR 7,RWORD	; GET HIS WORD

	JSR 7,TRYWRD	; IS IT OK?
	BVS GRUMB	; NOPE, COMPLAIN.

	JSR 7,ISWORD	; IS IT A WORD?
	BVS IWIN	; NOPE.
	BCS GIVU2	; A NEW ONE.

	MOV #MY9MSG,R0	; EH LIED TO ME.
	JSR 7,@$IOA
	JMP QUIT


GIVU2:	MOV #MY5MSG,R0
	JSR 7,@$IOA	; CONGRATULATE HIM.

IMNOT:	CLR MYFLAG	; NOW IM NOT PLAYING.
	TST HSFLAG	; IS HE PLAYING?
	BEQ 9$		; NOPE.
	MOV #UKEEP1,R0	; DOES HE WANT TO BE?
	JSR 7,@$IOA
	JSR 7,YESNO
	BVC 9$
	CLR HSFLAG	; NOW HE'S NOT.
9$:	JMP MYPLA9	; RETURN.

GRUMB:	MOV #MY6MSG,R0	; HE FUCKED UP, COMPLAIN.
	JSR 7,@$IOA
	MOVB 5(3),R0
	ADD #'0,R0
	MOV R0,-(6)	; # JOTS HE GAVE ME
	TYPECH
	MOV #MY7MSG,R0
	JSR 7,@$IOA
	JSR 7,PWORD
	MOV #MY8MSG,R0
	JSR 7,@$IOA

	BR IMNOT	; NOW IM NOT PLAYING.


; HERE WHEN I WON, HE WANTS TO THROW IN THE TOWEL:

TELHIM:	MOV #MYWORD,R0
	JSR 7,@$IOA
	MOV #SECRET,R3
	JSR 7,PWORD	; TELL WHIM WHAT MY WORD WAS.
	MOVB #12,-(6)
	TYPECH

	JMP NGAME

MYWORD:	.ASCIZ "My secret word was "
	.EVEN

; LOTSA MSGS:

MYTMSG:	.ASCIZ "My test word is "
MYJMSG:	.ASCIZ ".  How many jots? "
MY2MSG:	.ASCIZ " jots\/"
MY3MSG:	.ASCIZ "Did I guess your word? "
MY4MSG:	.ASCIZ "I give up.  What is your word? "
MY5MSG:	.ASCIZ "Thats a new one for me.\/"
MY6MSG:	.ASCIZ "\/Grumble, grumble.  you gave me "
MY7MSG:	.ASCIZ " jots on "
MY8MSG:	.ASCIZ "!\/"
MY9MSG:	.ASCIZ "\/Its not NICE to fool Mother Nature!\/"
MY0MSG:	.ASCIZ "is your word "
MYXMSG:	.ASCIZ "? "

	.END .SYMTB
                                                                                                                                                                                                                                                                                                                                                                                                                