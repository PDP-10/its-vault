PLACES TO CHECK WHEN SG-RELATED THINGS CHANGED:
    LISPM; QCOM
    LISPM; COLD    MAKE-INITIAL-STACK-GROUP-STRUCTURE
    LISPM;SGFCTN
    LISPM;SGEX  -- PRETTY MUCH OBSOLETE
    LISPM2;SGDEFS
    LISPM;UCONS   SGENT SGLV ETC

PROPOSED MODS TO STACK-GROUPS:

1)--NOT CLEAR--DEFER THIS
  FLUSH SG-FOLLOWING-STACK-GROUP.. NOT REALLY USED, AND DOUBLE LINKING
    IS PROBABLY BAD FOR GC REASONS.  WHILE IN AWAITING-RETURN STATE,
    STACK-GROUP BEING WAITED FOR CAN RESIDE ON PDL.

--FLUSH SEE FOOTHOLD STUFF
UNWIND-PROTECTion
  SUPPOSE ONE SG WANT TO UNWIND ANOTHER,
INCLUDING RUNNING THE UNWIND-PROTECT  HANDLERS, IF APPROPRIATE.

(*STACK-GROUP-THROW <SG>  <TAG> <FRAMES> )

2) -- USE SG-ERROR-SG FOR THIS I GUESS. ADD %%SG-FOOTHOLD-EXECUTING
  ADD SG-UNWINDING-STACK-GROUP AND %%SG-UNWINDING-MODE.  THIS IS USED
    WHEN THE ERROR HANDLER (FOR EXAMPLE) IS UNWINDING

3)  ADD SG-BOMB-TAG.  NIL OR TAG ASSOCIATED WITH ERROR THIS SG HAS ENCOUNTERED
    ADD SG-ERROR-HANDLING-SG AND  %%SG-PROCESSING-ERROR FLAG TO SAY 
	  THIS SG IS ALREADY HANDLING SOMEONES ERROR AND MUST NOT RECEIVE
	  ANOTHER ERROR CALL JUST NOW.
        SG-INTERRUPT-HANDLING-SG. %%SG-PROCESSING-INTERRUPT LIKEWISE INTERRUPT.
    WAY TO DEBREAK / DEERROR WITHOUT TIMING ERROR.
    ADD SG-FOOTHOLD TO HOLD POINTER TO FOOTHOLD SAVED STATUS WHEN FOOTHOLD EXISTS.
    ADD SG-HISTORY  WHICH IS A PLACE FOR HAIRY SG MUNGING ROUTINES TO ATTEMPT TO
        LEAVE TRACKS FOR DEBUGGING PURPOSES.

RENAME  
    SG-PDL-PDL-POINTER -> SG-REG-PDL-POINTER
    SG-LB-PDL-POINTER -> SG-SPECIAL-PDL-POINTER
    SG-LINEAR-BINDING-ARRAY -> SG-SPECIAL-PDL-ARRAY

ADD
    SG-TRAP-TAG 
    SG-ERROR-HANDLING-SG
    SG-INTERRUPT-HANDLING-SG
    SG-FOOTHOLD-DATA
    SG-RECOVERY-HISTORY

4)  NEED A WAY TO CAUSE SPECIFIED DATA TO APPEAR IN READ-MEMORY-DATA
    WHEN SG RESUMED.  ????  GET ALONG WITHOUT THIS.  MEANS, FOR EXAMPLE,
    THAT WHEN IT BOMBS ON FOO UNBOUND VARIABLE, YOU MUST ACTUALLY SET FOO
    TO 105 IN ORDER TO PROCEED (AS OPPOSED TO USING THE DATA 105 FOR THIS REFERENCE
    AND LEAVING FOO UNBOUND).  NOT CLEAR IF THIS IS A WIN OR NOT.

5)-- FLUSH SEE FOOTHOLD STUFF BELOW
  SG-RELATIVE-EVAL   UNWIND CURRENT STACK-GROUP
		       REWIND GIVEN S.G TO SPECIFIED SPOT
		       DO AN APPLY  (THE "CURRENT" S.G. REMAINS THE ERROR S.G.)
			   ERROR PROTECTION 
			   THROW PROTECTION
		       UN-REWIND GIVEN S.G.
		       WIND-BACK CURRENT S.G.
GENERALIZED *CATCH *THROW (ALSO CAPABLE OF TAKING ARG IN NUMBER OF FRAMES).

6) FINALLY DECIDED TO RETAIN MORE OR LESS THE PRESENT THING.--
   RESHUFFLE SG-STATES THO.  SG-STATE-PROCEEDABLE.  AND STACK-GROUP-CALL
   CAN RETURN TO A SG-STATE-PROCEEDABLE AS WELL AS SG-AWAITING-RETURN.

PASSING CONTROL BETWEEN MAIN AND ERROR STACK-GROUPS
    A) MAIN -> ERROR-HANDLER
        1) PRESENT KLUDGE, SORT OF SIMULATING STACK-GROUP-CALL.  LEAVES
	   MAIN SG IN AWAITING-ERROR-RECOVERY STATE INSTEAD OF AWAITING-RETURN THO
	2) NEW MECHANISM
    B) ERROR-HANDLER -> MAIN  (TO RESUME EXECUTION IN MAIN)
        1) DO STACK-GROUP-RETURN.  HACK UP PRESENT HANDLER TO NOTICE SG NOT IN
	   AWAITING RETURN STATE, JUST RELOAD SG AND RETURN, ETC.

 ALTERNATIVE A1 AND B1 ARE BAD FOR THE FOLLOWING REASONS:
   THE CONFUSE STACK-GROUP-CALL / RETURN WITH ERROR HANDLING.  IN PRINCIPLE
THE ERROR SG MAY WANT TO DO CONVENTIONAL SG CALL/RETURN TYPE STUFF.

7) MAKING A FOOTHOLD IN THE MAIN STACK GROUP.  --MACROCODE TO BE WRITTEN NOW--
   IF IT IS NECESSARY TO DO EVALUATIONS RELATIVE TO THE MAIN STACK GROUP,
A FOOTHOLD MUST BE ESTABLISHED FIRST.  THE FOOTHOLD IS AN EXTRA PDL FRAME
ADDED ONTO THE MAIN SG.  IT SERVES AS A PLACE WITHIN WHICH TO INVOKE THE
NECESSARY FUNCTIONS IN THE PROPER CONTEXT, ETC.  THE FOOTHOLD MAY BE LINKED
(IE THE FRAME DELTAS LINKED IN WITH THE PREVIOUSLY EXISTING FRAMES) OR UNLINKED
(THE FRAME DELTAS ARE 0, AS AT THE TOP OF THE STACK-GROUP).
   VARIOUS STATUS IN THE STACK GROUP IS DESTROYED BY RUNNING IN THE FOOTHOLD;
TO PRESERVE THIS, THERE IS SG-FOOTHOLD WHICH POINTS AT A STRUCTURE WHERE
SUCH STATUS IS SAVED PRIOR TO RUNNING IN THE FOOTHOLD.

8) STACK BLIPS  -IMPLEMENT THIS SOMETIME--
    USED TO IMPLEMENT RELATIVE EVALUATION TO A POINT ON THE STACK
FIGURE OUT EXACT IMPLEMENTATION LATER.

9) GENERALIZED *CATCH AND *THROW   -MICROCODE TO BE HACKED NOW--
    (%THROW TAG VALUE ACTIVE-FRAME-COUNT ACTION)

   ACTIVE FRAME COUNT IS NIL OR THE MAX NUMBER OF ACTIVE FRAMES TO UNWIND.
IF THIS COUNT IS ABOUT TO BE EXCEEDED, THAT FRAME IS RESUMED INSTEAD OF
BEING UNWOUND (BUT SEE ACTION).

   ACTION SPECIFIES WHAT IS TO HAPPEN WHEN THE THROW IS CAUGHT.  NIL IS 
THE USUAL THING OF COMMENCE RUNNING THE CODE THROWN TO.  T SAYS FORCE
A CALL TO THE ERROR STACK GROUP INSTEAD.  

   
10) RECURSIVENESS  OF THE ERROR HANDLER.  THE ERROR STACK-GROUP SHOULD BE
PART OF THE STACK-GROUP, BECAUSE THAT COSTS SO LITTLE.  HOWEVER, SINCE 
WE WILL NOT HAVE A SEPARATE ERROR SG FOR EACH SG, WE STILL MUST FACE THE
PROBLEM OF ONE ERROR HANDLING SG HANDLING ERRORS FOR MANY OTHER SGS.
TWO GENERAL PROBLEMS:
   1) WHAT IF ONE SG GETS AN ERROR, THE WORLD INTERRUPTS, ANOTHER SG IS RESUMED,
AND IT GETS AN ERROR, AND ITS ERROR HANDLER IS THE SAME AS THE FIRST ONE. (IE
THE ERROR HANDLER IS CLOGGED WHEN NEEDED).
   2) PRESUMING THE STACK-GROUP-CALL RETURN MECHANISM IS USED TO PASS
CONTROL BACK TO THE FOOTHOLD, ETC, WE NEED TO HOLD STATE IN THE ERROR HANDLER
ACROSS A RETURN TO THE FOOTHOLD.  AS A RESULT WE MUST PREVENT 
AVOID ANOTHER SG FROM TRYING TO GET ITS ERROR HANDLED WHILE THE
ERROR HANDLER IS EXPECTING A RETURN  FROM THE FOOTHOLD.  IF THIS HAPPENS
IT SHOULD GENERATE AN INTERRUPT TO THE INTERRUPT HANDLING SG.

11) SG-STATE-INVOKE-CALL-ON-RETURN,AN SG-STATE THAT INVOKES A CALL BEING 
SG-RETURN NED TO.  NEED THIS
FOR INVOKING THE FOOTHOLD AND FOR THE RETRYING HACK.

    THREE RESUMING STATES
        SG-STATE-AWAITING-RETURN 
        SG-STATE-INVOKE-CALL-ON-RETURN
        SG-STATE-RESUMABLE 
        
     IN GENERAL, THE SG-STATE HOLDS INFO ON WHAT TO DO TO RESTART THIS FROB.
SG-HISTORY CONTAINS DEBUGGING INFO LEFT AROUND BY HAIRY SG MUNGING ROUTINES.
THE INTENTION IS THAT IF THE SG WINDS UP IN A WEIRD STATE, ONE SHOULD HAVE A
CHANCE OF DETERINING IF IT GOT THERE "ON ITS OWN" OR AS A RESULT OF BEING
"RECOVERED" ETC.