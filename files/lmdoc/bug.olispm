RICH@MIT-AI 07/08/79 20:23:10 Re: cleaning Lisp machine directory
To: (BUG LISPM) at MIT-AI
Believe it or not disk space is running short again.
In running COMMON;FIND JUNK I find a lot of junk
on the various LISP machine directories.  How about
you hackers being a little more conscientious about
running 1 or 2 MM Clean$ on these.  In particular
there are 8 (!) copies of LCADR;UCADR >, each of
which is 133 blocks.

Is there no Clean macro on the Lisp machine?
Maybe there ought to be one soon....

Date: 8 JUL 1979 1414-EDT
From: Doyle at MIT-AI (Jon Doyle)
To: INFO-LISPM at MIT-AI, (BUG ZWEI) at MIT-AI

I would like to propose a change to the Zwei command Evaluate Defun (ctl-top-E) so
that it would not print out the value if the form being evaluated was indeed a defun
(or other DEF-thing), on the assumption that all these things evaluate to their
names.  I am continually irritated by the fact that while I can compile a function
without trouble, I can't evaluate one without causing a time-consuming halt and
screen redisplay.  I am willing to put up with this when I evaluate a non-DEF form,
but in the normal case it is a loss. 

P.S. I would make my own macro to do this, but it looks like the only way to make
this change (without having my own versions of several other editor functions) is to
make a slight modification to ZWEI:COMPILE-INTERVAL so that COMPILE-P takes another
flag value which indicates just evaluation, and not printing.

HIC@MIT-AI 07/07/79 21:29:08
To: (BUG LISPM) at MIT-AI
There should be a function that takes a list of forms and compiles them to core
as if they were read from a file.  The editor has something like this,
but it should be institutionalized


ZVONA@MIT-AI 07/07/79 19:42:40
To: (BUG LISPM) at MIT-AI
(trace apply) is catastrophic. but this is something one might reasonalby want to do --
trace all instances of apply that are explicit in the user program. perhaps there should be
two functions with identical definitions, user:apply and si:apply. then one could
(trace user:apply) and it would do the right thing.

kent@MIT-AI (Sent by ___047@MIT-AI) 07/07/79 15:08:54
To: (BUG LISPM) at MIT-AI
CADR5, while trying to view a directory got it self wedged
with display reading 02647.  a warm boot was then successful.

Date: 6 July 1979 23:51-EDT
From: Howard I. Cannon <HIC at MIT-MC>
Subject: Sending messages to people logged in to lisp machines
To: info-lispm at MIT-AI

As an alternative to (CHAOS:SEND-MSG ...), (QSEND person@host) may be used.
It quotes it's argument, and prompts for a message.  Terminate with Control-Z.


Henry@MIT-AI 07/06/79 23:50:40
To: (BUG LISPM) at MIT-AI
The example in the manual for PROGV doesn't work, but
since it does more error checking it could be considered 
a feature.


Date: 6 JUL 1979 1734-EDT
From: MOON at MIT-MC (David A. Moon)
Subject: Sending messages to people logged in to lisp machines
To: info-lispm at MIT-AI

Several people have asked about this.  From ITS you can send
a message to someone on a Lisp machine with the command
	:lmsend name@host message ^C
  e.g.	:lmsend Moon@CADR2 I need the color display^C
From a lisp machine,
	(chaos:send-msg "person@host")
which will ask you for the message, terminate with ^Z.
This works both to ITS and to other Lisp machines.

These commands only work with AI and MC, since ML and DM
are not on the Chaos net.

KATSU@MIT-AI 07/06/79 15:47:41
To: (BUG LISPM) at MIT-AI
ON CADR 5, (^ 0.0 2) CAUSES LOG 0 ERROR.
   				.... KATSU ....

Date: 6 JUL 1979 1212-EDT
From: Doyle at MIT-AI (Jon Doyle)
To: INFO-LISPM at MIT-AI

I have been gradually writing a number of new keyboard macros to make some
of the things convenient on ITS convenient on the Lisp Machines.  My macros
are all CTL-TOP characters, and can be found as the DEFCOMs in DOYLE;LISPM >.
So far, I have the following macros:
   List my file directory         C-T-F
   List the XGP queue             C-T-X
   List the TTY users             C-T-T
   View my mail                   C-T-M
I suspect that other people may find such commands, or generalizations of
them, more convenient than the (varying amounts of) hair associated with
doing them via the minibuffer.  I would interested in new such macros
if others have written such to make other operations more convenient.
   Jon Doyle

HIC@MIT-MC 07/05/79 00:11:47
To: WELG at MIT-MC
CC: (BUG LISPM) at MIT-MC
We have changed the timing on the memory boards slightly and
have made the mods to CADR3.  Please report furthur lossage in the
manner you have been reporting the previous lossages.


ZVONA@MIT-AI 07/04/79 22:39:47
To: (BUG LISPM) at MIT-AI
is there any reasom why MM Clean has not been implemented for Zwei?

WELG@MIT-AI 07/04/79 14:03:36
To: (BUG LISPM) at MIT-AI
CADR3 has twoice exhibited an error in which the disk light is on solidly, while
the LED display reads 15422 (no decimal point)

WELG@MIT-AI 07/04/79 12:03:44
To: (BUG LISPM) at MIT-AI
main memory parity errors strike CADR3 again!  Cadr3 had another main memory parity error
at 0014.3

WELG@MIT-AI 07/04/79 09:25:18
To: (BUG LISPM) at MIT-AI
While in TYI mode on CAdr3 and while typing a function name, CADR3 entered a state
wherein neither the run nor the disk light was on, yet the machine would not respond to any
typed characters, including a warm boot.  The LED display read 14612 (no decimal point.)

Date: 3 JUL 1979 2209-EDT
From: rms at MIT-AI (Richard M. Stallman)
Sent-by: RG at MIT-AI
To: INFO-LISPM at MIT-AI

:expose, :select, :deexpose and :deselect operations on windows,
as well as a few others, now require that the screen layout be
locked.  This change is so that the window system can survive
together with interrupts.  To lock the layout, put a call to
the macro LOCK-SCREEN-LAYOUT around the code.  Nobody else can
change the exposed or selected windows while the layout is locked.

ZVONA@MIT-AI 07/03/79 19:08:02
To: (BUG LISPM) at MIT-AI
i suspect a bug in the code in lispm2;class >. specifically, evaluating (<- drawing-window
':expose), where drawing-window is bound to a window, looses with "not inside a LOCK-SCREEN-
LAYOUT." this happened for the first time recently, without changing the code any. it runs
fine on LM3 but not on LM1. the code is in reason;ndraw >; the function is draw-init.

AGRE@MIT-AI 07/03/79 17:44:53
To: (BUG LISPM) at MIT-AI
What is a "LOCK-SCREEN-LAYOUT"?  A piece of code which used to work now
blows up with the message:

>>ERROR: Not inside a LOCK-SCREEN-LAYOUT while in (METHOD WINDOW-CLASS SELECT)
 (METHOD WINDOW-WITH-PC-PPR-CLASS SELECT)  <-

This abberation occurs (regularly now) in a piece of code which just creates
a simple window with a piece of paper and tries to :ACTIVATE and then :SELECT it.
It blows up, obviously, on the latter operation.  Have you any suggestions on
what I might do to avoid this?  (It sounds like I am trying to play with the
screen "without permission".)

moon@MIT-AI (Sent by LISPM@MIT-AI) 07/03/79 07:06:31 Re: Randomness that no one can do much about
To: (BUG LISPM) at MIT-AI
CADR2 got "wedged" this evening.  There was no visible response to boot
in the pc lights (0.0000).  It didn't respond to the debugging cable;
probably the Unibus arbitrator was hung.  When I did (dbg-reset) so
that I could look at the state of the machine, that fixed it completely.
The wedgage occured while a user was using in more or less ordinary fashion.

HIC@MIT-MC 07/02/79 13:23:53
To: WELG at MIT-AI, (BUG LISPM) at MIT-AI
I replaced the low 64K in Cadr 3, as it apparently had problems...
It is in Cadr 7, and when we bring that up we should try to track
down the memory problem.  There IS a bad module tag on the
suspect memory.  Let's see if this helps Cadr 3.


WELG@MIT-AI 07/02/79 11:52:40
To: (BUG LISPM) at MIT-AI
Yet another CADR# disk problem, once again at 0014.3

agre@MIT-AI (Sent by DOYLE@MIT-AI) 07/02/79 12:19:40
To: (BUG LISPM) at MIT-AI
CADR-2 is at this moment wedged; it will not cold boot.  I can't find a systems
hacker, but if any of you get to it before somebody destroys the evidence,
I have no buffers, etc. that need saving.     - Phil Agre

WELG@MIT-AI 07/02/79 11:38:26
To: (BUG LISPM) at MIT-AI
Cadr3 has had 2 more disk problems.  The first occurred with the LED display reading
0014.3 and was recoverable by a warm boot.  The second occured at 0536.2 and was not
recoverable by a warm boot.

WELG@MIT-AI 07/02/79 10:49:22
To: (BUG LISPM) at MIT-AI
Cadr-3 seems to have had another disk error.  The machine, while executing a program,
reached a state in which the disk light was permanently lit and a warm boot
had no effect.  The LED display inside the machine registered 15322 (no decimal point.)

WELG@MIT-AI 07/02/79 10:16:28
To: (BUG LISPM) at MIT-AI
Cadr-3 experienced another disk controller error.  This time
the LED display read 0536.2

doyle@MIT-AI (Sent by RG@MIT-AI) 07/02/79 10:10:50
To: (BUG LISPM) at MIT-AI
The functions REM-IF and REM-IF-NOT disappeared in System 14.5.
Where'd they go?

WELG@MIT-AI 07/02/79 09:36:43
To: (BUG LISPM) at MIT-AI
Cadr-3 again seemed to have a disk controller problem.
In this case, the machine was loading a file from the 10
when it stopped and would not respond to a warm boot.
The LED display inside the machine read 1630.2.

WELG@MIT-AI 07/02/79 09:22:41
To: (BUG LISPM) at MIT-AI
Cadr-3 seems to have been smitten again by a disk controller error?? The LED 
display inside the machine read 1333.4.  The machine itself was in a state where
the run light was on solidly and it would not respond to a warm boot.

doyle@MIT-AI (Sent by RG@MIT-AI) 07/02/79 08:41:00
To: (BUG LISPM) at MIT-AI, (BUG ZWEI) at MIT-AI
System 14.5 on LM1 has more bugs.
[1] Formfeed at lisp top level just refreshes the screen, leaving all
the previous contents there, and adding a formfeed character to the screen.

[2] Several times in a row, I had meta-ff in Zwei (com-insert-ff) produce
the error of array adjusting with a floating-point number, namely adjust-array-size
was being called with arguments of "" and 1.0s0.  While trying to figure this out,
I installed an interpreted version of zwei:set-line-length.  Stepping through this
produced no error, and when I then undefun'd this function, the error was gone.
Since this function has been constant over the past month (according to the file
dates) I am confused about what was causing this error.

doyle@MIT-AI (Sent by RG@MIT-AI) 07/02/79 07:53:44
To: (BUG LISPM) at MIT-AI
System 14.5 on LM1 has a broken Supdup.  When I log into AI, and
then break the connection with an alt-l, the system hangs up.
If I then warm boot, I get an invalid stack group state message
about the supdup-type-in process.

MOON@MIT-AI 07/02/79 02:35:02 Re: UCADR status
To: (BUG LISPM) at MIT-AI
UCADR 516 works to the best of my knowledge, but has only been tested for
about 5 minutes and I may have introduced some bugs into the bignum routines.
Also this version has not actually been assembled yet; patches corresponding
to it were tested.

Date: 1 JUL 1979 1916-EDT
From: JLK at MIT-MC (John L. Kulp)
Subject:  Bon Voyage Dinner for BEE
To: SIPB at MIT-MC, MATHLAB at MIT-MC
To: SSCHWARTZ.ARCS AT MIT-MULTICS at MIT-MC
To: PERLMAN AT BBN-TENEXA at MIT-MC
To: YORK.MULTICS AT MIT-MULTICS at MIT-MC
To: GREENBERG.MULTICS AT MIT-MULTICS at MIT-MC
To: MARGULIES.ARCS AT MIT-MULTICS at MIT-MC, JIS at MIT-MC
To: PAE AT MIT-MC at MIT-MC, VISION at MIT-AI, (BUG LISPM) at MIT-AI
To: KEN at MIT-AI, HENRY at MIT-AI, CENT at MIT-AI, ED at MIT-AI


The dinner will begin at 8:00 pm at Colleen's, tomorrow, Monday July 2.
I suggest we gather in the AI playroom around 7:30 pm so we can all
crowd around Bruce and suffocate him with good byes and bad jokes about
the foreign service, etc., and then wander over to Colleen's around 7:50 or so.

The menu will consist of soup (individual choice), Peking Duck, lemon chicken,
beef with pea pods, Ysiang pork, and dry cooked shrimp (and of course, rice).
I am currently planning on 30 people total (it may be hard to fit more but
don't be shy about coming!)  If you haven't let me know if you're coming
yet and you are thinking about it, please let me know by at least noon
tomorrow.  The cost will be about $10 a head.



JIS@MIT-MC 07/01/79 12:05:32
To: (BUG LISPM) at MIT-MC
error in last message. When you compile a buffer the output doesn't always go
in the right package....I AM BURNED OUT

JIS@MIT-AI 07/01/79 11:48:46
To: (BUG LISPM) at MIT-AI
On System 14.0 (on cadr1) ZWEI is screwed up. It doesn't get the right package for
your files all the time (so when you compile your buffer it doesn't go into the right
buffer). Also the FORM key doesn't clear the screen!!!


			-Jeff

RG@MIT-AI 07/01/79 08:51:39
To: (BUG LISPM) at MIT-AI
  Series 14 cold load now installed on CADR1.  Due to perceived
need, this system will be installed on the other machines 
with less than the usual check-out period on CADR1.
(Like in a day or so if no horrible problems are found).
  It has a number of fixes and features, but the main thing is
that hopefully everything is "back together" again.  This is
important since several incompatible changes are planned which
require coordinated updating of the microcode and cold-load.
To this end, it will be a big help if the current source files
are kept in operational form so new systems can be made easily.
Please coordinate with me if you find it necessary to
leave a system file in a broken state.
  Extra special feature!!  In this winning new system, you can
actally print out the property list of PROG (for example) without
causing an error!!
  More documentation as to the other winning features is hopefully
comming.

Date: 29 June 1979 19:58-EDT
From: David A. Moon <MOON at MIT-MC>
To: AGRE at MIT-AI, info-lispm at MIT-AI

    AGRE@MIT-AI 06/28/79 17:42:35
    3. In ZWEI, I would like to vote for the same policy on centering the cursor when
       the screen is redrawn after going one line off the bottom or top of the screen
       that EMACS uses.  In English, when you're at the bottom of the screen and you
       do a control-N, ZWEI redraws the screen so that the cursor is at line 5 (roughly),
       so you have to control-L if you want it nearer the center.  I think that it
       should be (vertically) centered when the screen is redrawn.
Are you sure you really want this?  They way it is is intended to be a feature,
so that it acts more like scrolling.

HIC@MIT-AI 06/29/79 17:24:39
To: (BUG LISPM) at MIT-AI

WHO-CALLS should know about MISC functions in compiled code?

Date: 29 June 1979 17:14-EDT
From: RODENT at MIT-MC
Subject: New Mice
To: BUG-LISPM at MIT-MC

Can't we breed some more?  It doesn't take long, and is FUN!


doyle@MIT-AI (Sent by RG@MIT-AI) 06/29/79 12:06:06
To: (BUG LISPM) at MIT-AI
About that describe bug, by atom I meant symbol.
Numbers and NIL work fine.

DOYLE@MIT-AI (Sent by RG@MIT-AI) 06/29/79 12:04:56
To: (BUG LISPM) at MIT-AI
Describe has the super bug that it loops on any property whose value
is a self-evaluating atom, e.g. T, printing out thousands of lines of the
form (The value of T is T).

Moon@MIT-AI 06/29/79 03:59:50 Re: Cry of despair
To: (BUG LISPM) at MIT-AI
We need more mice!!

Henry@MIT-AI 06/29/79 03:13:30 Re:  special variables
To: (BUG LISPM) at MIT-AI
It seems that when you warm boot, the stack is not unwound properly.
If you warm boot while some special variables are bound, they retain
their values in the local envionrment at the time of the boot rather
than get set back to their global values, as with MacLisp's control-G.
Try:

(DECLARE (SPECIAL SPECIAL))

(SETQ SPECIAL 'GLOBAL-VALUE)

(DEFUN WARM-BOOT-LOSS ()
       (LET ((SPECIAL 'LOCAL-VALUE))
	    ;; Bind the special variable to a local value.
	    ;; Infinite loop requires warm booting out.
	    (DO () (NIL))))

(WARM-BOOT-LOSS)

Then try to warm boot and look at the value of SPECIAL.
It will have its LOCAL-VALUE, not its GLOBAL-VALUE.
This is quite a screw in debugging, since you can never tell what
global variables got accidentally clobbered.


Date: 28 JUN 1979 1849-EDT
From: JLK at MIT-MC (John L. Kulp)
To: MATHLAB at MIT-MC, SIPB at MIT-MC, CARI at MIT-MC, RHB at MIT-MC
To: MEV at MIT-MC, KLH at MIT-MC, CL at MIT-MC, (BUG lispm) at MIT-AI
To: vision at MIT-AI

I would like to organize a good-bye dinner for Bruce Edwards on Monday July 2
at 7:00 pm at Colleen's.  Please let me know ASAP if you can attend so I
can make arrangements.  Please forward this to anyone else who might want
to attend also.  "If you don't come, you'll be drowned in a huge pot of
chuan la chow chow (sp?)"


AGRE@MIT-AI 06/28/79 17:42:35
To: (BUG LISPM) at MIT-AI
1. Why does PROCESS-KILL not exist?  (It's not in LISPM2;PROCES > and DESCRIBE claims
   to know nothing about it.)
2. Is there documentation to be had on the latest version of the TV/Windows stuff,
   e.g., "<-"?
3. In ZWEI, I would like to vote for the same policy on centering the cursor when
   the screen is redrawn after going one line off the bottom or top of the screen
   that EMACS uses.  In English, when you're at the bottom of the screen and you
   do a control-N, ZWEI redraws the screen so that the cursor is at line 5 (roughly),
   so you have to control-L if you want it nearer the center.  I think that it
   should be (vertically) centered when the screen is redrawn.
        
     - Phil Agre

WELG@MIT-AI 06/28/79 08:26:36
To: (BUG LISPM) at MIT-AI
Re: the disk errors on Cadr-3 yesterday.
In both cases, the error message read:
disk read error unit 0 cyl 1 surf 17. sec 3 (or whatever)
status internal-parity-error (read-compare-difference)

Re: the editor becoming wedged.  I did try to find someone around
to look at it the first time it happened.  Unfortunately, I had no luck,
so simply cold booted the machine and tryed again.

Re: the fact that my message(s) of yesterday sounded very annoyed.
My apologies for this fact.  It probably had something to do with the
fact that I had tryed for 1.5 hours to load in my stereo program, plus
some image files, and had been defeated in five different ways.  However,
that is no excuse for sending nasty messages, and I apologize again

MOON@MIT-AI 06/28/79 05:27:30 Re: Xbus terminators
To: (BUG LISPM) at MIT-AI
CC: H at MIT-AI
The assignments of the 12 SIPs on the Xbus terminator are as follows:
	first 6 - data lines except bit 0
	next 4 - address lines and data bit 0
	bottom 2 - control lines

The existing terminators are as follows:
	CADR1,CADR3,CADR5 - all 180/390
	CADR2,CADR4 - 5 180/390, 5 162/260, 1 81/130, 1 162/260
	CADR6 - 5 180/390, 4 162/260, 1 180/390, 2 81/130
	CADR7 - 10 180/390, 1 81/130, 1 180/390

After thinking about it and scoping some signals, I think these
are all brain-damaged.  I propose that the right thing is:
	6 180/390
	4 162/260
	2 81/130
Anyone who disagrees please complain, otherwise we will adopt this.
Penny please add this to the parts lists.  Tom please make sure enough
of each kind get ordered.

I'm not sure if it makes any difference for the address lines to be
162/260 instead of 180/390 but I guess it can't hurt and it's probably
a good idea.

MOON@MIT-MC 06/28/79 00:09:09
To: JIS at MIT-MC, (BUG LISPM) at MIT-MC
    JIS@MIT-MC 06/27/79 21:25:41
    To: (BUG LISPM) at MIT-MC
    
    qc-file expands macros that exist in your current environment when
    compiling a file. This can cause gross lossage when the macro name
    conflicts with the name of a defined function in the input file.
    It may result in the compiler blowing out, or worse in the generation
    of incorrect code. I came across this bug when compiling a file
    that contained calls to a function "SEND" without being aware that
    the default LISPM environment had a "SEND" macro in it.
    	Realizing that this macro expansion may in fact be a feature,
    I strongly recomment that qc-file have a switch that will allow you
    to turn this feature off.
    
    			-Jeff

Maybe the right thing would be for the compiler to warn you if you
have a function in your file being compiled which disagrees with
a function already defined in a way which affects the compiled code,
i.e. if the pre-existing function is a macro or has a different pattern
of argument quotage.  This would go along with the "wrong number of
arguments" warnings that already exist (perhaps if you define a function
with a different number of arguments than pre-existing it should warn you
to ignore number of arguments warnings?)

RMS@MIT-AI 06/27/79 21:45:39
To: (BUG LISPM) at MIT-AI
Maclisp DEFMACRO doesn't use *MACROARG* to hold the form
which makes it incompatible with Lispm DEFMACRO.
It is necessary to use *MACROARG* to tell for certain
whether an optional arg was supplied or not.

JIS@MIT-MC 06/27/79 21:25:41
To: (BUG LISPM) at MIT-MC

qc-file expands macros that exist in your current environment when
compiling a file. This can cause gross lossage when the macro name
conflicts with the name of a defined function in the input file.
It may result in the compiler blowing out, or worse in the generation
of incorrect code. I came across this bug when compiling a file
that contained calls to a function "SEND" without being aware that
the default LISPM environment had a "SEND" macro in it.
	Realizing that this macro expansion may in fact be a feature,
I strongly recomment that qc-file have a switch that will allow you
to turn this feature off.

			-Jeff

WELG@MIT-AI 06/27/79 17:49:57
To: (BUG LISPM) at MIT-AI
yet another disk error at unit 0 cyl 1 surf 17. sec 3.
--- SIGH

WELG@MIT-AI 06/27/79 17:23:58
To: (BUG LISPM) at MIT-AI
 
For the second time today, Cadr-3 managed to wedge itself inside the editor in
an irrecoverable manner.  In this case, a file which had been compiled several
times before, was attempted to be compiled from the buffer.  The machine wedged itself
while trying to do this.

HIC@MIT-AI 06/27/79 17:13:12
To: WELG at MIT-AI
CC: (BUG LISPM) at MIT-AI
PLEASE try to get someone when the machine gets "wedge irretrievably"
so we stand some chance of being able to fix the poor things.

WELG@MIT-AI 06/27/79 17:06:25
To: (BUG LISPM) at MIT-AI

1) there were two disk errors on Cadr-3 on 6/27
    The first was on unit 0 cyl 1 surf 17. sec 3.
    The second was on unit 0 cyl 2 surf 1 sec 10.
    there was one previous disk error on 6/21
      on unit 0 cyl 2 surf 0 sec 8.

2)  Cadr-3 managed to wedge itself irretrievably while
attempting to read a file into the editor.  It had succeeded in
reading the file into the machine, but was only part way through displaying
the file in the editor window when it wedged.  A warm boot had no effect.

3)  Cadr-3 also managed to wedge itself irretrievably while reading
an image file from the 10.

DOYLE@MIT-AI 06/27/79 07:39:38
To: (BUG LISPM) at MIT-AI
I tried turning the watch on then off, and now it displays the correct
time.  Why does the watch that is turned on when one boots not also have
the correct time?

DOYLE@MIT-AI 06/27/79 07:33:49
To: (BUG LISPM) at MIT-AI
I don't think that the bug that LM1 V.11.5 has with the watch-time
is due to ITS having the wrong time.  It has consistently been almost
an hour fast, reporting a date of 6/19 for several days now, in spite
of ITS having the correct time and date.

RMS@MIT-AI 06/27/79 05:10:57
To: (BUG LISPM) at MIT-AI
I fixed a bug in QCP2 (P2ANDOR) concerning compilation of
(AND (OR mumble T) ...)


MOON@MIT-MC 06/27/79 01:11:18
To: DOYLE at MIT-AI
CC: (BUG LISPM) at MIT-MC
    DOYLE@MIT-AI 06/25/79 09:36:12
    To: (BUG LISPM) at MIT-AI
    DESCRIBE has the very annoying misfeature of explicitly stating "I don't know how to describe X"
    for most X's.
Oops, I accidentally broke this while fixing some other things.  Fixed in the source.

Date: 25 June 1979 21:13-EDT
From: Robert W. Kerns <RWK at MIT-MC>
To: INFO-LISPM at MIT-MC
cc: NIL at MIT-MC

    Date: 22 June 1979 03:57-EDT
    From: Richard M. Stallman <RMS at MIT-AI>
    To:   INFO-LISPM at MIT-AI

    Do you think it would be useful to have a function like = for numbers
    but like EQ for non-numbers?
    Do you think it would be good to make = do this?
    If not, what should it be called?
    Interlisp calls it EQP, which I think is uninspired.
I think it would be worthwhile to have such a function, but I don't think it
should be called =, since that would be a gratuitous incompatibility with
MACLISP, and not really suggested by the name = anyway.  How about EQL, sort of
half-way between EQ and EQUAL?


jerryb@MIT-AI 06/25/79 12:07:27 Re:  eq bug
To: (BUG LISPM) at MIT-AI
The compiler doesn't check to see if EQ has two arguments.
The resulting code just returns nil.


DOYLE@MIT-AI 06/25/79 09:36:12
To: (BUG LISPM) at MIT-AI
DESCRIBE has the very annoying misfeature of explicitly stating "I don't know how to describe X"
for most X's.  This means it almost always repeats the information it gives for function
definitions, properties (e.g. zwei:zmacs-source and previous-definition) etc.  If it
isn't going to say anything about something, it shouldn't tell you it isn't going to.
This fills up the screen with garbage (especially in the case of function definitions).

DOYLE@MIT-AI 06/25/79 09:30:04
To: (BUG LISPM) at MIT-AI
Two problems

[1] This morning (6/25) LM1's watch function insists that it is 6/19, and gives
a time almost an hour fast.

[2] I tried to define functions AI and MC as abbreviations for (SUPDUP "AI") etc.
I got the message that USER is trying to illegally define the function AI.
I got a similar message for MC.  But I had checked with (APROPOS "AI") and MC to
find that there are no functions AI or MC anywhere.  Why am I getting this message?
Describe of these atoms also turned up no clues.

BAK@MIT-AI 06/24/79 20:34:39
To: (BUG LISPM) at MIT-AI

Suggestion for yet another # read macro:

#c gobbles up the next s-expression and throws it away.  This is useful for
debugging, allowing you to temporarily remove a piece of code and 
recompile/reevaluate with a minimal amount of typing.


Date: 24 JUN 1979 0011-EDT
From: BEE at MIT-AI (Bruce E. Edwards)
To: INFO-LISPM at MIT-AI, VISION at MIT-AI

I have moved several files from my directory to LMPICT;
The files are:
BEE;RPICT => LMPICT;RPICT
BEE;GREY => LMPICT;GREY
BEE;GWIND => LMPICT;GWIND

MOON@MIT-MC 06/23/79 22:12:44 Re: Bug reports "the run light was on constantly"
To: INFO-LISPM at MIT-MC
These aren't very useful.  If you open the processor door and look at
the lights inside, you can tell if it was a hardware lossage, a microcode
"impossible error" halt, or an actual looping condition.  Get someone
who knows how to show you how to open the door and how to read the
lights; I'll be glad to show you if I'm around.

cent@MIT-AI 06/23/79 21:39:12 Re: membership
To: (BUG LISPM) at MIT-AI
this is to warn all inmates of the bug-LISPM list that i have added
myself to your number, and thus (hopefully) will see those messages
about parts, etc. that have been going the rounds.

Date: 22 JUN 1979 0357-EDT
From: RMS at MIT-AI (Richard M. Stallman)
To: INFO-LISPM at MIT-AI

Do you think it would be useful to have a function like = for numbers
but like EQ for non-numbers?
Do you think it would be good to make = do this?
If not, what should it be called?
Interlisp calls it EQP, which I think is uninspired.

RMS@MIT-AI 06/22/79 03:21:29
To: (BUG LISPM) at MIT-AI
I have made TYPEP of two args work, and made TYPEP of one arg
return useful things for all reasonable data types.
However, before I publish it, a couple of things might want to be changed.

First of all, TYPEP of two args expects the type second
so that thefirst arg can always be the random object.
But SIGNP takes its operation first.  I think it would be better
for TYPEP to take the type first.  Then the arglist would not be
very explanatory of how to use it with one arg.  So maybe TYPEP
of one arg should be just for compatibility, and a new name found
for the one-arg case (it could get rid of the "P").  Do you think
that "TYPE" would be bad?  Or what about "DATA-TYPE" (which right
now returns a symbol starting with DTP- and probably is never used).

Anyway, it all works, but I'm suspicious of the way colons are used in it.
How much do colons in QFCTNS work?  What happens if a symbol which is
in GLOBAL appears in QFCTNS with a colon (say, it is being used as a keyword
by someone who doesn't want to depend on the fact that it's also a function
in global, or in KWDPKG)?  Does this screw the world?  Or is that only
if it's in the cold-load?  The old definition of TYPEP had some things
of this sort; some may still be there.

HIC@MIT-MC 06/21/79 19:10:07
To: KEN at MIT-AI, (BUG LISPM) at MIT-AI
The bug is that DESCRIBE recurses when it sees a symbol.
So, if you (setq foo 'foo) it will ecurse in the same mannr,
trying to describe the contents of foo.  I guess DESCRIBE
should not recurse if it sees a symbol as the value of a symbol or as
the value of a property.


NIS@MIT-AI 06/21/79 14:08:34
To: (BUG LISPM) at MIT-AI
lispmachine 3 (vision) has had several disk errors in the last hour
printing: 
disk read error unit 0, cyl 2, surf 0, sec 8,
status internal-parity-error (read-compare-difference)
...

also it has been flakey in other ways .. hangin with the run light on at various times

keith

KEN@MIT-AI 06/21/79 04:49:36
To: (BUG LISPM) at MIT-AI
typing
(special foo)
(describe 'foo)
causes it to loop printing out "the value of t is t" forever.

KDF@MIT-AI 06/21/79 00:47:47
To: (BUG LISPM) at MIT-AI
   When running a long program, the machine seems to get into a wedged
state, with the run light on constantly, and only a cold boot can
stop it.  Is this due to PDL overflow, GC, or what?  I had GC turned
on.   Any hints to help avoid this lossage will be appreciated...
	Thanks. Ken

WELG@MIT-AI 06/20/79 17:27:20
To: (BUG LISPM) at MIT-AI
There seem to be some problems with using the Escape-q feature on
CAdr-3.  After incanting escape-q, one is periodically interrupted by
error messages indicating problems in establishing a Chaos connection.
Eventually, these errors will wedge the machine, necessitating a cold boot 
(sigh).  any suggestions??

KEN@MIT-AI 06/20/79 03:40:53 Re:  tracing macros
To: (BUG LISPM) at MIT-AI
a macro such as
(defmacro foo (x y) `(list (quote ,x) ,y))
works fine on
(foo bar 2)
but if foo is traced it tries to evaluate bar and errors out

KDF@MIT-AI 06/19/79 23:48:32
To: (BUG LISPM) at MIT-AI
	A bug the machine gets into (with gc-on) is that,
without warning, 
>>ERROR: The object NIL received a METHOD-FOR message, which
went unclaimed.  The rest of the message was (mouse moves)
While in the function SI:UNCLAIMED-MESSAGE <-  (METHOD
 OBJECT-CLASS HANDLER=FOR)
   Sigh.

KDF@MIT-AI 06/19/79 22:55:37
To: (BUG LISPM) at MIT-AI
1)the file for the basic introduction to the editor is missing
   (B to doc gives an error)
2)(ed <function name>) complains that too many arguments were given.
3)Kill Some Buffers and Kill Buffer just beep, and Ctrl-X:K says k is 
not defined.

Date: 19 Jun 1979 1843-PDT
From: Guy Steele <GLS at SU-AI>
Subject: proposed FORMAT hack    
To:   BUG-LISP at MIT-MC, BUG-LISPM at MIT-AI
CC:   GLS at SU-AI, RPG at SU-AI, GJS at MIT-AI    

Let there be some new escape, say U.  It gobbles two arguments;
one is a floating-point number (or is coerced to be one),
and the other is a symbol or string which is the "units" of the number,
which should be a metric word such as "meter" or "liter".
The operator scales the number to be "reasonable", then prints
the number, an appropriate metric prefix, the unit, and "s"
if that is appropriate.  With the colon modifier, abbreviated
prefices are used.  Example:
	(format t ";~:U requires ~U" 4300.0 '|m| 0.0543 "liter")
might print
	";4.3 km requires 54.3 milliliters"
Maybe it's all pretty silly, but maybe from this someone can
invent a more useful theory.



RICH@MIT-AI 06/19/79 14:53:33 Re: zwei
To: (BUG LISPM) at MIT-AI
I tried using Read Tag File in ZWEI and it blew up with
a Lisp error (NIL where array argument expected).  This
happened with both LISP and R tag files.  Is this supposed
to work on regular ITS tag files?

RG@MIT-AI 06/18/79 04:24:43
To: (BUG LISPM) at MIT-AI
 ONE REASON ALLOCATING NUMERIC ARRAYS IS SO SLOW IS THAT MAKE-ARRAY
INITIALIZES THEM TO ZERO WITH A TOTALLY CRUFTY MACROCODED LOOP.
%ALLOCATE-AND-INITIALIZE-ARRAY SHOULD INITIALIZE THE ARRAY TO THE
RIGHT THING TO AVOID THE NEED FOR THIS.

KDF@MIT-AI 06/17/79 22:21:45
To: (BUG LISPM) at MIT-AI
	Two things:
	1)Declare should make FLONUM, FIXNUM, and NOTYPE as noops, 
	  rather than bombing out.
	2) The compiler barfs on kdf;fly >, in the middle of compiling
	fly.  The reason given is that |more than 100 local variable slots in one 
	function|.  This is odd, for it reads into the machine quite nicely
	using load...

BAK@MIT-AI 06/15/79 20:47:29 Re: Compiler messages
To: (BUG LISPM) at MIT-AI

The Lispm compiler should have a feature analogous to Maclisp UNFASL files:
places where the messages are written in MACHINE READABLE format so they
can be processed by other code (to generate declarations, for example).
The following options should probably be available eventually: put them in
an UNQFAS file, put them in a ZWEI buffer, make them available in the Lisp
environment.

Moon@MIT-AI 06/15/79 08:26:20
To: (BUG LISPM) at MIT-AI
In system 9, more processing is broken such that it has the same bug as ITS
has; namely if you are near the bottom of the screen it doesn't more
at the bottom, and it doesn't more just before wiping out the last input
line (as it is supposed to).  I.e. it now only mores at the bottom of the
screen.

bee@MIT-AI (Sent by CWH@MIT-AI) 06/14/79 23:52:49
To: (BUG LISPM) at MIT-AI
ERR used to just throw blindly to an errset. Unfortunately if there wasn't one....
Also it bypassed the error system completely, causing other bad effects. This
has been changed so that ERR does an (ERROR "") i.e. error with no message.
This is about as close as can come simply. Does anyone depend on the old behavior
of this?

RMS@MIT-AI 06/14/79 03:58:56
To: (BUG LISPM) at MIT-AI
CADR 1 thinks it's now 17:17:35 on 6/13/79.
How does one correct such a misapprehension?


MOON@MIT-MC 06/13/79 21:22:06 Re: PRINT hook
To: (BUG LISPM) at MIT-MC
    RMS@MIT-AI 06/12/79 18:40:49
    To: (BUG LISPM) at MIT-AI
    Clearly we should start making things use the value of PRIN1.
    This would add Maclisp compatibility and it is a useful feature anyway.

We should have a hook by which users can supply a function that decides how
certain things get printed.  It should NOT be the way it is in Maclisp,
namely the value of PRIN1 which is only checked by certain routines, not
by all forms of printing.  I will put it in soon if no one else does.

RMS@MIT-AI 06/12/79 18:40:49
To: (BUG LISPM) at MIT-AI
Clearly we should start making things use the value of PRIN1.
This would add Maclisp compatibility and it is a useful feature anyway.

Date: 12 Jun 1979 1404-PDT
From: Guy Steele <GLS at SU-AI>
To:   henry at MIT-AI
CC:   GLS at SU-AI, bug-lisp at MIT-AI, bug-lispm at MIT-AI 

    11-Jun-79  1907        HENRY at MIT-AI (Henry Lieberman)       CASEGO    
    Date: 11 JUN 1979 2209-EDT
    From: HENRY at MIT-AI (Henry Lieberman)
    Subject: CASEGO
    To: GLS at SU-AI

    What you really have in the examples you give to show
    the use of CASEGO is a loop. I think it should be coded
    as such, either by the use of DO or auxiliary functions
    rather than your proposed CASEGO.

    (DEFUN CASEGO-EXAMPLE (THE-FROB)
	   (CASEQ THE-FROB
		  ((BAR) ...)
		  ((FOO))
		  (T (... "I'll assume BAR") (CASEGO-EXAMPLE 'BAR))))

    I think your proposal is like coding a loop using GO, which
    is generally acknowledged to be less winning.

This is true, although what you have written is not semantically
equivalent (though functionally equivalent) in that it re-performs
the dispatch needlessly.  This corresponds to the situation with the
famous Boehm-Jacopini "theorem", which shows that any program can
be made "structured" provided that a number of boolean variables
and redundant tests are introduced.  Also, without LABEL or LABELS
or some such I can't write the above in MacLISP "in place".

A better way around the problem using functions would be just to do
	(CASEQ THE-FROB
	       ((BAR) (BAR-CASE))
	       ((FOO) ...)
	       ...
	       (T (... "assume BAR") (BAR-CASE)))
	...
	(DEFUN BAR-CASE ...)
Again, in MacLISP I can't really write this "in place" and take
advantage of local variables.

I just used the name GO by analogy with the behavior in a PROG.
Actually, I might phrase my request entirely without reference to
GO (because some people dislike GO), and say that I want a construct
CASERETRY such that
	(CASEQ FROB
	       ((FOO) FOO1)
	       ((BAR) BAR1 (CASERETRY HUNOZ))
	       ((BAZ QUUX) BAZQUUX1)
	       (T BARF (CASERETRY 'BAR))
expands into
	(LABELS ((FOO-CASE (LAMBDA () FOO1))
		 (BAR-CASE (LAMBDA () BAR1 (DISPATCH HUNOZ)))
		 (BAZQUUX-CASE (LAMBDA () BAZQUUX1))
		 (DEFAULT-CASE (LAMBDA () BARF (BAR-CASE)))
		 (DISPATCH (LAMBDA (X)
				   (SELECTQ X
					    ((FOO) (FOO-CASE))
					    ((BAR) (BAR-CASE))
					    ((BAZ QUUX) (BAZQUUX-CASE))
					    (T (DEFAULT-CASE))))))
		(DISPATCH FROB))
where SELECTQ represents the more primitive simple-dispatch operation.
Now this uses no GOs, and therefore must be generally acknowledged to be
more winning, right?



JLK@MIT-AI 06/12/79 11:45:21
To: (BUG LISPM) at MIT-AI
If this convention for documenting functions is to be used, the editor should be
made clever about indenting it, e.g.

(DEFUN FOO (...)
    "This is the FOO function.
This line looks ugly because of its indentation"
    .
    .
    .

)

Also, how do you quit out of ^XM in such a way that the text you have composed so
far is not destroyed so you can re-enter it after you have looked at, say, another
edit buffer for a minute.


RG@MIT-AI 06/12/79 11:01:14
To: (BUG LISPM) at MIT-AI
  SUGGESTIONS:
      LOGOUT SHOULD OFFER TO REBOOT THE MACHINE, SO ITS CLEAN FOR
THE NEXT USER.  THE INITIAL STARTUP IMMEDIATELY AFTER A REBOOT
SHOULD PRINT OUT A DISTINCTIVE GREETING, SO THE NEXT USER KNOWS
HE'S WINNING.
      WINDOWS SHOULD HAVE A "BLOW-UP" MODE.  (PAUSE FOR WISECRACK...)
IE A SIMPLE COMMAND SHOULD EXPAND IT TO FULL SCREEN SIZE, WITH ANOTHER
COMMAND AVAILABLE TO CAUSE IT TO RESUME ITS FORMER SIZE AND POSITION.

MOON5@MIT-MC 06/12/79 08:23:19 Re: Ken's complaint about value of prin1
To: ken at MIT-AI
CC: (BUG lispm) at MIT-AI
There is no such feature as the value of PRIN1 in the Lisp machine;
it's not that trace and the error handler are different from everything
else.  Probably there should be some sort of such feature.  In the
meantime you could redefine the function SI:PRINT-OBJECT if you like.

KEN@MIT-AI 06/12/79 01:06:29
To: (BUG LISPM) at MIT-AI
Why doesn't the error handler and trace obey prin1?
I depend quite heavily on the pretty printer (with grind macros)
to turn very long lists into something short and readable and I find it very
difficult to debug because print is used instead.

Date: 11 June 1979 14:47-EDT
From: "Guy L. Steele, Jr." <GLS at MIT-AI>
Subject: Stylistic question
To: MOON at MIT-AI, INFO-LISPM at MIT-AI


    Date: 9 JUN 1979 1138-EDT
    From: Moon at MIT-AI (David A. Moon)

    Currently it is legal to take CAR and CDR of closures and entities,
    and you get various interesting things.  Should it be changed to be
    an error, and functions provided to get the interesting things?
Yes.  Moreover, it seems to me that taking the car or cdr of
an entity should result in sending the entity a CAR or CDR message,
n'est-ce pas?

DOYLE@MIT-AI 06/11/79 12:11:46
To: (BUG LISPM) at MIT-AI
A bug and a question:

Bug: PKG-LOAD works improperly with the :compile option.  The problem is that
it doesn't check the creation time of files to see if the file has been edited,
only the creation date.  I found this out by tracing my problem to the function
COMPILER:COMPILE-FILE-ALIST-MAP in LISPM2;CMANY >.

Question: I have my own version of QC-FILE (called QC in DOYLE;.LISPM (INIT))
which dribbles the compiler output to an unfasl file.  Is there some way I
can get PKG-LOAD to use my compiler so that I can get unfasl files?  Will
binding the function cell of QC-FILE do this without hurting anything?

Thanks,
Jon

MOON@MIT-AI 06/11/79 11:26:51 Re: Your complaints about CADR3
To: RSG at MIT-AI
CC: WELG at MIT-AI, (BUG LISPM) at MIT-AI, HIC at MIT-AI
The reason it wouldn't boot is because you randomly set the current microcode
to a microcode-band that had never had any microcode written on it, and
consequently didn't work.  I'm not sure what message of min you thought
you were doing this according to, but it certainly didn't apply to that
disk.  Please don't change the current band unless you are sure of what you
are doing.

The world or microcode on that disk seems to be broken in an obscure fashion
(this is the disk that was failing on CADR6 before).  HIC said he was going
to put a new system on it but I guess he forgot; I'll try and do it when
I get back from lunch.

WELG@MIT-AI 06/11/79 10:56:11
To: (BUG LISPM) at MIT-AI
Cadr-3 wedged itself because of what I believe is a memory problem.  The machine
would not respond to a cold boot.  AT the time, the led display inside the machine
read 0.0032.

MOON@MIT-AI 06/11/79 09:41:37 Re: Keyboards generating random characters
To: DOYLE at MIT-AI
CC: (BUG LISPM) at MIT-AI
If you type too fast, a second character gets loaded into the shift
register while the first character is being transmitted out of it
and confusion ensues.  The new keyboards which we are getting in
a few weeks contain a micro-processor instead of being very simple-
minded hardware, so this problem shouldn't be able to happen.

Date: 11 JUN 1979 0801-EDT
From: DOYLE at MIT-AI (Jon Doyle)
To: (BUG KNIGHT-KEYBOARDS) at MIT-AI
CC: (BUG LISPM) at MIT-AI

I don't really know who might be interested in this, but I have found that
occasionally when typing normal characters very quickly, somehow some of them
get interpreted as control characters.  This previously had only happened
to me while using E on the 10, but just now it happened to me on LM1.
What scares me is that it wasn't just any old control character that
happened, but WARM BOOT - C-M-C-M-RETURN!  This of course didn't hurt
anything, but I would hate to have cold boot happen because I am typing
too fast.  Does anyone know the source of this problem, and is there
a remedy?
Thanks lots,
Jon

Date: 10 Jun 1979 2243-PDT
From: Guy Steele <GLS at SU-AI>
Subject: CASEQ and SELECTQ  
To:   BUG-LISP at MIT-AI, BUG-LISPM at MIT-AI
CC:   GLS at SU-AI, RPG at SU-AI    

I have long wished for a couple of extra features in CASEQ, and
having them now would sure make coding a lot easier for me.
I propose that CASEQ and SELECTQ mean slightly different things.
SELECTQ would remain as it is now, and CASEQ would mostly remain
the same, except for two added features:
[1] If there is no default (i.e., T or OTHERWISE) clause in a SELECTQ,
    the default value () is produced.  I suggest that a CASEQ instead
    produce some sort of correctable error as the "default default".
    This correctable error for (CASEQ <form> ... <no-T-clause-at-end>)
    ideally would be something like
	(FERROR ':UNSEEN-CASE-KEY		;or maybe UNSEEN-GO-TAG?
		"The CASEQ key ~S produced by <form> does not occur in the CASEQ"
		<value-of-form>)
    If the error is corrected, the CASEQ should be retried with the
    returned value.
    This is a construct I am constantly reconstructing by hand.  It wouldn't
    be too hard to write a macro for CASEQ in terms of SELECTQ to do this.
[2] I wish there were a construct (CASEGO <form>), which would take an
    evaluated argument and effectively jump to the top of the containing
    CASEQ and perform the selection with the specified item.  (I suppose
    there would have to be a CASEQ-NAMED as well to handle a CASEGO to
    an outer CASEQ.  In that case (sorry), CASEGO should take an optional
    unevaluated second argument, as for GO.)
    In the situation where the first argument to CASEGO is a constant,
    then the code can be optimized to go directly to the relevant clause.
    I find that I am using CASEQ a lot, and either the processing for one
    key involves doing a diddle and then doing code identical to that for
    another key; or I want to do my own error handling and write
	(CASEQ <form>
	       ((FOO) ...)
	       ((BAR) ...)
	       ((BAZ) ...)
               ...
	       (T (WARN "you blew it, bunky; I'll assume BAR for now")
		  (CASEGO 'BAR)))
    instead I have to resort to the awkward
	(CASEQ <form>
	       ((FOO) ...)
	       ((BAZ) ...)
	       ...
	       (T (OR (EQ <form> 'BAR)
		      (WARN "you blew it, bunky; I'll assume BAR for now"))
                  ...))	
    which is asymmetrical in the keys, requires me to put the code for BAR
    last, and requires me to write <form> twice.



Date: 10 JUN 1979 1925-EDT
From: RMS at MIT-AI (Richard M. Stallman)
To: INFO-LISPM at MIT-AI

Three new ways of defining functions (and other things)
will appear in the next system:

DEFF is what FSETQ would be if it existed.  By virtue of its name
it acts as a definition for the sake of TAGS and ZWEI.

DEF is for totally arbitrary "definitions".
(DEF defined-thing defining-forms...)
is equivalent to just putting the defining-forms in,
but counts as "the definition of" defined-thing
for TAGS and ZWEI.

DEFVAR is a good way of defining a special variable.
(DEFVAR FOO 'BAR) is equivalent to
(DECLARE (SPECIAL FOO))
(OR (BOUNDP 'FOO) (SETQ FOO 'BAR))
but, again, is remembered as a definition.


MOON5@MIT-AI 06/10/79 19:03:06
To: (BUG LISPM) at MIT-AI
Let's change things so that the value of the SPECIAL property is not
T but the name of the file that made it special (T if it didn't come
from a file.)  This will help track down funny specials provided
the world in which the function with the funny special in it was
compiled is still around.

EAK@MIT-MC 06/10/79 12:46:25
To: (BUG LISPM) at MIT-MC
Btw, Ball was showing a new high performance monitor at the NCC.  Not
quite up to CPT specs, but almost.  Price was only $350.

RMS@MIT-AI 06/10/79 03:09:41
To: (BUG LISPM) at MIT-AI
Does anyone have any idea why SYMBOL is special?

Date: 9 JUN 1979 1138-EDT
From: Moon at MIT-AI (David A. Moon)
Subject: Stylistic question
To: INFO-LISPM at MIT-AI

Currently it is legal to take CAR and CDR of closures and entities,
and you get various interesting things.  Should it be changed to be
an error, and functions provided to get the interesting things?

Moon@MIT-AI 06/09/79 10:31:23 Re: Possible incompatibility
To: (BUG LISPM) at MIT-AI
I have fixed the consistent misspelling of the word "hierarchy" in the
files METH and CLASS

JLK@MIT-MC 06/09/79 10:01:02
To: (BUG lispm) at MIT-AI
r.e. the mouse cursor inside menus, I find menus rather painful to use in their
current form because of the problem of accidently skipping out of the menu in
the vertical direction.  A similar statement applies to the scroll window in
the editor - it is impossible to use the mouse to position the cursor to
columns 1,2, or 3 (i.e. it is too easy to skip into the scroll window without
wanting to).

There are actually two problems:  one is the sensitivity of mouse movements
while in the menu (I find it too sensitive, but I realize this is a function
of differing degrees of experience with the mouse and manual dexterity - I
would generally prefer different scalings of mouse movements inside and
outside of menus); second, is the difficulty of positioning the mouse near
edges of regions where different windows will be invoked.  The edge skipping
problem could be solved either by providing more space between the last menu
item (or the edge of the edit buffer) and the boundary.  If this is undesirable
because it uses valuable screen area, then some virtual potential barrier
should exist across boundaries (this barrier might best be infinite in some
cases, or only sticky in other cases - maybe the concept of a virtually
elastic barrier would help, that is you have to move the mouse well outside
the edit buffer before you get into the scroll window).  In the case of menus,
I think an absolute barrier in the vertical direction, and no barrier in the
horizontal direction would be best (that is you bang into the top and bottom
edges, but can easily skip out horizontally).  An alternative to a barrier
based on position (which may be hard to implement), perhaps a barrier which
required a particular velocity of impact would be better (i.e. if you move
the mouse in a "hard" stroke, it would get out, but if you are moving it
slowly, as you would when trying to position it for some purpose, it wouldn't).

Is it easy to globally set the scaling of mouse movements?  Maybe this is
something that could be customized in one's init file to correspond to
differences in manual dexterity among different people.


Moon@MIT-AI 06/09/79 08:29:42
To: (BUG LISPM) at MIT-AI
I would like it better if call, typed while the selected window is a lisp listener,
did call in that listener, instead of switching back to the top window, destroying
my carefully-set-up screen layout.

Moon@MIT-AI 06/09/79 02:13:44 Re: This is complicated
To: (BUG LISPM) at MIT-AI
When you hit CALL, the stack-group that was running is unwound in the keyboard
process rather than in its own process.  If it had locks locked, an error-check
in PROCESS-UNLOCK goes off spuriously.  I don't think just taking out the
error check is the right solution.

KEN@MIT-AI 06/09/79 01:42:47
To: (BUG LISPM) at MIT-AI
cadr 3 seems to have an old version of defun (actually defun-compatibility)
that causes an error with
(defun foo nil (print 'x))
this happens with any defun of a function of no arguments.
loading lispm2;qcfile causes the problem to go away

Moon@MIT-AI 06/08/79 06:21:50
To: VISION at MIT-AI
CC: (BUG LISPM) at MIT-AI
CADR3 (the Vision Lisp machine) is now running the latest installed software
and microcode.  If you need to revert to the super-old system it was running
before for some reason, evaluate the following:
	(set-current-microload 2)
	(set-current-band 4)
then cold-boot the machine.  Also please send me mail saying that you
did this and why it was necessary.

RMS@MIT-AI 06/08/79 01:51:01
To: (BUG LISPM) at MIT-AI
I have made the mouse blinker visible once again in menus.
If it is not visible, one cannot tell, in moving the mouse,
how close one is to the edge, and so one is likely to move out
of the menu without wanting to.

In addition, the rectangular blinker around the selected item
is now on solidly rather than blinking.


Date: 7 Jun 1979 1531-PDT
From: Guy Steele <GLS at SU-AI>
Subject: Proposed FORMAT features
To:   BUG-LISPM at MIT-AI, BUG-LISP at MIT-AI
CC:   GLS at SU-AI   

(a) Let some modifier, e.g. :, make G be a relative GOTO rather than
    an absolute one.  This is useful for processing some argument twice.
    (Maybe this already exists if * can take a negative arg?!)
(b) Let , _, and  (right, left, and double arrow) also be modifiers.
    If the field width is fixed, then these modifiers cause the stuff
    to be right, left, or center justified within the field.  I have
    often wanted a right-justified ~S or a left-justified ~D.



RMS@MIT-AI 06/07/79 02:39:48
To: (BUG LISPM) at MIT-AI
I have added upper-right-corner and lower-left-corner characters to ARROW,
on beta and epsilon.  ARROW32 is flushed.
FED finally works again, except that the new QFILE no longer has
FILE-LAST-FN1 which the WRITE-FONT-INTO-KST function uses for defaulting.
Can someone who knows what it ought to use please fix this?


RMS@MIT-AI 06/06/79 23:51:40
To: (BUG LISPM) at MIT-AI
It should be an error for a colon to be followed by whitespace or a macro character
(or, at least, a semicolon).
Only "(" and characters that are parts of symbols should be allowed.


MOON@MIT-AI 06/06/79 07:11:56
To: DOYLE at MIT-AI
CC: (BUG LISPM) at MIT-AI
PACKAGE is bound by LOAD, so changing it inside an init file has no effect

DOYLE@MIT-AI 06/06/79 07:01:07
To: (BUG LISPM) at MIT-AI
The last thing my .lispm init file does is to do a PKG-GOTO,
yet this never takes effect.  Does the init file handler do
a PKG-GOTO USER automatically, overriding my command?  Can
this be changed so that my command has effect?  Thanks.

ken&mmcm@MIT-AI (Sent by KEN@MIT-AI) 06/05/79 00:14:33
To: (BUG LISPM) at MIT-AI
cond has ARG as its &QUOTE &REST &SPECIAL argument.  the combination of specialness and
quoteness screws any interpreted function with a component named ARG.  if there is some
good reason why cond's argument is special, it certainly ought to have an improbable
name (further screw in this case is that ARG is in global because of the maclisp
function by that name)
(defun foo (arg)
    (cond ((= arg 1) 'foo)))
is an example of a losing function when run interpreted.

Moon@MIT-AI 06/04/79 02:11:55
To: (BUG LISPM) at MIT-AI
CC: KEN at MIT-AI
I have fixed Ken's bug with #, in the source (of QFASD)

KEN@MIT-AI 06/03/79 23:48:09 Re:  #,
To: (BUG LISPM) at MIT-AI
The following compiles fine in ZWEI but when compiled with qc-file complains NIL undefined
function when foo is run.

(defun foo ()
       (print (quote #,(list 'a 'b))))

Date: 3 June 1979 09:58-EDT
From: David A. Moon <MOON5 at MIT-MC>
Subject: New features
To: info-lispm at MIT-AI

In system 9.1 and microcode 493, which need to be installed together, there are
a few new features:

Peek modes F (file status) and % (microcode meters)

A new choice in the system menu, Split Screen.  You can create any number
of windows of various types, and it will arrange them to fill up the screen
in a reasonable array.  It keeps giving you a menu of window types, and
you click the types you want, Done when you're done, or Quit to flush.

Package prefixes print out better.

It will ask you nicely to log in instead of printing an obnoxious error message.

The keyboard buffer is bigger.  The keyboard buffering mechanism has been
generalized to work for arbitrary input devices, mainly for HIC.
See the file LMIO;UNIBUS.

MOON5@MIT-AI 06/03/79 06:45:07
To: (BUG LISPM) at MIT-AI
Hitting form when you have a supdup window and a lisp window
on the screen and you are in the lisp window smashes the supdup window to blank,
causing whatever program was on the other end to lose.  For instance, it homes up
the Lisp machine cursor but ITS thinks the cursor is in the middle of the window
some place.

Moon@MIT-AI 06/03/79 05:39:36
To: (BUG LISPM) at MIT-AI
LOAD-FILE-ALIST in LFL refers to something called SYSTEM-FILE-ALIST.
There appears to be no such thing.  Does anyone know what this is supposed to be?

MOON@MIT-AI 06/03/79 03:59:04 Re: ATTN RMS,Moon
To: (BUG LISPM) at MIT-AI
At least in version 6, if you create and forget about a lot of windows,
TV-PC-PPR-LIST gets to be very long.  Furthermore the pcs ppr are in
WORKING-STORAGE-AREA, mixed in with other things like bit save arrays.
This then causes lots of page thrashing in TV-NOTE-INPUT, possibly
in other places.  Only pcs ppr for exposed windows should be on this list;
fixing this requires some interaction between windows and TVs.  If the
window system calls TV-DEACTIVATE-PC-PPR, perhaps it should change TV-PC-PPR-LIST.
Alternatively, perhaps that list should be flushed and TV-NOTE-INPUT should
run off of EXPOSED-WINDOWS (doing something appropriate during cold loading
before the window system is initialized.)

In any case, bit save arrays may need to be in their own area.

There is a great deal of page thrashing when I create several windows
at once, amounting to a real time delay of over 5 seconds.  Possibly bit
save arrays should be paged out right after they are created, or not created
until they are needed (I thought this was the case).  I haven't fully investigated
all this thrashing yet, but clearly something is wrong.

rms@MIT-AI (Sent by ___042@MIT-AI) 06/02/79 18:10:14
To: (BUG LISPM) at MIT-AI
The typeout window is broken in a way that screws FED.
Enter FED, do F ARROW32 cr, then you will see that when it
tries to display the whole font it all comes out on the top line.
This used to work; FED has not been changed.

HENRY@MIT-AI (Sent by RG@MIT-AI) 06/02/79 03:56:03
To: (BUG LISPM) at MIT-AI
In the reader, COPY-READTABLE doesn't copy the MACRO-ALIST component
of the readtable. When you try to modify it with a set syntax, 
it loses cause you try to write in read-only memory.

DOYLE@MIT-AI 05/31/79 12:15:55
To: (BUG LISPM) at MIT-AI
M-. has an annoying bug.  I extracted some code from one buffer,
put it in a new buffer, wrote it out, and flushed the first buffer.
Later, I tried to edit a function in the new buffer using M-.,
and it read in the old file again.  I flushed the old buffer again.
The new file I wrote out had a package declaration.  I again tried
to edit the function, this time prefixing the function name with the
package: construct.  It again read in the old file, in spite of
there being no package declaration in the old file.

DOYLE@MIT-AI 05/31/79 08:49:53
To: (BUG LISPM) at MIT-AI
No matter what I do (and I may not know what to do), I can't get
M-. to find my function SUCCESSOR? for me.  Even C-Q fails to make
it take the final ?.  Why should it interpret a ? as a request
for help even in the middle of typing a name?  What can I do to
get it to win?
Jon

Date: 29 MAY 1979 1012-EDT
From: RG at MIT-AI (Richard Greenblatt)
Subject: series 8 cold load
To: INFO-LISPM at MIT-AI

  the series 8 cold load is making its appearance on
various machines.  
--------------------------
[1]  Meters work differently.  **incompatible change**
[2]  LMIO1;XGP is an initial part of the system.  This
     means ESC-Q always available.
[3]  PKG-LOAD, LOAD-FILE-ALIST, and COMPILE-FILE-ALIST
     are available in a form which takes a functional argument.
[4]  The usual accumulation of bug-fixes, etc, installed.
[5]  A tool exists to help track down the source of 
     "symbol appears more than once in the cold load" errors.
     Look in LISPM;COLDF if you ever need to use this.
[6]  The initial facility which allows you to augment the microcode
     incrementally is operational.  Brave pioneers (who expect
     to get arrows in the back) should see RG.

[1] Meters  (ie counts of various events maintained by the
microcode) work differently.  They used to be available
as variables, ONE-Q-FORWARDed to A-Memory.
  Problem was, 24 bits wasnt enough.  Carries into the
data-type field happened,  eventually
crashing the system when the GC looked at the corrupted
data.  In the new scheme, the meters are no longer directly
accessible.  Instead there exists (READ-METER <meter-name>)
and (WRITE-METER <meter-name>).  The meter names are the
same as before, but note they are in the SI: package.
Meters are now a full 32 bits, thus, READ-METER can return
a BIGNUM.  MOON;LMETER has been updated to use the new scheme.

[2] YEA.

[3] SI:PKG-LOAD-MAP, SI:LOAD-FILE-ALIST-MAP, and SI:COMPILE-FILE-ALIST-MAP
exist (as of now, they're not in GLOBAL, in the future they will be).
These all take a functional argument in the first argument position,
followed by arguments as in the base form.  Anytime it is decided to "do"
anything (compile or load a file), the functional argument is called,
with arguments indicating what is to be done.  Its arranged so that if
the functional argument is (FUNCTION FUNCALL), the entire effect is exactly
like the base form.

HIC@MIT-MC 05/28/79 22:34:43
To: INFO-LISPM at MIT-MC
Within the next 24 hours all Lisp Machines will require you to
log in before a file may be opened.  You may log in by saying:

(LOGIN '<your uname>)

When done, you should log out by saying:
(LOGOUT)



Date: 28 MAY 1979 2113-EDT
From: BEE at MIT-AI (Bruce E. Edwards)
To: INFO-LISPM at MIT-AI

Setting the variable SI:INHIBIT-FDEFINE-WARNINGS to T will inhibit the warnings given by
FDEFINE when you redefine a function in another file.

Moon@MIT-AI 05/27/79 22:18:33 Re: 26S10PC-B
To: (BUG LISPM) at MIT-AI
CC: CENT at MIT-AI
My previous message about these parts being losers was a false alarm
caused by a coincidence of bad chips.  Sorry.

Date: 26 May 1979 20:39-EDT
From: "Guy L. Steele, Jr." <GLS at MIT-AI>
Subject: Lisp Machine Documentation
cc: BUG-LISPM at MIT-AI


    Date: 25 May 1979 4:41 pm (Friday)
    From: Fisher at PARC-MAXC

    Guy:

    I am interested in obtaining an up to date description of the Lisp machine
    developed at MIT.  The papers that I have are about 2 years old and the little
    information I have in addition are to several hardware articles that have
    appeared in various commerical datamation-type magazines.
     I would appreciate receiving any information and/or documentation you may be
    able to supply or point me to.
     I am a systems hacker at xerox in southern california.

    Thank you for your help.

    /Bill Fisher

Moon@MIT-AI 05/26/79 00:10:32 Re: Parts problem
To: (BUG LISPM) at MIT-AI
Mixed in with the 26S10's are some parts labelled 26S10PC-B.  These do not work
and are probably not actually the same part.  We need to make sure we don't order
any more of these, and we need to make sure none are in any boards before trying
to debug them.  Also it might be nice to know what this part is supposed to be.

RMS@MIT-AI 05/24/79 20:44:06
To: (BUG LISPM) at MIT-AI
I think that the FUNCALL-FUNCTION problem can be fixed by making that
optimizer apply only to explicit lambdas.

BEE@MIT-AI 05/23/79 09:50:04
To: (BUG LISPM) at MIT-AI
I removed the FUNCALL-FUNCTION and indeed I didn't know what it was for. The case which
is screwed up is:
(APPLY 'FOO (LIST FOO BAR)) when FOO is (DEFUN FOO (&QUOTE &REST L)) <This is a maclisp
FEXPR>
The APPLY is optimized into a non consing (FUNCALL 'FOO FOO BAR) which is fine, as FUNCALL
always evals its arguments. But then that gets turned into (FOO FOO BAR) which then
does not evaluate its arguments, and is WRONG. I am not claiming that APPLY'ing FEXPRS
is wonderfulness, but the evaluator and compiler do different things, and I believe that
the evaluator is sort of right. <People who write code like this should be shot, but what
can you do?>

RMS@MIT-AI 05/23/79 03:13:33
To: (BUG LISPM) at MIT-AI
Take a look at RMS;CWALK, a general purpose code tree walker

RMS@MIT-AI 05/23/79 02:45:41
To: (BUG LISPM) at MIT-AI
Whoever took out the optimizer FUNCALL-FUNCTION didn't understand what it was for.
What it was for was various macros that generate funcalls and are sometimes
fed (FUNCTION (LAMBDA ...)) as arguments by the user.
This optimizer causes those lambdas to open-code.
This problem can be solved in other ways, but did you?

The comments say that the optimization screws functions with unusual
quoting patterns.  Can anyone describe a scenario in which this optizer
would apply and the function might have a weird quoting pattern?

MOON@MIT-MC 05/21/79 00:13:15
To: (BUG LISPM) at MIT-MC
In SUPDUP, a close while reading the greeting,
e.g. due to all network ports in use (the message erroneously says all sockets
in use, which is presumably a TELSER bug) causes it to blow out.

MOON@MIT-MC 05/18/79 18:19:58 Re: DEFMETHOD
To: DOYLE at MIT-AI
CC: (BUG LISPM) at MIT-MC
This is part of the message-passing stuff, which is heavily used by
basic system things, so don't redefine it.  It isn't documented in the
manual partly because it was too recent to get in and partly because
it may not have settled down to its final form.  It's not clear that
it's documented at all, but there might be something on LMDOC; or RG;.

DOYLE@MIT-AI 05/18/79 07:36:10
To: (BUG LISPM) at MIT-AI
Is there some way for QC-FILE to save its warning messages
in a file or buffer or somewhere, similar to UNFASL files?

DOYLE@MIT-AI 05/18/79 07:30:53
To: (BUG LISPM) at MIT-AI
I have a macro called DEFMETHOD, but now I find that there
is a macro in system-internals with the same name.  What
is its purpose?  The only reference I can find to it is
a mention of it in the function GRINDEF.  The manual doesn't
mention it all.  Can I safely redefine it, or does something
depend on "dtp-select-methods", whatever they are?

MOON@MIT-AI 05/18/79 02:19:10 Re: Bug fixes
To: (BUG LISPM) at MIT-AI
UCADR 485, installed on CADR4 and CADR5, fixes some lossages with the GC.

The bug with page alignment of DISK-BUFFER-AREA is fixed in LMIO;DISK but the
fix won't really come into effect until the next cold-load.

Date: 16 MAY 1979 0016-EDT
From: RG at MIT-AI (Richard Greenblatt)
To: INFO-LISPM at MIT-AI

  In the next cold load, recursive FASLOAD will win.
The new thing has been loaded into CADR2, so you can
win the first time loading DANNY;PAINT!!
  Also, STEP has been modified to win on
windows other than the initial-lisp-listener.

ALAN@MIT-AI 05/15/79 20:09:51
To: PAE at MIT-AI
CC: (BUG LISPM) at MIT-AI
There is separate mailing list for bugs in ZWEI I believe.
Try :BUG ZWEI

JERRYB@MIT-AI 05/15/79 09:09:29
To: PAE at MIT-AI, (BUG LISPM) at MIT-AI

    PAE@MIT-AI 05/14/79 01:58:26
    if you have two windows into the same buffer, there's no
    way to tell 'um apart (IE where they are on the screen or
    anything) when you look at your active windows.  Would
    it be useful for that to have some other sort of information,
    like how far you are into the file?  In any case, the way 
    windows onto the same buffer work with regions and everything
    is interesting and pretty straightforward and logical.

A problem with ZWEI is that it doesn't have the --TOP--, --nn%--, --BOT--
messages that EMACS has.  This would appear in the label position of a window
and thus on the active windows list.  However, a more general solution to
where windows are on the screen is needed.

PAE@MIT-AI 05/14/79 05:35:24
To: (BUG LISPM) at MIT-AI
when I was killing my whole buffer of text,i typed
M-<, C-space, M->, C-W. Text was killed fine, but
the kill region line for the last line remained on my screen.

PAE@MIT-AI 05/14/79 01:58:26
To: (BUG LISPM) at MIT-AI
if you have two windows into the same buffer, there's no
way to tell 'um apart (IE where they are on the screen or
anything) when you look at your active windows.  Would
it be useful for that to have some other sort of information,
like how far you are into the file?  In any case, the way 
windows onto the same buffer work with regions and everything
is interesting and pretty straightforward and logical.

RG@MIT-AI 05/12/79 21:34:40
To: (BUG LISPM) at MIT-AI
  SOMETHING IS LEAVING THE FREE POINTER OF SI:DISK-BUFFER-AREA
AT A NON-PAGE-MULTIPLE.  THIS WAS TRUE IN THE OLD LOAD, AND
ALSO IN THE NEW LOAD (6 SERIES).  THIS SHOWS UP WHEN YOU
TRY TO DO SI:LOAD-MCR-FILE.  IT CAN BE GOTTEN AROUND BY
DOING A (MAKE-ARRAY SI:DISK-BUFFER-AREA ART-Q 7).

Date: 12 MAY 1979 0620-EDT
From: RG at MIT-AI (Richard Greenblatt)
To: INFO-LISPM at MIT-AI

  A new cold load is up on CADR1.  No gross
changes of note (hopefully), but lots of
bug fixes, etc.

BEE@MIT-MC 05/11/79 17:32:39
To: (BUG LISPM) at MIT-MC
The Chaos net code does not forward packets destined for someone else. It sends back
a LOS because "No such index exists". Clearly it is not checking to see if it is going
to forward the packet, before checking to see if the index exists.


JLK@MIT-AI 05/11/79 01:40:00
To: (BUG LISPM) at MIT-AI
If you try to draw with TV-DRAW-LINE and accidently use negative coordinates, your
machine drops dead.  Now maybe TV-DRAW-LINE should not have error checking put in
it, but there should be some higher level primitives that fail more gracefully...


glr@MIT-AI (Sent by RWG@MIT-AI) 05/10/79 19:57:23
To: (BUG LISPM) at MIT-AI
(open t ':in) doesn't work
error gives unacceptable path name

DOYLE@MIT-AI 05/09/79 10:35:18
To: (BUG LISPM) at MIT-AI
There seems to be some display bug.  If I have a line in lisp mode as follows:

(defun foo ())

when I un-kill a function body between the last two left parens, it is displayed
as

(defun foo ())
    (body))

Note the extra left paren left in the first line.  If I then go to the end of that
line, rubout deletes both, ctl-d deletes the last paren and the following carriage
return, and ctl-l doen't affect it

PAE@MIT-MC 05/09/79 04:19:00
To: (BUG LISPM) at MIT-MC
I was randomly typing several open parenthesis at the 
initial lisp intereptor and suddenly got a cold reboot.
Could not duplicate the problem.

Date: 5 MAY 1979 1936-EDT
From: BEE at MIT-AI (Bruce E. Edwards)
Sent-by: TK at MIT-AI
To: INFO-LISPM at MIT-AI

In the next world load there will be 4 functions for hardcopying the CPT screen
onto the XGP. There will be two global routines (screen-xgp-hardcopy and
(window-xgp-hardcopy). There are also routines for doing copies in the background.
Also in the default world, esc-q will hardcopy the default screen in the background.
(Those of you using BIM;XGP > or BEE;XGP > for this purpose should load the
one from LMIO1; as it has been improved.)

bee@MIT-AI (Sent by ___014@MIT-AI) 05/04/79 15:21:39
To: (BUG LISPM) at MIT-AI
I think that there should be a per-window flag saying if the window should save
it's bits. It really is a loss that I can't get screen blting turned off for the
top window without losing the feature in SUPDUP (which as far as I can see is the
only place that really seems to need it)

JIS@MIT-AI 05/04/79 04:20:25
To: (BUG LISPM) at MIT-AI
If you rebind a symbol that is used as an area name i.e.
(make-area ':name 'foo)
and then later...
(setq foo something-other-than-the-area-number)
you will cause the gc process to blow out in
(gc-reclaim-oldspace)

It seems to me that gc-reclaim-oldspace should have a better way to reference an area
then to depend on the symbol which is its name, to be bound to the area number. If
this cannot be fixed then a big moby caveat should be attached to make-area documentation
warning that area name symbols cannot be used for anything else...

			-Jeff

DOYLE@MIT-AI 05/03/79 08:15:34
To: (BUG LISPM) at MIT-AI
When I did ctl-x ctl-f DOYLE;.LISPM (INIT), ZWEI created
a buffer called .LISPM (INIT) containing the file
DOYLE;.LISPM >.  Thus, when I did ctl-x ctl-s, it wrote
out the file as DOYLE;.LISPM 1.  Also, somehow, when I
did ctl-x ctl-f twice, it created two such buffers, with
the same name and same (misnamed) file contents.

MMCM@MIT-AI 05/03/79 04:44:27
To: RWK at MIT-MC, (BUG LISPM) at MIT-MC
there is a bit of confusion here:  the C-X M command in ZWEI does not invoke
ZMAIL, but rather a special hack just for sending mail.  ZMAIL isnt loaded in
the default system.


RWK@MIT-MC 05/03/79 04:39:02
To: (BUG LISPM) at MIT-MC
In case you're wondering about that strange message you just got,
it was produced by ZMAIL.  Note that there is no "From" field in
the message.  It did not detect that I wasn't logged in (I cold
booted to get around the bug#1), and it also included the
"--Text follows this line--" line in the message.  I guess ZMAIL
isn't really released yet?

Has anyone given any thought to a QSEND contact on LISPMs?  It would
be nice to be able to send to people on LISPMs, even if the ....
Hmm.  MMCM seems to have just sent me a message...how'd you do it?


@MIT-AI 05/03/79 04:30:33
To: (BUG LISPM) at MIT-AI
--Text follows this line--
On CADR-5, running 5.16
1)  When the machine comes to life after cold booting, there is a window
"BUFFER-1" which seems to be in actuality a phantom.  You get a subscript
out of bounds error if you try to select it with the mouse, and ^X^B doesn't
know about it.

2)  When you do ^XM in ZWEI, directly after entering BUFFER-2 with it's default
size and position on the screen, the new buffer's window is larger than
the BUFFER-2, but doesn't clear the part of the window which has the margin
and label for BUFFER-2.

3)  When you enter ^XM it puts the cursor at the beginning of the buffer instead
of someplace useful like just after the "To: ", like RMAIL and BABYL do.

4)  The window created by ^XM really should be given a memnonic name instead of
"ZWEI-WINDOW-G0015".  Also, it would be nice to be able to enter ZMAIL via
the mouse instead of only via ^XM.  Or is there another way I don't know about?
But the mouse, being obvious, should also be a way.


JIS@MIT-AI 05/03/79 01:02:13
To: (BUG LISPM) at MIT-AI
If you use the mouse to switch to BUFFER-1 after rebooting (CADR 4 & 5 at least
(5.14)) you take a fault in the scheduler's stack group if you have
an NWATCH running the error message is:
-1 bad arg to AP-1 in function SYMEVAL-IN-STACK-GROUP and is from the
function chaos:nwatch-clock-function from kbd-simulated-clock-fcn-list so
current-process is nil when the error occures and the scheduler is stoped.

hic@MIT-MC (Sent by ___047@MIT-MC) 05/01/79 19:27:07
To: INFO-LISPM at MIT-MC
CADR2's disk seems to be somewhat flakey.  Please
try to find me if it dies in a disk wait (left "run light" on).


HIC@MIT-MC 04/30/79 20:30:16
To: (BUG LISPM) at MIT-MC
I'd like to make the machine "obnoxious" to use unless you have logged
in on it.  I haven't decided exactly what to do, but I'll work on it...
The primary reason for this is twofold.  1) Finger now knows about LM's.
2) The file server will know who is logged in so as to set the author field
correctly.

Are there any serious objections??


HIC@MIT-MC 04/29/79 16:27:17
To: WELG at MIT-AI, (BUG LISPM) at MIT-AI


    WELG@MIT-AI 04/29/79 15:17:31
    Cadr-1 seems to now have a curious bug - it refuses to recognize flonums.
    In fact, typing a flonum to Cadr-1 causes the system to wedge itself in some
    sort of run mode, even though the flonum was being passed as an argument to a function.
-----
You ran out of virtual memory on your machine.  It could not create flonums.


WELG@MIT-AI 04/29/79 15:17:31
To: (BUG LISPM) at MIT-AI
Cadr-1 seems to now have a curious bug - it refuses to recognize flonums.
In fact, typing a flonum to Cadr-1 causes the system to wedge itself in some
sort of run mode, even though the flonum was being passed as an argument to a function.

cent @MIT-AI (Sent by CENT@MIT-AI) 04/29/79 10:36:59 Re:  the incomplete
To: (BUG LISPM) at MIT-AI
is now done, turned in, and over with. thank god!

Date: 27 APR 1979 2021-EST
From: GLS at MIT-AI (Guy L. Steele, Jr.)
Subject: External-syntax for number radices
To: INFO-LISPM at MIT-AI

For what it is worth, if I had my free and random choice
in the matter I would still favor the nnn[rr] syntax for
arbitrary-radix numbers, and let [ be a macro character only
when not in the middle of such a number.  However, I am
still willing to settle for the #X/#O compromise
(though both #O and #Q have the bug that the key character
looks like a digit).  Sigh.

MOON5@MIT-AI 04/27/79 02:34:01
To: (BUG LISPM) at MIT-AI
CADR2 is down due to a broken power supply in its disk.
I left a note for Tom Callahan to mention it to Calcomp.  If they don't
fix it tomorrow someone should put another disk on it.

Moon@MIT-AI 04/26/79 23:36:29
To: (BUG LISPM) at MIT-AI
The number of bands on the T-80 packs has been reduced from 7 to 3.
The address space size is 3 times what it was before.  There is also
a small FILE partition for file-system experimentation.

GLR@MIT-AI 04/26/79 12:18:20
To: (BUG LISPM) at MIT-AI
(open ".xgpr.;  ^Q ^Q ^Q ^Q q1 >" '(out))
no longer works.  it opens the file .xgpr.; 1 >

JONL@MIT-MC 04/26/79 10:55:21 Re: External-syntax for number radices
To: INFO-LISPM at MIT-MC
Since the question of an "octal escape" has come up, it might
be well to review the discussion that took place last summer
on this matter for NIL.   Forms such as  123[16] and +9AF[16]
were rejected in favor of #16R123 and #16R+9AF;  which lead to
shorthands like  #O777 for octal and #X9AF for hexadecimal.
Part of the problem with the former style is that the brackets
have been overused for so many purposes, mainly user-implemented
macros, but also the latter style preserves the general left-to-
right parsing simplicity (no "backup" needed).  As for # being
a postfix character, this would make it even more confusing, 
since it has so many, random, prefix uses already.
   

Date: 26 APR 1979 0341-EST
From: RMS at MIT-AI (Richard M. Stallman)
Sent-by: RMS1 at MIT-AI
To: INFO-LISPM at MIT-AI

It will soon be installed that mouse motions of less than two mouse points
will not wake up the mouse process.  This is to avoid the problem of
vibrating mice that keep the mouse process very busy.
It did not appear to me that positioning with the mouse to a given screen
point was harder because of this.  If you can tell when this change
actually becomes installed, let me know.

RMS@MIT-AI (Sent by RMS1@MIT-AI) 04/26/79 03:39:02
To: (BUG LISPM) at MIT-AI
It would be nice if warm booting and then running SUPDUP would
let you reattach your old job automatically.  It doesn't now
because AI takes 90 seconds to figure out that the old one
should be detached.  This would be fixed if the Lisp machine could
send a close.  I hear that this was hard to do, but couldn't it
make a list of the closes that ought to be sent and send them
later when reinitialization of the network is finished?

Date: 26 APR 1979 0123-EST
From: RMS at MIT-AI (Richard M. Stallman)
To: INFO-LISPM at MIT-AI

Soon, processes belonging to windows should be runnable as long
as the windows are active, whether or not they are exposed.
If some type of window does output in a way that does not go
through pieces of paper, this may cause them to be able to output
when not exposed.  These will have to be fixed by making sure that
those types of windows always somehow wait for the window to
be exposed whenever they are about to do output.

Date: 25 APR 1979 0441-EST
From: moon at MIT-AI (David A. Moon)
Sent-by: ___040 at MIT-AI
Subject: Screen saving back experimentally
To: INFO-LISPM at MIT-AI

System 5.10 CC, installed on CADR4 only, has screen saving, using the new
multiple-page-at-a-time paging.  Let me know of any problems (I expect
there are some minor ones.)  I wouldn't recommend anyone trying to install
this on other machines as things have to be loaded in the right order (until
a new world load is made.)  si:inhibit-all-screen-blting-flag is the flag
which controls it if you should want to turn it off.

Date: 25 APR 1979 0431-EST
From: rms at MIT-AI (Richard M. Stallman)
Sent-by: ___031 at MIT-AI
To: INFO-LISPM at MIT-AI

A new function EH has been written which runs the error
handler looking at a specified stack group.
Pass it a stack group, a process, or anything that accepts
the message :PROCESS and returns a process.
You can't throw or return but you can eval things.
C-Z will return from the call to EH not affecting the
stack group being examined.
If you supply a process (directly or indirectly)
then it is arrested while you are looking at it.

Also, there are some new analysis functions:
EH-ARG-NAME and EH-LOCAL-NAME can be used to get the
name of the n'th arg or local of a function.
They know all imaginable ways to come up with the answer.
EH-NUMBER-OF-SPREAD-ARGS takes an SG and frame offset
and returns how many spread args the frame has.
EH-ARG-VALUE returns the value in a given sg and frame
of the n'th spread arg, and whether it exists.
EH-REST-ARG-VALUE returns the value of the rest arg
and whether it exists.  These last three are intended
to know about all funny sorts of frames, including
those causing wrong-number-of-arguments errors, and return
intelligent and mutually consistent values.

Date: 24 APR 1979 2139-EST
From: MOON5 at MIT-MC (David A. Moon)
Subject: OCTAL ESCAPE
To: INFO-LISPM at MIT-AI

Postfix # might be more consistent than prefix #,
and it's equally as easy to implement in the lisp machine.
For maclisp, it's problematical.  It's also more in the
right place for type-in, putting it after the digits.

Date: 24 APR 1979 2055-EST
From: BEE at MIT-AI (Bruce E. Edwards)
To: INFO-LISPM at MIT-AI

In preparation for changing the default input and output base to 10, we must come up
with an octal escape. It hopefully should be fairly short and easy to type.
One possibility is to use prefix # for it. Or #100 is 64 no matter what the input
base is. Suggestions are welcome. (We would prefer not to use another macro character
if possible).

RG@MIT-AI 04/24/79 06:42:06
To: (BUG LISPM) at MIT-AI
 The bug that showed up in STACK-GROUP-RETURN is fixed in
UCADR 480.  It got broken when the debugging loop stuff
was put in. 
 WORM is restored to its former state of glory!
WORMs forever!

RMS@MIT-AI 04/24/79 02:32:41
To: (BUG LISPM) at MIT-AI
The initial lisp listener is just a lisp listener.
If you make it smaller you will be glad it has a label.

hic@MIT-MC (Sent by ___022@MIT-MC) 04/24/79 02:30:06
To: (BUG LISPM) at MIT-MC
BTW, re last message, not any clikcing on the menu presets the process, only
when the window gets deexposed and reexposed
This happens, for example, when you expose the menu over the window in question.  That's why I was getting faked out.


HIC@MIT-MC 04/24/79 02:26:20
To: (BUG LISPM) at MIT-MC
Processes seem to get randomly preset when you hack with menus.

For example, create a lisp listener, do (DO () (()) (TYO 101)),
when it ***more**'s, do something with the system menu, and watch <CR>'s
get printed in the lisp listener, and the DO mysteriously disappears.

Also, more'ing seems to happen in the wrong place (i.e. it does not
seem to more in the middle of the screen to preserve the oldest unread text).


mmcm@MIT-AI (Sent by ___037@MIT-AI) 04/24/79 02:15:15 Re: more on last
To: (BUG LISPM) at MIT-AI
the lisp listener seems to clear itself if it doesnt take up the full screen.

the initial-lisp-listener label doesnt seem necessary.

mmcm@MIT-MC (Sent by ___026@MIT-MC) 04/24/79 02:11:50
To: (BUG LISPM) at MIT-MC
trying to bring up the editor menu does various different bad things, such as
funcalling NIL sometimes, bringing up and then taking down the editor and the
system menu (in that order).

the top window doesnt clear itself any more.  or wasnt it ever supposed to?


i'd edit this message, but howard continued my supdup

MMCM@MIT-AI 04/24/79 02:06:06
To: (BUG LISPM) at MIT-AI
continuing a (supdup) (ie after a [BREAK][CALL]) gets into a completely screwed state

Date: 24 APR 1979 0030-EST
From: Moon at MIT-AI (David A. Moon)
Subject: Sending mail from the Lisp machine
To: INFO-LISPM at MIT-AI

In the next installation of the editor, the ^XM command will exist.
You type in your mail in much the same format as with the ^XM command
in Emacs or the M command in RMAIL, and send it with control-altmode.
This doesn't have some of the fancier features, but it should suffice
for sending of mail.

Date: 23 April 1979 22:18-EST
From: Howard I. Cannon <HIC at MIT-MC>
Subject: (PRINT x) returns T
To: JONL at MIT-MC, moon at MIT-AI
cc: BUG-LISPM at MIT-MC, BUG-LISP at MIT-MC, glr at MIT-AI


    Date: 23 APR 1979 2208-EST
    From: JONL at MIT-MC (Jon L White)

    What was the idea you had in mind when you said "frivolous"?
    Won't the lispm incompatibility make code difficult to translate,
    e.g.  (AND (TEST X) (PRINC '|Here, X = |) (PRINT X) (PRINC '|(lbs)|))
    since the last PRINC wouldn't be done when X is null.
------
Yes, this is an incompatibility, but we believe that code like this is
cretinous anyway (yesh, this is glossing over the issue).  The utility
of having PRINT return its arg is greater than the utility of supporting
such losing code.


Date: 23 APR 1979 2208-EST
From: JONL at MIT-MC (Jon L White)
Subject: (PRINT x) returns T
To: moon at MIT-AI
CC: (BUG LISPM) at MIT-MC, (BUG LISP) at MIT-MC, glr at MIT-AI

What was the idea you had in mind when you said "frivolous"?
Won't the lispm incompatibility make code difficult to translate,
e.g.  (AND (TEST X) (PRINC '|Here, X = |) (PRINT X) (PRINC '|(lbs)|))
since the last PRINC wouldn't be done when X is null.


H@MIT-AI 04/23/79 16:38:05
To: (BUG LISPM) at MIT-AI
STACK-GROUP=RETURN is broken.  That is why WORM6 loses.

HIC@MIT-MC 04/22/79 16:15:07
To: (BUG LISPM) at MIT-MC
Due to recent problems with missing tools (in this instance, wirewrap guns),
I wish to request that 936 be kept locked AT ALL TIMES.  Your cooperation
in this matter is expected and appreciated.


HENRY@MIT-AI 04/21/79 21:33:34
To: (BUG LISPM) at MIT-AI
If you try to do a Grind S Expression from Zwei of something that's longer
than a line, say an object with a lot of instance variables, it causes 
an error that there was a throw to "GRIND-DOESNT-FIT-CATCH" and no catch. 

I'd suggest there by a grind format for objects printed "#< ... >" which
aligned the variable names and values SETQ style if it didn't fit on one line.
It would also be nice if the reader could read those in if you typed them,
it would just have to send a NEW message to the class name with values it read in.

I think the intention of the ERROR-OUTPUT stream is that error messages should
be printed on it, but all the code in the error handler does (FORMAT T ...) rather
than (FORMAT ERROR-OUTPUT...). This should be simple to change. 


Date: 21 APR 1979 1727-EST
From: RG at MIT-AI (Richard Greenblatt)
To: INFO-LISPM at MIT-AI

  A new cold load (system 5 series) is installed on CADR1 and 2.
It is experimental!  Since a extra Q has been added to the
stack-group representation, please do not recompile any system files
with the earlier systems.
  (some of the) notable changes are:
BASE and IBASE exist file properties.  You can actually assure your
file will be read in with the right radix!!!!  If the properties appear,
a BINDing sort of operation with the scope of the file occurs during
readin, compilation, and operations from ZWEI buffers.
  also an EVALUATOR file property is defined.  If set, it causes 
the ZWEI command cntrl-top-e (and similar) to use it instead of EVAL-PRINT.
  If a DEFCLASS is done when the class is already defined, it is a
no-op if the instance variables of the new class would be the same
as the existing class.  This avoids "losing" all the methods on
existing class.  If instance variables have been added or deleted,
the old class becomes "detached" (altho still operational) as before.

moon@MIT-MC (Sent by ___037@MIT-MC) 04/20/79 21:28:21 Re: error handler bug
To: (BUG LISPM) at MIT-MC
In the system on CADR2 (3.5), hitting control-C from an undefined function error
after defining the function (e.g. by loading the missing file) destroys the state
of the stack group

Date: 19 APR 1979 1912-EST
From: MOON5 at MIT-AI (David A. Moon)
Subject: On-line documentation
To: INFO-LISPM at MIT-AI

A new system for on-line documentation of functions will appear soon.  Since it
is upward-compatible, you can start documenting things now.

If the first form in the body of a function is a string, and it is not the only
form in that body, then it is the documentation for the function.  As with Emacs
documentation, the first line should be able to stand alone as brief documentation.
Note that both the interpreter and the compiler will essentially ignore this
string.  You can also document any symbol by giving it a :DOCUMENTATION property
which is a string; this is mainly intended for microcode functions which have no
other place to remember their documentation.

The function FUNCTION-DOCUMENTATION, given any kind of function or function-specifier
(e.g. a "method"), will return NIL or the documentation string.  The control-top-D
command in the editor asks you for a function name and prints the first line
of its documentation at the bottom of the screen.  The meta-top-D command prints
the argument list and the entirety of the documentation at the top of the screen.
Currently you can't see this and edit at the same time, but that wil be fixed shortly.

No system functions have on-line documentation yet, but hopefully those that
need it will get some over the next couple of weeks.

Eventually all the editor self-documentation commands will be extended to the
full Lisp world, and eventually there will be a command which constructs a manual
out of the on-line documentation for a set of functions.

glr@MIT-AI (Sent by ___016@MIT-AI) 04/18/79 17:12:47
To: (BUG LISPM) at MIT-AI
(eval-when () . body)

wins with EVAL, chokes on COMPILE

HIC@MIT-MC 04/18/79 12:17:44
To: INFO-LISPM at MIT-MC
Now that FINGER knows about the Lisp Machines, please make it a habit
to log in when you use the machine, and to log out or reboot when you are done.


Date: 17 APR 1979 2329-EST
From: HENRY at MIT-AI (Henry Lieberman)
To: INFO-LISPM at MIT-AI

Why not have the instance variables in an object 
initialized unbound, instead of to NIL? I like to 
use the BORN method to specify default values of 
instance variables, but then the user couldn't override
them when sending the NEW message, since BORN happens afterward.
If they were unbound to start, I could make a BOUNDP check. 
It also might make it easier to catch errors of using a 
variable without initializing it, just like top level variables 
initially being unbound.

Date: 17 APR 1979 0942-EST
From: hic at MIT-AI (Howard I. Cannon)
Sent-by: ___056 at MIT-AI
To: INFO-LISPM at MIT-AI

There was a truly fine picture on the color display.  I saved it
in HIC;FLOWER BUG.  The owner should claim it.

RMS@MIT-AI 04/17/79 05:31:08
To: (BUG LISPM) at MIT-AI
Can someone tell me what LMIO1;LTVWRM is?

RMS@MIT-AI 04/17/79 05:24:53
To: (BUG LISPM) at MIT-AI
Paned windows are implemented.
Read LISPM2;FRAME >

MOON@MIT-MC 04/16/79 21:01:43 Re: Obnoxious function redefinition messages
To: (BUG LISPM) at MIT-AI
I fixed it (in the source) so that if you answer P it proceeds without hassling
you about that particular pair of files any more.  As requested by RMS.

Date: 16 APR 1979 1349-EST
From: MOON at MIT-MC (David A. Moon)
To: GLR at MIT-AI
CC: (BUG LISPM) at MIT-MC, (BUG LISP) at MIT-MC

    GLR@MIT-AI 04/15/79 14:53:06
    To: (BUG LISPM) at MIT-AI
    In the LISPM, (print 'FOO)  returns FOO
    In Maclisp, it returns T

In my opinion this is a bug in Maclisp.  Maclisp's print used to return
its argument on the 10, and still does on Multics.  It was changed for
frivolous reasons.

RMS@MIT-AI 04/16/79 05:11:20
To: (BUG LISPM) at MIT-AI
The new feature of detecting multiple function definitions
in different files has a problem: the default definitions of
operations to read and write the variables of a class get counted,
so that if a defclass is in one file and another file overrides
the definition of one of those operations, it complains.

Also, if you make a copy of a file on another dir to make changes,
loading in that copy causes infinite questions.  I think the right
solution for this is to have an additional alternative besides
"ok" and "not ok" which says "this file is really the same as that one".
Then, it would be ok for this file to redefine any function in that one
with no questions asked.
This answer wouldn't require the user to specify the files
since the system knows the names of both of them already.

For the defclass, if it isn't convenient to mark them as "default definitions"
that are ok to redefine, then another possibility is to have something that
can be put in the file to say "I know I about to redefine soimething, so
don't complain."  If that isn't possible, it would be better to avoid remembering
the default accessor methods than to do what is done now.

GLR@MIT-AI 04/15/79 14:53:06
To: (BUG LISPM) at MIT-AI
In the LISPM, (print 'FOO)  returns FOO
In Maclisp, it returns T

BEE@MIT-AI (Sent by BEE0@MIT-AI) 04/15/79 13:39:38
To: (BUG LISPM) at MIT-AI
If you try to do assemblies of the micro code on the lispm now, it times out the 
error table conncection about 1/2 the time. This may want to be changed, so that
it conses it up, and then writes the error table at the end of the assembly.

ED@MIT-MC 04/12/79 19:24:15
To: (BUG LISPM) at MIT-MC
LISPM SUPDUP apparently has a timing screw whereby if the user types
<BREAK>L at the same time as the foreign host closes the connection,
SUPDUP decides that illegal opcodes and so forth are happening,
which causes the error handler to be called.

Date: 12 APR 1979 1051-EST
From: JONL at MIT-MC (Jon L White)
Subject: Your note of 4/12/79 on EVAL-WHEN
To: RWK at MIT-MC
CC: (BUG LISP) at MIT-MC, (BUG LISPM) at MIT-MC

When compiling a file, the definition of EVAL-WHEN is
changed, so that
(EVAL-WHEN (COMPILE) (LOAD '|mumble|))
will actually happen (without this change, EVAL-WHEN only
evaluates when EVAL is in the condition list).  Unless there 
is some switch, currently lacking, there is no way for
LOAD and/or MAKLAP to distinguish the state in which the
EVAL-WHEN above happens, and that in which a form from the
file |mumble|  happens.  Does this imply that EVAL-WHEN is
only fully-definable at toplevel?  What does LISPM do
with respect to this problem?


MOON@MIT-MC 04/12/79 05:01:36 Re: Bugs in the bootstrap PROM
To: (BUG LISPM) at MIT-MC
It doesn't reset the disk unit number to zero before waiting for the disk to
come on-line.  Consequently if another disk should be selected that doesn't
exist, you have to power the machine off before you can boot it.

It should do an I/O reset; it doesn't currently.  This should fix the above
bug although that will require a change to the disk control.

Date: 10 APR 1979 2245-EST
From: gls at MIT-MC (Guy L. Steele, Jr.)
Sent-by: RZ at MIT-MC
Subject: FORMAT
To: (BUG LISP) at MIT-MC
CC: (BUG lispm) at MIT-AI

Unfortunately FORMAT has a gross incompatibility between LISPM
and MacLISP, namely the treatment of T as the stream argument.
In MacLISP NEWIO, T has standardly denoted the value of TYO
(i.e. the tty) (subject to ^W), while NIL has meant the "standard
output" (i.e. TYO subject to ^W plus OUTFILES subject to ^R).
Now to FORMAT, NIL means "make a string", so that can't be used
as in NEWIO.  So on LISPM T means "standard output".

My suggestion is that the MacLISP FORMAT be changed so that T
is specially recoggnized and caused to mean "standard output"
(by being changed to a NIL file specification).  The theory is
that most programs could then be mmade compatible between LISPM
and MacLISP.  If it is necessary in MacLISP to get the effect
of T as a file specification, (T) can be used instead.


MOON@MIT-AI 04/10/79 06:04:27
To: (BUG LISPM) at MIT-AI
New file system is installed on CADR1 only.  This should be tested by someone
less burnt than me and installed on the other machines as soon as possible.
There are a number of QFASL files out there which won't work in the old system.
Various efficiency improvements made possible by flushing the old file stuff
have not yet been made.  This system is almost completely free of the 10/11
interface (yeah!)

moon@MIT-AI (Sent by ___014@MIT-AI) 04/10/79 05:13:29 Re: Disappearing prints
To: (BUG LISPM) at MIT-AI
When the latest batch of boards was sent out, I made complete new print sets
for each board type.  Every single one of those prints has wandered off.
Please return them to 936.  These are DISK, MEM, BUSINT, and maybe LMTV prints.

HIC@MIT-AI (Sent by MOON@MIT-AI) 04/09/79 23:09:41
To: (BUG LISPM) at MIT-AI
The LMIO1; directory has been created and a number of things moved
to it from LMIO;

HIC@MIT-MC 04/09/79 14:41:28 Re: cadr5
To: (BUG LISPM) at MIT-MC
The logic analyzer on CADR5 is waiting for inexplicable M-memory parity errors (!).
If you don't use the info on it, PLEASE reset it.  Also, reset it when you
see it triggered unless someone is looking at the machine.,  The info on it
is only of use when it is found instantly after the error.


JERRYB@MIT-AI 04/09/79 10:59:38 Re: Treatment of <form>
To: (BUG LISPM) at MIT-AI
Different windows treat <form> differently, within ZWEI a <form> does a complete
redisplay of all windows on the screen while within a lisp-listener <form> just
clears the lisp-listener window.  Seems as if they should do the same thing.

Date: 9 APR 1979 1020-EST
From: BEE at MIT-AI (Bruce E. Edwards)
To: INFO-LISPM at MIT-AI

EINE will probably be flushed in the next release of the LM software. Is there anyone
out there using it?

CENT@MIT-AI 04/08/79 08:40:45
To: (BUG LISPM) at MIT-AI
people are requested to please NOT (repeat, NOT) stuff boards , especially
when burned out. i realize it does give you something to do and it does
leave me a little less stuffing, but this morning i had to pull out about
20 74S244s to replace them with 20 74LS244s, as well as turn around a
backwards dip, which some burned out person accidently stuffed that way.

HIC@MIT-MC 04/08/79 02:01:24
To: RMS at MIT-AI, (BUG LISPM) at MIT-AI

    RMS@MIT-AI (Sent by ___026@MIT-AI) 04/08/79 01:35:56
    As the one who made PACKAGE be set to user by warm booting,
    I now think it's a loss.  Do you agree?
-----
Yes, if package is a valid package, it should not be changed.


RMS@MIT-AI (Sent by ___026@MIT-AI) 04/08/79 01:35:56
To: (BUG LISPM) at MIT-AI
As the one who made PACKAGE be set to user by warm booting,
I now think it's a loss.  Do you agree?

RMS@MIT-AI (Sent by ___020@MIT-AI) 04/08/79 01:19:27
To: (BUG LISPM) at MIT-AI
I have created a new operation :CLEAR-SCREEN for the TV stream
and the typeout window stream.
It actually clears just the pc ppr for those two streams.
This should make it possible for more things not to depends
on having pcs or ppr instead of streams.

BEE@MIT-AI 04/07/79 11:54:33
To: (BUG LISPM) at MIT-AI
In format ~n& now performs n-1 newlines if at the start of a line, otherwise
performs n newlines.

HIC@MIT-MC 04/07/79 10:54:37
To: (BUG LISPM) at MIT-MC
I'd like to see the string searchers take another arg which is how many times to search.
I am constantly having to write many nested STRING-SEARCH-CHARS because this doe snot exist.
ANy objections to this?


RMS@MIT-AI 04/07/79 04:45:55
To: (BUG LISPM) at MIT-AI
I see that the FUNCTION-ENTRY ucode error type has a suberror
"an argument of bad data type".  Is this what was supposed to
happen for &DT-LIST etc. keywords, and therefore unimplemented?
Shouldn't those things generate ARGTYP errors instead assuming
that they are ever implemented?

RMS@MIT-AI 04/07/79 04:05:06
To: (BUG LISPM) at MIT-AI
Why is there an error type NUMBER-ARRAY-NOT-ALLOWED?
Couldn't that be turned into an ARGTYP error?

RMS@MIT-AI 04/07/79 02:54:35
To: (BUG LISPM) at MIT-AI
Wouldn't it be an improvement for %P-CONTENTS-AS-LOCATIVE
to return a fixnum instead if the contents were a non-pointer type?
This operation is useful, and would seem to be unable to break
anything that obeys storage conventions.
An -OFFSET version would also be useful.

MMCM@MIT-AI 04/06/79 16:39:05
To: RMS at MIT-AI, (BUG LISPM) at MIT-AI
    Date: 04/06/79 04:58:58
    From: RMS at MIT-AI

    On CADR 1, I find that View File in ZWEI prints everything
    on the first line of the screen.  I suspect the typeout window is broken.
this has been fixed for some time.  note when dumping out a new ZWEI it is usually
a good idea to load LISPM2;TYPWIN if it has changed.

BEE@MIT-AI 04/06/79 13:58:28
To: (BUG LISPM) at MIT-AI
I think that it is a bug that defstruct does not allocate the named-structure slot
automatically when you do a (defstruct (foo (named-structure foobar)) <your elements>)
If you do this, the first of your element is the 0th element, so therefore
conflicts with the named-structure-symbol.

HIC@MIT-MC 04/06/79 12:24:31
To: RMS at MIT-AI, (BUG LISPM) at MIT-AI
Did I say otrher than closed??  I meant, other than OPEN


HIC@MIT-MC 04/06/79 12:24:16
To: RMS at MIT-AI, (BUG LISPM) at MIT-AI

    RMS@MIT-AI 04/06/79 05:11:02
    Why is it that the chaos net leaves all connections open across
    a warm boot in a garbage state?
    Is this hard to fix?
------
This is fixed in the source, and has been for a while.  It now puts the connections
into a state other than closed.


bee@MIT-AI (Sent by ___066@MIT-AI) 04/06/79 11:39:58
To: (BUG LISPM) at MIT-AI
(fix <huge floating point number>) loses.

RMS@MIT-AI (Sent by ___002@MIT-AI) 04/06/79 05:50:25
To: (BUG LISPM) at MIT-AI
In CADR, printout of DISPATCH instructions is screwed in that
some of the names of fields are printed as well as the contents.
Try opening QSQARY 3 to see this.  This is on the PDP-10.

RMS@MIT-AI 04/06/79 05:12:42
To: (BUG LISPM) at MIT-AI
I just found yet another case of two functions with the same name.
Perhaps FDEFINE should query when it finds definitions in two different
files?

RMS@MIT-AI 04/06/79 05:11:02
To: (BUG LISPM) at MIT-AI
Why is it that the chaos net leaves all connections open across
a warm boot in a garbage state?
Is this hard to fix?

RMS@MIT-AI 04/06/79 04:58:58
To: (BUG LISPM) at MIT-AI
On CADR 1, I find that View File in ZWEI prints everything
on the first line of the screen.  I suspect the typeout window is broken.

MOON@MIT-AI 04/05/79 22:03:39
To: (BUG LISPM) at MIT-AI
I have removed the symbol FORMAT-STRING from GLOBAL.  No one should be
calling the obsolete function by the name any more.

tk@MIT-AI (Sent by ___012@MIT-AI) 04/05/79 05:53:41
To: (BUG LISPM) at MIT-AI
in CC typing <form> gets an error, also typing 0 <tab> types
out 10000000/ and then bombs the machine.  Since I am trying to fix a second broken
machine, I could not find out what was happening.

moon@MIT-AI (Sent by ___043@MIT-AI) 04/04/79 00:44:31
To: (BUG LISPM) at MIT-AI
If SELECTED-WINDOW's process is not the SELECTED-PROCESS, the system will bomb
out in strange ways.  One way to exhibit this is to send a :SELECT message to
a process which has gotten into a trace break point (in my case, the GC process,
which has no associated windows or anything of that sort.)  The process gets selected.
A while later when the selected window gets deselected, it tries to deselect its
process and gets an error because the process isn't selected.

MOON@MIT-MC (Sent by MOON5@MIT-MC) 04/03/79 15:05:36
To: WELG at MIT-AI
CC: (BUG LISPM) at MIT-MC
The command to edit a file is ^X^F.  This is true in Eine, Zwei, and Emacs.
Zwei has a different model of files and buffers; a buffer is always
just a local copy of a file and has the same name.  Hence ^X^R is
meaningless and does not exist.  I guess we assumed that Emacs users were
used to ^X^F.  If Apropos of File doesn't tell you about ^X^F, it's a bug.

If the compiler is getting an undefined variable compiler:%%fefhi-ms-debug-info-present,
somebody probably installed a broken band there; set this variable to 2701 octal
and continue.  If it's something else, then it's not a bug I know about
and will need investigation.

WELG@MIT-AI 04/03/79 08:09:39
To: (BUG LISPM) at MIT-AI
On the new version of the Vision lisp machine there seem to be a number of problems
1) control-x control-r does not work in the editor (zwei).  Is there some other way of 
reading in a file.  (Apropos does not list one!)
2) The compiler is now crapping out on files it was perfectly happy with before.  In 
particular, a variable of the form COMPILER:foo-bar is unbound

MOON@MIT-AI (Sent by ___044@MIT-AI) 04/01/79 03:33:39
To: (BUG LISPM) at MIT-AI
"Lisp listeners" created with the System Menu cannot be used to compile because their
pdl's are too small.

MOON@MIT-MC 03/31/79 22:08:25
To: RMS at MIT-AI
CC: (BUG LISPM) at MIT-MC
    RMS@MIT-AI 03/31/79 02:21:11
    To: (BUG LISPM) at MIT-AI
    Supplying NIL as an argument to +
    always says that the second argument was NIL,
    no matter which argument it actually was.
    This was with my new error handler, but I don't think it matters.

This was presumably interpreted +?  The argument was indeed the second
argument to microcode + whichever argument to the interpreter's macrocoded
+ function it was.  It's not obvious how to make this less confusing to the user.

GLS@MIT-AI 03/31/79 21:10:41 Re: Neat article on number systems
To: (BUG LISPM) at MIT-AI
CC: GLS at MIT-AI, BKPH at MIT-AI, MARR at MIT-AI

See the March 1979 issue of Communications of the ACM, page 166:
"FOCUS Microcomputer Number System", by Edgar and Lee.  It has a
nice exposition and analysis (though the explanation of the "16-bit"
case is fuzzy) of doing "real" arithmetic by using sign plus
a logarithm expressed as a fixed-point fraction.  They have an
interesting technique for doing addition of numbers represented
by logarithms.  They claim that using an eight-bit FOCUS number
provides the range and resolution of a 15 7/8-bit fixed-point number,
and that a 16-bit FOCUS number compares favorably with 18-bit
floating-point.  An 8-bit FOCUS number, they claim, has less inherent
audible noise than high-quality recording tape (they have in mind
audio processing applications on an 8080).  Anyway, check it out.
It may be a useful number format to have on the LISP Machine, say;
one could get many FOCUS numbers into an ART-16 or ART-8 array.
-- Quux

RMS@MIT-AI 03/31/79 03:17:57
To: (BUG LISPM) at MIT-AI
I have installed a new error handler which allows recursive errors
and errors in the error handler to be handled by the error handler.
There is a separate error handler stack group for each error
being looked at.

Also, errors in nonselected processes should work better now.
The erring process will be selected while you are in the error handler.
When you exit, it will come back.
To reselect the top window, just typing CALL should be enough.
This will no longer leave the error handler in a wedges state.
The process you which had the error will still be running the error
handler until it is reset.

It now works to throw through an error handler foothold.

Additional reliability should come from the fact that the printing of the
error message is done inside an ERRSET (!).

More improvements will be coming soon.

RMS@MIT-AI 03/31/79 02:21:11
To: (BUG LISPM) at MIT-AI
Supplying NIL as an argument to +
always says that the second argument was NIL,
no matter which argument it actually was.
This was with my new error handler, but I don't think it matters.

bee,rg@MIT-AI (Sent by RG@MIT-AI) 03/30/79 16:06:47
To: (BUG LISPM) at MIT-AI
The wierd bug that was clobbering random pointers in the machine (manifesting itself
as 2 window mode bombing out in zwei, when reshaping the window) has been found. It was
tv draw-charing off the bottom of the tv memory, xoring the cursor into A-MEMORY.
Hopefully this is in the process of getting fixed, (and prevent this kind of lossage
in the future).

Date: 30 MAR 1979 0418-EST
From: MOON at MIT-AI (David A. Moon)
Sent-by: MOON0 at MIT-AI
To: INFO-LISPM at MIT-AI

Eine will soon be flushed, being replaced by Zwei.  If you need any help in
switching over, e.g. to convert your init file, contact me or MMcM

GLS,GJS@MIT-AI (Sent by GLS@MIT-AI) 03/29/79 21:43:23 Re: FORMAT
To: (BUG LISP) at MIT-AI, (BUG LISPM) at MIT-AI
FORMAT should have something which is like ~S but
which uses SPRINTER or something instead of PRIN1.

RMS@MIT-AI 03/29/79 04:34:19
To: (BUG LISPM) at MIT-AI
Does anyone know why the symbol TAIL is in global?
Nothing uses it except as a local variable.

RMS@MIT-AI 03/29/79 04:31:12
To: (BUG LISPM) at MIT-AI
Someone thought that STRUCTURE-FORWARD should have a %.
I would argue that that symbol is the user's clean interface to
forwarding and ought not to have a %.
Perhaps it ought to have more error checking, such as checking
that the objects are really structures of the same type.

RMS@MIT-AI 03/29/79 03:25:18
To: (BUG LISPM) at MIT-AI
I have made the disassembler know about locals
and made the format prettier in many ways.
It will fail to know the names of rest args until
things get recompiled with a new compiler
so that those names are in slot 0 of the local map.
Also, DISASSEMBLE-ARG-NAME given a fef and a number
returns the name of the arg with that number (nil if not known).

Also, disassemble works on args like (:method window-class :select).

FUNCTION-DEBUGGING-INFO given a function returns its debugging info alist.
To find out what they are, read the comment before it (in QFCTNS).

rms@MIT-AI (Sent by ___040@MIT-AI) 03/28/79 21:42:56
To: (BUG LISPM) at MIT-AI
When I do a C-X C-F in ZWEI and it is unable to connect to AI,
it dies in FILE-ERROR-STATUS trying to ask the AI connection
why there is no AI connection.
More strangely, this happens again and again despite the fact
that I can open a SUPDUP with no trouble.

gls@MIT-AI (Sent by GJS@MIT-AI) 03/28/79 17:39:09 Re: Multiple values being passed back
To: (BUG LISPM) at MIT-AI
CC: GLS at MIT-AI
If I understand RMS' suggestion correctly, then one may summarize
by saying that multiple values should be passed back in precisely
those cases which are (or can be made) tail-recursive.  The last
thing in an AND, OR, PROGN (including implicit ones such as
in COND and LAMBDA), the consequent and alternative of IF's,
etc. are all cases in point.  It is slightly unclear to me
what (COND ((x)) (t y)) should do: does this mean
	((LAMBDA (z) (IF z z y)) (x))
or do we require a more complex definition?  I am inclined to
make the definition coimpolicated and let the multiple values
propagate as RMS suggests.

moon@MIT-AI (Sent by ___077@MIT-AI) 03/28/79 16:24:08
To: (BUG LISPM) at MIT-AI
The symbol ARRAY is spuriously declared special some place, causing many functions
that use this as a local variable to get a special when they should not.

bee@MIT-AI (Sent by MOON@MIT-AI) 03/27/79 11:24:38
To: (BUG LISPM) at MIT-AI
From this point onward, messages of interest to the users (rather than messages about
bugs in internal lisp system software) should be sent to INFO-LISPM instead of
BUG-LISPM. If you are on BUG-LISPM but not on INFO-LISPM, then you should fix that.
If you are on BUG-LISPM, but dont want to get the piles of cruft you sometimes do,
then you should put yourself only on INFO-LISPM. Hopefully this will cause people
to get only the mail that they want.

Date: 27 MAR 1979 1037-EST
From: MOON at MIT-AI (David A. Moon)
Subject: Improved sanitary facilities
To: INFO-LISPM at MIT-AI

SYstem 1.0 with microcode 451, about to be installed on all machines,
contains a more or less working garbage collector.  It is not turned
on initially; if you feel like getting screwed, invoke the GC-ON function.
GC-OFF turns it off.  Note that once on it stays on even through re-booting
of the machine.

I welcome reasonably-specific reports of problems.

ACW@MIT-AI 03/27/79 06:32:58
To: RG at MIT-AI, (BUG LISPM) at MIT-AI
I was pleased to read your message in lower-case.  Does this
represent a new resolution?

RG@MIT-AI 03/27/79 00:37:35
To: (BUG LISPM) at MIT-AI
  running gc on cadr4, it actually wins fairly well! however,
it can be made to drop dead (mostly by hacking with multiple
processes with the mouse).  Some of these drop deads appeared 
semi reproducable.  P-N-STRING was pretty well garbaged.
the gc-pointer for the initial 300000 size region was 300000
and for the other region 0, so maybe the scavenger had just
completed scavaging that region and got out of phase and
garbaged it instead.  Was not able to get any real evidence
tho.

RG@MIT-AI 03/26/79 11:04:04
To: (BUG LISPM) at MIT-AI
  BUG IN MICROCODE:  THE MACROINSTRUCTIONS SET-E-CDR AND SET-E-CDDR
WORK BY PUSHING THE VMA ON THE PDL, CALLING CDR OR CDDR, RESTORING THE
VMA, AND GOING TO RPWCYC.  IF THE EFFECTIVE ADDRESS OF THE INSTRUCTION
IS (ARG N) OR (LOC N), THE VMA CAN POINT TO COMPLETE RANDOMNESS
(FOR INSTANCE, DIRECTLY AT THE MACROINSTRUCTIONS THAT ARE BEING EXECUTED).
THEN, IF A SEQUENCE BREAK OR ERROR IS TAKEN AT QCDR, A LOCATIVE TO
GARBAGE IS LEFT ON THE STACK.

MOON@MIT-AI 03/26/79 06:03:24 Re: System version ID
To: (BUG LISPM) at MIT-AI
In the next world load, there will be features which keep track of a system
version ID, which takes the form of a major version number, a dot, a minor
version number, and additional commentary.  The major version number is
incremented each time you build a world-load, and the minor version number
is incremented each time you do a disk-save.  The commentary is intended for
things like "Macsyma is present".  The system version ID will be printed as part
of the "loaded band" message when you boot the machine, and should be included
in bug reports.  (The print-loaded-band function is what prints this.)

When you do a disk-save, it will type the old and new version ID's and ask
for confirmation.  Plain carriage return accepts the new ID, or you can type
a replacement ID to use instead and a carriage return.

rms@MIT-AI (Sent by RG@MIT-AI) 03/26/79 01:03:18
To: (BUG LISPM) at MIT-AI
I have just made some changes to the compiler,
which I will test tomorrow evening.

MOON@MIT-AI 03/25/79 03:29:52
To: RMS at MIT-AI
CC: (BUG LISPM) at MIT-AI
Yet another reason why it is a loss not to clear the screen on warm boots.
I added another run-light for the garbage collector, and now if the machine
dies with this run light on and you warm boot the machine nothing clears this light.
This is a loss; let's fix it to clear the screen on startup always.

RMS@MIT-AI (Sent by RMS0@MIT-AI) 03/24/79 06:56:38
To: (BUG LISPM) at MIT-AI
The SUPDUP error after rebooting problem is due to the fact
that the network does not change the connection state
from OPEN-STATE but does mess up the packets somehow.
Shouldn't all the connections open wen a warm boot happens
be marked as closed somehow?

RMS@MIT-AI (Sent by RMS1@MIT-AI) 03/24/79 06:45:41
To: (BUG LISPM) at MIT-AI
Right now CADR 4 is in a state where if warm-booted
it halts at a place where there is no halt, as far as I can tell.
Each time it stops at a slightly different place.
Once it actually got far enough to type out on the screen
and let me type (ROOM), but it died trying to execute it.

RMS@MIT-AI (Sent by RMS1@MIT-AI) 03/24/79 06:42:40
To: (BUG LISPM) at MIT-AI
On CADR 2 I just did C-M-C-M-Return,
(SUPDUP) which got the usual null connection error,
and then another C-M-C-M-Return
which left the screen dark.  I tried it a few more times
with no effect.

RMS@MIT-AI (Sent by RMS0@MIT-AI) 03/24/79 06:36:36
To: (BUG LISPM) at MIT-AI
Load in TVWARM QFASL and TV-REDEFINE-PC-PPR will break
rather strangely, since it runs interpreted OK
and the macrocode looks ok
and couldn't possibly produce the strange results that happen.
In addition, an identical stretch of macrocode
in the version present in the default band on CADR 3 and 4
behaves the way it ought to.
Perhaps it depends on which halfword an instruction is in?
If it matters, I checked that TV-ROVING-BLINKER-LIST
was a real list that would CDR reasonably
and that there was only one such symbol in the machine.
In addition, the previous definition of TV-REDEFINE-PC-PPR
works when restored with UNDEFUN after the new TVWARM is loaded,
so the problem can't be due to anything else random done by that
file.

Yagh!  The strange locative stored in local 22 points at the
word containing the next instruction to be executed!
Can something be overpopping?

This happened on CADR 3 and 4.

HIC@MIT-AI 03/23/79 20:41:36
To: (BUG LISPM) at MIT-AI
New ADJUST-ARRAY-SIZE was using %P-CONTENTS-AS-LOCATIVE to follow
DTP-HEADER-FOWARD's in arrays.  The screw with this is that %P-C-A-L
also followed DTP-HEADER-FOWARD's so that if the origional array pointed to
a header-forward adjust-array-size would pick up the array header instead
of the contents of the fowarding pointer.  Temporarily, I made
this loop do a %P-LDB to get the pointer, and did (SETQ ARRAY ARRAY)
to cause fowarding to happen.  This should be looked into by the "experts".

--Howard (and RG)

MOON@MIT-AI (Sent by HIC@MIT-AI) 03/23/79 14:50:25 Re: Shit for brains
To: (BUG LISPM) at MIT-AI
Someone put an incorrect macro definition for PROG1 into LISPM2;MACROS
which shafted me totally.  Please do not do this.

JLK@MIT-AI 03/23/79 11:15:32
To: (BUG LISPM) at MIT-AI
(Sorry if this is common knowledge, but I thought I'd report it anyway)
If you reboot the machine and bury the toplevel window, you get a random editor buffer
and the state of the world is completely wedged.  In fact, anytime you bury this window
it seems to loses. 

MOON5@MIT-AI 03/22/79 13:12:23
To: (BUG LISPM) at MIT-AI
I don't know who put %MAKE-PAGE-READ-ONLY into LISPM;QMISC,
but you should be aware that access is generally not intended to be
on a page basis, and the read-onlyness this gives to a page will be
lost if the page is swapped out.

rms@MIT-AI (Sent by ___017@MIT-AI) 03/22/79 05:23:58 Re: Multiple values
To: (BUG LISPM) at MIT-AI
Consider this as the criterion for when to pass back multiple values:
whenever you know "before looking at" a form that it will be evaluated
and its value will be returned from a higher level up, all the values
should be passed along to that level.  This implies that the
last element of an AND or OR, and either case of an IF, should be
so treated.  I think it is important that
(COND (f1 f2)) and (AND f1 f2) remain equivalent, and also
(COND (f1) (t f2)) and (OR f1 f2).  (COND (f1) (f2)) should also
be equivalent to them, illustrating the fact that if the last clause
of a cond has one element then that element fits the criterion.

rms@MIT-AI (Sent by ___026@MIT-AI) 03/22/79 02:58:32
To: (BUG LISPM) at MIT-AI
It won't cold-boot either, even after turning disk off and on.

rms@MIT-AI (Sent by ___026@MIT-AI) 03/22/79 02:55:23
To: (BUG LISPM) at MIT-AI
Some cretin put TS CADR on SECOND and OCADR
just gets errors and garbages the machine so that it can't
be warm booted.

JLK@MIT-MC 03/20/79 17:15:32
To: (BUG lispm) at MIT-AI
I have some information on the Sanders printer which I will leave in 936 for
perusal.


HENRY@MIT-AI 03/20/79 00:16:19
To: (BUG LISPM) at MIT-AI
(FUNCTION RIGHT) initially claims to be undefined, 
but (DEFUN RIGHT (X) ...) says "USER is illegally redefining RIGHT".

MOON@MIT-AI (Sent by MOON0@MIT-AI) 03/19/79 07:56:14 Re: Floating point improvements
To: (BUG LISPM) at MIT-AI
UCADR 434 fixes bugs in floating-point divide and bignum remainder.
These bug fixes fix a bug in floating-point read.  I made a few cosmetic
changes to read which I don't think fixed any bugs.

I have extensively revised the floating-point printer.  It no longer has
an array, which prevented it from working recursively and reentrantly,
it has bugs fixed, and it prints flonums with full precision instead of
small-flonum precision.  The necessary routines are there to allow
~E and ~F in FORMAT to be implemented easily.  Note: this version of PRINT
will not work in microcode older than 434, due to above-mentioned bugs.

MOON@MIT-AI (Sent by MOON0@MIT-AI) 03/19/79 07:27:38 Re: Opinion question
To: (BUG LISPM) at MIT-AI
Currently, if a bignum and a small-flonum are arithmetically combined, the
result is a flonum.  Would it be better for it to be a small-flonum?

HIDAY@MIT-AI 03/17/79 17:02:46
To: (BUG LISPM) at MIT-AI
If you try (PROG2(READ)(READ)) ATOM(LIST),
Then there appears on screen (PROG2(READ)(READ)) ATOM((LIST).
Notice the extra "(".

RG@MIT-AI (Sent by RG0@MIT-AI) 03/17/79 00:25:22
To: (BUG LISPM) at MIT-AI
(^ -1 -1) GETS INTO AN INFINTE LOOP.
^ REALLY NEEDS A LOT OF WORK.  PROBABLY
THE MAIN FUNCTION SHOULD BE MACROCODE
AND THE PRESENT THING CALLED *^ OR SOMETHING.

RG@MIT-AI 03/16/79 23:06:32
To: (BUG LISPM) at MIT-AI
^ TO A FLOATING POINT POWER DOESNT WIN.  PROBABLY IT SHOULD
TRAP TO MACROCODE.

MOON@MIT-MC 03/16/79 14:11:19
To: (BUG LISPM) at MIT-MC
The compiler does not open-code +$ and the like.

MOON@MIT-AI 03/16/79 02:26:15 Re: QF
To: (BUG LISPM) at MIT-AI
I would not reccommend recompiling LCADR;QF until I have debugged it.

HIC@MIT-AI 03/15/79 13:50:02
To: (BUG LISPM) at MIT-AI
LMIO;COLOR has been fixed.  The color TV now works again

RG@MIT-AI 03/15/79 04:19:44
To: (BUG LISPM) at MIT-AI
  BAND 7 ON CADR 1 HAS THE LATEST SOFTWARE.  THIS SHOULD BE
BROUGHT UP ON ALL MACHINES AS SOON AS POSSIBLE, IN ORDER
TO MINIMIZE COMPATIBILITY PROBLEMS WITH THE CLASS STUFF.
  IN ADDITION, QUITE A FEW BUGS HAVE BEEN FIXED, INCLUDING
A PARTICULARILY PAINFUL ONE THAT OFTEN CLOBBERED TOTAL RANDOMNESS
IF YOU GOT AN UNDEFINED FUNCTION FROM SOMETHING YOU TYPED
INTO THE ERROR HANDLER COMMAND LOOP.

RMS@MIT-AI 03/14/79 00:49:08
To: (BUG LISPM) at MIT-AI
Every day at least once the environment gets completely clobbered
such that I can't restart the machine.  This time I couldn't
get ZWEI to start up because of DTP-TRAPs in various places.
(ZED 'ZWEI:RELOAD) didn't help.  I wasn't using any % functions.
Nobody is willing to investigate these lossages when they happen
so I guess people are content for  the system to remain unreliable.

HENRY@MIT-AI 03/12/79 02:21:21
To: (BUG LISPM) at MIT-AI
Compiling MacLisp code with calls to ARRAY gives error message:
"....not grokked by compiler you need an ARGDESC property"

RMS@MIT-AI 03/12/79 01:48:00
To: (BUG LISPM) at MIT-AI
I have made three new functions
FDEFINITION, FDEFINE and FDEFINEDP, which are like
FSYMEVAL, FSET and FBOUNDP except that they work on
lists like (:METHOD FOO-CLASS :BAR) as well as on symbols.
FDEFINE has an optional flag to make it do FSET-CAREFULLY,
which now just calls FDEFINE.  This is so that all the utilities
for dealing with functions can be made to work on anything you
can use in a DEFUN.  I have made COMPILE work using them
so it is again possible to do C-T-C on a DEFMETHOD in the editor.

HENRY@MIT-AI 03/11/79 17:13:07
To: (BUG LISPM) at MIT-AI
Break loops rebind the radix to 8, which surprises you if you had
set it to 10. Why not 10. as the default anyway, following MacLisp?

MOON@MIT-MC 03/11/79 10:17:54 Re: Supdup'ing to SAIL    
To: (BUG lispm) at MIT-AI
    Date: 11 Mar 1979 0413-PST
    From: David Moon <LUN at SU-AI>
    Subject: Supdup'ing to SAIL    
    To:   bug-lispm at MIT-AI   
    
    The (unannounced) SUPDUP:SAIL function has been removed since SAIL has fixed their system. 
    Since it's not important, the change has been made in source only and not installed.

Sorry to keep bothering everyone.  Damnit, they fixed their system but they still
have bugs in the editor with respect to large screens.  Fooey on them we'll still
send them the full size of our screen.

MOON@MIT-MC 03/11/79 10:16:31 Re: Strange (?) response of LIST to SYMBOLs
To: DTS at MIT-AI
CC: (BUG LISPM) at MIT-MC
    DTS@MIT-AI 03/11/79 08:41:27 Re: Strange (?) response of LIST to SYMBOLs
    To: (BUG LISPM) at MIT-AI
       I'm not sure if this is a bug or some unexplained (in the manual,
    anyway) feature. At any rate I'd appreciate it if you could explain
    this phenomenom to me. 
    
    (list "foo")==>("FOO")
    (list 'foo)====>(FOO)
    but
    (list (intern "foo"))===>(|FOO|)
    even though
    (typep (intern "foo"))==>SYMBOL
    
       Does this special handling of the SYMBOL returned by INTERN mean
    something special??
There is no bug.  Note that interning "foo" gives you |foo|, not |FOO|.
The vertical bars are there to quote the lower case letters.

DTS@MIT-AI 03/11/79 08:41:27 Re: Strange (?) response of LIST to SYMBOLs
To: (BUG LISPM) at MIT-AI
   I'm not sure if this is a bug or some unexplained (in the manual,
anyway) feature. At any rate I'd appreciate it if you could explain
this phenomenom to me. 

(list "foo")==>("FOO")
(list 'foo)====>(FOO)
but
(list (intern "foo"))===>(|FOO|)
even though
(typep (intern "foo"))==>SYMBOL

   Does this special handling of the SYMBOL returned by INTERN mean
something special??

		Puzzled,
		DTS

Date: 11 Mar 1979 0413-PST
From: David Moon <LUN at SU-AI>
Subject: Supdup'ing to SAIL    
To:   bug-lispm at MIT-AI   

The (unannounced) SUPDUP:SAIL function has been removed since SAIL has fixed their system. 
Since it's not important, the change has been made in source only and not installed.



RG@MIT-AI 03/10/79 15:09:58
To: (BUG LISPM) at MIT-AI
AI:RG;DYN > is a mini-paper on "dynamic" changes
to instances and classes.  Comments solicited.

HIC@MIT-MC 03/10/79 13:40:04
To: (BUG LISPM) at MIT-MC
There is a system feature that makes doing things only once very convenient.

For documentation on this, and on the complete new standardized initialization
scheme, see the file AI:LMDOC;INIT >


MOON@MIT-AI 03/10/79 00:48:48
To: HENRY at MIT-AI
CC: (BUG LISPM) at MIT-AI
The compiler actually does open-code APPLY, although you might not think
it just to look at the code.  APPLY is written in microcode and has to be
called the way that it is, currently at least, in order to make multiple
values work correctly.

HENRY@MIT-AI 03/10/79 00:46:05
To: (BUG LISPM) at MIT-AI
The compiler open codes LEXPR-FUNCALL. How 'bout the same for APPLY.

MMCM@MIT-AI 03/09/79 21:26:00
To: (BUG LISPM) at MIT-AI
  Band 6 on CADR1 is a new experimental world load.
In addition to quite a few accumulated changes, this load
has some important changes to the message passing stuff.
  CLASS-CLASS now has three instance variables where formerly
it had two.  Most importantly, instead of the SELECT-METHOD
being in the function cell of the xxx-CLASS symbol (typically) there is now a
gensym (called the CLASS-METHOD-SYMBOL) created for each instance
of CLASS-CLASS which holds the select-method.  The CLASS-METHOD-SYMBOL
for a given class can be obtained by sending the class a :CLASS-METHOD-SYMBOL
message.
  A forthcomming essay will describe the motovation for doing this,
etc.  For the present, I note some incompatibilities and changes to
operating procedure which this makes necessary.
 Incompatibilites: 
  (1)  The <-AS macro has been changed, and any file which uses it
     must be recompiled.  If this is not done, the symptom will usually
     be  a xxx-CLASS undefined function error.  
  (2)  Any other file which uses DEFMETHOD should eventually be recompiled.
     There is a "bridge" which causes old files to win for the time being,
     but this will eventually go away.
Since new QFASL files wont work in old loads, its probably a good
idea to rename your old QFASL files if you compile with the new load.

  When you do a DEFCLASS, you always get a fresh class with no methods
defined.  If you are redefining a class this means two things:
  instances of the old class will continue to work
     (this was not always true before.  However, we still have the
     problem that method names can conflict between new and old versions
     of the class).
  all the methods used by a class need to be reloaded for new instances of the
     new class to win completely.  Also subclasses of the given class
     need to be reloaded.

  Since reloading is a gross pain, you should not redo DEFCLASSes
 unless you really mean it.  Probably DEFCLASSes should be put in a
 separate file so the rest of the file can be reprocessed without
 redoing the DEFCLASS.  Hopefully,
 there will eventually exist system features to make this more convenient.

moon@MIT-AI (Sent by ___065@MIT-AI) 03/09/79 17:03:01
To: (BUG LISPM) at MIT-AI
It doesn't open-code LESSP

GSM@MIT-AI 03/09/79 14:30:00
To: (BUG LISPM) at MIT-AI
There seems to be a bug in EINE.  Text is inserted (deleted etc.)
one line above the cursor if the cursor is palced one line below a
continuation line.

DLW@MIT-AI 03/07/79 20:55:39
To: ALAN at MIT-AI, (BUG LISPM) at MIT-AI
    Is there a reasonable way to say: (PROG () (RETURN A B))?  I recall
    seeing some macro somewhere to turn into this, but I don't recall
    if it is installed anywhere.
There is a macro in EINE and ZWEI, called MVRETURN, that does this.
I don't think it is installed in the regular system.

BEE@MIT-AI 03/07/79 12:32:02
To: (BUG LISPM) at MIT-AI
Not really a bug, but what the hell is this curry-before and curry-after stuff?
Is this for Indian dinners? It isn't documented anywhere that I can find, and is
known about in *eval, macroexpand-1 and apply-lambda. I know what it does, but
why does someone think that this is useful?

BEE@MIT-AI 03/07/79 10:30:20
To: (BUG LISPM) at MIT-AI
WE GOT SOME PROMS!!  THE CADR1 PROM HAS BEEN REINSTALLED.

ALAN@MIT-AI 03/07/79 00:39:11
To: (BUG LISPM) at MIT-AI
	Yes, yes. For crying out loud lets have some sort of reasonable
rules regarding multiple value returns propogating.  While we are at it:
Is there a reasonable way to say: (PROG () (RETURN A B))?  I recall
seeing some macro somewhere to turn into this, but I don't recall
if it is installed anywhere.  If we make the proposed change then this
kind of thing will become really usefull.

DLW@MIT-AI 03/07/79 00:24:10
To: (BUG LISPM) at MIT-AI
I strongly agree with Moon's proposed rule regarding multiple
value returns.  It would have been the right thing in every
case I can think of, and I have been kludging around the lack
of this rule for a while.

MMCM@MIT-AI 03/06/79 20:04:12
To: JIS at MIT-MC
CC: (BUG LISPM) at MIT-AI
    Date: 03/06/79 09:07:27
    From: JIS at MIT-MC

    Also in Lisp mode (defun foo nil (cond ...)) indents as

    (defun foo nil
        (cond (...)))

    instead of

    (defun foo nil
           (cond (...)))


this is a feature, putting
(LOGIN-SETQ ZWEI:*LISP-INDENTATION-OFFSET* NIL) in your lispm init file will
cause what you want to happen.

MOON@MIT-MC (Sent by MOON0@MIT-MC) 03/06/79 09:51:47
To: (BUG LISPM) at MIT-MC
TRACE with factored function names,
e.g. (trace ((foo bar) break t)) doesn't work

MOON@MIT-MC (Sent by MOON0@MIT-MC) 03/06/79 09:12:42
To: JLK at MIT-MC
CC: (BUG LISPM) at MIT-MC
    JLK@MIT-MC 03/05/79 23:25:36
    To: (BUG lispm) at MIT-AI
    Trying to QC-FILE AI:LMIO;KBD > bombs out with some obscure error.

This was fixed a few days ago, but that compiler doesn't seem to be installed
on all machines.  (pkg-load "compiler") is a command to get the latest
(now and then so late that it's dead) compiler.

JIS@MIT-MC 03/06/79 09:07:27
To: MMCM at MIT-MC
CC: (BUG LISPM) at MIT-MC

When using ZWEI in two window mode, if you quit (^x^c) and then return, only
the window you were using comes back. A ^xo does not bring you to the other window.
The only way I could reclaim the other window was to do a ^x1 and then a ^x2 again.
Is this a bug or a feature?? 

Also in Lisp mode (defun foo nil (cond ...)) indents as

(defun foo nil
    (cond (...)))

instead of

(defun foo nil
       (cond (...)))

                            -Jeff


MOON@MIT-AI 03/06/79 06:52:57
To: (BUG LISPM) at MIT-AI
The design of the Disk Multiplexor board, which makes a disk-control able to
handle 8 drives, is completed.  We send one out in the next raytheon order.
Things currently holding up the next order:
	Preparation of LMTV, DISK, DM, MEM boards. (undedication)
	Alleged need to split RAY files into separate Z levels.

MOON5@MIT-MC 03/06/79 02:59:20 Re: Making multiple values more consistent
To: (BUG LISPM) at MIT-MC
I would like to promote the following rule.  If the result of a function
is used as an argument to a function, bound to a variable, or setq'ed
to a variable, only the first value of that function is used.  If the result
of a function appears last in an explicit or implicit progn, and will
be the result of the containing form, then all values are propagated upward
to that containing (special) form.  I think this will produce much more
consistent results.

Currently the interpreter does this for lambda-combinations and function
bodies, but I don't think it does it for other implicit progn's such as
cond clauses and exitvalues in new-style DO's.

The compiler does not currently do this.  There are two cases: (1) the
result of the function will propagate up to be the result of the calling
function.  The microcode can easily be changed to make this work by checking
for D-RETURN on the call, when an attempt is made to return multiple values.
This may take the place of indirect-ADI.  (2) the result of the function
will be used by an internal multiple-value, multiple-value-list,
multiple-value-bind, etc.  This probably requires some extension to the
compiler's destination mechanism to make work in all cases.

I don't think any of these changes will be hard to do.

Opinions?

MMCM@MIT-AI 03/06/79 02:38:50 Re: ZWEI
To: (BUG LISPM) at MIT-AI
ZWEI has been dumped out on packs A, D, and E.  please try experimenting with
it.  the relevant functions are (ZED &OPTIONAL THING), which calls up the editor
on the function or file THING; and (ZDT) which turns on the editor-top-level
stream ((ZDT NIL) turns it off).
send bugs or suggestions to (BUG ZWEI).

JLK@MIT-MC 03/05/79 23:25:36
To: (BUG lispm) at MIT-AI
Trying to QC-FILE AI:LMIO;KBD > bombs out with some obscure error.


RG@MIT-AI (Sent by RG0@MIT-AI) 03/04/79 17:30:32
To: (BUG LISPM) at MIT-AI
CADR 1 C-MEM PARITY ERROR, PICKED 10000000 BIT IN LOCN 4636.

RG@MIT-AI 03/04/79 15:40:33
To: (BUG LISPM) at MIT-AI
  CADR1 C-MEM PAR ERROR, DROPPED 2000000 BIT IN LOCN 433

HIC@MIT-MC 03/03/79 21:17:25
To: JLK at MIT-MC, (BUG lispm) at MIT-AI
I am currently implementing a new "file system" on the Lisp Machine that
not only will implement many of the features that you implicitly desire (including
multiple files, etc...), but will also use a new protocol that will be
fairly compatible with the file computer's as well as being faster and
more robust than the current implementation.  Due to various problems that
have arisen, work is not progressing as fast as possible, but work is getting
done.


JLK@MIT-MC 03/03/79 20:02:37
To: (BUG lispm) at MIT-AI
Has anyone written down plans for extensions to the file system or "newio"
multiple files, etc?  The reason I ask is that I am tempted to ask for
xyz feature the MACLISP has which I find useful (e.g. TRUENAME, PROBEF,
ALLFILES, etc.) but would like to have a place to look first to see if it
is already part of the plan...


RMS@MIT-AI 03/02/79 21:12:44
To: (BUG LISPM) at MIT-AI
I have made DEFSTRUCT generate selector functions with definitions
of the form (SUBST (X) (AR-1 X 3)), which apply normally
but act like substitution macros for compilation and SETF.
Such things can be defined explicitly with DEFSUBST instead of DEFUN.

Also, (SETF (LDB ...) ..) no longer evals most of ... twice.

This is all debugged but not installed.
Installing it requires redefining APPLY-LAMBDA which is painful.
I'd suggest waiting till the next cold-load.

MMCM@MIT-AI 03/01/79 17:17:00
To: WELG at MIT-AI, (BUG LISPM) at MIT-AI
    Date: 03/01/79 17:13:35
    From: WELG at MIT-AI
    To:   (BUG LISPM)

    occasionally, the editor on the vision lisp machine gets into 
    a state where it places the cursor one line above the actual position
    of the cursor.  Thus if one attempts to insert some text, it gets inserted, 
    not at the position of the cursor, but one line lower!
this is a long-standing bug caused by continuation lines, that shouldnt exist in ZWEI.

WELG@MIT-AI 03/01/79 17:13:35
To: (BUG LISPM) at MIT-AI
occasionally, the editor on the vision lisp machine gets into 
a state where it places the cursor one line above the actual position
of the cursor.  Thus if one attempts to insert some text, it gets inserted, 
not at the position of the cursor, but one line lower!

BIM@MIT-AI 03/01/79 11:49:45 Re: trig
To: (BUG LISPM) at MIT-AI
Well, there is now at least one other person who is suffering for lack
of an arctangent function... which isnt even in BEE;SQRT. could we
either:
1) make macsyma part of default load...
or
2) get at least elementary trig &certa into somewhere independant of
macsyma.
thanks

BIM@MIT-AI 03/01/79 11:37:13
To: MMCM at MIT-AI, BIM at MIT-AI, (BUG LISPM) at MIT-AI

    MMCM@MIT-AI 02/28/79 21:57:33
        BIM@MIT-AI 02/27/79 21:43:06
        To: (BUG LISPM) at MIT-AI

        The compiler traps compiling the file bim;lmplot >. It didnt used to.
        it happens in COMPILER:APPLY-TO-LIST  COMPILER:OPTIMIZE.
    fixed in the source.
Thank you muchly... benson

MOON@MIT-AI 02/28/79 22:58:26 Re: New special forms
To: (BUG LISPM) at MIT-AI
The following new special forms will be installed in the next world, or maybe before.
Documentation can be found via the tags file AI: LMMAN; .LMMAN TAGS
	DOLIST
	DOTIMES
	MULTIPLE-VALUE-BIND
	WITHOUT-INTERRUPTS

MMCM@MIT-AI 02/28/79 21:57:33
To: BIM at MIT-AI, (BUG LISPM) at MIT-AI
    BIM@MIT-AI 02/27/79 21:43:06
    To: (BUG LISPM) at MIT-AI

    The compiler traps compiling the file bim;lmplot >. It didnt used to.
    it happens in COMPILER:APPLY-TO-LIST  COMPILER:OPTIMIZE.
fixed in the source.

RG@MIT-AI 02/27/79 21:07:07
To: (BUG LISPM) at MIT-AI
DUE TO A SHORTAGE OF PROMS, THE BOOTSTRAP PROM HAS BEEN
REMOVED FROM CADR1.  THIS MEANS C-M-C-M-RETURN AND C-M-C-M-RUBOUT
WILL NOT WORK.  (DONT EVEN TRY THEM, SINCE IF YOU DO IT WILL BE
HARDER FOR YOU TO UNWEDGE YOURSELF.)  INSTEAD, THE MACHINE MUST
BE RESTARTED WITH THE PDP-10 CONSOLE PROGRAM.  THERE IS A NOTE
NEAR THE MACHINE WHICH GIVES SOME IDEA AS TO HOW TO DO THIS, BUT
UNFORTUNATELY THERE ARE POSSIBLE SCREWS INVOLVED.  SO
AS SOMEONE WHO KNOWS HOW TO RUN THE CONSOLE PROGRAM IF YOU
HAVE DIFFICULTY.

BIM@MIT-AI 02/27/79 21:43:06
To: (BUG LISPM) at MIT-AI
The compiler traps compiling the file bim;lmplot >. It didnt used to.
it happens in COMPILER:APPLY-TO-LIST  COMPILER:OPTIMIZE.

WELG@MIT-AI 02/27/79 15:54:37
To: (BUG LISPM) at MIT-AI
Is there any way to put SQRT and ATAN functions on the vision lisp machine?

moon,hic@MIT-AI (Sent by ___025@MIT-AI) 02/27/79 04:02:29
To: VISION at MIT-AI
CC: (BUG LISPM) at MIT-AI
The monitor in 902 is now a good one, and the convolver is fixed and installed
in that machine.

moon,hic@MIT-AI (Sent by MOON5@MIT-AI) 02/26/79 05:59:33 Re: CADR3
To: (BUG LISPM) at MIT-AI, VISION at MIT-AI
CADR3 has been shipped to the vision people.  However, the image convolver
is currently down.  Hopefully we will fix it tomorrow.  The TV currently
in 902 is somewhat poor, we will try to install a better one tomorrow to
avoid seasickness on the part of the users.

bim@MIT-AI (Sent by ___027@MIT-AI) 02/25/79 18:33:27
To: moon at MIT-MC
CC: (BUG LISPM) at MIT-AI
Vertically up the page looses. i want then rotated
90degrees and then sprinkled vertically. i e if you turn the monitor
on its side the text reads normally.

MOON@MIT-MC 02/25/79 18:23:20
To: BIM at MIT-AI
CC: (BUG LISPM) at MIT-MC
    BIM@MIT-AI 02/25/79 14:21:45
    To: (BUG LISPM) at MIT-AI
    does anyone know for sure if tv-make-sideways-font is supposed to work with
    the current font format? How about sideways-p in tv-define-pc-ppr? I really
    need some way of putting characters both horizontal & vertical on a page,
    and any suggentions would be appreciated.

Apparently these haven't yet been converted for CPT monitors.  This wasn't
really intended for what you want (presumably labelling graphs) and may not
go in the right direction for you.  It's easy enough to put upright characters
in a vertical line, by using tv-set-cursorpos after each character.

MOON@MIT-MC 02/25/79 18:19:47
To: (BUG LISPM) at MIT-AI
    MMCM@MIT-AI 02/25/79 14:55:54
    To: (BUG LISPM) at MIT-AI
    (OR (AND LIST
             (PROG1 (CAR LIST)
                    (SETQ LIST (CDR LIST))))
        'BARFOLA)
    does not compile correctly, losing in the case of a list whose CDR is NIL, since
    it is testing the second clause of the PROG1 for the AND.
I have fixed this in the source (P2PROG12N).  I'm unsure if the compiler is currently
in a working state, so I won't try to recompile it.  RMS, are you currently working
on the compiler?

MMCM@MIT-AI 02/25/79 14:55:54
To: (BUG LISPM) at MIT-AI
(OR (AND LIST
         (PROG1 (CAR LIST)
                (SETQ LIST (CDR LIST))))
    'BARFOLA)
does not compile correctly, losing in the case of a list whose CDR is NIL, since
it is testing the second clause of the PROG1 for the AND.

BIM@MIT-AI 02/25/79 14:21:45
To: (BUG LISPM) at MIT-AI
does anyone know for sure if tv-make-sideways-font is supposed to work with
the current font format? How about sideways-p in tv-define-pc-ppr? I really
need some way of putting characters both horizontal & vertical on a page,
and any suggentions would be appreciated.

HIC@MIT-MC 02/25/79 04:34:08
To: (BUG LISPM) at MIT-MC
Please don't try to make a new cold load, the initialization stuff is
still in a state of disorder.  I will attempt to get it finished and documented this evening.


ALAN@MIT-AI 02/25/79 02:59:35 Re: The reader what else.
To: (BUG LISPM) at MIT-AI
	In the next world load there will be some reasonable functions for
do SETSYNTAX like things. See LMDOC;SETSYN DOC for details.

	It is no longer possible to define any arbitrary symbol to be a
reader macro, only single characters please!

	Backquote has been improved to produce LIST and LIST* instead of
always producing cons.  Also you will find that `(A B ,@NIL) does not
expand into (APPEND A B NIL) but rather into '(A B) on the theory that
all that backquote is contracted to do is to produce something that
LOOKS like this. If you wish to copy a list then you should do it explicitly.

moon@MIT-AI (Sent by ___012@MIT-AI) 02/24/79 22:09:50
To: (BUG LISPM) at MIT-AI
The following gets an error in lap, due to missing "quote-vector"
  (defun foo (x)
     (1+ (prog () (bar (return x)))))

GLS@MIT-AI 02/24/79 08:26:39
To: RMS at MIT-AI
CC: GLS at MIT-AI, (BUG LISPM) at MIT-AI

    RMS@MIT-AI 02/24/79 00:25:04
    The optimizer is called by some of the individual optimizers to avoid
    this problem.  If some neglect to do so, they can be fixed.
    It can't be done bottom-up without being a separate
    pass.  I don't think that's worth it.
Having all appropriate optimizers which test subforms first call
OPTIMIZE on those subforms should work fine.  That makes the
organization effectively bottom-up, though there may be some
redundant tests which determine that an already-optimized form
need not be optimized again.  I agree that a separate pass probably
is not worth it.

HIC@MIT-MC 02/24/79 06:36:12
To: (BUG LISPM) at MIT-MC
If you try to build a new world, I suggest not trying to compile LTOP
and NCHAOS.  Though they will compile, doing so may completely break
the world that you try to build.  I am currently hacking some initialization
stuff.  This should be done by tonight.  The QFASL should still be those
of the old version, and thus attempts at building worlds should not be
stymied by the new changes.

--Howard


RMS@MIT-AI 02/24/79 00:25:04
To: GLS at MIT-AI, (BUG LISPM) at MIT-AI

    GLS@MIT-AI 02/23/79 02:06:32 Re: OPTIMIZE in pass 1 of QCMP (QCP1)
    The optimizer as it is currently structured seems to have
    the general problem that at the point an optimizer is applied to
    a form, the subforms of that form are not optimized.  As a result,
    a form like   (EQUAL X (OR))  optimizes only to  (EQUAL X 'NIL),
    whereas if  (EQUAL X 'NIL) were originally written, it would optimize
    first to  (EQ X 'NIL)  and thence to  (NOT X).  The optimizer seems
    to operate top-down, in effect, but this example indicates that
    it were perhaps better arranged bottom-up.

The optimizer is called by some of the individual optimizers to avoid
this problem.  If some neglect to do so, they can be fixed.
It can't be done bottom-up without being a separate
pass.  I don't think that's worth it.

moon@MIT-AI (Sent by ___015@MIT-AI) 02/23/79 22:30:50
To: (BUG LISPM) at MIT-AI
New function in the CADR package-
  cc-test-clock will measure and report on the clock speed of the subject machine.
  The nominal speeds it prints may not be the last word; someone should apply
  some engineering to this at some point.
Also the function unfortunately does not run in the pdp10 version of CADR,
due to the lack of a clock.

BIM@MIT-AI 02/23/79 08:49:58
To: BEE at MIT-AI, (BUG LISPM) at MIT-AI, JLK at MIT-MC
Well, hardcopy seems to be really here. BIM;XGP QFASL contains, in addition to
the original SCREEN-HARDCOPY and WINDOW-HARDCOPY, SCREEN-HARDCOPY-BACKGROUND
and WINDOW-HARDCOPY-BACKGROUND. They copy their respective charges off into
arrays and then start a process which calls PROCESS-ALLOW-SCHEDULING so that
other stuff happens.
Only two things remain to be done:
1) Rewrite KBD-ESC to use one of these for ESQ-Q.
2) For some strange reason the image produced on the XGP is shifted perhaps 
1/4 inch rightwards, causing the far right side of the screen image to loose
slightly. Someone should figure out why.

One caveat...starting two of theses at teh same time is a VERY BAD IDEA,
as they both open output files.

bim

GLS@MIT-AI 02/23/79 02:06:32 Re: OPTIMIZE in pass 1 of QCMP (QCP1)
To: (BUG LISPM) at MIT-AI
CC: GLS at MIT-AI
The optimizer as it is currently structured seems to have
the general problem that at the point an optimizer is applied to
a form, the subforms of that form are not optimized.  As a result,
a form like   (EQUAL X (OR))  optimizes only to  (EQUAL X 'NIL),
whereas if  (EQUAL X 'NIL) were originally written, it would optimize
first to  (EQ X 'NIL)  and thence to  (NOT X).  The optimizer seems
to operate top-down, in effect, but this example indicates that
it were perhaps better arranged bottom-up.

Date: 22 FEB 1979 2204-EST
From: GLS at MIT-AI (Guy L. Steele, Jr.)
To: (BUG LISPM) at MIT-AI, (BUG NIL) at MIT-AI, GJS at MIT-AI
To: CARL at MIT-AI, rz at MIT-MC

Latest revision of  AI:QUUX;LMFOO >  produced as a result
of discussion with RG and RMS and others.  Highlights of
changes:
[1] Removal of ! and ? stuff (deemed not critical).
[2] Removal of most stuff related to classes, as evidently
    the class stuff is to be done another way.
[3] Changing the names of the the concepts ENTITY and
    INSTANCE to ACTOR and LCLOSURE, respectively, to
    avoid conflicts with ongoing work by RG.

HIC@MIT-AI 02/22/79 15:17:17
To: (BUG LISPM) at MIT-AI
When compiling a file with QC-FILE that
has #, 's in it, the reader returns (SI:**EXECUTION-CONTEXT-EVAL** . <form>)
which causes the compiler to get completely blown away.  Isn't ehc ompiler supposed
to recognize this??  BIM reports that this used to work....
This might have broken when I did a new world load a day or two ago...

TGQ@MIT-AI (Sent by GLS@MIT-AI) 02/22/79 02:42:37 Re: New keyboards, characters, etc.
To: (BUG LISPM) at MIT-AI, JLK at MIT-MC
CC: nil at MIT-MC
I note that the combination ': appears so often in LISP Machine code
lately that maybe that deserves its own character.  I therefore propose
that the earlier proposed character "waltz-time colon" (which is a comma
surmounted by two dots) have a dual, the "Spanish matching waltz-time
colon" (analogous to the upside-down ? and !), which would then look
like a colon surmounted by a quote mark.  Hence:
Sesquicolon	Waltz-time colon	Spanish matching waltz-time colon
					   **
  **		  **			  **
					 **
  **		  **
					 **
  **		  **
		 **			 **
		**

moon@MIT-AI (Sent by ___051@MIT-AI) 02/22/79 02:27:33
To: (BUG LISPM) at MIT-AI
When you transfer bands between different size disks (e.g. T-300 to T-80),
you have to manually adjust the size of SYS:FERE-AREA (I will fix this to
be automatic soon).  I've fixed the current bands on CADR's 2 & 3

HIC@MIT-MC 02/21/79 11:45:25
To: RMS at MIT-AI, (BUG LISPM) at MIT-AI
We will stop putting in TV-CLEAR-SCREEN when you make the who-line clear correctly.


BIM@MIT-AI 02/21/79 09:58:27 Re: sideways
To: (BUG LISPM) at MIT-AI
Could someone please add the routine, which, given a sideways font cah
output a screen vertically up the screen?
It appears to be somewhat hairier than i want to get into.
thanks.

RMS@MIT-AI 02/21/79 03:23:38
To: (BUG LISPM) at MIT-AI

    MOON@MIT-AI 02/17/79 04:53:27 Re: Windows
    (There is a copy of this message in the file AI: MOON; WIN >)

    I'd like to see the usual fashion for windows to be to have an outline (box) if and
    only if the window is not using the whole screen (excluding the who-line, i.e.
    SCREEN-{X,Y}{1,2}).  In the present situation, lisp listeners never have
    outlines, which is a problem when doing split screen hacking, and supdup
    and editor windows always have outlines, although usually they are the only
    thing on the screen, which just wastes scren space.

Actually, lisp listeners made the correct way do have outlines; only
the initial one fails to.  Conditional outlines as described here can
be got by changing the :EDGES<- and :MARGINS methods for
WINDOW-WITH-BOX-CLASS, I think.

    The initialization of windows has some problems, particularly with edges.
    The :BORN method for WINDOW-CLASS always clobbers the edges to the whole screen.
    I'd like to see an explicit protocol that specifying instance-variables in
    the :NEW message always over-rides defaults supplied by the :BORN method
    (that is, :BORN methods should be written to respect user-supplied initial
    values in the instance variables.)

Done, in the specific case.

    The default edges for a window should not be the whole screen; instead they
    should come from the Lisp listener window "under control of which" the window
    was created.

This might be convenient if windows were going to be created by the
user by typing (<- FOO-CLASS ':NEW) at a lisp listener, but I think
they should be created by something like JERRYB's menus.  If that is
the normal way of doing things, there will be no need for this
feature.

    PEEK and the who-line should be improved (in some unspecified way) to let
    you find out more about processes and windows.  There should be an escape W
    keyboard command as on ITS.

I have a PEEK that displays in a window that almost works.  If you
want to hack this, hack it instead.

    I think it would be easier to use the mouse for random graphic input (e.g.
    color editors) if there was a special form (WITH-MOUSE-FREE-OF-WINDOWS . body).
    Inside the scope of this, the mouse tracker process would track the mouse, moving the
    X cursor and updating the variables MOUSE-X and MOUSE-Y, but it would not
    do anything special for button clicking and would not give control to any
    windows the mouse happened to pass over.  This would be implemented as
    LET-GLOBALLY of a flag looked at by the mouse-process, plus a SETQ of
    MOUSE-RECONSIDER (is that what it's called?) and a MOUSE-WAKEUP to kick the
    mouse out of the control of any window it's in initially.

This is yet another job for a function to evaluate a special variable
in a stack group's environment.  Then it can be done by binding.

    I think I'd probably rather see labelled windows put their label outside
    the outline rather than inside as now.  Perhaps there should be a global
    variable that controls this?  I'd like to see a feature to have ragged
    edges on windows, in connection with the scroll bar (I think this once
    existed in EINE.)

I think only a couple of methods need to be changed for this:
:EDGES<- and :MARGINS in WINDOW-WITH-BOX-CLASS.
Rather than have a variable, I would ask the user just to redefine
them, just because there are only two of them.
(If we had a variable for the margins list, we could cut it down to
one).

RMS@MIT-AI 02/20/79 21:10:51
To: (BUG LISPM) at MIT-AI
Will people please stop putting (TV-CLEAR-SCREEN)
in LISP=REINITIALIZE?  It causes the windows which were
on the screen to be garbaged when they are saved.

MMCM@MIT-AI 02/20/79 12:03:40
To: (BUG LISPM) at MIT-AI
having an &AUX variable with the same name as an argument should be grounds for a
warning message.

MOON@MIT-AI (Sent by MOON0@MIT-AI) 02/20/79 06:59:09
To: (BUG LISPM) at MIT-AI
Classes are broken in the new world.  For instance, loading ZWEI;SCREEN twice
(causing a DEFCLASS to get done twice), gets an error in the middle of the
class system the second time, and at that point the class is screwed up
in such a way that trying to make a new instance also gets an error.

MOON@MIT-AI 02/19/79 22:43:17
To: (BUG LISPM) at MIT-AI
I've deleted CONSOLE.  I bet you didn't know that was still around!

BIM@MIT-AI 02/19/79 17:48:41 Re: the global package
To: (BUG LISPM) at MIT-AI
Not to flame, but i am beginning to suspect that entirely too many things have been put into
the global package. Every time i turn around, some perfectly harmless function written
by gjs needs to be shadowed or renamed. Perhaps instead just the minimal lisp kernal
should be defined in global, and some other package other than si (but with a similarly
short name) should be created to hold all of the lisp machine system functions.
This comment depended on si being defined as a place where regular users
should not go. If that is not the case, then all the functions should be documented
as to their home packages. Basically, when i get a message that CONSTRUCTOR
has been illegally defined, i begin to suspect that maybe JONL wasn't completely crazy.

Second flamish issue: global special variables.
They should have a funny character on the front. This will:
1) reduce the likelihood of getting them accidently [gee, i am a random simpleminded
programmed and i think i want a special var called top-window, lets setq it to nil...]
Long lists of reserved names are too hard to remember. A * or % of & or something on the
front would win. Better yet, GET THEM OUT OF THE GLOBAL PACKAGE. They are system
variables, they should be in a system package, not the GLOBAL package which should
only contain the lisp kernal. (to repeat myself)
2) Make it easier to read code containing them.

At the risk of being thrown from the building, perhaps a multicious training _ convention would
have prevented all this trouble?

bim

MOON@MIT-MC (Sent by MOON5@MIT-MC) 02/19/79 16:53:48 Re: Putting an experimental version of EINE in one package
To: BIM at MIT-AI
CC: (BUG LISPM) at MIT-MC

You can and it has been done.  The difference from Multics, which is
more fundamental than it sounds, is that you can't terminate,
which means you can't change references in programs to go from one version of
something to another.  You can't have explicit search rules
(as opposed to the implicit hierachical ones that exist now)
for complicated reasons that are explained in a file with a name
something like LMDOC;PACKD

RG@MIT-AI 02/19/79 09:56:25
To: (BUG LISPM) at MIT-AI
  MULTIPLE SUPERCLASSES WORK IN THE LATEST LOAD WITH THE LATEST MICROCODE!

BIM@MIT-AI 02/19/79 09:19:54 Re: Grindef on lisp machine
To: MOON at MIT-AI, BIM at MIT-AI
CC: (BUG LISPM) at MIT-AI
Subject to the following condition-- that you give me or point me at the canonical
lecture on why packages loose/Why there isn't a search order of packages such
that i could put, say, an experimental version of eine in one package and still
get the old one by an explicit specification, a la Multics -- I will be more
than happy to juice up the grinder. Just point me at the neccessary stuff.

GLS@MIT-AI 02/19/79 02:31:39 Re: Apropos of BIM's complaint
To: (BUG LISPM) at MIT-AI, (BUG LISP) at MIT-AI
As a rule of thumb, it would seem that you almost never want normal
grinding format if the car of a form is non-atomic; in 9 out of 9.7 cases
you usually want miser mode if it won't all fit on one line.  (COND, LET,
((LAMBDA ...) ...), DO are all cases in point.)  SO maybe GRIND should be changed foor this
as well as fixing it specifically for LET.

MOON@MIT-MC 02/18/79 17:27:00 Re: Grindef on lisp machine
To: bim at MIT-AI
CC: (BUG lispm) at MIT-AI
The lisp machine grinder was written before LET existed, so it doesn't
know about it and grinds it as if it were an ordinary function.  When
I get a chance I'll go through the manual and put all the special forms
listed there into the grinder's table.  You could probably figure out
how to do this yourself without much trouble if you feel like doing so
(if you do, please tell me, and please test it to make sure you haven't
broken it).

BIM@MIT-AI 02/18/79 13:58:43 Re: windows
To: (BUG LISPM) at MIT-AI
If i do the following...
1) Shrink top-window to half the screen.
2) Put a main-supdup-window, appropriately shrunk, in the other half...
The system has the winning feature that if i am in top-window and i get
input to my supdup, it activates that window and i wind up there, cursor,
blinker and all.
Unfortunately, if i then invoke the editor, when i exit the editor only
top-window gets exposed. My supdup stays buryied even though its area of the screen
is otherwise unoccupied.
At very least, when the editor returns all windows that were around when it
snarfed the screen should be exposed. If the editor is not running in its own
process (which is the case) then i suspect that the problem is that top-window
is reexposed only because the listener cares about it. 
Better yet would be for incomming stuff to the supdup to force the supdup window
on top of the editor's window(s). 
Failing that, there should be a way to restrict the editor to less that the full
screen so that a supdup could stay around the bottom (or top).

BIM@MIT-AI 02/18/79 13:50:09 Re: grindef
To: (BUG LISPM) at MIT-AI
I am told that my message about grindef was insufficiently specific.
Perhaps the behavior of the grinder on AI:BIM;lmplot > is not universal....
maybe i have a let with some flatsizes that somehow manage to freak it out.
But they do... it puts one s-exp too many on the first line of the let form
and then indents the rest to match. 

MOON5@MIT-AI 02/18/79 06:14:20 Re: Bumming excess memory references on CDR following CAR
To: (BUG LISPM) at MIT-AI
CC: GLS at MIT-AI
I have had this on my list of improvements for some time.  Haven't got around
to putting it in yet, though.  

MOON5@MIT-AI 02/18/79 06:12:15
To: (BUG LISPM) at MIT-AI
I have modified IOB's 3 and 4 to fix the bug that manifested itself
as Unibus interrupts to random addresses.  (Probably not as other bugs,
although possibly.)  This fix should be installed in all other IOB boards;
the wire-list is in the CADR#1 notebook as usual.

MOON5@MIT-AI 02/18/79 05:32:50
To: (BUG LISPM) at MIT-AI
If the logic analyzer attached to CADR2 triggers, please leave it triggered or
photograph the screen for me.  This logic analyzer is currently preventing the
bug with C-MEM and M-MEM parity errors on OA-modified instructions.

MOON5@MIT-AI 02/18/79 05:31:54
To: (BUG LISPM) at MIT-AI
The unboxed Chaosnet transceiver in 936, attached to CADR3 currently,
does not work reliably.  I tweaked it slightly and made it better.
I would set it up if I knew the proper procedure for doing so;
is this in a document someplace?

GLS@MIT-AI 02/18/79 05:19:37
To: (BUG LISPM) at MIT-AI
Not sure how important this is, but I note that certain microcode
routines might be made faster by avoiding needless redundant memory
references when a CAR and then a CDR is taken.  If the CAR of a memory
location has been taken, then presumably the needed CDR-code is available
and so need not be re-fetched.  If this is the case, then maybe
MEMQ, ASSQ, GET, SELECT-METHOD, etc. can be bummed some.

BIM@MIT-AI 02/17/79 11:44:39 Re: grindef and (let forms
To: (BUG LISPM) at MIT-AI
Loose somewhat. Couldnt it be at least as smart as the MacLisp grinder?

ALAN & JONL@MIT-AI (Sent by ALAN@MIT-AI) 02/17/79 10:46:06 Re: Namelists, Strings and Symbols
To: (BUG LISPM) at MIT-AI
	For MacLisp compatibility it would be nice if
namestrings and symbols were accepted in all the places that
strings are now.  We discovered that QC-FILE will not take a symbol
and that LOAD will not take a namelist. I thought all this filename
parsing was happening in the same place?

MOON@MIT-AI 02/17/79 04:17:44
To: (BUG LISPM) at MIT-AI
Note, if you get shafted by MAKE-AREA undefined function, do
	(GLOBALIZE 'MAKE-AREA)
	(LOAD "LISPM;QFCTNS")

MOON@MIT-AI 02/17/79 03:21:31 Re: DEFINE-AREA flushed
To: (BUG LISPM) at MIT-AI
In the next world-load, to be released very soon, the function DEFINE-AREA
will be gone.  It will be replaced by MAKE-AREA; documentation on the latter
can be found on-line in the manual via the tags file LMMAN; .LMMAN TAGS
(that dot is really there).  The new function takes keyword arguments,
lets you specify more things, and is intended to win for the garbage-collector.

BIM@MIT-AI 02/17/79 02:42:17 Re: a suggestion:
To: (BUG LISPM) at MIT-AI
Manifest constants:
It would be nice to have :
 1) a standard macro for defining numeric constants.
 2) a # readermacro to avoid parens when referencing them.

(constant foo 1212.)

(setq bar #Nfoo)

is the idea/

HIC@MIT-MC 02/17/79 00:46:53
To: (BUG LISPM) at MIT-MC
CC: GLS at MIT-MC
I am very impressed with GLS' proposal.  It seems to me very well thought
out, and to implement very much the right thing.  It deserves much consideration,
and hopefully will eventually be adopted in some form.


Date: 17 FEB 1979 0013-EST
From: GLS at MIT-AI (Guy L. Steele, Jr.)
Sent-by: GLS0 at MIT-AI
To: (BUG LISPM) at MIT-AI
CC: GJS at MIT-AI, CARL at MIT-AI, GLS at MIT-AI, rpg at SU-AI
CC: nil at MIT-MC, rz at MIT-MC

See AI:QUUX;LMFOO > for a rather long proposal to integrate
lexical scoping into the LISP Machine language, and unify
SCHEME lexical closures with the entity/instance/class stuff.
AI:QUUX;LMFOO RMS is a set of comments from RMS on an older
version of the proposal (AI:QUUX;LMFOO OLD), plus my replies.
Many of his suggestions were incorporated into the latest
version.
If some version of this proposal is adopted, it would
effectively make all the things that SCHEME users want to do,
plus the things the actors people want to do, a subset of
the total LISP Machine language.  Thsi would be a great boon.
Also included in the proposal is an analysis of situations
where lexical closures are better than dynamic closures, and
vice versa.

moon@MIT-AI (Sent by MOON5@MIT-AI) 02/16/79 22:47:51
To: (BUG LISPM) at MIT-AI
The following function fails to compile in band 5 on pack F (CADR2).
It gets an error in Lap because the same tag appears twice in the macrocode.
(defun farce ()
  (DO ()
      ((NULL AREA-LIST))
    NIL))
The error only appears for DO's that have empty variable-lists.

BIM@MIT-AI 02/16/79 20:53:40
To: (BUG LISPM) at MIT-AI
1) Why does <meta>-z always overpop the error handler?

2) Eine does not send an :expose message to all the windows that were exposed when it
snarfed the screen. this looses. If you hav an active supdup AND top-window only
top-window is restored.

bim

RG@MIT-AI 02/16/79 08:16:01
To: (BUG LISPM) at MIT-AI
  THE LISP MACHINE GROUP MEETING THAT WAS SCHEDULED FOR 8PM TONIGHT
IS CANCELLED DUE TO INADEQUATE PUBLICITY AND LACK OF NEED.
  NEXT MEETING NEXT WEDNESDAY AT 2PM.

moon@MIT-AI (Sent by BEE@MIT-AI) 02/16/79 06:31:12
To: (BUG LISPM) at MIT-AI
Note that almost all support for 16-bit (Unibus) TV's has been removed
from the system; it is my intention to remove any that remains.  If anyone
has one of these TV's stashed away someplace, please squawk now.

MOON@MIT-AI (Sent by BEE@MIT-AI) 02/16/79 06:29:39
To: (BUG LISPM) at MIT-AI
Someone broke LISTARRAY, apparently in the process of fixing the bug that
it didn't accept a symbol as argument.  They deleted the optional argument
that it was documented to take.  I put it back.

BEE@MIT-AI 02/14/79 23:54:28
To: (BUG LISPM) at MIT-AI
CADR 1 TOOK A UNIBUS TRAP THROUGH VECTOR 774!!!

GLS@MIT-AI 02/14/79 18:25:40
To: (BUG LISPM) at MIT-AI
CC: GLS at MIT-AI
Maybe there should be a standard function called BUG
which takes a string argument and mails it to BUG-LISPM
along with some pertinent information like the current
version numbers of everything (which presumably ought
to be lurking in memory somewhere anyway).  This would
make it much easier to report most LISPM bugs in a
uniform manner.

HIC@MIT-MC 02/14/79 16:04:09
To: (BUG LISPM) at MIT-MC

Please do not turn off the color monitor.  It seems that it likes to
be warmed up to work best, and turnning it on and off probably isn't too
good for it.  If it isn't sync'ed for one reason or another, simply
push the "crosshatch" button in the lower-left front and that will blank the screen.

Thanks.


HIC@MIT-MC 02/14/79 13:29:08
To: RMS at MIT-AI, (BUG LISPM) at MIT-AI
Well, perhaps it should be standard practice to state the microcode, pack, and band
as they are not all running the new software at the same time.  I had expected
them to be, but....

I had no chance to look at the bug, though of course I will.  As a matter of
fact, as you say, it was fairly trivial to find a manifestation of it!
I never said or implied that I would not, don't blame me because
you are paranoid.

I will attempt to find the bug pronto.

--howard


RMS@MIT-AI 02/13/79 20:32:19
To: HIC at MIT-AI, (BUG LISPM) at MIT-AI

    HIC@MIT-MC 02/13/79 17:54:02

        RMS@MIT-AI (Sent by RMS0@MIT-AI) 02/13/79 02:17:42
        Prolonged SUPDUP'ing just used up all virtual memory in MAKE-PKT!
        Before that, I reloaded the machine because it was out of virtual memory.
        It had been used a lot for SUPDUP'ing prior to that.
    ------
    Next time something like this happens, please tell me the pack and the band so that
    I may look at the correct version of the software to track down the lossage.
    As it is, I do not know which version (new or old) was running at the time.

It is not normal practice for users who find bugs in the current band
to spell out explicitly which band was current, so why the sudden
demand for it?  Nor do I think there is reason to ask them to.
What's the chance that someone will install a new band with any change
that is relevant to the problem and you won't know?
If I had reloaded a band other than the current one I would have said
so.  If you had just looked in the most obvious possible place and
tried the current band on whatever pack was loaded you would have
found the problem.

Since you wouldn't look into it, I just looked into it myself.  It was
harder for me than it would have been for you, because I wasn't sure
how and where packets were linked, and because describe has a bug
whereby it doesn't tell about all of the components that the packet
has, which made it harder for me to find out where to look, but I
eventually managed to determine that there were 840. packets on
MADE-PKTS.  A minute or so of slow typing at SUPDUP was enough to
gobble a whole region of working-storage.  This is as much as I know
how to find out.  I hope you will be willing to look further.

The problem occurred on CADR 2.  I didn't mention this since I was
under the impression that the new software was on all machines (you
said "I have just installed it", period).  However, this information
also should not have been necessary for you to investigate.

Finally, when I left the machine last night I left it in the state of
manifesting this bug (not completely full, but most of the space used
up from SUPDUPing) with a comment on the screen as to what was wrong
and that someone should look into this.  If anyone wiped it out
without investigating it sufficiently, that was very irresponsible.

HIC@MIT-MC 02/13/79 17:54:02
To: RMS at MIT-AI, (BUG LISPM) at MIT-AI

    RMS@MIT-AI (Sent by RMS0@MIT-AI) 02/13/79 02:17:42
    Prolonged SUPDUP'ing just used up all virtual memory in MAKE-PKT!
    Before that, I reloaded the machine because it was out of virtual memory.
    It had been used a lot for SUPDUP'ing prior to that.
------
Next time something like this happens, please tell me the pack and the band so that
I may look at the correct version of the software to track down the lossage.
As it is, I do not know which version (new or old) was running at the time.


TK@MIT-AI 02/13/79 10:37:03
To: (BUG LISPM) at MIT-AI
the +5 volt supply in cadr 1 is shot.  I believe the spare is in #5.  It is
not the fuse which is gone.  It might be the fan, but I doubt it.

RMS@MIT-AI (Sent by RMS0@MIT-AI) 02/13/79 03:16:06
To: (BUG LISPM) at MIT-AI
ASSQ-CAREFUL seems pretty useful.
Maybe ASSQ should be redefined to do that.

RMS@MIT-AI (Sent by RMS0@MIT-AI) 02/13/79 02:17:42
To: (BUG LISPM) at MIT-AI
Prolonged SUPDUP'ing just used up all virtual memory in MAKE-PKT!
Before that, I reloaded the machine because it was out of virtual memory.
It had been used a lot for SUPDUP'ing prior to that.

RMS@MIT-AI (Sent by RMS0@MIT-AI) 02/13/79 00:05:47
To: (BUG LISPM) at MIT-AI
An attempt to write in a read-only area goes to illop.
There is no simple way to make the page writeable.

RMS@MIT-AI 02/12/79 18:47:27 Re: New SELECT madness
To: (BUG LISPM) at MIT-AI
Look in HIC;MADNES > for the function SELECT-MADNESS,
a new way of defining functions.

MOON@MIT-AI 02/11/79 19:04:09 Re: HIC is always getting fucked over
To: (BUG LISPM) at MIT-AI
In the next system, the microcode files will be renamed as follows (these changes
have all been made in source but not installed yet):
	LCADR; UCADR nnn	- source file
	LISPM1; UCADR nnnMCR	- microload file
	LISPM1; UCADR nnnTBL	- error table file
	LISPM1; UCADR nnnSYM	- symbol table file
So no important files will be deleted except by explicit action.  Note that
people should be careful when cleaning up the LISPM1 directory not to delete
files which are still being used by some machine.

HIC@MIT-AI 02/11/79 13:52:01
To: (BUG LISPM) at MIT-AI
I am constantly getting fucked over because people destroy microcode
symbol tables that are needed for a microcode that is running on
one machine or another.  PLEASE DO NOT DELETE ANY MICROCODE
SYMBOLS WITHOUT FIRST CHECKING.  Remember that an assembly destroys the
old symbol table file.

MOON@MIT-AI 02/11/79 02:38:48 Re: Loading microcode
To: (BUG LISPM) at MIT-AI
If you load the latest version of LMIO;DISK, it contains a new function
SI:LOAD-MCR-FILE which will let you load a microcode binary file onto
your own machine's disk.  You can then use SET-CURRENT-MICROLOAD and reboot
to test it.  (If it doesn't work at all, you need another machine to
set the current microload back so you can use the machine again!)

MOON@MIT-MC 02/09/79 04:34:03 Re: Memory parity problem
To: (BUG lispm) at MIT-AI
Has been fixed.  The weird C- and M- parity halt on CADR2 I did some work
on, but it went away again before I could track it to its lair.


Date: 8 FEB 1979 2335-EST
From: DLW at MIT-AI (Daniel L. Weinreb)
To: (BUG LISPM) at MIT-AI
CC: BSG at MIT-AI

Important announcement: ZWEI now supports Electric PL/I mode!  Progress
marches on.

HIC@MIT-MC 02/08/79 13:29:09
To: (BUG LISPM) at MIT-MC
Look slike the 10-11 on CADR1 may be fuxked.
CC program on -10 doesn't seem to like to talk to it, but it
boots fine....therefore, it was immpossible to look at a
C-mem parity error which it had.


DLW@MIT-AI 02/08/79 01:15:58
To: (BUG LISPM) at MIT-AI
The error table entry at XDPB+1 in the microcode referred the error handler
to the PDL INDEX.  This doesn't work, as the PDL INDEX's state is not saved
in the stack group.  I fixed it by putting the value into an M memory
location (in the same microinstruction) so that the error handler could find
it.

HIC@MIT-AI 02/07/79 23:56:51
To: (BUG LISPM) at MIT-AI
I am currently grossly hacking the chaosnet stuff to use the new microcode
stuff and also to clean it up in general.  If you hack LMIO;CHAOS, please
drop me a note and I will make appropriate changes into the stuff I am hacking.

Thanks.

MOON5@MIT-AI 02/07/79 15:40:34 Re: Interlisp conversion (balzer)
To: (BUG LISPM) at MIT-AI
I don't think it would make sense for us to do any work whatsoever
on Interlisp at this point.  If it comes to the point where an
Interlisp using place wants some machines, they should pay for
somebody to write the compatibility system.  Software is not free!

MOON5@MIT-AI 02/07/79 15:17:36
To: (BUG LISPM) at MIT-AI
I forgot to bug-lispm this before, but all memory boards
are now at identical modification levels and contain all
known modifications, except for the super-fast refresh,
which has been flushed.  I guess we'll try and figure out
whether they work over the next few days.

RG@MIT-AI 02/07/79 08:51:35
To: (BUG LISPM) at MIT-AI
There will be a meeting of the LISP machine group at 2:00 pm
wednesday feb 14.  The purpose is to exchange views and
hopefully improve communicationa and coordination with the group.
If it seems useful, these meetings might
develop into a regular thing. 

DLW@MIT-AI 02/07/79 01:35:23
To: RMS at MIT-AI
CC: (BUG LISPM) at MIT-AI

    RMS@MIT-AI 02/06/79 20:26:17
    The ^XO bug has been fixed.

    If you try to do ^XO in the minibuffer, however,
    it screws up and leaves no window selected.
    This is the fault of ED-CHECK-TOP-LEVEL.
Really?  All CHECK-TOP-LEVEL is doing here is calling ED-BARF.
I have no idea why this fails, but it is clearly not hanging the
processor since the mouse still tracks; I take it the
relevant process has been stopped.  Before the new screen software
this worked fine, and I have no idea how to fix it.

Date: 6 FEB 1979 2234-EST
From: DLW at MIT-AI (Daniel L. Weinreb)
Subject: Reading and printing numbers
To: GLS at MIT-AI, (BUG LISPM) at MIT-AI, s1arch at SU-AI
To: nil at MIT-MC

Interestingly, the Lisp Machine has always printed numbers by
negating them first, etc.  RG thought of this when he first wrote
the thing over three years ago.

HIC@MIT-AI 02/06/79 14:23:31
To: (BUG LISPM) at MIT-AI
In the most recent world, ^XO in EINE has the problem that
it gets stuck in one particular window and refuses to change.

It seems that it is not consistent which window it decides to
not budge from.  I have seen it in 2 window mode stick in both
the upper and lower window.

RMS@MIT-AI 02/06/79 01:12:47
To: (BUG LISPM) at MIT-AI
I think I have fixed the remaining compiler bug mentioned by RG
so that (LET ((FOO FOO)) ..) will correctly barf FOO special
and more complicated such cases will say that you will lose.
I have an idea for making them all win by deferring decisions
on specialness till the end of pass 1, if anyone thinks it's worth it.

HIC@MIT-MC 02/05/79 22:41:57 Re: Shuffling of memory boards.
To: MOON at MIT-MC, BEE at MIT-AI
CC: (BUG LISPM) at MIT-MC
The best thing to do is to write it down in the error log in the appropriate
place, and send a note on it (the log is again hanging on the wall under
the page speaker).

I see you put mem 3 back into CADR2.  We didn't want to do that.  What
we wanted to do was to let mem 4 be the only memory in a machine and
see if lossgae occurs.  If not, Holloways mods were useful and
we should modify the other boards.  I don't care which machine that board is in,
but it will (of course) have to be a 64k machine for a little while.



MOON@MIT-MC 02/05/79 18:05:30 Re: Shuffling of memory boards.
To: BEE at MIT-AI
CC: (BUG LISPM) at MIT-MC
That was me.  I was trying to put together a machine that didn't get
parity errors so I could get some work done (I eventually did, by adjusting
the grossly low +5 supply on CADR2).  I would have written down the change
if there was a place to write such things down.

BEE@MIT-AI 02/05/79 10:25:50
To: (BUG LISPM) at MIT-AI
Will whoever shuffled the memory boards in CADR 2 and CADR 3, please dont do it without
telling people. I wasted a lot of time this morning looking at a problem that I already
knew about, because someone had moved the board that H had modified to CADR 2 from
CADR 3.

MOON5@MIT-AI 02/05/79 04:42:19
To: (BUG LISPM) at MIT-AI
Another bug in the latest compiler.  Test case:

(declare (special sp))
(defun foo () (let ((sp sp)) sp))

Gets an error while trying to compile.

cent@MIT-AI 02/05/79 04:24:44 Re: helpful hands
To: (BUG LISPM) at MIT-AI
To whoever thought he would be helpful by dumping the tubes of chips, which i brought from the
stockroom but didn't put away before i left last night (sun morning), into the appropriate
chip drawer: well, you tried.	
It took me an extra fifteen minutes to sort out the three different types of chips i had 
brought in, which you put all in the same drawer. The two sorts which didn't belong in that
drawer were a different size from the sort that did belong there, too. Thank you for your
enthusiastic assistance, but next time please try to be a little more observant.
									Penny

MOON@MIT-AI (Sent by MOON0@MIT-AI) 02/05/79 01:33:22
To: (BUG LISPM) at MIT-AI
Someone changed the arguments to READ-FROM-STRING without changing the
callers of this, thereby breaking the meta-. command in the editor.
I will attempt to fix this lossage and update the documentation.

RMS@MIT-AI 02/04/79 21:25:14
To: (BUG LISPM) at MIT-AI
MMCM's bug is fixed in QCP1 QFASL.

Date: 4 FEB 1979 1944-EST
From: GLS at MIT-AI (Guy L. Steele, Jr.)
Subject: Reading and printing numbers
To: (BUG LISPM) at MIT-AI, s1arch at SU-AI, nil at MIT-MC

In this month's SIGPLAN Notices is one of those "popular computing how-to"
items like my flaming "Arithmetic Shift" paper which points out one
of those trivial "how to do it right" things that yoou kick yourself
for not thinking of it.
The trick described is when reading a signed integer, how do you deal
with the most negative integer?  For sixteen-bit words, for example,
if you read "-32768" in the usual way of noting the "-", then reading
"32768" and negating it, you find that reading "32768" overflows and
you lose big in some situations.
James Low suggests simply reading the number in negative form, then
negating if the "-" was NOT seen.  Thus:
RESULT := 0
while "moredigits" do
	RESULT := RESULT *10 - [NOT +!] "nextdigit"
if "sign" is positive then RESULT := - RESULT
This correctly accumulates all valid numbers without overflow.

The article did not say so, but I note that the same holds true
for printing:
if NUM < 0 then print("-") else NUM := - NUM
repeat
	NUM, DIGIT := DIVIDE(NUM, 10)	[usual, i.e. FORTRAN-style, divide]
	print("0" - [NOT +!] DIGIT)
until NUM = 0

ALAN@MIT-AI 02/04/79 07:50:02
To: (BUG LISPM) at MIT-AI
No one should recompile LMIO;READ PRINT RDTBL or RTC for a few days.
(I'm too burned out to finish what I started.)

BEE@MIT-AI 02/03/79 05:41:29
To: (BUG LISPM) at MIT-AI
The T300 is up and running on CADR 1. It is however running at what can best be described
as a marginal new world load. The bands on the T300 are much larger than on the T80, and
therefore will take much longer to reload. This should be fixed in new microcode coming
along in a few days. The CADR software determines the disk type upon loading, and 
will remember it, so that if you switch back the drives, you will have to reload your
CADR job. Also T80 CADR PACK D does not have the most recent microcode, which figures
out what kind of disk a machine has from the label. It should work, but should be replaced
with the most recent microcode when someone gets a chance.

MOON@MIT-AI 02/02/79 20:56:27
To: (BUG LISPM) at MIT-AI
Whoever recently modified LMIO;FILE broke the ten/11 interface version.
We still use this as part of the cold-loading process.  Please fix it.

DLW@MIT-AI 02/01/79 13:13:44
To: CWH at MIT-AI
CC: (BUG LISPM) at MIT-AI

    CWH@MIT-AI 02/01/79 07:04:34
    It would be very nice if, for those of us used to using vt52's, you would
    make Control-I be the same as TAB in the default EINE (or ZWEI) environment.
    (at least in Lisp mode)
However, it would tie up one very-easy-to-type key FOREVER, since once
people are used to tabbing with control-I, they would complain bitterly
were it removed.  My policy has been to try NOT to put the same
command on more than one key, so as to save room in the command set for
future improvements.  If enough people complain we can make Control-I
indirect to Tab, but I think it would be a waste.

BEE@MIT-AI 01/31/79 15:36:25
To: (BUG LISPM) at MIT-AI
Someone changed LISTARRAY to not work in the case of
(LISTARRAY 'BAR). This has now been fixed.

RMS@MIT-AI 01/31/79 04:03:34
To: (BUG LISPM) at MIT-AI
The compiler is now nearly optimal about whether to
generate initializations for variables at function entry.

MOON@MIT-AI 01/30/79 21:52:59
To: (BUG LISPM) at MIT-AI
Will whoever has been deleting the source copies of files
such as LISPM;QFCTNS that correspond to the current QFASL please cease
and desist at once?

MOON@MIT-AI (Sent by ___016@MIT-AI) 01/28/79 03:26:22
To: (BUG LISPM) at MIT-AI
Compiling (DEFUN FOO (X) (DECLARE (FIXNUM X)) (1+ X))
results in a run-time call to DECLARE.  This seems poor.

RG@MIT-AI 01/27/79 23:41:07
To: (BUG LISPM) at MIT-AI
  SEVERAL PEOPLE HAVE POINTED OUT THE NEED FOR SOME SORT OF
PERODIC GROUP MEETING TO IMPROVE COMMUNICATION WITHIN THE GROUP.
I THINK THIS IS A GOOD IDEA AND SOLICT COMMENTS AS TO WHEN THE
MEETINGS SHOULD TAKE PLACE (WEDNESDAY OR THURSDAY AFTERNOONS
SEEM MOST PLAUSIBLE TO ME).  THE MEETINGS SHOULD PROBABLY
BE WEEKLY TO START, POSSIBLY SWITCHING TO BIWEEKLY IF WE
DECIDE COMMUNICATION WITHIN THE GROUP HAS BECOME TOO GOOD.

MOON@MIT-AI 01/27/79 22:39:00
To: (BUG LISPM) at MIT-AI
mods were missing from IO boards 2, 4, and 5, which is why
the problem dlw reported earlier happened.  I installed the mod. 

DLW@MIT-AI 01/27/79 21:06:05
To: (BUG LISPM) at MIT-AI
CC: HES at MIT-AI
Compilations on the CADR2 have not been working for a while.
HIC and I have traced this to a bug in IO board #5, which I have removed
from CADR2 and replaced with IO board #3 from CADR3.  We do not know
the nature of the bug, just the symptom.  Ask us for further details.

MILLER@MIT-AI 01/27/79 19:57:56 Re: #+<mumbles>
To: JONL at MIT-MC, (BUG LISPM) at MIT-MC, NIL at MIT-MC

Sigh.  Is all this syntax really necessary?  I vote for RMS's suggestion to
use (STATUS ...)  on those grounds alone.  Leave the invention of typing
shortcuts via hairy syntax such as splicing character macros to the !"#$%&
individual loser.

Mark



Date: 27 Jan 1979 1454-PST
From: Guy Steele <GLS at SU-AI>
Subject: #+  
To:   bug-lispm at MIT-AI, nil at MIT-MC   

After the (STATUS CHTRAN ...) fiasco I'm a little reluctant to define #+
to do a general EVAL except when the thing is a symbol and then be different.
I might suggest that the thing after #+ be required always to be a symbol
except that T always succeeds and () always fails.  Then to get general
evaluation one can do #+#,...



Date: 27 JAN 1979 1648-EST
From: JONL at MIT-MC (Jon L White)
Subject: #+<mumbles>
To: (BUG LISPM) at MIT-MC, NIL at MIT-MC

How about #+<symbol>  be equivalent to 
#+(STATUS FEATURE <symbol>) 
and in general, non-atomic arguments would merely be EVAL'd


Date: 27 JAN 1979 1645-EST
From: CWH at MIT-MC (Carl W. Hoffman)
To: (BUG LISP) at MIT-MC, (BUG LISPM) at MIT-MC

As Moon pointed out, the #+ scheme does not enable the inclusion of a form
conditional upon the presence of more than one feature (i.e. logical "and") and
logical "or" can only be done by the clumsy #+NIL <form> #+LISPM <form>.
Unless there are any objections, I'd like to adopt the
#+(AND <feature> <feature>) and #+(OR <feature> <feature>) for this purpose.


HENRY@MIT-AI 01/27/79 14:07:52 Re:  # read-time conditionals
To: (BUG LISPM) at MIT-AI, JONL at MIT-AI
More generally, how about a read-time conditional 
which took a form, evaluated it, and included the
following form only if the first evaluated true.

RMS@MIT-AI 01/27/79 02:04:33
To: (BUG LISPM) at MIT-AI
1) C-M-C-M-Return clobbers the default filename.
2) Restarting out of a QC-FILE seems not to reset everything,
so that it thinks that (SPECIAL FOO) should go on the local declaration list
instead of having permanent effect.

RMS@MIT-AI 01/26/79 15:53:45
To: (BUG LISPM) at MIT-AI
I have created ARRAY-GROW which takes (array &rest dimensions)
and changes the size of the array.  It works on multidimensional
arrays but makes no attempt to avoid copying except on unidimensional ones.

Date: 26 JAN 1979 1445-EST
From: MOON at MIT-MC (David A. Moon)
To: (BUG LISP) at MIT-MC, (BUG LISPM) at MIT-MC

#+MACLISP #+ITS (mumble) doesn't work, if you're not on a MACLISP
and also not on an ITS.  Perhaps the syntax #+(MACLISP ITS) would
be appropriate.  Or maybe AND or OR should appear at the front of the list.

RMS@MIT-AI 01/26/79 01:30:58
To: (BUG LISPM) at MIT-AI
The documentation on windows has been updated and is in
LMDOC;WINDOW >.

HIC@MIT-MC 01/25/79 19:36:13 Re:  I'm taking up a collection (or, "alms for the poor!!")
To: (BUG LISPM) at MIT-MC
CC: JLK at MIT-MC
In order to satisfy the desire for information on both the chaos
net and the Lisp Mchine, I am collecting a list of all documents
pertaining to them.  If you have a document that you think even
breethes on one of these topics, please drop me a pointer
to the file:  EVEN THINGS OF MARGINAL VALUE WILL BE APPRECIATED.
If only the author sends me a note, I wont get too many duplicate
files.

Also, I am interested in pointers too all of the currently working
chaosnet ncps.  If you have wroitten one, please drop me a note about
this too.


Thanks for your cooperation which I know will be enourmous.

--Howard


JONL@MIT-MC 01/25/79 15:43:47 Re: #+<feature>
To: CWH at MIT-MC, (BUG LISPM) at MIT-MC
CC: JPG at MIT-MC, RZ at MIT-MC
Well, the NIL syntax had planned to use  #+  and  #-  as
positive and negative infinities, but this is certainly flexible;
maybe  #I+  and  #I-  would do.  But there is a more important
screw -  #Q  already means "number-string in base octal";  there
seemed to be good reason to choose "Q" as this character, by 
historical precedent, just as   #X  means "number-string in base hex".
I suppose that #Q could be changed in NIL, but this does seem to show
the importance of being cooperative on these features that are likely
to be in all shared files.  Would it be possible to get this corrected
before anymore clashes occur?  One way out would be to adopt CWH's
proposal so that existing shared software would use  #+LISPM  instead
of #Q;  and parochial software could continue to use whatever private
conventions it wanted.
   Apologies for the duplication that will probably occur in this
mailing, but this seems an important enough matter to be sure that
everyone gets it.   The current NIL proposal for # admits the following
character as special when immediately after it (excluding + and - for now):
   "  (  *  ,  0 1 2 3 4 5 6 7 8 9  :  =  ?  B  L  Q  T  X  ^  


CWH@MIT-MC 01/25/79 02:27:13
To: (BUG LISPM) at MIT-MC
CC: JPG at MIT-MC, RZ at MIT-MC, JONL at MIT-MC
If any changes are made to the files AI:LISPM2;LMMAC and AI:LISPM2;MACROS,
please move the new copies to mc as well, and vice versa.


CWH@MIT-MC 01/25/79 01:58:46
To: (BUG LISPM) at MIT-MC
CC: JPG at MIT-MC, RZ at MIT-MC
Would anyone object to adding the following capability to the # macro:

#+<feature> <form> -- would make <form> exist if (status feature <feature>)
		      were t, and

#-<feature> <form> -- would make <form> disappear if (status feature <feature>)
		      were t.

For example, #+LISPM would be equivalent to #Q.  This would allow a
generalized feature inclusion/exclusion facility (similar to that provided
by #m and #q) which would be user extensible by means of
(sstatus feature <feature>).


ALAN@MIT-AI 01/25/79 01:36:09
To: (BUG LISPM) at MIT-AI

While fixing the # macro in LISPM2;MACROS I noticed that it
had lost some features from the last time I had looked at
it. Someone had modified an old version and written it back
to LISPM2 without checking to see if any new features had
been added since they get thier copy. Please be more
carefull about this sort of thing. There has been a lot of
activity with these macro files and I would hate to lose any
new features due to old versions of files reappearing. 

ALAN@MIT-AI 01/25/79 00:57:50
To: CWH at MIT-MC
CC: (BUG LISPM) at MIT-AI, (BUG LISP) at MIT-AI

    CWH@MIT-MC 01/24/79 21:50:24
    Is there any reason why the # reader macro in LISPM2;MACROS can't be
    rewritten to win on toplevel forms when used as #m or #q?  The reason
    it loses right now is that it reads the form following the #m regardless
    of whether it is running in maclisp or on the Lisp Machine.  Can't it decide
    beforehand?

This is because the # macro is a splicing macro (it has to
be in order to make #q and #m work). MacLisp ignores all
splicing macros at top level.  I suggested (because of a
similar problem with using # after a "." as in (#/a . #/z))
that when a splicing macro returns a list of one thing it
should be treated as if it was non-splicing. This was
adopted for the case of being after a dot (since previously
it had errored out in a wierd way) but it was left the same
at toplevel.

I will change the # macro to work at toplevel by not reading
the next form untill it is sure it wants to make it go away,
but I should say that this is somewhat of a kludge since it
means that this all splicing macros can do at toplevel. (It
would be impossible to have a splicing macro that DID
something to the following form work at toplevel.) 

CWH@MIT-MC 01/24/79 21:50:24
To: (BUG LISPM) at MIT-MC
Is there any reason why the # reader macro in LISPM2;MACROS can't be
rewritten to win on toplevel forms when used as #m or #q?  The reason
it loses right now is that it reads the form following the #m regardless
of whether it is running in maclisp or on the Lisp Machine.  Can't it decide
beforehand?


DLW@MIT-AI 01/24/79 17:34:48
To: RMS at MIT-AI, (BUG LISPM) at MIT-AI

    RMS@MIT-AI 01/24/79 10:52:42
    There is a 936 key in TC's office again
    but that's because I got a new one and put it there.
    As far as I know the old one is still missing.
There are TWO keys there, both the old and the new one.  When I sent
my message, there was only the old one.

JONL@MIT-MC 01/24/79 15:36:36 Re: MACROS etc.
To: (BUG LISPM) at MIT-MC
The various conditionalizing macros found in LMMAC, such as
IF-IN-LISPM and IF-FOR-MACLISP  need to bee accessed by both
the LISPM stuff and various MACLISP programs intended to be
compatible.  I extracted them from LMMAC and put them in a file
LISPM2;IFMAC >  -  would it be appropriate to remove them from
LMMAC and change the coldloader to get them from IFMAC.
   Also, there is still pending the suggestion to take the 
MACLISP  LET package, which is intended to be compmatible for
all of LISPM, MACLISP, and NIL.  If this is done, then the
MACLISP  DEFMACRO package, which is a slight extension of the
existing LISPM one (in that it allows destructuring of arguments),
could be used too.


JLK@MIT-AI 01/24/79 12:28:29
To: (BUG LISPM) at MIT-AI
(1) in the editor, META < causes the machine to go into an infinite loop.
    (this is on machine 4).

(2) There should be an editor command to list the current font assignments and
    also the currently loaded fonts.

(3) There should be a way to send mail (bug or otherwise) from the LISP machine.
    (preferably, ^XM in the editor)

RMS@MIT-AI 01/24/79 10:52:42
To: (BUG LISPM) at MIT-AI
There is a 936 key in TC's office again
but that's because I got a new one and put it there.
As far as I know the old one is still missing.

DLW & ED@MIT-AI (Sent by DLW@MIT-AI) 01/24/79 01:19:40
To: (BUG LISPM) at MIT-AI
When you give the FILE job a filename with too many syllables,
it gets to a .VALUE at FNR1+16.  This really is not what it should
do; the resulting effect on the user is that his machine hangs
forever, mysteriously.

DLW@MIT-AI 01/23/79 22:33:51
To: (BUG LISPM) at MIT-AI
The 936 key is back in TC's office.

DLW@MIT-AI 01/23/79 20:31:12
To: (BUG LISPM) at MIT-AI
MMcM and I fixed the bug I reported in SI:FILE-WRITE-FINISH.
The problem was actually in the FILE job.

DLW@MIT-AI 01/23/79 00:30:03
To: (BUG LISPM) at MIT-AI
SI:FILE-WRITE-FINISH just got an error in the call to SUBSTRING
that is made when the first character of STR is not a colon.
The error was that the third arg to SUBSTRING was a -1, indicating
that STR was a null string.  Now STR seems to be a reply code, and
the third arg is one less than the array-active-length of the string,
so I conclude that the string was zero length and so the check
of the first character natuarally did not produce a colon.  Unfortunately,
when I went in to look at the string I was the string
":GO-AHEAD
", which as far as I can see should not have caused that error.  Is
STR a string that can be "changed out from under you" by asynchronous
action?  (There was an interesting bug once in which such a string
got interned...)

RMS@MIT-AI 01/22/79 21:44:27
To: (BUG LISPM) at MIT-AI
I have updated the process documentation,
which is now in LMDOC;PROCES >.

RMS@MIT-AI 01/22/79 02:11:04
To: (BUG LISPM) at MIT-AI
There is no longer a key to 936 in TC's office.

JOHAN@MIT-AI (Sent by JOHAN0@MIT-AI) 01/21/79 15:13:21 Re: MACLISP compatibility
To: (BUG LISPM) at MIT-AI
(1)When HUNKS are translated to ARRAYS, any atom tests on them have to be changed
   since ATOM(HUNK) is NIL, while ATOM(ARRAY) is T.  This is not a bug,
   but something to watch out for.
(2)Why doesn't compiler ignore (declare (flonum x)) instead of erroring out? foo!
johan

JERRYB@MIT-AI 01/21/79 13:05:48 Re: EINE's edit windows and bitblting
To: (BUG LISPM) at MIT-AI

    ACW@MIT-AI 01/20/79 06:16:08 Re: More problems with screen

	...

    It's clear that a lot of this bittling was not clearly thought out before it
    was implemented.  I'm sure the errors should go on the editor's screen: that way
    you could look at errors and code simultaneously.  But if that were done then
    (as things are now) they would be permanently emblazoned on your editor screen,
    until you could convince the editor to do a redisplay.  This is getting harder lately.
    For example, <form> doesn't redisplay, it just bittles.

The compilation errors as well as a lot of other information doesn't
go on the currently selected buffer's window (I assume thats what you
mean by editor's screen) because it doesn't logically belong there.
Putting it in a window of its own, as is done now, seems a reasonable
way of doing things because that window can be exposed and thus viewed
along with a buffer's window.  There is no clear way of manipulating
these two pieces of information if they occur in the same window.

In general, the editor was written when screen management was done one
way and now it is done differently.  Problems should be expected as we
determine what comprises a good screen management package.  It doesn't
make much sense to expend too much effort on EINE given ZWEI will be
on the scene soon(?).  None of this stuff is ready for general use, so
a little patience is in order. 

RMS@MIT-AI 01/20/79 22:14:46
To: (BUG LISPM) at MIT-AI
I have fixed the problems with C-L in EINE.
WINDOW-COMPLETE-REDISPLAY now cleans and updates
the exposed windows abd blt's back only the partially visible ones.

ACW@MIT-AI 01/20/79 06:16:08 Re: More problems with screen
To: (BUG LISPM) at MIT-AI
When there are compilation errors while compiling a buffer, the error messages
are thrown up on a (nearly) blank screen.  Then as soon as the compilation
is doen these are bit-blitted away so that you never have more than ten seconds
to look at your compilation errors.  Then, peculiarity of peculiarities, when
you re-enter the editor these errors are displayed AGAIN for a few seconds before the
original editor buffer is bittled in.  Why are these messages put on a screen
of their own?  It is not possible to view this "universe between" for long enough
to read the words "While compiling...", much less understand the errors.

It's clear that a lot of this bittling was not clearly thought out before it
was implemented.  I'm sure the errors should go on the editor's screen: that way
you could look at errors and code simultaneously.  But if that were done then
(as things are now) they would be permanently emblazoned on your editor screen,
until you could convince the editor to do a redisplay.  This is getting harder lately.
For example, <form> doesn't redisplay, it just bittles.

DLW@MIT-AI 01/19/79 22:38:01
To: (BUG LISPM) at MIT-AI
The Control-L command in EINE seems to have been changed to
BITBLT the screen, rather than redisplay it.  This is a real
loss, as Control-L really is supposed to re-create the screen
no matter what.  As ACW reported, the current effect is that
if garbage appears on your screen (e.g. an error happens in the
editor, and the error handler types stuff out), Control-L
will not make it go away.  Furthermore, Control-L no longer
recenters the window at all!  I don't exactly see how this
happened but it looks like it must be because of the new
screen package's being installed.

DLW@MIT-AI 01/19/79 20:24:18
To: (BUG LISPM) at MIT-AI
I just got screwed again because SYS:UNDO-DECLARATIONS-FLAG was left bound to T,
which causes MACRO to quietly not work.  I have put a setq of this into the
source of LISP-REINITIALIZE.  Isn't it possible to lambda-bind in this
Lisp machine without screwing everything (i.e. can we ever get a general
solution to this problem)???

ACW@MIT-AI 01/19/79 05:16:42
To: (BUG LISPM) at MIT-AI
The flashing paren hack is inoperative just after you enter EINE.  Even if the cursor
is just to the right of a ), the corresponding ( refuses to flash until you do something
in the editor.

ACW@MIT-AI 01/19/79 02:30:08 Re: Now for the bad news...
To: (BUG LISPM) at MIT-AI
   A c-m-c-m-<ret> does *not* suffice. A c-m-c-m-<rubout> is needed to eliminate
these editor screen crufties.

ACW@MIT-AI 01/19/79 01:59:15 Re: Maybe you people know this already but...
To: (BUG LISPM) at MIT-AI
   The ability to restore the screen using fancy bit-BLTs seems to have created
some bugs.  In particular, when ED makes some transgression like handing erroneous
code to the compiler or trying to send a file to ITS when CHAOS is in INACTIVE-STATE,
the error message that results becomes a permanent part of the current editor-buffer's
screen.  This does not apply to internal editor errors.  Hitting <form> does not
get rid of the uglitude.  Characters typed in the region of the error message
are mangled or invisible.  The uglitude remains no matter how many times you enter or
leave EINE. A whole C-M-C-M-<return> is needed to fix things.
   Perhaps these errors are being sent to the wrong place.
   Hmm. I just found that sometimes you *can* wipe this cruft by typing on it.
But not always.  Compilation errors are more stubborn.

acw & dlw@MIT-AI (Sent by DLW@MIT-AI) 01/18/79 23:31:25
To: (BUG LISPM) at MIT-AI
Someone left pack C mounted on CADR1.  The resulting display of historic
Lisp Machine software left us with the disturbing sensation of having
fallen through a time warp.

hes@MIT-AI 01/18/79 15:12:24 Re: purported bug in mapcan
To: (BUG LISPM) at MIT-AI
I reported what I thought was a bug in mapcan, closer inspection
reveals a bug in the code which was supposed to be the example of the
failure.  I apologize.  I also didn't write the code.

howie.

hes@MIT-AI 01/17/79 14:18:05 Re: trouble with mapcan
To: (BUG LISPM) at MIT-AI
the function tms-assumptions1 in the file reason;tms > will neither compile
not interpret properly.  At the time that the outermost invocation of the mapcan is about 
to be exitted, the lisp machine goes into a tight loop.  This is in version 318.
In the newer software running on cadr2, the same code will be treated oddly by
the compiler.  It gives a message something like compiler:map-value declared special
while compiling the function.  The when executing the code you get an unbound variable
error on the same symbol.
   I suspect that I could program around this, but I will leave the code unchanged for
a day or two to give anyone who wants a change to find out what's wrong.
I can recreate the problem for you if need be.
howie

RMS@MIT-AI 01/16/79 23:28:02
To: HENRY at MIT-AI, (BUG LISPM) at MIT-AI

    HENRY@MIT-AI 01/14/79 22:40:07 Re:  minor change to <- 
    Could you make it take functions represented
    by CLOSURES as well as ENTITIES. Ordinary functions 
    could be called too. This would just require 
    change in CLASS-SYMBOL: (COND ... ((CLOSUREP .....

What point is there in such a change?
There is no other difference between those two datatypes.

RG@MIT-AI 01/15/79 14:40:36
To: (BUG LISPM) at MIT-AI
  NEW MICROCODE AND COLD-LOAD ON CADR1.
  THESE HAVE THE NEW WINDOW FEATURE WHERE IT SAVES THE
CONTENTS OF NON-EXPOSED WINDOW IN AN ARRAY AND RESTORES
THEM WHEN THE WINDOW GETS EXPOSED AGAIN.  QUITE A FEW
OTHER NEW THINGS ARE IN TOO, BUT HOPEFULLY THEY WONT
AFFECT ANYONE.
  EVERYBODY SHOULD UNDERSTAND THAT THE NEW WINDOW FEATURE,
ETC, IS IN QUITE A RAW STATE.  NORMALLY, WE WOULDNT PUT
IT UP AS THE CURRENT BAND IN THE CURRENT LEVEL OF DEVELOPMENT,
BUT OTHER INCOMPATIBLE CHANGES WERE MADE IN THE MICROCODE,
AND WE WISH TO CHECK OUT THE CURRENT MICROCODE SO ITS "CLEAN"
FOR POSSIBLE INSTALLATION OF BIGNUM-DIVIDE.  HOPEFULLY ITS
AT LEAST AS WINNING IN MOST RESPECTS AT THE OLD MICROCODE/LOAD,
WHICH ALSO WERE PRETTY BADLY SCREWWED UP.
  THE OLD BANDS STILL EXIST, TO REVERT BE SURE TO REVERT BOTH
MICROCODE AND BAND.

HENRY@MIT-AI 01/14/79 22:40:07 Re:  minor change to <- 
To: (BUG LISPM) at MIT-AI
Could you make it take functions represented
by CLOSURES as well as ENTITIES. Ordinary functions 
could be called too. This would just require 
change in CLASS-SYMBOL: (COND ... ((CLOSUREP .....

MOON@MIT-AI 01/14/79 09:22:32
To: (BUG LISPM) at MIT-AI
SI:WINDOW-RESTORE-SCREEN-METHOD doesn't work; it got compiled and
hence got into a new cold-load I made.  It calls BITBLT with one array NIL and
the other a screen rather than a SCREEN-BUFFER-PIXEL-ARRAY.  I'm not sure why
this gets called when the machine starts up after restoring from disk, but it does.

HIC@MIT-MC 01/13/79 22:33:59
To: (BUG LISPM) at MIT-MC
How about %XBUS-READ-32 and %XBUS-WRITE-32 now that we have bignums?


MOON5@MIT-AI 01/13/79 19:04:24 Re: UCADR
To: (BUG LISPM) at MIT-AI
The latest microcode will not work without making a new cold load, and
even then has stuff in it which has not been debugged.  Please don't
try to assemble ucadr greater than 318 until I get back.

Date: 13 JAN 1979 1851-EST
From: HENRY at MIT-AI (Henry Lieberman)
To: INFO-EMACS at MIT-AI, (BUG LISPM) at MIT-AI

A suggestion for a feature: When in two window mode, when I want to edit the code in
the other window, I often make the mistake of  typing Control-X B rather than
Control-X O, which is  what I'd do with a single window to edit that code.  How bout
a command which took a buffer name, and if  that buffer is in the other window,
switch windows,  otherwise switch buffers. 

RMS@MIT-AI (Sent by RMS0@MIT-AI) 01/13/79 03:09:34
To: (BUG LISPM) at MIT-AI
If in the error handler I do (grindef 'foo) then the recursive error
message printout sends the machine to ZERO.
Also, when I start up a fresh CADR to look at the problem
:TRACE prints out lots of DTP-TRAPs but A-QCSTKG/ :TRACE
prints out VALUE-CELL-LOCATION <- GRINDEF <- garbage thing
which screws up CC and breaks to DDT.
Isn't :TRACE in a fresh CADR supposed to print the current stack group?

RMS@MIT-AI (Sent by RMS0@MIT-AI) 01/12/79 21:43:25
To: (BUG LISPM) at MIT-AI
Meta-. now works with defmethods.
Just give (FOO-CLASS :BAR) as the section name.

RMS@MIT-AI 01/11/79 22:11:51
To: (BUG LISPM) at MIT-AI

    RG@MIT-AI (Sent by RG0@MIT-AI) 01/11/79 21:50:23
      HACKING THE NEW WINDOW STUFF IN EINE, I MANAGED TO GET IT INTO A
    STATE WHERE ALL PROCESSES WERE BLOCKED "PERMANENTLY".  I THINK I DID
    IT BY FROBBING OTHER MOUSE BUTTONS WHILE I WAS TRANSLATING AN EDITOR WINDOW.
     MAYBE THE SCHEDULER SHOULD SENSE CALL NOT BEING HANDLED AN INITIATE A
    SUPER-BREAKPOINT SO YOU COULD GET A CHANCE TO SEE WHY THINGS ARE SO HUNG UP.

The scheduler does check for call by doing (KBD-CHAR-AVAILABLE T).
I too have seen this not work, but I don't know why.
Maybe it means that a CALL can't be seen if there is an
unread character in front of it.
If so, we probably need real keyboard interrupts
to fix this properly.

RG@MIT-AI (Sent by RG0@MIT-AI) 01/11/79 21:50:23
To: (BUG LISPM) at MIT-AI
  HACKING THE NEW WINDOW STUFF IN EINE, I MANAGED TO GET IT INTO A
STATE WHERE ALL PROCESSES WERE BLOCKED "PERMANENTLY".  I THINK I DID
IT BY FROBBING OTHER MOUSE BUTTONS WHILE I WAS TRANSLATING AN EDITOR WINDOW.
 MAYBE THE SCHEDULER SHOULD SENSE CALL NOT BEING HANDLED AN INITIATE A
SUPER-BREAKPOINT SO YOU COULD GET A CHANCE TO SEE WHY THINGS ARE SO HUNG UP.

MOON@MIT-AI 01/11/79 19:57:19 Re: QCP2 74
To: (BUG LISPM) at MIT-AI
The next release of the compiler will open-code LEXPR-FUNCALL.

H@MIT-AI 01/11/79 16:32:46 Re: Microcode (and mentalcode) changes for message-passing - long msg
To: (BUG LISPM) at MIT-AI

    1. Make calling of an Instance or an Entity bind %SELF.
I agree.

       This eliminates the need for the <- function.  This could be a macro that turns into
       a funcall, but personally I prefer the function syntax
       (message x y) over (<- x ':message y).

One obvious big advantage of Smalltalk is the generic messages ((<- x PRINT) as opposed
to (PRINT-DATA-TYPE-WITH-LONG-WINDED-NAME x). Why not have this and keep the Lisp
style (<function> .. args ..) semantics?

So if, as you say, if generic messages were macros they could expand into
either message passing or Lisp.  This unifies the two schemes, and even allows
the representation to be changed without restructuring the code.
(I understand that GSB has a package that does something like this in MACLISP.)

In the PRINT example the "-DATA-TYPE-WITH-LONG-WINDED-NAME" is in effect a type
declaration of X, present in the form (PRINT X).
If the declaration is left out,  run time type determination
has to happen by the "<-" business.  On the other hand, a compile time
type declaration (yes, ugh, but we do it!) allows more efficient code, especially
in the case of component references. Then at least, the type declaration can
be made less often than in every reference to X.

There probably is some problems with the short generic message names that people
would like to use being pre-empted. X and Y are free, but PRINT certainly already
has a function defintion.  Interestingly, it already does it's own type checking,
and escapes to message calling. It is Lisp's approximation to a generic message.

Does the macro definition  of X destroy the modularity of object clustered methods?
Do class defintions using X conflict with each other?
I don't think necessarily so, making X a generic merely means that it defaultly expands
to (<- foo 'X ...).  Where it interacts with a specific class is by some
class declaration (implicit or explicit), and the specifics of the X method
are still internal to the class itself.

   <- vs FUNCALL
The <- function also provides an escape for message passing to Lisp objects
that aren't defined as instances (numbers, strings, etc.).  Funcall could
be extended in those cases where it errors now, but certainly 
	(funcall '(lambda ....)...)  and   (<- '(...) ...)
have different semantics.  Of course <- should be know about by the
microcode and the compiler.

   Aux-methods
It might be nice to be able to change the method set for an existing
instance. For example, the old drawing program changes things from Body Pin
to a Point sometimes.  This could be done by copying, but there might
interesting applications where the gross behaviour of an instance was dynamic.
Maybe the CLASS and AUX-METHOD slots should be -1 and -2,
so that the slot numbers aren't different depending on whether there are aux-methods.

The current method dispatch matching could be haired up, it doesn't allow
a class to intercept every message for instance.

    3. Add new misc functions GET-INSTANCE-SLOT-{1..17,N} and
       PUT-INSTANCE-SLOT-{1..17,N} which allow access to slots of the
       instance designated by %SELF.  The compiler will need to be modified
       to know about a new class of variables, in addition to Special and
       Local, which are represented as Instance slots.  These need not
       appear in the ADL.

Maybe also the same things that take an instance pointer in place of %SELF.
This is analagous to the AREF-n macro instructions often discussed.

RG@MIT-AI (Sent by RG0@MIT-AI) 01/11/79 16:06:20
To: (BUG LISPM) at MIT-AI
  BUG IN LOOP COUNT NEAR BADD5.
SOMEBODY SHOULD REALLY FIGURE THIS OUT.  WITH MICROCODE 311 (THE LATEST)
IT GETS INTO AN INFINITE LOOP.  WITH EARLIER VERSIONS IT HAS REF'ED ONE
WORD OFF THE TOP OF THE BIGNUM, AND OR FAILED TO REF THE HI WORD.
IT MUST BE GETTING TO THIS LOOP WITH INCONSISTANT INITIAL ARGS IN SOME
CASES OR SOMETHING.
(JUST TYPE IN 77777777 TO CAUSE THE PRESENT INFINITE LOOP).

RG@MIT-AI (Sent by RG0@MIT-AI) 01/11/79 12:58:23 Re: (AREF 2 2)
To: (BUG LISPM) at MIT-AI
  IT WAS JUST GOING TO ILLOP ON NUMBR CALLED AS A FUNCTION.
FIXED FOR NEXT UCODE AND COLD-LOAD.

JOHAN@MIT-AI 01/11/79 10:14:33
To: (BUG LISPM) at MIT-AI
(aref 2 2) gets microcode error.
i.e. machine just halts.
johan

JONL@MIT-MC 01/11/79 09:56:56 Re: DEFMACRO
To: (BUG LISPM) at MIT-MC
COMLAP;NDEFMA >, and COMLAP;NDEFMA FASL is a version of DEFMACRO
with the bugs corrected, which I noted last nite.  It uses the MACLISP
LET package (and DESETQ, which is the destructuring portion of LET, but
without creating any bindings).  Otherwise, its actions should be
equivalent to LISPM2;DEFMAC 29 (including "&optional", "&rest", and
"&aux").  Would appreciate anyone with DEFMACRO usages trying it
and discovering latent features.


HENRY@MIT-AI (Sent by HENRY0@MIT-AI) 01/11/79 01:48:24 Re:  Message passing
To: (BUG LISPM) at MIT-AI
    I'd like to make a suggestion for a change to the
    microcode for SELECT-METHODS which I think will 
    make them more general without signficant loss in efficiency. 
    Right now, the method to be invoked is selected by 
    doing an ASSQ-like search down the method list, using the
    first argument as a key. This means that a method must declare
    which symbols it responds to when you create the method. The
    method can't apply a function at run time to decide whether to 
    accept the message or let another method handle it. 
    What I'd like is another kind of entry in the method list, which
    supplies a predicate to be applied to the message [the &rest of the
    <- call] and if that predicate returns true, the method in that entry is 
    selected [called with the message as argument], 
    otherwise continue down the method list. 
    This is useful in many situations. For instance, it helps with 
    multiple superclass types of things, because a method can
    conditionally decide to accept a message based on whatever it
    wants, say its current viewpoint.
    What do you think?

JONL@MIT-AI 01/11/79 00:39:03 Re: DEFMACRO
To: (BUG LISPM) at MIT-AI
Expansion for &optional arguments fails to set up correct variable 
environment, as in standard DEFUNing, so that &optional may be initialized
to same value as some of the requireds.  Also, the destructuring for the
&optionals causes multiple-evaluations of the default-value computation
for that &optional.  Example of lossage
(DEFMACRO FOO ((A . B) &OPTIONAL 
                       ((C . D) (PROG2 (PRINT 'OPTIONALIZING) (CONS 1 B))))
   `(LIST ,A ,B ,C ,D))
expands into


(MACRO FOO
       (*MACROARG*)
       (AND (OR (< (LENGTH *MACROARG*) 2) (> (LENGTH *MACROARG*) 3))
	    (ERROR '|-- wrong number of args to a macro.|
		   (LIST '((A . B)
			   &OPTIONAL
			   ((C . D)
			    (PROG2 (PRINT 'OPTIONALIZING) (CONS 1 B))))
			 *MACROARG*)))
       ((LAMBDA (D C B A) (LIST 'LIST A B C D))
	(CDR (COND ((CDR (CDR *MACROARG*)) (CAR (CDR (CDR *MACROARG*))))
		   (T (PROG2 (PRINT 'OPTIONALIZING) (CONS 1 B)))))
	(CAR (COND ((CDR (CDR *MACROARG*)) (CAR (CDR (CDR *MACROARG*))))
		   (T (PROG2 (PRINT 'OPTIONALIZING) (CONS 1 B)))))
	(CDR (CAR (CDR *MACROARG*)))
	(CAR (CAR (CDR *MACROARG*)))))

* 

MOON@MIT-AI 01/10/79 21:46:47 Re: To assemble microcode on the lisp machine
To: (BUG LISPM) at MIT-AI
Incant the following:
	(LOAD "LCADR;UA PKG")
	If it asks you to load QMISC, do so.
	(PKG-LOAD "UA")

Now, to assemble, (PKG-GOTO "UA") (ASSEMBLE)
(UA:ASSEMBLE) probably also works.
(WRITE-MCR) and (CONS-DUMP-MEMORIES) should both work to write it out.
You need microcode 309 or later to assemble UCADR successfully this way
(CADR1 has microcode 309.)  You also will use all but 1000000 or so words
of virtual memory assembling UCADR.

This doesn't use RG's fast microcode source file reader (yet).

MOON@MIT-AI 01/10/79 17:14:33 Re: Microcode changes for message-passing
To: (BUG LISPM) at MIT-AI
Please comment on the following changes.  If they are thought to
be useful for cleaning up the message-passing stuff, I will put them in.

1. Make calling of an Instance or an Entity bind %SELF.  This eliminates
   the need for the <- function.  This could be a macro that turns into
   a funcall, but personally I prefer the function syntax
   (message x y) over (<- x ':message y).  (And why should all messages
   be in the user package, as opposed to the package where they "logically"
   belong?)

2. Define the following protocol for use of Instances.  Slot 0 of an
   Instance always contains its Class, which is also an Instance.  Slot 1
   of a Class contains the method-table for Instances of that Class.  Slot 2
   of a Class contains general information, probably as a property list,
   including variable-names needed by the interpreter in order to call
   a method written in interpreted Lisp (if we allow that).
   If the flag-bit of slot 0 of an Instance is 1, Slot 1 of that instance
   contains an auxiliary method table which is searched before the
   Class's method table.  This allows a class to have "options" at instance-
   creation time which are represented by slight alterations to certain
   methods, without the need to define a plethora of classes for
   each combination of options.  Note that in cases where "multiple
   superclasses" are the right thing, those instance-variables
   not in all superclasses would need to be represented as closures
   in the method table rather than as instance slots.

3. Add new misc functions GET-INSTANCE-SLOT-{1..17,N} and
   PUT-INSTANCE-SLOT-{1..17,N} which allow access to slots of the
   instance designated by %SELF.  The compiler will need to be modified
   to know about a new class of variables, in addition to Special and
   Local, which are represented as Instance slots.  These need not
   appear in the ADL.
   Eventually it will be recognized that Instances are just a type
   of detached lexical contour, and whatever variable-addressing mechanism
   is invented for Scheme can also be used for Instances.

DLW@MIT-AI 01/09/79 11:43:18
To: (BUG LISPM) at MIT-AI
jerryb is having trouble trying to read in ".file. (dir)" files to EINE,
because the file job does a .ACCESS on them to reset the pointer (because
it is reading in the file property list), and that doesn't work on
directories.  Would it be possible to fix ITS so that .ACCESS works on file
directories when the argument is zero, and only if it is non-zero give an error?

JONL@MIT-AI 01/09/79 05:56:58
To: (BUG LISPM) at MIT-AI
Note that LISPM2;DEFMAC > is satisfactory for both LISPM and MACLISP
usage, so there is a link from maclisp's autoload area to LISPM2;DEFMAC FASL

ALAN@MIT-AI 01/09/79 03:51:30
To: (BUG LISPM) at MIT-AI
I just moved the readtable compiler stuff to LMIO (its now
named just RTC). Its simpler to use now and any home brew
readtables will have to be changed.

JONL@MIT-MC 01/08/79 19:05:40 Re: One-handed SHIFT and GREEK
To: MOON at MIT-MC, JLK at MIT-MC
CC: JONL at MIT-MC, (BUG LISPM) at MIT-MC
I presume that this position is not a touch-typing position (as
is hitting SHIFT alone, or CAPS LOCK alone), and that the hand would
move from home position to hold down two bucky-bits keys.  In the
original layout, it would be presumably the middle and ring fingers, 
holding down the adjacent double-width keys, but if GREEK and CAPS LOCK
were interchanged, it would probably be the middle and pinkie fingers
holding down the keys.


CARL@MIT-AI 01/08/79 17:48:21
To: (BUG LISPM) at MIT-AI, JERRYB at MIT-AI, MOON at MIT-AI
We will be giving a demonstration of the LISP machine windows which
JERRYB, BEPPE, and RMS have been hacking on Wed. and would appreciate
being able to use the machine intensively until then.

			Thanks!!

			Carl

Moon@MIT-AI (Sent by ___054@MIT-AI) 01/08/79 13:48:36
To: (BUG LISPM) at MIT-AI, JERRYB at MIT-AI
I will be using the Lisp machine in 907 for about 8 hours a day
almost every day for the next few weeks, working on the garbage
collector.  I would like to have top priority on that machine
during this time.

HIC@MIT-MC 01/08/79 00:31:29
To: (BUG LISPM) at MIT-MC

We have found that the Motorola 4116's are not usable in the XBUS memories
for reasons which are being investigated.  We have replaced all of these
chips.  This only affected memory board number three, though.  Hopefully the
parity situation will be somewhat improved.

Note that there is now an error log hanging under the page speaker in
936.  Please record all errors and "fixes" to "working" hardware in there.
Currently there are sections for CADR2 and 3, and the three XBUS memory cards.
Feel free to add more sections if necessary!!

--howard


bee@MIT-AI (Sent by RG@MIT-AI) 01/07/79 11:31:51
To: (BUG LISPM) at MIT-AI
The compiler reverses the order of evaluation of the step clauses in a DO. This has been
fixed, and would only show up in the case of one stepper or initializer having side effects
that mess up another. (bletch).

HENRY@MIT-AI (Sent by JERRY0@MIT-AI) 01/07/79 03:37:25
To: (BUG LISPM) at MIT-AI
CLASSes whose names are shorter than 6 characters lose.
The reason is in the code for OBJECT-CLASS, it subtracts
6 from the length of the name.

Date: 7 JAN 1979 0204-EST
From: GLS at MIT-AI (Guy L. Steele, Jr.)
Subject: Keyboards
To: RMS at MIT-AI, MOON at MIT-AI, (BUG LISPM) at MIT-AI, DLW at MIT-AI
To: JLK at MIT-MC, RLB at MIT-MC
CC: (BUG EMACS) at MIT-AI

[1] I still think it would be a good idea to have soome
keys with "uninterpreted" words on the fronts, like FOO,
GLEEP, BAZ, ZTESCH, etc. which are purposely "undefined"
and yet "mnemonic" in the sense that you can remember them and they
are obviously words and not symbols.
[2] Labelling the lock keys "A", "B", etc. is not a good
idea because of the possible confusion wiht the letter keys.
In this respect the keys labelled with Roman numerals worry me,
because of possible confusion with the I and V keys.  One
somewhat inelegant solution is to use II, III, IV, VI, VII, VIII,
IX, and XI as the labels.
[3] In my previous flamage about editor orthogonality I forgot
to mention the thing that got me started on that subject: I constantly
find myself wanting "transpose line" and "transpose paragraph".
"Transpose comment" would also be extraordinarily useful -- you
could use it to drag comments down a line.
As long as this is going to (BUG EMACS)... another possible
thing a numeric arg could be used for is to indicate how
many of the particular item should be used as a group to be
dragged by the transposition -- thus oone might want to drag
a phrase of three words forward.  One might suggest that a trick
analogous to the kill-command "lookahead" (really lookbehind)
used to consolidate the kill ring entries could be used so that
<number> <transpose> <transpose> <transpose> would drag <number>
things forward three units.  I would suggest simply a
variant that dragged the region along, but that doesn't quite
work for comments, which are not contiguous -- one ooftem
wants too drag three comments down together two lines.
Right now this operation is tedious.
Dare I suggestthat on the new keyboards
Roman numbers anGreek numbers accumulate two separate numeric
args for commands???
[End of continued flamage]

GLS@MIT-AI 01/06/79 22:02:15 Re: Keyboards and editors
To: GLS at MIT-AI, RMS at MIT-AI, (BUG LISPM) at MIT-AI, DLW at MIT-AI
To: JLK at MIT-MC, RLB at MIT-MC
In case anyone has trouble trying to think of editor commands
to put on all those wonderful Greek keys: it has often annoyed me
that there are a couple of categories of text objects whichh have
not been made orthogonal combinations of bucky bits, but only
stuck in hodge-podgely: namely lines and paragraphs.  One might
note that within each bucky-bit set there are, in general, twoo
kinds of objects accomodated: chars/lines, words/sentences,
and sexps/lists.  Pages, paragraphs, and defuns are also accommodated
respectively in some cases.  Unfortunately, there is only
marginal consistency:  C-D/C-K deletes chars/lines,
M-D/M-K both kill words; C-M-D doesn't delete at all, etc.
Also, it's too bad one can't easily uppercase a paragraph
oor a defun.
Maybe I'm being too fussy, for most of these operations can
be done with a few extra keystrokes.  But anyway, the advent of
an additional bucky bit or two (double double bucky!...) may
give us an opportunity too stand back and reflect on the possibilities.
There may also be room too accommodate some of the more winning
commands in SAIL's editor... [End of flamage]

BEE@MIT-AI (Sent by JOHAN@MIT-AI) 01/06/79 09:15:52
To: (BUG LISPM) at MIT-AI
The problem with symbolp was that someone removed it from GLOBAL. Was this intentional?
It has been reinstalled.

JOHAN@MIT-AI 01/06/79 08:51:39
To: (BUG LISPM) at MIT-AI
CADR in 907 does not have SYMBOLP defined.

You have to define it yourself (using SI:SYMBOLP which does exist).

RMS@MIT-AI 01/06/79 03:42:49 Re: Swapping
To: (BUG LISPM) at MIT-AI
It occurs to me that every function definition ought to follow
in core the symbol that it defines.  The main use of symbols during
execution is for calling them as functions.  This makes that operation
require only 1 page instead of 2, while not interfering with anything else.
It ought to be easy for the garbage collector to make this happen.

Interning could be sped up by making the obarray point directly
to the strings as well as to the symbols (since then there is
no need to swap in the symbols).  If the readmacro symbol
feature is flushed, as it ought to be anyway because it makes
things very painful when a property list is clobbered, then there
will be no need at all to swap in symbols while reading, or
not to mention the plists which must now be swapped in.

If the strings in the obarray are themselves stored consecutively
in the same order that they are in in the obarray, that ought to
speed up tremendously all the obarray scanning operations.  Again,
the garbage collector ought to be able to do this easily.

Perhaps something as simple as making INTERN of a string copy
the string into P-N-STRING would improve swapping behavior now.

Please tell me your opinions.

RMS@MIT-AI 01/06/79 02:15:02
To: JLK at MIT-MC, RLB at MIT-MC, GLS at MIT-MC, (BUG LISPM) at MIT-MC

    MOON5@MIT-MC 01/04/79 15:01:59
    'COMMAND' AS I HAD ENVISIONED IT HAD, AND HAS, NOTHING TO DO WITH EMACS.
    IT WAS TO BE A KEY INDICATING THAT WHAT FOLLOWS IS A SYSTEM COMMAND
    RATHER THAN, SAY, A LISP FORM.  THE ISSUE IS WHETHER THERE SHOULD
    BE A KEY FOR THIS OR WHETHER IT SHOULD META SOMETHING, WHICH WILL
    BE EASIER TO TYPE BUT NOT STAND OUT AS CLEARLY.

Are we really going to have system commands as opposed to Lisp forms?



HENRY@MIT-AI 01/06/79 02:00:00
To: (BUG LISPM) at MIT-AI
In the editor, insertions flush the mark. In Emacs, 
they don't.

MOON@MIT-MC 01/05/79 20:50:58 Re: Keyboards and layouts
To: JONL at MIT-MC, JLK at MIT-MC
CC: (BUG LISPM) at MIT-MC
Let me just point out that it is necessary to be able to type SHIFT and GREEK
at the same time with one hand, since there are upper-case Greek letters.

HIC@MIT-MC 01/05/79 14:27:13
To: (BUG LISPM) at MIT-MC
(* 0 <bignum>) returns a bignum 0


RG@MIT-AI 01/05/79 07:10:50
To: (BUG LISPM) at MIT-AI
  THE FUNCTION NAMES SET-CURRENT-BAND AND SET-CURRENT-MICROLOAD ARE CURRENTLY
USED BOTH IN CC (REFERING TO THE OTHER MACHINE) AND IN GLOBAL (REFERING TO THE
HOME MACHINE).  THIS CAN LEAD TO A BAD SCREW IF YOU FORGET WHICH ONE YOU ARE TALKING
TO.  IN THE NEXT VERSION(S) OF CC, THAT FLAVOR WILL BE RENAMED CC-SET-CURRENT-BAND,
ETC.

JONL@MIT-MC 01/05/79 00:47:32 Re: Keyboards and layouts
To: JLK at MIT-MC
CC: (BUG LISPM) at MIT-MC
Sorry I couldn't reply earlier to the proposal.  I have some substantive
support for half of MOON's flaming positions, plus some suggested changes
in layout myself (such as "interchage GREEK and CAPS LOCK", and shuffle
some keys like \| and `~).  In addition, I have some comments about the
apparent standardization that is taking place in the keyboard world, what 
with DEC adopting the IBM selectric format, and how your proposal might
be a little more accommodating to this standard.  For all this, 
and more, see AI:LMDOC;KEYCOM JONL1


ALAN@MIT-AI 01/05/79 00:45:19 Re: Home brew readtables
To: (BUG LISPM) at MIT-AI
	Who out there has home brew readtables? I would like to make a change
to the way readtables are compiled and I would like to change all the existing
ones at the same time. (There can't be that many!) You may all rejoi in the knowledge
that this change will make the process of compiling them easier!

RG@MIT-AI (Sent by BEE@MIT-AI) 01/04/79 21:28:37
To: (BUG LISPM) at MIT-AI
  FILE HAS BEEN CHANGED SO THAT CODE 13 APPEARING IN AN ITS 
ASCII FILE IS MAPPED INTO 13 (UPARROW) INSTEAD OF 213 (VERTICAL TAB).

RG@MIT-AI 01/04/79 19:33:39
To: (BUG LISPM) at MIT-AI
  NEW COLD LOAD INSTALLED ON CADR1.  ITS NOT BEEN VERY THOROUGHLY
CHECKED OUT, BUT HAS BEEN MADE CURRENT ANYWAY.  IT HAS TO BE BETTER
THAN THE OLD SITUATION.

BEPPE@MIT-AI 01/04/79 16:30:16 Re: New keyboards
To: BEE at MIT-AI, MOON at MIT-MC, JLK at MIT-MC
CC: (BUG LISPM) at MIT-AI, GLS at MIT-MC, RLB at MIT-MC
	/YOU COULD USE COLORS: HAVE SYMBOLS ON THE FRONT
OF EACH KEY COLORED IN RED, AND THOSE ON THE TOP IN BLUE.
/SO A RED KEY COULD BE USED TO SELECT A RED SYMBOL ...

	/BEPPE

ALAN@MIT-AI 01/04/79 16:03:16 Re: New keyboards
To: EAK at MIT-MC
CC: (BUG LISPM) at MIT-AI, JLK at MIT-MC, RLB at MIT-MC, GLS at MIT-MC
CC: MOON at MIT-MC

    EAK@MIT-MC 01/04/79 13:09:05 Re:  New keyboards
    I haven't had a chance to see your posted key layout, but I'd like to
    suggest that if you don't already have a key for answering --More--
    prompts then you should have one.  I think this key would be more
    useful than a YES key.  Having such a key would prevent the screw that
    typeahead answers --More--s.

Whats wrong with having the YES key answer the --more--s?

MOON5@MIT-MC 01/04/79 15:01:59
To: JLK at MIT-MC, RLB at MIT-MC, GLS at MIT-MC, (BUG LISPM) at MIT-MC
'COMMAND' AS I HAD ENVISIONED IT HAD, AND HAS, NOTHING TO DO WITH EMACS.
IT WAS TO BE A KEY INDICATING THAT WHAT FOLLOWS IS A SYSTEM COMMAND
RATHER THAN, SAY, A LISP FORM.  THE ISSUE IS WHETHER THERE SHOULD
BE A KEY FOR THIS OR WHETHER IT SHOULD META SOMETHING, WHICH WILL
BE EASIER TO TYPE BUT NOT STAND OUT AS CLEARLY.

BEE@MIT-AI 01/04/79 13:56:43 Re: New keyboards
To: MOON at MIT-MC, JLK at MIT-MC
CC: (BUG LISPM) at MIT-AI, GLS at MIT-MC, RLB at MIT-MC
Just one comment. I disagree about top and front. Greek, will at least tell the person
how to type greek characters, even if they dont figure out that you have to use greek
to get cent sign. I have known people that say "what is top mean? Top of what?" I think
that front might have the same problem, but I dont know what is better to call it.

MOON@MIT-MC 01/04/79 13:21:36 Re: New keyboards
To: JLK at MIT-MC
CC: (BUG LISPM) at MIT-MC, GLS at MIT-MC, RLB at MIT-MC
Yeah, the layout is acceptable I guess.

You're right that CLEAR INPUT shouldn't be just CLEAR, maybe CLR INP or
CLR KBD.

Bright green is a loss, very pale green would be OK.

COMMAND is for "system commands".  Perhaps meta-X will provide this function,
or a similar non-separate key.  MACRO is for keyboard macros; currently we
are using back-next for this.  This needs to be a separate key so it isn't
typed accidentally and so it doesn't interfere with anything else.  It wouldn't
really be a win to use TERMINAL ESCAPE for this function also, in my opinion.

I suppose there's some point to a YES key, although dangerous questions
like that should of course flush type-ahead.  Anyway I suppose the COMMAND
key isn't necessary (although a long time ago we were thinking of relabelling
VT for this.)  But I do think it's important to find a place for a MACRO key.
Should the lozenge printing character that we use for altmode appear
some place?  How does QUIT differ from CALL? Since apparently FLUSH
is FLUSH OUTPUT rather than FLUSH PROGRAM and probably should be labelled
as such.

I'd never heard that TOP was confusing people.  I think SYMBOL could be
confused with the Lisp symbol data-type, and GREEK isn't good since now
it's being used for non-greek characters as well, like cent-sign.  That's
why I think TOP and FRONT would be better names for those shifts.

Since the keycodes and which keys are shift-keys depends entirely on the
micro-processor, all that really has to be settled now is where there are
keys, how wide, and which ones lock, which we seem to be all agreed on.
I don't know how far in advance the keytops need to be ordered.

EAK@MIT-MC 01/04/79 13:09:05 Re:  New keyboards
To: JLK at MIT-MC
CC: (BUG LISPM) at MIT-MC, RLB at MIT-MC, GLS at MIT-MC, MOON at MIT-MC
I haven't had a chance to see your posted key layout, but I'd like to
suggest that if you don't already have a key for answering --More--
prompts then you should have one.  I think this key would be more
useful than a YES key.  Having such a key would prevent the screw that
typeahead answers --More--s.


JLK@MIT-MC 01/04/79 11:17:14 Re: New keyboards
To: MOON at MIT-MC
CC: (BUG LISPM) at MIT-MC, JLK at MIT-MC, RLB at MIT-MC, GLS at MIT-MC

    MOON@MIT-MC 01/04/79 03:12:01 Re: New keyboards
    Change SYMBOL back to TOP, it's less confusing.
[Why?  The whole reason for the change was that TOP was confusing?
 I don't really feel too strongly about this.  I'll see what everyone
 else thinks.]

    Should GREEK be FRONT?
[Hmm.  Should modifier keys be oriented toward the operation of the 
keyboard or toward the semantics?  The same question applies to TOP vs SYMBOL.
Oddly enough, while I like SYMBOL, I am not terrifically enthused by GREEK.]

    Change the backslash on the front of slash to integral sign.
[Some people wanted it there to have an easier way of typing it.
 I don't care too much and integral sign is ok by me.]

    The shifted frob to the left of the 1 key is a duplicate double-quote?
    Or is it diaresis?  Certainly useless to have a duplicate upper-case double-quote
[RMS wanted an alternative way to type " so as not to confuse it with '.
 Given the importance of " in LISPM toplevel, it would be nice to have
 a lowercase ", but I can't find a place for it where it could be easily
 typed.]

    Can the CTRL key really be double-width only supported on one side?
     Will that work?  Will it bump into the board supports on the case??
[The CTRL keys are 1 3/4, which MICROSWITCH claims is ok.]

    Decrease the amount of wordage on the keys, I think NETWORK ESCAPE
     would be better called NET ESC.  Too much letters can be distracting.
[Good. How about TTY ESC, SYS ESC, NET ESC.  CLR SCR could be used instead
 of CLEAR SCREEN, and CLR INPUT or CLEAR for CLEAR INPUT]

    Decide what colors the key tops will be.  Red keys lose, but 3 pastel
     colors rather than the present 2 will probably be helpful in sorting
     out all these extra keys.  Colors should be in large blocks since they
     exist to be seen out of the corners of the eyes.
[Sounds reasonable. Bright Green (a la SAIL kbds) also loses in my opinion]

    Single-quote should be slanted not straight-up (nits, nits).
[Good.]

    Change END TEXT to END.
[Ok]

    Add keys called COMMAND and MACRO.  I don't have much preference where
     these should go.  Certainly flush YES in favor of these, maybe FLUSH,
     since it's the same as QUIT, isn't it?
[Flush is used for flushing typeout (like ^S or ^W or both).  QUIT is like
 ^G.  Several people wanted a YES key to answer Yes/No questions unambiguously
 (e.g. "Do you want all your files deleted (Y or N)?" followed by typeahead
       "Yesterday I called...." - example due to GLS - admittedly its a bit
       pathological, but it is nice to make the possibility of lossage
       much smaller.
  I assume you want COMMAND for escapes like Meta-X in the editor.  My general
  philosophy was that the big operation keys should be used for operations
  which are likely to be followed by a pause in your interaction with the
  system, in contrast to functions used while editing which are likely
  to be needed in the midst of a flurry of typing.  Keys that are directly
  above the center of the keyboard are fairly typeable by touch typers
  without moving the side of their hand off the keyboard, so something like
  COMMAND might be reasonable instead of, say, CLEAR SCREEN, which could be
  moved off to the side somewhere.  What would macro be used for?]

     Don't label A-LOCK, B-LOCK, ... with those names.  Maybe leave them blank,
     or label them just A, B, C, D.
[Leaving them blank is definitely a loss, since it provides no way for documentation
to refer to them clearly.  I agree we could use better names for these, but
I am not too enthused about A,B,C...]


[I haven't heard complaints about the key layout, but rather mostly about keytops.
 Therefore I am going to go ahead and generate the specs for the keys, and try to
 finalize the keytops by tomorrow.]


HENRY@MIT-AI 01/04/79 04:09:48
To: (BUG LISPM) at MIT-AI
The compiler doesn't handle the following use of APPLY, which
works OK in the MacLisp compiler, and interpretively.

(DEFUN APPLY-TEST (INCORRECTLY-SPECIAL)
       (APPLY (FUNCTION (LAMBDA (APPLY-VARIABLE) (PRINT INCORRECTLY-SPECIAL)))
              '(YAY)))

It declares the argument special. I think the MacLisp compiler open-codes
APPLY in this case so the reference to INCORRECTLY-SPECIAL isn't special 
in the functional argument just like the functional argument to a MAPCAR.

MOON@MIT-MC 01/04/79 03:12:01 Re: New keyboards
To: JLK at MIT-MC
CC: (BUG LISPM) at MIT-MC
Change SYMBOL back to TOP, it's less confusing.
Should GREEK be FRONT?
Change the backslash on the front of slash to integral sign.
The shifted frob to the left of the 1 key is a duplicate double-quote?
 Or is it diaresis?  Certainly useless to have a duplicate upper-case double-quote.
Can the CTRL key really be double-width only supported on one side?
 Will that work?  Will it bump into the board supports on the case??
Decrease the amount of wordage on the keys, I think NETWORK ESCAPE
 would be better called NET ESC.  Too much letters can be distracting.
Decide what colors the key tops will be.  Red keys lose, but 3 pastel
 colors rather than the present 2 will probably be helpful in sorting
 out all these extra keys.  Colors should be in large blocks since they
 exist to be seen out of the corners of the eyes.
Single-quote should be slanted not straight-up (nits, nits).
Change END TEXT to END.
Add keys called COMMAND and MACRO.  I don't have much preference where
 these should go.  Certainly flush YES in favor of these, maybe FLUSH,
 since it's the same as QUIT, isn't it?
Don't label A-LOCK, B-LOCK, ... with those names.  Maybe leave them blank,
 or label them just A, B, C, D.

JLK@MIT-AI 01/03/79 12:22:23 Re: KEYBOARD
To: (BUG LISPM) at MIT-AI
CC: GLS at MIT-AI, GJS at MIT-AI, CARL at MIT-AI, HENRY at MIT-AI
Since the current consensus is to have lowercase parens, would anyone consider
it a gross screw to use the typewriter standard for the symbols above 1 thru 0
(This means @ above 2, ^ above 6, & above 7, * above 8, ( above 9 and ) above 0).
The rationale for this is that (a) lowercase parens make the placement of
shifted parens less important; and (b) almost all commercially available terminals
are going over to this standard (including DEC, HP, Tektronix, IBM, CONCEPT-100,
etc, etc.) so that those of us that have occassion to use such terminals are
screwed somewhat less.  I realize that this would probably be a screw for users
of the current AI keyboards, but perhaps enough $'s are available to replace
them with the new ones??

Some benefits, in addition to lowercase parens, of this layout are
lowercase quote and backquote.  Given up are lowercase @ and ^, and
+ and * are slightly less convenient to type.

This keyboard layout is going to be finalized very shortly.  The latest
layout will be posted in the LISPM room.


Date: 3 JAN 1979 1146-EST
From: GLS at MIT-MC (Guy L. Steele, Jr.)
Subject: Character Proposal
To: NIL at MIT-MC
CC: (BUG LISPM) at MIT-AI

MC:NIL;CHPROP > contains revision 3 of the character standard proposal.
It removes the explicit definition of mouse characters, and introduces
the notion of a "funny" or non-standard character object in an
input stream.  There are some other minor refinements.


HIC, BEE@MIT-MC (Sent by HIC@MIT-MC) 01/03/79 04:08:10
To: (BUG LISPM) at MIT-MC
We are in the process of fixing up 936 and 937.  Please don't try
to change the state of anything in those rooms, as we "have plans".

We will tru to be in as early as possible tomorrow
to finish up.

BTW, it looks like the 4th processor works...


RMS@MIT-AI 01/02/79 05:17:38
To: (BUG LISPM) at MIT-AI
C-M-C-M-digit should load the band for that digit.

BEE@MIT-MC 01/01/79 13:31:47
To: (BUG LISPM) at MIT-MC
The macros in LISPM;MACRO for #Q and #M should accept #q and #m also. Currently it complains
that m and q are bad characters after #.

RMS@MIT-AI 01/01/79 05:16:53
To: (BUG LISPM) at MIT-AI
If the package system thinks it knows what package a file is in
then that overrides what the file itself says.
It should work the opposite way, and the info from the file
should update the memory.
Also, there should be a way for the user to set the package
associated with the file manually.

MOON@MIT-MC 12/31/78 01:01:26
To: JERRYB at MIT-AI
CC: (BUG LISPM) at MIT-MC
    Date: 28 DEC 1978 1935-EST
    From: JERRYB at MIT-AI (Gerald R. Barber)
    Sent-by: JERRY0 at MIT-AI
    To: (BUG LISM) at MIT-AI
    
    If you try to load a file into a package, say USER, which itself loads
    another file into a different package the loader breaks.  This
    happened when my INIT tryed to load something into a package that
    wasn't USER.
We don't have "new I/O"; you can't have more than one input file open
at a time.  So loading a file from inside a file will not work until
we get the new I/O system, which is being worked on.  This is documented
someplace in the manual I believe.

GJS@MIT-AI 12/30/78 16:20:47 Re: Idea for two years from now
To: DLW at MIT-AI
CC: (BUG LISPM) at MIT-AI, GLS at MIT-AI
Some EINE (ZWEI?) command ought to comment on the spelling
of the word before the cursor and perhaps correct (or offer
to correct) it for you.  This wouldn't be reasonable on the
PDP-10, but the LISP Machine might be able to afford a
modest dictionary as in SPELL and maybe some heuristic rules.
This isn't like DWIM -- it only does it if you ask for it
(and if it corrects, saves the old word in the kill ring!
M-Y should get the old one back).  Perhaps M-gritch should
correct English words, and C-M-gritch should correct LISP
words (e.g. by checking the OBARRAY?  and even recognizing
fns versus vars).

JERRYB@MIT-AI (Sent by BEPPE@MIT-AI) 12/30/78 07:58:26
To: (BUG LISPM) at MIT-AI

    Why a form like this:

  (DO ((L A-LIST))
      ((NULL L)
       (RETURN A B))
      ... )

is accepted by the compiler but not by the interpreter?

HENRY@MIT-AI 12/27/78 03:02:57
To: (BUG LISPM) at MIT-AI
The compiler doesn't understand the flavor of defun
where a property list indicator for the function is given.
It works interpretively.

(DEFUN (FUNCTION-ON-PROPERTY-LIST PROPERTY-LIST-INDICATOR) ...Definition...)

The error is: "Can't find lambda expression..."


JLK@MIT-AI 12/26/78 19:19:43
To: (BUG LISPM) at MIT-AI
There is an initial stab at a keyboard layout for the new LISPM keyboard,
hanging in the (old) LISPM console room.  Please slash at it with your
comments (especially people with opinions about job control keys).
See also AI:LMDOC;KBDPRO > for the "logic" behind this.  This design
will be set in concrete in about 5 minutes, so please respond before
then...
(or at least before the end of the week)

RMS@MIT-AI (Sent by RMS0@MIT-AI) 12/26/78 04:51:03
To: (BUG LISPM) at MIT-AI
If I make a SUPDUP and connect it, then do C-M-C-M-Return so its
connection is no longer real, this is reflected to the SUPDUP
in the form of a #<CHAOS Packet ....> has null connection error
inside TRANSMIT-PKT.  Since reinitializing the NCP is going to be
a frequent act, shouldn't we have at least a good error message
if not a special condition name?

RMS@MIT-AI (Sent by RMS0@MIT-AI) 12/26/78 04:38:07
To: (BUG LISPM) at MIT-AI
The who line will now say "STOP" if the TV-WHO-LINE-PROCESS is inactive
or "ARREST" if it is arrested as well.

RMS@MIT-AI (Sent by RMS0@MIT-AI) 12/26/78 04:35:43
To: (BUG LISPM) at MIT-AI
Window-oriented SUPDUP and TELNET are installed.
Make windows with (SETQ W (<- SUPDUP:SUPDUP-CLASS ':NEW))
(<- W ':EDGES<- whatever)
(<- W ':CONNECT wherever)
(<- W ':SELECT).
SUPDUP:TELNET-CLASS is for TELNETs.
The functions SUPDUP and TELNET operate on MAIN-SUPDUP-WINDOW and -TELNET-...

One bug I don't understand is that Tenetting to a place not on the
chaos net gives "Internal error: ISE0".  This happens in band 7 also.

I programmed around the mysterious lossage by making the tty parameters
and finger string be sent by the handler for the :CONNECT message
instead of by the supdup input process when it starts up (which was
the way it was done when it lost).  I don't see why it ought to make
any difference, except that it appears to lose for that to be done
at the same time that the output process is able to go to work.
However, if you take the calls to SUPDUP-SEND-TTY-VARIABLES and
SUPDUP-SEND-FINGER-STRING out of the :CONNECT method and put them
in the :INPUT-TOP-LEVEL method after (PROG READ-INPUT (CH)
then it loses that way again.  One suspect I checked was that
a SUPDUP-OLOCK wasn't being done by those operations, but putting
one in did not fix the problem.

RMS@MIT-AI 12/25/78 04:13:57
To: (BUG LISPM) at MIT-AI, GLS at MIT-AI
I plan to make mouse characters be lists, so that they can contain
the position the mouse had at the time it was clicked, as well
as as much extra information as we ever need.  However, what kind
of characters are used to represent mouse clicks (or whether characters
are used at all) will be under control of the window's :mouse-buttons method.

RMS@MIT-AI 12/24/78 05:14:45
To: (BUG LISPM) at MIT-AI
RMS;SUPLOS 15 is the SUPDUP that manifested the bug.
I am attempting to program around it.

RWK@MIT-AI (Sent by ___040@MIT-AI) 12/24/78 05:06:40
To: (BUG LISPM) at MIT-AI
(SETQ FOO)
NIL
FOO

Is this considered a feature?  I've found lots of typo's in code from
getting an error from this.

rms@MIT-AI (Sent by ___010@MIT-AI) 12/23/78 06:01:08
To: (BUG LISPM) at MIT-AI
When EH tries to throw to TOP-LEVEL in the current process's
initial stack group (for C-Z), if there is no catch, then
it should reset the process instead (that is, make it
call its initial function again).  This would often
let you get out OK.  But I don't know how to test for the existence
of the tag.

By the way, can anyone figure out why EH-SELECT-TOP-WINDOW fails?
It overpops some stack.  The version in EH 206 fails also,
but once upon a time it worked.

RMS@MIT-AI 12/23/78 05:41:54 Re: Super-image input
To: (BUG LISPM) at MIT-AI
Now super-image input is controlled by the process that owns the keyboard.
If it has a non-nil :KBD-SUPER-IMAGE-P property on its plist,
then input is in super-image mode.
The old way, to do a LET-GLOBALLY, doesn't work with windows
that exist while you aren't using them.

RMS@MIT-AI 12/23/78 05:34:27 Re: Strange lossage.
To: (BUG LISPM) at MIT-AI
I have in RMS;SUPDUP a supdup that uses windows.
It works, with just one bug: that if you send a supdup window
a connect message while it isn't exposed, and then send it an expose message,
it doesn't succeed in starting up.  However, if you send
it a connect message and then give its parallelism a
run-reason, and then expose it (typing from the terminal)
it does succeed.  Why this should matter, I can't figure out.
Maybe it's because the output process can only read the first
character of the greeting and then has to wait for the exposure.
Note that it works to send the connect message while the window
is already exposed.  As a result, in practice the only thing
that doesn't work is the ordinary (SUPDUP) function
which has to send the connect before the expose since the
window it is done in is going under when the expose is done.

When it loses, it's very strange.  The SUPDUP-SEND-TTY-VARIABLES
function does get called, but the telser never sees them arrive.
However, the same number of packets get sent out to the ITS
in either case, I think I saw from the lisp machine peek.

I suspected that it might be the fact that exposing the window
redisplays its box and label, so I turned that completely off.
It didn't change anything.

It may be relevant that I once got into a state where
(HOST-DATA 202) (that is AI) waited forever.
I think that compiling and loading RMS;SUPDUP and LMIO;KBD
and doing (SUPDUP) will reproduce this.  (That's 2026, not 202).

RMS@MIT-AI 12/23/78 05:17:19
To: (BUG LISPM) at MIT-AI
There is a problem with interlocking between different processes
trying to update the same window.
I can see two solutions:
1) A window is updated only by a process that is handling it.
WINDOW-UPDATE is flushed.
2) All windows are updated by the scheduler when nothing is going on.
I'm not sure what the right solution is.
Maybe it's to do both, somehow, with interlocking still needed.

RMS@MIT-AI 12/23/78 03:25:09
To: (BUG LISPM) at MIT-AI
READLINE should ignore mouse characters.

GLS@MIT-AI 12/23/78 03:12:13 Re: CHPROP
To: (BUG LISPM) at MIT-AI, NIL at MIT-MC
CC: GLS at MIT-AI
MC:NIL;CHPROP > has a revised proposed character standard
which I think will be suitable for both NIL and LISP machine.
Highlights of the changes:
[a] At RMS' suggestion, the silly mapping functions have
been removed.  Defining a mapping between characters and
fixnums does the job.
[b] A standard READ syntax is defined for both graphic and
non-graphic characters.
[c] A better distinction is made between the absolutely
minimal subset and suggested extensions.
[d] Some extra functions and predicates are defined,
mostly insprired by the LISP Machine (whenever the LISP
machine has already implemented something, the proposal
uses that name, tempted as I was to change it!).  Examples
include UPPERCASEP, CHAR-UPCASE, CHAR=, and CHAR-EQUAL.
[e] Tentative code for all these new primitives is
included for both VAX (S-1?) and LISP Machine.
[f] A firmer proposal for mouse character encodings,
plus a proposed new MOUSE-BUTTON-ENCODE function
(untested!) for the LISP Machine are included.

As always, comments are solicited -- this thing will
probably need yet another round of revision.
-- Quux

JERRYB@MIT-AI (Sent by BEPPE@MIT-AI) 12/22/78 19:05:59
To: (BUG LISPM) at MIT-AI
When EINE returns it fails to take its windows off the ACTIVE-WINDOWS
list (on band 4).

tk@MIT-AI (Sent by ___034@MIT-AI) 12/22/78 13:59:09
To: (BUG LISPM) at MIT-AI
I think howard feels the same way as I do:  that message passing may be the
right thing, but that <- is the last thing I ever want to type to get it.  We have
a perfectly winning character which is a left arrow.  If you want to use an arrow,
how about that one?  One might also ask why names which come to mind like "call" or
"send" were rejected.  I find either of those much easier to read and type.

JLK@MIT-MC 12/22/78 13:41:17
To: (BUG LISPM) at MIT-MC
Is there some reason that a default set of fonts is not normally loaded?

Also, there should be an editor command to list the fonts which are currently
available, loaded, assigned or whatever.


DLW@MIT-AI 12/21/78 23:07:36
To: (BUG LISPM) at MIT-AI
RMS, Moon and I talked for a while about the use of the new data types
for the implementation of streams.  The <- function seems to be buying
two things: first, it causes the variable SELF to be bound, and secondly,
it allows messages to be send to such Lisp obejets as numbers and arrays,
as well as objects, entities and the other functional objects.  The
former function can simply be put into the microcode for DTP-ENTITY,
and the latter is not needed for any of the applications for which we
will be using "entities" as part of Lisp (they are only there for people
who do NOT be planning to use Lisp, but rather to do everything with
entity-like operations).  Therefore we agreed that the microcode should
be changes to bind SELF for dtp-entities, and that after some more time
for them to settle down, streams will be implementable as dtp-entities,
and still invoked in the manner of regular Lisp functions.  Existing
code to dfeine streams and call streams will still work, and gradually
all streams can get converted so that changes to the main "stream" class
will not have to be duplicated in STREAM-DEFAULT-HANDLER (the latter being
a clumsy way of implementing superclasses which will eventually be flushed).
We think this scheme should gain us all of the important advantages of
entities without most of the problems.

HIC@MIT-MC 12/21/78 22:59:51
To: RMS at MIT-AI, (BUG LISPM) at MIT-AI
I go along with RG's comments as long as we add an alias name to <-.
I suggest STREAM-CALL.


RMS@MIT-AI 12/21/78 21:15:55
To: (BUG LISPM) at MIT-AI
I am surprised to hear an objection to making IO streams
use message passing because they already do.  They just do
it in an inefficient and kludgy way which requires special
case crocks such as the stream default handler to do things
which are natural when classes are in use.
It is bad for the system to have two similar but incompatible
sorts of message passing protocols, because that it just means
that the user has to remember that you send a message to a window
one way and send a message to a stream another way.  Since the
stream way is clearly inferior, it ought to be flushed.

What this amounts to is
1) Making people call streams with <- instead of funcall, and
2) making streams be instances of classes.
But 2 does not have to be done instantly.  All that really needs
to be done is to change the existing streams from being of
DTP-CLOSURE to DTP-ENTITY, and they will continue to work
while being gradually replaced by real instances of classes.

Only the <- function, ENTITYP, and something to create an ENTITY
have to be in the cold load.

MOON@MIT-MC 12/21/78 21:04:29 Re: Making I/O streams entities
To: (BUG LISPM) at MIT-AI
RG's original idea of entities was that they be closures that accept
the :WHICH-OPERATIONS operation.  I/O streams already are such; in fact,
I suspect all other things that claim to be entities are not.  So
it would be OK to make them DTP-ENTITY instead of DTP-CLOSURE if that's
still what DTP-ENTITY means.

On the other hand, I do not at all think it is appropriate to change the
system to use classes and message-passing for I/O streams.  There isn't
much to be gained by this, I/O streams already do what we want them to do,
and I don't consider the message-passing and class stuff to be mature enough
yet to be reasonable to put into low-level stuff that doesn't need it
and to be worth putting into the cold load.

HIC@MIT-MC 12/21/78 14:01:17
To: RMS at MIT-AI, (BUG LISPM) at MIT-AI
I do not agree that I/O streams should be made into entities.   I am
not yet ready to accept the permeation of the message passing stuff into the
very low level of the system.  Not that I don't think the message-passing stuff is
worthwhile, but it is still too new and unused and untested to force
it unto the user.  The screen package does not orce it on to the user, whereas
user-visible I/O streams would.


RMS@MIT-AI 12/21/78 06:14:29
To: (BUG LISPM) at MIT-AI
Correction: it is only files that don't work on the chaosnet,
since SUPDUP and HOSTAT work.  This is band 3 on cadr 1.

RMS@MIT-AI 12/21/78 05:47:42
To: (BUG LISPM) at MIT-AI
The chaosnet doesn't work at all in baind 3.
It just loops doing nothing.
I can't tell why.  The processes are all running
according to PEEK.
I am not going to try to investigate this.

RMS@MIT-AI 12/21/78 05:21:01
To: (BUG LISPM) at MIT-AI
I made a new world again.  It works except that
if you enter the editor and do 
C-X C-F Help Space C-G C-G 123
it gets an error and then stays in NETI trying to load the error table.
I can't load the error table manually either.

RMS@MIT-AI 12/21/78 05:19:31
To: (BUG LISPM) at MIT-AI
IO streams ought to be made into entities now.
This would require putting classes in the cold load.

RMS@MIT-AI 12/21/78 04:41:33
To: (BUG LISPM) at MIT-AI
Every time I do C-M-C-M-Return, it prints out the number of the current band
instead of the band which it really is.

BEE@MIT-AI 12/20/78 12:35:46
To: (BUG LISPM) at MIT-AI
From the last messages I received, it is clear that the progress of CADR2 and CADR3 is
not known. Basically as the messages stated, both are broken in a number of ways.
M-Mem parity errors, Disk errors and Main memory parity errors on CADR2. CADR3 is not
guaranteed to have a debugged set of boards at any time. Also boards that are labeled
as debugged are not guaranteed to work in any reasonable way, unless you know that they
have been plugged into a machine for hours of day to day operation. It only means that
to the ability to test, they work at least some of the time. I would prefer it if
people did not switch boards around unless they absolutely need to, to make a machine work.
If I am debugging a flakey disk control in CADR3, the last thing I want is flakey memory
from CADR2 in CADR3. I am hoping to get two machines that mostly work, so that I can
debug the other when it craps out, but this currently isn't possible because of various
problems with the CHAOS net for CADR3. In any case if people localize problems, I am
happy to hear about it.

RG@MIT-AI (Sent by RG0@MIT-AI) 12/20/78 07:59:04
To: (BUG LISPM) at MIT-AI
 THE NEW SCREEN PACKAGE IS PARTIALLY INSTALLED, SO
DONT TRY TO MAKE A NEW COLD LOAD, ETC.  INSTALLATION
SHOULD BE COMPLETED TOMMORROW.

RMS@MIT-AI 12/19/78 02:43:39
To: (BUG LISPM) at MIT-AI
I believe that the new screen stuff can be installed any time.

RMS@MIT-AI 12/19/78 02:06:02
To: (BUG LISPM) at MIT-AI
I did (LOAD "STILES;FNTDEF") and got FILE NOT FOUND.
FNTDEF > existed, but FNTDEF QFASL did not (and wasn't supposed to).
It appears that the default fn2 was QFASL and LOAD wasn't
smart enough to try both.  (LOAD "STILES;FNTDEF >") worked.

RG@MIT-AI 12/18/78 23:49:35
To: (BUG LISPM) at MIT-AI
  THE CHAOSNET HAS TEMPORARILY BEEN TERMINATED IN THE 9TH FLOOR
PHONE CLOSET.  SPEECH AND PLASMA ARE INACCESSIBLE.
--RG+JLK

MOON@MIT-AI 12/18/78 10:22:00
To: (BUG LISPM) at MIT-AI
CC: JOHAN at MIT-AI
LMIO;DRAW is obsolete and should not be used.  Please let me know of any
functions in here that you use, and whether or not they work, so they can
be cleaned up, installed, and documented.

MOON@MIT-AI 12/18/78 10:21:20
To: JOHAN at MIT-AI
CC: (BUG LISPM) at MIT-AI
I looked at the expansion of that function of yours that doesn't compile,
and indeed you have too many local variables.  You have about 40. legitimate
local variables, including a couple compiler-generated ones as part of in-line
MAPC, and then you have a whole pile of LET*'s which are not nested
but generate new local variables each time; your problems could be alleviated
if the compiler allocated FEF-ARG-INTERNAL-AUX -type variables to the same
local-variable slots when their lifetimes don't overlap.  Don't expect this
soon, though.  You could kludge around it by changing the multiple LET's into
a single LET and SETQ's, or by breaking the function into two (since the function
is generated by macros, this could be hard to do.)

TK@MIT-AI 12/18/78 07:50:07
To: (BUG LISPM) at MIT-AI
MYSTERIOUS ILLOP ON #2 TRACED TO DISK SWAP ERROR, STATUS IN A-DISK-LAST-STATUS
WAS 1601000001 (HEADER COMPARE ERROR)

RG@MIT-AI 12/17/78 23:07:07
To: (BUG LISPM) at MIT-AI
  CODE 13 IN AN ITS FILE GETS CHANGED INTO <VT> (EVIDENTLY BY THE
FILE JOB) AS SEEN FROM EINE ON THE LISPM.  IT WOULD SEEM TO BE MUCH
BETTER TO INTERPRET IT AS UP-ARROW (IE LEAVE IT 13 INSTEAD OF MAPPING IT
TO 213) SINCE VERTICAL TAB IS SO COMPLETELY RANDOM.

TK@MIT-AI (Sent by ___016@MIT-AI) 12/17/78 07:51:51
To: (BUG LISPM) at MIT-AI
(TELNET) GETS AN "ISE0" MESSAGE WHEN THE DESTINATION HOST IS DOWN

RMS@MIT-AI 12/17/78 03:32:33
To: (BUG LISPM) at MIT-AI
I put in making output wait on non-exposed windows
and discovered that this screws all the things like the
error handler and break which don't know about windows.
If the main window is not exposed, CONSOLE-IO-PC-PPR is output-held,
so those things can't type out.
So I made output-holding not happen on that pc-ppr,
which eliminates most of the desirable visible effects of output holding.
Any ideas?

RG@MIT-AI 12/16/78 09:49:33
To: (BUG LISPM) at MIT-AI
  CADR1 CMEM PARITY ERROR LOCN 6572 PICKED BIT 11 (2 IN MF FIELD).

GLS@MIT-AI 12/15/78 13:41:48
To: RMS at MIT-AI
CC: GLS at MIT-AI, (BUG LISPM) at MIT-AI, nil at MIT-MC

    RMS@MIT-AI 12/15/78 00:07:47
    I think that CHPROP is far too hairy.
    Distinguishing characters from numbers, just as I expected,
    is creating a need for a large number of new conversion
    functions which are not needed the old way.  I think this shows
    that the whole thing is a loss.
Thank you for bringing up a point I neglected to mention in the proposal.
There is nothing in the proposal which requires characters to be a
separate data type, and it is permissible to implement them as fixnums,
or unary lists of NILs, or whatever the implementation desires.
"Character" is merely a conceptual abstraction, like "alist",
for the purposes of the proposal.  What I have mostly done is
REMOVED the explicit dependency the LISP Machine has on the
representation in fact being fixnums.  The newly proposed functions
simply replace the byte pointers like %%KBD-CONTROL-META used with
LDB.  Also, there is an attempt to avoid a rigid requirement that
particular characters correspond to particular character codes --
after all, on an ASCII machine one will probably have the <RETURN>
character, but it will probably also be inconvenient or impossible
to represent it as 215.  As a consequence, there is a predicate
GRAPHICP, which can hide whether or not a particular implementation
was able to make thhe internal coodes for graphic characters
contiguous (e.g. 0-177).
I agree that the proposal is hairy, but I think it is hairy not so
much because of what it says, as because of what it avoids saying.
There is nothing which prevents the LISP Machine from adhering to
the proposal and also continuing to use LDB on %%KBD-CONTROL-META
-- it's just that programs which do the latter are likely not to
be able to run in various NIL implementations for that reason.

RG@MIT-AI 12/15/78 10:04:53
To: (BUG LISPM) at MIT-AI
  RE CHAOS NET PROBLEMS ON AI.
PROBLEM PRETTY CLEARLY IS LONG PACKET LOSSAGE ON CADR1.

  LOSSAGE IS A FUNCTION OF THE PARTICULARE FILE YOU ARE TRYING TO
HACK.  SAME FILE LOSES WHEN TRYING TO GOBBLE IT FROM EITHER
MC OR AI.  CADR2 WINS ON THIS FILE FROM AI.  LOSSAGE IS BAD-BIT-COUNT.

  CAUSE OF DROP-DEAD S IN NET-RECEIVE WAS THAT IT COULD GET A NEGATIVE
WORD COUNT IF ENTIRE PACKET WAS SHORTER THAN HARDWARE HEADER WAS SUPPOSED
TO BE.  CODE CHANGED IN SOURCE TO BE MORE DEFENSIVE.

JOHAN@MIT-AI 12/15/78 08:29:02
To: (BUG LISPM) at MIT-AI
I got the error " > 100 local variables etc." and "ERROR 1: You have been screwed"
etc., and the function only had about 30 local variables!, I have to run this functin
intepreted to win.
johan

JOHAN@MIT-AI 12/15/78 08:04:25
To: (BUG LISPM) at MIT-AI
The CHAOS net bugs make the LISPM unusable.  One of
"trap 4646" or "Host not responding" happens every 30 seconds.
The trap at 4646 can happen at any time, regardless if
you are using the CHAOS net.

Strangely, you can always load QFASL files without an error, but
never a text file.
johan

JOHAN@MIT-AI 12/15/78 07:50:33
To: (BUG LISPM) at MIT-AI
JERRY's trap at 4646 happens very often.

JERRYB@MIT-AI 12/15/78 04:31:26
To: (BUG LISPM) at MIT-AI

Several times I have gotten the following error message at random
times, sometimes while the machine was idle.

>> TRAP 4646 (SUBSCRIPT-OOB M-Q M-S)
the subscript, 374, was beyond the length, 374, in AS-1
while in the function CHAOS:NET-RECEIVE <- CHAOS:RECEIVE-ANY


GLS@MIT-AI 12/14/78 21:48:43 Re: Proposed character set standard
To: nil at MIT-MC
CC: (BUG LISPM) at MIT-AI
See MC:NIL;NIL CHPROP for a new proposal for a character set
standard.  It is the usual attempt to produce a data abstraction
which is strong enough to do most things and weak enough to
make most machines happy.

HIC@MIT-AI 12/13/78 17:27:26
To: (BUG LISPM) at MIT-AI
New file job installed that can handle arbitrary byte
size reading/writing over the chaos net using the "standard" convention.

Please report any anomalies with QFASL files, etc...

--howard

RG@MIT-AI 12/12/78 10:14:40
To: (BUG LISPM) at MIT-AI
  BOMBED IN THE ERROR HANDLER.  IN EH-NEXT-ACTIVE, THE WHERE IT
DOES (= THIS-AP AP)  THIS-AP MANAGED TO COME UP NIL.

HIC@MIT-AI 12/10/78 13:06:56
To: (BUG LISPM) at MIT-AI
I hacked FORMAT so that it now accepts either strings or symbols
as the format string.  This is for MacLISP compatibility.

HIC@MIT-MC 12/10/78 03:25:06
To: TK at MIT-MC, (BUG LISPM) at MIT-MC

    TK@MIT-MC 12/09/78 17:19:22
    If the network ports on AI are all in use and you do a (supdup), the function
    chaos:stream-internal gets a packet with opcode 3 (close) and bombs out.
------
When %COEOF is installed on AI, then the server should send it before sending
a close.  Until that time there is nothing that can be done to fix the problem.


TK@MIT-MC 12/09/78 17:19:22
To: (BUG LISPM) at MIT-MC
If the network ports on AI are all in use and you do a (supdup), the function
chaos:stream-internal gets a packet with opcode 3 (close) and bombs out.


MOON@MIT-AI 12/08/78 01:11:37
To: (BUG LISPM) at MIT-AI
I have installed, on CADR1 only, a new microcode and world load with a couple
of new features.  BITBLT exists.  It isn't documented yet, but you can look at the
test routines in MOON;STIPPL >.  Some of these will soon be installed in the system
and the whole thing will be documented.  Facility for the machine to do disk I/O exists;
this is in SYSTEM-INTERNALS and I don't plan to document it.  The routines are LMIO;DISK >,
probably DISK-READ1 and DISK-WRITE1 are all anyone wants to know about at this point.

BEE@MIT-AI 12/07/78 10:58:29
To: (BUG LISPM) at MIT-AI
A new macro has been added to LISPM2;LMMAC. It is called SELECTOR, which is exactly
like SELECT, but takes a function that is the test, instead of using EQ. If people
think that this is a win, then SELECTORQ might want to be generated.

DLW@MIT-AI 12/07/78 02:08:43
To: (BUG LISPM) at MIT-AI
The installed :CADR gets BITTEST UNDEFINED IN UUO CALL if you use :ATOM
and specify a package (I don't know whether the latter is needed to make
it lose).

DLW@MIT-AI 12/07/78 00:44:10
To: (BUG LISPM) at MIT-AI
Just out of curiosity, why does LISP-TOP-LEVEL1 now clear the CONSOLE-IO-PC-PPR?

MOON5@MIT-MC 12/06/78 19:47:30 Re: CORRECTION TO DLW'S MESSAGE
To: (BUG LISPM) at MIT-AI
ACTUALLY, LOAD AND SO FORTH DO NOT KNOW ANYTHING SPECIAL ABOUT
THE USER PACKAGE.  IF YOU LOAD A FILE THAT DOESN'T HAVE A PACKAGE
PROPERTY ON ITS -*- LINE, YOU AREN'T DOING PKG-LOAD, AND YOU DIDN'T
SPECIFY THE PACKAGE AS THE SECOND ARGUMENT TO LOAD, FASLOAD, ETC.
IT ASSUMES THE PACKAGE YOU HAVE PKG-GONE-TO, WHICH IS INITIALLY THE
USER PACKAGE.

DLW@MIT-AI 12/06/78 17:29:01
To: (BUG LISPM) at MIT-AI
A new system has been installed on CADR1.  There are several
important changes everyone should know about.

First, the "WHat package is it in?" message is gone (yay!!).
For normal user files, the system will assume that you want
the USER pacakge.  For files declared in PKGDCL, the system
will remember as before.  For those of you who have your own
packages (if any), you can put the name of the package in which
the file belongs into the file, by using the new "file property
list" scheme, i.e.  -*- Mode: Lisp; Package: Frobboz -*-.
Also, the functions LOAD, FASLOAD, and READFILE will all take
a package or package name as an optional second argument, and
will load the file into that package.  More detailed documentation
is (should be, anyway) forthcoming.

The default EINE environment now has Control-S set up to be
String Search, and Control-R set up to be Reverse String Search.
You use String Search by typing Control-S, the name of the string,
and altmode; there are other winning hairy features which are
in the self-documentation and are the same as those in ITS
^R String Search.

The Meta-. command in EINE will now do command completion on all
names that have been seen in any tags tables read in, and on the
names of any sections of files being edited in section mode.
The "-" character no longer does completion; use Altmode.  Soon
EINE will attempt to automatically find the source file of any
function loaded into the machine; stand by.

HIC@MIT-AI 12/06/78 05:24:44
To: (BUG LISPM) at MIT-AI
I'm taking the software lock on LMIO;QFILE, LMIO;FILE, and associated
cruft dealing with the "file system".  I probably will be making
seperate versions of stuff and completely changing QFILE, so that if
any changes get made in QFILE I need to know only about functionality, not
about code verbatim.

--howard

BEE@MIT-AI 12/05/78 08:47:18
To: (BUG LISPM) at MIT-AI
If you (SETQ A (* 200000 77777)) then examine A you will find that it has some nice
properties. Basically it is a two word bignum with the top word completely 0. Since
it has a wierd length it is not = to a number that prints the same, but is consed
in a different way. I didn't fix this because Moon may have already noticed it, and
if he hasn't, then he should fix it in the next u-load.

MOON@MIT-AI 12/04/78 21:45:04 Re: Changes to # macro
To: (BUG LISPM) at MIT-AI
I have brought the Maclisp version of the # macro up-to-date with the
Lisp-machine version, and added a new #\ syntax which is like #/ for
non-printing characters.  For example, #\CR is 215, #\SP is 40, #\CALL
is 203, etc.  See LMMAN;IOS for documentation.  These changes are in the
source but not yet installed.

DLW@MIT-AI (Sent by DLW5@MIT-AI) 12/04/78 03:36:33
To: (BUG LISPM) at MIT-AI
The ALL-SPECIAL-SWITCH feature of the compiler does not work,
at least for variables that are not used freely.  It leaves
such variables as locals.

RG@MIT-AI (Sent by HIC@MIT-AI) 12/02/78 20:50:58
To: (BUG LISPM) at MIT-AI
  FOR SOME REASON, CHAOS-RESET SETS ENTRY 0 OF THE INDEX-CONN ARRAY
TO T.  THIS CAN CAUSE RECEIVE-PKT TO BOMB SINCE IT EXPECTS THE
INDEX-CONN ARRAY TO CONTAIN A CONN IF IT IS NON-NIL.

DLW@MIT-AI 12/02/78 03:42:11
To: (BUG LISPM) at MIT-AI
I hereby release the software lock.  I am not going to try to install
the RMS screen system at this time.  Hack away...

GLS@MIT-AI 11/30/78 21:40:14
To: (BUG LISPM) at MIT-AI
CC: NIL at MIT-MC
Browsing throughh the wonderful LISPM manual, an idea or two...

One thing I have always found tricky, even dealing with my own
code, is that often when I get a correctable error it is not clear
what the precise effect of proceeding or restarting will be.
As a simple example, WRNG-TYPE-ARG and WRNG-NO-ARGS errors in
MacLISP, though their names are similar, do completely different
things with the object given to proceed with.  Often in my own code,
for lack of a better error category, I use FAIL-ACT (I see this is
not a restriction in the LISP Machine), but then can't figure oout
what happens when I continue without looking at the code.
It occurs to me that an error message should always be accompanied
by a message describing the effects of proceeding or restarting
(or even, for that matter, aborting).
Now as long as the CERROR function in LISPM has these two flags
"proceedable-flag" and "restartable-flag", I would like to suggest
institutionalizing the following convention: a non-NIL value foor
such a flag shoould by convention be a string describing the result
oof taking the action permitted by that flag.  These strings should
be available to the handler.  The default handler should be
prepared to print them in response to ? or HELP.
Examples:
	(cerror "the value will be returned as that of the call"
		nil
		':inconsistent-arguments
		"The call to ~A used the inconsistent arguments ~A."
		the-fn the-args)
	(cerror "the value should be a stream to use instead"
		"I will try again to establish the CHAOSnet connection"
		':bagbiting-network
		"CHAOSnet site ~A is not responding"
		host)
[In the first example, I spuriously gave the-fn as an argument, which
ought to be there, contrary to the manual?]  For the second
example, typing HELP at the debugger might say, among other things:
	If you proceed (Control-C), the value should be a stream to use instead.
	If you restart (Meta-C), I will try again to establish the CHHAOSnet connection.
I haven't worked out all the details, but you get the general idea.
[By the way, haucome the error type :invalid-function doesn't let you
specify the function to use, instead of just aborting the whole call?]

An idea for CHECK-ARG is that it could use property lists in an
organized way too save typing.  The basic idea is (don't implement
it this way!!!):
	(defun check-arg (&quote varname &eval type-symbol &optional
				(predicate (fsymeval type-symbol))
				(description (or (get type-symbol 'check-arg-description)
					(string-append "something that satisfies "
						(cond ((symbolp predicate) ;ugh
							predicate)
							(t type-symbol))))))
		...
In this way  (CHECK-ARG A 'NUMBERP) [possibly without the quoote mark?]
would suffice, probably in conjunction with
(DEFPROP NUMBERP "a number" CHECK-ARG-DESCRIPTION).  [Again, this is
perhaps not the most flavorful way to go aboout it.]

Finally, it seems a shame that I cannot compute a function for
CHECK-ARG because oof its weird form/symbol hack on
its secoond "argument" -- it is reminiscent of the computed GO hack
or SSTATUS CHTRAN.  I might want to write
	(CHECK-ARG B (COND ((SYMBOLP A) (FUNCTION SYMBOLP))
			   ((STRINGP A) (FUNCTION STRINGP))
			   (T (ERROR ...)))
		   (FORMAT NIL "of the same type as ~A" A)).
Oh well.
-- Q

DLW@MIT-AI 11/29/78 02:08:43
To: (BUG LISPM) at MIT-AI
I hereby grab the global lock on Lisp Machine software, specifically on anything dealing
with processes/windows/jobs etc.  This includes the chaos net
as of tomorrow.  Duplicate versions will exist that use the new
message-passing stuff, and the old ones should not get improvements
made.  If you are dying to do something, talk to me about it before
doing it!  Thank you.  I will try to release the lock ASAP.

hic@MIT-AI (Sent by RG@MIT-AI) 11/26/78 21:39:26
To: (BUG LISPM) at MIT-AI
please dump and save nay crashed CHAOS file jobs for me...
thanks,
--howard

HIC@MIT-MC 11/26/78 04:56:55
To: (BUG LISPM) at MIT-MC
Pack B will now come up with the name of the machine instead of
105 FOOBAR (band 3 btw) and will use the chaos net by default.

If someone gets ambitious load LISPM;LTOP, LMIO;QFILE, and AI:LMIO;CHAOS (note the
AI:) onto pack E and save it as the current band....then pack E will win in this
way also.

I believe the CHAOS net is robust enough to handle the use, and I'd like to know
if anything dies an unatural death due to it.

Funny byte size transfers will not work!  BEWARE!  To do them use
(SI:FILE-USE-CHAOS NIL) first.


H@MIT-AI 11/26/78 04:56:19 Re: CADR 2 disk
To: (BUG LISPM) at MIT-AI
The problem with the disk was that the NRZ Data to the drive
was arriving just at the wrong moment, and the logic that
picks the write clock phase within the drive was making the
worng decision.  The Calcomp logic leaves something to be
desired.

Currently, the disk will only write if the Rd/Wr card is on
an extender.  The right fix is to put a 1/2 clock delay in the
disk control, and jumper select between 0, 1/2 delay when the
drive is setup.  I started to put this fix in but was diverted...

MOON5@MIT-MC 11/21/78 22:55:25 Re: REQUEST FOR COMMENT
To: (BUG LISPM) at MIT-MC
I HAVE BEEN THINKING FOR SOME TIME OF CHANGING THE LISP MACHINE
CHARACTER SET BY INTERCHANGING CODES 0-37 AND 200-237.  THIS WOULD
MAKE IT POSSIBLE TO ADD MORE PRINTING CHARACTERS IN THE FUTURE
WHILE LEAVING ALL PRINTING CHARACTERS CONTIGUOUS.  IT WOULD ALSO
LIMIT US TO 40 NON-PRINTING CHARACTERS, WHICH MIGHT NOT BE ENOUGH.
IT WOULD REQUIRE CHANGING QUITE A FEW PROGRAMS SINCE WE HAVEN'T
BOTHERED TO USE SYMBOLIC NAMES FOR THE FORMAT-EFFECTOR CHARACTERS
SUCH AS CARRIAGE-RETURN, RUBOUT, ETC.  ANY COMMENTS?

TK@MIT-AI (Sent by TK0@MIT-AI) 11/20/78 07:02:23
To: (BUG LISPM) at MIT-AI
I got to the call to %halt in kbd-process-top-level.  I have no idea what I
typed (probably escape followed by form, but I am not sure).

TK@MIT-AI (Sent by TK0@MIT-AI) 11/20/78 06:46:52
To: (BUG LISPM) at MIT-AI
there is still a divide by zero bug in the menu-deduce-parameters function
when it is given a null menu list.

RG@MIT-AI 11/19/78 11:44:08
To: (BUG LISPM) at MIT-AI
CADR1 C-MEM PARITY ERROR. 2 BIT IN A-SOURCE FIELD DROPPED.
BIT 33.

BEE@MIT-AI 11/18/78 19:32:58
To: (BUG LISPM) at MIT-AI
 CADR1 SEEMS TO CLOBBER A MEM LOCATION 1777 TO ZERO.  IT COULD BE
SOME SORT OF SOFTWARE BUG, BUT ITS PROBABLY HARDWARE.  IT DOESNT REALLY
MATTER, BUT SHOULD BE DOCUMENTED IF ITS GOING TO BE LEFT THAT WAY.

dlw@MIT-AI (Sent by TK0@MIT-AI) 11/17/78 16:25:07
To: (BUG LISPM) at MIT-AI
When you type Control-Meta-Control-Meta-X where X is neither return or rubout,
the action taken should be the same as for Return, not the same as
Rubout; that is, it should take the less-drastic, more-easily-recoverable action.

moon@MIT-AI (Sent by TK0@MIT-AI) 11/17/78 11:14:54
To: (BUG LISPM) at MIT-AI
There is a blue notebook, labelled "LISP MACHINE BOARD STATUS",
in room 906.  It has two pages for each physical board in the world.
When you stuff, debug, modify, or otherwise mung a board, please
make a 1 line note with date and initials in this book so we can
keep track of what's happening with which boards.  An especial
problem is keeping track of which boards have modifications and which
don't which I haven't been so careful on myself.

H@MIT-AI 11/15/78 00:15:25 Re: CHAOS:PRINT-PKT
To: (BUG LISPM) at MIT-AI
I made some changes to make the print avoid bombing out
for crufty formatted packets. Some fix to make the
print of the string careful needs to be added. Changes
are in source only.

RG@MIT-AI (Sent by HIC@MIT-AI) 11/14/78 05:06:05
To: (BUG LISPM) at MIT-AI
  TURNNED OUT THERE WERE SOME USES OF DPB THAT WERE SCREWWED,
SO I HAVE INTRODUCED %LOGLDB AND %LOGDPB WHICH DONT LOOK AT
DATA TYPE OF WHATS BEING EXTRACTED/DEPOSITED INTO, AND DONT
CARE ABOUT SIGN BIT, ETC.  
  I MADE A NEW WORLD LOAD, WITH FONTS CONVERTED TO 32 BITS.

RMS@MIT-AI 11/14/78 03:58:57
To: (BUG LISPM) at MIT-AI
I have documented my screen manager package in RMS;PRCDOC >
and RMS;WINDOC >.  The latter is written with the term TVOB
replaced throughout by WINDOW, a change which I intend to make.

RG@MIT-AI (Sent by HIC@MIT-AI) 11/13/78 23:24:15
To: (BUG LISPM) at MIT-AI
  MICROCODE REASSEMBLED.   LDB AND DPB WILL NOW ERROR ON BYTES
LARGER THAN 23. BITS.  ALSO, DPB WILL ERROR ON A DPB WHICH
ATTEMPTS TO CHANGE THE SIGN OF A FIXNUM.  THIS LAST IS SORT OF
A DIAGNOSTIC TO SEE HOW MANY THINGS WILL GET BROKEN IF
DPB IS CHANGED TO CREATE A BIGNUM IN THIS CASE.

HIC@MIT-AI 11/13/78 16:49:48
To: (BUG LISPM) at MIT-AI
(%unibus-write will accept anything.) (%unibus-write 100 'A) will not give an error.

moon@MIT-AI (Sent by HIC@MIT-AI) 11/13/78 16:40:51
To: (BUG LISPM) at MIT-AI
Cases of DPB that lose:
(DPB 0 40 0) => non-zero
(DPB 0 0 0) => bad data-type

MOON@MIT-AI 11/12/78 20:07:18 Re: Changes
To: (BUG LISPM) at MIT-AI
I have removed the misfeature that the compiler temporary areas
were reset between whacks of the output file.  The particular bug that
prompted this was that the value of LOCAL-DECLARATIONS was getting screwed
up by this, but this seems to have been implicated in a long series of problems.

I also moved ARRAYCALL from COMPAT to the system, and made the compiler
recognize (STORE (ARRAYCALL ...)).  While these are only for Maclisp compatibility,
it seems worth having them since there's no AREF and ASET in Maclisp
and we do have programs that want to work in both.

DLW@MIT-AI 11/12/78 19:17:28
To: (BUG LISPM) at MIT-AI
EVERYBODY: I know about the "cursor being off by one" bug in EINE.
It is very hard to fix in EINE.  ZWEI does not have this problem.
I realize it loses very badly, and I am completely apologetic;
I will try to get ZWEI up as soon as possible.

h@MIT-AI (Sent by HIC@MIT-AI) 11/12/78 16:33:54
To: (BUG LISPM) at MIT-AI
I don't know how to create it, but somehow the
cursor in EINE as displayed was off one line
from where the actual cursor was.
This was a 5 min old load from band 7

HIC@MIT-AI 11/12/78 10:46:56
To: (BUG LISPM) at MIT-AI
the two mouse's have differing ideas of left and right.

RG@MIT-AI (Sent by RG0@MIT-AI) 11/11/78 22:55:17
To: (BUG LISPM) at MIT-AI
  NEW LISPM1;TS CADR DUMPED.  IT HAS A LOT OF CONS STUFF FLUSHED,
AND SEVERAL FILES RECOMPILED WHICH HAD BEEN UPDATED IN SOURCE BUT
NOT RECOMPILED FOR A LONG TIME.
  IF THE MACHINE HAS BEEN "STARTED OUT FROM UNDER" THE CONSOLE PROGRAM
(WITH C-M-M-C-RETURN, ETC), CNTRL-S CAN BE USED TO CAUSE THE CONSOLE PROGRAM
TO READ IN A FRESH HARDWARE STATE EVEN THO IT THINKS IT HAS A VALID
SOFTWARE STATE.  DO NOT TYPE REDUNDANT OR UNNECESSARY CNTRL-S ES OR
YOU WILL SCREW YOURSELF.

RG@MIT-AI (Sent by RG0@MIT-AI) 11/11/78 20:15:53
To: (BUG LISPM) at MIT-AI
 CADR1 C-MEM PARITY ERRROR.  PICKED 40000 BIT IN LOCN 4152. (THIS TURNNED DEST OF
M-ZR INTO M-A).

h@MIT-AI (Sent by HIC@MIT-AI) 11/11/78 14:17:39
To: (BUG LISPM) at MIT-AI
Why doesn't some wizard fix FILE2 so that it doesn't .VALUE so much
when cadr is rebooted.

There should be a thinbg to verify CMEM contents in the new format
of things.

HIC@MIT-AI 11/11/78 14:12:44
To: (BUG LISPM) at MIT-AI
the 20 000 000 bit in location 7214 of control memory picked.

RG@MIT-AI (Sent by HIC@MIT-AI) 11/11/78 11:48:24
To: (BUG LISPM) at MIT-AI
  THE FILE LISPM;MACROS >  HAS BEEN MOVED TO LISPM2; .
(A LINK WAS LEFT IN LISPM).  NOW ALL THE FILES MENTIONED
IN LMDOC;.COMPL PRELUD ARE IN ONE DIRECTORY, LISPM2;, AND
A COPY OF THE NECESSARY STUFF EXISTS ON MC.
  THE CRUFTY COPIES OF .COMPL PRELUD IN VARIOUS PLACES SHOULD
BE UPDATED WHEN CONVIENENT.

ed@MIT-AI (Sent by DLW@MIT-AI) 11/11/78 04:07:36 Re: login
To: (BUG LISPM) at MIT-AI
(load "strnge:device;foo qfasl")
(login 'ed)
"openra strnge: NO SUCH DEVICE"
obviously this should always use DSK:.

MOON5@MIT-AI 11/10/78 16:29:26
To: (BUG LISPM) at MIT-AI
The lossage with the Lisp machine chaos net
interface seems to be a combination of two things.  One was a bug
in the IOB (introduced by a previous fix to a similar bug) that allowed
it to power up in a losing state (which I have fixed).  The other is a
transceiver problem which causes it to be able to send to MC but not
to receive from MC, which I haven't attempted to do anything about.

RG@MIT-AI 11/09/78 23:41:04
To: (BUG LISPM) at MIT-AI
CADR I dropped bit 7 of control memory location 1477

MOON@MIT-AI 11/09/78 16:23:12 Re: Microcode internal convention changes
To: (BUG LISPM) at MIT-AI
A-TEM has been replaced with several new specialized A registers.
M-3 has been replaced with M-TEM (which also implies a new A-TEM).
A new M-3 has been introduced, which behaves the same as M-1, M-2, and
M-4.  Nothing uses it yet.

The page-fault/interrupt checking instructions have been changed.
Here are the new ones:
(ILLOP-IF-PAGE-FAULT) - put this where a page fault should not happen
(CHECK-PAGE-READ), (CHECK-PAGE-WRITE) - these are the normal ones to use
(CHECK-PAGE-{READ/WRITE}-NO-INTERRUPT) - used only inside the interrupt handler,
  when PGF-{R/W} retry the cycle, and when you don't want to let the interrupt
  handler bash the map.
(CHECK-PAGE-{READ/WRITE}-SEQUENCE-BREAK) - when you want to allow sequence
  breaks.  This one hasn't been finished yet.

To review, interrupts are hardware signals that are handled entirely
in microcode without swapping in any pages from the disk, without getting
involved with the garbage collector, and without clobbering any registers
except those that page faults clobber.  Sequence breaks are (will be)
macro-code interrupts which result in stack-group switching.
Many comments have been changed to reflect this terminology.

This version of the microcode also has some new stuff for booting.  Type
control-meta-control-meta-rubout to do a "cold boot".
Type control-meta-control-meta-return to do a "warm boot", which is like
a 1@G (doesn't do a disk-restore).

Due to lack of pdp10 time, this microcode has not been debugged yet.  That
hopefully will happen tonight.

DLW@MIT-AI 11/08/78 23:29:13
To: HIC at MIT-AI, (BUG LISPM) at MIT-AI
It would be
  1) difficult and lengthy, and
  2) a violation of reasonable modularity
to have QCMP open-compile MAPATOMS, since our obarrays are more hairy
than those of MacLisp.  The only way to win with locals is to use lexical
scoping; wait for the SCHEME machine.  Sorry.

RG@MIT-AI 11/08/78 19:29:55
To: (BUG LISPM) at MIT-AI
   FILE-DEFAULT-PATHNAME HAS BEEN CHANGED TO ACCEPT MACLISP TYPE
FILE LISTS (AS WELL AS THE PREVIOUS PATH NAME STRINGS).

RG@MIT-AI 11/08/78 18:15:15
To: (BUG LISPM) at MIT-AI
  CONTROL MEM PARITY ERROR.  PICKED 1000000 BIT IN LOCN 2655.  THIS IS THE
20 BIT IN THE M-DEST FIELD.

HIC@MIT-AI 11/08/78 03:58:40
To: (BUG LISPM) at MIT-AI
Though MAPATOMS seems to exist on the Lisp Machine,
the LISPM compiler does not seem to be able to handle it like the mapping functions --
namely, having the function inside see the local variables.  Can this be fixed?

HIC@MIT-AI 11/08/78 03:37:41
To: (BUG LISPM) at MIT-AI
I changed the definition of ALLREMPROP to use MAPATOMS in UTIL

HIC@MIT-AI 11/08/78 03:25:06
To: (BUG LISPM) at MIT-AI
apparently sys:*lexpr-arglist* doesn't have a special
property but needs one??  Things seem to work fine with it, but without
it a function defined as (defun foo expr nargs ... (arg 1))
gets an unbound error during the (arg 1) call.

DLW@MIT-AI 11/07/78 21:26:08
To: (BUG LISPM) at MIT-AI
I have fixed the 24 bit/32 bit spasticity in the run lights by changing the
microcode to only write 24 bits.

DLW@MIT-AI 11/07/78 20:07:25
To: HIC at MIT-AI
CC: (BUG LISPM) at MIT-AI
I have fixed in the source the bug with TV-foo-ON-bar; %XBUS-WRITE was
always returning a DTP-TRAP.  I guess the fact that this is not the fix
you were going to do suggests (with no disrespect intended) that you should
keep sending bug reports...

HIC@MIT-AI 11/07/78 04:39:58
To: (BUG LISPM) at MIT-AI
appropriate fix to the TV-foo-ON-bar problem
is to have it return NIL for the 32 bit TV case, as that's what it does for
the old TV contreoller.

P.S.  Should I modify this code myself or should I simply send bug notes?

HIC@MIT-AI 11/07/78 03:53:38
To: (BUG LISPM) at MIT-AI
The bug with the TV-foo-ON-bar is that they are simply returning the
value of the last operation done, which is apparently illegal.  Sticking
a T at the end of the function makes them work fine.

HIC@MIT-AI 11/07/78 03:48:33
To: (BUG LISPM) at MIT-AI
TV-BLACK-ON-WHITE and TV-WHITE-ON-BLACK when
typed at top level say (TRANS-TRAP) #<DTP-TRAP number> was read from 6061011

When done in a prog, the machine illops

RG@MIT-AI 11/07/78 02:10:45
To: (BUG LISPM) at MIT-AI
  DPB OF FIXNUM SIZED FIELDS IN BIGNUMS NOW WORKS.
  DPB WILL COMPLAIN IF THE THING BEING DPB ED INTO IS NOT A
FIXNUM OR A BIGNUM.   THIS ERROR CHECK CAUGHT A COUPLE OF LONG
STANDING BUGS; IN PARTICULAR, INITIALIZATION OF A DEFSTRUCT
WAS WRONG IN SOME CASES.  RECOMPILING SHOULD FIX THIS IF IT
HAPPENS.
  %P-DPB AND %P-DPB-OFFSET ARE UNCHANGED.

RMS@MIT-AI 11/06/78 18:43:11
To: (BUG LISPM) at MIT-AI

    RWK@MIT-MC 11/06/78 12:46:31
    Is there any way for the file job to get the HSNAME so the .LISPM init's can
    be moved to their rightful home?  Failing that, perhaps a file with an ALIST
    of people without directories, and their home directories?  (INIT); is
    empty now on MC and ML, and it would be nice to make it vanish on AI too.

It would seem that the file job could make use of the LSRTNS
subroutines provided for this purpose.

HIC@MIT-AI 11/06/78 04:29:40
To: (BUG LISPM) at MIT-AI
It appears that TV-ERASE opens the screen.
I want to complement boxes on the screen and NOT
make the mouse blinker flicker.
There doesn't seem to be any way to do this.

MOON@MIT-AI 11/05/78 23:43:01 Re: AI Chaos pdp11 status
To: (BUG LISPM) at MIT-AI
I have connected up power and plugged in the boards and things seem to be OK.
The following are required before we can win:
	Cabling from the 10/11 interface to the 11/10 interface.
	LMMYNM prom for the IOB.
	Chaos net transceiver and cable to it.
The software should be ready to try before these things get done.

RMS@MIT-AI 11/05/78 08:00:32
To: (BUG LISPM) at MIT-AI
The drop dead in fasloading RMS;KBD was due to various things
concerned with the run light that were changed in LMIO;KBD
but not in RMS;KBD.  There still appears to be a bug in the handling
of the run light in that process-scheduler writes -1 into an XBUS
location, thus turning on 24 bits, whereas the microcode appears
to turn on 32 bits.

RMS@MIT-AI 11/05/78 05:54:08
To: (BUG LISPM) at MIT-AI
The machine just got into a state where operations that formerly
worked now give me "error in error handler"
<random array> overpopped".
I had no idea how to find out what was happening
so I just reloaded.

Do you really believe that it is ever going to be possible
for a person to debug a program using no machine other
than one lisp machine?

RMS@MIT-AI 11/05/78 03:12:14
To: (BUG LISPM) at MIT-AI
Doing, in a freshly reloaded machine,
(LOAD "RMS;JOBGBL") <CR>
(JOB-LOAD-DEFS)
(PKG-GOTO "SI")
(JOB-INSTALL)
causes the machine to drop dead fasloading RMS;KBD QFASL,
a file which used to load successfully with this procedure.
I can prevent it from dropping dead then by defining
TV-WHO-LINE-UPDATE to be a no-op, but it drops dead
a few files later (I can't easily tell which).
It appears that the fef of TV-WHO-LINE gets clobbered
by the fasloading, which causes the lossage.
:CODE after the drop dead shows a lot of garbage.
I tried to figure out what area it was in but wasn't able
to coax the console program into telling me.
I tried saying :AREA, which I think used to work,
but it ran for 20 seconds or so without saying anything.

RG@MIT-AI 11/05/78 00:20:29
To: (BUG LISPM) at MIT-AI
  LDB NOW WORKS FOR BIGNUMS (OR AT LEAST, LOADING FIXNUM SIZED
BYTES OUT OF POSITIVE BIGNUMS).  IT COMPLAINS IF THE DATA BEING
LDB'ED OUT OF IS NOT EITHER A FIXNUM OR A BIGNUM.
  HIGH ORDER BITS OF NUMBERS LDB'ED OUT OF ARE SUPPLIED
BY SIGN EXTENDING IF NECESSARY. (NO MORE GARBAGE DATA-TYPE BITS, ETC).	
  REALLY THE RIGHT THING WOULD BE FOR LDB TO ALWAYS RETURN A POSITIVE
NUMBER (EVEN WHEN LOADING A 24 BIT BYTE FROM A FIXNUM).  UNFORTUNATELY,
THIS WOULD REQUIRE IT TO SOMETIMES RETURN A BIGNUM EVEN THO A FIXNUM
WAS BEING LDB'ED OUT OF (IE IF YOU WERE LOADING A 24. BYTE FROM A NEGATIVE FIXNUM).
THIS, IN TURN WOULD BREAK MANY PROGRAMS SINCE THERE ARE MANY OPERATIONS
WHICH DONT WIN ON FIXNUMS YET (LOGAND FOR EXAMPLE).  SO FOR THE TIME BEING
LDB IS GUARENTEED TO ALWAYS RETURN A FIXNUM, WHICH CAN BE NEGATIVE IN THE
PREVIOUSLY MENTIONED CASE.
  %P-LDB AND %P-LDB-OFFSET ARE UNCHANGED.

HIC@MIT-AI 11/03/78 02:37:43
To: (BUG LISPM) at MIT-AI
BARFOLA mode in editor dies on CPT

RG@MIT-AI 11/02/78 09:14:01
To: (BUG LISPM) at MIT-AI
  CADR PICKED THE 200000000 BIT IN CONTROL MEM LOC 314.  (THIS IS THE BIT THAT
SELECTS A-MEMORY DESTINATIONS.)
  THE MICROINSTRUCTION WITH BAD PARITY WAS EXECUTED BEFORE THE MACHINE STOPPED.
THIS SEEMS UNDESIRABLE. IS IT POSSIBLE TO NO-OP IT?

HIC@MIT-AI (Sent by HIC0@MIT-AI) 11/02/78 05:28:51
To: (BUG LISPM) at MIT-AI
TV-ALU-SETZ should be defined

RMS@MIT-AI (Sent by RMS0@MIT-AI) 11/02/78 04:14:12
To: (BUG LISPM) at MIT-AI
I typed CLEAR when the cursor was near the right edge
of a piece of paper, and the <clear> echo went past
the edge.

RMS@MIT-AI (Sent by RMS0@MIT-AI) 11/02/78 01:04:44
To: (BUG LISPM) at MIT-AI
While compiling, for long periods of time both the run light
and the disk light are off, while the who-line says RUN.

MOON@MIT-AI 11/01/78 20:14:36
To: (BUG LISPM) at MIT-AI
the bkpts transmit-list-choke when using the chaos net were
due to a bug in an error-check.  This has been corrected.

BEE@MIT-AI (Sent by RG@MIT-AI) 11/01/78 13:56:26
To: (BUG LISPM) at MIT-AI
There have been some renames made in the new CADR cold load.
STAR => CIRCULAR-LIST
MAKE-ATOM => MAKE-SYMBOL
:CLEAR => :CLEAR-INPUT or :CLEAR-OUTPUT (as appropriate)
BITTEST => BIT-TEST
LDBTEST => LDB-TEST
SORT-GROUPPED-ARRAY => SORT-GROUPED-ARRAY
SORT-GROUPPED-ARRAY-GROUP-KEY => SORT=GROUPED-ARRAY-GROUP-KEY

Programs in EINE;EINE TAGS and LMDOC;LISPM TAGS should have been changed already.
Other files will have to be converted.

HIC@MIT-AI 11/01/78 04:11:01
To: (BUG LISPM) at MIT-AI
Twicew while supduping to MC on CADR I have gotten TRANSMIT-LIST-CHOKE
breakpoints.

I can't really give the circumstances that causes it.

