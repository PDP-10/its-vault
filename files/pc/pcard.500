;DRAW2;PCARD 332,	6:35am  Monday, 20 June 1977
;<PLOT>PCARD.FAI.36,  6-NOV-75 19:09:07, EDIT BY HELLIWELL
;ASK FR80, ASK TRW(PC), ASK SCALE(PC), ASK OFFSET(PC), ASK PLOT
;SET PLOT FILE INPUT
FRSET:	TRNN FLAG,FR80
	 POPJ P,
	TLNN FLAG,QUICK
	OUTSTR[ASCIZ/At FR80 scale of 55, size A just fits (11x8).
/]
	OUTSTR[ASCIZ/FR80 SCALE ?/]
	PUSHJ P,DECIN
	 JRST [	OUTSTR[ASCIZ/HO HO HO!
TRY AGAIN!/]
		PUSHJ P,IERR
		JRST .-1]
	JUMPN TTT,SETFDG
	OUTSTR[ASCIZ/USING 55!
/]
	MOVEI TTT,=55
SETFDG:	MOVEM TTT,FRFUDG
	TLNN FLAG,QUICK			;IF QUICK, OR
	CAIN TTT,=55			;DID HE USE STANDARD?
	 POPJ P,			;YES, THAT'S ALL
	OUTSTR[ASCIZ/FR80 FRAME IS /]
	MOVE T,[FRMAX*=50]
	IDIV T,FRFUDG
	PUSHJ P,MILOUT
	OUTSTR[ASCIZ/ X /]
	MOVE T,[(FRMAX-2*FRYFDG)*=50]
	IDIV T,FRFUDG
	PUSHJ P,MILOUT
	OUTSTR[ASCIZ/ INCHES.
/]
	POPJ P,
;TRWSET
MPC,<
;PADINI - CLEAR SEEN PAD TABLE PRIOR TO INPUT
PADINI:	MOVSI T,MAXPAD
	SETZM PADUSE(T)
	AOBJN T,.-1
	POPJ P,

;TRWSET - CLEAR MAPPINGS AND ASK FOR NEW ONES
TRWSET:	MOVEI T,MAXRET
	SETZM RETMAP-1(T)			;RESET USED RETICLE FLAGS
	SOJG T,.-1
	MOVSI T,MAXPAD
	SETZM PADMAP(T)				;RESET PAD TYPE MAPPINGS
	AOBJN T,.-1
	TRNN FLAG,MAPIT				;MAPPING REQUESTED?
	JRST CHKSYM				;NO
	OUTSTR [ASCIZ/Set mappings from PAD TYPE into reticle #'S
/]
MAPLOP:	OUTSTR[ASCIZ/PAD TYPE NUMBER?/]
	PUSHJ P,DECIN
	JRST [MAPLS1:OUTSTR[ASCIZ/HO HO HO!
/]
		PUSHJ P,IERR
		JRST MAPLOP]
	JUMPE TTT,CHKSYM			;QUIT ON 0
	CAILE TTT,MAXPAD			;LEGAL
	JRST MAPLS1
	HRLM TTT,(P)
MAPLP1:	OUTSTR[ASCIZ/NEW WHEEL POSITION?/]
	PUSHJ P,DECIN
	JRST [MAPLS2:OUTSTR[ASCIZ/HO HO HO!
/]
		PUSHJ P,IERR
		JRST MAPLP1]
	SKIPE TTT
	CAILE TTT,MAXRET
	 JRST MAPLS2
	HLRZ T,(P)
	MOVEM TTT,PADMAP(T)			;SET MAPPING
	JRST MAPLOP

;ADD TEXT DEFINITIONS
CHKSYM:	TRNN FLAG,ADDSYM			;ADDING SYMBOLS?
	POPJ P,					;NO
	CAIE M,TRWDEV
	JRST [	OUTSTR[ASCIZ/SORRY, TEXT NOT AVAILABLE YET.
/]
		POPJ P,]
	OUTSTR[ASCIZ/SYMBOL DEFINITIONS LIVE FOR EVER (IN THIS CORE IMAGE).
BE SURE TO MAKE A SKETCH OF THE SYMBOL INDICATING THE "D" CODE.
/]
	MOVEI A,=60		;START AT 60
CHRDEF:	MOVEI B,177		;SCAN TABLE FOR THIS ONE
	CAME A,ONETAB(B)	;THERE ALREADY?
	SOJGE B,.-1		;NO, LOOP
	JUMPGE B,ISDEF		;FIND ONE?
	OUTCHR["D"]
	MOVE T,A
	PUSHJ P,DECOUT
	OUTCHR["?"]
	PUSHJ P,GETCH
	OUTSTR[ASCIZ/
/]
	ANDI T,177
	CAIN T,12
	POPJ P,				;QUIT ON CRLF
	SKIPE ONETAB(T)
	JRST [	OUTSTR[ASCIZ/ALREADY DEFINED AS "D/]
		MOVE T,ONETAB(T)
		PUSHJ P,DECOUT
		OUTSTR[ASCIZ/"
/]
		JRST CHRDEF]
	MOVEM A,ONETAB(T)
	JRST NEWDEF
ISDEF:	OUTCHR["D"]
	MOVE T,A
	PUSHJ P,DECOUT
	OUTCHR["="]
	OUTCHR B
	OUTSTR[ASCIZ/
/]
NEWDEF:	CAIGE A,=99
	AOJA A,CHRDEF				;LOOP UP TO 99
	POPJ P,

;GETSCL
GETSCL:	SKIPE TTT,SCALE1
	JRST TYPSIZ
	TLNN FLAG,QUICK
	OUTSTR[ASCIZ/SCALE FACTOR?/]
	TLNE FLAG,QUICK
	OUTSTR[ASCIZ/SCALE?/]
	PUSHJ P,DECIN
	JRST [	PUSHJ P,IERR
		JRST GETSCL]
	JUMPN TTT,TYPSIZ
	MOVEI TTT,1
	TLNN FLAG,QUICK
	OUTSTR[ASCIZ/USING SCALE 1!
/]
TYPSIZ:	MOVEM TTT,NSCALE
	POPJ P,
;GETOFF
GETOFF:	TRNE FLAG,DOTAPE
	OUTSTR[ASCIZ/NOTE:DRILL TAPE PROBABLY NEEDS ROTATION AND SPECIAL OFFSET-SEE DRILL
TAPE INFO IN SUDS.RPH[UP,DOC]
/]
	TLNN FLAG,QUICK
	OUTSTR[ASCIZ/X,Y OFFSET (IN INCHES, DECIMAL POINT OK!)?/]
	TLNE FLAG,QUICK
	OUTSTR[ASCIZ/OFFSET?/]
	PUSHJ P,MILIN
	CAIE T,","
	JRST [	CAIN T,12
		JUMPE TTT,DEFOFF
	ILLOUT:	OUTSTR[ASCIZ/HO, HO, HO!!
/]
		PUSHJ P,IERR
		JRST GETOFF]
NOCMU,<	MOVEM TTT,XOFF >
CMU,<	IMUL TTT,5MIL2INC
	HLREM TTT,XOFF
>;CMU
	PUSHJ P,MILIN
	CAIE T,12
	JRST ILLOUT
NOCMU,<		MOVEM TTT,YOFF >
CMU,<		IMUL TTT,5MIL2INC
		HLREM TTT,YOFF
>;CMU
	TRNE FLAG,FR80
	TLNE FLAG,QUICK
	POPJ P,
	OUTSTR[ASCIZ/OFFSET IS IGNORED FOR FR80 OUTPUT!
/]
	POPJ P,

DEFOFF:	CAIE M,LLDEV
	TRNN FLAG,DOMAG
	CAIA
	JRST TRWOFF
	SETZM XOFF			;NO OFFSET UNLESS PHOTOPLOTTER
	SETZM YOFF
	POPJ P,

TRWOFF:	CAIN M,TRWDEV
	 JRST [	OUTSTR[ASCIZ/USING CENTER AT 12 X 10!
/]
		MOVEI T,=12000/5
		MOVEM T,XOFF
		MOVEI T,=10000/5
		MOVEM T,YOFF
		POPJ P,]
	OUTSTR[ASCIZ/USING CENTER AT 10 X 8
/]
	MOVEI T,=10000/5
	MOVEM T,XOFF
	MOVEI T,=8000/5
;*** FILE DSK:SAIDRW;PCARD 401 HAS:
;	MOVEI T,=7000/5
	MOVEM T,YOFF
	POPJ P,

>;MPC
;PRINT MAX X,Y'S AND BIGPAD (PC)
MPC,<
PSIZE:	OUTSTR[ASCIZ/PUT PEN AT 0,0.
FROM FILE, MIN X= /]
	MOVE T,SMLX
	MOVE TT,XOFF
	PUSHJ P,POSOUT
	OUTSTR[ASCIZ/ MAX X= /]
	MOVE T,LRGX
	MOVE TT,XOFF
	PUSHJ P,POSOUT
	OUTSTR[ASCIZ/ MIN Y= /]
	MOVE T,SMLY
	MOVE TT,YOFF
	PUSHJ P,POSOUT
	OUTSTR[ASCIZ/ MAX Y= /]
	MOVE T,LRGY
	MOVE TT,YOFF
	PUSHJ P,POSOUT
	OUTSTR[ASCIZ/
/]
	MOVE T,LRGX
	SUB T,SMLX
	CAILE T,=30000*2/5
	TRNN FLAG,%DOPLT
	CAIA
	OUTSTR[ASCIZ/THIS WILL OVERFLOW THE PLOTTER!!!!!!
/]
	SKIPN T,XOFF
	JRST NXOFF
	OUTSTR[ASCIZ/X OFFSET = /]
	IMULI T,5
	PUSHJ P,MILOUT
	OUTSTR[ASCIZ/   /]
NXOFF:	SKIPN T,YOFF
	JRST NYOFF
	OUTSTR[ASCIZ/Y OFFSET = /]
	IMULI T,5
	PUSHJ P,MILOUT
	CAIA
NYOFF:	SKIPE XOFF
	OUTSTR[ASCIZ/
/]
	SKIPGE T,BIGPAD
	POPJ P,
	OUTSTR[ASCIZ/BIGPAD = /]
	PUSHJ P,DECOUT
	OUTSTR[ASCIZ/
/]
	POPJ P,

POSOUT:	ASH T,-1
	SCALE(T)
	ADD T,TT
	IMULI T,5
	JRST MILOUT
              
         
;SET CHARACTER SCALE(PC), ASK DRILL PLOT(PC), SETUP TRW OUTPUT
CHRSCL:	MOVEI T,=120/5		;HEIGHT OF SIZE 5 (DEFAULT FOR TITLE LINES
	IMUL T,NSCALE		;SCALE IT
	MOVEM T,MTAB		;SET IT
	MOVSI C,-4
	SETZM MTAB+1(C)
	AOBJN C,.-1
	SETZM ANYTXT
	TRNE FLAG,DOMAG		;TEXT OK ON CALCOMP
	CAIN M,TRWDEV		;ONLY PLOT TEXT ON TRW PHOTOPLOTTER
	 CAIA
	POPJ P,
	TLNN FLAG,TFLUSH	;FLUSHING TEXT?
	TRNE FLAG,DOTAPE	;DOING DRILL TAPE?
	POPJ P,
	MOVEI C,1
	OUTSTR[ASCIZ/CHAR	"M"	 HEIGHT
SCALE	CODE	(IN MILS, BEFORE SCALING)
0	M50	  120
/]
CHRSC1:	MOVE T,C
	PUSHJ P,DECOUT
	OUTSTR[ASCIZ/	M5/]
	MOVE T,C
	PUSHJ P,DECOUT
	OUTSTR[ASCIZ/	  /]
	PUSHJ P,DECIN
	JRST CHRLOS
	IMUL TTT,NSCALE		;SCALE IT
	MOVE T,TTT
	IDIVI T,5
	JUMPN TT,[OUTSTR[ASCIZ/MUST BE MULTIPLE OF 5 MILS!
/]
		JRST CHRSC1]
	MOVEM T,MTAB(C)		;STO THIS FOR CALCOMP
	TRNN FLAG,DOMAG		;TRW OUTPUT?
	JRST CHRSC2
	IDIVI T,3
	JUMPE TT,CHRSC2
	OUTSTR[ASCIZ/MUST BE MULTIPLE OF 15 MILS FOR TRW!!
/]
	JRST CHRSC1

CHRSC2:	CAIGE C,4		;DONE LAST?
	AOJA C,CHRSC1
	SETZM ANYTXT		;NO TEXT YET
	POPJ P,

CHRLOS:	CAIN T,ALTMOD
	JRST [	OUTSTR[ASCIZ/
/]
		POPJ P,]
	PUSHJ P,IERR
	JRST CHRSC1
;PSETUP,TRWMAG
PSETUP:	TRC FLAG,DOMAG!DOTAPE
	TRCN FLAG,DOMAG!DOTAPE	;DRILL TAPE AND TRW OUTPUT?
	TRO FLAG,TRWDRL		;YES, MAKE DRILL PLOT
	TRNE FLAG,TRWDRL	;IF DRILL PLOT
	TRZ FLAG,PLANE		;TURN OFF PLANE BIT
	TRNE FLAG,PLANE		;IS IT AN INNER PLANE?
	OUTSTR[ASCIZ/THIS IS AN INNER PLANE.
/]
	TRNN FLAG,DOMAG		;DOING MAGTAPE?
	JRST CHKDRL		;NO, ASK ABOUT DRILL TAPE
	SETZM REALMG		;INITIALIZE "REALLY MAG TAPE" FLAG

STANFO,<			;CHECK IF MTA IS AVAILABLE
;USE MAGTAPE FOR GERBER OUTPUT IF ONE IS ASSIGNED
	MOVSI T,'MTA'
	DEVUSE T,		;SEE IF WE HAVE A MAGTAPE ASSIGNED AS "MTA"
	JUMPE T,TRWDSK		;NOPE, USE DISK
TRWMAG:	SETOM REALMG		;SET FLAG TO CAUSE BUFFER LENGTH TO BE SET PROPERLY,LATER.
	INIT TRWCHN,10		;YES, USE MAGTAPE
	'MTA   '
	XWD MAGBUF,0
	JRST[	OUTSTR[ASCIZ/MTA ASSIGNED, BUT I CAN'T GET IT-FIX AND CONTINUE
/]
		EXIT 1,
		JRST .-3]
>;STANFO

	SKIPE REALMG
	CAIE M,AMDDEV
	CAIA
	 JRST [	OUTSTR[ASCIZ/
GERBER OUTPUT WILL BE BCD ONTO 7 TRACK TAPE, 556 BPI, ODD PARITY, IN 80
CHARACTER CARD IMAGES, WITH A BLANK IN COLUMN 1, AND /]

		MOVEI T,MAGLEN
		IMULI T,6
		PUSHJ P,DECOUT

		OUTSTR[ASCIZ/ CHARACTERS PER TAPE
RECORD.

/]
		JRST TRWBYT]
	CAIN M,AMDDEV
	 JRST [	OUTSTR[ASCIZ/
GERBER OUTPUT WILL BE BCD ONTO DISK, IN 80 CHARACTER CARD IMAGES, WITH A BLANK
IN COLUMN 1. BE SURE TO USE ODD PARITY AND AN "MLENGTH" SPECIFICATION OF 620 (OCTAL)
WORDS WHEN COPYING ONTO TAPE. FOR IBM CARD PUNCHING PURPOSES, THIS WILL PRODUCE
A TAPE RECORD OF 2400 (DECIMAL) CHARACTERS, OR 30 CARDS, PER RECORD.

/]
		JRST TRWDSK]
	CAIN M,LLDEV
	 JRST [	OUTSTR [ASCIZ /
ABSOLUTE GERBER OUTPUT WILL BE ASCII ONTO DISK.
USE 9 TRACK TAPE WITH ODD PARITY, MAX RECORD LENGTH 1022 CHARS. MUST BE EVEN # OF
CHARACTERS PER RECORD FOR LINCOLN LAB GERBER 6240 PHOTOPLOTTER.
/]
		JRST TRWDSK]
	OUTSTR [ASCIZ /
OUTPUT FOR PHOTOPLOTTER ONTO DISK.

/]
	JRST TRWDSK
;TRWDSK
TRWDSK:	INIT TRWCHN,10		;YES, FULL WORD MODE
	'DSK   '
	XWD MAGBUF,0
	JRST [	OUTSTR[ASCIZ/CAN'T GET DSK!
/]
		EXIT 1,
		JRST .-3]
TRWBYT:	SETZM AMDCNT		;COUNT OF CHARS FOR CARD IMAGE BLOCKING
	SETZM LAMP		;INITIALIZE LAMP ON/OFF FLAG
	SETZM COLCNT		;INITIALIZE COLUMN COUNTER FOR THIS
				; DAMN "BLANK-IN-COLUMN-ONE" CARD IMAGE
				; GAME WE HAVE TO PLAY WITH AMDAHL'S GERBER
	MOVEI T,6		;6 BIT BYTES FOR MOST
	TRNN FLAG,DOMAG		;ACTUALLY GOING TO TAPE?
	 JRST TRWBY1		;NO, PLOTTER WANTS 6 BITS
	CAIN M,DECDEV
	 MOVEI T,4		;4 BIT BYTES FOR DEC
	CAIN M,LLDEV		;7 BIT ASCII FOR LINCOLN GERBER
	 MOVEI T,7
TRWBY1:	DPB T,[POINT 6,MAGBUF+1,11]
	MOVEI T,MAGBFR
	EXCH T,.JBFF
	SKIPE REALMG		;IF WE ARE DOING MAG TAPE OUTPUT,
	JRST [	MTOUT:	UOUTBF TRWCHN,[	2	;THEN SET BUFFER LENGTH FOR
					MAGLEN+1];CORRECT BLOCKING
			MOVEM T,.JBFF
			JRST LSTSET]
	OUTBUF TRWCHN,2
	MOVEM T,.JBFF
	MOVSI T,EXTTRW
	PUSHJ P,FILSET		;SET DEFAULT NAME
	ENTER TRWCHN,FILNAM
	JRST [	OUTSTR[ASCIZ/PHOTOPLOTTER ENTER FAILED!
/]
		TRZ FLAG,DOMAG	;TRY TO IGNORE IT
		RELEASE TRWCHN,
		EXIT 1,
		JRST CHKDRL]
LSTSET:	CAIN M,AMDDEV
	JRST [	MOVEI T,=21000/5	;AMDAHL GERBER CALIBRATE POSITION
		MOVEM T,GERBX
		MOVEI T,=15000/5
		MOVEM T,GERBY
		JRST LSTSE1]
	SETZM GERBX		;INITIALIZE POSITION TO
	SETZM GERBY		;LOWER LEFT

LSTSE1:	INIT LST,0		;LISTING FILE
	'DSK   '
	XWD LSTHD,0
	JRST [	OUTSTR[ASCIZ/CAN'T GET DSK!
/]
		EXIT 1,
		JRST .-3]
	MOVEI T,LSTBUF
	EXCH T,.JBFF
	OUTBUF LST,1
	MOVEM T,.JBFF
	MOVSI T,EXTLST
	PUSHJ P,FILSET		;SET DEFAULT NAME
	ENTER LST,FILNAM
	JRST [	OUTSTR[ASCIZ/LOG ENTER FAILED!
/]
		TRZ FLAG,DOMAG	;TRY TO IGNORE IT
		RELEASE LST,
		EXIT 1,
		JRST CHKDRL]
;TRW MESSAGES(PC), DRILL TAPE SETUP(PC), RETICLE SELECT ROUTINE(PC)
	PUSHJ P,INLMES
	ASCIZ/FILE:	/
	MOVE TT,SAVNAM
	PUSHJ P,LSTSIX
	MOVEI TTT,"."
	PUSHJ P,LSTCHR
	MOVE TT,SAVEXT
	PUSHJ P,LSTSIX
	MOVEI TTT,"["
	PUSHJ P,LSTCHR
	SKIPN TT,SAVPPN
	DSKPPN TT,
	MOVEM TT,SAVPPN
	HRRI TT,0
	PUSHJ P,LSTLJS
	MOVEI TTT,","
	PUSHJ P,LSTCHR
	HRLZ TT,SAVPPN
	PUSHJ P,LSTLJS
	PUSHJ P,INLMES
	ASCIZ/]					FILE # ___
CONTENTS:   /		;SETUP FOR TITLES
	CAIE M,DECDEV
	 JRST NODHED

;PUT SPECIAL HEADER ONTO DEC GERBER OUTPUT
	SOS T,MAGBUF+2
	IDIVI T,9
	IMULI T,6
	ADDI T,1
	MOVEM T,MAGBUF+2
	MOVEI T,600
	HRLM T,MAGBUF+1
ASKHI:	OUTSTR[ASCIZ/BOARD SIZES:
SINGLE HEIGHT	1
DOUBLE HEIGHT	2
QUAD HEIGHT	3
HEX HEIGHT	4
SPECIAL		5

BOARD SIZE ?/]
	PUSHJ P,DECIN
	JRST [	OUTSTR[ASCIZ/HO, HO, HO.
/]
		PUSHJ P,IERR
		JRST ASKHI]
	MOVE T,TTT
	ROT T,-6
	PUSHJ P,MAGPUT
	ROT T,6
	PUSHJ P,MAGPUT

	OUTSTR[ASCIZ/PLOT TITLE (ONE LINE) ?
/]
	PUSHJ P,GETMES
	MOVE TTT,[POINT 7,STRING]
TITLOP:	ILDB T,TTT
	SKIPE T
	SUBI T,40
	PUSHJ P,MAGPUT
	JUMPN T,TITLOP
	SOS T,MAGBUF+2
	IDIVI T,6
	IMULI T,9
	ADDI T,1
	MOVEM T,MAGBUF+2
	MOVEI T,400
	HRLM T,MAGBUF+1
	JRST CHKDRL

;SETUP LOG TAPE, (NODEC)
NODHED:	OUTSTR[ASCIZ/PLOT TITLE /]
	CAIE M,TRWDEV			;TRW PUTS ON FILM TOO
	 OUTSTR[ASCIZ/FOR LOG FILE /]
	OUTSTR[ASCIZ/(ONE LINE) ?
/]
	PUSHJ P,GETMES
	MOVE T,[POINT 7,STRING]
	PUSHJ P,LSTSTR		;OUT TO LISTING FILE
	PUSHJ P,LSTCR

;FALLS THRU
	CAIE M,TRWDEV
	 JRST CHKDRL
	MOVEI T,TXTRET
	PUSHJ P,DORET		;SELECT TEXT RETICLE
	MOVEI T,=100		;UP AND OVER 1/2 INCH TO CLEAR FILM EDGE
	MOVEM T,X
	MOVEM T,Y
	PUSHJ P,MAGLNS		;INVISIBLE TO 1,1 INCHES
	MOVE TT,[POINT 7,[ASCIZ/***M50G58D10STANFORD A.I. PROJECT.  */]]
	PUSHJ P,MAGSTR
	OUTSTR[ASCIZ/OPERATOR MESSAGES, 40 CHARS PER LINE (MAX). END WITH BLANK LINE.
THESE WILL BE PLOTTED AT THE BOTTOM OF THE FILM AS WELL AS TYPED.
MESSAGES SHOULD NOT EXTEND PAST HERE.._
STANFORD A.I. PROJECT.	<ALREADY ON TAPE>
/]
DOMES:	PUSHJ P,GETMES
	JUMPE B,CHKDRL		;END WITH NULL STRING
	ADDI B,14		;14 OTHER CHARS
	CAML B,MAGBUF+2
	PUSHJ P,ENDREC
	MOVE TT,[POINT 7,[ASCIZ/M50G58D10/]]
	PUSHJ P,MAGSTR
	MOVE TT,[POINT 7,STRING]
	PUSHJ P,MAGSTR		;OUT TO MAG FILE
	PUSHJ P,MGSTAR
	MOVE T,[POINT 7,STRING]
	PUSHJ P,LSTSTR		;OUT TO LISTING FILE
	JRST DOMES

;CHECK IF DRILL TAPE OUTPUT  (PC)

CHKDRL:	TRNN FLAG,DOTAPE	;DOING DRILL TAPE?
	JRST NODRIL
	INIT TAP,10
	'DSK   '
	XWD TAPHD,0
	JRST [	OUTSTR[ASCIZ/CAN'T GET DISK!!!
/]
		EXIT 1,
		JRST .-3]
TAPNAM:	MOVSI T,EXTDRL
	PUSHJ P,FILSET
	ENTER TAP,FILNAM
	JRST [	OUTSTR[ASCIZ/DRL FILE ENTER FAILED.
/]
		TRZ FLAG,DOTAPE
		RELEASE TAP,
		EXIT 1,
		JRST NODRIL]
	MOVEI T,TAPBUF
	EXCH T,.JBFF
	OUTBUF TAP,2
	MOVEM T,.JBFF
	OUTSTR[ASCIZ/TYPE X,Y OF HOLES TO ADD TO DRILL TAPE
DECIMAL POINT OK, OFFSET WILL BE ADDED.
/]
ASKDRL:	OUTSTR[ASCIZ/X,Y OF HOLE?/]
	PUSHJ P,MILIN
	CAIE T,","
	JRST [	CAIN T,12
		JUMPE TTT,NODRIL	;DONE
	ILLDRL:	OUTSTR[ASCIZ/HO, HO, HO!!
/]
		PUSHJ P,IERR
		JRST ASKDRL]
	ADD TTT,XOFF			;ADD OFFSET
	IMULI TTT,5			;MAKE IT MILS
	HRLM TTT,(P)			;SAVE X
	PUSHJ P,MILIN
	CAIE T,12
	JRST ILLDRL
	ADD TTT,YOFF			;ADD OFFSET
	IMULI TTT,5			;MAKE IT MILS
	HLL TTT,(P)			;GET X BACK
	MOVE T,TTT
	PUSHJ P,PTAPE
	JRST ASKDRL

NODRIL:	MOVN T,XOFF
	UNSCAL(T)		;CLOBBERS TT
	ASH T,1
	HRLM T,CURSE
	MOVN T,YOFF
	UNSCAL(T)		;CLOBBERS TT
	ASH T,1
	HRRM T,CURSE
	POPJ P,
;RETICLE SELECT  (PC)
RETSEL:	HLRZ T,DOTXT
	XCT (T)[MOVEI T,LINRET		;HERE THE RETICLE INFO FROM PC GETS MAPPED TO A
		HALT .+1		; GERBER WHEEL POSITION. LEFT HALF OF DOTXT HAS
		MOVEI T,TXTRET		; RETICLE TYPE- LINE, TEXT, OR PAD
		HALT .+1	
		HRRZ T,DOTXT]		;IF PAD, RIGHT HALF CONTAINS PAD TYPE.

;DORET - MAP PAD TYPE INTO RETICLE NUMBER (WHEEL POSITION)
DORET:	CAMN T,PADTYP		;SAME PAD AS WE'RE CURRENTLY ON
	POPJ P,
	MOVEM T,PADTYP
	OUTSTR [ASCIZ /Selecting pad: /]
	PUSHJ P,PADPNT			;PRINT PAD DESCRIPTION
	OUTSTR [ASCIZ /
     /]
	SETZM SOFPAD			;SIMULATOR PAINT ROUTINE
	MOVE T,PADTYP
	SKIPE TT,SIMPAD(T)		;PAINT PAD?
	 JRST DOPAINT
	PUSHJ P,PADSEL			;CONVERT PAD INTO RET #
GETRET:	HLRZM T,OLDRET			;RH = RET #, LH = 0, OR UNMAPPED RET #
	HRRZS T
	CAILE T,MAXRET			;LARGEST LEGAL
	JRST [	OUTSTR[ASCIZ/I SCREWED UP - ILLEGAL RETICLE # /]
		PUSHJ P,DECOUT
		OUTSTR [ASCIZ / USING STANDARD RETICLE
/]
		MOVEI T,STRET
		JRST DORET]
	CAMN T,LSTRET			;DIFFERENT FROM LAST?
	POPJ P,				;NO
	MOVEM T,LSTRET
	HRRZ T,LSTRET
	PUSHJ P,PNTRET			;PRINT RETICLE
	SKIPN T,OLDRET			;ANY MAPPING?
	JRST DORET1
	OUTSTR [ASCIZ /
(Nee /]
	PUSHJ P,PNTRET
	OUTSTR [ASCIZ /)/]
DORET1:	OUTSTR [ASCIZ /
/]
	TRNN FLAG,DOMAG			;REALLY DOING MAGTAPE?
	POPJ P,				;NO
	CAIN M,TRWDEV
	 JRST [	MOVE T,MAGBUF+2
		CAIG T,=14			;14 CHARS
		PUSHJ P,ENDREC
		MOVE TT,[POINT 7,[ASCIZ/G01D02*G54/]]
		PUSHJ P,MAGSTR
		JRST .+1]
	HRRZ TT,LSTRET			;POOT OUT RET SELECT
	ADD TT,[POINT 7,RETTAB-1]
	PUSHJ P,MAGSTR
	JRST MGSTAR

;SELECT A SIMULATED PAD  (PC)
;TT 	LH HAS ARGS TO SIMULATOR
;	RH IS ROUTINE TO CALL

DOPAINT:PUSH P,A
	PUSH P,B
	PUSH P,E
	HLRZ T,TT		;POINTER TO ARG BLOCK
	PUSHJ P,(TT)		;CALL SETUP ROUTINE
	MOVEM TT,SOFPAD		;SET SIMULATOR ADDRESS
	POP P,E
	POP P,B
	POP P,A
	JRST GETRET		;GO GET RETICLE SETUP FROM T


;COMPILE ANNULUS 
;TT LH = BYTE(6)RETICLE,RING-WIDTH,RING-RADIUS

ANULUS:	PUSH P,(T)		;RETICLE # TO PAINT WITH
	MOVE A,1(T)		;WIDTH OF RING
	MOVE B,2(T)		;RADIUS OF RING
	OUTSTR [ASCIZ /Painting annular ring /]
	MOVE T,B
	ASH T,1
	PUSHJ P,DECOUT
	OUTSTR [ASCIZ / Mils in diameter, /]
	MOVE T,A
	PUSHJ P,DECOUT
	OUTSTR [ASCIZ / Mils wide.
      /]
	MOVE T,A
	FLOAT T			;WIDTH OF PAINTING APERTURE
	MOVE TT,B
	FLOAT TT		;RADIUS OF ANNULUS
	FDVR T,TT
	FSC T,-1		; 1/2 APERTURE / RADIUS OF RING
	MOVEM T,DELANG		;IS RADIANS TO STEP AROUND RING
	IDIVI B,5		;RADIUS SHOULD BE MULTIPLE OF 5 MILS
	SKIPE B+1
	JRST [	OUTSTR [ASCIZ /PAINTING ANNULUS WITH SCREWED UP RADIUS!!
/]
		PUSHJ P,FUCKUP
		JRST .+1]
	FLOAT B
	MOVEM B,ANRAD		;RADIUS IN MILS/5
	SETZM ANANGL		;ANGLE
	MOVSI E,-LPADBF
ANULUP:	MOVE A,ANANGL
	PUSHJ P,COS%
	FMPR A,ANRAD
	FIXR A
	ASH B,1
	HRLM B,PADBUF(E)

	MOVE A,ANANGL
	PUSHJ P,SIN%
	FMPR A,ANRAD
	FIXR A
	ASH B,1
	HRRM B,PADBUF(E)
	MOVE A,DELANG
	FADRB A,ANANGL
	AOBJP E,[OUTSTR [ASCIZ /ANULUS TOO BIG TO COMPILE!
/]
		PUSHJ P,FUCKUP
		JRST ANULP1]

	CAMGE A,[6.2832]
	JRST ANULUP
ANULP1:	MOVNS E
	HRLZM E,PADBFP		;POINTER FOR OUTPUT
	MOVEI TT,DOANUL		;ROUTINE TO DISPLAY ANULUS
	POP P,T			;RETICLE TO USE
	POPJ P,

;DOANUL - DRAW ANULUS USING COMPILED BUFFER  (PC)

DOANUL:	HLLZ E,PADBFP		;POINTER INTO COMPILED X,Y
	SETOM PADCEN		;LAST INCREMENT PLOTTED
DOANL1:	HRRZ TT,E		;FLAG FIRST MOVE IS INVISIBLE
	MOVE T,PADBUF(E)
	CAMN T,PADCEN		;ZERO LENGTH MOVE?
	 JRST DOANL2		;YES, SKIP IT
	MOVEM T,PADCEN
	ADD T,CURSE
	TDZ T,[1,,1]		;CLEAR CARRY
	PUSHJ P,DRAW
DOANL2:	AOBJN E,DOANL1
	POPJ P,

;PRINT RETICLE,PAD TYPE  (PC)
;T = PAD TYPE

PNTRET:	PUSH P,T
	HRRZS T
	CAILE T,MAXRET
	JRST [	OUTSTR [ASCIZ /RETICLE # TOO BIG!/]
		PUSHJ P,FUCKUP
		JRST .+1]
	OUTSTR[ASCIZ/WHEEL POS = /]
	CAIGE T,=10			;TWO DIGITS?
	OUTSTR[ASCIZ/ /]		;NO, PAD
	PUSHJ P,DECOUT
	OUTSTR[ASCIZ/ (/]
	HRRZ T,(P)
	SKIPN T,RETTAB-1(T)
	 MOVE T,[ASCIZ /???/]
	OUTSTR T
	OUTSTR[ASCIZ/*) /]
	POP P,T
	OUTSTR [ASCIZ /   /]
	SKIPN T,RETTXT-1(T)
	 MOVEI T,[ASCIZ /Unknown reticle/]
	OUTSTR (T)		;PRINT DESCRIPTION OF RETICLE
	POPJ P,

PADPNT:	CAILE T,MAXPAD
	JRST [	OUTSTR [ASCIZ /PAD TYPE TOO BIG!/]
		PUSHJ P,FUCKUP
		JRST .+1]
	OUTSTR @PADTXT(T)
	POPJ P,

;PADSEL  (PC)
;T = PAD TYPE
; RETURNS T RH = RET #
;	T LH = 0, OR UNMAPPED RET #

PADSEL:	PUSHJ P,PADGET			;CONVERT TO RET NUMBER
	 JRST PADERR
	HRROS RETMAP-1(T)		;MARK RETICLE AS USED
	POPJ P,

PADGET:	HRRZ TT,T
	CAIL TT,MAXPAD
	 POPJ P,
	SKIPN T,PADMAP(TT)		;THIS PAD MAPPED?
	 SKIPA T,PADRET(TT)		;NO, GET STANDARD
	  HRL T,PADRET(TT)		;YES, PUT UNMAPPED IN LH
	JUMPN T,CPOPJ1
	CAIL TT,=11			;MAP PADS 11-34 INTO WHEEL POSITIONS 1-24
	CAILE TT,=34
	 POPJ P,
	MOVEI T,-=10(TT)
	JRST CPOPJ1

PADERR:	OUTSTR [ASCIZ /I DON'T KNOW HOW TO PLOT PAD /]
	MOVE T,TT
	PUSHJ P,DECOUT
	OUTSTR [ASCIZ /, USING STANDARD PAD.
/]
	MOVEI T,STRET
	JRST PADSEL


;CHECK PAD TYPE IF IT IS A TARGET
CHKTAR:	PUSHJ P,PADGET			;GET RETICLE #
	 POPJ P,			;ILLEGAL
	PUSH P,T
	MOVEI T,TARRET			;FIND OUT WHICH RET IS TARGET
	PUSHJ P,PADGET
	 PUSHJ P,FUCKUP
	POP P,TT
	HRRZS T
	CAIN T,(TT)			;SAME RET #
	AOS (P)
	POPJ P,

>;MPC



;SETUP FR80 OUTPUT
FRSET1:	INIT F80CHN,10
	'DSK   '
	XWD FRBUF,0
	JRST [	OUTSTR[ASCIZ/CAN'T GET DSK!
/]
		EXIT 1,
		JRST FRSET1]
	MOVEI T,FRBFR
	EXCH T,.JBFF
	OUTBUF F80CHN,2
	MOVEM T,.JBFF
	MOVSI T,EXTF80
	PUSHJ P,FILSET
	ENTER F80CHN,FILNAM
	JRST [	OUTSTR[ASCIZ/FR80 ENTER FAILED!
/]
		RELEASE F80CHN,
		TRZ FLAG,FR80
		EXIT 1,
		JRST CPOPJ]
	MOVE T,[POINT 18,FRBFR+2,35]
	MOVEM T,FRBUF+1
	SETOM LSTROT		;ROTATION STARTS UNKNOWN
	MOVEI T,777777
	MOVEM T,LASTY
	MOVEM T,LASTX
	SETOM LSTSPC		;LAST SPACING
	MOVEI T,(<BYTE(3)2(6)6(2)0(4)0(3)0>)	;SPOT SIZE 0
	PUSHJ P,FROUT
	MOVEI T,(<BYTE(3)2(6)5(2)0(4)0(3)7>)	;INTENSITY 7
	JRST FROUT
              
         
;PC CARD (PC)
MPC,<
CRDCHK:	SKIPE CRDNAM		;DID HE WANT A CARD?
	JRST GOTCRD
CRDN:	PUSHJ P,FORCE		;FINISH CURRENT BUSINESS
	MOVSI T,EXTCRD
	PUSHJ P,SETIT
	JRST NOCARD
	MOVE T,FILNAM
	MOVEM T,CRDNAM
	MOVE T,FILEXT
	MOVEM T,CRDEXT
	SKIPN T,FILPPN
	MOVE T,LIBPPN
	MOVEM T,CRDPPN
GOTCRD:	MOVE T,CRDPPN
	LOOKUP DAT,CRDNAM
	JRST [	MOVEM T,CRDPPN
		MOVE TT,CRDNAM
		PUSHJ P,SIXOUT
		OUTCHR["."]
		HLLZ TT,CRDEXT
		PUSHJ P,SIXOUT
		OUTCHR["["]
		HLLZ TT,CRDPPN
		PUSHJ P,LSIXOUT
		OUTCHR[","]
		HRLZ TT,CRDPPN
		PUSHJ P,LSIXOUT
		OUTSTR[ASCIZ/], LOOKUP FAILED.
/]
		JRST CRDN]
	MOVEM T,CRDPPN
	MOVEI D,3
	MOVE T,T3S
	MOVEM T,T3P
	PUSHJ P,DATIN
	CAIE A,CRDVER
	JRST [	OUTSTR[ASCIZ/IMPROPER PC CARD FILE VERSION NUMBER.
/]
		JRST CRDN]
	SETZ F,
CRDFN4:	PUSHJ P,DATIN
	CAME A,[(400000)]
	CAIN A,400000
	JRST CRDFN3
CRDFNC:	MOVE T,T3P
	CAMG T,.JBREL
	JRST CRDFOK
	CORE T,
	JRST [	PUSHJ P,NOCORE
		JRST CRDFNC]
CRDFOK:	SKIPE FLIP	;FLIPPING?
	PUSHJ P,XFLIP	;FLIP X
	ADD F,A
	TLZ F,1
	MOVEM A,@T3P
	AOS T3P
	JRST CRDFN4
CRDFN3:	MOVEM A,@T3P
	MOVE T,T3P
	SUB T,T3S	;NUMBER OF ENTRIES
	HRRE TT,F
	IDIV TT,T
	HRRM TT,CENTER
	HLRE TT,F
	IDIV TT,T
	HRLM TT,CENTER
CRDLP1:	MOVE A,@T3S
	CAMN A,[(400000)]
	JRST CRDFNG
	CAIN A,400000
	JRST NOCARD
	TRNE FLAG,PLANE	;INNER PLANE?
	SKIPA T,[IPBRET]		;WIDE SWATCH
	MOVEI T,TXTRET			;A WIDE RETICLE, KLUDGE
	PUSHJ P,DORET
	MOVE T,A
	TRNE FLAG,PLANE	;FUDGE IF OUTER PLANE
	JRST NOPLAN
	MOVE TT,A
	TLO TT,1
	SUB TT,CENTER
BFUDGE__5		;FUDGE BY 5 MILS
	MOVE TTT,[XY	BFUDGE,BFUDGE]
	TLNE TT,400000		;X NEGATIVE?
	HRLI TTT,-BFUDGE/5*2
	TRNE TT,400000
	HRRI TTT,-BFUDGE/5*2
	ADD T,TTT
	TLZ T,1
NOPLAN:	TRZE T,1
	MOVEI D,3
	PUSHJ P,FIXXY	;SCALE XY, UPDATE MINMAX XY
	TRNN FLAG,DOMAG
	JRST NNMAG
	CAIN D,3
	JRST [	PUSHJ P,MAGLNS	;LAMP OFF MOVE
		JRST NNMAG]
	PUSHJ P,MAGLIN		;LAMP ON MOVE
NNMAG:	PUSHJ P,PLOTIT
	MOVEI D,2
	AOS T3S
	JRST CRDLP1

;ROUTINE TO INVERT X VALUE FOR FLIPPED PLOTS
XFLIP:	TLC A,-2
	ADD A,[2,,0]
	POPJ P,
              
         
;CARD FINGERS, SHORTING BARS, TARGETS(PC)
CRDFNG:	TRNN FLAG,TRWDRL	;THIS GUY ONLY DOES DRILL HOLES, SKIP FINGERS
	TRNE FLAG,PLANE	;INNER PLANE
	JRST [	PUSHJ P,CSKIP		;SKIP FRONT FINGERS
		PUSHJ P,CSKIP		;SKIP BACK FINGERS
		PUSHJ P,CSKIP		;SKIP FRONT SHORTING BARS
		PUSHJ P,CSKIP		;SKIP BACK SHORTING BARS
		JRST DOTAR2]		;GO DO TARGETS!
	TRNN FLAG,FRONT
	PUSHJ P,CSKIP		;SKIP OVER FRONT SIDE
	PUSHJ P,CRDFN1
	PUSHJ P,CSKIP		;SKIP BACK SIDE OR FRONT SHORTING BARS
DONIT:	PUSHJ P,DATIN
	CAME A,[(400000)]
	CAIN A,400000
	JRST DOTARG
	SKIPE FLIP
	PUSHJ P,XFLIP
	MOVE C,A
	PUSHJ P,DATIN
	CAME A,[(400000)]
	CAIN A,400000
	JRST DOTARG
	SKIPE FLIP
	PUSHJ P,XFLIP
	MOVE B,A
	PUSHJ P,SHORT
	JRST DONIT
;   (PC)
DOTARG:	TRNE FLAG,FRONT
	PUSHJ P,CSKIP		;YES
DOTAR2:	PUSHJ P,DATIN
	CAME A,[(400000)]
	CAIN A,400000
	JRST NOCARD		;NO TARGETS!
	CAIA			;SKIP CALL TO IN
DOTAR1:	PUSHJ P,DATIN
DOTAR3:	CAME A,[(400000)]
	CAIN A,400000
	JRST NOCARD
	SKIPE FLIP
	PUSHJ P,XFLIP
	MOVEM A,CURSE
	MOVEI T,TARRET
	PUSHJ P,DORET
	PUSHJ P,TARGET
	JRST DOTAR1

CRDFN1:	PUSHJ P,DATIN
	CAME A,[(400000)]
	CAIN A,400000
	POPJ P,
	SKIPE FLIP
	PUSHJ P,XFLIP
	MOVE C,A
	PUSHJ P,DATIN
	CAME A,[(400000)]
	CAIN A,400000
	POPJ P,
	SKIPE FLIP
	PUSHJ P,XFLIP
	MOVE B,A
	PUSH P,A
	PUSHJ P,DATIN		;READ PIN# AND CONNECTOR ID AND IGNORE!
	POP P,A
	PUSHJ P,SHORT
	JRST CRDFN1

CSKIP:	PUSHJ P,DATIN
	CAME A,[(400000)]
	CAIN A,400000
	POPJ P,
	JRST CSKIP

SHORT:	MOVEI T,FNGRET
	PUSHJ P,DORET
	TRNN FLAG,DOMAG
	JRST XXXMAG
	MOVE T,C
	PUSHJ P,FIXXY
	PUSHJ P,MAGLNS
	MOVE T,B
	PUSHJ P,FIXXY
	PUSHJ P,MAGLIN
XXXMAG:	TLO A,1
	SUB A,C
	TDZ A,[(1)1]
	MOVEI E,0
	MOVEI F,2
	TLNE A,400000
	MOVEI E,1
	TRNE A,400000
	MOVEI F,3
	HLRE TT,A
	MOVMS TT
	HRRE T,A
	MOVMS T
	CAML TT,T
	MOVE F,E
	JRST @(F)[	FRIGHT
			FLEFT
			FUP
			FDOWN]
              
         
;CHEATING BOX FOR LINE  (PC)
DEFINE XYZ(X,Y)
<	RADIX =10
	ADD T,[XY X,Y]
	TDZ T,[(1)1]
	RADIX =8
>
FRIGHT:	MOVE T,C
	XYZ	-FWIDTH,FWIDTH
	PUSHJ P,AIVECT
	MOVE T,C
	XYZ	-FWIDTH,-FWIDTH
	PUSHJ P,AVECT
	MOVE T,B
	XYZ	FWIDTH,-FWIDTH
	PUSHJ P,AVECT
	MOVE T,B
	XYZ	FWIDTH,FWIDTH
	PUSHJ P,AVECT
	MOVE T,C
	XYZ	-FWIDTH,FWIDTH
	JRST AVECT
FLEFT:	MOVE T,B
	XYZ	-FWIDTH,FWIDTH
	PUSHJ P,AIVECT
	MOVE T,B
	XYZ	-FWIDTH,-FWIDTH
	PUSHJ P,AVECT
	MOVE T,C
	XYZ	FWIDTH,-FWIDTH
	PUSHJ P,AVECT
	MOVE T,C
	XYZ	FWIDTH,FWIDTH
	PUSHJ P,AVECT
	MOVE T,B
	XYZ	-FWIDTH,FWIDTH
	JRST AVECT
FUP:	MOVE T,C
	XYZ	-FWIDTH,-FWIDTH
	PUSHJ P,AIVECT
	MOVE T,C
	XYZ	FWIDTH,-FWIDTH
	PUSHJ P,AVECT
	MOVE T,B
	XYZ	FWIDTH,FWIDTH
	PUSHJ P,AVECT
	MOVE T,B
	XYZ	-FWIDTH,FWIDTH
	PUSHJ P,AVECT
	MOVE T,C
	XYZ	-FWIDTH,-FWIDTH
	JRST AVECT
FDOWN:	MOVE T,B
	XYZ	-FWIDTH,-FWIDTH
	PUSHJ P,AIVECT
	MOVE T,B
	XYZ	FWIDTH,-FWIDTH
	PUSHJ P,AVECT
	MOVE T,C
	XYZ	FWIDTH,FWIDTH
	PUSHJ P,AVECT
	MOVE T,C
	XYZ	-FWIDTH,FWIDTH
	PUSHJ P,AVECT
	MOVE T,B
	XYZ	-FWIDTH,-FWIDTH
	JRST AVECT
;    (PC)
AIVECT:	PUSHJ P,FIXXY
	MOVEI D,3
	JRST PLOTIT

AVECT:	PUSHJ P,FIXXY
	MOVEI D,2
	JRST PLOTIT

SETFLP:	PUSHJ P,STFLP1
DEFCNM:	SETZM CRDNAM
	POPJ P,

FLPCNM:	PUSHJ P,STFLP1
	PUSHJ P,DATIN
	MOVEM A,CRDNAM
	PUSHJ P,DATIN
	MOVEM A,CRDEXT
	PUSHJ P,DATIN
	MOVEM A,CRDPPN
	POPJ P,

STFLP1:	SETOM FLIP
	PUSHJ P,DATIN
	TRNN A,1		;LOW ORDER BIT IS FLIP BIT
	AOSA FLIP		;SET TO NOT FLIPPED
	OUTSTR[ASCIZ/FLIPPED!
/]
	TRNN FLAG,FRONT		;FRONT OR BACK?
	JRST [	SKIPE FLIP	;BACK, MUST BE FLIPPED
		POPJ P,		;OK
		JRST FLPERR]	;MAYBE LOSE
	SKIPN FLIP		;FRONT, NO FLIP!
	POPJ P,
FLPERR:	TRNE FLAG,DOMAG		;TRW OUTPUT?
	SKIPN ANYTXT		;YES, ANY TEXT GOING OUT?
	POPJ P,			;NO, WIN
	OUTSTR[ASCIZ/TEXT ON THIS PLOT MAY NOT BE READABLE, YOU MAY BE LOSING!
/]
	POPJ P,

DEFFLP:	SETZM FLIP		;NO FLIP FOR OLD FILES
	POPJ P,
>;MPC
;MAGTAPE OUTPUT ROUTINES  (PC)
MPC,<
MAGSTO:	HRLI TT,440700
MAGSTR:	ILDB T,TT
	JUMPE T,CPOPJ
	PUSHJ P,MAGCHR
	JRST MAGSTR

;MODIFICATIONS FOR AMDAHL GERBER  (PC)
COMMENT 
MAGLNS AND MAGLIN MUST BE PREVENTED FROM COMMANDING MOVES LONGER THAN 4 DIGITS
FOR THE INCREMENTAL GERBER PLOTTER USED BY STANFORD, LOCATED AT AMDAHL COMPUTER
COMPANY IN SUNNYVALE.  THESE ROUTINES COMPARE CELLS X: AND Y: WITH GERBX: AND
GERBY: AND OUTPUT RELATIVE X AND Y DISTANCES. THE ROUTINE AMCHK CAUSES MOVES
OVER 9995 MILS TO BE BROKEN INTO FIVE SEGMENTS BY LOADING A BYTE POINTER INTO
AMDPTR WHICH CAUSES MAGG01 TO OUTPUT A STRING REPRESENTING 1/5 OF THE CORRECT
MOVE, AND CAUSES MAGCHR TO RECORD THIS STRING IN A BLOCK CALLED AMDSTR. THIS
STRING IS THEN WRITTEN INTO THE OUTPUT FILE FOUR MORE TIMES. THE BYTE POINTER IS
USED AS A FLAG TO CAUSE THE GERBER STRING GENERATED DURING THE FIRST SEGMENT TO
BE RECORDED, AND IS ZERO FOR MOVES SHORTER THAN 10000 MILS.  DIVIDING THE MOVE
INTO 5 SEGMENTS ASSURES THAT THE SEGMENTS WILL BE ABSOLUTELY COLLINEAR.
AMCHK HAS THE FURTHER PROPERTY THAT ZERO LENGTH MOVES ARE DETECTED.

DEFINE %AMDPNT<[POINT 6,AMDSTR]>
KLUDGE__32			;MARK CHAR FOR END OF AMD STRING

AMCHK:	SETZM AMDPTR		;INITIALIZE FLAG/POINTER
	MOVE T,X		;GET X DESTINATION
	TLNN FLAG,GROTIT	;ROTATING?
	JRST NROTX
	MOVE T,Y		;YES, GET Y
	SUB T,YOFF		;ROTATE ABOUT OFFSET
	ADD T,XOFF
NROTX:	SUB T,GERBX		;FIGURE INCREMENT
	MOVMS T			;GET MAGNITUDE
	CAIL T,=10000/5		;SEE IF ITS MORE THAN 4 DIGITS
	JRST NDBRK		;MUST BREAK INTO PIECES IF IT IS
	HRLM T,(P)		;X NOT TOO BIG, SAVE IT
	MOVE T,Y		;AND CHECK Y
	TLNN FLAG,GROTIT	;ROTATING?
	JRST NROTY
	MOVN T,X		;YES GET OTHER AXIS
	ADD T,XOFF		;ROTATE ABOUT OFFSET
	ADD T,YOFF
NROTY:	SUB T,GERBY
	MOVMS T
	CAIL T,=10000/5		;Y TOO BIG?
	JRST NDBRK		;YES, FIX
	JUMPN T,CPOPJ1		;NO. IF Y0, LEAVE
	HLRZ T,(P)		;RESTORE X
	JUMPE T,CPOPJ		;WE HAVE Y=0, SO IF X=0, TAKE NON-SKIP RETURN
	JRST CPOPJ1		;ELSE NORMAL EXIT
NDBRK:	MOVE T,%AMDPNT		;X OR Y TOO BIG, GET POINTER TO STRING ACCUMULATION BLOCK
	MOVEM T,AMDPTR		;INITIALIZE ACCUMULATION POINTER FOR MAGCHR
	JRST CPOPJ1

MAGRPT:	ILDB T,TT		;HERE WE PUT OUT AMDSTR, WHICH NEEDS NO CHARACTER CONVERSION
	CAIN T,KLUDGE		;ARBITRARY CODE TO INDICATE END OF STRING
	POPJ P,
	PUSHJ P,MAGCH1
	JRST MAGRPT

;   (PC)
;LAMP OFF MOVE: G01XddddYddddD02*
MAGLNS:	CAIN M,AMDDEV
	 JRST MAGLN1		;SPECIAL HAIR FOR AMDAHL GERBER
	PUSHJ P,ENDCHK		;FORCE END OF RECORD MAYBE
	PUSHJ P,MAGG01		;OUTPUT X,Y
	PUSHJ P,MAGD0
	MOVEI T,"2"		;"D02"
	PUSHJ P,MAGCHR
	JRST MGSTAR

		;SINCE WE ARE BREAKING UP A LONG MOVE, THE PLOTTER
		; COMMAND STRING WE JUST PUT OUT WAS 1/5 OF CORRECT MOVE,
		; SO WE RECORDED IT AND ARE GOING TO PLAY IT BACK
		; FOUR MORE TIMES!! (ITS OK TO FALL DOWN LAUGHING, BUT
		; TRY NOT TO THROW UP AS YOU READ THIS--IT MAKES
		; THE KEYBOARD ALL STICKY).
		;FLUSH OUTPUT ON NULL MOVES
		;IF BREAKING MOVE, OUTPUT "D0x*X...Y...*X...Y...* ETC."
		;ELSE, OUTPUT "X...Y...D0x*"

MAGLN1:	PUSHJ P,AMCHK		;CHECK SIZE OF MOVE
	 POPJ P,		;FLUSH IF NULL MOVE
	PUSHJ P,MAGG01		;OUTPUT THE MOVE
	PUSH P,AMDPTR		;SAVE RECORDING POINTER JUST IN CASE
	MOVE T,LAMP
	CAIN T,"2"
	JRST MGLNS1		;SKIP LAMP COMMAND IF IT LAST MOVE WAS INVISIBLE
	SETZM AMDPTR		;TURN OFF RECORDING
	PUSHJ P,MAGD0		;OUTPUT LAMP COMMAND
	MOVEI T,"2"

MGLNS3:	MOVEM T,LAMP		;SET NEW LAMP VALUE
	PUSHJ P,MAGCHR
MGLNS1:	POP P,AMDPTR		;RESTORE RECORDING POINTER
	SKIPN AMDPTR		;WERE WE RECORDING A SHORT MOVE?
	JRST MGSTAR		; NO, OUTPUT THE "*" AND LEAVE
	PUSHJ P,MGSTAR		; YES, OUTPUT THE "*" AND FOOL AROUND SOME MORE
	MOVEI TTT,KLUDGE	;MARK END OF RECORDED STRING WITH ARBITRARY UNUSED BCD CODE
	IDPB TTT,AMDPTR
	SETZM AMDPTR		; AND TURN OFF RECORDING FOR GOOD
	MOVSI TTT,-4		;SET UP LOOP COUNTER
AMLOP:	MOVE TT,%AMDPNT		;TT POINTS TO HEAD OF STRING FOR MAGRPT
	PUSHJ P,MAGRPT		;OUTPUT STRING WITHOUT CONVERSION
	AOBJN TTT,AMLOP
	POPJ P,
;LAMP ON MOVE: G01XincrYincrD01*  (PC)
MAGLIN:	CAIN M,AMDDEV
	 JRST MAGLI1
	PUSHJ P,ENDCHK
	PUSHJ P,MAGG01
	PUSHJ P,MAGD0
	MOVEI T,"1"
	PUSHJ P,MAGCHR
	JRST MGSTAR

MAGLI1:	PUSHJ P,AMCHK		;CHECK SIZE OF MOVE
	POPJ P,			;FLUSH IF NULL MOVE
	PUSHJ P,MAGG01	
	PUSH P,AMDPTR
	MOVE T,LAMP		;GET LAST LAMP VALUE
	CAIN T,"1"		;IF IT WASN'T D01, DO A D01
	JRST MGLNS1		;SKIP LAMP COMMAND IF IT WAS
	SETZM AMDPTR		;TURN OFF RECORDING
	PUSHJ P,MAGD0		;OUTPUT LAMP COMMAND
	MOVEI T,"1"
	JRST MGLNS3
;MAGPAD  (PC)
MAGPAD:	MOVE T,CURSE
	PUSHJ P,FIXXY
	PUSHJ P,MAGLNS	;MOVE INVISIBLE
	CAIN M,TRWDEV
	JRST [	MOVE T,MAGBUF+2
		CAIG T,7
		PUSHJ P,ENDREC
		MOVE TT,[POINT 7,[ASCIZ/G55D03*/]]
		JRST MAGSTR]
	MOVE TT,[POINT 7,[ASCIZ/D03/]]
	PUSHJ P,MAGSTR
	JRST MGSTAR		;FLASH

;MAG TEXT  (PC)
MAGTXT:	CAIE M,TRWDEV
	 JRST [	OUTSTR[ASCIZ/FOO, THERE ISN'T SUPPOSED TO BE ANY TEXT!
/]
		POPJ P,]
	PUSHJ P,MAGLNS		;MOVE INVISIBLE
	MOVE TTT,TTPNT
	HRLI TTT,(<POINT 7,0>)
	SETZ T,
MAGTX1:	ILDB TT,TTT
	JUMPE TT,.+2
	AOJA T,MAGTX1
	IMULI T,4		;4 OUT FOR 1 IN
	ADDI T,6+7		;6 OTHER CHARS + 7 ENDING CHARS
	CAML T,MAGBUF+2		;ENOUGH ROOM?
	PUSHJ P,ENDREC		;NO SPACE, FLUSH TO RECORD END
	MOVEI T,"M"
	PUSHJ P,MAGCHR
	MOVE TT,CSIZ		;GET CHAR SIZE FROM HERE
	ADDI TT,=50
	CAILE TT,=54
	JRST [	OUTSTR[ASCIZ/CHAR. SIZE TOO LARGE, USING SIZE 5
/]
		MOVEI TT,=54
		JRST .+1]
	PUSHJ P,MAGDEC
	MOVE TT,[POINT 7,[ASCIZ/G52/]]
	SKIPE ANGLE		;HORZ OR VERT?
	MOVE TT,[POINT 7,[ASCIZ/G53/]]
	PUSHJ P,MAGSTR
	MOVE TTT,TTPNT
	HRLI TTT,(<POINT 7,0>)
MAGHV1:	ILDB T,TTT
	JUMPE T,MAGTXE		;DONE
	SKIPN TT,ONETAB(T)
	JRST [	OUTSTR[ASCIZ/NO "D" CODE FOR "/]
		OUTCHR T
		OUTSTR[ASCIZ/"
/]
		JRST MAGHV1]
	PUSH P,TTT
	MOVEI T,"D"
	PUSHJ P,MAGCHR
	PUSHJ P,MAGDEC		;PUT OUT "D" CODE
	PUSHJ P,MGSTAR		;AND STAR
	POP P,TTT
	JRST MAGHV1

MAGTXE:	MOVE TT,[POINT 7,[ASCIZ/G01D02*/]]
	JRST MAGSTR		;USE THIS TO TERMINATE TEXT
;OUTPUT MOVE TO X,Y "XxxxxxYyyyyy"  (PC)

MAGG01:	CAIN M,LLDEV
	 JRST MAGABS		;LINCOLN GERB IS ABSOLUTE
	CAIN M,TRWDEV
	 JRST [	MOVE TT,[POINT 7,[ASCIZ/G01/]]
		PUSHJ P,MAGSTR
		JRST MAGABS]	;TRW ALSO, WITH FUNNY PREPERATION CODE?
   ;AMDAHL AND DEC ARE RELATIVE GERBERS
	MOVE TT,X		;*** DEC USED TO BE DIFFERENT HERE??? ***
	TLNN FLAG,GROTIT
	JRST NGROTX
	MOVE TT,Y
	SUB TT,YOFF		;ROTATE ABOUT OFFSET, delta X' = delta Y
	ADD TT,XOFF
NGROTX:	SUB TT,GERBX
	JUMPE TT,CKGRBY		;IF NO X CHANGE GO TO Y CHECK
	ADDM TT,GERBX		;UPDATE LAST X PUT OUT
CKGRBY:	MOVE TTT,Y
	TLNN FLAG,GROTIT
	JRST NGROTY
	MOVN TTT,X
	ADD TTT,XOFF		;delta Y' = -delta X
	ADD TTT,YOFF		;ROTATE ABOUT OFFSET
NGROTY:	SUB TTT,GERBY		;SUBTRACT CURRENT POSITION FROM DESTINATION
	JUMPE TTT,CPOPJ		;LEAVE IF 0
	ADDM TTT,GERBY		;UPDATE CURRENT POSITION WITH NEW MOVE
	JRST MAGXY		;OUTPUT TT=X, TTT=Y

;OUTPUT X,Y
;TT = X
;TTT = Y
MAGABS:	MOVE TT,X
	MOVE TTT,Y
MAGXY:	PUSH P,TTT		;SAVE Y FOR NOW
	MOVEI T,"X"
	PUSHJ P,MAGDEL		;OUTPUT DELTA
	POP P,TT		;PICKUP Y
	MOVEI T,"Y"
	JRST MAGDEL

;OUTPUT SIGNED POSITION
; TT=POSITION IN 5 MIL STEPS
; T= DIRECTION CHARACTER

MAGDEL:	PUSHJ P,MAGCHR
	CAIN M,AMDDEV		;ONLY AMDAHL PLOTTER GETS BROKEN
	SKIPN AMDPTR		;FLAG THAT WE'RE BREAKING INTO 5 PIECES
	 IMULI TT,5		;CONVERT TO MILS UNLESS WERE BREAKING INTO 5 PIECES
	PUSH P,TT
	SKIPGE (P)
	PUSHJ P,MINUS
	POP P,TT
	MOVMS TT
	JRST MAGDEC


;RECURSIVE DECIMAL PRINTER  (PC)
MAGDEC:	IDIVI TT,=10	;D_D/10, REMAINDER TO TTT
	HRLM TTT,(P)	;SAVE REMAINDER
	JUMPE TT,MAGDC1	;HAVE WE WHITTLED NUMBER DOWN TO LAST DECIMAL DIGIT?
	PUSHJ P,MAGDEC	;NO, GO AROUND AGAIN
MAGDC1:	HLRZ T,(P)	;YES, RESTORE REMAINDER TO T
	ADDI T,60	;CONVERT TO ASCII DIGIT
	JRST MAGCHR	;OUTPUT AND POP BACK UP ONE LEVEL (TO MAGDC1 UNTIL DONE,
			; THEN BACK TO CALLING ROUTINE)

MAGD0:	MOVEI T,"D"
	PUSHJ P,MAGCHR
	MOVEI T,"0"
	JRST MAGCHR

;CHECK TO SEE IF WE SHOULD END RECORD
ENDCHK:	CAIE M,TRWDEV
	CAIN M,LLDEV
	CAIA
	 POPJ P,		;ONLY TRW PHOTOPLOTTER?
	MOVE T,MAGBUF+2
	CAILE T,=19
	POPJ P,
ENDREC:	PUSH P,A
	MOVE A,MAGBUF+2
	ADDI A,2		;3 INTO NEXT RECORD
ENDRC1:	PUSHJ P,MGSTAR
	SOJG A,.-1
	POP P,A
	POPJ P,

;BCD CHARACTER TABLE  (PC)
BCDTAB:	REPEAT 40,<0>
	20		;SPACE
	16		;!
	37		;"
	0		;#
	53		;$
	75		;%
	0		;&
	14		;'
	34		;(
	74		;)
	54		;*
	60		;+
	33		;,
	40		;-
	73		;.
	21		;/
	12		;0
	1		;1
	2		;2
	3		;3
	4		;4
	5		;5
	6		;6
	7		;7
	10		;8
	11		;9
	15		;:
	52		;;
	57		;<
	13		;=
	17		;>
	0		;?
	0		;@
	61		;A
	62		;B
	63		;C
	64		;D
	65		;E
	66		;F
	67		;G
	70		;H
	71		;I
	41		;J
	42		;K
	43		;L
	44		;M
	45		;N
	46		;O
	47		;P
	50		;Q
	51		;R
	22		;S
	23		;T
	24		;U
	25		;V
	26		;W
	27		;X
	30		;Y
	31		;Z
	55		;[
	76		;\
	36		;]
	72		;^
	77		;_
	REPEAT 40,<0>

;AMDAHL CHARACTER TABLE  (PC)
;ERROR CHECK FOR ILLEGAL LETTERS
;SPACE IS 0

BCDAMD:	REPEAT 40,<0>
	1,,0		;SPACE
	FOR I_41,")"
<	0
>
	54		;*
	0		;+
	0		;,
	40		;-
	0		;.
	0		;/
	12		;ZERO
	FOR I_"1","9"	;DIGITS
<	1,,I-60
>
	FOR I_":","C"
<	0
>
	64		;D
	FOR I_"E","L"
<	0
>
	44		;M
	FOR I_"N","W"
<	0
>
	27		;X
	30		;Y
	FOR I_"Z",137
<	0
>
	REPEAT 40,<0>

;DEC CHARACTER TABLE, TOTALLY RANDOM CODE  (PC)

BCDDEC:	REPEAT 40,<0>
	FOR I_40,")"
<	0
>
	17		;*
	0		;+
	0		;,
	14		;-
	0		;.
	0		;/
	FOR I_"0","9"
<	1,,I-60
>
	FOR I_":","C"
<	0
>
	16		;D
	FOR I_"E","L"
<	0
>
	15		;M
	FOR I_"N","W"
<	0
>
	12		;X
	13		;Y
	FOR I_"Z",137
<	0
>
	REPEAT 40,<0>

;  (PC)              
ONETAB:
	FOR I_0,37
<	0
>
	=10		;SPACE
	FOR I_41,53
<	0
>
	=51		;,
	=39		;-
	=50		;.
	=37		;/
	FOR I_=40,=49
<	I
>
	FOR I_72,100
<	0
>
	FOR I_=11,=36
<	I
>
	FOR I_133,177
<	0
>
	0

;MINUS, MAGCHR, MAGCH1, MAGPUT  (PC)

MGSTAR:	MOVEI TT,[ASCIZ /*/]
	CAIN M,LLDEV
	MOVEI TT,[ASCIZ /*
/]
	JRST MAGSTO


MINUS:	CAIE M,LLDEV		;LL AND TRW ARE ABSOLUTE
	CAIN M,TRWDEV
	JRST [	OUTSTR[ASCIZ/NEGATIVE X OR Y VALUE BEING OUTPUT TO 'MAG' FILE.
TYPE CONTINUE TO GO ON.
/]
		EXIT 1,
		JRST .+1]
	MOVEI T,"-"
MAGCHR:	PUSHJ P,@CNVCHR(M)	;DO CHARACTER CONVERSION FOR THIS DEVICE
	CAIN M,AMDDEV		;AMD REQUIRES FORTRAN "SPACE IN COL 1"
	 JRST [MAGCH1:
		SOSL COLCNT		;THIS WILL BE ZERO WHEN WE ARE ABOUT TO WRITE COL. 1
		JRST MAGPUT
		PUSH P,T		;SAVE CHAR WE WERE GOING TO WRITE
		MOVEI T,=80-2		;RESET COLUMN COUNTER ("-2" BECAUSE WE ARE COUNTING
		MOVEM T,COLCNT		; TO ZERO, AND WE DON'T SOS IT FOR THE SPACE CHAR.)
		PUSH P,AMDPTR		;SAVE AMDPTR AND CLEAR IT TO PREVENT AMDSTR
		SETZM AMDPTR		; FROM CONTAINING FORMATTING SPACE
		MOVE T,BCDTAB+" "	;GET A SPACE
		PUSHJ P,MAGPUT		;POOT IT OUT INTO COL. 1 OF CARD IMAGE
		POP P,AMDPTR		;RESTORE LONG MOVE STRING COPY POINTER
		POP P,T			;NOW PROCEED WITH CHARACTER WE WERE PASSED
		JRST MAGPUT]
;  (PC)
MAGPUT:	SOSG MAGBUF+2
	OUT TRWCHN,
	CAIA
	JRST [	OUTSTR[ASCIZ/MAGTAPE OUTPUT ERROR.
START OVER./]
		EXIT 1,
		JRST .+1]
	IDPB T,MAGBUF+1
	AOS AMDCNT			;COUNT NO. OF CHARS TO AMDAHL OUTPUT
	CAIN M,AMDDEV			;ONLY BREAK FOR AMDAHL
	SKIPN AMDPTR			;IF WE'RE BREAKING UP A LONG MOVE,THIS WILL BE NON ZERO
	POPJ P,
	IDPB T,AMDPTR			;COPY STRING INTO LOCAL BUFFER SO IT CAN BE REPEATED LATER
	POPJ P,

;FILL REST OF RECORDS WITH BLANKS

MAGFIL:	MOVEI T,0	;BCD BLANK
	SKIPN REALMG	;REALLY MAG TAPE OUTPUT?
	JRST [		;NO, HAVE TO PLAY AROUND A BIT TO GET CORRECT BLOCKING
			; FOR COPYING ONTO MAGTAPE USING MLENGTH FEATURE IN COPY.

		NOTMAG:	MOVE TT,AMDCNT	;NUMBER OF CHARS WRITTEN ON CARD IMAGE FILE
			IDIVI TT,MAGLEN*6 ;TTT GETS N. CHARS INTO LAST TAPE BLOCK
			JUMPE TTT,CPOPJ	;LEAVE IF IT COMES OUT EVEN
			MOVEI TT,MAGLEN*6
			SUB TT,TTT	;NUMBER OF BLANKS NEEDED INTO TT
			PUSHJ P,MAGPUT
			SOJG TT,.-1
			POPJ P,]

MAGFL1:	SOSG MAGBUF+2	;YES, REALLY MAG TAPE, SO FILLING BUFFER WITH BLANKS
	JRST [	BLNKDN:	OUT TRWCHN,	; WILL CAUSE CORRECT BLOCKING FOR
			POPJ P,		; CARD IMAGES
			OUTSTR[ASCIZ/MAGTAPE OUTPUT ERROR ON LAST RECORD.
START OVER./]
			EXIT]
	IDPB T,MAGBUF+1
	JRST MAGFL1
;CONVERT CHARACTERS FOR PHOTOPLOTTER  (PC)

DEFINE DEV1 $ (NAM,STRING)
<	CNV$NAM
>

CNVCHR:	DEVICE				;DISPATCH FOR CONVERSION

CNVAMD:	SKIPN T,BCDAMD(T)
	JRST BITCH
	POPJ P,

CNVDEC:	SKIPN T,BCDDEC(T)
	JRST BITCH
	POPJ P,

CNVTRW:	SKIPN T,BCDTAB(T)
	JRST BITCH
	POPJ P,

CNVLL:	POPJ P,				;ASCII

BITCH:	OUTSTR[ASCIZ/CHAR. WITH NO BCD EQUIVALENT, THIS IS IMPOSSIBLE!
/]
	EXIT 1,
	POPJ P,
;TRW LOG FILE STUFF  (PC)
INLMES:	POP P,T			;POP RETURN
	HRLI T,440700		;MAKE IT A BYTE POINTER
	PUSHJ P,LSTSTR		;DO THE STRING THING
	JRST 1(T)		;RETURN IN LINE

LSTLJS:
DEC,<	HLRZ T,TT
LSTOCT:	IDIVI T,10
	HRLM TT,(P)
	SKIPE T
	PUSHJ P,LSTOCT
	HLRZ TTT,(P)
	ADDI TTT,60
	JRST LSTCHR
>;DEC
NODEC,<	TLNN TT,777700
	LSH TT,14
	TLNN TT,770000
	LSH TT,6
>;NODEC
LSTSIX:	JUMPE TT,CPOPJ
	SETZ T,
	LSHC T,6
	MOVEI TTT,40(T)
	PUSHJ P,LSTCHR
	JRST LSTSIX

LSTCR:	MOVEI TTT,15
	PUSHJ P,LSTCHR
	MOVEI TTT,12
	JRST LSTCHR

LOUT:	HRLI T,440700
LSTSTR:	ILDB TTT,T		;GET A CHAR
	JUMPE TTT,CPOPJ		;RETURN ON NULL
	PUSHJ P,LSTCHR
	JRST LSTSTR
;  (PC)
LSTMIL:	IMULI T,=5
	MOVEI TTT,"-"
	SKIPGE T
	PUSHJ P,LSTCHR
	MOVM T,T
	IDIVI T,=1000
	PUSH P,TT
	PUSHJ P,LSTDEC
	MOVEI TTT,"."
	PUSHJ P,LSTCHR
	POP P,T
	MOVEI TTT,"0"
	CAIGE T,=100
	PUSHJ P,LSTCHR
	CAIGE T,=10
	PUSHJ P,LSTCHR		;FALL INTO LSTDEC
LSTDEC:	MOVEI TTT,"-"
	SKIPGE T
	PUSHJ P,LSTCHR
	MOVM T,T
LSTDC1:	IDIVI T,=10
	HRLM TT,(P)
	SKIPE T
	PUSHJ P,LSTDC1
	HLRZ TTT,(P)
	ADDI TTT,60		;MAKE ASCII AND FALL INTO LSTCHR
LSTCHR:
STAN,<	CAIN TTT,"_"
	 MOVEI TTT,""
>;STAN
	SOSG LSTHD+2
	OUT LST,
	CAIA
	JRST [	OUTSTR[ASCIZ/LOG FILE OUTPUT ERROR!
/]
		EXIT 1,
		JRST .+1]
	IDPB TTT,LSTHD+1
	POPJ P,
;FINISH LOG FILE OUTPUT  (PC)

PRJSTR:	DEC,<[ASCIZ /DIGITAL WIDGET CORP./]>
	STAN,<[ASCIZ /STANFORD ARTIFICIAL INTELLIGENCE PROJECT/]>
	ITS,<[ASCIZ /M.I.T. ARTIFICIAL INTELLIGENCE LAB/]>
	CMU,<[ASCIZ /CARNEGIE-MELLON EE LAB/]>
	III,<[ASCIZ /INFORMATION INTERNATIONAL, INC./]>
	[0]				;IN CASE NONE OF THESE

PHONE:	STAN,<[ASCIZ /CALL 			AT 497-4971 UPON COMPLETION OR FOR ADDITIONAL INFORMATION.
/]>
	ITS,<[ASCIZ /Call Tom Knight or Jack Holloway at 617-253-7807 upon completion or for additional information.
/]>
	[0]

FINLST:	MOVE T,PRJSTR
	PUSHJ P,LOUT
	PUSHJ P,LSTCR
	MOVEI T,[ASCIZ /Information sheet for plotting with /]
	PUSHJ P,LOUT
	MOVE T,DVNAME(M)
	PUSHJ P,LOUT
	PUSHJ P,LSTCR
	PUSHJ P,INLMES
	ASCIZ\

RETICLE IDENTIFIERS USED:
D	WHEEL	GERBER
CODE	POS	NUMBER	TYPE/SIZE	USE

\

	MOVSI A,-MAXRET
LRTLOP:	SKIPL RETMAP(A)		;WAS IT USED?
	JRST LRTLP1		;NO
	MOVE T,[POINT 7,RETTAB(A)]
	PUSHJ P,LSTSTR		;D CODE
	MOVEI TTT,11
	PUSHJ P,LSTCHR
	MOVEI T,1(A)
	PUSHJ P,LSTDEC		;WHEEL POS
	MOVEI TTT,11
	PUSHJ P,LSTCHR
	MOVEI T,(A)
	SKIPN T,RETTXT(T)
	 MOVE T,RETDEF			;DEFAULT TO FILL IN THE BLANK
	PUSHJ P,LOUT
	MOVEI T,(A)
	SKIPN RETTXT(T)
	JRST LRTLP2
	PUSHJ P,INLMES
NOSTAN,<ASCIZ/
		____________	____________________________________________/>
STANFO,<ASCIZ/
----------------------------------------------------------------------------------/>
LRTLP2:	PUSHJ P,LSTCR
LRTLP1:	AOBJN A,LRTLOP
	CAIE M,TRWDEV
	 JRST LRTNOT
	PUSHJ P,LSTCR
	PUSHJ P,INLMES
	ASCIZ/
TEXT SCALE IDENTIFIERS:
IDENT	SCALE	HEIGHT (IN MILS)
/
	MOVSI A,-5
SIZLOP:	PUSHJ P,INLMES
	ASCIZ/M5/
	MOVEI TTT,"0"(A)
	PUSHJ P,LSTCHR
	MOVEI TTT,11
	PUSHJ P,LSTCHR
	MOVE T,MTAB(A)
	JUMPE T,[PUSHJ P,INLMES
		ASCIZ/NOT USED
/
		JRST SIZLP1]
	IDIVI T,=15/5
	PUSHJ P,LSTDEC
	MOVEI TTT,11
	PUSHJ P,LSTCHR
	MOVE T,MTAB(A)
	IMULI T,5
	PUSHJ P,LSTDEC
	PUSHJ P,INLMES
	ASCIZ/
/
SIZLP1:	AOBJN A,SIZLOP

;  (PC)
LRTNOT:	PUSHJ P,LSTCR
	MOVE T,OFFMSG			;(DEVICE)
	PUSHJ P,LOUT
	PUSHJ P,LSTCR

LTRABS:	PUSHJ P,INLMES
	ASCIZ/
X RANGE: FROM	/
	OUTSTR[ASCIZ/VALUES OUTPUT TO PLOT TAPE:
X RANGE: FROM   /]
	MOVE T,SMLX			;START BY ASSUMING WE DIDN'T ROTATE PLOT
	TLNN FLAG,GROTIT		;ROTATE?
	JRST NGRLX			;NOPE, SKIP FOLLOWING CONFUSION
	MOVE T,SMLY			;YES, SIGH, GET THE AXIS 90 DEG. CCW FROM OURS
	SUB T,YOFF			;SINCE OFFSETS REFER TO GERBER TABLE, REPLACE OFFSET
	ADD T,XOFF			;OF DRAWING WITH OFFSET OF APPROPRIATE GERBER AXIS
NGRLX:	PUSH P,T
	IMULI T,5
	PUSHJ P,MILOUT
	POP P,T
	PUSHJ P,LSTMIL
	PUSHJ P,INLMES
	ASCIZ/	TO	/
	OUTSTR [ASCIZ/  TO	/]
	MOVE T,LRGX
	TLNN FLAG,GROTIT
	JRST NGRBX
	MOVE T,LRGY
	SUB T,YOFF
	ADD T,XOFF
NGRBX:	PUSH P,T
	IMULI T,5
	PUSHJ P,MILOUT
	POP P,T
	PUSHJ P,LSTMIL

	PUSHJ P,INLMES
	ASCIZ/	INCHES
Y RANGE: FROM	/
	OUTSTR[ASCIZ/  INCHES
Y RANGE: FROM   /]
	MOVE T,SMLY
	TLNN FLAG,GROTIT
	JRST NGRLY
	MOVE T,LRGX
	SUB T,XOFF
	MOVNS T
	ADD T,YOFF
NGRLY:	PUSH P,T
	IMULI T,5
	PUSHJ P,MILOUT
	POP P,T
	PUSHJ P,LSTMIL

	PUSHJ P,INLMES
	ASCIZ/	TO	/
	OUTSTR [ASCIZ/  TO	/]
	MOVE T,LRGY
	TLNN FLAG,GROTIT
	JRST NGRBY
	MOVE T,SMLX
	SUB T,XOFF
	MOVNS T
	ADD T,YOFF
NGRBY:	PUSH P,T
	IMULI T,5
	PUSHJ P,MILOUT
	POP P,T
	OUTSTR[ASCIZ/  INCHES
/]
	PUSHJ P,LSTMIL
	PUSHJ P,INLMES
	ASCIZ/	INCHES

FILM SIZES:	ORIGINAL	# OF EXTRA COPIES
		POS  NEG      POSITIVE	  NEGATIVE/
 
	MOVE T,FILMSG			;OF DEVICE
	PUSHJ P,LOUT
	PUSHJ P,LSTCR
	MOVE T,PHONE			;SITE
	PUSHJ P,LOUT

	POPJ P,

;PHOTOPLOTTER SPECIFICATIONS  (PC)

QQQ:					;SYM TO GET RELOCATABLE VALUE
DEFINE MSG(NAME,VAL)
<PRINTS \   NAME - VAL
\>

DEFINE CHECK $ (SIZE,TABLE)
<IFN <<.-TABLE>-SIZE>,<PRINTS \T$ABLE WRONG S$IZE - TABLE
\
MSG(TABLE,\TABLE-QQQ)
MSG(.,\.-QQQ)
MSG(SIZE,\SIZE)
>>

DEFINE FILLTO $ (SIZE,TABLE,VAL)
<ZZZ__SIZE-<.-TABLE>
IFL ZZZ,<PRINTS \CAN'T FILL BLOATED T$ABLE - TABLE
\
MSG(TABLE,\TABLE-QQQ)
MSG(.,\.-QQQ)
MSG(SIZE,\SIZE)
>
IFN ZZZ,<REPEAT ZZZ,<IFDIF <VAL><><VAL;>0> >
>

DEFINE R(T)
<	ASCIZ/T/
>

;AMDAHL GERBER STUFF  (PC)
BEGIN AMDAHL

^^AMDTBL:
MAXCHR:	=200				;MAX # CHARS IN MESSAGE STRING
OFFMSG:	[ASCIZ/BEGIN PLOT RUN WITH HEAD POSITIONED AT X = 21 INCHES, Y = 15 INCHES./]
FILMSG:	[ASCIZ/

20" X 16" FILM  ___  ___      ________    ________


/]

COMMENT
THE FOLLOWING REMARKS APPLY ONLY TO AMDAHL GERBER.
 OBJECT IS TO PICK RETICLE SELECTIONS SO AS TO AVOID STEPPING ON
  AMDAHL'S STANDARD CONSTELLATION

WHEEL POSITIONS 17-21 ARE UNCOMMITTED IN AMDAHL'S STANDARD CONSTELLATION. ALL
OTHER POSITIONS ARE DEDICATED TO APERTURES SHOWN AND CAUSE UNHAPPINESS AT AMDAHL
WHEN USURPED.

		CODE	POS.   APERTURE  DESCRIPTION	USE


RETTAB:
	R	(D10)	;1	1004	  4 MIL DIA LINE
	R	(D11)	;2	1008	  8  "   "   "
	R	(D12)	;3	1010	 10  "   "   "	TEXT, OUTER PLANE BORDER
	R	(D13)	;4	1012	 12  "   "   "
	R	(D14)	;5	1015	 15  "   "   "	STD. TRACE
	R	(D15)	;6	1030	 30  "   "   "
	R	(D16)	;7	1040	 40  "   "   "
	R	(D17)	;8	1050	 50  "   "   "
	R	(D18)	;9	4010	 10 MIL X SLIT
	R	(D19)	;10	5010	 10 MIL Y SLIT
	R	(D70)	;11	4030	 30 MIL X SLIT
	R	(D71)	;12	5030	 30 MIL Y SLIT
	R	(D20)	;13	4100	100 MIL X SLIT
	R	(D21)	;14	5100	100 MIL Y SLIT
	R	(D22)	;15	3030	 30 MIL SQ PAD
	R	(D23)	;16	3050	 50  "  "   " 	DIP PIN 1 PAD

	R	(D24)	;17	1100	100 MIL DIA LINE INNER PLANE BORDER
	R	(D25)	;18	1080	 80  "   "   "	 EDGE FINGER
	R	(D26)	;19	6004	 46 X 16 MIL	DRILL DONUT PAD
	R	(D27)	;20
	R	(D28)	;21	2070	 70 MIL DIA PAD	INNER PLANE CLEARANCE

	R	(D29)	;22	2050	 50 MIL DIA PAD	STANDARD PAD
	R	(D72)	;23	6000	QUAD REG. MARK
	R	(D73)	;24	6002	MOIRE PATTERN	REGISTRATION TARGET
CHECK MAXRET,RETTAB

;AMDAHL GERBER - RETICLE NAMES  (PC)


RETTXT:
[ASCIZ/1004	  4 MIL DIA	LINE				(DRAW)/]
[ASCIZ/1008	  8 MIL DIA	LINE				(DRAW)/]
[ASCIZ/1010	 10 MIL DIA	OUTER PLANE BORDER		(DRAW)/]
[ASCIZ/1012	 12 MIL DIA	LINE				(DRAW)/]
[ASCIZ/1015	 15 MIL DIA	STD. TRACE			(DRAW)/]
[ASCIZ/1030	 30 MIL DIA	LINE				(DRAW)/]
[ASCIZ/1040	 40 MIL DIA	LINE				(DRAW)/]
[ASCIZ/1050	 50 MIL DIA	LINE				(DRAW)/]
[ASCIZ/4010	 10 MIL X SLIT/]
[ASCIZ/5010	 10 MIL Y SLIT/]
[ASCIZ/4030	 30 MIL X SLIT/]
[ASCIZ/5030	 30 MIL Y SLIT/]
[ASCIZ/4100	100 MIL X SLIT/]
[ASCIZ/5100	100 MIL Y SLIT/]
[ASCIZ/3030	 30 MIL SQ PAD					(FLASH)/]
[ASCIZ/3050	 50 MIL SQ	DIP PIN 1 PAD			(FLASH)/]
[ASCIZ/1100	100 MIL DIA	INNER PLANE BORDER		(DRAW)/]
[ASCIZ/1080	 80 MIL DIA	EDGE FINGER			(DRAW)/]
[ASCIZ/6004	 46 X 16 MIL	DRILL DONUT PAD			(FLASH)/]
[ASCIZ/
		____	_____________   _______________________________________/]
[ASCIZ/2070	 70 MIL DIA	INNER PLANE CLEARANCE		(FLASH)/]
[ASCIZ/2050	 50 MIL DIA	STD. PAD			(FLASH)/]
[ASCIZ/6000	QUAD REG. MARK					(FLASH)/]
[ASCIZ/6002	MOIRE PATTERN	REGISTRATION TARGET		(FLASH)/]
CHECK(MAXRET,RETTXT)

RETDEF:
[ASCIZ/
		____	_____________   _______________________________________/]

PTAB:	XWD -1,[0]		;JUST A POINT
	XWD -1,[0]		;JUST A POINT
	XWD -1,[0]		;JUST A POINT
	XWD -1,[0]		;JUST A POINT
	XWD -1,[0]		;JUST A POINT
	XWD -1,[0]		;JUST A POINT
	XWD -1,[0]		;JUST A POINT
	XWD -1,[0]		;JUST A POINT
	XWD -1,[0]		;JUST A POINT
	XWD -1,[0]		;JUST A POINT
	XWD -1,[0]		;JUST A POINT
	XWD -1,[0]		;JUST A POINT
	XWD -1,[0]		;JUST A POINT
	XWD -1,[0]		;JUST A POINT
	XWD -SQRLEN,SQRTAB	;PIN 1 SQUARE
	XWD -SQRLEN,SQRTAB	;PIN 1 SQUARE
	XWD -S120LN,S120TB	;120 MIL BOX
	XWD -S80LN,S80LN	;80 MIL BOX
	XWD -XLEN,XTAB		;DRILL PLUS
	XWD -BXLEN,BXTAB	;JUST LOTS OF THESE FOR NOW
	XWD -CLRLEN,CLRTAB	;CLEARANCE PAD
	XWD -PADLEN,PADTAB	;NORMAL PAD
	XWD -TGLEN,TGTAB	;TARGET
	XWD -TGLEN,TGTAB	;TARGET
CHECK MAXRET,PTAB


PADRET:	=19			;DRILL DONUT
	=22			;STANDARD PAD
	=21			;INNER PLANE CLEARANCE
	=16			;PIN 1 SQUARE
	FILLTO(INTPAD,PADRET)	;SKIP REST OF USER PADS
	=5			;LINE DRAWING APERTURE
	=3			;TEXT, OUTER PLANE BORDER
	=17			;INNER PLANE BORDER
	=18			;FINGERS
	=24			;TARGETS
CHECK MAXPAD,PADRET

SIMPAD:
FILLTO MAXPAD,SIMPAD

CHECK TOPLEN,AMDTBL
BEND AMDAHL

;TRW PHOTOPLOTTER STUFF  (PC)
;DOES ANYONE USE THIS NOWADAYS?

BEGIN TRW

^^TRWTBL:
MAXCHR:	=40				;MAX LENGTH MESSAGE ON FILM
OFFMSG:	[0]				;SETUP INSTRUCTIONS
FILMSG:	[ASCIZ/

11" X 14" FILM	___  ___      ________	  ________

20" X 24" FILM	___  ___      ________	  ________

36" X ___ FILM	___  ___      ________	  ________

MIROR IMAGE AND SHIFT ORIGIN TO LOWER RIGHT? YES ___  NO ___

TEXTUAL PLOT LABELS START AT X = 0.500 AND Y = 0.500 INCHES.
/]

RETTAB:
	R	(D10)	;1
	R	(D11)	;2
	R	(D12)	;3
	R	(D13)	;4
	R	(D14)	;5
	R	(D15)	;6
	R	(D16)	;7
	R	(D17)	;8
	R	(D18)	;9
	R	(D19)	;10

	R	(D70)	;11
	R	(D71)	;12
	R	(D20)	;13
	R	(D21)	;14
	R	(D22)	;15
	R	(D23)	;16

	R	(D24)	;17
	R	(D25)	;18
	R	(D26)	;19
	R	(D27)	;20
	R	(D28)	;21

	R	(D29)	;22
	R	(D72)	;23
	R	(D73)	;24
CHECK MAXRET,RETTAB

RETTXT:	[ASCIZ/DS0048-13	13 MIL DIAMETER, LINE PRODUCING (DRAW)/]
	[ASCIZ/DS0048-10	10 MIL DIAMETER, LINE PRODUCING (DRAW)/]
	[ASCIZ/DS0049-99	125 MIL SQUARE FOR BOARD EDGE. (DRAW)/]
	[ASCIZ/DS0049-67	80 MIL SQUARE, LINE PRODUCING. (DRAW)/]
	[ASCIZ/DS0049-172	181 MIL DIAMETER REGISTRATION TARGET(FLASH)/]
	[ASCIZ/DS0049-157	50 MIL X 15 MIL DONUT PAD(FLASH)/]
	[ASCIZ/DS0050-55	55 MIL DIAMETER, PAD PRODUCING (FLASH)/]
	[ASCIZ/DS0050-70	70 MIL DIAMETER, PAD PRODUCING (FLASH)/]
	[ASCIZ\DS0049-244	55 X 55 MIL SQUARE W/ 20 MIL ROUNDED CORNERS\]
FILLTO MAXRET,RETTXT

RETDEF:	[ASCIZ/
____________	____________________________________________/]


PTAB:	XWD -1,[0]		;JUST A POINT
	XWD -1,[0]		;JUST A POINT
	XWD -S120LN,S120TB	;120 MIL BOX
	XWD -S80LN,S80LN	;80 MIL BOX
	XWD -TGLEN,TGTAB	;TARGET
	XWD -XLEN,XTAB		;DRILL PLUS
	XWD -PADLEN,PADTAB	;NORMAL PAD
	XWD -CLRLEN,CLRTAB	;CLEARANCE PAD
	XWD -SQRLEN,SQRTAB	;PIN 1 SQUARE
	XWD -BXLEN,BXTAB	;JUST LOTS OF THESE FOR NOW
FILLTO MAXRET,PTAB

PADRET:	=6			;DRILL DONUT
	=7			;STANDARD PAD
	=8			;INNER PLANE CLEARANCE
	=9			;PIN 1 SQUARE
	FILLTO(INTPAD,PADRET)	;SKIP REST OF USER PADS
	=1			;LINE DRAWING APERTURE
	=2			;TEXT, OUTER PLANE BORDER
	=3			;INNER PLANE BORDER
	=4			;FINGERS
	=5			;TARGETS
CHECK MAXPAD,PADRET

SIMPAD:				;SIMULATED PAD TYPES
FILLTO MAXPAD,SIMPAD

CHECK TOPLEN,TRWTBL
BEND TRW

;DEC GERBER  (PC)

BEGIN DEC

^^DECTBL:
MAXCHR:	=200
OFFMSG:	[0]				;SETUP INSTRUCTIONS
FILMSG:	[ASCIZ/
11" X 14" FILM	___  ___      ________	  ________
20" X 24" FILM	___  ___      ________	  ________
36" X ___ FILM	___  ___      ________	  ________

MIROR IMAGE AND SHIFT ORIGIN TO LOWER RIGHT? YES ___  NO ___

TEXTUAL PLOT LABELS START AT X = 0.500 AND Y = 0.500 INCHES.
/]

RETTAB:
	R	(D10)	;1
	R	(D11)	;2
	R	(D12)	;3
	R	(D13)	;4
	R	(D14)	;5
	R	(D15)	;6
	R	(D16)	;7
	R	(D17)	;8
	R	(D18)	;9
	R	(D19)	;10

	R	(D70)	;11
	R	(D71)	;12
	R	(D20)	;13
	R	(D21)	;14
	R	(D22)	;15
	R	(D23)	;16

	R	(D24)	;17
	R	(D25)	;18
	R	(D26)	;19
	R	(D27)	;20
	R	(D28)	;21

	R	(D29)	;22
	R	(D72)	;23
	R	(D73)	;24
CHECK MAXRET,RETTAB

RETTXT:	[ASCIZ/DS0048-13	13 MIL DIAMETER, LINE PRODUCING (DRAW)/]
	[ASCIZ/DS0048-10	10 MIL DIAMETER, LINE PRODUCING (DRAW)/]
	[ASCIZ/DS0049-99	125 MIL SQUARE FOR BOARD EDGE. (DRAW)/]
	[ASCIZ/DS0049-67	80 MIL SQUARE, LINE PRODUCING. (DRAW)/]
	[ASCIZ/DS0049-172	181 MIL DIAMETER REGISTRATION TARGET(FLASH)/]
	[ASCIZ/DS0049-157	50 MIL X 15 MIL DONUT PAD(FLASH)/]
	[ASCIZ/DS0050-55	55 MIL DIAMETER, PAD PRODUCING (FLASH)/]
	[ASCIZ/DS0050-70	70 MIL DIAMETER, PAD PRODUCING (FLASH)/]
	[ASCIZ\DS0049-244	55 X 55 MIL SQUARE W/ 20 MIL ROUNDED CORNERS\]
FILLTO(MAXRET,RETTXT)

RETDEF:	[ASCIZ/____________	____________________________________________/]

PTAB:	XWD -1,[0]		;JUST A POINT
	XWD -1,[0]		;JUST A POINT
	XWD -S120LN,S120TB	;120 MIL BOX
	XWD -S80LN,S80LN	;80 MIL BOX
	XWD -TGLEN,TGTAB	;TARGET
	XWD -XLEN,XTAB		;DRILL PLUS
	XWD -PADLEN,PADTAB	;NORMAL PAD
	XWD -CLRLEN,CLRTAB	;CLEARANCE PAD
	XWD -SQRLEN,SQRTAB	;PIN 1 SQUARE
FILLTO MAXRET,PTAB

PADRET:	=6			;DRILL DONUT
	=7			;STANDARD PAD
	=8			;INNER PLANE CLEARANCE
	=9			;PIN 1 SQUARE
	FILLTO(INTPAD,PADRET)	;SKIP REST OF USER PADS
	=1			;LINE DRAWING APERTURE
	=2			;TEXT, OUTER PLANE BORDER
	=3			;INNER PLANE BORDER
	=4			;FINGERS
	=5			;TARGETS
CHECK MAXPAD,PADRET

SIMPAD:				;SIMULATED PAD TYPES
FILLTO MAXPAD,SIMPAD

CHECK TOPLEN,DECTBL
BEND DEC

;LINCOLN LAB GERBER STUFF  (PC)

BEGIN LL

^^LLTBL:
MAXCHR:	=200
OFFMSG:	[0]				;SETUP INSTRUCTIONS
FILMSG:	[ASCIZ/

20" X 16" FILM  ___  ___      ________    ________


/]

RETTAB:
	R	(D10)	;1
	R	(D11)	;2
	R	(D12)	;3
	R	(D13)	;4
	R	(D14)	;5
	R	(D15)	;6
	R	(D16)	;7
	R	(D17)	;8
	R	(D18)	;9
	R	(D19)	;10

	R	(D70)	;11
	R	(D71)	;12
	R	(D20)	;13
	R	(D21)	;14
	R	(D22)	;15
	R	(D23)	;16

	R	(D24)	;17
	R	(D25)	;18
	R	(D26)	;19
	R	(D27)	;20
	R	(D28)	;21

	R	(D29)	;22
	R	(D72)	;23
	R	(D73)	;24
CHECK MAXRET,RETTAB

RETTXT:
[ASCIZ/C-27024-6	5 MIL diameter, Line/]
[ASCIZ/C-27024-9	8 MIL diameter, Line/]
[ASCIZ/C-27024-11	10 MIL diameter, Line/]
[ASCIZ/C-27024-13	12 MIL diameter, Line/]
[ASCIZ/C-27024-16	15 MIL diameter, Line/]
[ASCIZ/C-27024-26	25 MIL diameter, Line/]
[ASCIZ/C-27024-29	30 MIL diameter, Line/]
[ASCIZ/C-27024-44	60 MIL diameter, Line/]
[ASCIZ/C-27024-118	71 MIL diameter, Line/]
[ASCIZ/C-27024-62	100 MIL diameter, Line/]
[ASCIZ/C-27024-69	125 MIL diameter, Line/]
[ASCIZ/C-27024-246	30 x 30 MIL square, Line/]
[ASCIZ/C-27024-41	54 MIL diameter, Pad flash/]
[ASCIZ/C-27024-47	65 MIL diameter, Pad flash/]
[ASCIZ/C-27024-84	83 MIL diameter, Pad flash/]
[ASCIZ/C-27024-75	175 MIL diameter, Pad flash/]
[ASCIZ/C-27024-86	240 MIL diameter, Pad flash/]
[ASCIZ/C-27024-62	100 MIL diameter, Pad flash/]
[ASCIZ/C-27024-51	70 MIL diameter, Pad flash/]
0
0
0
[ASCIZ/C-27024-287	100 Max Diameter Target, filled in quadrants 2,4/]
[ASCIZ/C-27024-279	93 MIL OD Moire target with 125 x 3 cross-hairs/]
CHECK MAXRET,RETTXT

RETDEF:	[ASCIZ/
____________	____________________________________________________/]


PTAB:	-1,,[0]			;5 MIL LINE
	-1,,[0]			;8 MIL LINE
	-1,,[0]			;10 MIL, TEXT AND OUTER PLANE BORDER
	-1,,[0]			;12 MIL LINE
	-1,,[0]			;15 MIL LINE
	=25,,CIRCLE		;25 MIL LINE
	=30,,CIRCLE		;30 MIL LINE
	=60,,CIRCLE		;60 MIL LINE
	=71,,CIRCLE		;71 MIL LINE
	=100,,CIRCLE		;100 MIL LINE
	=125,,CIRCLE		;125 MIL LINE
	=30,,SQUARE		;30 MIL SQUARE

	=54,,PADCIR
	=65,,PADCIR
	=83,,PADCIR
	=175,,PADCIR
	=240,,PADCIR

	=100,,PADCIR
	=70,,PADCIR

	0
	0
	0
	XWD -TGLEN,TGTAB	;TARGET
	XWD -TGLEN,TGTAB	;TARGET

CHECK MAXRET,PTAB

PADRET:	=13			;DRILL DONUT
	=13			;STANDARD PAD
	=19			;INNER PLANE CLEARANCE
	=13			;PIN 1 SQUARE
	FILLTO(INTPAD,PADRET)	;SKIP REST OF USER PADS
	=5			;LINE DRAWING APERTURE
	=3			;TEXT, OUTER PLANE BORDER
	=10			;INNER PLANE BORDER
	0			;FINGERS
	=24			;TARGETS
CHECK MAXPAD,PADRET


SIMPAD:				;SIMULATED PAD TYPES
FILLTO IPCRET,SIMPAD
	[=5 =15 =40],,ANULUS	;RETICLE #,RING WIDTH,RING RADIUS
FILLTO MAXPAD,SIMPAD

CHECK TOPLEN,LLTBL
BEND LL
>;MPC

;PTAPE(PC), GETMES(PC)
MPC,<
PTAPE:	SOSG TAPHD+2
	OUT TAP,
	CAIA
	JRST [	OUTSTR[ASCIZ/DRILL TAPE OUTPUT ERROR!
/]
		EXIT 1,
		JRST .+1]
	IDPB T,TAPHD+1
IFN 0,<
	TDNN T,[400000,,400000]
	POPJ P,
	OUTSTR[ASCIZ\NEGATIVE X AND/OR Y VALUE BEING OUTPUT TO 'DRL' FILE.
TYPE CONTINUE TO GO ON.
\]
	EXIT 1,
>;IFN 0
	POPJ P,

GETMES:	MOVEI B,0	;NO CHARS YET!
	MOVE A,[POINT 7,STRING]
CHRGET:	PUSHJ P,GETCHL
	ANDI T,177
	CAIN T,12
	JRST CHRDON

	CAIE M,TRWDEV
	JRST CHRGE1
	CAIN T,"*"	;CAN'T BE IN MESSAGE
	JRST CHRERR
	SKIPE BCDTAB(T)	;MUST HAVE BCD EQUIVALENT
	SKIPN ONETAB(T)	;AND MUST BE PLOTTABLE!
	JRST CHRERR
	CAML B,MAXCHR			;TOO MANY CHARS?
	JRST CHRTOO
	JRST CHRGE2

CHRGE1:	CAIL T,"A"+40
	CAILE T,"Z"+40
	CAIA
	SUBI T,40
	CAIN M,DECDEV			;SPACES ARE VERBOTEN AT DEC
	CAIE T,40
	CAIA
	 JRST CHRERR
	CAIL T,40
	CAIL T,140
	JRST CHRERR
	CAML B,MAXCHR
	JRST CHRTOO

CHRGE2:	IDPB T,A
	AOJA B,CHRGET

CHRDON:	CAIE M,TRWDEV
	 JRST NOSPCX
	JUMPE B,NOSPCX
	LDB T,A
	CAIN T,40	;SPACE ALREADY?
	JRST NOSPCX
	MOVEI T,40
	IDPB T,A
	IDPB T,A
	ADDI B,2
NOSPCX:	MOVEI T,0
	IDPB T,A
	CAMG B,MAXCHR			;LONGEST STRING ON THIS DEVICE
	POPJ P,
CHRTOO:	OUTSTR[ASCIZ/TOO MANY CHARACTERS.
/]
CHRER1:	PUSHJ P,IERR
	OUTSTR[ASCIZ/TRY AGAIN.
/]
	JRST GETMES

CHRERR:	OUTSTR[ASCIZ/ILLEGAL CHARACTER.
/]
	JRST CHRER1

>;MPC
;FR80 SUBRS
FROUT:	SOSG FRBUF+2
	OUT F80CHN,
	CAIA
	JRST [	OUTSTR[ASCIZ/FR-80 OUTPUT ERROR!
/]
		EXIT 1,
		JRST FROUT]
	IDPB T,FRBUF+1
	POPJ P,

MPC,<
FRFIXX:
FRFIXY:
	PUSH P,TT
	IMUL T,FRFUDG
	IDIVI T,=10		;ACCOUNT FOR EXTRA FACTOR OF TEN IN FRFUDG
	POP P,TT
	ADDI T,20000		;16384/2
>;MPC
MD,<
FRFIXX:	PUSH P,TT
	HLRE TT,OFFSET
	SUB T,TT
	IMUL T,FRFUDG
	IDIVI T,=10
	POP P,TT
	ADDI T,FRMAX-100-FRXFDG	;KEEP AWAY FROM EDGE
	JRST FRFIX

FRFIXY:	PUSH P,TT
	HRRE TT,OFFSET
	SUB T,TT
	IMUL T,FRFUDG
	IDIVI T,=10		;ACCOUNT FOR EXTRA FACTOR OF TEN IN FRFUDG
	ADDI T,FRYFDG+100	;KEEP AWAY FROM EDGE
	POP P,TT
FRFIX:
>;MD
	CAIGE T,FRMAX
	JUMPGE T,.+2
	OUTSTR[ASCIZ/FR80 WRAP-AROUND!
/]
	ANDI T,FRMAX-1
	POPJ P,

FRLNS:	TDZA TT,TT		;INVISIBLE
FRLIN:	MOVEI TT,(<BYTE(4)10>)	;VISIBLE
	MOVE T,X
	CAMN T,LASTX
	JRST YONLY
	MOVEM T,LASTX
MPC,<	SUB T,XOFF	>;RE-CENTER
	PUSHJ P,FRFIXX
	TRO T,(<BYTE(4)2>)
	TDO T,TT
	PUSHJ P,FROUT		;X PART
	MOVE T,Y
	CAMN T,LASTY		;NEED Y PART?
	POPJ P,			;NO
	MOVEM T,LASTY
MPC,<	SUB T,YOFF	>;RE-CENTER
	PUSHJ P,FRFIXY
	CAIG T,FRMAX-FRYFDG
	CAIGE T,FRYFDG
	OUTSTR[ASCIZ/FR80 Y VALUE OVERFLOW!
/]
	TRO T,(<BYTE(4)1>)
	JRST FROUT		;AND Y PART

YONLY:	MOVE T,Y
	CAMN T,LASTY
	POPJ P,
	MOVEM T,LASTY
MPC,<	SUB T,YOFF	>
	PUSHJ P,FRFIXY
	CAIG T,FRMAX-FRYFDG
	CAIGE T,FRYFDG
	OUTSTR[ASCIZ/FR80 Y VALUE OVERFLOW!
/]
	TRO T,(<BYTE(4)3>)
	TDO T,TT
	JRST FROUT

FRLINS:	CAIN D,2
	JRST FRLIN		;VISIBLE
	JRST FRLNS		;INVISIBLE

FRTXT:	PUSH P,TT
	PUSHJ P,FRLNS		;INVISIBLE
	MOVEI T,777777
	MOVEM T,LASTY
	MOVEM T,LASTX		;FLUSH THESE
	POP P,TT
	MOVE T,@3(TT)		;GET ROTATION
	CAMN T,LSTROT		;DIF?
	JRST OLDROT
	MOVEM T,LSTROT
	LSH T,1
	ANDI T,7
	TRO T,(<BYTE(3)2(6)10>)
	PUSHJ P,FROUT
OLDROT:	MOVE T,@2(TT)		;CHARACTER SIZE (WIDTH OF CHAR)
	IMUL T,FRFUDG
	PUSH P,TT
	IDIVI T,=10		;ACCOUNT FOR EXTRA FACTOR OF 10 IN FRFUDG
	CAILE T,777
	 MOVEI T,777		;MAX 777 POINTS
	CAMN T,LSTSPC		;NEW CHAR SPACING?
	 JRST OLDSPC
	MOVEM T,LSTSPC
	TRO T,(<BYTE(3)2(6)11>)	;SET CHAR SPACING
	PUSHJ P,FROUT
	MOVE T,LSTSPC		;GET CHAR SPACING
	MOVE TT,LSTSPC		;AND ANOTHER COPY
	LSH TT,-3		;TO 1/8
	SUB T,TT
	CAILE T,777
	 MOVEI T,777
	TRO T,(<BYTE(3)2(6)24>)	;SET CHAR HEIGHT 7/8 TIMES SPACING
	PUSHJ P,FROUT
OLDSPC:	POP P,TT
	MOVEI T,(<BYTE(3)2(6)4>)
	PUSHJ P,FROUT			;TYPE MODE
	PUSH P,A
	SKIPA A,4(TT)
FRSTR:	PUSH P,A
	HRLI A,(<POINT 7,0>)
	SETZ T,
FRSLOP:	ILDB TT,A
	JUMPE TT,FRSTDN
	MOVEM TT,1(P)
	MOVE TT,IIITAB(TT)
	JUMPE TT,[	OUTSTR[ASCIZ/ILLEGAL CHAR "/]
			OUTCHR 1(P)
			OUTSTR[ASCIZ/"
/]
			JRST FRSLOP]
	PUSHJ P,FRCHR
	JRST FRSLOP

FRSTDN:	POP P,A
	MOVEI TT,203
	PUSHJ P,FRCHR
	JUMPE T,CPOPJ
	MOVEI TT,0
FRCHR:	LSH T,9
	IOR T,TT
	TRNN T,777000
	POPJ P,
	PUSHJ P,FROUT
	SETZ T,
	POPJ P,
;III CHARACTER TABLE
IIITAB:	0
	436		;
	401		;
	402		;BETA
	660		;
	657		;
	405		;
	413		;
	410		;
	0		;TAB
	0		;LF
	424		;INTEGRAL SIGN
	425		;PLUS MINUS
	0		;CR
	0		;
	427		;
	0		;
	0		;
	420		; PRINT AS OMEGA
	0		;
	0		;
	0		;
	0		;
	0		;
	537		;_
	434		;
	534		;TILDA
	650		;
	647		;
	651		;
	0		;
	652		;

FOR I_40,77
<	400+I
>
	540		;@
FOR I_101,133
<	400+I
>
	437		;\
	535		;]
	435		;^
	433		;_
	500		;`
FOR I_141,173
<	400+I
>
	576		;|
	0		;ALTMODE
	575		;RIGHT CURLY BRACKET
	536		;HAT
;SIN COS ROUTINES
;STOLEN FROM SAIL LIBRARY(?)

MPC,<
BEGIN SINCOS
;FLOATING POINT SINGLE PRECISION SINE, COSINE  FUNCTION
;--------------------------------------------------------

;IF THE ARGUMENT IS IN DEGREES, THE PROPER ENTRY POINTS ARE
;$SIND AND $COSD, WHILE IF THE ARGUMENT IS IN RADIANS, THE
;PROPER ENTRY POINTS ARE SIN AND COS.
;$COSD CALLS $SIND TO CALCULATE SIND(PI/2+X)
;$COS CALLS $SIN TO CALCULATE SIN (PI/2+X)
;$SIND CALLS $SIN AFTER A CONVERSION FROM DEGREES TO RADIANS.

;THIS ROUTINE CALCULATES SINES AFTER REDUCING THE ARGUMENT TO
;THE FIRST QUADRANT AND CHECKING THE OVERFLOW BITS TO DETERMINE
;THE QUADRANT OF THE ORIGINAL ARGUMENT.
;000 - 1ST QUADRANT
;001 - 2ND QUADRANT
;010 - 3RD QUADRANT
;011 - 4TH QUADRANT
;THE ALGORITHM USES A MODIFIED TAYLOR SERIES TO CALCULATE 
;THE SINE OF THE NORMALIZED ARGUMENT.

INTEGER SAVEA,SAVEB,SAVEC
OPDEF JFOV [JFCL 1,]

^COSD%:	FADR	A,CD1		;ADD 90 DEGREES.
	JRST	CONVER		;CONVERT TO RADIANS
				;THEN GO TO SIN ROUTINE

^SIND%:
CONVER:	FDVR	A,SCD1		;CONVERT TO RADIANS
	JRST	S1		;ENTER SINE ROUTINE.

^COS%:	FADR	A,PIOT		;ADD PI/2.
	JRST	S1		;ENTER SINE ROUTINE.


^SIN%:				;ARG IN A, ANSWER IN A
S1:	MOVEM	B,SAVEB		;SAVE THE ARG.
	MOVEM	A,SAVEA		;ANSWER WILL BE IN A
	MOVEM	C,SAVEC
	MOVM	B,A		;GET ABS OF ARG.
	CAMG	B,SP2		;SIN(X)=X IF X LESS THAN 2^-9.
	JRST	S3A		;EXIT WITH ARG. IN B.
	FDV	B,PIOT		;DIVIDE X BY PI/2.
	CAMG	B,ONE		;IS X/(PI/2) LESS THAN 1.0 ?
	JRST	S2		;YES,ARG IN 1ST QUADRANT ALREADY.
	MULI	B,400		;NO,SEPARATE FRACTION AND EXP.
	ASH	C,-202(B)	;GET X MODULO 2PI.
	JFOV	.+1		;SUPRESS ERROR MESSAGE FROM OVTRAP.
				;SPECIAL INTERRUPT CODE WILL
				;RETURN WITHOUT ATTEMPTING A
				;FIXUP
	MOVEI	B,200		;PREPARE FLOATING FRACTION.
	ROT	C,3		;SAVE THREE BITS TO DETERMINE QUADRANT.
	LSHC	B,33		;ARGUMENT NOW IN THE RANGE (-1,1).
	FAD	B,SP3		;NORMALIZE THE ARGUMENT.
	JUMPE	C,S2		;REDUCED TO 1ST QUAD IF BITS 000.
	TLCE	C,1000		;SUBTRACT 1.0 FROM ARG IF BITS ARE
	FSB	B,ONE		;001 OR 011.
	TLCE	C,3000		;CHECK FOR FIRST QUADRANT, 001.
	TLNN	C,3000		;CHECK FOR THIRD QUADRANT, 010.
	MOVNS	B		;001,010.
S2:	SKIPGE	SAVEA		;CHECK SIGN OF ORIGINAL ARG.
	MOVNS	B		;SIN(-X)=-SIN(X).
	MOVEM	B,SAVEA		;STORE REDUCED ARG.
	FMPR	B,B		;CALCULATE X^X
	MOVE	A,SC9		;GET 1ST CONSTANT.
	FMP	A,B		;MULTIPLY BY X^2
	FAD	A,SC7		;ADD IN NEXT CONSTANT.
	FMP	A,B		;MULTIPLY BY X^2.
	FAD	A,SC5		;ADD IN NEXT CONSTANT.
	FMP	A,B		;MULTIPLY BY X^2.
	FAD	A,SC3		;ADD IN NEXT CONSTANT.
	FMP	A,B		;MULTIPLY BY X^2.
	FAD	A,PIOT		;ADD IN LAST CONSTANT.
S2B:	FMPR	A,SAVEA		;MULTIPLY BY X.
	SKIPA
S3A:	MOVE	A,SAVEA		;ANSWER IN A.
	MOVE	B,SAVEB
	MOVE	C,SAVEC
	POPJ P,

SC3:	577265210372
SC5:	175506321276
SC7:	606315546346
SC9:	164475536722

SP2:	170000000000
SP3:	0
CD1:	90.0
SCD1:	206712273406
PIOT:	201622077325
ONE:	1.0

BEND SINCOS
>;MPC
