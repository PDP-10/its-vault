;<PLOT>PBOX.FAI.116, 14-Dec-76 11:56:19, EDIT BY HELLIWELL
;MACROS
DEFINE BOXFIT $ (H,W,BOX,LAB,WIN)
<	MOVEI TTT,W
	BSCALE(TTT)
	CAMLE T,TTT
	JRST NO$.$BOX
	MOVEI TTT,H-LAB
	BSCALE(TTT)
	CAMLE TT,TTT
	JRST NO$.$BOX
	TLNE FLAG,QUICK
	OUTSTR[ASCIZ/"BOX" OK
/]
	TLNN FLAG,QUICK
	OUTSTR[ASCIZ/SIZE BOX IS BIG ENOUGH!
/]
	JRST WIN

NO$.$BOX:
>
;GETSCL
MD,<
GETSCL:	TRNE FLAG,%DOPLT
	TDNE FLAG,[QUICK,,DODSK!MXGP,<XGP!>0]
	CAIA
	OUTSTR[ASCIZ/PUT PEN BOTTOM CENTER.
/]

NOPUTP:	SKIPE PARG
	 JRST [	MOVEI TTT,1
		JRST GOTSCL]
	SKIPE TTT,SCALE1		;SCALE TYPE IN AT START?
	 JRST GOTSCL			;YES
	TRNE FLAG,PRODUCE
	 JRST [	MOVEI TTT,1>
		JRST GOTSCL]
ASK:	TLNN FLAG,QUICK
	OUTSTR[ASCIZ/SCALE FACTOR?/]
	TLNE FLAG,QUICK
	OUTSTR[ASCIZ/SCALE?/]
	PUSHJ P,DECIN
	JRST [	PUSHJ P,IERR
		JRST ASK]
	JUMPN TTT,GOTSCL
	MOVEI TTT,2		;MAKE CR-LF INTO SIZE 2
MXGP,<	TRNE FLAG,XGP	;UNLESS XGP
	 JRST [	MOVEI TTT,1
		TLNN FLAG,QUICK
		OUTSTR[ASCIZ/USING SCALE 1!
/]
		JRST GOTSCL]
>;MXGP
	TLNN FLAG,QUICK
	OUTSTR[ASCIZ/USING SCALE 2!
/]
GOTSCL:	MOVEM TTT,NSCALE
	SKIPE SCALE1		;WE COULD BE CHANGING THE DEFAULT
	 MOVEM TTT,SCALE1	;SO STORE HERE
NOSPLIT,<MOVE T,FROTIT		;GET MASTER FLAG
	MOVEM T,%ROTIT		;SET FOR THIS TIME
>;NOSPLIT
	MOVE T,LRGX
	SUB T,SMLX
	SCALE(T)
	IMULI T,5
CMU,<	IMUL T,INC.MIL5
	ASH T,BSCL,<-1>-=18
>;CMU
	TLNN FLAG,QUICK
	OUTSTR[ASCIZ/THAT'S /]
	PUSHJ P,MILOUT
	TLNN FLAG,QUICK
	OUTSTR[ASCIZ/ INCHES WIDE, AND /]
	TLNE FLAG,QUICK
	OUTSTR[ASCIZ/  X  /]
	MOVE T,LRGY
	SUB T,SMLY
	SCALE(T)
	IMULI T,5
CMU,<	IMUL T,INC.MIL5
	ASH T,BSCL,<-1>-=18
>;CMU
	PUSHJ P,MILOUT
	TLNN FLAG,QUICK
	OUTSTR[ASCIZ/ INCHES HIGH.
/]
	TLNE FLAG,QUICK
	OUTSTR[ASCIZ/
/]
BSCL,<	TRNE FLAG,PRODUCE
	JRST DEFBSC
ASKBSC:	TLNN FLAG,QUICK
	OUTSTR [ ASCIZ /BOX SCALE FACTOR * 2? /]
	TLNE FLAG,QUICK
	OUTSTR [ ASCIZ /BOX SCL?/]
	PUSHJ P,DECIN
	JRST [	PUSHJ P,IERR
		OUTSTR [ ASCIZ /HUH?
/]
		JRST ASKBSC ]
	JUMPN TTT,GOTBSC
DEFBSC:	MOVEI TTT,2
GOTBSC:	MOVEM TTT,BSCALF
>;BSCL
	MOVE T,LRGX
	SUB T,SMLX
	MOVEM T,WIDTH
	MOVE T,LRGY
	SUB T,SMLY
	MOVEM T,HEIGHT
	SKIPE T,PARG			;CHECK FOR BOX ALREADY SET
	 JRST [	ADDI T,"A"-1
		OUTSTR[ASCIZ/USING "/]
		TRNE T,200000
		OUTCHR["V"]
		OUTCHR T
		OUTSTR[ASCIZ/" BOX.
/]
		TRZE T,200000		;VERTICAL BOX?
		TLOA FLAG,TFLG
		TLZ FLAG,TFLG
		JRST BOXGOT]
	TRNE FLAG,PRODUCE
	 JRST [
MXGP,<		TRNE FLAG,XGP
		 JRST [	TLNE FLAG,QUICK
			OUTSTR[ASCIZ/ "X" BOX
/]
			JRST XGPBOX]
>;MXGP
	STAN,<	MOVEI T,"C"
		TLNE FLAG,QUICK
		OUTSTR[ASCIZ/"C" BOX
/]
>;STAN
	DEC,<	MOVEI T,"D"
		TLNE FLAG,QUICK
		OUTSTR[ASCIZ/"D" BOX
/]
>;DEC
	NOSTAN,<
	NODEC,<	MOVEI T,"A"
		TLNE FLAG,QUICK
		 OUTSTR [ASCIZ/"A" BOX
/]
>;NODEC
>;NOSTAN
		JRST BOXGOT]
	MOVE T,WIDTH
	SCALE(T)
	MOVE TT,HEIGHT
	SCALE(TT)
	BOXFIT(AH,AW,A,LABH,HWIN)
MXGP,<	TRNN FLAG,XGP
	JRST XGPNOK
	BOXFIT(XGPH,XGPW,X,XGPLAB,HWIN)
XGPNOK:
>;MXGP
	BOXFIT(BH,BW,B,DLABH,HWIN)
	BOXFIT(CH,CW,C,DLABH,HWIN)
	BOXFIT(DH,DW,D,DLABH,HWIN)
	BOXFIT(EH,EW,E,DLABH,HWIN)
	TLOA FLAG,TFLG				;FLAG LOSSAGE HERE
HWIN:	TLZ FLAG,TFLG
IFGE BH-LABW < BOXFIT(BW,BH,VB,DLABH,ASKSIZ) >
	BOXFIT(CW,CH,VC,DLABH,ASKSIZ)
	BOXFIT(DW,DH,VD,DLABH,ASKSIZ)
	BOXFIT(EW,EH,VE,DLABH,ASKSIZ)
	TLNN FLAG,TFLG
	JRST ASKSIZ
	TLNE FLAG,QUICK
	OUTSTR[ASCIZ/TOO BIG!
/]
	TLNN FLAG,QUICK
	OUTSTR[ASCIZ/NO SIZE IS BIG ENOUGH!
/]
	JRST ASKSIZ
;ASK BOX SIZE AND SETUP BOX INFO(D)
MXGP,<
XGPBOX:	MOVE E,[XGPW,,XGPH]
	MOVE T,[XGPW,,XGPLAB]
	MOVEM T,LABSIZ			;3 TENTHS INCH HIGH LABEL BOX
	MOVE T,[XWD -XGPLEN,XGPTAB]
	TRO FLAG,BXGP
	JRST NOBRDA
>;MXGP
;FALLS THRU
ASKSIZ:
MXGP,<
	TRZ FLAG,BXGP
	TLNN FLAG,QUICK
	OUTSTR[ASCIZ/X, /]
>;MXGP
	TLNN FLAG,QUICK
	OUTSTR[ASCIZ/A, B, C, D OR E (PRECEDE WITH V FOR VERTICAL FORMAT)
OR SET:S OR FIT:F OR NONE:<CR> OR RESET SCALE:R ?/]
	TLNE FLAG,QUICK
	OUTSTR[ASCIZ/BOX?/]
	PUSHJ P,GETCHL
	CAIN T,"V"
	TLOA FLAG,TFLG
	TLZA FLAG,TFLG
	PUSHJ P,GETCHL
	MOVE TT,T
	CAIE T,12		;ALREADY HAVE LF?
	PUSHJ P,GETCHL
	CAIE T,12
	JRST [	PUSHJ P,IERR
		OUTSTR[ASCIZ/HO, HO, HO!
/]
		JRST ASKSIZ]
	CAIN TT,"R"		;LET HIM RESET SCALE
	JRST ASK		;EVEN IF SPECIFIED IN OUTPUT MODES
	MOVE T,TT
BOXGOT:	SETZB E,LABSIZ
	CAIN T,12
	 JRST NOBRDA
DEC,<	DPB T,[POINT 7,LSIZE,6] >	;FOR LABEL LATER
MXGP,<
	CAIN T,"X"
	JRST XGPBOX
>;MXGP
	CAIN T,"A"
	TLNE FLAG,TFLG		;NOT LEGAL FOR "V"
	CAIA
	MOVE E,[AW,,AH]
	CAIN T,"B"
	MOVE E,[BW,,BH]
	CAIN T,"C"
	MOVE E,[CW,,CH]
	CAIN T,"D"
	MOVE E,[XWD DW,DH]
	CAIN T,"E"
	MOVE E,[XWD EW,EH]
	TLNE FLAG,TFLG		;DID HE TYPE "V"
	MOVSS E,E		;YES, SWAP X AND Y
	CAIN T,"F"
	JRST [	MOVE T,WIDTH
		XSCALE(T)
		ADDI T,=1000/5
		UNBSCL(T)
		CAIGE T,LABW
		MOVEI T,LABW
		MOVE E,HEIGHT
		XSCALE(E)
		ADDI E,=1000/5
		UNBSCL(E)
		ADDI E,LABH
DEC,<		CAIL T,DLABW		;WILL WE USE NEW TITLE BOX?
		ADDI E,DLABH-LABH	;YES, LEAVE ENOUGH SPACE
>;DEC
		HRL E,T
		JRST NOBRD0]
;FALLS THRU
	CAIN T,"S"
	JRST [	TLNE FLAG,QUICK
		OUTSTR[ASCIZ/X,Y?/]
		TLNN FLAG,QUICK
		OUTSTR[ASCIZ/BOX SIZE (X,Y IN INCHES, DECIMAL POINT ALLOWED.)?/]
		PUSHJ P,MILIN
		CAIE T,","
		JRST [BXERR:PUSHJ P,IERR
			OUTSTR[ASCIZ/INPUT ERROR!
/]
			JRST ASKSIZ]
		UNBSCL(TTT)
		MOVS E,TTT
		PUSHJ P,MILIN
		CAIE T,12
		JRST BXERR
		UNBSCL(TTT)
		HRR E,TTT
		JRST NOBRD0]
	JUMPE E,ASKSIZ
NOBRD0:
DEC,<	HLRE T,E			;GET X BOX SIZE
	CAIL T,DLABW
	JRST [	MOVE T,[DLABW,,DLABH]
		MOVEM T,LABSIZ
		MOVE T,[-DBXLEN,,DBXTAB]
		JRST NOBRDA]
>;DEC
	MOVE T,[LABW,,LABH]			;HEIGHT OF LABELING BOX
	MOVEM T,LABSIZ
	MOVE T,[XWD -BOXLEN,BOXTAB]
NOBRDA:	MOVEM T,BOXPNT
	SETZM BRDPNT
	JUMPE E,NOBRDB
	HLRE T,E
MXGP,<	TRNE FLAG,BXGP				;XGP BOX IS ALREADY OK
	JRST BXGPOK
>;MXGP
	HLRZ TT,LABSIZ
	CAMGE T,TT
	JRST [	OUTSTR[ASCIZ/SORRY, NOT WIDE ENOUGH FOR LABEL BOX!
/]
		JRST ASKSIZ]
LOGO,<	CAIGE T,LOGOW(TT)	;WILL LOGO FIT?
	TLZA FLAG,LOGFLG	;NO, IT WON'T
	TLO FLAG,LOGFLG		;YES, IT WILL!!!
>;LOGO
MXGP,<BXGPOK:>
	BSCALE(T)
	HRLM T,BRDPNT
	HRRE E,E
	BSCALE(E)
	HRRM E,BRDPNT
	HLL E,BRDPNT
NOSPLIT,<
MXGP,<	TRNE FLAG,XGP
	JRST [	HRRZ TTT,E
		CAIG TTT,XGPWID
		JRST NOBRDB
		HLRZ TTT,E
		CAIL TTT,(E)
		JRST NOBRDB
		SETCMM %ROTIT	;COMPLEMENT, RATHER THAN SET, SO HE CAN OVERRIDE US!
		SKIPE %ROTIT
		OUTSTR [ ASCIZ /ROTATING PLOT TO MINIMIZE XGP OUTPUT SPLICING
/]
		JRST NOBRDB ]
>;MXGP
	SKIPE %ROTIT
	JRST [	HRRE TTT,E
		CAIG TTT,PLTWID
		JRST NOBRDB
		OUTSTR[ASCIZ/SORRY, WON'T FIT ROTATED!
/]
		JRST ASK]	;ASK SCALE AGAIN
	HLRE TTT,E
	CAIG TTT,PLTWID
	JRST NOBRDB
	SETOM %ROTIT
	HRRE TTT,E
	CAIG TTT,PLTWID
	JRST [	OUTSTR[ASCIZ/TOO BIG IN X, ROTATING!
/]
		JRST NOBRDB]
	OUTSTR[ASCIZ/TOO BIG IN BOTH X AND Y!
/]
	JRST ASK
>;NOSPLIT

NOBRDB:	SKIPE E,BRDPNT
	JRST NOBRDC
	MOVE E,HEIGHT
	SCALE(E)
	MOVE T,WIDTH
	SCALE(T)
	HRL E,T
NOBRDC:	MOVE T,SMLY
	ADD T,LRGY
	SCALE(T)
	HRRZ TT,LABSIZ
	BSCALE(TT)
	SUB T,TT
	SUBI T,(E)
	ASH T,-1
	TRZ T,1
	MOVEM T,OFFSET		;Y PART OF OFFSET
	MOVE T,LRGX
	ADD T,SMLX
	SCALE(T)
	HLRZ TT,E
	ADD T,TT
	ASH T,-1
	TRZ T,1
	HRLM T,OFFSET		;X PART OF OFFSET
NOSPLIT,<
	SKIPE %ROTIT
	JRST VERTST
	HRRE T,OFFSET
	SUBI T,=1000/5		;START 1 INCH BELOW BOX
	MOVE TT,LRGX
	ADD TT,SMLX
	ASH TT,-1
	SCALE(TT)
	HRL T,TT
	JRST GTSTRT

VERTST:	SKIPN TT,BRDPNT
	JRST NBRDST
	HLRE TTT,OFFSET
	HLRZ TT,TT
	SUBM TTT,TT
	HRRE T,BRDPNT
	ASH T,-1
	ADD T,OFFSET
	SUBI TT,=1000/5		;START 1 INCH BELOW BOX
	HRL T,TT
	JRST GTSTRT


NBRDST:	MOVE T,LRGY
	ADD T,SMLY
	ASH T,-1
	SCALE(T)
	MOVE TT,MINX
	SCALE(TT)
	SUBI TT,=2000/5		;START 2 INCHES BELOW DRAWING
	HRL T,TT
GTSTRT:	MOVEM T,START
	MOVEM T,STOP			;ASSUME STOPPING THERE
	HRREM T,Y
	HLREM T,X
	PUSHJ P,UNFIX
	MOVEM T,CURSE
NODSKO,<	MOVE T,START
	SKIPN %ROTIT
	SUB T,[=1000/5,,0]
	SKIPE %ROTIT
	SUBI T,=1000/5
	MOVEM T,RSTART
>;NODSKO
MXGP,<	TRNN FLAG,XGP			;DON'T REPOSITION ON XGP!!!!>
	TRNN FLAG,%DOPLT	;PLOTTING?
	JRST NOSTOP
	TRNN FLAG,PRODUCE
	SKIPE PARG
	JRST STSTOP
	TRNN FLAG,REPOS
	JRST NOSTOP
STSTOP:	HRRE T,BRDPNT
	JUMPN T,STSTO1
	MOVE T,HEIGHT
	SCALE(T)
STSTO1:	ADD T,OFFSET
	TLZ T,1
	SKIPN %ROTIT
	JRST [	ADDI T,=1000/5		;STOP AN INCH ABOVE BOX
		HLL T,START		;STOP AT SAME X
		JRST GTSTOP]
	ADD T,[XWD =1000/5,0]
	HRR T,START			;SAME Y
GTSTOP:	MOVEM T,STOP
>;NOSPLIT
NOSTOP:
FOR I IN(SMLX,SMLY,LRGX,LRGY)
<	MOVE T,I
	SCALE(T)
	MOVEM T,I
>
NODEC,<	TLNE FLAG,SIMBOX
	JRST [	SETZ A,
		JRST ISSIM]
>;NODEC
	MOVEI A,=500/5		;SIZE OF EXTRA BORDER
	BSCALE(A)
ISSIM:	HRRE T,OFFSET		;OFFSET IS LOWER RIGHT (MIN Y, MAX X)
	SUB T,A
	CAMGE T,SMLY
	MOVEM T,SMLY
	HLRE TT,OFFSET
	ADD TT,A
	CAMLE TT,LRGX
	MOVEM TT,LRGX
	ASH A,1			;DOUBLE TO FUDGE OTHER DIRECTION
	HRRE TTT,BRDPNT
	ADD T,TTT
	ADD T,A
	CAMLE T,LRGY
	MOVEM T,LRGY
	HLRE TTT,BRDPNT
	SUB TT,TTT
	SUB TT,A
	CAMGE TT,SMLX
	MOVEM TT,SMLX
	POPJ P,

NODEC,<
ASKSIG:	SETZM SIGNAM		;NONE YET!
MXGP,<	TRC FLAG,XGP!PRODUCE
	TRCN FLAG,XGP!PRODUCE	;NO SIGNATURE ON XGP WITH XGP BOX
	POPJ P,
>;MXGP
	MOVSI T,EXTSIG
	PUSHJ P,SETIT
	POPJ P,
	MOVE T,FILNAM
	MOVEM T,SIGNAM
	MOVE T,FILEXT
	MOVEM T,SIGNAM+1
	MOVE T,FILPPN
	MOVEM T,SIGNAM+2
	INIT SIG,0
	'DSK   '
	0
	JRST [	OUTSTR[ASCIZ/CAN'T GET DSK FOR SIG FILE!
/]
		EXIT 1,
		JRST .-3]
	LOOKUP SIG,FILNAM
	JRST [
IFN DATPPN,<	SKIPE T,SIGNAM+2
		JRST NOSIGX
		DSKPPN T,
		CAMN T,[DATPPN]
		JRST NOSIGX
		MOVE T,[DATPPN]
		MOVEM T,SIGNAM+2
		MOVEM T,FILPPN
		JRST .-1
	NOSIGX:
>;IFN DATPPN
		OUTSTR[ASCIZ/CAN'T FIND THE SIGNATURE!
/]
		RELEASE SIG,
		JRST ASKSIG]
	RELEASE SIG,
	POPJ P,
>;NODEC
;BOX SUBR(D)
OUTDON:
	PUSHJ P,FORCE
	SKIPN BRDPNT
	JRST NOBRD
DECOS,<	GETLN T,
	TLNE T,-1
>;DECOS
	OUTSTR[ASCIZ/DOING BOX!
/]
	MOVE T,OFFSET		;START WITH OFFSET
	MOVEI D,3
	PUSHJ P,STUFXY		;INVIS TO LOWER RIGHT-STUFXY DOESN'T USE OFFSET
	PUSHJ P,PLOTIT		;PLOTIT CHECKS FR80 ,CALLS PLOT IF DOPLT IS TRUE
	HLLZ T,BRDPNT
	MOVN T,T		;T HAS -WIDTH OF PLOT BOUNDARY
	MOVEI D,2
	PUSHJ P,STUFAD		;VIS TO LOWER LEFT-STUFAD USES OFFSET
	PUSHJ P,PLOTIT
	HLLZ T,BRDPNT
	MOVN T,T
	HRR T,BRDPNT
	PUSHJ P,STUFAD		;VIS TO UPPER LEFT
	PUSHJ P,PLOTIT
	HRRZ T,BRDPNT
	PUSHJ P,STUFAD		;VIS TO UPPER RIGHT
	PUSHJ P,PLOTIT
	MOVE T,OFFSET
	PUSHJ P,STUFXY		;BACK TO START
	PUSHJ P,PLOTIT
LOGO,<
	TLNN FLAG,LOGFLG
	JRST NOLOG
	MOVE E,[-LOGLEN,,LOGTAB]	;DO THE CMU LOGO!
LOGLOP:	MOVE T,(E)
	MOVEI D,2
	TRZE T,1
	MOVEI D,3		;REALLY INVISIBLE
	PUSHJ P,BFIXXY
	PUSHJ P,PLOTIT
	AOBJN E,LOGLOP
NOLOG:
>;LOGO
	MOVE E,BOXPNT		;GET BOX POINTER
BRDLOP:	MOVE T,(E)
	MOVEI D,2
	TRZE T,1
	MOVEI D,3		;REALLY INVISIBLE
	PUSHJ P,BFIXXY
	PUSHJ P,PLOTIT
	AOBJN E,BRDLOP
BSLOP:	MOVE T,1(E)		;LOC OF THIS THING
	PUSHJ P,BFIXXY
	XCT (E)			;CALL ROUTINE (WILL LEAVE WITH JRST)
	ADDI E,2
	JRST BSLOP		;CONTINUE UNTIL DISP IS JRST

FINBOX:
NODEC,<	TLNE FLAG,SIMBOX
	JRST NOBRD		;THESE TURKEYS DON'T WANT GRID
>;NODEC
	PUSHJ P,FANCY
	PUSHJ P,OUTER		;ALWAYS DO OUTSIDE BOX
DEC,<	TLNN FLAG,SIMBOX
	PUSHJ P,ECOBOX		;NO ECO BOXES IF SIMPLE
>;DEC
	JRST NOBRD
;GRID LABELING BOX SUBR(D)
LNSIZE__6
FANCY:	HRRE T,BRDPNT
	HRRZ TT,LABSIZ
	BSCALE(TT)
	SUB T,TT
	MOVEM T,YVAL
	HLRE T,BRDPNT
	MOVEM T,XVAL
;NOW ALONG BOTTOM
	MOVNI T,CWIDTH*LNSIZE/2
	BSCALE(T)
	MOVE TT,XVAL
	ASH TT,-4
	SUB T,TT
	HRLZM T,LSTBOX
	MOVNI T,<=500/5+CHGHT*LNSIZE>/2
	BSCALE(T)
	HRRM T,LSTBOX
	MOVN C,XVAL
	ASH C,-3
	HRLZ C,C
DEFINE DOLET(LETTER)
<	MOVE T,LSTBOX
	PUSHJ P,STUFAD
	MOVSI A,(<ASCII/LETTER/>)
	PUSHJ P,PUTLET
	ADDM C,LSTBOX
>
	MOVNI T,=500/5
	BSCALE(T)
	HRLZM T,STUBXY
DEFINE DOSTUB(INC)
<	MOVNI A,INC
	PUSHJ P,VSTUB
>
	DOLET(1)
	DOSTUB(2)
	DOLET(2)
	DOSTUB(4)
	DOLET(3)
	DOSTUB(6)
	DOLET(4)
	DOSTUB(8)
	PUSHJ P,DIMPLV
	DOLET(5)
	DOSTUB(=10)
	DOLET(6)
	DOSTUB(=12)
	DOLET(7)
	DOSTUB(=14)
	DOLET(8)

;PUT LETTERS UP LEFT SIDE OF BOX
	MOVE T,[-LNSIZE*CHGHT/2]
	HRRZ TT,LABSIZ
	ADD T,TT
	BSCALE(T)
	MOVE TT,YVAL
	ASH TT,-3
	ADD T,TT
	MOVEM T,LSTBOX
	MOVNI T,<=500/5+LNSIZE*CWIDTH>/2
	BSCALE(T)
	SUB T,XVAL
	HRLM T,LSTBOX	;LOC OF FIRST LETTER
	MOVE C,YVAL
	ASH C,-2
	MOVNI T,=500/5
	BSCALE(T)
	HRLZM T,STUBXY
	MOVN T,XVAL
	HRRM T,STUBXY
DEFINE DOLET(LETTER)
<	MOVE T,LSTBOX
	PUSHJ P,STUFAD
	MOVSI A,(<ASCII/LETTER/>)
	PUSHJ P,PUTLET		;PUT OUT LETTER
	ADDM C,LSTBOX
>
DEFINE DOSTUB(INC)
<	MOVEI A,INC
	PUSHJ P,HSTUB
>
	DOLET(A)
	DOSTUB(2)
	DOLET(B)
	PUSHJ P,DIMPLH
	DOSTUB(4)
	DOLET(C)
	DOSTUB(6)
	DOLET(D)

;NOW NUMBERS ALONG TOP OF BOX
	MOVNI T,CWIDTH*LNSIZE/2
	BSCALE(T)
	SUB T,XVAL
	MOVE TT,XVAL
	ASH TT,-4
	ADD T,TT
	HRLM T,LSTBOX
	HRRE TT,BRDPNT
	MOVE T,[<=500/5-CHGHT*LNSIZE>/2]
	BSCALE(T)
	ADD T,TT
	HRRM T,LSTBOX
	MOVE C,XVAL
	ASH C,-3
	HRLZ C,C
	MOVEI T,=500/5
	BSCALE(T)
	HRLZM T,STUBXY
	HRRE T,BRDPNT
	HRRM T,STUBXY
DEFINE DOSTUB(INC)
<	MOVNI A,INC
	PUSHJ P,VSTUB
>
	DOLET(8)
	DOSTUB(=14)
	DOLET(7)
	DOSTUB(=12)
	DOLET(6)
	DOSTUB(=10)
	DOLET(5)
	DOSTUB(8)
	PUSHJ P,DIMPLV
	DOLET(4)
	DOSTUB(6)
	DOLET(3)
	DOSTUB(4)
DEC,<
	TLNE FLAG,SIMBOX
	JRST VJSTLT
	MOVN A,XVAL
	ASH A,-2
	MOVEI T,=500/5
	BSCALE(T)
	ADD A,T
	MOVEI T,SUPW
	BSCALE(T)
	ADD T,A
	MOVN TT,XVAL
	ASH TT,-3
	CAMLE T,TT
	JRST VJSTLT
	HRLZ T,A
	HRR T,STUBXY
	MOVEM T,ENDBOX
	MOVEI T,2
	MOVEM T,TANGLE
	MOVE E,[-SUPTLN,,SUPTTB]
	PUSHJ P,LJSTLN
	MOVN A,XVAL
	ASH A,-2
	MOVEI T,=250/5-LNSIZE*CWIDTH/2
	BSCALE(T)
	ADD T,A
	HRLZ T,T
	HRR T,LSTBOX
	PUSHJ P,STUFAD
	MOVSI A,(<ASCIZ/2/>)
	PUSHJ P,PUTLET
	ADDM C,LSTBOX
	JRST VDIDLT

VJSTLT:
>;DEC

	DOLET(2)
VDIDLT:
	DOSTUB(2)
	DOLET(1)
;NOW DOWN RIGHT HAND SIDE
	MOVE T,[<=500/5-CWIDTH*LNSIZE>/2]
	BSCALE(T)
	HRLZM T,LSTBOX
	HRRE T,BRDPNT
	MOVE TT,YVAL
	ASH TT,-3
	SUB T,TT
	MOVEI TT,CHGHT*LNSIZE/2
	BSCALE(TT)
	SUB T,TT
	HRRM T,LSTBOX
	MOVE C,YVAL
	ASH C,-2
DEFINE DOLET(LETTER)
<	MOVE T,LSTBOX
	PUSHJ P,STUFAD
	MOVSI A,(<ASCII/LETTER/>)
	PUSHJ P,PUTLET
	MOVE T,C
	EXCH T,LSTBOX
	SUBM T,LSTBOX
>
	MOVEI T,=500/5
	BSCALE(T)
	HRLZM T,STUBXY
DEFINE DOSTUB(INC)
<	MOVEI A,INC
	PUSHJ P,HSTUB
>
	DOLET(D)
	DOSTUB(6)
	DOLET(C)
	DOSTUB(4)
	PUSHJ P,DIMPLH
DEC,<
	TLNE FLAG,SIMBOX
	JRST HJSTLT
	HRRE A,BRDPNT
	ASH A,-1
	MOVNI T,=375/5
	BSCALE(T)
	ADD A,T
	MOVNI T,SUPW+CHGHT*LNSIZE
	BSCALE(T)
	ADD T,A
	MOVE TT,YVAL
	ASH TT,-2
	HRRZ TTT,LABSIZ
	BSCALE(TTT)
	ADD TT,TTT
	CAMGE T,TT
	JRST HJSTLT
	PUSH P,TT
	HRRZ T,A
	MOVEM T,ENDBOX
	MOVEI T,1
	MOVEM T,TANGLE
	MOVE E,[-SUPRLN,,SUPRTB]
	PUSHJ P,LJSTLN
	MOVEI T,SUPW+LNSIZE*CHGHT
	BSCALE(T)
	HRRE TT,ENDBOX
	SUBM TT,T
	POP P,TT
	ADD T,TT
	ASH T,-1
	HLL T,LSTBOX
	PUSHJ P,STUFAD
	MOVSI A,(<ASCIZ/B/>)
	PUSHJ P,PUTLET
	MOVE T,C
	EXCH T,LSTBOX
	SUBM T,LSTBOX
	JRST HDIDLT

HJSTLT:
>;DEC

	DOLET(B)
HDIDLT:
	DOSTUB(2)
	DOLET(A)
	POPJ P,

;NOW DO BOX AROUND IT ALL
OUTER:	MOVEI T,=500/5
	BSCALE(T)
	MOVEM T,YVAL
	HLRE TT,BRDPNT
	MOVN TT,TT
	SUB TT,YVAL
	HRLZM TT,XVAL
	MOVN T,YVAL
	HRL T,YVAL
	PUSHJ P,STUFAD
	MOVEI D,3
	PUSHJ P,PLOTIT
	MOVN T,YVAL
	HLL T,XVAL
	PUSHJ P,STUFAD
	MOVEI D,2
	PUSHJ P,PLOTIT
	MOVE T,XVAL
	HRR T,BRDPNT
	ADD T,YVAL
	PUSHJ P,STUFAD
	PUSHJ P,PLOTIT
	HRLZ T,YVAL
	HRR T,BRDPNT
	ADD T,YVAL
	PUSHJ P,STUFAD
	PUSHJ P,PLOTIT
	MOVN T,YVAL
	HRL T,YVAL
	PUSHJ P,STUFAD
	PUSHJ P,PLOTIT
	POPJ P,

DEC,<
;ECO BOXES
ECOBOX:	HLRE T,BRDPNT
	HLRZ TT,LABSIZ
	BSCALE(TT)
	CAML TT,T			;SPACE FOR ECO BOX?
	POPJ P,				;NO
	MOVNM TT,XVAL
	MOVN T,T
	HRLZM T,ENDBOX
	HRRZ T,LABSIZ			;GET Y VALUE
	BSCALE(T)			;SCALE IT
	MOVEM T,YVAL			;SAVE IT
	HRL T,XVAL
	PUSHJ P,STUFAD
	MOVEI D,3
	PUSHJ P,PLOTIT
	MOVE T,YVAL
	HLL T,ENDBOX			;TO LEFT SIDE OF DRAWING
	PUSHJ P,STUFAD
	MOVEI D,2
	PUSHJ P,PLOTIT
	HRLZ T,XVAL
	SUB T,ENDBOX
	HLRE T,T
	MOVEI TT,PROPW
	BSCALE(TT)
	CAMLE TT,T			;ROOM FOR PROPRIETARY RIGHTS?
	POPJ P,				;NO
	MOVE E,[-PROPLN,,PROPTB]
	PUSHJ P,LJSTLN
	MOVEI TT,PROPW
	BSCALE(TT)
	HRLZ TT,TT
	ADDM TT,ENDBOX
	HRLZ T,XVAL
	SUB T,ENDBOX
	HLRE T,T
	MOVEI TT,ECOW
	BSCALE(TT)
	CAMLE TT,T			;ROOM FOR ECO LABEL?
	POPJ P,				;NO
	MOVE E,[-ECOLEN,,ECOTAB]
	;FALL INTO TABLE HANDLER
LJSTLN:	MOVE T,(E)
	MOVEI D,3
	TRZN T,1
	MOVEI D,2
	PUSHJ P,LSTFAD
	PUSHJ P,PLOTIT
	AOBJN E,LJSTLN
LJSTLP:	MOVE T,1(E)
	PUSHJ P,LSTFAD
	XCT (E)		;WILL LEAVE WITH POPJ P,
	ADDI E,2
	JRST LJSTLP
>;DEC

PUTLET:
	MOVEI D,LNSIZE*10
	BSCALE(D)
	MOVE T,D
	IMULI T,BASLIN
	ASH T,-3
	ADDM T,Y
	MOVE T,D
	ASH T,-3
	ADDM T,X
	MOVEM A,LETTMP
	MOVEI TT,FRLETP
	TRNE FLAG,FR80
	PUSHJ P,FRTXT
	TRNN FLAG,%DOPLT
	POPJ P,
MXGP,<	MOVE TT,D	;POINT SYMBOL AT THE PROPER CHARACTER
	PUSHJ P,CHRSET	;SET FOR THIS SCALE
>;MXGP
	JSA 16,SYMBOL
FRLETP:	JUMP X
	JUMP Y
	JUMP D
	JUMP [0]
	JUMP LETTMP
	POPJ P,

LETTMP:	0

HSTUB:	IMUL A,YVAL
	ASH A,-3
	HRRZ T,LABSIZ
	BSCALE(T)
	ADD A,T
	HRL A,STUBXY
	MOVE T,A
	PUSHJ P,STUFAD
	MOVEI D,3
	PUSHJ P,PLOTIT
	HLLZ T,STUBXY
	ADD T,A
	PUSHJ P,STUFAD
	MOVEI D,2
	JRST PLOTIT

DIMPLH:	HRRE A,BRDPNT
	ASH A,-1
	HLRE T,STUBXY
	ASH T,-2		;1/4 STUB LENGTH
	ADD A,T
	HRL A,STUBXY
	HLLZ T,STUBXY
	ADDB A,T
	PUSHJ P,STUFAD
	MOVEI D,3
	PUSHJ P,PLOTIT
	HRRE T,BRDPNT
	ASH T,-1
	HRL T,STUBXY
	PUSHJ P,STUFAD
	MOVEI D,2
	PUSHJ P,PLOTIT
	HRRZ T,A
	HLRE TT,STUBXY
	ASH TT,-1		;1/2 THIS TIME
	SUB T,TT
	HLL T,A
	PUSHJ P,STUFAD
	JRST PLOTIT

VSTUB:	IMUL A,XVAL
	ASH A,-4
	HRLZ A,A
	HRR A,STUBXY
	MOVE T,A
	PUSHJ P,STUFAD
	MOVEI D,3
	PUSHJ P,PLOTIT
	HLRZ T,STUBXY
	ADDI T,(A)
	HLL T,A
	PUSHJ P,STUFAD
	MOVEI D,2
	JRST PLOTIT

DIMPLV:	HRR A,STUBXY
	HLRE T,STUBXY
	ADD A,T
	HLRE TT,BRDPNT
	MOVN TT,TT
	ASH TT,-1
	ASH T,-2
	SUB TT,T
	HRL A,TT
	MOVE T,A
	PUSHJ P,STUFAD
	MOVEI D,3
	PUSHJ P,PLOTIT
	HLLZ T,BRDPNT
	ASH T,-1
	MOVN T,T
	HRR T,STUBXY
	PUSHJ P,STUFAD
	MOVEI D,2
	PUSHJ P,PLOTIT
	HLRE T,STUBXY
	ASH T,-1
	HRLZ T,T
	ADD T,A
	PUSHJ P,STUFAD
	JRST PLOTIT
;MORE BOX SUBRS, FIXED LABELS (D)

;CHARACTER SIZE FOR STANDARD LABEL LETTERS
NODEC,<
NOCMUB,<
STAN,<	LABCSZ__30 >
ITS,<	LABCSZ__30 >
CMU,<	LABCSZ__30 >
III,<	LABCSZ__30 >
>;NOCUMB
CMUB,<	LABCSZ__20 >
>;NODEC

DEC,<
LABCS1__40
LABCS2__50
LABCS3__60
LABCS4__100

PROPCS__30

SUPCS1__30
SUPCS2__40
SUPH__=450/5
SUPW__=3500/5

$LSIZE:	MOVEI T,LSIZE		;BOX LETTER
	MOVEI D,LABCS3
	JRST DOFIXS
>;DEC

DEFINE FIXSTR(LABEL,SIZE,STR,CHROFF)
<
LABEL:	MOVEI T,[ASCIZ\STR\]
	MOVEI D,SIZE
CMUB,<	MOVEI B,CHROFF	>
	JRST DOFIXS
>

DEC,<
$NXTHI:	SKIPN TNXTHI
	POPJ P,
	MOVEI T,TNXTHI+1
	MOVEI D,LABCS2
	JRST DOFIXS
>;DEC

$MOD:	SKIPN MODULE
	POPJ P,
	MOVEI T,MODULE+1
NODEC,<	MOVEI D,LABCSZ*2	>
DEC,<	MOVEI D,LABCS3	>
DOFIXS:	SETZM TANGLE
DOFIXR:	HRRM T,FRTXT2
	BTXSCL(D)
CMUB,<	IMUL B,D
	ASH B,-4
	ADDM B,X
>;CMUB
	MOVEI TT,FRTXT3
	TRNE FLAG,FR80
	PUSHJ P,FRTXT
	TRNN FLAG,%DOPLT
	POPJ P,
MXGP,<	MOVE TT,D	;POINT SYMBOL AT THE PROPER CHARACTER
	PUSHJ P,CHRSET	;SET FOR THIS SCALE
>;MXGP
	JSA 16,SYMBOL
FRTXT3:	JUMP X
	JUMP Y
	JUMP D
	JUMP TANGLE
FRTXT2:	JUMP 0
	POPJ P,

NOCMUB,<
NODEC,<
STANFO,<
TSITE1:	=19
	ASCIZ/STANFORD ARTIFICIAL/

TSITE2:	=20
	ASCIZ/INTELLIGENCE PROJECT/
>;STANFO
ITS,<
TSITE1:	=19
	ASCIZ/M. I. T. ARTIFICIAL/

TSITE2:	=20
	ASCIZ/INTELLIGENCE PROJECT/
>;ITS
CMU,<
TSITE1:	=26
	ASCIZ/CARNEGIE-MELLON UNIVERSITY/

TSITE2:	=26
	ASCIZ/COMPUTER SCIENCE ENG. LAB./
>;CMU
III,<
;TSITE1:	=11
;	ASCIZ/INFORMATION/
;TSITE2:	=18
;	ASCIZ/INTERNATIONAL INC./

TSITE1:	=12
	ASCIZ /FOONLY, INC./
TSITE2:	=1
	ASCIZ / /
>;III

FIXSTR($APPRV,LABCSZ,<APPROVED BY:>)
FIXSTR($REVLB,LABCSZ,<REV.>)
FIXSTR($NUMBER,LABCSZ,<NUMBER>)
>;NODEC
DEC,<
FIXSTR($REVLB,LABCS1,<REV.>)
FIXSTR($NUMBER,LABCS1,<NUMBER>)
FIXSTR($CODE,LABCS1,<CODE>)
FIXSTR($SIZE,LABCS1,<SIZE>)
FIXSTR($BRDLOC,LABCS1,<BOARD LOCATION:>)
FIXSTR($TITLE,LABCS1,<TITLE:>)
FIXSTR($$NXTHI,LABCS1,<NEXT HIGHER ASSEMBLY:>)
FIXSTR($DRN.,LABCS1,<DRN.>)
FIXSTR($CHKD.,LABCS1,<CHK'D.>)
FIXSTR($ENG.,LABCS1,<ENG.>)
FIXSTR($ADATE,LABCS1,<DATE>)

FIXSTR($PROP0,PROPCS,<"THIS  DRAWING  AND SPECIFICATIONS, HEREIN, ARE THE>)
FIXSTR($PROP1,PROPCS,<PROPERTY OF DIGITAL EQUIPMENT CORPORATION AND SHALL>)
FIXSTR($PROP2,PROPCS,<NOT BE REPRODUCED OR COPIED OR USED IN WHOLE OR  IN>)
FIXSTR($PROP3,PROPCS,<PART   AS  THE BASIS FOR THE MANUFACTURE OR SALE OF>)
FIXSTR($PROP4,PROPCS,<ITEMS WITHOUT WRITTEN PERMISSION.>)
FIXSTR($PROP5,PROPCS,<COPYRIGHT C     , DIGITAL EQUIPMENT CORPORATION">)
DATOFF__PROPCS*CWIDTH*5/8*=12		;12 CHARS TO DATE FIELD
CPYOFF__PROPCS*CWIDTH*5/8*=10		;OFFSET TO LOWER LEFT OF C TO CIRCLE
PROPW__PROPCS*CWIDTH/8*=51+=100/5	;WIDTH OF LONGEST LINE

FIXSTR(ECORV1,LABCS1,<REVISIONS>)
FIXSTR(ECOCHK,LABCS1,<CHK>)
FIXSTR(ECOCHG,LABCS1,<CHANGE NO.>)
FIXSTR(ECORV2,LABCS1,<REV>)
ECOW__=19*LABCS1*CWIDTH/8	;WIDTH OF CHK+1+CHANGE NO.+1+REV+1

>;DEC
>;NOCMUB

CMUB,<
NOMAC,<
CMU,<
FIXSTR($SITE1,LABCSZ*3,<COMPUTER SCIENCE ENGINEERING LAB>,=32)
FIXSTR($SITE2,LABCSZ,<CARNEGIE-MELLON UNIVERSITY>,0)
FIXSTR($SITE3,LABCSZ,<PITTSBURGH, PENNSYLVANIA  15213>,=31*2)
>;CMU
>;NOMAC
MAC,<
FIXSTR($SITE1,LABCSZ*3,<M.I.T. PROJECT MAC (CSR)>,=24)
FIXSTR($SITE2,LABCSZ,<MASSACHUSETTS INSTITUTE OF TECHNOLOGY>,0)
FIXSTR($STIE3,LABCSZ,<CAMBRIDGE, MASSACHUSETTS  02139>,=31*2)
>;MAC

FIXSTR($APPRV,LABCSZ,<CHECKED BY:>)
FIXSTR($NUMBER,LABCSZ,<DRAWING NUMBER:>)
FIXSTR($TITLX,LABCSZ,<TITLE:>)
FIXSTR($FILEX,LABCSZ,<DRAWING FILE:>)
FIXSTR($DATEX,LABCSZ,<DATE:>)
>;CMUB

NODEC,<
FIXSTR($DRWBY,LABCSZ,<DRAWN BY:>)
FIXSTR($$PAGE,LABCSZ,<PAGE>)
FIXSTR($$OF,LABCSZ,<OF>)
FIXSTR($$PROJ,LABCSZ,<PROJECT:>)
>;NODEC
DEC,<
FIXSTR($$PAGE,LABCS1,<SHEET>)
FIXSTR($$OF,LABCS1,<OF>)
FIXSTR($$PROJ,LABCS1,<FIRST USED ON OPTION/MODEL:>)
>;DEC

DEFINE CENSTR(ADDR,STR,SIZE)
<
ADDR:	SKIPN STR
	POPJ P,		;QUIT IF NO STRING
	MOVEI D,SIZE
	MOVEI B,STR
	JRST DOCENS
>

DOCENS:	BTXSCL(D)
	MOVEI T,1(B)
	HRRM T,STRPNT
	MOVE B,(B)
	JRST STRDON

DEC,<
$DCODE:	SKIPN TDCODE
	SKIPA B,[[	2		;TWO CHARS
			ASCIZ/CS/]]
	MOVEI B,TDCODE
	MOVEI D,LABCS3
	JRST DOCENS
>;DEC

NODEC,<
$SITE1:	SKIPN SITE1
	SKIPA B,[TSITE1]
	MOVEI B,SITE1
$SITE3:	MOVEI D,LABCSZ
	JRST DOCENS

$SITE2:	SKIPN SITE2
	SKIPA B,[TSITE2]
	MOVEI B,SITE2
	JRST $SITE3

NOCMUB,<
CENSTR($TITL1,TITL1,LABCSZ)
CENSTR($TITL2,TITL2,LABCSZ)
CENSTR($REV,REV,LABCSZ*2)
CENSTR($AUTHOR,AUTHOR,LABCSZ)
CENSTR($CRDLOC,CRDLOC,LABCSZ)
CENSTR($PAGE,TPAGE,LABCSZ)
CENSTR($OF,TOF,LABCSZ)
CENSTR($PROJ,TPROJ,LABCSZ)
>;NOCMUB
CMUB,<
CENSTR($TITL1,TITL1,LABCSZ*2)
CENSTR($PROJ,TPROJ,2*LABCSZ)
CENSTR($DRNUM,MODULE,LABCSZ*2)
CENSTR($AUTHOR,AUTHOR,LABCSZ*2)
CENSTR($PAGE,TPAGE,2*LABCSZ)
CENSTR($OF,TOF,2*LABCSZ)
>;CMUB
>;NODEC
DEC,<
CENSTR($TITL1,TITL1,LABCS4)
CENSTR($TITL2,TITL2,LABCS4)
CENSTR($REV,REV,LABCS3)
CENSTR($CRDLOC,CRDLOC,LABCS1)
CENSTR($PAGE,TPAGE,LABCS1)
CENSTR($OF,TOF,LABCS1)
CENSTR($PROJ,TPROJ,LABCS2)


;STRINGS FOR SUPLEMENTARY DRAWING NUMBER BLOCKS

DEFINE FIXSUP(LABEL,SIZE,STR)
<
LABEL:	MOVEI T,[ASCIZ/STR/]
	MOVEI D,SIZE
	JRST DOFIXR
>

FIXSUP(SPSIZE,SUPCS1,<SIZE>)
FIXSUP($SPCOD,SUPCS1,<CODE>)
FIXSUP(SPNUM,SUPCS1,<NUMBER>)
FIXSUP($SPREV,SUPCS1,<REV.>)

SPLSIZ:	MOVEI T,LSIZE
	MOVEI D,SUPCS2
	JRST DOFIXR

SPMOD:	SKIPN MODULE
	POPJ P,
	MOVEI T,MODULE+1
	MOVEI D,SUPCS2
	JRST DOFIXR

SPCODE:	SKIPN TDCODE
	SKIPA B,[[	2
			ASCIZ/CS/]]
	MOVEI B,TDCODE
	MOVEI D,SUPCS2
SUPCEN:	BTXSCL(D)
	MOVEI T,1(B)
	HRRM T,STRPNT
	MOVE B,(B)
	JRST STRDNR

SPREV:	SKIPN REV
	POPJ P,
	MOVEI D,SUPCS2
	MOVEI B,REV
	JRST SUPCEN
>;DEC
;MORE BOX SUBR, TITLES (D)
$FILE:	MOVE A,[POINT 7,STR0]
	SETZ B,
ITS,<	SKIPN TT,BOXPPN
	DSKPPN TT,
	PUSHJ P,SIXLOP
	MOVEI T,";"
	IDPB T,A
	ADDI B,1
	MOVEI T,40
	IDPB T,A
	ADDI B,1
>;ITS
	MOVE TT,BOXNAM
	PUSHJ P,SIXLOP
	MOVEI T,"."
	IDPB T,A
	HLLZ TT,BOXEXT
	PUSHJ P,SIXLOP
NOITS,<	MOVEI T,"["
	IDPB T,A
	ADDI B,1
	SKIPN TT,BOXPPN
	DSKPPN TT,
NOCMU,<
	HLLZS TT
	PUSHJ P,PPNLOP
	MOVEI T,","
	IDPB T,A
	ADDI B,1
	SKIPN TT,BOXPPN
	DSKPPN TT,
	HRLZS TT
	PUSHJ P,PPNLOP
>;NOCMU
CMU,<	MOVE T,[XWD TT,PPNBUF]
	DECCMU T,		;CONVERT DEC PPN TO CMU PPN (ASCIZ)
	JRST [	PUSHJ P,SIXLOP	;IF NOT A CMU PPN, PUT IT OUT IN SIXBIT
		JRST CMUPPD]
	SKIPA TT,[POINT 7,PPNBUF]
CMUPP0:	IDPB T,A
	ADDI B,1
	ILDB T,TT
	JUMPN T,CMUPP0
	SUBI B,1
CMUPPD:
>;CMU
	MOVEI T,"]"
	IDPB T,A
	ADDI B,1
>;NOITS
STR0DN:
NODEC,<	MOVEI D,CMUB,<2*>LABCSZ	>
DEC,<	MOVEI D,LABCS1	>
STR1DN:	MOVEI T,0
	IDPB T,A		;END WITH NULL
	BTXSCL(D)
	MOVEI T,STR0
	HRRM T,STRPNT
	JRST STRDON

$DATE:	MOVE A,[POINT 7,STR0]
	HLRZ T,DRWDAT		;GET DATE
	PUSHJ P,PUTDAT
	MOVEI TT," "
	IDPB TT,A
	HRRZ TT,DRWDAT		;GET TIME
	IDIVI TT,=60
	MOVE T,TTT
	IDIVI TT,=10
	ADDI TT,60
	IDPB TT,A
	ADDI TTT,60
	IDPB TTT,A
	MOVEI TTT,":"
	IDPB TTT,A
	IDIVI T,=10
	ADDI T,60
	IDPB T,A
	ADDI TT,60
	IDPB TT,A
	MOVEI B,0
	JRST STR0DN

PUTDAT:	IDIVI T,=31
	ADDI TT,1
	IDIVI TT,=10
	ADDI TT,60
	IDPB TT,A
	ADDI TTT,60
	IDPB TTT,A
	MOVEI TT,"-"
	IDPB TT,A
	IDIVI T,=12
	LDB TTT,[POINT 7,MONTAB(TT),6]
	IDPB TTT,A
	LDB TTT,[POINT 7,MONTAB(TT),13]
	IDPB TTT,A
	LDB TTT,[POINT 7,MONTAB(TT),20]
	IDPB TTT,A
	MOVEI TT,"-"
	IDPB TT,A
	ADDI T,=64
	IDIVI T,=10
	ADDI T,60
	IDPB T,A
	ADDI TT,60
	IDPB TT,A
	POPJ P,

DEC,<
DRNDAT:	DATE T,			;IN CASE NO NAME
	SKIPE DRNNAM
	HRRZ T,DRNNAM+1
	JRST DODATS

CHKDAT:	SKIPN CHKNAM
	POPJ P,
	HRRZ T,CHKNAM+1
	JRST DODATS

ENGDAT:	SKIPN ENGNAM
	POPJ P,
	HRRZ T,ENGNAM+1
DODATS:	MOVE A,[POINT 7,STR0]
	PUSHJ P,PUTDAT
	MOVEI D,PROPCS
	MOVEI B,0
	JRST STR1DN

$CWDAT:	MOVE A,[POINT 7,STR0]
	DATE T,
	IDIVI T,=31*=12
	ADDI T,=1964
	IDIVI T,=1000
	ADDI T,60
	IDPB T,A
	IDIVI TT,=100
	ADDI TT,60
	IDPB TT,A
	MOVE T,TTT
	IDIVI T,=10
	ADDI T,60
	IDPB T,A
	ADDI TT,60
	IDPB TT,A
	MOVEI TT,0
	IDPB TT,A
	MOVEI B,0
	MOVEI D,PROPCS
	BTXSCL(D)
	MOVEI T,STR0
	HRRM T,STRPNT
	JRST STRDON
>;DEC

MONTAB:	ASCIZ/JAN/
	ASCIZ/FEB/
	ASCIZ/MAR/
	ASCIZ/APR/
	ASCIZ/MAY/
	ASCIZ/JUN/
	ASCIZ/JUL/
	ASCIZ/AUG/
	ASCIZ/SEP/
	ASCIZ/OCT/
	ASCIZ/NOV/
	ASCIZ/DEC/

;SIGNATURE(D)
DEC,<
LGONAM:	'DIGITA'
	'LGO   '
	DATPPN

DOLOGO:	MOVEI A,LGONAM
	MOVEI B,[ASCIZ/DIGITAL LOGO/]
	JRST DOSIGS

DODRN:	MOVEI A,DRNNAM
	SKIPN (A)			;ANY NAME HERE?
	MOVEI A,['FOONLY'		;DEFAULT TO S. FOONLY
		'SIG   '
		DATPPN]
	MOVEI B,[ASCIZ/DRN. SIGNATURE/]
	JRST DOSIGS

DOCHK:	MOVEI A,CHKNAM
	MOVEI B,[ASCIZ/CHK'D. SIGNATURE/]
	JRST DOSIGS

DOENG:	MOVEI A,ENGNAM
	MOVEI B,[ASCIZ/ENG. SIGNATURE/]
DOSIGS:	TLNN FLAG,SIMBOX
	SKIPN T,(A)
	POPJ P,
	MOVEM T,FILNAM
	HLLZ T,1(A)
	MOVEM T,FILEXT
	SETZM FILDAT
	MOVE T,2(A)
	MOVEM T,FILPPN
	LOOKUP DAT,FILNAM
	JRST [	OUTSTR (B)
		OUTSTR[ASCIZ/ FILE NOT FOUND!
/]
		CLOSE DAT,
		POPJ P,]
	JRST DOPCF
>;DEC

NODEC,<
DOSIG:	SKIPN T,SIGNAM
	POPJ P,
	MOVEM T,FILNAM
DOSIG1:	MOVE T,SIGNAM+1
	HLLZM T,FILEXT
	MOVE T,SIGNAM+2
	MOVEM T,FILPPN
	SETZM FILEXT+1
	LOOKUP DAT,FILNAM
	JRST [	OUTSTR[ASCIZ/CAN'T FIND SIGNATURE FILE!
/]
		PUSHJ P,ASKSIG		;ASK HIM AGAIN
		JRST DOSIG1]
>;NODEC
DOPCF:	MOVE T,T3S
	MOVEM T,T2S
	MOVEM T,T2P
	SUB T,.JBREL		;CALC DIST FROM HERE TO TOP OF CORE
	ASH T,-1		;HALF IT
	ADD T,.JBREL		;NOW HALFWAY FROM T2S TO .JBREL
	MOVEM T,T1S
	MOVEM T,T1P
	PUSH P,E		;SAVE E
	PUSHJ P,DATIN
	JUMPLE A,SIGLPA		;IS DATA IF LESS THAN OR EQUAL TO 0
	CAIG A,MAXVER		;IF GREATER THAN MAX VERSION #, MUST BE VERSION 0
SIGLP1:	PUSHJ P,DATIN
SIGLPA:	HLRZ T,A
	CAIN T,400001
	JRST SIGLP2
	MOVE T,A
	PUSHJ P,PUT1		;USE TABLE 1 FOR SIGNATURE X,Y
	TRNN A,1
	TDZA T,T
	MOVSI T,1
	PUSHJ P,PUT2		;MAKE SEGMENTS IN TABLE 2
	JRST SIGLP1

SIGLP2:	CLOSE DAT,
	MOVE T,[XWD -=2000,-=500]
	MOVEM T,CURSE		;FIND CLOSEST TO HERE
	TRZ FLAG,IKNOW		;DON'T KNOW WHERE WE ARE YET
	PUSHJ P,FSTINI		;REINITIALIZE FREE STORAGE POINTER
	PUSHJ P,SORT		;SORT SIGNATURE
	POP P,E			;GET SAVED E
SIGLP3:	PUSHJ P,CLFND
	JUMPE A,CPOPJ
	SUB A,T2S
	ADD A,T1S
	MOVE T,(A)
	TRZN T,1
	JRST SIGLP4
	MOVEI D,3
	CAMN T,CURSE
	TRNN FLAG,IKNOW
	CAIA
	MOVEI D,2
	PUSHJ P,FIXSIG
	MOVE T,-1(A)
	TRZ T,1
	MOVEM T,CURSE
	TRO FLAG,IKNOW		;NOW WE KNOW
	MOVEI D,2
	PUSHJ P,FIXSIG
	JRST SIGLP3

SIGLP4:	MOVEI D,3
	CAMN T,CURSE
	TRNN FLAG,IKNOW		;DO WE REALLY KNOW
	CAIA
	MOVEI D,2
	PUSHJ P,FIXSIG
	MOVEI D,2
	MOVE T,1(A)
	TRZ T,1
	MOVEM T,CURSE
	TRO FLAG,IKNOW
	PUSHJ P,FIXSIG
	JRST SIGLP3


NOBRD:
NOSPLIT,<
MXGP,<	TRNN FLAG,XGP		;DON'T PARK PEN IF XGP>
	TRNN FLAG,%DOPLT
	JRST NOPLT7
	MOVE T,STOP
	PUSHJ P,STUFXY
	JSA 16,PLOT
	JUMP X
	JUMP Y
	JUMP [3]
>;NOSPLIT
NOPLT7:	JRST ENDPLT
;BOX PRINT SUBRS (D)
NOITS,<
NOCMU,<
PPNLOP:
IFN DECSW!IIISW,<
	HLRZ T,TT
PPNLP1:	IDIVI T,10
	HRLM TT,(P)
	JUMPE T,.+2
	PUSHJ P,PPNLP1
	HLRZ TT,(P)
	ADDI TT,60
	IDPB TT,A
	ADDI B,1
	POPJ P,
>;IFN DECSW!IIISW
>;NOCMU
>;NOITS
SIXLOP:	SETZ T,
	LSHC T,6
	JUMPE T,SIXLP1
	ADDI T,40
	IDPB T,A
	ADDI B,1
SIXLP1:	JUMPN TT,SIXLOP
	POPJ P,

FIXSIG:
	HRRE TT,T
	HLLZ T,T
	ASH T,-1
	ASH TT,-1
	ADD T,1(E)
	ADD TT,1(E)
	HRR T,TT
	PUSHJ P,BFIXXY
	JRST PLOTIT

DEC,<
INVLIN:	SKIPA D,[3]
VLIN:	MOVEI D,2
	JRST PLOTIT

LSTFAD:	HLRE TT,T
	HRRE T,T
	BSCALE(T)
	BSCALE(TT)
	HRLZ TT,TT
	ADD TT,ENDBOX
	ADD T,ENDBOX
	HLL T,TT
	JRST STUFAD
>;DEC

BFIXXY:	HLRE TT,T
	HRRE T,T
	BSCALE(T)
	BSCALE(TT)
	HRL T,TT
STUFAD:	HRRZ TT,T
	HLLZ T,T
	ADD T,OFFSET
	ADD TT,OFFSET
	HRR T,TT
STUFXY:	PUSH P,T
	HLRE TT,T
	HRRE T,T
	JRST CKMMXY

PLTDEC:	IDIVI T,=10
	HRLM TT,(P)
	SKIPE T
	PUSHJ P,PLTDEC
	HLRZ TT,(P)
	ADDI TT,60
	IDPB TT,A
	ADDI B,1
	POPJ P,


STRDON:	SETZM TANGLE
STRDNR:	IMUL B,D
	MOVE TT,TANGLE
	XCT STRDIS(TT)

STRDIS:	JRST TANGL0
	JRST TANGL1
	JRST TANGL2
	JRST TANGL3

TANGL1:	IMUL B,[-CWIDTH]
	ASH B,-4
	PUSH P,B
	MOVN B,B
	ADD B,Y
	CAMLE B,LRGY
	MOVEM B,LRGY
	POP P,B
	ADDB B,Y
	CAMGE B,SMLY
	MOVEM B,SMLY
	JRST TANGLX

TANGL2:	IMUL B,[CWIDTH]
	ASH B,-4
	PUSH P,B
	MOVN B,B
	ADD B,X
	CAMGE B,SMLX
	MOVEM B,SMLX
	POP P,B
	ADDB B,X
	CAMLE B,LRGX
	MOVEM B,LRGX
	JRST TANGLX

TANGL3:	IMUL B,[CWIDTH]
	ASH B,-4
	PUSH P,B
	MOVN B,B
	ADD B,Y
	CAMGE B,SMLY
	MOVEM B,SMLY
	POP P,B
	ADDB B,Y
	CAMLE B,LRGY
	MOVEM B,LRGY
	JRST TANGLX

TANGL0:	IMUL B,[-CWIDTH]
	ASH B,-4	;TAKE OUT CHAR SCALE BUGGER AND DIVIDE BY 2
	PUSH P,B
	MOVN B,B
	ADD B,X
	CAMLE B,LRGX
	MOVEM B,LRGX
	POP P,B
	ADDB B,X
	CAMGE B,SMLX		;NOW THE OTHER
	MOVEM B,SMLX
TANGLX:	MOVEI TT,FRTXT7
	TRNE FLAG,FR80
	PUSHJ P,FRTXT
	TRNN FLAG,%DOPLT
	POPJ P,
MXGP,<	MOVE TT,D	;POINT SYMBOL AT THE PROPER CHARACTER
	PUSHJ P,CHRSET	;SET FOR THIS SCALE
>;MXGP
	JSA 16,SYMBOL
FRTXT7:	JUMP X
	JUMP Y
	JUMP D
	JUMP TANGLE

STRPNT:	JUMP 0
	POPJ P,
;BOX DEFINITIONS
DEFINE BXY(X,Y,FLAVOR)
<
%I__0
IFIDN<FLAVOR><I><%I__1>
	XWD	-(X)/10*2,(Y)/10*2+%I
>

DEFINE BOXLIN(A,B,C)
<	A
	BXY(<B>,<C>)
>

RADIX =10

NODEC,<
LOGO,<
LOGSCL__14			;SCALE FOR THE LOGO
DEFINE LOGOXY (X,Y)
<BXY <<X*1LOGSCL+LABW*5+<LOGOW*5-103*1LOGSCL>/2>>,<<Y*1LOGSCL+<LOGOW*5-103*1LOGSCL>/2>>>

LOGTAB:	BXY	<<LABW*5+2000>>,0,I
	BXY	<<LABW*5+2000>>,2000
	BXY	LABW*5,2000
	LOGOXY	(1,0),I
	LOGOXY	(102,0)
	LOGOXY	(103,1)
	LOGOXY	(103,85)
	LOGOXY	(86,85)
	LOGOXY	(86,17)
	LOGOXY	(17,17)
	LOGOXY	(17,85)
	LOGOXY	(0,85)
	LOGOXY	(0,1)
	LOGOXY	(1,0)
	LOGOXY	(21,21),I
	LOGOXY	(21,59)
	LOGOXY	(82,59)
	LOGOXY	(82,21)
	LOGOXY	(68,21)
	LOGOXY	(68,47)
	LOGOXY	(67,48)
	LOGOXY	(65,48)
	LOGOXY	(64,47)
	LOGOXY	(64,21)
	LOGOXY	(39,21)
	LOGOXY	(39,47)
	LOGOXY	(38,48)
	LOGOXY	(36,48)
	LOGOXY	(35,47)
	LOGOXY	(35,21)
	LOGOXY	(21,21)
	LOGOXY	(21,63),I
	LOGOXY	(82,63)
	LOGOXY	(82,103)
	LOGOXY	(21,103)
	LOGOXY	(21,85)
	LOGOXY	(67,85)
	LOGOXY	(68,84)
	LOGOXY	(68,82)
	LOGOXY	(67,81)
	LOGOXY	(21,81)
	LOGOXY	(21,63)
LOGLEN__.-LOGTAB
>;LOGO

BOXTAB:
NOCMUB,<
	BXY	0,1000,I
	BXY	LABW*5,1000
	BXY	LABW*5,0
	BXY	LABW*5,500,I
	BXY	0,500
	BXY	0,750,I
	BXY	800,750
	BXY	800,1000
	BXY	800,750,I
	BXY	2700,750
	BXY	2700,1000,I
	BXY	2700,500
	BXY	1500,500,I
	BXY	1500,0
	BXY	4000,0,I
	BXY	4000,500
	BXY	4000,250,I
	BXY	LABW*5,250
	BXY	6800,0,I
	BXY	6800,1000
>;NOCMUB
CMUB,<
	BXY	0,2000,I
	BXY	LABW*5,2000
	BXY	LABW*5,0
	BXY	LABW*5,400,I
	BXY	0,400
	BXY	0,800,I
	BXY	LABW*5,800
	BXY	LABW*5,1200,I
	BXY	0,1200
	BXY	0,1600,I
	BXY	LABW*5,1600
	BXY	<<LABW*5*2/3>>,800,I
	BXY	<<LABW*5*2/3>>,0
	BXY	<<LABW*5/3>>,0,I
	BXY	<<LABW*5/3>>,800
>;CMUB
BOXLEN__.-BOXTAB
NOCMUB,<
	BOXLIN(<PUSHJ P,$SITE1>,<<10500+6800>/2>,800)	;STANFORD ARTIFICIAL
	BOXLIN(<PUSHJ P,$SITE2>,<<10500+6800>/2>,600)	;INTELLIGENCE PROJECT
	BOXLIN(<PUSHJ P,$TITL1>,<<6800+2700>/2>,800)	;TITLE 1
	BOXLIN(<PUSHJ P,$TITL2>,<<6800+2700>/2>,600)	;TITLE 2
	BOXLIN(<PUSHJ P,$DATE>,2700-50,800)	;DATE
	BOXLIN(<PUSHJ P,$CRDLOC>,400,800)	;CRDLOC
	BOXLIN(<PUSHJ P,$FILE>,2700/2,550)	;FILENAME
	BOXLIN(<PUSHJ P,$DRWBY>,LABW*5-50,300)	;DRAWN BY
	BOXLIN(<PUSHJ P,$APPRV>,LABW*5-50,50)	;APPROVED BY
	BOXLIN(<PUSHJ P,$AUTHOR>,8100,300)	;INITIALS
	BOXLIN(<PUSHJ P,$$PAGE>,6750,300)	;"PAGE"
	BOXLIN(<PUSHJ P,$PAGE>,5800,300)	;N
	BOXLIN(<PUSHJ P,$$OF>,5300,300)		;"OF"
	BOXLIN(<PUSHJ P,$OF>,4500,300)		;M
	BOXLIN(<PUSHJ P,$$PROJ>,6750,50)	;"PROJECT"
	BOXLIN(<PUSHJ P,$PROJ>,4900,50)		;PROJECT
	BOXLIN(<PUSHJ P,$NUMBER>,3100,350)	;"NUMBER"
	BOXLIN(<PUSHJ P,$MOD>,3900,50)		;MODULE
	BOXLIN(<PUSHJ P,$REVLB>,1000,350)	;"REV"
	BOXLIN(<PUSHJ P,$REV>,750,50)		;REV
	BOXLIN(<PUSHJ P,DOSIG>,7950,0)		;SIGNATURE
	BOXLIN(<JRST FINBOX>,0,0)

>;NOCMUB

CMUB,<
	BOXLIN(<PUSHJ P,$SITE1>,<<LABW*5/2>>,1675)	;COMP SCI ENG LAB
	BOXLIN(<PUSHJ P,$TITLX>,LABW*5-50,1480)		;TITLE:
	BOXLIN(<PUSHJ P,$TITL1>,LABW*5/2,1300)		;TITLE LINE 1
	BOXLIN(<PUSHJ P,$$PROJ>,LABW*5-50,1080)		;PROJECT:
	BOXLIN(<PUSHJ P,$PROJ>,LABW*5/2,900)		;PROJECT
	BOXLIN(<PUSHJ P,$DRWBY>,LABW*5-50,680)		;DRAWN BY
	BOXLIN(<PUSHJ P,$AUTHOR>,<<LABW*5*5/6-25>>,450)	;INITIALS
	BOXLIN(<PUSHJ P,$APPRV>,<<LABW*5*2/3-50>>,680)	;CHECKED BY
	BOXLIN(<PUSHJ P,$$PAGE>,<<LABW*5/3-50>>,450)	;"PAGE"
	BOXLIN(<PUSHJ P,$PAGE>,<<LABW*5*3/12-200>>,450)	;N
	BOXLIN(<PUSHJ P,$$OF>,<<LABW*5/6-50>>,450)	;"OF"
	BOXLIN(<PUSHJ P,$OF>,<<LABW*5/12-100>>,450)	;M
	BOXLIN(<PUSHJ P,$FILEX>,<<LABW*5-50>>,280)	;"DRAWING FILE:"
	BOXLIN(<PUSHJ P,$FILE>,<<LABW*5*5/6>>,50)		;FILENAME
	BOXLIN(<PUSHJ P,$NUMBER>,<<LABW*5*2/3-50>>,280)	;"DRAWING NO.:"
	BOXLIN(<PUSHJ P,$DRNUM>,<<LABW*5/2>>,50)		;DRAWING NUMBER
	BOXLIN(<PUSHJ P,$DATEX>,<<LABW*5/3-50>>,280)	;"DATE:"
	BOXLIN(<PUSHJ P,$DATE>,<<LABW*5/3-400>>,50)	;DATE, TIME
	BOXLIN(<PUSHJ P,$SITE2>,<<LABW*5-50>>,-120)	;CMU
	BOXLIN(<PUSHJ P,$SITE3>,50,-120)	;PGH, PA
	BOXLIN(<PUSHJ P,DOSIG>,LABW*5/2,400)		;SIGNATURE
	BOXLIN(<JRST FINBOX>,0,0)
>;CMUB

>;NODEC



MXGP,<
XGPTAB:
	BXY	0,0
	BXY	0,XGPLAB*5,I
	BXY	XGPW*5,XGPLAB*5
	BXY	XGPW*5,0
NOCMUB,<
	BXY	4000,0,I
	BXY	4000,XGPLAB*5
	BXY	2000,XGPLAB*5,I
	BXY	2000,0
XGPLEN__.-XGPTAB
	BOXLIN(<PUSHJ P,$TITL1>,<(XGPW*5-4000)*3/4+4000>,50)	;TITLE 1
	BOXLIN(<PUSHJ P,$TITL2>,<(XGPW*5-4000)/4+4000>,50)	;TITLE 2
	BOXLIN(<PUSHJ P,$DATE>,3900,50)				;DATE
	BOXLIN(<PUSHJ P,$FILE>,1000,50)				;FILENAME
	BOXLIN(<PUSHJ P,$CRDLOC>,1000,XGPLAB*5+50)		;CRDLOC
>;NOCMUB
CMUB,<
	BXY	4200,0,I
	BXY	4200,XGPLAB*5
	BXY	2150,XGPLAB*5,I
	BXY	2150,0
XGPLEN__.-XGPTAB
	BOXLIN(<PUSHJ P,$TITL1>,<(XGPW*5-4200)*3/4+4200>,50)	;TITLE 1
	BOXLIN(<PUSHJ P,$$PROJ>,<(XGPW*5-4200)/4+4200>,50)	;PROJECT
	BOXLIN(<PUSHJ P,$DATE>,4150,50)				;DATE
	BOXLIN(<PUSHJ P,$FILE>,1075,50)				;FILENAME
>;CMUB
	BOXLIN(<JRST NOBRD>,0,0)
>;MXGP

DEC,<
BOXTAB:
	BXY	0,LABH*5,I
	BXY	LABW*5,LABH*5
	BXY	LABW*5,0
	BXY	LABW*5,250,I
	BXY	5630,250
	BXY	5630,0,I
	BXY	5630,450
	BXY	7550,450
	BXY	7550,250
	BXY	7550,450,I
	BXY	LABW*5,450
	BXY	LABW*5,825,I
	BXY	8640,825
	BXY	8640,LABH*5,I
	BXY	8640,450
	BXY	8640,825,I
	BXY	7740,825
	BXY	7740,LABH*5,I
	BXY	7740,450
	BXY	7740,825,I
	BXY	5880,825
	BXY	5880,LABH*5,I
	BXY	5880,825
	BXY	4980,825
	BXY	4980,LABH*5,I
	BXY	4980,0
	BXY	4980,450,I
	BXY	8130,450
	BXY	7740,635,I
	BXY	4980,635
	BXY	4980,500,I
	BXY	4380,500
	BXY	4380,0
	BXY	4380,500,I
	BXY	3780,500
	BXY	3780,0
	BXY	3780,500,I
	BXY	900,500
	BXY	900,0
	BXY	900,500,I
	BXY	0,500
BOXLEN__.-BOXTAB
	BOXLIN(<PUSHJ P,$FILE>,9025,290)	;FILENAME
	BOXLIN(<PUSHJ P,$DATE>,7490,290)	;DATE
	BOXLIN(<PUSHJ P,$$PROJ>,10450,50)	;"PROJECT"
	BOXLIN(<PUSHJ P,$PROJ>,6555,50)		;PROJECT
	BOXLIN(<PUSHJ P,$DRN.>,10450,1030)	;"DRN."
	BOXLIN(<PUSHJ P,DODRN>,9570,825)	;DRN SIGNATURE
	BOXLIN(<PUSHJ P,$CHKD.>,10450,655)	;"CHK'D."
	BOXLIN(<PUSHJ P,DOCHK>,9570,450)	;CHK SIGNATURE
	BOXLIN(<PUSHJ P,$ADATE>,8430,655)	;DRN "DATE"
	BOXLIN(<PUSHJ P,DRNDAT>,8595,875)	;DRN DATE
	BOXLIN(<PUSHJ P,$ADATE>,8430,1030)	;CHK "DATE"
	BOXLIN(<PUSHJ P,CHKDAT>,8595,500)	;CHK DATE
	BOXLIN(<PUSHJ P,$ENG.>,7690,1030)	;"ENG."
	BOXLIN(<PUSHJ P,DOENG>,6810,825)	;ENG SIGNATURE
	BOXLIN(<PUSHJ P,$ADATE>,5670,1030)	;ENG "DATE"
	BOXLIN(<PUSHJ P,ENGDAT>,5835,875)	;ENG DATE
	BOXLIN(<PUSHJ P,$TITLE>,4930,1030)	;"TITLE:"
	BOXLIN(<PUSHJ P,$BRDLOC>,7690,665)	;"BOARD LOCATION:"
	BOXLIN(<PUSHJ P,$CRDLOC>,5405,665)	;CRDLOC
	BOXLIN(<PUSHJ P,$$PAGE>,7690,475)	;"PAGE"
	BOXLIN(<PUSHJ P,$PAGE>,6465,475)	;PAGE
	BOXLIN(<PUSHJ P,$$OF>,5980,475)		;"OF"
	BOXLIN(<PUSHJ P,$OF>,5360,475)		;OF
	BOXLIN(<PUSHJ P,$TITL1>,2070,875)	;TITLE 1
	BOXLIN(<PUSHJ P,$TITL2>,2070,550)	;TITLE 2
	BOXLIN(<PUSHJ P,$SIZE>,4925,325)	;"SIZE"
	BOXLIN(<PUSHJ P,$LSIZE>,4770,50)	;"D"
	BOXLIN(<PUSHJ P,$CODE>,4320,325)	;"CODE"
	BOXLIN(<PUSHJ P,$DCODE>,4080,50)	;"CS"
	BOXLIN(<PUSHJ P,$NUMBER>,2700,325)	;"NUMBER"
	BOXLIN(<PUSHJ P,$MOD>,3680,50)		;MODULE
	BOXLIN(<PUSHJ P,$REVLB>,690,325)	;"REV"
	BOXLIN(<PUSHJ P,$REV>,450,50)		;REV
	BOXLIN(<JRST FINBOX>,0,0)

DBXTAB:
	BXY	0,DLABH*5,I
	BXY	DLABW*5,DLABH*5
	BXY	DLABW*5,0
	BXY	DLABW*5,250,I
	BXY	8130,250
	BXY	8130,0,I
	BXY	8130,450
	BXY	10050,450
	BXY	10050,250
	BXY	10050,450,I
	BXY	DLABW*5,450
	BXY	10500,450,I
	BXY	10500,DLABH*5
	BXY	10500,825,I
	BXY	8640,825
	BXY	8640,DLABH*5,I
	BXY	8640,450
	BXY	8640,825,I
	BXY	7740,825
	BXY	7740,DLABH*5,I
	BXY	7740,450
	BXY	7740,825,I
	BXY	5880,825
	BXY	5880,DLABH*5,I
	BXY	5880,825
	BXY	4980,825
	BXY	4980,DLABH*5,I
	BXY	4980,0
	BXY	4980,450,I
	BXY	8130,450
	BXY	7740,635,I
	BXY	4980,635
	BXY	4980,500,I
	BXY	4380,500
	BXY	4380,0
	BXY	4380,500,I
	BXY	3780,500
	BXY	3780,0
	BXY	3780,500,I
	BXY	900,500
	BXY	900,0
	BXY	900,500,I
	BXY	0,500
DBXLEN__.-DBXTAB
	BOXLIN(<PUSHJ P,DOLOGO>,13000,450)	;DIGITAL LOGO
	BOXLIN(<PUSHJ P,$FILE>,11525,290)	;FILENAME
	BOXLIN(<PUSHJ P,$DATE>,9990,290)	;DATE
	BOXLIN(<PUSHJ P,$$PROJ>,12950,50)	;"PROJECT"
	BOXLIN(<PUSHJ P,$PROJ>,9055,50)		;PROJECT
	BOXLIN(<PUSHJ P,$$NXTHI>,8080,290)	;"NEXT HIGHER ASSEMBLY:"
	BOXLIN(<PUSHJ P,$NXTHI>,8055,50)	;NEXT HIGHER ASSEMBLY
	BOXLIN(<PUSHJ P,$DRN.>,10450,1030)	;"DRN."
	BOXLIN(<PUSHJ P,DODRN>,9570,825)	;DRN SIGNATURE
	BOXLIN(<PUSHJ P,$CHKD.>,10450,655)	;"CHK'D."
	BOXLIN(<PUSHJ P,DOCHK>,9570,450)	;CHK SIGNATURE
	BOXLIN(<PUSHJ P,$ADATE>,8430,655)	;DRN "DATE"
	BOXLIN(<PUSHJ P,DRNDAT>,8595,875)	;DRN DATE
	BOXLIN(<PUSHJ P,$ADATE>,8430,1030)	;CHK "DATE"
	BOXLIN(<PUSHJ P,CHKDAT>,8595,500)	;CHK DATE
	BOXLIN(<PUSHJ P,$ENG.>,7690,1030)	;"ENG."
	BOXLIN(<PUSHJ P,DOENG>,6810,825)	;ENG SIGNATURE
	BOXLIN(<PUSHJ P,$ADATE>,5670,1030)	;ENG "DATE"
	BOXLIN(<PUSHJ P,ENGDAT>,5835,875)	;ENG DATE
	BOXLIN(<PUSHJ P,$TITLE>,4930,1030)	;"TITLE:"
	BOXLIN(<PUSHJ P,$BRDLOC>,7690,665)	;"BOARD LOCATION:"
	BOXLIN(<PUSHJ P,$CRDLOC>,5405,665)	;CRDLOC
	BOXLIN(<PUSHJ P,$$PAGE>,7690,475)	;"PAGE"
	BOXLIN(<PUSHJ P,$PAGE>,6465,475)	;PAGE
	BOXLIN(<PUSHJ P,$$OF>,5980,475)		;"OF"
	BOXLIN(<PUSHJ P,$OF>,5360,475)		;OF
	BOXLIN(<PUSHJ P,$TITL1>,2070,875)	;TITLE 1
	BOXLIN(<PUSHJ P,$TITL2>,2070,550)	;TITLE 2
	BOXLIN(<PUSHJ P,$SIZE>,4925,325)	;"SIZE"
	BOXLIN(<PUSHJ P,$LSIZE>,4770,50)	;"D"
	BOXLIN(<PUSHJ P,$CODE>,4320,325)	;"CODE"
	BOXLIN(<PUSHJ P,$DCODE>,4080,50)	;"CS"
	BOXLIN(<PUSHJ P,$NUMBER>,2700,325)	;"NUMBER"
	BOXLIN(<PUSHJ P,$MOD>,3680,50)		;MODULE
	BOXLIN(<PUSHJ P,$REVLB>,690,325)	;"REV"
	BOXLIN(<PUSHJ P,$REV>,450,50)		;REV
	BOXLIN(<JRST FINBOX>,0,0)


PROPCH__PROPCS*5/8*CWIDTH*2
PRPTMP__(DLABH*5+PROPCH*6)/2-PROPCH+45

DEFINE LXY(X,Y,FLAVOR)
<	BXY(<-(X)>,<Y>,FLAVOR)
>

PROPTB:
	LXY	PROPW*5,LABH*5,I
	LXY	PROPW*5,0
PROPLN__.-PROPTB
FOR @% I_0,5
<	BOXLIN(<PUSHJ P,$PROP%I>,-50,PRPTMP-PROPCH*I)
>
	BOXLIN(<PUSHJ P,$CWDAT>,<-(DATOFF+50)>,PRPTMP-5*PROPCH)	;COPYWRITE YEAR
DEFINE CIRCLE(A,B,C)
<	BOXLIN(<A>,<-50-CPYOFF-B*5*PROPCS/8>,<C*5*PROPCS/8+PRPTMP-5*PROPCH>)
>
	CIRCLE(<PUSHJ P,INVLIN>,-4,0)
	CIRCLE(<PUSHJ P,VLIN>,-4,6)
	CIRCLE(<PUSHJ P,VLIN>,-1,9)
	CIRCLE(<PUSHJ P,VLIN>,5,9)
	CIRCLE(<PUSHJ P,VLIN>,8,6)
	CIRCLE(<PUSHJ P,VLIN>,8,0)
	CIRCLE(<PUSHJ P,VLIN>,5,-3)
	CIRCLE(<PUSHJ P,VLIN>,-1,-3)
	CIRCLE(<PUSHJ P,VLIN>,-4,0)
	BOXLIN(<POPJ P,>,0,0)			;LEAVE


DEFINE ECOXY(X,Y,FLAVOR)
<	BXY(<-(X)>,<LABH*5-(Y)>,FLAVOR)
>

ECOTAB:	ECOXY	0,250,I
	ECOXY	480,250
	ECOXY	480,750
	ECOXY	480,250,I
	ECOXY	1800,250
	ECOXY	1800,750
	ECOXY	1800,250,I
	ECOXY	2280,250
	ECOXY	2280,0,I
	ECOXY	2280,LABH*5
	ECOXY	2280,500,I
	ECOXY	0,500
ECOLEN__.-ECOTAB

DEFINE ECOLIN(A,B,C)
<	BOXLIN(<A>,<-(B)>,<LABH*5-C>)
>

	ECOLIN(<PUSHJ P,ECORV1>,600,200)
	ECOLIN(<PUSHJ P,ECOCHK>,60,450)
	ECOLIN(<PUSHJ P,ECOCHG>,540,450)
	ECOLIN(<PUSHJ P,ECORV2>,1860,450)
	ECOLIN(<POPJ P,>,0,0)


DEFINE SUPBLK % (SUPNAM)
<
SUPNAM%TB:
	SUPXY(0,0,I)
	SUPXY(0,SUPH*5)
	SUPXY(600,SUPH*5)
	SUPXY(600,0)
	SUPXY(600,SUPH*5,I)
	SUPXY(2520,SUPH*5)
	SUPXY(2520,0)
	SUPXY(2520,SUPH*5,I)
	SUPXY(3010,SUPH*5)
	SUPXY(3010,0)
	SUPXY(3010,SUPH*5,I)
	SUPXY(SUPW*5,SUPH*5)
	SUPXY(SUPW*5,0)
SUPNAM%LN__.-SUPNAM%TB
	SUPLIN(<PUSHJ P,SPSIZE>,3435,150)
	SUPLIN(<PUSHJ P,SPLSIZ>,3315,350)
	SUPLIN(<PUSHJ P,$SPCOD>,2945,150)
	SUPLIN(<PUSHJ P,SPCODE>,2765,350)
	SUPLIN(<PUSHJ P,SPNUM>,1830,150)
	SUPLIN(<PUSHJ P,SPMOD>,2460,350)
	SUPLIN(<PUSHJ P,$SPREV>,480,150)
	SUPLIN(<PUSHJ P,SPREV>,300,350)
	SUPLIN(<POPJ P,>,0,0)
>

DEFINE SUPXY(X,Y,FLAVOR)
<	BXY(<-(Y)>,<-(X)>,FLAVOR)
>

DEFINE SUPLIN(A,B,C)
<	BOXLIN(<A>,<-(C)>,<-(B)>)
>

	SUPBLK(SUPR)

DEFINE SUPXY(X,Y,FLAVOR)
<	BXY(<-(X)>,<Y>,FLAVOR)
>

DEFINE SUPLIN(A,B,C)
<	BOXLIN(<A>,<-(B)>,<C>)
>

	SUPBLK(SUPT)

>;DEC

RADIX =8

>;MD
