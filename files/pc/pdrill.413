TITLE PDRILL

;BITS IN AC 0
EXLN__1		;CIRCUIT BOARD DRILLING CORP FORMAT TAPE
ALTMOD__33

OPDEF BUGUUO[1B8]

DEFINE BUG(A)<BUGUUO[ASCIZ/A
/]>


P_17
A_1
B_2
C_3
D_4
G_7
T_10
TT_11
TTT_12
TTTT_13

;DEFINE SITE SWITCHES
DEFINE SETSW $ (NAME,DEFVAL)
<	IFNDEF NAME$SW,<NAME$SW__IFIDN <DEFVAL> <> <0;> DEFVAL
>
	NAME$SW__NAME$SW
>

DEFINE ONOFSW $ (NAME,DEFVAL)
<	SETSW(NAME,DEFVAL)
	IFN NAME$SW,<NAME$SW__-1>	;MAKE IT NICE FOR  AND 
>
DEFINE DEFSW $ (NAME)
<	DEFINE NAME,<IFN NAME$SW>
	DEFINE NO$NAME,<IFE NAME$SW>
>
DEFINE MAKESW(NAME,VAL)
<	ONOFSW(NAME,VAL)
	DEFSW(NAME)
>

MAKESW(STAN)
MAKESW(DEC)
MAKESW(CMU)		;CARNEGIE-MELLON UNIVERSITY
MAKESW(ITS)
MAKESW(III)

DEFINE STANFO,<STAN>		;LONG FORM FOR HYSTERICAL RAISINS

DEFINE CHECK $ (SITE,VAR) <IFDEF VAR,<SITE$SW__-1;>>
IFE STANSW!DECSW!CMUSW!ITSSW!IIISW,<
;IF NO SITE SET MANUALLY ABOVE, WE MUST DECIDE FOR OURSELVES WHERE WE ARE
CHECK(ITS,.IOT) CHECK(CMU,CMUDEC) CHECK(STAN,SPWBUT) DECSW__-1
>

NOITS,<PCHN__17>
ITS,<PCHN__10>

EXTERNAL PLOTS,PLOT,WHERE,SYMBOL,REF,XTHICK,SETXY,CHRTB1

LOC 41
	PUSHJ P,BUGPRT
RELOC

INTERNAL DOPLT,CHRTBL

DOPLT:	REF

PDLLEN__20
PDL:	BLOCK PDLLEN

PATCH: BLOCK 40

CHRCNT:	0

FILNAM:	0
FILEXT:	0
FILDAT:	0
FILPPN:	0

OPNBLK:	10
	'DSK   '
	PTRHD

XGPNAM: 0
XGPEXT:	0
XGPDAT:	0
XGPPPN:	0

MAXX:	0
MINX:	0
MAXY:	0
MINY:	0
;SETUP
STRT:	CALLI
	MOVE [400000,,000001]
	MOVEM MAXX
	MOVEM MAXY
	MOVE [377777,,777777]
	MOVEM MINX
	MOVEM MINY
	MOVE P,[IOWD PDLLEN,PDL]
	MOVE T,[0,,CHRTB1(1)]	;GET ADDRESS OF STRETCHED CHARACTER SET
	MOVEM T,CHRTBL#		;POINT SYMBOL ROUTINE AT PROPER CHARACTER SET
	OUTSTR[ASCIZ\TYPE Y IF TAPE IS IN EXCELLON MACHINE FORMAT
ELSE MCC MACHINE FORMAT WILL BE ASSUMED.\]
	PUSHJ P,GETYES
	TDZA
	MOVEI EXLN
NAMLUZ:	SETZM FILNAM		;0 UNLESS USER GIVES INPUT FILE NAME FOR DEFAULT
ITS,<	OUTSTR [ASCIZ /TYPE INPUT FILE NAME (CR FOR PTR)
/]
	MOVSI T,'PTP'		;FILE PRODUCED BY TD
	MOVSI TT,'DSK'
	PUSHJ P,SETNAM
	 SKIPA T,['PTR   ']	;NULL INPUT, ASSUME PTR
	MOVSI T,'DSK'
>;ITS
NOITS,<	MOVSI T,'PTR' >
	MOVEM T,OPNBLK+1
	OPEN OPNBLK
	JRST [	OUTSTR[ASCIZ/CAN'T GET PTR!
/]
		HALT STRT]
ITS,<	SKIPN FILNAM		;FILE ON INPUT?
	JRST NOFILE
	LOOKUP FILNAM
	JRST [	OUTSTR [ASCIZ /LOOKUP FAILED ON DRL FILE!
/]
		JRST NAMLUZ]	
NOFILE:
>;ITS
	INBUF 2
	SETZM XTHICK
	SETZM DOPLT
	SETZM XGPGO#
	OUTSTR[ASCIZ/PLOT?/]
	PUSHJ P,GETYES
	JRST NOPLT
	SETOM DOPLT
	OUTSTR[ASCIZ/XGP?/]
	PUSHJ P,GETYES
	JRST[	MOVSI T,'PTP'
		JRST THERE]
	MOVSI T,'DSK'
	SETOM XGPGO
THERE:	MOVEM T,THING			;OUTPUT DEVICE
	MOVE TT,T
	JSA 16,PLOTS
	JUMP THING#
	SKIPE THING
	JRST [	OUTSTR[ASCIZ/CAN'T GET /]
		CAME T,['PTP   ']
		SKIPA T,[[ASCIZ/DISK!/]]
		MOVEI T,[ASCIZ/PLOTTER!/]
		OUTSTR @T
		OUTSTR [ASCIZ/
/]
		HALT STRT]
	SKIPE XGPGO
	SETOM XTHICK
PLXNAM:	MOVSI T,'PLX'
	MOVSI TT,'DSK'
	PUSHJ P,SETNAM
	 JRST [	CAIN T,ALTMOD
		JRST STRT
		SKIPE FILNAM
		JRST WDSK
		OUTSTR [ASCIZ /HUH?
/]
		JRST PLXNAM]
WDSK:	ENTER PCHN,FILNAM
	JRST[	OUTSTR[ASCIZ/ENTER FAILED ON PLX FILE!
/]
		JRST STRT]

	MOVE T,[XWD FILNAM,XGPNAM]
	BLT T,XGPPPN

NOPLT:	SETZM DOLPT#
	OUTSTR[ASCIZ/CREATE LISTING FILE?/]
	PUSHJ P,GETYES
	JRST NOLPT
	SETOM DOLPT
	INIT 1,0
	'DSK   '
	XWD LPTBUF,0
	JRST [	OUTSTR[ASCIZ/CAN'T GET DSK FOR LISTING!
/]
		HALT STRT]
	SKIPE T,FILNAM
	JRST [	MOVSI T,'LST'
		MOVEM T,FILEXT
		SETZM FILDAT
		SETZM FILPPN
		JRST WDSK1]
LSTNAM:	MOVSI T,'LST'
	MOVSI TT,'DSK'
	PUSHJ P,SETNAM
	 JRST [	CAIN T,ALTMOD
		JRST STRT
		SKIPE FILNAM
		JRST WDSK1
		OUTSTR [ASCIZ /HUH?
/]
		JRST LSTNAM]
WDSK1:	ENTER 1,FILNAM
	JRST[	OUTSTR[ASCIZ/ENTER FAILED ON LST FILE!
/]
		JRST STRT]

	OUTBUF 1,2
NOLPT:	SKIPN DOPLT
	JRST NOMARK
	OUTSTR[ASCIZ/MARK STARTING POINT?/]
	PUSHJ P,GETYES
	JRST NOMARK
	SETZM X
	SETZM Y
	PUSHJ P,CHKXY
	JSA 16,SYMBOL
	JUMP [0]
	JUMP [0]
	JUMP [20]	;SIZE
	JUMP [1]	;ANGLE
	JUMP [ASCIZ/S: +X +Y^/]
	JUMP [5,,5]
	JSA 16,WHERE
	JUMP X
	JUMP Y
	PUSHJ P,CHKXY

NOMARK:	OUTSTR[ASCIZ/LOAD TAPE AND TYPE RETURN./]
	PUSHJ P,GETYES
	JFCL
;PLOP    SKIP FEED HOLES, TOP OF TAPE READ LOOP

	PUSHJ P,GETBYT
	JUMPE T,.-1	;SKIP BLANK LEADER
	SETZM CHRCNT	;INITIALIZE CHARACTER COUNTER
	TRNE EXLN
	JRST EXLDR1
	CAIA
MCLDR:	PUSHJ P,GETBYT
	CAIN T,177
	JRST MCLDR	;SKIP MCC FEED CHARS
	SOS PTRHD+1	;BACK UP BUFFER POINTER SO GETNUM WON'T MISS FIRST DIGIT
	AOS PTRHD+2
	JRST PLOPA

EXLDR:	PUSHJ P,GETBYT
EXLDR1:	CAIN T,20
	JRST EXLDR	;SKIP EXCELLON FEED CHARS
	CAIE T,130	;NEED STOP BLOCK AFTER FEED: M00EOB
	JRST XSTOP	;CAN TOLERATE MISSING STOP BLOCK IF THIS IS LAST
			;(OR ONLY?) TAPE
	PUSHJ P,GETBYT	;GOT M, LOOK FOR REST OF STOP BLOCK
	CAIE T,40
	BUG(NO 0 AFTER M IN LEADING STOP BLOCK)
	PUSHJ P,GETBYT
	CAIE T,40
	BUG(NO 0 AFTER M0 IN LEADING STOP BLOCK)
	PUSHJ P,GETBYT
	CAIE T,200
	BUG(NO EOB AFTER M00 IN LEADING STOP BLOCK)

PLOP:	TRNN EXLN	;TOP OF TAPE SCANNING LOOP
	JRST PLOPA
	PUSHJ P,GETBYT
XSTOP1:	CAIN T,67	;IF IT'S X, WE ASSEMBLE CO-ORDINATES
	JRST PLOPX
	CAIE T,130	;IF IT'S M, WE SET UP FOR STOP BLOCK
	JRST XSTOP2
	PUSHJ P,GETBYT
	CAIE T,40
	BUG(NO 0 AFTER M IN STOP BLOCK)
	PUSHJ P,GETBYT
	CAIE T,40
	BUG(NO 0 AFTER M0 IN STOP BLOCK)
	PUSHJ P,GETBYT
	CAIN T,200
	JRST ENDOUT
	CAIE T,130
	BUG(CHAR AFTER M00 IS NEITHER EOB NOR M)
	PUSHJ P,GETBYT
	CAIE T,23
	BUG(CHAR AFTER M00M IS NOT 3)
	PUSHJ P,GETBYT
	CAIE T,40
	BUG(CHAR AFTER M00M3 IS NOT 0)
	PUSHJ P,GETBYT
	CAIE T,200
	BUG(CHAR AFTER M00M30 IS NOT EOB)
	SKIPN DOLPT
	JRST ENDOUT
FOR I IN("R","E","W","I","N","D",15,12)
<	MOVEI T,I
	PUSHJ P,PUTLPT	;INDICATE THAT WE'VE FOUND A STOP AND REWIND COMMAND
>
	JRST ENDOUT

XSTOP:	OUTSTR[ASCIZ/NO STOP CODE ON FRONT OF TAPE.
/]
	CAIN T,67	;SEE IF X COMMAND DIRECTLY FOLLOWS FEED CHARS
	JRST PLOPX
	BUG(FATAL--NEITHER X NOR M COMMAND FOLLOWS FEED CHARACTERS)
	JRST ENDOUT

XSTOP2:	CAIE T,20		;FEEDER AGAIN?
	JRST[	BUG(BAD CHARACTER STARTING NEW COMMAND)
		JRST ENDOUT]
	OUTSTR[ASCIZ/NO STOP AND REWIND BETWEEN LAST COMMAND AND MORE FEEDER CHARS
/]
	JRST ENDOUT

;PLOPX,PLOPA

PLOPX:	PUSHJ P,GETNC
	CAIE T,70		;Y?
	BUG(NO Y AFTER X COMMAND)
	MOVEM A,Y
	PUSHJ P,GETNC
	CAIE T,200
	BUG(NO EOB AFTER Y COMMAND)
	MOVNM A,X
	JRST PLOPB

PLOPA:	PUSHJ P,GETNUM	;GET 5 DIGITS OF Y&X , IN MILS
	MOVEM A,Y#
	PUSHJ P,GETNUM
	MOVEM A,X#
	PUSHJ P,GETBYT
	CAIE T,40	;FUNCTION MUST BE 0(NORMAL) OR 3(STOP)
	JRST ENDCHK
PLOPB:	SKIPN DOLPT
	JRST NOLPT1
	MOVEI T,"X"
	PUSHJ P,PUTLPT
	MOVE T,Y	;REALLY X
	PUSHJ P,PUTNUM
	MOVEI T,"Y"
	PUSHJ P,PUTLPT
	MOVN T,X	;REALLY Y
	PUSHJ P,PUTNUM
NOLPT1:	TRNE EXLN
	JRST DOPADC
	PUSHJ P,GETBYT
	PUSH P,T	;SAVE DRILL/NODRILL BYTE
	PUSHJ P,GETBYT
	CAIE T,200	;MAKE SURE EOB FOLLOWS
	BUG(NO EOB AT END OF COMMAND)
	POP P,T
	CAIN T,40	;"NO DRILL" COMMAND (0)?
	JRST [NODRL:	SKIPN DOLPT
			JRST NODRIL
			MOVEI T,"*"	;INDICATE NULL COMMAND
			PUSHJ P,PUTLPT
			JRST NODRIL]

	CAIE T,1	;DRILL SIZE BETTER BE 1
	BUG(DRILL SIZE OTHER THAN 1)
DOPADC:	SKIPE XGPGO
	PUSHJ P,CHKXY	;WE ONLY CHECK AGAINST PAD CENTER
	MOVSI A,-PADLEN
PADLOP:	HLRE T,PADTAB(A)
	ADD T,X
	IDIVI T,5
	MOVEM T,DX#
	MOVE TTT,T
	HRRE T,PADTAB(A)
	ADD T,Y
	IDIVI T,5
	MOVEM T,DY#
	MOVE B,VISTAB(A)
	JSA 16,PLOT
	JUMP DX
	JUMP DY
	JUMP B
	AOBJN A,PADLOP
NODRIL:	SKIPN DOLPT
	JRST PLOP
	MOVEI T,15
	PUSHJ P,PUTLPT
	MOVEI T,12
	PUSHJ P,PUTLPT
	JRST PLOP
;ENDCHK,ENDOUT,SWPTRY

ENDCHK:	SKIPN X
	SKIPE Y
	BUG(X OR Y NOT ZERO AT END OF RUN)
	CAIE T,23
	BUG(MACHINE FUNCTION CODE OTHER THAN 0 OR 3)
	PUSHJ P,GETBYT
	CAIE T,40
	BUG(NONZERO DRILL CODE AFTER MACHINE FUNCTION CODE 3)
	PUSHJ P,GETBYT
	CAIE T,200
	BUG(NO EOB AT END OF STOP BLOCK)

ENDOUT:	SKIPN XGPGO	;FLUSH PEN RETURN-X DOESN'T UNDERSTAND
	JSA 16,PLOT
	JUMP [ZERO: 0]
	JUMP [0]
	JUMP [NEG3: -3]
NOITS,<	MOVEI 10,PCHN	;PLOT CHANNEL, IN CASE WE'RE SWAPPING TO X
	PNAME 10,	;DEVICE NAME FOR PLOT CHANNEL BEFORE ITS CLOSED
	SETZ 10,	;SHOULD NEVER GET HERE
	RELEAS 0,
	RELEAS 1,
	RELEAS 2,
	RELEAS PCHN,
	SKIPN XGPGO
>;NOITS
	JRST [	OUTSTR[ASCIZ/ALL DONE!
/]
		EXIT]
NOITS,<	MOVE 0,MINX
	IDIVI 0,5
	HRR 3,0
	MOVE 0,MAXX
	IDIVI 0,5
	HRL 3,0
	MOVE 0,MINY
	IDIVI 0,5
	HRR 4,0
	MOVE 0,MAXY
	IDIVI 0,5
	HRL 4,0
	MOVE XGPNAM
	HLL 1,XGPEXT
	SKIPN 2,XGPPPN
	DSKPPN 2,
	SETO 5,
	GETLIN 5
	MOVEI 6,14
	HRRM 6,MODWRD
SWPTRY:	MOVEI 6,SWPBLK
	SWAP 6,
	JUMPN 6,SWPWIN
	OUTSTR[ASCIZ/SWAP UUO FAILED!
TYPE	TO
Y	TRY AGAIN
ALTMODE	RUN X AS THIS JOB
ANTHING ELSE TO JUST QUIT
?/]
	INCHWL 6
	CAIN 6,15
	INCHWL 6
	CAIE 6,"Y"
	CAIN 6,"y"
	JRST SWPTRY
	HLLZS MODWRD
	CAIN 6,175
	JRST SWPTRY
SWPWIN:	CALLI 12

SWPBLK:	'SYS   '
	'X     '
MODWRD:	'DMP   '
	1
	0
	0
>;NOITS
;GETNC,GETNUM,GETDIG,GETBYT,PUTNUM,PUTLPT,PADTAB

GETNC:	SETZ A,		;EXCELLON COORDINATE SCAN AND CONVERSION ROUTINE
	MOVEI TT,4	;DIGIT COUNT
	PUSHJ P,GETDIG	;GETDIG SKIPS IF IT GETS A LEGAL DIGIT CODE
	CAIA
	JRST GETNC2
	CAIN T,160	;NOT A DIGIT-SEE IF IT'S A PLUS SIGN
	JRST GETNC1
	CAIE T,100	; MINUS SIGN?
	POPJ P,		;NEITHER +,-, NOR DIGIT
	PUSHJ P,GETNC1
	MOVN A,A
	POPJ P,

GETNC1:	PUSHJ P,GETDIG	;LOOK FOR DIGIT FOLLOWING SIGN
	POPJ P,
GETNC2:	IMUL TTT,(TT)[	1	;SCALE. FIRST DIGIT IS TENS (INCHES), TRAILING
			=10	;ZEROS MAY BE OMITTED.
			=10*=10
			=10*=10*=10
			=10*=10*=10*=10]
	ADD A,TTT
	SOJGE TT,GETNC1
	PUSHJ P,GETDIG
	POPJ P,		;SIXTH CHAR NOT A DIGIT (THIS ALLOWS COORDINATES TO BE
			;5 OR 6 CHARACTERS LONG)
	JUMPN TTT,[BUG<SIXTH DIGIT (0.1 MILS) NON-ZERO>
			JRST .+1]
	PUSHJ P,GETDIG	;NEXT THING BETTER NOT BE A DIGIT
	POPJ P,
	BUG(TOO MANY COORDINATE DIGITS)
	POPJ P,

GETNUM:	SETZ A,		;MCC COORDINATE SCAN AND CONVERSION ROUTINE
	MOVEI TT,5
GETNM1:	PUSHJ P,GETDIG
	JRST[	BUG(NON-DIGIT IN COORDINATE STRING)
		JRST .+3]
	IMULI A,=10
	ADDI A,(TTT)
	SOJG TT,GETNM1
CPOPJ:	POPJ P,

GETDIG:	PUSHJ P,GETBYT
	MOVSI TTTT,-=10	;SET UP FOR LEGAL DIGIT COMPARISON LOOP
	CAME T,NTAB(TTTT)	;TRY TO MATCH AGAINST A NUMBER TABLE ENTRY
	AOBJN TTTT,.-1
	CAIN TTTT,=10	;SEE IF WE FELL OUT(LOSE) OR SKIPPED OUT(WIN)
	POPJ P,
	MOVE TTT,T
	ANDI TTT,17	;GOT A LEGAL NUMBER, MAKE IT BCD
CPOPJ1:	AOS (P)
	POPJ P,

GETBYT:	SOSG PTRHD+2
	IN
	CAIA
	JRST [	OUTSTR[ASCIZ/INPUT ERROR!
/]
		HALT .+1]
	AOS CHRCNT
	ILDB T,PTRHD+1
	ANDI T,377	;MASK OUT RANDOM GARBAGE THAT COMES AND GOES DEPENDING ON
			;WHAT'S BROKEN ON THE PDP6 IO BUS.
	POPJ P,

NTAB:	40	;0
	1	;1
	2	;2
	23	;3
	4	;4
	25	;5
	26	;6
	7	;7
	10	;8
	31	;9

LPTBUF:	BLOCK 3

PTRHD:	BLOCK 3

PUTNUM:	SKIPL T
	JRST PUTNM1
	MOVM TT,T
	MOVEI T,"-"
	PUSHJ P,PUTLPT
	MOVE T,TT
PUTNM1:	IDIVI T,=10
	HRLM TT,(P)
	JUMPE T,.+2
	PUSHJ P,PUTNM1
	HLRZ T,(P)
	ADDI T,60
PUTLPT:	SOSG LPTBUF+2
	OUT 1,
	CAIA
	JRST [	OUTSTR[ASCIZ/LPT OUTPUT ERROR!
/]
		HALT .+1]
	IDPB T,LPTBUF+1
	POPJ P,

PADTAB:	XWD =25,=25	;X MARKS THE SPOT
	XWD -=25,-=25
	XWD =25,-=25
	XWD -=25,=25
PADLEN__.-PADTAB

VISTAB:	3
	2
	3
	2

;GETYES,SETNAM,SETIT,RJUST,GETWRD,SDECIN,DECIN,READN,OUTSIX,TTYDEC
GETYES:	INCHWL T
	CAIE T,"Y"
	CAIN T,"y"
	AOS (P)
	CLRBFI
	POPJ P,

SETNAM:	MOVEM T,DEFEXT#
NOITS,<	DEVCHR TT,
	TLNN TT,4	;DIR DEV?
	POPJ P,		;NO, JUST RETURN
>;NOITS
SETIT:	MOVE TT,DEFEXT
	MOVEM TT,FILEXT
	PUSHJ P,OUTSIX
	OUTSTR[ASCIZ/ FILENAME?/]
	SETZM FILPPN
	SETZM FILDAT
	PUSHJ P,GETWRD
	SKIPN TTT
	 POPJ P,		;LET HIM OUT
ITS,<
	CAIE T,";"
	JRST NOLST1
	MOVEM TTT,FILPPN
	PUSHJ P,GETWRD
	JUMPE TTT,CPOPJ
NOLST1:	CAIE T,40
	CAIN T,12
	SKIPA
	JRST FILERR
	MOVEM TTT,FILNAM
	CAIN T,12
	JRST CPOPJ1	;DONE
	PUSHJ P,GETWRD	;GET SECOND FILE NAME
	CAIE T,12
	JRST FILERR
	JUMPE TTT,FILERR
	MOVEM TTT,FILEXT
	JRST CPOPJ1
>;ITS
NOITS,<
	MOVEM TTT,FILNAM
	CAIE T,"."
	JRST NOEXT
	PUSHJ P,GETWRD
	MOVEM TTT,FILEXT
NOEXT:	CAIE T,"["
	JRST NOPPN
	PUSHJ P,GETWRD
	PUSHJ P,RJUST
	JUMPE TTT,FILERR
	MOVEM TTT,FILPPN
	CAIE T,","
	JRST FILERR
	PUSHJ P,GETWRD
	PUSHJ P,RJUST
	JUMPE TTT,FILERR
	HLRM TTT,FILPPN
	CAIE T,"]"
	TDZA TTT,TTT
	PUSHJ P,GETWRD
	JUMPN TTT,FILERR
NOPPN:	CAIN T,12
	POPJ P,
>;NOITS
FILERR:	OUTSTR[ASCIZ/???
/]
	CLRBFI
	JRST SETNAM

RJUST:	TLNN TTT,7777
	LSH TTT,-14
	TLNN TTT,77
	LSH TTT,-6
	TRZ TTT,-1
	POPJ P,

GETWRD:	SETZ TTT,
	MOVE TT,[POINT 6,TTT]
GETSKP:	INCHWL T
	CAIN T,40
	JRST GETSKP
GOTCHR:	CAIN T,15
	JRST GETCHR
	CAIGE T,"0"
	POPJ P,
	CAIG T,"9"
	JRST ISCHR
	CAIL T,140
	SUBI T,40
	CAIL T,"A"
	CAILE T,"Z"
	POPJ P,
ISCHR:	SUBI T,40
	TLNE TT,770000
	IDPB T,TT
GETCHR:	INCHWL T
	JRST GOTCHR

SDECIN:	SETZ TTT,
	INCHWL T
	CAIE T,"-"
	JRST READN1
	PUSHJ P,DECIN
	MOVN TTT,TTT
	POPJ P,

DECIN:	SETZ TTT,
READN:	INCHWL T
READN1:	CAIN T,15
	JRST READN
	CAIL T,"0"
	CAILE T,"9"
	POPJ P,
	IMULI TTT,=10
	ADDI TTT,-60(T)
	JRST READN

OUTSIX:	JUMPE TT,CPOPJ
	SETZ T,
	LSHC T,6
	ADDI T,40
	OUTCHR T
	JRST OUTSIX

TTYDEC:	IDIVI T,=10
	HRLM TT,(P)
	JUMPE T,.+2
	PUSHJ P,TTYDEC
	HLRZ T,(P)
	ADDI T,60
	OUTCHR T
	POPJ P,

;BUGPRT,CHKXY
BUGPRT:	SETZ G,
	PUSH P,T	;SAVE T
	LSHC G,=30	;MOVE MSD OF CHAR CODE INTO G
	ADDI G,60	;MAKE INTO ASCII
	OUTSTR[ASCIZ/INPUT ERROR, CHAR CODE= /]
	OUTCHR G
	SETZ G,
	LSHC G,3
	ADDI G,60
	OUTCHR G
	SETZ G,
	LSHC G,3
	ADDI G,60
	OUTCHR G
	OUTSTR[ASCIZ/
NUMBER OF CHARACTERS FROM BEGINNING OF LEADER= /]
	MOVE T,CHRCNT
	PUSHJ P,TTYDEC
	OUTSTR[ASCIZ/
/]
	OUTSTR @40
	POP P,T
	HALT CPOPJ

CHKXY:	MOVE TTT,X
	MOVE T,Y
	CAMLE TTT,MAXX
	MOVEM TTT,MAXX
	CAMGE TTT,MINX
	MOVEM TTT,MINX
	CAMLE T,MAXY
	MOVEM T,MAXY
	CAMGE T,MINY
	MOVEM T,MINY
	POPJ P,

END STRT
