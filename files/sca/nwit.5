(declare (eval (read)))
(or (memq 'mode (status features)) (load '((sca) nmode)))

(global-open whit)

(scachar)

(global-read modes)

(defmode whit
	 (arg (fcns (*fixnum* n k)))
	 (sub (sort (*fixnum*)) (whit rwhit))
	 (sub (set (whit)) (whitl rwhitl))
	 (ret-types whitl rwhitl whit rwhit)
	 (ret-check (fcns (whitl (start) (expand whitl))
			  (*fixnum* (num-die))))
	 (tdeclare (*fixnum* n) (whitl l) (whit w) (rwhit rw) (rwhitl rwl))

 (defun start () whitl [ncons [nfrobs [k] [0]]])

 (defun num-die () *fixnum*
	(do ((n 0 [1+ n])
	     (l [start] [expand l]))
	    ([empty? l] n)))

 (defun expand (l) whitl
	(tdeclare (whitl ans))
	(mmap (w l) ((ans [empty] [symmdifference [expand w] ans])) ans))

 (defun expand (w) whitl
	(do ((rw [empty] [ttf [first w] rw])
	     (w w [rest w])
	     (rwl [empty]
		  (if (or [= [first w] [n]]
			  (and [not [empty? [rest w]]]
			       [= [first w] [first [rest w]]]))
		      rwl [ttf [nreconc rw [ttf [1+ [first w]] [rest w]]]
			       rwl])))
	    ([empty? w] [nreverse rwl]))))

(defmode-global *whit*
		(constant n *fixnum* 0)
		(constant k *fixnum* 0)
		(sub (whit ()) (*whitl*))
		(ret-type *whitl*))

(scaunchar)

(global-close)
