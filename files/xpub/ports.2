BEGOF("PORTS")


COMMENT

                *** Variations at Different Sites ***

TENEX PUB uses different naming conventions for generated and
intermediate files.  ITS at MIT-AI can not open a channel for
successive input and output, as ALFIZE is accustomed to do.

                                 ***

PORTIONs, SENDs, and RECEIVEs.

The PORTYPE records in the ITBL heap include the following fields:
PORCH is the status, keeping track of occurrences of PORTION, INSERT,
SEND, and RECEIVE... in particular, if PORCH>0, then it is the
channel number used for SENDs.  PORSEQ is the link to the next portion
in proper collating sequence.  PORSTR points to an associated record
in STBL with fields: PORFIL, the file name of the generated file, and
PORINT, the file name of the intermediate file.

The pseudo-portion FOOT is distinguished by a PORCH of -1.

;

INTEGER SVSHED ; comment, value of SHED before Alphabetizing began ;

PROCEDURES
PUBLIC SIMPLE PROCEDURE PORTS! ;$"#
BEGIN "PORTS!"
UPCAS3_(UPCASE(0)) LOR '3000000 ; COMMENT POINT 7, CHARTBL(3), 6 ;
UPCAS5_(UPCASE(0)) LOR '5000000 ; UPCAS6_(UPCASE(0)) LOR '6000000 ;
FOR J _ 0 THRU 127 DO DPB(J, UPCASE(J)) ;
FOR J _ "a" THRU "z" DO DPB(J-("a"-"A"), UPCASE(J)) ;  DPB(J_"!", UPCASE("")) ;
INTERS _ NPORTS _ THISPORT _ 0 ;  PORTLL _ SEQPORT _ PUTI(4, -5) ;  PORSEQ(SEQPORT) _ INTER _ -1 ;
PORSTR(SEQPORT) _ PUTS(NULL) ; PUTS(NULL) ;
END "PORTS!" ;
PRIVATE STRING SIMPLE PROCEDURE ALFIZE(STRING FILENAME, LEFTRIGHT) ;$"#
BEGIN "ALFIZE"
INTEGER SVIHIGH, SVSHIGH, CHAN, LEFT, RIGHT, N, I ;  STRING S, KEY ;
SVSHED _ SHED ; SVIHIGH _ IHIGH ; SVSHIGH _ SHIGH ;
IF (CHAN_GETCHAN)<0 THEN
	BEGIN
	WARN(NULL,"No Channel to Alphabetize "&FILENAME) ;
	RETURN(NULL) ;
	END ;
EOF _ 0 ;  OPEN(CHAN, "DSK", 0, 2, IFC ITSVER THENC 0 ELSEC 2 ENDC, 150, BRC, EOF) ;
LOOKUP(CHAN, IFC TENEX THENC IFILENAME & GENEXT & ENDC FILENAME, FLAG) ;
IF FLAG THEN
	BEGIN
	WARN(NULL,"No Generated file "&FILENAME) ;
	RETURN(NULL) ;
	END ;
SETBREAK(LOCAL!TABLE, LEFTRIGHT&LF, NULL, "IS") ; LEFT _ LOP(LEFTRIGHT) ;  RIGHT _ LOP(LEFTRIGHT) ;  N _ 0 ;
DO	BEGIN "SENDEE"
	S _ INPUT(CHAN, TO!TB!FF!SKIP) ; IF EOF THEN DONE ; S _ S & TB ;
	DO S _ S & INPUT(CHAN, LOCAL!TABLE) UNTIL BRC=LEFT OR BRC=LF OR EOF ;
	IF BRC = LEFT THEN
		BEGIN "KEY"
		KEY _ NULL ; S _ S & LEFT ;
		DO KEY _ KEY & INPUT(CHAN, LOCAL!TABLE) UNTIL BRC=RIGHT OR BRC=LF OR EOF ;
		PUSHS(1,KEY) ; comment, Sort Key in SSTK ;
		S _ S & KEY ;
		IF BRC = RIGHT THEN
			BEGIN
			S _ S & RIGHT ;
			DO S _ S & INPUT(CHAN, LOCAL!TABLE) UNTIL BRC = LF OR EOF ;
			END ;
		END "KEY" ;
	PUTS(S&LF) ; comment, complete entry in STBL ;
	N _ N + 1 ;  PUTI(1, N) ; comment, Sort Tags in ITBL ;
	END "SENDEE"
UNTIL EOF ;
QUICKERSORT(N, SVIHIGH) ;
CLOSIN(CHAN) ; FILENAME _ IFC TENEX THENC
	IFILENAME & ALFEXT & FILENAME ELSEC
	FILENAME[1 TO -1] & "Z" ENDC ;
IFC ITSVER THENC OPEN(CHAN, "DSK", 0, 0, 2, 150, BRC, EOF) ; ENDC
ENTER(CHAN, FILENAME, FLAG) ; comment, "---.PUZ" or "---.ALF---";
IF FLAG THEN
	BEGIN
	WARN(NULL,"ENTER failed for Alphabetized File "&FILENAME) ;
	RETURN(NULL) ;
	END ;
FOR I _ 1 THRU N DO OUT(CHAN, STBL[SVSHIGH + ITBL[SVIHIGH + I]]) ;
RELEASE(CHAN) ;  SHED _ SVSHED ; IHIGH _ SVIHIGH ; SHIGH _ SVSHIGH ; RETURN(FILENAME) ;
END "ALFIZE" ;
PUBLIC SIMPLE PROCEDURE FINPORTION ;$"#
BEGIN
DBREAK ;
IF OLDPGIDA THEN NEXTPAGE ;
END "FINPORTION" ;
PUBLIC SIMPLE PROCEDURE DINSERT ;$"#
BEGIN
INTEGER CHAN, PIX, ROTTEN ;
IF ON THEN BEGIN  TES 4/11/74;
FINPORTION ;
IF INTER GEQ 0 THEN
    BEGIN FOR DUMMY_1 THRU 5 DO WORDOUT(INTER,-20) ; RELEASE(INTER) ; RELEASE(SINTER) ; SINTER_INTER_-1 END ;
END ;
DO BEGIN "COLLATE"
   DPASS ; IF  NOT THISISID THEN BEGIN WARN("=","Unnamed INSERT Portion!") ; RETURN END ;
   IF ON THEN
      BEGIN ROTTEN _ FALSE ;
      IF THISTYPE NEQ PORTYPE THEN
		BEGIN
		BIND(SYMB_DECLARE(SYMB, PORTYPE), PIX _ PUTI(4, -5));
		PORSTR(PIX) _ PUTS(NULL) ; PUTS(NULL) ; TES 3/21/74;
		END
      ELSE IF (CHAN _ PORCH(PIX _ IX)) = -1 THEN BEGIN WARN("=","Can't INSERT FOOT!"); ROTTEN_TRUE END
      ELSE IF  NOT (0 LEQ CHAN LEQ 15) THEN BEGIN WARN("=","Can't INSERT passed PORTION "&THISWD) ; ROTTEN_TRUE END ;
      IF  NOT ROTTEN THEN BEGIN PORSEQ(SEQPORT) _ PIX ; PORSEQ(SEQPORT _ PIX) _ -1 END ;
      PASS ;
      END ;
   END "COLLATE" UNTIL  NOT ITSCH(<,>) ;
END "DINSERT" ;
PUBLIC SIMPLE PROCEDURE DPORTION ;$"#
BEGIN
INTEGER CHAN, PSIX, PIX ; STRING IFIL ; LABEL WASFWD ;
DPASS ;  IF  NOT THISISID THEN BEGIN WARN("=","Unnamed PORTION!") ; RETURN END ;
IF  NOT ON THEN BEGIN PASS ; RETURN END ;
FINPORTION ;
IF THISTYPE NEQ PORTYPE THEN
	BEGIN
	BIND(SYMB_DECLARE(SYMB, PORTYPE), PIX _ PUTI(4, -2)) ;
	PORSTR(PIX) _ PUTS(NULL) ; PUTS(NULL);
	PORSEQ(PIX) _ 0 ;
	END
ELSE IF 0 LEQ (CHAN _ PORCH(PIX _ IX)) THEN BEGIN RELEASE(CHAN) ; PORCH(PIX) _ -3 ; GO TO WASFWD END
ELSE IF CHAN = -1 THEN BEGIN WARN("=","Can't declare PORTION FOOT!") ; PASS ; RETURN END
ELSE IF CHAN NEQ -5 THEN WARN("=","PORTION "&THISWD&" already declared!")
ELSE IF PORSEQ(THISPORT) NEQ PIX THEN
BEGIN PORCH(PIX) _ -2 ; COMMENT ADDED FEB 6, 1973 ;
WASFWD:	BEGIN
	IF INTER GEQ 0 THEN
		BEGIN FOR DUMMY_1 THRU 5 DO WORDOUT(INTER,-20) ; RELEASE(INTER) ; RELEASE(SINTER) END ;
	INTER _ SINTER _ -1 ;
	END ;
END ;
IF INTER < 0 THEN
	BEGIN
	PSIX _ PORSTR(PIX) ;
	IFCR TENEX THENC
	IFIL _ CVS(INTERS_INTERS+1) ; PORINT(PSIX) _ IFIL ;
	INTER _ WRITEON(TRUE,IFILENAME&OCTEXT&IFIL) ;
	SINTER_ WRITEON(FALSE,IFILENAME&TXTEXT&IFIL) ;
	ELSEC
	IFIL _ "PUI"&CVS(INTERS_INTERS+1) ;
	PORINT(PSIX)_IFIL ;
	INTER_WRITEON(TRUE,IFIL&PUIEXT) ; SINTER_WRITEON(FALSE,IFIL&"S"&PUIEXT) ;
	ENDC
	END ;
IF PORSEQ(PIX) = 0 THEN
	BEGIN
	PORSEQ(SEQPORT) _ PIX ;
	SEQPORT _ PIX ;
	END ;
THISPORT _ PIX ;  NPORTS _ NPORTS + 1 ;
PASS ;
END "DPORTION" ;
PUBLIC SIMPLE PROCEDURE DRECEIVE ;$"#
BEGIN
STRING A ;
IF THATISCON AND 1 LEQ  LENGTH(THATWD)-1  LEQ 2 THEN BEGIN PASS ; A _ THISWD[2 TO ] END
ELSE A _ NULL ;
IF ON THEN RECEIVE(THISPORT, A) ; PASS ;
END "DRECEIVE" ;
PUBLIC SIMPLE PROCEDURE DSEND ;$"#
BEGIN
INTEGER PIX; STRING FI ;
INTEGER SIMPLE PROCEDURE OPORT ;
BEGIN INTEGER CH ; CH_WRITEON(FALSE,
	IFCR TENEX THENC IFILENAME&GENEXT&(FI_THISWD) ELSEC
	(FI_(CVS(NPORTS_NPORTS+1)&THISWD)[1 TO 5])&PUGEXT ENDC) ;
	RETURN(CH) ; END "OPORT" ;
PASS ; IF  NOT THISISID THEN BEGIN WARN("=","SEND Where?") ; RETURN END ;
IF  NOT ON THEN BEGIN PASS ; DEFN(FALSE, FALSE,0,0) ; RETURN END ;
IF THISTYPE NEQ PORTYPE THEN
	BEGIN
	BIND(SYMB_DECLARE(SYMB, PORTYPE), PIX _ PUTI(4, OPORT) ) ;
	PORSTR(PIX) _ PUTS(NULL) ; PUTS(NULL) ;
	PORSEQ(PIX) _ 0 ; PORFIL(PORSTR(PIX)) _ FI ;
	END
ELSE IF PORCH(PIX_IX)=-5 THEN
	BEGIN PORCH(PIX)_OPORT ; PORFIL(PORSTR(PIX))_FI END ;
PASS ;
SEND(PIX, DEFN(TRUE,PORCH(PIX) NEQ -1,0,0)) ;
END "DSEND" ;
PRIVATE INTEGER SIMPLE PROCEDURE LOG2(INTEGER BINARY) ;$"#
BEGIN "LOG2"
INTEGER I ; I _ 0 ;
WHILE BINARY > 1 DO BEGIN I _ I + 1 ; BINARY _ BINARY DIV 2 END ;
RETURN(I) ;
END "LOG2" ;
PUBLIC SIMPLE PROCEDURE NOPORTION ;$"#
	BEGIN "NOPORTION"
	STRING IFIL ; INTEGER PSIX, PIX ;
	WARN("=","No PORTION Declaration Found") ;
	IFIL _ IFC NOT TENEX THENC "PUI"& ENDC CVS(INTERS_INTERS+1) ;
	THISPORT _ PIX _ PUTI(4, -2) ;
	PORSTR(PIX) _ PSIX _ PUTS(NULL) ; PUTS(NULL) ; TES 3/21/74;
	PORINT(PSIX) _ IFIL ; PORSEQ(SEQPORT) _ PIX ; PORSEQ(SEQPORT_PIX) _ 0 ;
	NPORTS _ NPORTS + 1 ;
	IFC TENEX THENC
	INTER _ WRITEON(TRUE, IFILENAME & OCTEXT & IFIL) ;
	SINTER_ WRITEON(FALSE,IFILENAME & TXTEXT & IFIL) ;
	ELSEC
	INTER _ WRITEON(TRUE, IFIL & PUIEXT) ; SINTER _ WRITEON(FALSE, IFIL & "S"&PUIEXT) ;
	ENDC
	END "NOPORTION" ;
PRIVATE PROCEDURE QUICKERSORT(INTEGER J, BASE) ;$"#
BEGIN "QUICKERSORT" comment, Ascending SORT for ALFIZE ;
INTEGER I, K, Q, M, P, T, X ; INTEGER ARRAY UT,LT[1:LOG2(J+2)+1] ;
COMMENT Algorithm 271 (R. S. Scowen) CACM 8,11 (Nov. 1965) pp 669-670 ;
DEFINE A(L) = [ITBL[BASE+L]] ;
LABEL N, L, MM, PP ;
I _ M _ 1 ;
N: IF J-I > 1 THEN
	BEGIN
	P _ (J+I) DIV 2 ; T _ A(P) ; A(P) _ A(I) ; Q _ J ;
	FOR K _ I + 1 THRU Q DO
		BEGIN
		IF STRLSS(T, A(K)) THEN
		BEGIN
		FOR Q _ Q DOWN K DO
			BEGIN
			IF STRLSS(A(Q), T) THEN
				BEGIN
				A(K) SWAP A(Q) ; Q _ Q - 1 ;
				GO TO L ;
				END ;
			END ;
		Q _ K - 1 ;
		GO TO MM ;
		END ;
	L:
	END ;
MM:
A(I) _ A(Q) ; A(Q) _ T ;
IF Q+Q > I+J THEN BEGIN LT[M]_I; UT[M]_Q-1; I_Q+1 END
ELSE BEGIN LT[M]_Q+1; UT[M]_J; J_Q-1 END ;
M _ M + 1 ;
GO TO N ;
END
ELSE IF I GEQ J THEN GO TO PP
ELSE	BEGIN
	IF STRLSS(A(J),A(I)) THEN A(I) SWAP A(J) ;
PP:	M _ M - 1 ;
	IF M > 0 THEN BEGIN I_LT[M]; J_UT[M]; GO TO N END ;
	END ;
END "QUICKERSORT" ;
PUBLIC SIMPLE PROCEDURE RECEIVE(INTEGER PORTIX; STRING ALPHABETIZE) ;$"#
BEGIN "RECEIVE"
INTEGER CH ; STRING FIL ; LABEL TWICE ;
CASE (CH _ PORCH(PORTIX)) + 6 MIN 6 OF
BEGIN
COMMENT -6 ; GO TO TWICE ;
COMMENT -5 Only INSERTed ; IMPOSSIBLE("RECEIVE") ;
COMMENT -4 ; TWICE:	WARN(NULL,"Already RECEIVEd generated file for this PORTION") ;
COMMENT -3 ;	BEGIN "GENFILE"
	FIL _ PORFIL(PORSTR(PORTIX)) IFC NOT TENEX THENC & PUGEXT ENDC ;
	IF FULSTR(ALPHABETIZE) THEN BEGIN FIL_ALFIZE(FIL,ALPHABETIZE) ; PORCH(PORTIX)_-6 END
	ELSE BEGIN PORCH(PORTIX) _ -4 ; IFC TENEX THENC
		FIL_IFILENAME & GENEXT & FIL ENDC END ;
	AGENFILE _ TRUE ; SWICHF(FIL) ; PAGESCAN(LAST) _ -PAGESCAN(LAST) ;
	END "GENFILE" ;
COMMENT -2 Never SENT ; BEGIN END ;
COMMENT -1 ; BEGIN CH_FOOTSTR(AREAIXM); SWICH(SSTK[CH],-1,0); SSTK[CH]_NULL END ;
COMMENT 0-15 ; IMPOSSIBLE("RECEIVE") ;
END ;
END "RECEIVE" ;
PUBLIC SIMPLE PROCEDURE SEND(INTEGER PORTIX; STRING MESSG) ;$"#
BEGIN "SEND"
INTEGER CH ;
IF 0 LEQ  (CH _ PORCH(PORTIX)) THEN OUT(CH,MESSG)
ELSE IF CH=-1 THEN
	BEGIN
	IF NOPGPH THEN ASSUREAREA ; TES 8/19/74 FIX BUG ;
	CH_FOOTSTR(IF AREAIXM THEN AREAIXM ELSE IXTEXT); TES 8/19/74 ;
	SSTK[CH]_SSTK[CH]&MESSG ;
	END
ELSE WARN(NULL,"Can't send to a passed PORTION:"&MESSG) ;
END "SEND" ;
PUBLIC BOOLEAN SIMPLE PROCEDURE STRLSS(INTEGER XI, YI) ;$"#
BEGIN "STRLSS"
INTEGER XL, YL, MINL, L ;  STRING X, Y ;
X _ SSTK[SVSHED + XI] ;  Y _ SSTK[SVSHED + YI] ;
XL _ LENGTH(X) ;  YL _ LENGTH(Y) ;  MINL _ XL MIN YL ;
START!CODE "STRCOM"
LABEL NEXC, SAME, DIFF ;
MOVE 2, X ; MOVE 3, Y ; SKIPN 4, MINL ; JRST SAME ;
NEXC: ILDB 5, 2 ; LDB 5, UPCAS5 ; ILDB 6, 3 ; LDB 6, UPCAS6 ;
CAME 5, 6 ; JRST DIFF ; SOJG 4, NEXC ;
SAME: COMMENT SAME FOR FIRST MINL CHARACTERS ;
MOVE 5, XL ; MOVE 6, YL ; CAME 5, 6 ; JRST DIFF ;
COMMENT AND SAME LENGTH: ; MOVE 5, XI ; MOVE 6, YI ;
DIFF: CAML 5, 6 ; TDZA 1,1 ; MOVEI 1, -1 ; MOVEM 1, L ;
END ;
RETURN(L) ;
END "STRLSS" ;
FINISHED

ENDOF("PORTS")
