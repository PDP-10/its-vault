



;;;				FORMATTING GRIND

(PROG (EXPR ^W EOF) 
      (ERRSET (REMGRIND) NIL)
      (SETQ EOF (LIST NIL))
      (MAPC 'PRINC
	    (LIST 'LOADING
		  '/ 
		  (CAR (STATUS UREAD))
		  '/ 
		  (CADR (STATUS UREAD))))
      (DEFUN OLDSTATUS FEXPR (X) 				       ;RETURNS CALL TO SSTATUS THAT WILL RESTORE MACRO
	     (APPEND (LIST 'SSTATUS 'MACRO (CAR X))		       ;PROPERTY OF X
		     (COND ((SETQ X (APPLY 'STATUS
					   (LIST 'MACRO
						 (CAR X))))
			    (NCONC (LIST (LIST 'QUOTE (CAR X)))
				   (CDR X)))
			   ('(NIL)))))
      (SETQ OLDDOLLARSTATUS
	    (APPLY 'OLDSTATUS (LIST (ASCII 36.))))
      (SETQ OLDSEMISTATUS
	    (APPLY 'OLDSTATUS (LIST (ASCII 59.))))
      (APPLY 'SSTATUS (LIST 'MACRO (ASCII 36.) NIL))
 READLOOP
      (COND ((EQ EOF (SETQ EXPR (READ EOF))) (EVAL OLDDOLLARSTATUS))
	    (T (EVAL EXPR) (GO READLOOP)))

  (COND ((ERRSET (UREAD GRIND (INIT)) NIL) (IOC Q)) ((RETURN '*)))

INIT      (COND ((EQ EOF (SETQ EXPR (READ EOF))) (RETURN '*))
	    (T (EVAL EXPR) (GO INIT))))

(DEFUN GBREAK FEXPR (X) 
       (AND GBREAK						       ;BREAK TRANSPARENT TO CHRCT
	    (PROG (CHRCT* ^R) 
		  (SETQ CHRCT* CHRCT)
		  (APPLY 'BREAK
			 (COND ((NULL X) '(GRIND T))
			       ((LIST X T))))
		  (TERPRI)
	     A	  (COND ((EQ CHRCT* CHRCT))
			((PRINC '/ ) (GO A)))
		  (RETURN T))))

(SETQ ERRLIST (CONS OLDDOLLARSTATUS (CONS OLDSEMISTATUS ERRLIST)))


;;GLOBAL VARIABLES

(PROG NIL (SETQ *MACRO '/;)					       ;INITIALIZE GLOBAL VARIABLES.  *MACRO MACRO CHAR
	  (SETQ /; (MAKNAM '(/;)))
	  (SETQ /;/; (MAKNAM '(/; /;)))
	  (SETQ GRINDLINCT 8.)					       ;GRINDLINCT IS NUMBER OF LINES LEFT ON PAGE
	  (SETQ *COMNT NIL)					       ;*COMNT HOLDS ; COMMENTS TO BE PRINTED.
	  (SETQ /;/;? NIL)					       ;FLAG FOR WHETHER PREVIOUS SPRINTED EXPRESSION
								       ;WAS A /;/;.  USED FOR INSERTING EXTRA CR'S.
	  (SETQ GRINDMACRO NIL)					       ;GRINDFNS AND GRINDMACROS CONTAINS LISTS OF
	  (SETQ GRINDFN NIL)					       ;ATOMS GROUND BY SPECIAL GRIND FUNCTIONS.  USED
	  (SETQ GBREAK T))					       ;BY REMGRIND.  GBREAK = T CAUSES GBREAKS TO
								       ;BREAK.



;;*PAGE

;;GLOBAL FUNCTIONS

(DEFUN REMGRIND FEXPR (L) 
       (PROG NIL 
	     (MAPC '(LAMBDA (X) (REMPROP X 'GRINDFN))
		   GRINDFN)
	     (MAPC '(LAMBDA (X) (REMPROP X 'GRINDMACRO))
		   GRINDMACRO)
	     (MAPC '(LAMBDA (X) (REMPROP X 'FEXPR))
		   '(FORMAT GRINDEF OLDSTATUS GRIND REMGRIND GBREAK))
	     (MAPC '(LAMBDA (X) (REMPROP X 'EXPR))
		   '(TURPRI GRINDARGS DONE? GRINDFN? GRINDMACRO?
		     LISTIFY-COMMENT NEXTBLANK INDENT-TO REM/;
		     REM/;/; REMSEMI PPRIN PRINALLCMNT PRIN50COM
		     SPRINT MAXPAN PANMAX))
	     (REMOB *MACRO *GAP *PROGRAMSPACE *PAGEWIDTH *COMSPACE
		    GRINDLINCT *COMNT /;/;? *PROGRAMSPACE *FILL
		    GBREAK)
	     (ERRSET (*REARRAY '/	) NIL)
	     (ERRSET (*REARRAY '/ ) NIL)
	     (SSTATUS GCTWA)))

(DEFUN GRINDEF FEXPR (L) 					       ;(GRINDEF <ATOMS>) GRINDS THE EXPR, FEXPR, MACRO
 ((LAMBDA (H) 							       ;AND VALUE PROPS OF THE ATOMS.  (GRINDEF
   (MAPC 
    '(LAMBDA (C) 						       ;(INDICATORS) <ATOMS>) CAUSES GRINDING OF
      (COND							       ;PROPERTIES OF ATOMS UNDER INDICATORS IN
       ((ATOM C)						       ;ADDITION TO STANDARD GRINDEF.  GRINDEF MODIFIED
	(MAPC 
	 '(LAMBDA (F) 						       ;SO THAT IT RETURNS T RATHER THAN A NON-PRINTING
	   (COND ((SETQ L (GET C F))				       ;LISP ERROR BECAUSE THVAL CATCHES ERROR.
		  (TERPRI)
		  (TERPRI)
		  (COND ((EQ F 'THEOREM)
			 (SPRINT (CONS (CAR L) (CONS C (CDR L)))
				 LINEL
				 0.))
			((MEMQ F '(EXPR FEXPR MACRO))
			 (SPRINT (CONS 'DEFUN
				       (CONS C
					     (COND ((EQ F 'EXPR)
						    (CDR L))
						   ((CONS F
							  (CDR L))))))
				 LINEL
				 0.))
			((SPRINT (LIST 'DEFPROP C L F)
				 LINEL
				 0.))))))
	 H))
       ((SETQ H (APPEND C H)))))
    L))
  '(THEOREM EXPR FEXPR VALUE MACRO))
 (TERPRI)
 (/  0.))

(DEFUN GRIND0 FEXPR (A) 					       ;GRINDS A AND RETURNS '(UFILE A)
       (PROG (LINEL *NOPOINT BASE IBASE L ^Q ^R ^W ^C EOF N /;/;?
	      *COMNT) 
	     (SETQ LINEL *PROGRAMSPACE)
	     (SETQ N *TOPWIDTH)
	     (SETQ BASE 10. IBASE 8.)
	     (SETQ EOF (LIST NIL))
	     (APPLY 'UREAD A)
	     (UWRITE)
	     (SSTATUS MACRO /; 'LISTIFY-COMMENT)
	     (SSTATUS MACRO $ NIL)
	     (SETQ ^Q (SETQ ^R (SETQ ^W (SETQ GRINDLINCT 59.))))
	A    (COND ((EQ EOF (SETQ L (READ EOF)))
		    (PRINALLCMNT)
		    (TURPRI)
		    (IOC T)
		    (EVAL OLDSEMISTATUS)
		    (EVAL OLDDOLLARSTATUS)
		    (RETURN (CONS 'UFILE A)))
		   ((EQ (CAR L) /;) (REM/;) (GO A)))		       ;HANDLE /; COMMENTS DIRECTLY.
	     (PRINALLCMNT)
	     (COND ((EQ (CAR L) /;/;) (NEWLINEL *TOPWIDTH)
				      (COND (/;/;?) ((TURPRI)))
				      (REM/;/;)
				      (NEWLINEL *PROGRAMSPACE)
				      (GO A))
		   (*NOFF (TURPRI) (TURPRI))
		   ((LESSP (TURPRI)
			   (CAR (ERRSET (REMAINDER (PANMAX L CHRCT 0.)
						   60.))))
		    (SETQ GRINDLINCT 59.)
		    (TYO 12.))
		   ((TURPRI)))
	     (COND (SPRINT1 (SPRINT1 L LINEL 0.))
		   ((SPRINT L LINEL 0.)))
	     (GO A)))

(DEFUN GRIND FEXPR (A) (EVAL (APPLY 'GRIND0 A))			       ;GRINDS AND FILES A AS A
		       (TERPRI)
		       (TERPRI)
		       (COND ((NULL A) 'FILED)
			     ((NULL (CDDR A)) (NCONC A (CRUNIT)))
			     (A)))

(SETQ SPRINT1 NIL)						       ;TOPLEVEL USER FLAG

(DEFUN FORMAT FEXPR (X) 					       ;(CAR X) IS AN ATOM OR LIST OF ATOMS TO BE
 (PROG (A B) 							       ;SPECIALLY GROUND BY (CADR X) OR (CAR X) IS
       (SETQ A (CAR X))						       ;FORMAT FUNCTION TO BE EXECUTED, I.E. (CDR X) IS
       (SETQ B (CADR X))					       ;NIL.
       (COND ((NULL (CDR X))
	      (COND ((ATOM A) (APPLY A NIL))
		    ((GETL (CAR A) '(EXPR FEXPR MACRO))
		     (EVAL A))
		    ((SET (CAR A) (CADR A))))
	      (RETURN A)))
       (COND ((ATOM A)
	      (REMPROP A 'GRINDFN)
	      (REMPROP A 'GRINDMACRO)
	      (COND ((NULL B) (RETURN 'UNFORMATTED))
		    ((ATOM B) (PUTPROP A B 'GRINDFN)
			      (SETQ GRINDFN (CONS A GRINDFN)))
		    ((EQ (CAR B) 'GRINDMACRO)
		     (PUTPROP A
			      (COND ((ATOM (CADR B)) (CADR B))
				    ((CONS 'LAMBDA
					   (CONS NIL (CDR B)))))
			      'GRINDMACRO)
		     (SETQ GRINDMACRO (CONS A GRINDMACRO)))
		    ((EQ (CAR B) 'READMACRO)
		     (PUTPROP A
			      (APPEND '(LAMBDA NIL)
				      (LIST (LIST 'PRINC
						  (LIST 'QUOTE
							(CADR B)))
					    '(SPRINT (CADR L)
						     CHRCT
						     M)))
			      'GRINDMACRO)
		     (SETQ GRINDMACRO (CONS A GRINDMACRO)))
		    (T (PUTPROP A
				(CONS 'LAMBDA
				      (CONS NIL (CDR X)))
				'GRINDFN)
		       (SETQ GRINDFN (CONS A GRINDFN))))
	      (RETURN A)))
       (RETURN (MAPC '(LAMBDA (X) (APPLY 'FORMAT (LIST X B)))
		     A))))



;;*PAGE

;;PREDEFINED FORMATS

(DEFUN LAMBDA-FORM NIL (FORM 'LINE)				       ;FORMAT FOR LAMBDA'S AND PROG'S
		       (AND (LESSP CHRCT (FLATSIZE (TESTL)))
			    (SETQ *FORM 'FORM2))
		       (FORM 'BLOCK))

(DEFUN DEF-FORM NIL 
       (PROG NIL (FORM 'LINE)
		 (FORM 'LINE)
	    GO	 (COND ((MEMQ (TESTL)
			      '(EXPR FEXPR MACRO THNOASSERT))
			(FORM 'LINE)
			(GO GO))
		       (T (AND (LESSP CHRCT (FLATSIZE (TESTL)))
			       (SETQ *FORM 'FORM2))
			  (RETURN (FORM 'BLOCK))))))

(DEFUN PROG-FORM NIL (SETQ PROG? T)				       ;PROGS AND THPROGS ARE GROUND AS DEFINITIONS
		     (LAMBDA-FORM))				       ;WITH THE PROG FLAG SET TO T.

(DEFUN COMMENT-FORM NIL (GSEGTEXT 'LIST))			       ;GRINDS S -EXPRESSION WITH ARGS OUTPUTED AS
								       ;LIST.

(DEFUN BLOCK-FORM NIL (PPRIN L 'BLOCK))

(DEFUN MEM-FORM NIL 						       ;QUOTED SECOND ARG GROUND AS BLOCK
       (PROG (P) (FORM 'LINE)
		 (REMSEMI)
		 (ERRSET (AND (SETQ P (PANMAX (CAR L) CHRCT 0.))
			      (COND ((LESSP (PANMAX (CAR L) N 0.) P))
				    ((SETQ N CHRCT)))))
		 (SPRINT (CAR L) N 0.)
		 (POPL)
	    GO	 (INDENT-TO N)
		 (SETQ M (ADD1 M))
		 (COND ((EQ (CAAR L) 'QUOTE)
			(PRINC '/')
			(PPRIN (CADAR L) 'BLOCK))
		       ((SPRINT (CAR L) N M)))
		 (POPL)
		 (COND (L (GO GO)) ((RETURN NIL)))))

(DEFUN THCONSE-FORM NIL (PROG NIL (SETQ PROG? T)
				  (SETQ L (DEF-FORM))
				  (SETQ N ARG)
				  (INDENT-TO N)
				  (PPRIN (CAR L) 'BLOCK)
				  (TURPRI)
				  (TURPRI)
				  (INDENT-TO N)
				  (RETURN (SETQ L (CDR L)))))



;;*PAGE

;;FORMAT CONTROL

(DEFUN TJ6 (X) 							       ;TJ6 COMMANDS ARE OF THE FORM ;;.---
       (AND (EQ (CAR X) '*)
	    (TURPRI)
	    (COND ((ERRSET ((READLIST X)) NIL))
		  ((PRINC 'TJ6/ -/ GRIND/ ERROR) (TURPRI)))))

(DEFUN *PAGEWIDTH (W X Y Z) (COND ((EQ W (PLUS X Y Z))
				   (SETQ *PAGEWIDTH W)
				   (SETQ *PROGRAMSPACE X)
				   (SETQ *GAP Y)
				   (SETQ *COMSPACE Z))
				  ((PRINC 'ERROR/ -/ *PAGEWIDTH))))

(DEFUN *PROGRAMSPACE (X) 
       (SETQ *PROGRAMSPACE X)
       (SETQ *COMSPACE (DIFFERENCE *PAGEWIDTH *GAP *PROGRAMSPACE)))

(DEFUN *COMSPACE (X) 
       (SETQ *COMSPACE X)
       (SETQ *PROGRAMSPACE (DIFFERENCE *PAGEWIDTH *GAP *COMPSACE)))

(DEFUN *GAP (X) 
       (SETQ *GAP X)
       (SETQ *PROGRAMSPACE (DIFFERENCE *PAGEWIDTH *COMSPACE *GAP)))

(DEFUN *PAGE NIL (TYO 12.) (SETQ GRINDLINCT 59.))

(DEFUN *FILL NIL (SETQ *FILL T))

(DEFUN *NOFILL NIL (SETQ *FILL NIL))

(DEFUN *NOMERGE NIL (SETQ *NOMERGE T))

(DEFUN *MERGE NIL (SETQ *NOMERGE NIL))

(DEFUN *NOFF NIL (SETQ *NOFF T))

(DEFUN *FF NIL (SETQ *NOFF NIL))



;;*PAGE

;;DEFAULT FORMATS

(FORMAT QUOTE (READMACRO /'))

(FORMAT THV (READMACRO $?))

(FORMAT (LAMBDA THGOAL THASSERT THERASE) LAMBDA-FORM)

(FORMAT DEFUN DEF-FORM)

(FORMAT FORMAT (EVAL L) (FORM 'LINE) (FORM 'BLOCK))

(FORMAT (PROG THPROG) PROG-FORM)

(FORMAT (COMMENT REMOB *FEXPR *EXPR *LEXPR SPECIAL UNSPECIAL) 
	COMMENT-FORM)

(FORMAT (MEMBER MEMQ MAP MAPLIST MAPCAR MAPCON MAPCAN MAPC ASSQ
	 ASSOC SASSQ SASSOC) MEM-FORM)

(FORMAT (THANTE THCONSE THERASING) THCONSE-FORM)

(FORMAT (*PAGEWIDTH 120. 70. 1. 49.))

(FORMAT (*TOPWIDTH 120.))

(FORMAT *MERGE)

(FORMAT *FILL)

(FORMAT *FF)



;;*PAGE

;;USER DEFINED FORMATS

(DEFUN REMSEMI NIL (COND ((REM/;) (REM/;/;) T) ((REM/;/;))))

(DEFUN POPL NIL (SETQ L (CDR L)) (REMSEMI) L)

(DEFUN SEMI? (K) (OR (EQ (CAR K) /;) (EQ (CAR K) /;/;)))

(DEFUN TESTL ARGS 
       (SETQ ARGS (COND ((ZEROP ARGS) 0.) ((ARG 1.))))
       (PROG (K) (SETQ K L)
	    A	 (COND ((NULL K) (RETURN NIL))
		       ((SEMI? (CAR K)) (SETQ K (CDR K)) (GO A))
		       ((ZEROP ARGS) (RETURN (CAR K)))
		       ((SETQ ARGS (SUB1 ARGS)) (SETQ K (CDR K))
						(GO A)))))

(DEFUN INDENT (M) (PRINC (/	 (LSH M -3.)))
		  (PRINC (/  (REMAINDER M 8.))))

(DEFUN INDENT-TO (N) 						       ;CHRCT SET TO N
       (AND (GREATERP N CHRCT) (TURPRI))
       (AND (LESSP N CHRCT)
	    (PRINC (/	 (*DIF (LSH (*DIF LINEL N) -3.)
			       (LSH (*DIF LINEL CHRCT) -3.))))
	    (PRINC (/  (*DIF CHRCT N)))))

(DEFUN PPRIN (L N*) 						       ;L IS GROUND AS LINE IF N = 'LINE, AS A BLOCK IF
       (COND ((ATOM L) (PRIN1 L))				       ;N = 'BLOCK OR AS A FUNCTION FOLLOWED BY A LIST
	     ((EQ N* 'CODE) (SPRINT L CHRCT M))
	     ((AND (REMSEMI) (NULL L)))				       ;OF ARGUMENTS IF L = 'LIST, OR NORMALLY IF N* =
	     ((GRINDMACRO?))					       ;'CODE.
	     ((PROG NIL (PRINC '/() (GSEGTEXT N*) (DONE?)))))

(DEFUN TURPRI NIL 						       ;CR WITH LINE OF OUTSTANDING SINGLE SEMI COMMENT
       (AND *COMNT (PRIN50COM))					       ;PRINTED, IF ANY.  GRINDLINCT = LINES REMAINING
       (TERPRI)							       ;ON PAGE.
       (SETQ GRINDLINCT (REMAINDER (PLUS 59. GRINDLINCT) 60.)))

(DEFUN FORM (X) (PROG NIL 					       ;PPRIN THE CAR OF L, THEN POPS L.
		     A	  (AND (REMSEMI) (GO A))
			  (PPRIN (CAR L) X)
			  (AND (SETQ L (CDR L)) (PRINC '/ ))
			  (RETURN L)))



;;*PAGE

;;LOCAL FUNCTIONS

(DEFUN SPRINT (L N M) 						       ;EXPRESSION L TO BE SPRINTED IN SPACE N WITH M
								       ;UNBALANCED ")" HANGING.

 ;;;STANDARD GRIND FORMATS
 ;;;FORM1 = (S1    FORM2 = (S1 S2    FORM3 = (S1 S2 (SPRINT LAST))
 ;;;         S2                S3)
 ;;;         S3)
 (PROG (*FORM ARG FN ARGS P PROG? GRINDFN FORM3?) 		       ;P IS NUMBER LINES TO SPRINT AS FORM2
  (AND (REMSEMI) (NULL L) (RETURN NIL))
  (SETQ FN (CAR L) /;/;? NIL)
  (INDENT-TO N)
  (COND ((OR (ATOM L) (LESSP (PLUS M -1. (FLATSIZE L)) CHRCT))	       ;DONE IF L CAN FIT ON LINE OR IF L AN ATOM
	 (RETURN (PPRIN L 'LINE)))
	((GRINDMACRO?) (RETURN NIL)))
  (PRINC '/()
  (SETQ N CHRCT)
  (SETQ ARG (DIFFERENCE N (FLATSIZE FN) 1.))
  (SETQ ARGS (COND ((SETQ GRINDFN (GRINDFN?))
		    (AND (NULL L) (PRINC '/)) (RETURN NIL))
		    L)
		   ((CDR L))))
  (ERRSET
   (AND
    (NOT (ATOM ARGS))						       ;EXIT ERRSET IF DOTTED PAIR.
    (SETQ P (MAXPAN ARGS ARG))					       ;P = NUMBER OF LINES TO SPRINT L FORM2.  IF
    (OR (ATOM FN) (NOT (LESSP (MAXPAN ARGS N) P)))		       ;IMPOSSIBLE, ERR EXITS EXIT ERRSET IF FORM1 MORE
    (SETQ N ARG)						       ;EFFICIENT THAN FORM2 FOR NON-ATOMIC L
    (NOT (EQ *FORM 'FORM2))
    (OR (NULL GRINDFN) (AND (NOT (LESSP P (MAXPAN ARGS CHRCT)))
			    (SETQ N CHRCT)
			    (GO B)))				       ;INDENT-TO ARG IF REMAINDER OF SPECIALLY GROUND
    (PROG NIL 							       ;L CANNOT BE FIT IN CHRCT
     (ERRSET
      (SETQ FORM3?						       ;IS IT MORE EFFICIENT TO GRIND L FORM3 OR FORM2
	    (AND (NOT (EQ (CAR (LAST L)) /;))
		 (LESSP (MAXPAN (LAST L)
				(*DIF CHRCT
				      (*DIF (FLATSIZE L)
					    (FLATSIZE (LAST L)))))
			P))))
A    (PPRIN (CAR L) 'LINE)
     (PRINC '/ )
     (AND (CDR (SETQ L (CDR L))) FORM3? (GO A))
     (SETQ N CHRCT))))
B (GRINDARGS L N M)))

(DEFUN ATOML NIL 
       (COND ((ERRSET L NIL) (ATOM L)) ((SETQ L 'UNBOUND))))	       ;AVOIDS CRASH IF L = UNBOUND WHICH CAN OCCUR IN
								       ;GRINDEF VALUE PROPERTY.

(DEFUN DONE? NIL (COND ((ATOML)					       ;PRINTS CLOSING "/)" AND RETURNS IF DONE.
			(AND L (PRINC '/ /./ ) (PRIN1 L))
			(PRINC '/))
			(RETURN NIL))))

(DEFUN GRINDFN? NIL (COND ((ATOM FN)				       ;RETURNS NIL IF FN NOT SPECIAL GRIND FUNCTION
			   (ERRSET ((GET FN 'GRINDFN)) NIL))))	       ;(SGF), ELSE EXECUTES SGF AND THEN UPDATES L.

(DEFUN GRINDMACRO? NIL 						       ;RETURNS NIL IF FN NOT SPECIAL GRIND MACRO
       (COND ((ATOM (CAR L))					       ;(SGM).  ELSE COMPLETES GRIND BY EXECUTING SGM.
	      (ERRSET ((GET (CAR L) 'GRINDMACRO)) NIL))))

(DEFUN GRINDARGS (L N M) 					       ;ELEMENTS OF L ARE GROUND ONE UNDER THE NEXT
       (PROG NIL 
	    A	 (AND (REMSEMI) (NULL L) (PRINC '/)) (RETURN NIL))
		 (SPRINT (CAR L)				       ;CADR'S ARE SPRINTED ONE UNDER THE NEXT WITH THE
			 (COND ((AND PROG? (CAR L) (ATOM (CAR L)))     ;EXCEPTION OF TAGS WHICH ARE UNINDENTED 5
				(PLUS N 5.))
			       (N))
			 (COND ((NULL (CDR L)) (ADD1 M))
			       ((ATOM (CDR L))
				(PLUS 4. M (FLATSIZE (CDR L))))
			       (0.)))
		 (SETQ L (CDR L))
		 (DONE?)
		 (GO A)))

(DEFUN GSEGTEXT (N*) 						       ;GRINDS L AS SEGMENT
       (PROG (N) 
	     (COND ((EQ N* 'LIST)
		    (SETQ N (DIFFERENCE CHRCT 1. (FLATSIZE (CAR L)))))
		   ((SETQ N CHRCT)))
	A    (AND (REMSEMI) (NULL L) (PRINC '/)) (RETURN NIL))
	     (PPRIN (CAR L) 'LINE)
	     (SETQ L (CDR L))
	     (AND (ATOML) (RETURN NIL))
	     (COND ((OR (EQ N* 'LINE)
			(LESSP (FLATSIZE (CAR L))
			       (DIFFERENCE CHRCT 2. M)))
		    (PRINC '/ ))
		   ((INDENT-TO N)))
	     (GO A)))

(DEFUN NEWLINEL (X) (SETQ CHRCT (PLUS CHRCT (*DIF X LINEL)))
		    (SETQ LINEL X))

((LAMBDA (G F H) (APPLY G '(/	 16.)) (APPLY G '(/  8.)))	       ;TAB AND SPACE ARRAYS FILLED.  APPLY'S ARE USED
 '(LAMBDA (M N) (*ARRAY M T N) (APPLY H NIL))			       ;TO INSURE NO CONFLICT WITH WORLD IN WHICH G, F,
 '(LAMBDA (N) (COND ((NOT (LESSP N 0.))				       ;AND H HAVE FUNCTION PROPERTIES.
		     (APPEND (GET M 'PNAME)
			     (CADDR (STORE (APPLY M (LIST N))
					   (LIST (CAR NIL)
						 'PNAME
						 (APPLY H NIL))))))))
 '(LAMBDA NIL (APPLY F (LIST (SUB1 N)))))

(DEFUN MAXPAN (L N) 						       ;ESTIMATES NUMBER OF LINES TO SPRINT LIST OF S
       (PROG (G) (SETQ G 0.)					       ;EXPRESSION ONE UNDER THE NEXT IN SPACE N
	    A	 (SETQ G
		       (PLUS G
			     (PANMAX (CAR L)
				     N
				     (COND ((NULL (SETQ L (CDR L)))
					    (ADD1 M))
					   ((ATOM L)
					    (PLUS M 4. (FLATSIZE L)))
					   (0.)))))
		 (AND (ATOM L) (RETURN G))
		 (GO A)))

(DEFUN PANMAX (L N M) 						       ;ESTIMATES NUMBER OF LINES TO SPRINT AN S
       (COND ((LESSP (PLUS M -1. (FLATSIZE L)) N) 1.)		       ;EXPRESSION IN SPACE N.  LESS COSTLY THAN SPRINT
	     ((OR (LESSP N 3.) (ATOM L)) (ERR '(40.)))		       ;AS IT ALWAYS CHOOSES FORM2.  IF INSUFFICIENT
	     ((EQ (CAR L) /;/;) 1.)				       ;SPACES, ERRS.
	     ((EQ (CAR L) /;) 0.)
	     ((EQ (CAR L) 'QUOTE) (PANMAX (CADR L) (SUB1 N) M))
	     ((AND (NOT (ATOM (CDR L)))
		   (ATOM (CAR L))
		   (SETQ N (DIFFERENCE N 1. (FLATSIZE (CAR L))))
		   (SETQ L (CDR L))
		   NIL))
	     ((MAXPAN L (SUB1 N)))))

(DEFUN NEXTBLANK (L1 NUM) 					       ;RETURNS NUMBER OF ATOMS TILL NEXT SPACE.
       (COND ((OR (NULL L1) (EQ (CAR L1) '/ )) NUM)
	     ((NEXTBLANK (CDR L1) (ADD1 NUM)))))



;;*PAGE

;;SEMI-COLON COMMENTS

(PUTPROP /; (GET 'COMMENT 'FSUBR) 'FSUBR)

(PUTPROP /;/; (GET 'COMMENT 'FSUBR) 'FSUBR)

(DEFUN REM/; NIL 
       (PROG (C RETVAL) 
	A    (COND ((ATOM L) (RETURN RETVAL))
		   ((EQ (CAR L) /;) (SETQ C (CDR L))
				    (SETQ RETVAL 'CAR)
				    (SETQ L NIL))
		   ((EQ (CAAR L) /;) (SETQ C (CDAR L))
				     (SETQ RETVAL 'CAAR)
				     (SETQ L (CDR L)))
		   (T (COND ((AND (EQ RETVAL 'CAAR)
				  (CDR L)
				  (EQ (CAADR L) /;))
			     (PRINALLCMNT)
			     (INDENT-TO N)))
		      (RETURN RETVAL)))
	B    (COND ((NULL *COMNT) (SETQ *COMNT C))
		   ((LESSP *COMSPACE (LENGTH *COMNT)) (TURPRI) (GO B))
		   ((NCONC *COMNT (CONS '/  C))))
	     (GO A)))

(DEFUN REM/;/; NIL 
       (PROG (C RETVAL) 
	A    (COND ((ATOM L)
		    (AND (EQ RETVAL 'CAAR) (INDENT-TO N))
		    (RETURN RETVAL))
		   ((EQ (CAR L) /;/;) (SETQ C (CDR L))
				      (SETQ RETVAL 'CAR)
				      (SETQ L NIL))
		   ((EQ (CAAR L) /;/;) (SETQ C (CDAR L))
				       (SETQ RETVAL 'CAAR)
				       (SETQ L (CDR L)))
		   (T (AND (EQ RETVAL 'CAAR) (INDENT-TO N))	       ;RESTORE INDENTATION FOR UPCOMING CODE
		      (RETURN RETVAL)))
	     (PRINALLCMNT)
	     (AND (NULL /;/;?) (TURPRI) (TURPRI))
	     (PROG (*COMNT *PAGEWIDTH *COMSPACE *MACRO) 
		   (SETQ *COMNT C)
		   (SETQ *PAGEWIDTH LINEL)
		   (COND ((OR (MEMQ (CAR C) '(/; *)) *NOMERGE)
			  (SETQ /;/;? '/;/;/;)
			  (SETQ *PAGEWIDTH *TOPWIDTH))
			 ((EQ /;/;? /;/;)
			  (SETQ /;/;? /;/;)
			  (SETQ *COMNT (CONS '/  *COMNT))
			  (SETQ *MACRO (/  0.))
			  (SETQ *COMSPACE CHRCT)
			  (PRIN50COM))
			 ((SETQ /;/;? /;/;)))
		   (SETQ *COMSPACE
			 (COND ((OR (MEMQ (CAR C) '(/; *))
				    *NOMERGE)
				(PLUS N
				      (*DIF *TOPWIDTH *PROGRAMSPACE)))
			       (N)))
		   (SETQ *MACRO /;/;)
		   (PRINALLCMNT)
		   (TJ6 C))
	     (GO A)))



;;*PAGE


(DEFUN PRIN50COM NIL 						       ;PRINTS ONE LINE OF ; COMMENT
       (SETQ CHRCT (PLUS CHRCT (*DIF *PAGEWIDTH LINEL)))
       (PROG (NEXT LINEL) 
	     (SETQ LINEL *PAGEWIDTH)
	     (PROG (*COMNT) (INDENT-TO *COMSPACE))
	     (PRINC *MACRO)
	PL   (COND ((NULL *COMNT) (RETURN NIL))
		   ((EQ (CAR *COMNT) '/ )
		    (SETQ *COMNT (CDR *COMNT))
		    (SETQ NEXT (NEXTBLANK *COMNT 2.))
		    (COND ((AND (OR (EQ *MACRO /;) (EQ /;/;? /;/;))
				*FILL
				(EQ NEXT 2.)
				(GO PL)))
			  ((AND (NOT (EQ *MACRO (/  0.)))
				(GREATERP NEXT *COMSPACE)))
			  ((LESSP CHRCT NEXT) (RETURN NIL)))
		    (PRINC '/ )
		    (GO PL))
		   ((GREATERP CHRCT 0.)
		    (PRINC (CAR *COMNT))
		    (AND (OR (EQ *MACRO /;) (EQ /;/;? /;/;))
			 *FILL
			 (EQ (CAR *COMNT) '/.)
			 (EQ (CADR *COMNT) '/ )
			 (PRINC '/ )))
		   ((RETURN NIL)))
	     (SETQ *COMNT (CDR *COMNT))
	     (GO PL))
       (SETQ CHRCT (DIFFERENCE CHRCT (*DIF *PAGEWIDTH LINEL))))

(DEFUN PRINALLCMNT NIL (COND (*COMNT (PRIN50COM) (PRINALLCMNT))))      ;PRINTS REMAINDER OF ; COMMENT

(DEFUN LISTIFY-COMMENT NIL 					       ;CONVERTS ; AND ;; COMMENTS TO EXPLODED LISTS
       (PROG (COM LAST CHAR) 
	     (SETQ COM (CONS /; NIL) LAST COM)
	A    (SETQ CHAR (READCH))
	     (COND ((EQ CHAR '/
) (RETURN COM))	   ((AND (EQ CHAR '/;) (EQ (CAR LAST) /;))
		    (RPLACA LAST /;/;)
		    (GO A))
		   ((RPLACD LAST (CONS CHAR NIL))
		    (SETQ LAST (CDR LAST))
		    (GO A)))))
