TITLE CADTLK		
;	** (c) Copyright 1980 Massachusetts Institute of Technology **
			;THIS VERSION FOR CADR.  HAS NO REGISTER ADDRESS FEATURES.
			; JUST READ AND WRITE OF PHYSICAL MEMORY AND 
			; READ AND WRITE OF UNIBUS
.FASL
.MLLIT==1
.INSRT SYS: .FASL DEFS
.GLOBAL TRUE,FALSE,CFIX1
;.GLOBAL A,B,C,AR1,AR2A,P,T,TT,FXP,TRUE,FALSE,FIX1A,GETCOR

;MMIMAP==764460		;PDP11 UNIBUS ADDR OF LAST 8 MAPPING REGISTERS IN MEM INTERFACE
MMIMAP==766174		;NEXT TO LAST MAPPING REGISTER IN XBUS INTERFACE.  NOTE THAT
			; THIS SHOWS UP IN THE LEFT HALF OF A PDP-10 WORD.
			;15 MAP VALID
			;14 WRITE-PERMIT
			;13-0 XBUS PAGE NUMBER
MMIMEM==174000		;PDP11 UNIBUS ADDR CONTROLLED BY THE MAP

;LDPADR==30000		;PDP11 UNIBUS ADR TO MAKE ORIGIN OF T11 PAGE  (MAP 30000-40000)
			; (IE UNIBUS OFFSET STORED IN 10-11 MAP)
			; THE LOW 2 BITS OF THIS HAD BETTER BE ZERO
;LDBUFF==37002		;PDP11 ADR OF BUFFER FLAG WD
			; THIS MUST MAP INTO THE RH OF A PDP-10 WD
;LDBUF==37004		;PDP11 ADR OF BUFFER
;LDBUFB==40		;LENGTH OF BUFFER (IN ITEMS, 2 PDP-10
			; OR 4 PDP-11 WDS EA)
;LDBFF2==36376		;PDP11 ADR OF AUX BFR FLG
;LDBUF2==36400		;PDP11 ADR OF AUX BFR
			
;CBFWDS==<LDBUFF-LDPADR>/4	;PDP10 WORDS BUFFER FLAG WORD IS FROM
				; PDP10 PAGE BASE
;CBDWDS==<LDBUF-LDPADR>/4	;PDP10 WORDS BUFFER DATA ORIGIN IS FROM
				; PDP10 PAGE BASE
;CBF2WD==<LDBFF2-LDPADR>/4	;AUX FLAG
;CBD2WD==<LDBUF2-LDPADR>/4	;AUX DATA

;PREPARE FOR DUMPING
.ENTRY CNSUSP SUBR 1
CNSUSP:	SETZ A,
	SKIPN TT,CNSMAP		;RETURN TEN11 MEMORY
	 POPJ P,
	LSH TT,-10.
	HRLI TT,-5
	.CALL [	SETZ
		'CORBLK
		MOVEI 0
		MOVEI %JSELF
		SETZ TT]
	 .LOSE 1000
	SETZM CNSMAP
	POPJ P,

;INITIALIZE 
.ENTRY CNSINI SUBR 1
CNSINI:	SKIPE TT,CNSMAP	;ALREADY HAVE LISP ADDRESS PAGES?
	 JRST CNSIN1
	MOVEI TT,5	;NO GET THEM
	PUSHJ P,GETCOR	;RETURN VALUE IN TT
	JUMPE TT,FALSE	;LOST
	MOVEM TT,CNSMAP	;-> UNIBUS TO 32-BIT CORE MAPPING REGISTERS
	ADDI TT,2000
	MOVEM TT,CNSMEM	;-> 32-BIT CORE
	ADDI TT,2000
;	MOVEM TT,CNSBAS	;-> PDP11 COMMAND BUFFER
;	MOVEI A,CBFWDS(TT)
;	MOVEM A,CNSCBF
;	MOVEI A,CBF2WD(TT)
;	MOVEM A,CNSOBF
;	ADDI TT,2000
	MOVEM TT,CNSUBS	;-> UNIBUS I/O DEVICE PAGE (TWO PAGES)
	ADDI TT,4000
	MOVEM TT,CNSUB1	;-> UNIBUS MAGICAL PAGE AT 140000 USED TO HACK MRD
CNSIN1:	HRRZ B,CNSMAP
	LSH B,-10.	;GET PAGE NUMBER
	HRLI B,-5
	.CALL [	SETZ	;MAKE SURE NO MEM IN THOSE PAGES SO T11MP DOESNT BOMB
		SIXBIT /CORBLK/
		1000,,0		;DELETE PAGE
		1000,,%JSELF	;SELF
		SETZ B]
	.VALUE
;	MOVE A,[<600000,,1777>+P11N_32+LDPADR_<12-2>]
;	LDB B,[121000,,CNSBAS]
;	.CALL T11MP
;	 .VALUE
	MOVE A,[<600000,,2>+MMIMAP_<12-2>]
	MOVE B,LISP11
	DPB B,[320300,,A]
	LDB B,[121000,,CNSMAP]
	.CALL T11MP
	 .VALUE
	MOVE A,[<600000,,1777>+MMIMEM_<12-2>]
;READ/WRITE ACCESS, PROTECTION OF 1777 (FULL PAGE), PDP11 NUMBER, UNIBUS RELOCATION
;  12 TO SHIFT UNIBUS RELOCATION INTO APPROPRIATE FIELD,
;  -2 TO DIVIDE BY 4 (UNITS RELOCATION WORKS IN)
	MOVE B,LISP11
	DPB B,[320300,,A]
	LDB B,[121000,,CNSMEM]
	.CALL T11MP
	 .VALUE
	MOVE A,[<600000,,1777>+760000_<12-2>]
	MOVE B,LISP11
	DPB B,[320300,,A]
	LDB B,[121000,,CNSUBS]
	.CALL T11MP
	 .VALUE
	MOVE A,[<600000,,1777>+770000_<12-2>]
	MOVE C,LISP11
	DPB C,[320300,,A]
	AOS B
	.CALL T11MP
	 .VALUE
	MOVE A,[<600000,,1777>+140000_<12-2>]
	MOVE B,LISP11
	DPB B,[320300,,A]
	LDB B,[121000,,CNSUB1]
	.CALL T11MP
	 .VALUE
	JRST TRUE	;WON

T11MP:	SETZ
	SIXBIT /T11MP/
	B
	SETZ A

LISP11:		3		;PDP11 NUMBER TO USE

;CNSBAS:	0		;0 OR PDP-10 ORIGIN OF 11 PAGE
;CNSCBF:	0		;PDP11 ADDR OF CURRENT BUFFER FLAG WORD
;CNSOBF:	0		;PDP11 ADDR OF OTHER BUFFER FLAG WORD
;CNSPTR:	0		;FILL POINTER TO PDP-11 BUFFER
;CNSCNT:	0		;COUNT OF FULLNESS OF BUFFER (IN QUAD 16 BIT WORD GROUPS)
;CNSDIR:	0		;INTENDED "DIRECTION" OF DATA XFER
			; 0 -> INITIALIZED STATE, NOT COMMITTED TO EITHER DIRECTION
			;>0 -> 10 SENDS REGISTER ADDRESSES.  11 EXAMINES THEM
			;      AND FILLS IN LAST THREE WORD OF 4 WORD BLOCK
			;-1 -> 10 SENDS REGISTER ADDRESSES AND DATA.
			;      11 DEPOSITS DATA IN THOSE REGISTER ADDRESSES
;CNSRDV:	0		;IF -1, BUFFER CONTAINS VALID RETURNED READ DATA,
			; WHICH CAN BE READ IF DESIRED.
;CNSRDP:	0		;POINTER FOR USE READING DATA
;CNSRDC:	0		;COUNT OF READ DATA ITEMS NOT YET READ
			; NOTE THAT THIS COUNT IS IN 16 BIT WORDS, NOT 4 WD BLOCKS

CNSMAP:	0		;0 OR PDP10 ORIGIN OF MEM INTERFACE MAPPING REGISTERS (LAST 8)
CNSMEM:	0		;0 OR PDP10 ORIGIN OF MEM INTERFACE MEMORY (LAST 8 PAGES)
CNSCPG:	-1		;CURRENTLY MAPPED PAGE
CNSUBS:	0		;-> 2 PAGES MAPPED ONTO UNIBUS 760000 I/O PAGE
CNSUB1:	0		;-> PAGE MAPPED TO UNIBUS 140000

.ENTRY CNSPMI SUBR 1 	;CALL THIS WHEN MACHINE MAY HAVE BEEN POWERED OFF,
CNSPMI: SETOM CNSCPG    ; GARBAGING UNIBUS MAP.
	JRST FALSE

.ENTRY CNSPMR SUBR 2	;(CNSPMR ADDRESS) => CONTENTS OF PHYS MEM LOC
CNSPMR:	PUSH P,CFIX1	;NCALLABLE
	PUSHJ P,CNSMPP		;SET UP MAP
	MOVE D,(T)		;GET FROM MACHINE
	MOVE F,(A)		;DON'T CHECK IF REFERS TO I/O PAGE (ABOVE TV MEMORY)
	CAML F,[17100000]
	 JRST CNSPR1
	CAME D,(T)
	 SKIPN .SPECIAL CTALK-BARF-AT-WRITE-ERRORS  ;KLUDGE..  WE MAY BE READING AN
	  JRST CNSPR1			;DEVICE CONTROL REGISTER ON THE XBUS WHICH COULD
	 .VALUE [ASCIZ\: TEN11 READ LOSSAGE? T/ ADR D/ DATA î\]  ;CHANGE ...
CNSPR1:	LDB TT,[242000,,D]	;GET LOW WORD
	LDB D,[042000,,D]	;GET HIGH WORD
	LSH D,20
	IOR TT,D		;COMBINE
	POPJ P,			;RETURN THAT FIXNUM

.ENTRY CNSPMW SUBR 3	;(CNSPMW ADDRESS DATA) => DATA, WRITES DATA INTO PHYS MEM LOC
CNSPMW:	PUSH P,CFIX1	;NCALLABLE
	PUSHJ P,CNSMPP		;SET UP MAP
	LDB TT,[002000,,(B)]	;GET LOW WORD OF ARGUMENT
	LDB D,[202000,,(B)]	;GET HIGH WORD OF ARGUMENT
	LSH TT,24		;COMPENSATE FOR TEN11 INTERFACE
	LSH D,4
	IOR TT,D
	MOVEM TT,(T)		;STORE INTO LISP MACHINE
	MOVE D,(A)		;DON'T CHECK IF REFERS TO I/O PAGE (ABOVE TV MEMORY)
	CAML D,[17100000]
	 JRST CNSPW1
	CAME TT,(T)		;CHECK IT
	 SKIPN .SPECIAL CTALK-BARF-AT-WRITE-ERRORS
	  JRST CNSPW1
	.VALUE [ASCIZ\: TEN11 WRITE LOSSAGE? T/ ADR TT/ DATA î\]
CNSPW1:	MOVE TT,(B)		;RETURN THE ARGUMENT
	POPJ P,

;LISP FIXNUM ADDRESS IN A, RETURN PDP10 ADDRESS IN T, SETTING UP MAP IF NECC.
CNSMPP:	LDB T,[102000,,(A)]	;PAGE NUMBER BEING REFERENCED
	CAMN T,CNSCPG
	 JRST CNSMP1
	MOVEI TT,140000(T)	;MAP VALID, WRITE PERMIT
	LSH TT,16.+4
	IORI TT,4		;WRITE LEFT WORD ONLY
	MOVEM TT,@CNSMAP	;STORE IN NEXT TO LAST MAPPING REGISTER
	MOVEM T,CNSCPG
	MOVE T,@CNSMAP
	XOR T,TT
	TLNE T,777774
	 .VALUE [ASCIZ\: LOSSAGE TRYING TO LOAD UNIBUS MAP? î\]
CNSMP1:	LDB T,[001000,,(A)]	;Q ADDRESS WITHIN PAGE
	ADD T,CNSMEM		;RELOCATE TO FIRST PDP10 PAGE IN MEM INTERFACE MAP
	POPJ P,

.ENTRY CNSUBR SUBR 2		;READ UNIBUS
CNSUBR:	PUSH P,CFIX1
	HRRZ T,(A)		;UNIBUS ADDRESS TO MUMBLE
	PUSHJ P,UBADMP		;MAP INTO PDP11 ADDRESS IN T
CNUBR2:	MOVE TT,(T)
	LSH TT,-4
	MOVEI T,2
	TDNE T,(A)		;SKIP IF LEFT HALF WORD
	 TDZA TT,[-200000]
	  LSH TT,-20
	POPJ P,

;MAP UNIBUS ADDRESS IN T INTO PDP10 ADDRESS IN T
UBADMP:	CAIGE T,760000
	 JRST UBADM1
	SUBI T,760000
	LSH T,-2
	ADD T,CNSUBS
	POPJ P,

UBADM1:	CAIL T,140000
	 CAIL T,150000
	  JRST UBADM2
	SUBI T,140000
	LSH T,-2
	ADD T,CNSUB1
	POPJ P,

UBADM2:
;	CAIL T,LDPADR
;	 CAIL T,LDPADR+10000
	  .VALUE [ASCIZ/: NON-ADDRESSABLE UNIBUS ADDRESS (IN T) - UBADMPî/]
;	SUBI T,LDPADR
;	LSH T,-2
;	ADD T,CNSBAS
;	POPJ P,

.ENTRY CNSUBH SUBR 4		;ADDR, MASK, DESIRED VALUE
CNSUBH:	HRRZ T,(A)		;UNIBUS ADDRESS TO MUMBLE
	PUSHJ P,UBADMP
	MOVEI D,2
	MOVE TT,(B)		;MASK
	LSH TT,4
	TDNN D,(A)		;SKIP IF RIGHT HALF WORD
	 LSH TT,20
	SKIPE (C)		;SKIP IF WAITING FOR BIT TO TURN OFF
	 JRST [	TDNN TT,(T)
		 .HANG
		POPJ P, ]
	TDNE TT,(T)
	 .HANG
	POPJ P,

.ENTRY CNSUBW SUBR 3		;WRITE UNIBUS
CNSUBW:	PUSH P,CFIX1
	MOVE TT,(B)		;DATA TO WRITE
	LSH TT,4
	MOVEI T,2
	TDNN T,(A)
	 LSH TT,20		;LEFT HALF WORD IS EVEN ADDRESS
	IORI TT,10		;WRITE RIGHT HALF WORD ONLY
	TDNN T,(A)
	 SUBI TT,4		;4 IS WRITE LEFT HALF WORD ONLY
	HRRZ T,(A)		;UNIBUS ADDRESS TO MUMBLE
	PUSHJ P,UBADMP
	MOVEM TT,(T)		;DO THE WRITE
	MOVE TT,(B)
	POPJ P,

.ENTRY SLEEP-JIFFIES SUBR 2 	;UNFORTUNATELY, SLEEP IN LISP TAKES ARG IN SECONDS.
	MOVE B,(A)
	.SLEEP B,
	POPJ P,

FASEND
