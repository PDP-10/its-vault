;;; -*- Mode: Lisp; Package: Macsyma -*-
;;; Translated code for DSK:SHARE;DESOLN 12
;;; Written on "Monday, Jan 9, 1984  6:46pm", from MACSYMA 304
;;; Translated for ASB

;;; TRANSL-AUTOLOAD version by GJC0 on MONDAY, July 4, 1983, at 1:49:49
;;; TRHOOK version 5 TRMODE version 73 DCL version 5/29/82 8:19:42
;;; MCOMPI version NIL TRDATA version 68 ACALL version NIL
;;; FCALL version NIL TRANSQ version NIL MDEFUN version NIL
;;; MTAGS version NIL TRPRED version 6 TROPER version NIL
;;; TRANSF version NIL TRANS5 version NIL TRANS4 version NIL
;;; TRANS3 version 46 TRANS2 version 39 TRANS1 version 108
;;; TRUTIL version 26 TRANSL version 1157 TRANSS version 80
(includef (cond ((status feature ITS) '|DSK:LIBMAX;TPRELU >|)
                ((status feature Multics) '|translate|)
                ((status feature Unix) '|libmax/tprelu.l|)
                (t (error '|Unknown system, see GJC@MIT-MC|))))

(eval-when (compile eval)
  (or (status feature lispm)
      (setq *infile-name-key*
               ((lambda (file-name)
                           ;; temp crock for multics.
                          (cond ((eq (typep file-name) 'list)
                                 (namestring file-name))
                                (t file-name)))
                  (truename infile)))))

(eval-when (compile)
   (setq $tr_semicompile 'NIL)
   (setq forms-to-compile-queue ()))

(comment |DSK:SHARE;DESOLN 12|)

(DECLARE (*LEXPR $ERROR $SOLVE) (SPECIAL $DISPFLAG $PARTSWITCH $PIECE $INFLAG $TEQNS))
(DECLARE (SPECIAL $TEQNS))
(DEFMTRFUN-EXTERNAL ($DESOLVE $ANY MDEFINE NIL NIL))


(MEVAL* (QUOTE (($MODEDECLARE) $TEQNS $ANY)))
(MEVAL* (QUOTE (($DECLARE) $TEQNS $SPECIAL)))
(DEF-MTRVAR $TEQNS (QUOTE ((MLIST))))

(DEFPROP $DESOLVE T TRANSLATED)
(ADD2LNC (QUOTE $DESOLVE) $PROPS)
(DEFMTRFUN ($DESOLVE $ANY MDEFINE NIL NIL) ($EQNS $VARS) NIL ((LAMBDA ($TEQNS $INFLAG $PIECE $PARTSWITCH $TVARS $OVAR $LVAR $FLAG $DISPFLAG) NIL NIL (COND ((NOT ($LISTP $VARS)) (SETQ $EQNS (LIST (QUOTE (MLIST)) $EQNS)) (SETQ $VARS (LIST (QUOTE (MLIST)) $VARS)) (SETQ $FLAG T))) (COND ((NOT (= ($LENGTH (SETQ $OVAR (SIMPLIFY ($FIRST $VARS)))) 1.)) (SIMPLIFY ($ERROR $OVAR (QUOTE |&contains more than one independent variable.|))))) (SETQ $OVAR (SIMPLIFY ($FIRST $OVAR))) (SETQ $TEQNS (SIMPLIFY (MAP1 (GETOPR (M-TLAMBDA&ENV (($Z) ($OVAR $LVAR)) NIL (SIMPLIFY ($LAPLACE $Z $OVAR $LVAR)))) $EQNS))) (SETQ $TVARS (SIMPLIFY (MAP1 (GETOPR (M-TLAMBDA&ENV (($Z) ($OVAR $LVAR)) NIL (SIMPLIFY (LIST (QUOTE (%LAPLACE)) $Z $OVAR $LVAR)))) $VARS))) (SETQ $TEQNS ((LAMBDA (ERRCATCH RET) (COND ((NULL (SETQ RET (ERRSET (PROGN (SIMPLIFY (MFUNCALL (QUOTE $EV) (SIMPLIFY ($SOLVE (TRD-MSYMEVAL $TEQNS (QUOTE $TEQNS)) $TVARS)) (QUOTE $EVAL)))) LISPERRPRINT))) (ERRLFUN1 ERRCATCH))) (CONS (QUOTE (MLIST)) RET)) (CONS BINDLIST LOCLIST) NIL)) (COND ((OR (LIKE (TRD-MSYMEVAL $TEQNS (QUOTE $TEQNS)) (QUOTE ((MLIST)))) (LIKE (TRD-MSYMEVAL $TEQNS (QUOTE $TEQNS)) (LIST (QUOTE (MLIST)) (QUOTE ((MLIST)))))) (SIMPLIFY ($ERROR (QUOTE |&DESOLVE can't handle this case.|)))) (T (SETQ $TEQNS (SIMPLIFY ($FIRST (TRD-MSYMEVAL $TEQNS (QUOTE $TEQNS))))))) (COND ((NOT (LIKE $FLAG T)) (SETQ $TEQNS (SIMPLIFY ($FIRST (TRD-MSYMEVAL $TEQNS (QUOTE $TEQNS))))))) (SETQ $TEQNS (SIMPLIFY (MAP1 (GETOPR (M-TLAMBDA&ENV (($Z) ($LVAR $OVAR)) NIL (SIMPLIFY ($ILT $Z $LVAR $OVAR)))) (TRD-MSYMEVAL $TEQNS (QUOTE $TEQNS))))) (COND ((AND $FLAG (= ($LENGTH $TVARS) 1.)) (SIMPLIFY ($FIRST (TRD-MSYMEVAL $TEQNS (QUOTE $TEQNS))))) (T (TRD-MSYMEVAL $TEQNS (QUOTE $TEQNS))))) (QUOTE $TEQNS) T (QUOTE $PIECE) T (QUOTE $TVARS) (QUOTE $OVAR) (QUOTE $LVAR) NIL NIL))


(compile-forms-to-compile-queue)

