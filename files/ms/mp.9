TITLE	MERSENNE PRIMES

TS==1	;0 IF NON-TS VERSION
IFN TS,[
	TYOC==1
	DKIC==2
	DKOC==3
	ERRC==4
SAVEF=20
]
LPDL==100
NPRIME==3808.	;LENGTH OF PRIME TABLE

MODN==37	;MUL CHECKED MOD 2^43-MODN

CRYF==1
MNSMUL==11
MXSMUL==20
NOSMUL==MXSMUL-MNSMUL+1
TTABL==62

F=0
I=1
J=I+1
K=J+1
L=K+1
M=L+1
ML=M+1
Q=ML+1
R=Q+1
S=R+1
N=12
A=13
B=14
C=15
T=16
P=17

DEFINE	CONC A,B
A!B
TERMIN
IFN TS,[
LOC 42
	JSR INT
INT:	0
	0
	SETOM SAVEF
	.DISMIS INT+1

SAVE:	.SUSET [.SSNAM,,[SIXBIT \MS\]]		;SAVE THE WORLD!
	AOSE OUTF
	JRST SV1
	.OPEN TYOC,TYOO
	JRST 4,.
	.OPEN DKIC,DSKI
	JRST SV1
SV:	.IOT DKIC,A
	JUMPL A,SV1
	.IOT TYOC,A
	JRST SV
RENAME:	0
	TYOC
	SIXBIT \MPDIV OUT\
TYOO:	SIXBIT \  !DSKMPDIV TEMOUT\
DSKI:	SIXBIT \   DSKMPDIV OUT\
DSKO:	SIXBIT \  &DSKMPDIV DUMP\	;INITIALLY SET FOR INPUT
SV0:	MOVSI A,1
	XORM A,DSKO
SV1:	.OPEN DKOC,DSKO
	JRST SV0
	MOVSI A,-PCNT-1
	.IOT DKOC,A
	MOVE A,[VAR-PROD,,VAR]
	.IOT DKOC,A
	.CLOSE DKOC,
	.FDELE RENAME-1
	JRST 4,.
	POPJ P,

INIT:	.CORE MEMT_<-12>	;GET CORE
	JRST .-1
	.SUSET [.SMASK,,[200000,,100]]	;SET UP FOR INTERRUPT EVERY QUARTER HOUR, ALSO ENABLE SYSTEM GOING DOWN INTERRUPT
	MOVE A,[600000,,[15.*60.*60.]]
	.REALT A,
	SETOM OUTF
	PUSHJ P,SAVE
]IFE TS,INIT:
	MOVE P,[-LPDL,,PDL-1]
	MOVE T,[KM,,K]		;CREATE PRIME TABLE
	BLT T,T
	PUSHJ P,NXTNUM
	MOVEI T,TEMP
	MOVSI F,400000
	SETZM PDL
	MOVE A,[PDL,,PDL+1]
	BLT A,MEMT-1		;ZERO THE WORLD
IFN 0,[
STAT:	MOVE A,[252525252525]		;GET TEMPORAL STATISTICS
	MOVEM A,FACTS+1
	MOVE A,[FACTS+1,,FACTS+2]
	BLT A,PROD-1
	MOVEI A,FACTS
	MOVEI C,PROD
	MOVEI B,TTABL-1
	MOVE S,[SQUARE,,TTAB]
STAT1:	MOVE N,LNGTAB(B)
	MOVE R,TIMTAB(B)
	PUSHJ P,TIME
	MOVE R,(S)
	FDVR R,ITTAB(B)
	MOVEM R,KTAB-TTAB(S)
	AOS S
	SOJGE B,STAT1
	.VALUE

TTAB:	BLOCK TTABL
KTAB:	BLOCK TTABL
]
PATCH:	BLOCK 100

KM:	OFFSET K-.
	1-NPRIME
	3
NXTNUM:	ADDI L,2		;PRIME GENERATOR
	HRRI XD,PRIMES
NXTDIV:	MOVE I,L
XD:	IDIV I,.
	JUMPE J,NXTNUM
	CAMLE I,@XD
	AOJA XD,NXTDIV
	MOVEM L,PRIMES+NPRIME(K)
	AOJLE K,NXTNUM
	POPJ P,
OFFSET 0
IFN 0,[
TIME:	MOVEM R,TCNT'
	PUSH P,R
	PUSH P,S
	IMULI R,60.
	TLO R,232000
	FAD R,R
	MOVEM R,CNT'
	HLRM S,TIME1
	HRRM S,TIME2
	.SUSET [.RRUNT,,T0']
TIME1:	PUSHJ P,.
	SOSLE TCNT
	JRST .-2
	.SUSET [.RRUNT,,R]
	SUB R,T0
	TLO R,216000
	FAD R,R
	FMPR R,[1000000.0]
	FDVR R,CNT
TIME2:	MOVEM R,.
	POP P,S
	POP P,R
	POPJ P,
]
START:
CRNXTP:	PUSHJ P,CRLF
NXTP:	MOVE Q,PRIMES	;GET CURRENT PRIME
	AOS NXTP	;AOS CURRENT PRIME POINTER
	MOVE A,Q
	SOJ A,.+1	;.+1 SHOULD BE IRRELEVANT
	MOVEM A,PCNT2
	AOJ A,.+1	;DITTO
	PUSHJ P,DECP	;PRINT CURRENT PRIME
	MOVEI S,DIVT1-1	;COMPILE DIVISOR TEST CODE
	MOVSI A,400000
	MOVNI R,<43-5>
	LSH A,-1
	TDNN Q,A
	AOJA R,.-2
	CAIL Q,70.	;CHECK FOR P<70.
	JRST CDIVTA
	MOVE I,Q
	LSH I,-1
	MOVE K,[552023631477]	;SQUARE ROOT OF 2
	LSH K,-43(I)
	PUSH S,[CAMLE N,K]
	PUSH S,[JRST LUCTST]
	JUMPL R,CDIVTA	;CHECK FOR P<35.
	CAIG Q,6	;CHECK FOR P=3 OR 5
	JRST LUCTST
	MOVEI R,1
	LSH R,(Q)
	JRST CDIVT2

CDIVTA:	MOVE I,Q	;GET FIRST FIVE BITS OF P
	LSH I,(R)
	MOVEI R,1
	LSH R,(I)
	LSH A,-5	;CONTINUE
CDIVT:	PUSH S,[MUL M,M]
	PUSH S,[DIV M,N]
	PUSH S,[MOVE M,ML]
	TDNN Q,A
	JRST CDIVT1
	PUSH S,[LSH M,1]
	PUSH S,[SUB M,N]
CDIVT1:	LSH A,-1
	JUMPN A,CDIVT
CDIVT2:	PUSH S,[SOJE M,DIVIS]	;CAN'T BE 1-N SINCE 1 IS ODD
	MOVE A,Q	;CALCULATE LIMIT FOR DIVISOR TEST
	IMUL A,Q	;SPEND A FIXED PROPORTION OF LUCAS TEST TIME
	MUL A,Q		;ASSUMING Q LOG Q MULTIPLY, LUCTIME IS PROPORTIONAL TO Q^2 LOG Q
		;DIVISOR TEST FOR SINGLE DIVISOR IS PROPORTIONAL TO LOG Q
	JUMPN A,CDIVT3
	PUSH S,[CAML N,B]
	PUSH S,[JRST PLUCT]
	HLLZS DPDTS3
	JRST CDIVT4
CDIVT3:	ASHC A,-3	;BIG DIVISOR TEST SLOWER
CDIVT4:	PUSH S,[AOJA S,DIVTST]
	HRRM A,BIGLIM
	MOVE I,Q
	IDIVI I,60.
	MOVEI N,1
	SKIPE S,SEQTAB(J)
	JRST DIVTST
	MOVEI A,"?	;P NOT PRIME?
	PUSHJ P,TYO
	JRST CRNXTP
DIVTRS:	AOSN SAVEF
	PUSHJ P,SAVE
	MOVE S,SEQTAB(J)
DIVTST:	SKIPN A,(S)
	JRST DIVTRS
	IMUL A,Q
	ADD N,A
	JUMPL N,DPDT
	MOVE L,R
	IDIV L,N
DIVT1:	BLOCK 6*<43-5>+2

DIVIS:	MOVEI B,[ASCIZ \ /\]	;PRINT OUT DIVISOR
	PUSHJ P,ASCTYO
	MOVE A,N
	PUSHJ P,DECP
	JRST CRNXTP

SEQTAB:	REPEAT 60.,CONC SEQ,\.RPCNT
DEFINE	SEQGEN RES
ZZ=<RES-RES/2*2>*<RES-RES/3*3>*<RES-RES/5*5>
IFE ZZ,SEQ!RES=0
IFN ZZ,[SEQ!RES:
ZZ==0
REPEAT 60.,[
ZZZ==2*RES*<.RPCNT+1>+1
IFN <ZZZ-ZZZ/3*3>*<ZZZ-ZZZ/5*5>,[
IFE <ZZZ-ZZZ/8*8-1>*<ZZZ-ZZZ/8*8-7>,[
	2*<.RPCNT+1-ZZ>
ZZ==.RPCNT+1
]
]
]
	0
]
TERMIN
REPEAT 60.,SEQGEN \.RPCNT
DPDT:	HLLZS DPDTS3	;DOUBLE PRECISION DIVISOR TEST, FOR DIVISOR < 2^(12+1/3)
	HLLZS DPDTD3
BIGLIM:	MOVEI A,.
	JUMPE A,PLUCT0
	MOVE K,A
	JFFO K,.+1
	ASHC A,-22-1(L)
	HRLZM A,MAXM'
	MOVSI A,400000	;COMPILE DDIVISOR TEST
	MOVNI I,<43-6>
	LSH A,-1
	TDNN Q,A
	AOJA I,.-2
	MOVE R,Q
	LSH R,(I)	;SET UP R
	MOVEI C,DDVT1-1
	LSH A,-6
CDDVT1:	TDNE Q,A
	JRST .+3
	PUSH C,[PUSHJ P,DPDTS]
	JRST .+2
	PUSH C,[PUSHJ P,DPDTSD]
	LSH A,-1
	JUMPN A,CDDVT1
	PUSH C,[SKIPN K]
	PUSH C,[SOJE L,DDIVIS]
	PUSH C,[AOJA S,DDVTST]
	HRRM C,CDDVTM
	PUSH C,[AOJA S,DDVTST]
	PUSH C,[JRST PLUCT]
	JRST DDIVT0

DDVTRS:	AOSN SAVEF
	PUSHJ P,SAVE
	MOVE S,SEQTAB(J)
DDVTST:	SKIPN A,(S)
	JRST DDVTRS
	IMUL A,Q
	ADD N,A
	JUMPGE N,DDVT0
DDIVT0:	TLZ N,400000
	AOS A,DPDTS3
	AOS B,DPDTD3
	CAME A,B
	JRST MEMERR
	HRRZS A
	CAIGE A,@BIGLIM
	JRST DDVT0
	MOVE A,[CAMGE M,MAXM]
CDDVTM:	MOVEM A,.
DDVT0:	HRRZ L,DPDTS3
	JFFO L,.+1
	MOVEI C,-44(M)
	MOVE M,N
	ASHC L,(C)
	HRRM C,DPDTS2
	MOVSI K,100000
	MOVEI L,0
	MOVE A,M
	DIVM K,A
	ASH A,(C)
	AOS C
	HRRM C,DPDTD2
	MOVE C,A
	MUL A,N
	IMULI C,@DPDTS3
	ADD A,C
	SUB K,A
	MOVN ML,B
	TLZE ML,400000
	SOJGE K,DPDT1
	JUMPGE K,DPDT1
	ADD ML,N
	TLZE ML,400000
	AOS K
	ADDI K,@DPDTS3
DPDT1:	HRRM K,DPDTS1
	HRRM K,DPDTD1
	MOVEI K,1_<60-43>
	MOVEI L,0
	ASHC K,-60(R)
	PUSHJ P,DPDTM
DDVT1:	BLOCK 43-6+5

DDIVIS:	MOVEI B,[ASCIZ \ /\]	;PRINT OUT DIVISOR
	PUSHJ P,ASCTYO
	HRRZ S,DPDTS3
	DIVI S,100000.
	MOVE A,S
	PUSHJ P,DECP
	MOVE A,N
	MOVEI S,5
	PUSHJ P,ZDECP1
	JRST CRNXTP

DPDTS:	MOVE A,L	;DOUBLE PRECISION DIVIDE TEST, SQUARE
	MOVE I,K
	MUL K,L
	ASHC K,1
	IMUL I,I
	ADD K,I
	MUL A,A
	ADDB L,A
	TLZE L,400000
	AOS K
	ASHC K,2
	TLZ A,700000
	MOVE C,K
	MUL K,ML	;LOW 2^104
	ADD K,A
	ADD L,B
	TLZE L,400000
	AOS K
DPDTS1:	IMULI C,.	;HIGH 2^104
	ADD K,C
DPDTM:	MOVE A,M	;DIVISOR LEFT JUSTIFIED
	DIVM K,A
DPDTS2:	ASH A,.	;# LEADING ZEROES IN DIVISOR - 43
	MOVE C,A
	MUL A,N	;LOW ORDER DIVISOR
DPDTS3:	IMULI C,.	;HIGH ORDER DIVISOR
	ADD A,C
	SUB K,A
	SUB L,B
	JUMPL K,DPDTSM
	TLZE L,400000
	SOSL K
	POPJ P,
DPDTSM:	TLON L,400000
	AOS K
	POPJ P,

DPDTSD:	MOVE A,L	;DOUBLE PRECISION DIVIDE TEST SQUARE & DOUBLE
	MOVE I,K
	MUL K,L
	ASHC K,1
	IMUL I,I
	ADD K,I
	MUL A,A
	ADDB L,A
	TLZE L,400000
	AOS K
	ASHC K,2
	TLZ A,700000
	MOVE C,K
	MUL K,ML	;LOW 2^104
	ADD K,A
	ADD L,B
	TLZE L,400000
	AOS K
DPDTD1:	IMULI C,.	;HIGH 2^104
	ADD K,C
	MOVE A,M
	DIVM K,A
	ASHC K,1
DPDTD2:	ASH A,.	;# LEADING ZEROS IN DIVISOR + 1 - 43
	MOVE C,A
	MUL A,N	;LOW ORDER DIVISOR
DPDTD3:	IMULI C,.	;HIGH ORDER DIVISOR
	ADD A,C
	SUB K,A
	SUB L,B
	JUMPL K,DPDTDM
	TLZE L,400000
	SOSL K
	POPJ P,
DPDTDM:	TLON L,400000
	AOS K
	POPJ P,
PLUCT0:	AOS DPDTS3
	MOVEI N,0
PLUCT:	MOVEM N,BIGDIV'	;SAVE LOWER BOUND ON DIVISORS
LUCTST:	MOVE A,Q	;LUCAS TEST
	SUBI A,2
	MOVEM A,PCNT	;SET COUNTER
	MOVEI M,1	;CALCULATE 2^P-1 (MOD 2^43-MODN)
	MOVSI A,200000
LUCLUP:	MUL M,M
	DIV M,[1_43-MODN]
	MOVE M,ML
	TDNN Q,A
	JRST .+3
	LSH M,1
	SUB M,[1_43-MODN]
	LSH A,-1
	JUMPN A,LUCLUP
	SOSGE M
	ADD M,[1_43-MODN]
	MOVEM M,MNRES'
	IDIVI Q,43	;COMPUTE # WORDS OF 1'S NEEDED.  NOTE THAT 43 IS NOT PRIME!
	MOVNI A,1
	ASH A,(R)
	MOVEM A,TEM1'
	HRRM Q,CUMOD
	HRRM Q,CCUMD1
	MOVNS R
	HRRM R,CUMODE
	MOVE N,Q	;ROUND UP TO MULTIPLIER LENGTH
	MOVEI A,LMXLNG/2
	MOVEI B,LMXLNG/2-1
LNGLUP:	ASH A,-1
	JUMPE A,LNGE
	CAML N,LNGTAB(B)
	JRST LNGLP1
	SUB B,A
	JRST LNGLUP
LNGLP1:	ADD B,A
	JRST LNGLUP
LNGE:	CAML N,LNGTAB(B)
	AOS B
	MOVE N,LNGTAB(B)	;SET MULTIPLIER LENGTH
	HRRM N,CCUMD2
	MOVEI A,PROD(N)
	ADD A,N
	HRRM A,CUMOD2
	HRRM A,CUMOD3
	SUB A,Q
	MOVEI B,FACTS(N)
	HRRM B,CUMOD4
	HRRM B,CUMOD5
	SUB B,Q
	HRRM B,CUMODI
	HRRM B,CUMOD1
	HRRM A,CUMODA
	HRRM A,CUMODB
	HRRM A,CUMODF
	HRRM A,CUMODG
	HRRM A,CCUMOD
	SOS A
	HRRM A,CUMODH
	SUB A,Q
	HRRM A,CUMODD
	AOS A
	HRRM A,CUMODC
	SUBM N,Q
	HRRM Q,CUPM2
	MOVEI B,0		;SET ERROR COUNT TO 0
	MOVEI C,PROD
	MOVE A,[FACTS,,FACTS+1]
	BLT A,FACTS-1(N)
	MOVEI A,4
	MOVEM A,FACTS(N)	;SET U(0) TO 4
	MOVEM A,UMODQ'
CUNP1:	SOS A,PCNT2
	SUB A,PCNT
	JUMPN A,CNTERR
CUNP1A:	AOSN SAVEF	;TIME TO SAVE THE WORLD?
	PUSHJ P,SAVE	;YES
	MOVEI A,FACTS
	PUSHJ P,SQUARE	;U(N+1)=U(N)^2-2 (MOD 2^P-1)
	ASH N,1
	MOVNI I,2
	ADDB I,PROD(N)
	JUMPGE I,CUNP1C
	MOVE S,N
	ANDCAM F,PROD(S)
	SOSGE PROD-1(S)
	SOJG S,.-2
	JUMPE S,CUMODI
CUNP1C:	MOVEI A,PROD	;CHECK CALCULATION SO FAR
	PUSHJ P,MOD
	ADDI ML,2
	IDIV ML,[1_43-MODN]
	MOVE I,Q
	MOVEI A,FACTS
	ASH N,-1
	PUSHJ P,MOD
	CAME ML,UMODQ
	JRST MEMERR	;FACT HAS CHANGED?!
	MUL ML,ML
	DIV ML,[1_43-MODN]
	CAME I,Q
	AOJA B,MULLUZ	;LOST, REDO
	MOVEM Q,U2MODQ'
CUMOD:	MOVEI S,.	;CALCULATE (MOD 2^P-1)
CUMODA:	MOVE ML,.
	MOVE I,TEM1
CUMODB:	ANDCAM I,.
	JRST CUMODD
CUMODC:	MOVE ML,.(S)
CUMODD:	MOVE M,.(S)
CUMODE:	ASHC M,.
CUMODF:	EXCH ML,.(S)
CUMODG:	ADD ML,.(S)
	TLZE ML,400000
CUMODH:	AOS .(S)
CUMODI:	MOVEM ML,.(S)
CUMOD0:	SOJGE S,CUMODC
	TDZE ML,I
	JRST CUMOD1
CCUMOD:	MOVEI A,.
CCUMD1:	MOVEI N,.
	PUSHJ P,MOD
	MUL ML,MNRES
	DIV ML,[1_43-MODN]
	MOVEI A,FACTS
CCUMD2:	MOVEI N,.
	PUSHJ P,MOD
	MOVEM ML,UMODQ
	ADD Q,ML
	ADDI Q,2
	TLZE Q,400000
	ADDI Q,MODN
	IDIV Q,[1_43-MODN]
	CAME R,U2MODQ
	JRST MODERR	;MOD CALCULATION LOST?!
	SOSLE PCNT
	JRST CUNP1
	SOSE A,PCNT2
	JRST CNTERR
LUCCHK:	JUMPE B,LUCTD	;CHECK FOR ERROR
	MOVEI A,"<
	PUSHJ P,TYO
	MOVE A,B
	PUSHJ P,DECP	;PRINT OUT NUMBER OF ERRORS
	MOVEI A,">
	PUSHJ P,TYO
LUCTD:	MOVNS I
	AOSGE A,FACTS(N)
	SOJG N,.-1
CUPM2:	CAIN N,.
	CAME A,I
	JRST NMP
MPFND:	MOVEI A,"_	;YES, A MERSENNE PRIME!!
	PUSHJ P,TYO
	JRST CRNXTP
NMP:	PUSHJ P,SPACE	;NOT A MERSENNE PRIME
	SOS A,FACTS(N)
	PUSHJ P,ZOCTP	;PRINT OUT LAST WORD OF LUCAS RESIDUE <377777777777
	PUSHJ P,SPACE
	MOVE A,UMODQ
	PUSHJ P,DECP	;PRINT OUT RESIDUE MOD 2^43-MODN
	PUSHJ P,SPACE
	MOVEI A,">
	PUSHJ P,TYO
	HRRZ I,DPDTS3	;PRINT OUT LOWER BOUND ON DIVISORS
	MOVE J,BIGDIV
	DIVI I,100000.
	SKIPE A,I
	PUSHJ P,DECP
	MOVE A,J
	JUMPE I,NMP1
	MOVEI S,5
	PUSHJ P,ZDECP1
	JRST CRNXTP

NMP1:	PUSHJ P,DECP
	JRST CRNXTP

CUMOD1:	MOVEM ML,.
	SETZB R,S
CUMOD2:	AOSL .(S)
	JRST CUMOD4
CUMOD3:	SETZM .(S)
	SOJA S,CUMOD2
CUMOD4:	AOSL .(R)
	JRST CCUMOD
CUMOD5:	SETZM .(R)
	SOJA R,CUMOD4

PRIMES:	3	;PRIME TABLE
	BLOCK NPRIME

PCNT2:	0
PCNT:	0	;CURRENT PRIME-2, COUNTING DOWN

LMXLNG==10*NOSMUL	;MUST BE POWER OF 2
LNGTAB:	1
	2
	REPEAT 10,[
RPCNT==.RPCNT
	REPEAT NOSMUL,<MNSMUL+.RPCNT>_<RPCNT>
]
IFN 0,[
TIMTAB:	1000
	1000
	REPEAT 10,[
RPCNT==.RPCNT
	REPEAT NOSMUL,1_<7-RPCNT>
]
ITTAB:	1.0		;LNGTAB^LOG2(3)
	3.0
ZZ==1.0
	REPEAT 10,[
	.OP FMPR 32.541577 ZZ,
	.OP FMPR 38.455858 ZZ,
	.OP FMPR 44.726855 ZZ,
	.OP FMPR 51.340704 ZZ,
	.OP FMPR 58.285221 ZZ,
	.OP FMPR 65.549586 ZZ,
	.OP FMPR 73.124100 ZZ,
	.OP FMPR 81.0 ZZ,
ZZ==.OP FMPR ZZ 3.0,
]
]
IFE TS,MULLUZ==CUNP1A
IFN TS,[
MULLUZ:	PUSHJ P,ERRDMP
	JRST CUNP1A
ERRDMP:	.OPEN ERRC,ERRO
	POPJ P,
	.RDATE A,
	HRROI R,A
	.IOT ERRC,R
	.RTIME A,
	HRROI R,A
	.IOT ERRC,R
	MOVE A,NXTP
	HRROI R,-1(A)
	.IOT ERRC,R
	HRROI R,PCNT
	.IOT ERRC,R
	HRROI R,UMODQ
	.IOT ERRC,R
	HRROI R,U2MODQ
	.IOT ERRC,R
	MOVE R,[FACTS-ST,,FACTS]
	.IOT ERRC,R
	.CLOSE ERRC,
	POPJ P,
ERRO:	SIXBIT \  'DSKMPERR >\

CNTERR:	PUSHJ P,SDECP
	JRST SV0

MODERR:	MOVEI A,"D
	JRST .+2
MEMERR:	MOVEI A,"M
	PUSHJ P,TYO
	PUSHJ P,ERRDMP
	JRST SV0
]
CRLF:	MOVEI B,[ASCIZ \
\]
ASCTYO:	TLOA B,440700
ASCTO1:	PUSHJ P,TYO
	ILDB A,B
	JUMPN A,ASCTO1
	POPJ P,

SDECP:	MOVEM A,B
	MOVEI A,"+
	SKIPGE B
	MOVEI A,"-
	PUSHJ P,TYO
	MOVM A,B
	TLZ A,400000
DECP:	IDIVI A,10.
	HRLM B,(P)
	SKIPE A
	PUSHJ P,DECP
DECP1:	HLRZ A,(P)
	TROA A,60
SPACE:	MOVEI A,40
TYO:	IFN TS,[
	.IOT TYOC,A
	SETOM OUTF'	;THERE IS NOW SOME OUTPUT TO FILE AWAY
]	IFE TS,[
	CONSZ TTY,20
	JRST .-1
	DATAO TTY,A
]	POPJ P,

ZDECP:	MOVEI S,10.
ZDECP1:	IDIVI A,10.
	HRLM B,(P)
	SOJE S,DECP1
	PUSHJ P,ZDECP1
	JRST DECP1

ZOCTP:	MOVE B,A
	MOVEI S,14
ZOCTP1:	MOVEI A,6
	LSHC A,3
	PUSHJ P,TYO
	SOJG S,ZOCTP1
	POPJ P,

MDECP:	;MULTIPLE PRECISION DECIMAL PRINT
DEFINE	SMUL NSMUL
SQM!NSMUL:	MOVE I,NSMUL(A)
	MOVE K,NSMUL-1(A)
	MUL K,I
	MOVEM L,ST+2*NSMUL-1
REPEAT NSMUL-2,[
ZZ==.RPCNT+1-<.RPCNT+1>/3*3
ZZM1==.RPCNT-.RPCNT/3*3
	MOVE K+ZZ,NSMUL-2-.RPCNT(A)
	MUL K+ZZ,I
	ADD L+ZZ,K+ZZM1
	TLZE L+ZZ,400000
	AOS K+ZZ
	MOVEM L+ZZ,ST+2*NSMUL-2-.RPCNT
]	MUL I,(A)
	ADD J,K+ZZ
	TLZE J,400000
	AOS I
	MOVEM J,ST+NSMUL
	MOVEM I,ST+NSMUL-1
REPEAT NSMUL-2,[
	MOVE I,NSMUL-1-.RPCNT(A)
RPCNT==.RPCNT
	MOVE K,NSMUL-2-RPCNT(A)
	MUL K,I
	ADD L,ST+2*NSMUL-3-2*RPCNT
	TLZE L,400000
	AOS K
	MOVEM L,ST+2*NSMUL-3-2*RPCNT
IFE NSMUL-3-RPCNT,ZZ==0
REPEAT NSMUL-3-RPCNT,[
ZZ==.RPCNT+1-<.RPCNT+1>/3*3
ZZM1==.RPCNT-.RPCNT/3*3
	MOVE K+ZZ,NSMUL-3-RPCNT-.RPCNT(A)
	MUL K+ZZ,I
	ADD L+ZZ,ST+2*NSMUL-4-2*RPCNT-.RPCNT
	TLZE L+ZZ,400000
	AOS K+ZZ
	ADD L+ZZ,K+ZZM1
	TLZE L+ZZ,400000
	AOS K+ZZ
	MOVEM L+ZZ,ST+2*NSMUL-4-2*RPCNT-.RPCNT
]	MUL I,(A)
	ADD J,ST+NSMUL-1-RPCNT
	TLZE J,400000
	AOS I
	ADD J,K+ZZ
	TLZE J,400000
	AOS I
	MOVEM J,ST+NSMUL-1-RPCNT
	MOVEM I,ST+NSMUL-2-RPCNT
]	MOVE I,1(A)
	MUL I,(A)
	ADD J,ST+1
	TLZE J,400000
	AOS I
	MOVEM J,ST+1
	MOVEM I,ST
	MOVE K,NSMUL(A)
	MUL K,K
	MOVEM L,2*NSMUL(C)
ZZ==0
REPEAT NSMUL-1,[
	MOVE I+ZZ,NSMUL-1-.RPCNT(A)
	MUL I+ZZ,I+ZZ
	MOVE M,ST+2*NSMUL-2-2*.RPCNT
	MOVE ML,ST+2*NSMUL-1-2*.RPCNT
	TLZE M,200000
	AOS I+ZZ
	ASHC M,1
	ADD ML,K-ZZ
	TLZE ML,400000
	AOS M
	MOVEM ML,2*NSMUL-1-2*.RPCNT(C)
	ADD M,J+ZZ
	TLZE M,400000
	AOS I+ZZ
	MOVEM M,2*NSMUL-2-2*.RPCNT(C)
ZZ==K-I-ZZ
]	MOVE I+ZZ,(A)
	IMUL I+ZZ,I+ZZ
	MOVE M,ST
	MOVE ML,ST+1
	ASHC M,1
	ADD ML,K-ZZ
	TLZE ML,400000
	AOS M
	MOVEM ML,1(C)
	ADD M,I+ZZ
	MOVEM M,(C)
	POPJ P,
TERMIN

REPEAT NOSMUL,SMUL \.RPCNT+MNSMUL

SMULTB:	REPEAT NOSMUL,CONC SQM,\.RPCNT+MNSMUL
SQM1:	MOVE I,1(A)
	MOVE K,(A)
	MOVE M,I
	MUL M,M
	MOVEM ML,2(C)
	MUL I,K
	ASHC I,1
	ADD J,M
	TLZE J,400000
	AOS I
	MOVEM J,1(C)
	IMUL K,K
	ADD I,K
	MOVEM I,(C)
	POPJ P,

SQM2:	MOVE I,(A)	;I_A0
	MOVE J,1(A)	;J_A1
	MOVE K,2(A)	;K_A2
	MOVE M,I
	MUL M,J		;M,ML_A0*A1
	MOVE R,I
	MUL R,K		;R,S_A0*A2
	ADD ML,R
	MOVE Q,J
	MUL Q,K		;Q,R_A1*A2
	ADD Q,S
	TLZE Q,400000
	AOS ML
	TLZE ML,400000
	AOS M
	ASHC M,1
	TLZE Q,200000
	AOS ML
	ASHC Q,1
	MUL K,K		;K,L_A2^2
	MOVEM L,4(C)	;C4_L
	ADD R,K
	TLZE R,400000
	AOS Q
	MOVEM R,3(C)	;C3_R
	MUL J,J		;J,K_A1^2
	ADD Q,K
	TLZE Q,400000
	AOS ML
	MOVEM Q,2(C)	;C2_Q
	ADD ML,J
	TLZE ML,400000
	AOS M
	MOVEM ML,1(C)	;C1_ML
	IMUL I,I	;I_A0^2
	ADD M,I
	MOVEM M,(C)	;C0_M
	POPJ P,
MULA1M:	OFFSET I-.
MULA1:	MOVE A,(N)
MULA2:	ADD A,(N)
	TRZE F,CRYF
	AOS A
	TLZE A,400000
	TRO F,CRYF
MULA3:	MOVEM A,(N)
	SOJG N,MULA1
	POPJ P,
OFFSET 0

SQUARE:	CAIG N,1
	JRST SQM1
	CAIG N,2
	JRST SQM2
SQMULA:	CAIG N,MXSMUL
	JRST @SMULTB-MNSMUL(N)
SQMA:	HRLM C,(P)
	PUSH P,A
	PUSH P,N
	ADD C,N
	ASH N,-1
	ADD A,N
	PUSH P,(A)
	SETZM (A)
	PUSHJ P,SQMULA	;A2*B2
	POP P,(A)
	SUB A,N
	SUB C,(P)
	PUSHJ P,SQMULA	;A1*B1
	MOVE S,[MULA1M,,I]
	BLT S,S
	MOVEM N,NM'
	HRR MULA1,A
	HRRI MULA2,@MULA1
	HRR MULA3,T
	PUSHJ P,MULA1
	MOVE A,(MULA1)
	TRZE F,CRYF
	AOS A
	MOVEM A,(MULA3)
	MOVE N,NM
	MOVE A,T
	ADDI T,2(N)
	MOVEI C,-1(T)
	ADD T,(P)
	PUSHJ P,SQMULA	;(A1+A2)*(B1+B2)
	HLRZ C,-2(P)
	MOVEM N,NM
	POP P,N
	POP P,A
	MOVE S,[MS1AM,,K]
	BLT S,S
	HRR MS1B,C
	ADD MS1B,N
	SUBI T,2(N)
	HRRI MS1A,1(T)
	HRR MS1C,T
	HRRI MS1D,1(T)
	SUB T,NM
	MOVE I,N
	PUSHJ P,MS1A
	SKIPL (MS1A)
	JRST MS2
	ANDCAM F,(MS1D)
	SOS (MS1C)
MS2:	HRR MS1B,C
	HRLI MS1E,(SOJGE I,)
	MOVE I,N
	PUSHJ P,MS1A
	MOVE MS1B,NM
	ADD MS1B,C
	MOVEI MS1C,-1(MS1B)
	HRR MS1D,MS1B
	HRLI MS1B,(ADD J,(I))
	HRLI MS1C,(AOS (I))
	MOVE I,N
	PUSHJ P,MS1A
	SKIPL @MS1D
	POPJ P,
MA1:	ANDCAM F,@MS1D
	AOSGE @MS1C
	SOJA I,MA1
	POPJ P,

MS1AM:	OFFSET K-.
MS1A:	MOVE J,(I)
MS1B:	SUB J,(I)
	TLZE J,400000
MS1C:	SOS -1(I)
MS1D:	MOVEM J,(I)
MS1E:	SOJG I,MS1A
	POPJ P,
OFFSET 0

MOD:	MOVN R,N	;CALCULATE NUMBER MOD 2^43-MODN
	HRL A,R
	MOVE M,(A)
	JUMPE N,MOD2
MOD1:	MULI M,MODN
	ADD ML,1(A)
	TLZE ML,400000
	AOS M
	IMULI M,MODN
	ADD M,ML
	TLZE M,400000
	ADDI M,MODN
	AOBJN A,MOD1
MOD2:	IDIV M,[1_43-MODN]
	POPJ P,

SQCHK:	MOVEM A,EPDL		;MOD CHECK OF MULTIPLY; SKIPS IF WINS.
	PUSHJ P,MOD
	MUL ML,ML
	DIV ML,[1_43-MODN]
	MOVE A,C
	ASH N,1
	PUSHJ P,MOD
	ASH N,-1
	MOVE A,EPDL
	CAMN ML,Q
POPJ1:	AOS (P)
CPOPJ:	POPJ P,

CONSTANTS
VAR:
VARIABLES

PDL:	BLOCK LPDL-1
EPDL:	0
FACTS:	0
	BLOCK 2000
PROD:	0
	BLOCK 4000
ST:	BLOCK 2*MXSMUL	;TEMPORARY STORAGE FOR SLOW MULTIPLY
TEMP:	BLOCK 6000

MEMT=<<.+1777>_<-12>>_12

END	INIT

