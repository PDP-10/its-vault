     BIG MACROCODE

ANOTHER MACROCODE OPTIMIZED FOR SPEED

  THE PRESENT MACROCODE STRONGLY EMPHASIZES SPACE EFFICIENCY.
AS A RESULT THERE IS CONSIDERABLE DECODING OVERHEAD.  ALSO ARRAY
OPERATIONS ARE CURRENTLY SLOW BECAUSE ARRAY OPERATIONS FREQUENTLY
REALLY REQUIRE A "REAL ADDRESS", AND THIS REQUIRES AN EXTRA INSTRUCTION
WITH THE CURRENT MACROCODE.

   32 BIT INSTRUCTIONS
   FIRST OPCODE IS A THREE BIT FIELD, GIVING US A MAXIMUM OF 7 FULL LISP
     QUANTITY IMMEDIATE INSTRUCTIONS.
   6 FURTHER BITS AVAILABLE FOR OPERATIONS WHICH TAKE A 24 BIT MEMORY ADDRESS.
     VARIANTS OF THE 7 ABOVE MUST BE INCLUDED HERE FOR CASES WHERE THE ARGUMENT
     IS NOT AN IMMEDIATE LISP QUANTITY (IE A LOCAL VARIABLE, SPECIAL VARIABLE, ARGUMENT,
     ETC).

;FULL REFERENCE INSTRUCTIONS

PUSH
EQ
=
<
>

AR-1-COMPONENT		;FOR REF'ING DEFSTRUCTS.  24 BIT POINTER TO ARRAY, 5 BIT
ARRAY-LEADER-COMPONENT  ; INDEX.  PUSHES RESULT ON STACK.

 ;THESE A CONCESSION TO SPACE EFFICIENCY.  TIME SAVED IS FAIRLY NEBBISH SINCE
 ; CALL MECHANISM IS GOING TO HAVE TO BE CLANKED ANYWAY.
CALL  (ACTUALLY OPEN CALL BLOCK)
RETURN

;NEXT DISPATCH ON 6 BITS.  ENTRIES ARE MOSTLY OF THREE FLAVORS,  DIRECT MEMORY ADDRESS,
; IMMEDIATE-FIXNUM, AND STACK ADDRESS.
  ;DIRECT MEMORY ADDRESS CAN REF VALUE CELLS, FUNCTION CELLS, AND QUOTED CONSTANTS
  ;IMMEDIATE-FIXNUM -- 24 BITS SIGNED FIXNUM
  ;STACK ADDRESS  FURTHER DECODED TO REF VARIOUS THINGS ON STACK INCLUDING TOP-STACK-POP-STACK

AR-1, AS-1, ARRAY-LEADER, STORE-ARRAY-LEADER
AR-1, AS-1, ARRAY-LEADER, STORE-ARRAY-LEADER FIXNUM IMMEDIATE
AR-1-REVERSED, ARRAY-LEADER-REVERSED (ADDRESS POINTS TO ARRAY, INDEX FROM TOP OF STACK).
+ - * / LOGAND LOGIOR LOGXOR
+ - * / LOGAND LOGIOR LOGXOR FIXNUM IMMEDIATE
CXR, ETC
POP
MOVEM
SETE 1+, 1-, CDR, CDDR
LDB DPB  (ADR HAS BYTE SPEC)
VARIANTS OF FULL REF INSTRUCTIONS AS NECESSARY

;BRANCH

;BITTEST

;OTHER RANDOMNESS..
ACTIVATE-OPEN-CALL-BLOCK  (ALSO GIVES DESTINATION FOR RESULT)
MISC N (WITH DESTINATION)