;-*-LISP-*-
;	** (c) Copyright 1980 Massachusetts Institute of Technology **
(SETQ BYPASS-INTERNAL-COMPILE-FLAG NIL	;T TO DO ONLY QFASL FILES
      EVALS-TO-BE-SENT-OVER NIL		;LIST OF FORMS TO BE LOAD-TIME-EVALED
      QFASL-FILE-LIST NIL)		;LIST OF QFASL FILES TO DO
;ABOVE VARIABLES ARE RE-SET BY THE .LISP. (INIT)

(SETQ COLD-LIST-AREA 'INIT-LIST-AREA)	;WHERE FROID PUTS LISTS (USUALLY)

;(DEFUN REPORT MACRO (X)
;  (LIST 'PROGN '(TERPRI MSGFILES)
;	       (LIST 'PRINT (LIST 'QUOTE X) 'MSGFILES)
;	       '(TERPRI MSGFILES)))
(DEFUN REPORT MACRO (X) NIL)

(SETQ AREA-CORRESPONDING-ARRAYS '(AREA-NAME REGION-ORIGIN REGION-LENGTH REGION-FREE-POINTER
   REGION-GC-POINTER REGION-BITS AREA-REGION-LIST AREA-REGION-SIZE AREA-MAXIMUM-SIZE
   REGION-LIST-THREAD))

(SETQ AREAS-WITH-FILL-POINTERS (APPEND AREA-CORRESPONDING-ARRAYS 
				       '(CONSTANTS-AREA MICRO-CODE-ENTRY-AREA 
    MICRO-CODE-ENTRY-NAME-AREA MICRO-CODE-ENTRY-ARGS-INFO-AREA
    MICRO-CODE-ENTRY-ARGLIST-AREA MICRO-CODE-EXIT-AREA 
    MICRO-CODE-ENTRY-MAX-PDL-USAGE
    MICRO-CODE-SYMBOL-AREA MICRO-CODE-SYMBOL-NAME-AREA SUPPORT-ENTRY-VECTOR)))

 ;AREAS IN THIS LIST GET ART-Q-LIST
(SETQ LIST-REFERENCED-AREAS AREAS-WITH-FILL-POINTERS)

 ;AREAS IN THIS LIST GET ART-Q, ALL OTHER AREAS GET ART-32B
(SETQ ARRAY-REFERENCED-AREAS '(SYSTEM-COMMUNICATION-AREA PAGE-TABLE-AREA
			       REGION-SORTED-BY-ORIGIN))

(SETQ IMMEDIATE-WRITE-AREAS '(MACRO-COMPILED-PROGRAM 
   MICRO-COMPILED-PROGRAM P-N-STRING 
   OBT-TAILS WORKING-STORAGE-AREA FASL-TABLE-AREA
   PERMANENT-STORAGE-AREA PDL-AREA EXTRA-PDL-AREA
   FASL-CONSTANTS-AREA FASL-TEMP-AREA
   OBT-TAILS ;FOR NEW VERSION OF QINTERN ONLY!
))

(SETQ BUFFERED-AREAS '(LINEAR-PDL-AREA LINEAR-BIND-PDL-AREA ERROR-LINEAR-PDL-AREA PDL-AREA
	ERROR-BIND-PDL-AREA))

(SETQ USER-DATA-AREAS '(PAGE-TABLE-AREA PHYSICAL-PAGE-DATA RUBOUT-PROCESSOR-AREA
			EXTRA-PDL-AREA))
		;NOT STORED INTO BY COLD-LOAD

(SETQ IMMEDIATE-WRITE-AREAS (APPEND IMMEDIATE-WRITE-AREAS USER-DATA-AREAS))
		;TO SAVE SPACE AT COLD-LOAD TIME

(DECLARE (SPECIAL INITIAL-STACK-GROUP-POINTER))
(SETQ INITIAL-STACK-GROUP-POINTER NIL)

(SETQ CDR-CODES '(FULL-NODE NXTNOT NXTNIL NXTCDR))

(SETQ COLD-OP-EOF 10000
      COLD-OP-DATA 20000 ;FOLLOWED BY LOW HALFWORD, HIGH HALFWORD
			 ;AREA TO STORE INTO x 100 + AREA TO RELOCATE BY
      COLD-OP-HALFWORDS 30000	;LOW 12 BITS IS WORD COUNT, TWICE THAT MANY HALFWORDS FOLLOW
      COLD-OP-INIT-AREA 40000	;LOW 6 BITS AREA NUMBER, NEXT HALFWORD PAGE COUNT
)

;BY PUTTING A PACKAGE NAME ON THE INHIBIT-PACKAGE-LIST, ONE CAN CAUSE STUFF
;  TO BE OMITTED FROM THE OUTPUT FILE, THUS REDUCING THE SIZE OF THE FILE, ETC.
;  THIS IS MAINLY OF VALUE WHEN WORKING ON LOW LEVEL STUFF THAT WOULDNT "GET"
;  TO THE OMITTED STUFF ANYWAY.
; CURRENTLY RECOGNIZED PACKAGES:
;   READ FASLOAD EVAL UCODE-ENTRIES LIST-CONSTANTS SYSTEM.
;ABOVE IS NOT TRUE, PROBABLY.

(DEFUN CLINI (INHIBIT-PACKAGE-LIST)
  (PROG NIL 
	(REPORT CLINI BEGINS) 
	(ALLREMPROP 'Q-ATOM-HEAD)
	(ASSIGN-VALUES AREA-LIST 0)
	(COND (WRITE-OUTPUT (WRITE-AREA-SIZES)))
	(ASSIGN-VALUES CDR-CODES 30.)
	(MAPC (FUNCTION INIT-AREA) AREA-LIST)
;NIL AND T MUST BE STORED MANUALLY SINCE QNIL AND QTRUTH WOULD NOT BE BOUND WHEN NEEDED
	(REPORT START MAKING T AND NIL)
	(SETQ QNIL
	 (LIST 'QZSYM (STOREQ 'RESIDENT-SYMBOL-AREA 
			      (CONS 'NXTCDR 
				    (CONS 'QZSYMH 
					  (CDR (STORE-STRING 'P-N-STRING 'NIL)))))))
	(STOREQ 'RESIDENT-SYMBOL-AREA 
		(CONS  'NXTCDR QNIL))
	(STOREQ 'RESIDENT-SYMBOL-AREA 
		(CONS  'NXTCDR (CONS 'QZNULL (CDR QNIL))))
	(STOREQ 'RESIDENT-SYMBOL-AREA 
		(CONS  'NXTCDR QNIL))
	(STOREQ 'RESIDENT-SYMBOL-AREA 
		(CONS  'NXTNIL QNIL))
	(PUTPROP 'NIL QNIL 'Q-ATOM-HEAD)
	(SETQ QTRUTH
	 (LIST 'QZSYM (STOREQ 'RESIDENT-SYMBOL-AREA 
			      (CONS 'NXTCDR 
				    (CONS 'QZSYMH 
					  (CDR (STORE-STRING 'P-N-STRING 'T)))))))
	(STOREQ 'RESIDENT-SYMBOL-AREA 
		(CONS  'NXTCDR QTRUTH))
	(STOREQ 'RESIDENT-SYMBOL-AREA
		(CONS  'NXTCDR (CONS 'QZNULL (CDR QTRUTH))))
	(STOREQ 'RESIDENT-SYMBOL-AREA 
		(CONS  'NXTCDR QNIL))
	(STOREQ 'RESIDENT-SYMBOL-AREA 
		(CONS  'NXTNIL QNIL))
	(PUTPROP 'T QTRUTH 'Q-ATOM-HEAD)
;	(INIT-OB-TBL)
;	(QOBLIST-ENTER  QNIL NIL)
;	(QOBLIST-ENTER  QTRUTH T)
;	(STOREPROP '*INITIAL-OBARRAY 1 '(QZARYP (CONTROL-TABLES 0)))
;	(STOREPROP 'OBARRAY 1 '(QZARYP (CONTROL-TABLES 0)))
;	(STOREIN-Q-VALUE-CELL '*INITIAL-OBARRAY (QINTERN NIL)) ;DON'T LOSE IN LISP-REINITIALIZE FIRST TIME
	(STORE-LIST-OF-ATOMS 'AREA-NAME AREA-LIST)
	(MAPC (FUNCTION STORE-CONSTANT) CONSTANTS-PAGE)	;SET UP CONSTANTS PAGE
	(INIT-SCRATCH-PAD-AREA)
	(INIT-SYSTEM-COMMUNICATION-AREA)
;	(REPORT INIT READ TABLE)
;   (COND ((NOT (MEMQ 'READ INHIBIT-PACKAGE-LIST))
;	(INIT-READ-TBL) ))

	(STOREIN-Q-VALUE-CELL 'AREA-LIST '(QZLIST (AREA-NAME 0))) ;IS THIS GOING TO WIN?
;	(STOREIN-Q-VALUE-CELL 'NEXT-AREA (LIST 'QZFIX (LENGTH AREA-LIST)))
	(STOREIN-Q-VALUE-CELL 'CONSTANTS-PAGE '(QZLIST (CONSTANTS-AREA 0)))

	(REPORT STORE Q CORRESPONDING VARIABLE LISTS)
	(MAPC (FUNCTION STORE-LISP-VALUE-LIST) Q-CORRESPONDING-VARIABLE-LISTS)
	(REPORT DONE STORING Q CORRESPONDING VARIABLE LISTS)

;SPECIAL INITIALIZATION BELOW.  MUST FOLLOW MAP OVER Q-CORRESPONDING-VARIABLE-LISTS.
; THESE FROBS STORE OVER PREVIOUS INITIALIZATION.

;SET UP ARRAY-TYPES SYMBOL (BOTH VALUE AND FUNCTION CELLS).
;  THE FUNCTION CELL IS AN ARRAY WHICH GIVES MAPS NUMERIC ARRAY TYPE TO SYMBOLIC NAME.
;  THE VALUE CELL IS A LIST POINTER INTO THE ABOVE ARRAY, SO IS AN ORDERED LIST
;   OF THE ARRAY TYPES.
	(STOREIN-Q-VALUE-CELL 'BASE '(QZFIX 8))
	(STOREIN-Q-VALUE-CELL 'IBASE '(QZFIX 8))
	(STOREIN-Q-VALUE-CELL '*NOPOINT (QINTERN 'NIL))
	(INIT-Q-ARRAY 'CONTROL-TABLES 'ARRAY-TYPES 2 'ART-Q-LIST '(32.) NIL NIL)
	(STORE-LIST-OF-ATOMS 'CONTROL-TABLES ARRAY-TYPES)
	(STORE-NILS 'CONTROL-TABLES (- 32. (LENGTH ARRAY-TYPES)))
	(STOREIN-Q-VALUE-CELL 'ARRAY-TYPES 
		(GET-LIST-POINTER-INTO-Q-ARRAY (GETPROP 'ARRAY-TYPES 2)))

    ;SET UP THE ARRAY-ELEMENTS-PER-Q ARRAY.
	(INIT-Q-ARRAY 'CONTROL-TABLES 'ARRAY-ELEMENTS-PER-Q 2 ;FCN
			'ART-Q-LIST  '(32.) NIL NIL)
	(STORE-LIST-OF-ATOMS 'CONTROL-TABLES (MAKE-ORDERED-ARRAY-LIST ARRAY-ELEMENTS-PER-Q))
	(STORE-NILS 'CONTROL-TABLES (- 32. (LENGTH ARRAY-TYPES)))
    ;VALUE CELL OF ARRAY-ELEMENTS-PER-Q HAS ASSQ LIST.  IS NOT SAME AS ARRAY.
	;SET UP THE ARRAY-BITS-PER-ELEMENT ARRAY, SIMILAR
	(INIT-Q-ARRAY 'CONTROL-TABLES 'ARRAY-BITS-PER-ELEMENT 2 ;FCN
		      'ART-Q-LIST '(32.) NIL NIL)
	(STORE-LIST-OF-ATOMS 'CONTROL-TABLES (MAKE-ORDERED-ARRAY-LIST ARRAY-BITS-PER-ELEMENT))
	(STORE-NILS 'CONTROL-TABLES (- 32. (LENGTH ARRAY-TYPES)))
   ;SET UP Q-DATA-TYPES
	(INIT-Q-ARRAY 'CONTROL-TABLES 'Q-DATA-TYPES 2 'ART-Q-LIST '(32.) NIL 
		(LIST (MAKE-Q-LIST 'INIT-LIST-AREA (LENGTH Q-DATA-TYPES))))
	(STORE-LIST-OF-ATOMS 'CONTROL-TABLES Q-DATA-TYPES)
	(STORE-NILS 'CONTROL-TABLES (- 32. (LENGTH Q-DATA-TYPES)))
	(STOREIN-Q-VALUE-CELL 'Q-DATA-TYPES 
		(GET-LIST-POINTER-INTO-Q-ARRAY (GETPROP 'Q-DATA-TYPES 2)))

	(STORE-A-MEM-LOCATION-NAMES)
;	(STOREIN-Q-VALUE-CELL 'DEFAULT-ARRAY-AREA (LIST 'QZFIX WORKING-STORAGE-AREA))
	(SETQ MICRO-CODE-POINTER-VECTOR NIL)
	(SETQ MICRO-CODE-ENTRY-VECTOR NIL)
	(REPORT ABOUT TO STORE MISC U ENTRY LINKS)
   (COND ((NOT (MEMQ 'UCODE-ENTRIES INHIBIT-PACKAGE-LIST))
	(STORE-MISC-U-ENTRY-LINKS) ))
	(REPORT DONE STORING MISC U ENTRY LINKS)
;   (COND ((NOT (MEMQ 'READ INHIBIT-PACKAGE-LIST))
;	(STOREPROP '/' 3 (MAKE-Q-LIST 
;				'INIT-LIST-AREA 
;				'(READ-MACRO *INTERNAL-SINGLE-QUOTE-MACRO)))
;	(STOREPROP '/; 3 (MAKE-Q-LIST 
;				'INIT-LIST-AREA 
;				'(READ-MACRO *INTERNAL-SEMI-COLON-MACRO)))
;	(STOREPROP '/` 3 (MAKE-Q-LIST 
;				'INIT-LIST-AREA 
;				'(READ-MACRO *INTERNAL-BACK-QUOTE-MACRO)))
;	(STOREPROP '/, 3 (MAKE-Q-LIST 
;				'INIT-LIST-AREA 
;				'(READ-MACRO *INTERNAL-COMMA-MACRO)))
;	(STOREPROP '/#Q 3 (MAKE-Q-LIST 
;				'INIT-LIST-AREA 
;				'(READ-MACRO *INTERNAL-/#Q-MACRO)))
;	(STOREPROP '/#M 3 (MAKE-Q-LIST 
;				'INIT-LIST-AREA 
;				'(READ-MACRO *INTERNAL-/#M-MACRO)))
;	(STOREPROP '/#/# 3 (MAKE-Q-LIST 
;				'INIT-LIST-AREA 
;				'(READ-MACRO *INTERNAL-/#/#-MACRO)))
;	(STOREPROP '/: 3 (MAKE-Q-LIST 
;				'INIT-LIST-AREA 
;				'(READ-MACRO *INTERNAL-COLON-MACRO)))
; ))
   (REPORT DONE WITH THAT SHIT)
))

(DEFUN STORE-A-MEM-LOCATION-NAMES NIL 
    (DO ((NAME A-MEMORY-LOCATION-NAMES (CDR NAME))
	 (LOCN (+ 40 A-MEMORY-VIRTUAL-ADDRESS) (1+ LOCN)) )
	((NULL NAME))
     (STORE-MEM-LOCATION (CAR NAME) LOCN))
    (DO NAME M-MEMORY-LOCATION-NAMES (CDR NAME) (NULL NAME)
     (STORE-MEM-LOCATION (CAR NAME) (GET (CAR NAME) 'FORWARDING-VIRTUAL-ADDRESS))) )

(DEFUN STORE-MEM-LOCATION (NAME LOCN)
	(STOREIN-Q-VALUE-CELL NAME  
		(LIST 'QZ1QF LOCN)))

(DEFUN MAKE-ORDERED-ARRAY-LIST (ASSOC-LIST)
	(MAPCAR (FUNCTION (LAMBDA (X) (CDR (ASSQ X ASSOC-LIST))))
		ARRAY-TYPES))

;THE ORDER STORE-MISC-LINK IS CALLED DETERMINES THE FINAL MICRO-CODE-ENTRY
; NUMBERS THAT ARE ASSIGNED.  HOWEVER, EXCEPT FOR 0 WHICH MUST BE *CATCH,
; MICRO-CODE-ENTRY NUMBERS ARE UNCONSTRAINNED AND INDEPENDANT FROM EVERYTHING
; ELSE.  SO THE OTHER ENTRIES BELOW MAY BE IN ANY ORDER.
(DEFUN STORE-MISC-U-ENTRY-LINKS NIL 
  (PROG NIL 
	(STORE-MISC-LINK '*CATCH) ;MUST BE FIRST
	(MAPC (FUNCTION STORE-MISC-LINK-1) MISC-FUNCTION-LIST)

	;; Now set up the first 600 locations of MICRO-CODE-SYMBOL-NAME-AREA
	(INIT-MICRO-CODE-SYMBOL-NAME-AREA)
	(MAPC (FUNCTION STORE-MICRO-CODE-SYMBOL-NAME) MISC-INSTRUCTION-LIST)
))

;STILL TO MAKE ACCESSIBLE TO INTERPRETER:
;BIND 

(DEFUN INIT-SCRATCH-PAD-AREA NIL 
	(PROG (TEM)
	   (INIT-AREA-CONTENTS 'SCRATCH-PAD-INIT-AREA '(QZFIX 0))
	   (SCRATCH-STORE-Q 'INITIAL-TOP-LEVEL-FUNCTION  
		(CONS 'QZLOC  
		      (CONS '2 (CDR (QINTERN 'LISP-TOP-LEVEL)))))
;	   (SCRATCH-STORE-Q 'TRAP-HANDLER 
;		(CONS 'QZLOC 
;		  (CONS 'COLD-LOAD-RELOCATE-BY-MEM 
;			(CONS '2 (CDR (QINTERN 'LISP-ERROR-HANDLER))))))
	   (MAKE-INITIAL-STACK-GROUP-STRUCTURE)
	   (SCRATCH-STORE-Q 'CURRENT-STACK-GROUP INITIAL-STACK-GROUP-POINTER)
	   (SCRATCH-STORE-Q 'INITIAL-STACK-GROUP INITIAL-STACK-GROUP-POINTER)
	   (SCRATCH-STORE-Q 'ERROR-HANDLER-STACK-GROUP QNIL)  ;INITIALIZED AT RUN TIME
	   (SCRATCH-STORE-Q 'DEFAULT-CONS-AREA  (LIST 'QZFIX WORKING-STORAGE-AREA))
))


(DEFUN REMOVE-S-EXP-LIST (X)
	(MAPC (FUNCTION REMOVE-S-EXP) (SYMEVAL (CAR X))))

(DEFUN REMOVE-S-EXP (X)
	(REMPROP (COND ((ATOM X) X) (T (CADR X))) 'EXPR))


(DEFUN TEST-MAKE-COLD NIL 
	(MAKE-REAL-COLD '(FASLOAD)) )

(DEFUN MAKE-REAL-COLD (INHIBIT-PACKAGE-LIST)
	(MAKE-COLD-WORK INHIBIT-PACKAGE-LIST 'MACRO-COMPILE)
	(COLD-CLOSE '(CADR CLOAD)))

(DEFUN MAKE-COLD-WORK (INHIBIT-PACKAGE-LIST COMPILE-FLAVOR)
  (PROG NIL 
	(SETQ EVALS-TO-BE-SENT-OVER NIL)	;IN CASE RESTARTING AFTER BOMBING OUT
	(MAKE-COLD-INITIALIZE)
	(MAKE-COLD-INITIALIZE-OUTPUT INHIBIT-PACKAGE-LIST)
	(MAPC '(LAMBDA (X)
		(STOREPROP (CAR X) 2 (MAKE-Q-LIST 'INIT-LIST-AREA (CONS 'MACRO (CDR X)))))
	      MACROS-TO-BE-SENT-OVER)
	(AND BYPASS-INTERNAL-COMPILE-FLAG (GO FOO))
	(QC-PROCESS-INITIALIZE)
	(SETQ INHIBIT-OPTIMIZATION-FLAG NIL)		 ;TRY TO WIN...
	(MAKE-COLD-QC-MAP INHIBIT-PACKAGE-LIST 
			  (FUNCTION QC-PUT-Q-ARGS-PROP)
			  COMPILE-FLAVOR 
			  'COLD)
;	(MAKE-COLD-QC-MAP INHIBIT-PACKAGE-LIST 		 ;PUT FLAGS ON GUYS GOING TO
;			  (FUNCTION QC-FLAG-TYPE-COMPILE);MICRO-COMPILE OR MESA-COMPILE
;			  COMPILE-FLAVOR 
;			  'COLD)
	(MAKE-COLD-QC-MAP INHIBIT-PACKAGE-LIST 		 ;PUT FURTHER FLAGS SO AS TO
			  (FUNCTION QC-PUT-DEPEND-PROP)  ;USE MICRO-MICRO OR MESA-MESA
			  COMPILE-FLAVOR 		 ;EFFICIENT TYPE CALLS TO
			  'COLD)			 ;THOSE GUYS
	(COND ((GET 'READ-LIST 'DEPEND-ON-BEING-MICRO-COMPILED)  ;KLUDGE TO AVOID RECURSIVE
		(DEFPROP READ-LIST (READ-LIST1) DEPEND-ON-BEING-MICRO-COMPILED)))  ;MICRO-CALLS
								 ;NESTED TOO DEEPLY.
	(MAKE-COLD-QC-MAP INHIBIT-PACKAGE-LIST 		 ;DO THE WORK..
			  (FUNCTION QC-TRANSLATE-FUNCTION)
			  COMPILE-FLAVOR 
			  'COLD)
    FOO 
;RUN NEW QFASL STUFF
	(MAPC 'COLD-FASLOAD QFASL-FILE-LIST)
	;Don't let list-structure portion of the readtable end up in a read-only area
	(LET ((COLD-LIST-AREA 'PROPERTY-LIST-AREA))
	  (COLD-FASLOAD '((LMIO)RDTBL QFASL)))  ;Random list-structured area
	;THIS KLUDGE FIXES UP MACROS, SINCE THE FUNCTION MACRO IS NOT DEFINED YET
	;(BY SPECIAL DISPENSATION WE HAVE DEFPROP, PUTPROP, AND SPECIAL AROUND)
	;FURTHERMORE, SETQ ISN'T DEFINED YET, LOAD-TIME-SETQ FASL-OP SHOULD HAVE BEEN USED
	(DO L EVALS-TO-BE-SENT-OVER (CDR L) (NULL L)
 	    (COND ((MEMQ (CAAR L) '(SETQ AND OR COND))
		   (BARF (CAR L) "WILL GET UNDEFINED FUNCTION DURING INITIALIZATION" 'BARF))
		  ((EQ (CAAR L) 'MACRO)
		   (RPLACA L ;`(FSET' ,(CADAR L) '(MACRO LAMBDA ,(CADDAR L) . ,(CDDDAR L)))
			     ;TO SAVE ADDRESS SPACE (GIVE ME A FUCKEN BREAK!)
			     (SUBLIS (LIST (CONS 'FCN (CADAR L))
					   (CONS 'NAME (CADDAR L))
					   (CONS 'BODY (CDDDAR L)))
				     '(FSET 'FCN '(MACRO LAMBDA NAME . BODY)))
			     ))))
	(STOREIN-Q-VALUE-CELL 'LISP-CRASH-LIST
			      ;; This MAKE-Q-LIST must not use the FASL-TEMP-AREA,
			      ;; because the list structure being created includes
			      ;; definitions of important macros.  The area used
			      ;; must not be an immediate write area.
			      (MAKE-Q-LIST 'INIT-LIST-AREA
					   EVALS-TO-BE-SENT-OVER))
;EVERYTHING COMPILED, ETC. CLOSE OFF AND WRITE IT OUT
	(Q-STORAGE-FINALIZE)
	(COLD-WRITE-OUT)
	(RETURN T)))

(DEFUN MAKE-COLD-QC-MAP 
	(INHIBIT-PACKAGE-LIST PROCESS-FUNCTION COMPILE-FLAVOR OUTPUT-TYPE)
  (PROG NIL 
	(QC-PROCESS-FUNCTION-LIST PROCESS-FUNCTION BASIC-Q-FUNCTIONS 
			COMPILE-FLAVOR OUTPUT-TYPE)
	(QC-PROCESS-FUNCTION-LIST PROCESS-FUNCTION (APPEND TVCOLD KBD SCHEDU)
			COMPILE-FLAVOR OUTPUT-TYPE)
   (COND ((NULL (MEMQ 'READ INHIBIT-PACKAGE-LIST))
	(QC-PROCESS-FUNCTION-LIST PROCESS-FUNCTION READ-PACKAGE-FUNCTIONS 
			COMPILE-FLAVOR OUTPUT-TYPE) ))
   (COND ((NULL (MEMQ 'FASLOAD INHIBIT-PACKAGE-LIST))
	(QC-PROCESS-FUNCTION-LIST PROCESS-FUNCTION FASLOAD-PACKAGE-FUNCTIONS 
			COMPILE-FLAVOR OUTPUT-TYPE) ))
   (COND ((NULL (MEMQ 'EVAL INHIBIT-PACKAGE-LIST))
	(QC-PROCESS-FUNCTION-LIST PROCESS-FUNCTION EVAL-PACKAGE-FUNCTIONS 
			COMPILE-FLAVOR OUTPUT-TYPE) ))
   (COND ((NULL (MEMQ 'SYSTEM INHIBIT-PACKAGE-LIST))
	(QC-PROCESS-FUNCTION-LIST PROCESS-FUNCTION SYSTEM-PACKAGE-FUNCTIONS 
			COMPILE-FLAVOR OUTPUT-TYPE) ))
   (RETURN T)))

(DEFUN MAKE-COLD-INITIALIZE NIL
  (PROG NIL 
	(ALLREMPROP 'Q-ARGS-PROP)
	(ALLREMPROP 'Q-HEAD-POINTER)
;	(ALLREMPROP 'MICRO-COMPILED)
	(ALLREMPROP 'DEPEND-ON-BEING-MICRO-COMPILED)
	(ALLREMPROP 'IMMEDIATE-WRITE-AREA)
	(ALLREMPROP 'BUFFERED-AREA)
))

(DEFUN MAKE-COLD-INITIALIZE-OUTPUT (INHIBIT-PACKAGE-LIST) 
  (PROG NIL 
	(COLD-OPEN '((DSK LISPM1)_COLD_ OUTPUT))
	(SETQ WRITE-OUTPUT T)
	(MAPC (FUNCTION (LAMBDA (X) (PUTPROP X T 'IMMEDIATE-WRITE-AREA))) 
	       IMMEDIATE-WRITE-AREAS)
	(MAPC (FUNCTION (LAMBDA (X) (PUTPROP X T 'BUFFERED-AREA)))
	      BUFFERED-AREAS)
	(PUTPROPL RM-AREA-SIZES 'AREA-SIZE)
	(CLINI INHIBIT-PACKAGE-LIST)
))

;THESE NEXT TWO FUNCTIONS MAY NOT BE USED ANYMORE
(DEFUN WRITE-Q-COMP-PROPS (SYM)
   (PROG (TEM)
	(COND ((SETQ TEM (GET SYM 'Q-ARGS-PROP))
		(WRITE-PROP SYM TEM 'Q-ARGS-PROP)))
;	(COND ((SETQ TEM (GET SYM 'MICRO-COMPILED))
;		(WRITE-PROP SYM TEM 'MICRO-COMPILED)))
	(COND ((SETQ TEM (GET SYM 'DEPEND-ON-BEING-MICRO-COMPILED))
		(WRITE-PROP SYM TEM 'DEPEND-ON-BEING-MICRO-COMPILED)))
))

(DEFUN WRITE-PROP (SYM PROP INDICATOR)
	(TERPRI)
	(PRINC '/(DEFPROP/ )
	(PRIN1 SYM)
	(PRINC '/ )
	(PRIN1 PROP)
	(PRINC '/ )
	(PRIN1 INDICATOR)
	(PRINC '/))
)

(DEFUN Q-STORAGE-FINALIZE NIL
 (PROG NIL 
      (MAPC (FUNCTION STORE-SUPPORT-VECTOR) SUPPORT-VECTOR-CONTENTS)
      (STORE-NXTNIL-CDR-CODE 'SUPPORT-ENTRY-VECTOR)
      (MAPC (FUNCTION STORE-DISPLACED-ARRAY-POINTER) AREA-LIST)
      (SCRATCH-STORE-Q 'ACTIVE-MICRO-CODE-ENTRIES 
	(LIST 'QZFIX (- (ARRAYCALL T (GET 'MICRO-CODE-ENTRY-AREA 'ARRAY) 0) 2)))
      (STORE-NXTNIL-CDR-CODE 'CONSTANTS-AREA)
      (STORE-NXTNIL-CDR-CODE 'SCRATCH-PAD-INIT-AREA)
      (STORE-NXTNIL-CDR-CODE 'AREA-NAME)
      (STORE-NXTNIL-CDR-CODE 'MICRO-CODE-ENTRY-AREA)
      (STORE-NXTNIL-CDR-CODE 'MICRO-CODE-ENTRY-NAME-AREA)
      (STORE-NXTNIL-CDR-CODE 'MICRO-CODE-ENTRY-ARGS-INFO-AREA)
      (STORE-NXTNIL-CDR-CODE 'MICRO-CODE-ENTRY-ARGLIST-AREA)
      (STORE-NXTNIL-CDR-CODE 'MICRO-CODE-EXIT-AREA)
))

(DEFUN STORE-Q-ARRAY-LEADER (ARRAYP IDX DATA)
  (PROG (ADR)
	(COND ((ATOM ARRAYP) (BARF ARRAYP 'STORE-Q-ARRAY-LEADER 'BARF)))
	(SETQ ADR (LIST (CAR ARRAYP) (- (CADR ARRAYP) 
					(+ 2 IDX)))) ;1 FOR ARRAY HEADER, 1 FOR LDR LEN
	(STORE-CONTENTS ADR DATA)))

(DEFUN MAKE-INITIAL-STACK-GROUP-STRUCTURE NIL
	(SETQ INITIAL-STACK-GROUP-POINTER 
	  (MAKE-STACK-GROUP-STRUCTURE 'MAIN-STACK-GROUP 'CONTROL-TABLES 
	     'LINEAR-PDL-AREA 'LINEAR-BIND-PDL-AREA SG-STATE-ACTIVE))
)
 
(DEFUN MAKE-STACK-GROUP-STRUCTURE (NAME SG-AREA LINEAR-AREA L-B-P-AREA INITIAL-STATE) 
  (PROG (SG PDL-ARRAY L-B-P-ARRAY REG-LEN SPEC-LEN)
	(SETQ SG (CAR (INIT-Q-ARRAY SG-AREA 
				NIL NIL 'ART-STACK-GROUP-HEAD '(0)
		NIL (LENGTH STACK-GROUP-HEAD-LEADER-QS))))
	(SETQ PDL-ARRAY
	      (CAR (INIT-Q-ARRAY LINEAR-AREA NIL NIL 'ART-REG-PDL 
		     (LIST (SETQ REG-LEN (- (* PAGE-SIZE (GET-AREA-SIZE 'LINEAR-PDL-AREA))
					    (+ (LENGTH REG-PDL-LEADER-QS) 4))))
  ;4: LEADER HEADER + LEADER-LENGTH-Q + ARRAY-HEADER-Q + LONG-LENGTH-Q
		     NIL (LENGTH REG-PDL-LEADER-QS))))
;	(STORE (FUNCALL LINEAR-AREA 0) (+ (FUNCALL LINEAR-AREA 0) REG-LEN)) ;ADVANCE FREE POINTER
	(SETQ L-B-P-ARRAY
	      (CAR (INIT-Q-ARRAY L-B-P-AREA NIL NIL 'ART-SPECIAL-PDL  
		     (LIST (SETQ SPEC-LEN (- (* PAGE-SIZE
						(GET-AREA-SIZE 'LINEAR-BIND-PDL-AREA))
					     (+ (LENGTH SPECIAL-PDL-LEADER-QS) 4))))
		     NIL (LENGTH SPECIAL-PDL-LEADER-QS))))
;	(STORE (FUNCALL L-B-P-AREA 0) (+ (FUNCALL L-B-P-AREA 0) SPEC-LEN)) ;ADVANCE FREE POINTER
	(STACK-GROUP-LINKUP SG PDL-ARRAY L-B-P-ARRAY)
	(STORE-Q-ARRAY-LEADER SG SG-STATE (LIST 'QZFIX INITIAL-STATE))
	(STORE-Q-ARRAY-LEADER SG SG-NAME (MAKE-Q-LIST 'INIT-LIST-AREA NAME))
	(STORE-Q-ARRAY-LEADER SG SG-REGULAR-PDL-LIMIT (MAKE-Q-LIST 'INIT-LIST-AREA REG-LEN))
	(STORE-Q-ARRAY-LEADER SG SG-SPECIAL-PDL-LIMIT (MAKE-Q-LIST 'INIT-LIST-AREA SPEC-LEN))
	(COND ((GET LINEAR-AREA 'BUFFERED-AREA)
		(UNBUFFER-AREA LINEAR-AREA)))
	(COND ((GET L-B-P-AREA 'BUFFERED-AREA)
		(UNBUFFER-AREA L-B-P-AREA)))
	(RETURN (LIST 'QZSTKG SG))))

(DEFUN STACK-GROUP-LINKUP (SG PDL-ARRAYP L-B-P-ARRAYP)
  (PROG NIL 
	(STORE-Q-ARRAY-LEADER L-B-P-ARRAYP SPECIAL-PDL-SG-HEAD-POINTER 
			(LIST 'QZSTKG SG))
	(STORE-Q-ARRAY-LEADER PDL-ARRAYP REG-PDL-SG-HEAD-POINTER 
			(LIST 'QZSTKG SG))
	(STORE-Q-ARRAY-LEADER SG SG-SPECIAL-PDL
			(LIST 'QZARYP L-B-P-ARRAYP))
	(STORE-Q-ARRAY-LEADER SG SG-REGULAR-PDL 
			(LIST 'QZARYP PDL-ARRAYP))
	(STORE-Q-ARRAY-LEADER SG SG-INITIAL-FUNCTION-INDEX (LIST 'QZFIX 3))
))

 ;THIS BETTER AGREE WITH THE ORDER OF THE LIST OF QS IN QCOM
(DEFUN INIT-SYSTEM-COMMUNICATION-AREA NIL 
  (STOREQ 'SYSTEM-COMMUNICATION-AREA '(QZLOC (REGION-ORIGIN 0)))
  (STOREQ 'SYSTEM-COMMUNICATION-AREA (LIST 'QZFIX 10000000)) ;ASSUME COLD LOAD < 4 MOBIES
  (STOREQ 'SYSTEM-COMMUNICATION-AREA '(QZLOC (PAGE-TABLE-AREA 0)))
  (STOREQ 'SYSTEM-COMMUNICATION-AREA (LIST 'QZFIX (LSH (GET-AREA-SIZE 'PAGE-TABLE-AREA) 
						        8)))
  (STOREQ 'SYSTEM-COMMUNICATION-AREA (QINTERN 'OBARRAY))
  (STOREQ 'SYSTEM-COMMUNICATION-AREA (LIST 'QZFIX 0))	;%SYS-COM-REMOTE-KEYBOARD
  (STOREQ 'SYSTEM-COMMUNICATION-AREA (LIST 'QZFIX 0))	;%SYS-COM-MICRO-LOAD-M-DATA
  (STOREQ 'SYSTEM-COMMUNICATION-AREA (LIST 'QZFIX 0))	;%SYS-COM-MICRO-LOAD-A-DATA
  (STOREQ 'SYSTEM-COMMUNICATION-AREA (LIST 'QZFIX 0))	;%SYS-COM-MICRO-LOAD-ADDRESS
  (STOREQ 'SYSTEM-COMMUNICATION-AREA (LIST 'QZFIX 0))	;%SYS-COM-MICRO-LOAD-FLAG
  (STOREQ 'SYSTEM-COMMUNICATION-AREA (LIST 'QZFIX 0))	;%SYS-COM-UNIBUS-INTERRUPT-LIST
  (STOREQ 'SYSTEM-COMMUNICATION-AREA (LIST 'QZFIX 0))	;%SYS-COM-TEMPORARY
  (STOREQ 'SYSTEM-COMMUNICATION-AREA (LIST 0))  ;%SYS-COM-FREE-AREA/#-LIST (FIXED LATER)
  (STOREQ 'SYSTEM-COMMUNICATION-AREA (LIST 0))	;%SYS-COM-FREE-REGION/#-LIST (FIXED LATER)
  (STOREQ 'SYSTEM-COMMUNICATION-AREA (LIST 'QZFIX 100000)) ;%SYS-COM-MEMORY-SIZE (ASSUME 32K)
  (STOREQ 'SYSTEM-COMMUNICATION-AREA (LIST 'QZFIX 100000)) ;%SYS-COM-WIRED-SIZE
							;NOTE THIS IS SET BY LOAD-COLD.
  (STOREQ 'SYSTEM-COMMUNICATION-AREA QNIL)	;CHAOS
  (STOREQ 'SYSTEM-COMMUNICATION-AREA QNIL)	;CHAOS
  (STOREQ 'SYSTEM-COMMUNICATION-AREA QNIL)	;CHAOS
  (STOREQ 'SYSTEM-COMMUNICATION-AREA (LIST 'QZFIX 0))	;DEBUGGER
  (STOREQ 'SYSTEM-COMMUNICATION-AREA (LIST 'QZFIX 0))	;DEBUGGER
  (STOREQ 'SYSTEM-COMMUNICATION-AREA (LIST 'QZFIX 0))	;DEBUGGER
  (STOREQ 'SYSTEM-COMMUNICATION-AREA (LIST 'QZFIX 0))	;DEBUGGER
  (STOREQ 'SYSTEM-COMMUNICATION-AREA QNIL)	;MAJOR-VERSION
  (OR (= 24. (LENGTH SYSTEM-COMMUNICATION-AREA-QS))
      (ERROR '|YOU DIDN'T UPDATE INIT-SYSTEM-COMMUNICATION-AREA IN COLD| 24. 'FAIL-ACT)))
