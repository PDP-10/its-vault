;LEXIPHAGE

(DECLARE (NEWIO T))

(OR (GET 'TVINIT 'SUBR)
    (FASLOAD TVOUT FASL DSK TVLISP))

(DECLARE (SPECIAL TV))

(SETQ TV-IOR-MODE 34_33 TV-ANDC-MODE 4_33)

(DECLARE (SPECIAL TV-IOR-MODE TV-ANDC-MODE)
	 (NOTYPE (DRAW-TV-LINE FIXNUM FIXNUM FIXNUM FIXNUM)
		 (DRAWMODE FIXNUM)))

(DEFUN DISPLAY-LEXIPHAGE ()
  ((LAMBDA (LEXISOURCE)
    (DRAWMODE TV-ANDC-MODE)
    (DO I 0 (1+ I) (= I 4000)
	(DECLARE (FIXNUM I))
	(STORE (ARRAYCALL FIXNUM TV I) -20))
    (DRAWMODE TV-IOR-MODE)
    (CURSORPOS 20. 0)
    (ERRSET (FILLARRAY TV LEXISOURCE) NIL)
    (CLOSE LEXISOURCE))
   (OPEN '|DSK:MOON;LEXIMG PHAGE| '(IN FIXNUM))))

(DEFUN JAWS (X Y DX DY)
   (DECLARE (FIXNUM X Y DX DY))
   (DRAW-TV-LINE X Y (+ X DX) (+ Y DY))
   (DRAW-TV-LINE X Y (+ X DX) (- Y DY)))

(DEFUN UNJAWS (X Y DX DY)
   (DECLARE (FIXNUM X Y DX DY))
   (SPECIAL-ERASE-TV-LINE X Y (+ X DX) (+ Y DY))
   (SPECIAL-ERASE-TV-LINE X Y (+ X DX) (- Y DY)))

(DECLARE (ARRAY* (FIXNUM (DX-TABLE 1) (DY-TABLE 1))))

(DEFUN MAKE-ANGLE-TABLES ()
  (ARRAY DX-TABLE FIXNUM 90.)
  (ARRAY DY-TABLE FIXNUM 90.)
  (DO I 0 (1+ I) (= I 90.)
    (STORE (DX-TABLE I) (FIX (*$ 30.0 (COS (//$ (FLOAT I) 57.0)))))
    (STORE (DY-TABLE I) (FIX (*$ 30.0 (SIN (//$ (FLOAT I) 57.0))))) ))

(MAKE-ANGLE-TABLES)

(DEFUN GOBBLE ()
  (DO ((Y 77) (X 100))
      (NIL)
    (DECLARE (FIXNUM X Y))
    (DO ((ANGLE 75. (- ANGLE 1))
	 (OLDX X) (OLDY Y) (OLDA 75.))
	((= ANGLE 20.)
	 (UNJAWS OLDX OLDY (DX-TABLE OLDA) (DY-TABLE OLDA)))
      (DECLARE (FIXNUM ANGLE OLDX OLDY OLDA))
      (DRAWMODE TV-IOR-MODE)
      (JAWS X Y (DX-TABLE ANGLE) (DY-TABLE ANGLE))
      (DRAWMODE TV-ANDC-MODE)
      (UNJAWS OLDX OLDY (DX-TABLE OLDA) (DY-TABLE OLDA))
      (SETQ OLDX X OLDY Y OLDA ANGLE)
      (AND (= 0 (BOOLE 1 ANGLE 3)) (SETQ X (+ X 1))) )
    (AND (> X 700) (RETURN NIL)) ;NCHOMPLER BUG?  DOESN'T WORK IN ENDTEST
))

(DEFUN LEXIPHAGE ()
  (DISPLAY-LEXIPHAGE)
  (SLEEP 2.0)
  (FORTY-PERCENT)
  (GOBBLE)
  (FLUSH-REALTIME)
  'LEXIPHAGE!)

(DEFUN CHOMP-BAG ()
  (DISPLAY-THE-BAG)
  (SLEEP 2.0)
  (FORTY-PERCENT)
  (GOBBLE)
  (FLUSH-REALTIME)
  'CHOMPED!)

(DEFUN HAKMEM (TN)
  (HACK-SPECIFIED-TTY TN)
  (FORTY-PERCENT)
  (GOBBLE)
  (FLUSH-REALTIME)
  'DONT-FORGET-TO-SWITCH-BACK-TO-YOUR-OWN-TTY)

(LAP FLUSH-REALTIME SUBR)
(ARGS FLUSH-REALTIME (NIL . 0))
	(MOVSI TT 0 SETZ)
	(*REALT TT)
	(JFCL)
	(SETZ A)
	(POPJ P)
NIL

(LAP FORTY-PERCENT SUBR)
(ARGS FORTY-PERCENT (NIL . 0))
	(MOVSI TT 0 %PIRLT)
	(ANDCAM TT INTMSK)
	(*SUSET 0 (% 0 0 TT *SAMASK))
	(MOVE TT MUMBLE)
	(*REALT TT)
	(JFCL)
	(SETZ A)
	(POPJ P)
MUMBLE	(0 0 GRUMBLE 710000)
GRUMBLE	(0 0 5.)
	(0 0 2.)
NIL

(LAP DRAW-TV-LINE SUBR) 
(ARGS DRAW-TV-LINE (NIL . 4)) 
	(SKIPGE TT 0 A)
	(SETZ TT)
	(CAIL TT 576.)
	(MOVEI TT 575.)
	(PUSH FXP TT) 
	(SKIPGE TT 0 B)
	(SETZ TT)
	(CAIL TT 454.)
	(MOVEI TT 453.)
	(PUSH FXP TT) 
	(SKIPGE TT 0 C)
	(SETZ TT)
	(CAIL TT 576.)
	(MOVEI TT 575.)
	(PUSH FXP TT) 
	(SKIPGE TT 0 AR1)
	(SETZ TT)
	(CAIL TT 454.)
	(MOVEI TT 453.)
	(PUSH FXP TT) 
	(MOVE TT -1 FXP) 
	(SUB TT -3 FXP) 
	(MOVE D 0 FXP) 
	(SUB D -2 FXP) 
	(PUSH FXP TT)
	(PUSH FXP D) 
	(JUMPN TT NOT-VERTICAL) 
	(JUMPGE D VERTICAL-TV-LINE) 
	(MOVE R -2 FXP)
	(EXCH R -4 FXP)
	(MOVEM R -2 FXP)
	(JRST 0 VERTICAL-TV-LINE) 
NOT-VERTICAL 
	(JUMPN D NOT-HORIZONTAL) 
	(JUMPGE TT HORIZONTAL-TV-LINE) 
	(MOVE R -3 FXP)
	(EXCH R -5 FXP)
	(MOVEM R -3 FXP)
	(JRST 0 HORIZONTAL-TV-LINE) 
NOT-HORIZONTAL 
	(MOVM D D) 
	(JUMPLE TT RUN-NEGATIVE) 
	(CAMLE D TT) 
	(JRST 0 UP-RIGHT) 
	(JRST 0 RIGHT-UP) 
RUN-NEGATIVE 
	(MOVNS 0 -1 FXP) 
	(MOVNS 0 0 FXP) 
	(MOVE R -3 FXP)
	(MOVEM R -5 FXP)
	(MOVE R -2 FXP)
	(MOVEM R -4 FXP)
	(MOVM TT TT) 
	(CAMLE D TT) 
	(JRST 0 UP-RIGHT) 
RIGHT-UP
	(MOVE D -5 FXP) 
	(ANDI D 37) 
	(MOVNI D 0 D)
	(MOVSI TT 400000) 
	(LSH TT 0 D) 
	(PUSH FXP -4 FXP) 
	(MOVE D -6 FXP) 
	(LSH D -5) 
	(MOVM R -2 FXP) 
	(PUSH FXP TT) 
	(PUSH FXP R) 
	(LSH R -1) 
	(PUSH FXP D) 
	(MOVEI TT 1)
	(PUSH FXP TT) 
	(SKIPG 0 -5 FXP)
	(SETOM 0 0 FXP)
	(MOVMS 0 -5 FXP)
	(PUSH FXP R) 
	(PUSH FXP (% 0)) 
RU-2 
	(MOVE TT 0 FXP) 
	(CAMLE TT -10 FXP) 
	(JRST 0 RU-12) 
	(MOVE TT -6 FXP) 
	(IMULI TT 18.) 
	(ADD TT -3 FXP) 
	(MOVE D -5 FXP) 
        (MOVEM D @ (ARRAY TV)) 
	(MOVN TT -7 FXP) 
	(ADDB TT -1 FXP) 
	(JUMPGE TT RU-14) 
	(MOVE TT -2 FXP) 
	(ADDM TT -6 FXP) 
	(MOVE TT -4 FXP) 
	(ADDM TT -1 FXP) 
RU-14 
	(MOVE TT -5 FXP) 
	(LSH TT -1) 
	(MOVEM TT -5 FXP) 
	(ANDI TT 17) 
	(JUMPE TT RU-20) 
	(MOVSI TT 400000) 
	(MOVEM TT -5 FXP) 
	(AOS 0 -3 FXP) 
RU-20 
	(AOS 0 0 FXP) 
	(JRST 0 RU-2) 
RU-12 
	(MOVEI A 'T) 
	(SUB FXP (% 0 0 15 15)) 
	(POPJ P) 

UP-RIGHT
	(MOVE D -5 FXP) 
	(ANDI D 37) 
	(MOVNI D 0 D)
	(MOVSI TT 400000) 
	(LSH TT 0 D) 
	(PUSH FXP -4 FXP) 
	(MOVE D -6 FXP) 
	(LSH D -5) 
	(MOVM R -1 FXP) 
	(PUSH FXP TT) 
	(PUSH FXP R) 
	(LSH R -1) 
	(PUSH FXP D) 
	(MOVEI TT 1)
	(PUSH FXP TT) 
	(SKIPG 0 -5 FXP)
	(SETOM 0 0 FXP)
	(MOVMS 0 -5 FXP)
	(PUSH FXP R) 
	(PUSH FXP (% 0)) 
UR-2 
	(MOVE TT 0 FXP) 
	(CAMLE TT -7 FXP) 
	(JRST 0 UR-12) 
	(MOVE TT -6 FXP) 
	(IMULI TT 18.) 
	(ADD TT -3 FXP) 
	(MOVE D -5 FXP) 
        (MOVEM D @ (ARRAY TV)) 
	(MOVE TT -2 FXP) 
	(ADDM TT -6 FXP) 
	(MOVN TT -10 FXP) 
	(ADDB TT -1 FXP) 
	(JUMPGE TT UR-20) 
	(MOVE TT -4 FXP) 
	(ADDM TT -1 FXP) 
	(MOVE TT -5 FXP) 
	(LSH TT -1) 
	(MOVEM TT -5 FXP) 
	(ANDI TT 17) 
	(JUMPE TT UR-20) 
	(MOVSI TT 400000) 
	(MOVEM TT -5 FXP) 
	(AOS 0 -3 FXP) 
UR-20 
	(AOS 0 0 FXP) 
	(JRST 0 UR-2) 
UR-12 
	(MOVEI A 'T) 
	(SUB FXP (% 0 0 15 15)) 
	(POPJ P) 
 
HORIZONTAL-TV-LINE
	(MOVE TT -2 FXP)
	(IMULI TT 18.)
	(MOVE T -5 FXP) 
	(LSH T -5)
	(ADDI TT 0 T)
	(AOJ T)
	(LSH T 5)
	(MOVE D -5 FXP)
	(ANDI D 37)
	(MOVNI D 0 D)
	(MOVEI R 1)
	(SETO F)
	(ROTC R 35. D)
	(TRZ R 17)
	(MOVE D -3 FXP)
	(ANDI D 37)
	(MOVNI D 0 D)
	(MOVSI F 400000)
	(SETO 13)
	(ROTC F 0 D)
H-LINE1 
	(CAMLE T -3 FXP)
	(JRST 0 H-LINE2)
        (MOVEM R @ (ARRAY TV))
	(MOVE R (% -20))
	(ADDI T 32.)
	(AOJ TT)
	(JRST 0 H-LINE1)
H-LINE2
	(AND R F)
        (MOVEM R @ (ARRAY TV))
	(SUB FXP (% 0 0 6 6))
	(MOVEI A 'T)
	(POPJ P)

VERTICAL-TV-LINE
	(MOVE R -3 FXP)
	(ANDI R 37) 
	(MOVNI R 0 R)
	(MOVSI T 400000) 
	(LSH T 0 R) 
	(MOVE R -3 FXP)
	(LSH R -5)
	(MOVE TT -4 FXP) 
V-LINE1
	(CAMLE TT -2 FXP) 
	(JRST 0 V-LINE2) 
	(IMULI TT 18.) 
	(ADDI TT 0 R) 
        (MOVEM T @ (ARRAY TV)) 
	(AOS TT -4 FXP) 
	(JRST 0 V-LINE1) 
V-LINE2 
	(MOVEI A 'T) 
	(SUB FXP (% 0 0 6 6)) 
	(POPJ P) 
NIL 

(LAP SPECIAL-ERASE-TV-LINE SUBR) 
(ARGS SPECIAL-ERASE-TV-LINE (NIL . 4)) 
	(SKIPGE TT 0 A)
	(SETZ TT)
	(CAIL TT 576.)
	(MOVEI TT 575.)
	(PUSH FXP TT) 
	(SKIPGE TT 0 B)
	(SETZ TT)
	(CAIL TT 454.)
	(MOVEI TT 453.)
	(PUSH FXP TT) 
	(SKIPGE TT 0 C)
	(SETZ TT)
	(CAIL TT 576.)
	(MOVEI TT 575.)
	(PUSH FXP TT) 
	(SKIPGE TT 0 AR1)
	(SETZ TT)
	(CAIL TT 454.)
	(MOVEI TT 453.)
	(PUSH FXP TT) 
	(MOVE TT -1 FXP) 
	(SUB TT -3 FXP) 
	(MOVE D 0 FXP) 
	(SUB D -2 FXP) 
	(PUSH FXP TT)
	(PUSH FXP D) 
	(JUMPN TT NOT-VERTICAL) 
	(JUMPGE D VERTICAL-TV-LINE) 
	(MOVE R -2 FXP)
	(EXCH R -4 FXP)
	(MOVEM R -2 FXP)
	(JRST 0 VERTICAL-TV-LINE) 
NOT-VERTICAL 
	(JUMPN D NOT-HORIZONTAL) 
	(JUMPGE TT HORIZONTAL-TV-LINE) 
	(MOVE R -3 FXP)
	(EXCH R -5 FXP)
	(MOVEM R -3 FXP)
	(JRST 0 HORIZONTAL-TV-LINE) 
NOT-HORIZONTAL 
	(MOVM D D) 
	(JUMPLE TT RUN-NEGATIVE) 
	(CAMLE D TT) 
	(JRST 0 UP-RIGHT) 
	(JRST 0 RIGHT-UP) 
RUN-NEGATIVE 
	(MOVNS 0 -1 FXP) 
	(MOVNS 0 0 FXP) 
	(MOVE R -3 FXP)
	(MOVEM R -5 FXP)
	(MOVE R -2 FXP)
	(MOVEM R -4 FXP)
	(MOVM TT TT) 
	(CAMLE D TT) 
	(JRST 0 UP-RIGHT) 
RIGHT-UP
	(MOVE D -5 FXP) 
	(ANDI D 37) 
	(MOVNI D 0 D)
	(MOVSI TT 400000) 
	(ASH TT 0 D) 
	(PUSH FXP -4 FXP) 
	(MOVE D -6 FXP) 
	(LSH D -5) 
	(MOVM R -2 FXP) 
	(PUSH FXP TT) 
	(PUSH FXP R) 
	(LSH R -1) 
	(PUSH FXP D) 
	(MOVEI TT 1)
	(PUSH FXP TT) 
	(SKIPG 0 -5 FXP)
	(SETOM 0 0 FXP)
	(MOVMS 0 -5 FXP)
	(PUSH FXP R) 
	(PUSH FXP (% 0)) 
RU-2 
	(MOVE TT 0 FXP) 
	(CAMLE TT -10 FXP) 
	(JRST 0 RU-12) 
	(MOVE TT -6 FXP) 
	(IMULI TT 18.) 
	(ADD TT -3 FXP) 
	(MOVE D -5 FXP) 
        (MOVEM D @ (ARRAY TV)) 
	(MOVN TT -7 FXP) 
	(ADDB TT -1 FXP) 
	(JUMPGE TT RU-14) 
	(MOVE TT -2 FXP) 
	(ADDM TT -6 FXP) 
	(MOVE TT -4 FXP) 
	(ADDM TT -1 FXP) 
RU-14 
	(MOVE TT -5 FXP) 
	(ASH TT -1) 
	(MOVEM TT -5 FXP) 
	(ANDI TT 17) 
	(JUMPE TT RU-20) 
	(MOVSI TT 400000) 
	(MOVEM TT -5 FXP) 
	(AOS 0 -3 FXP) 
RU-20 
	(AOS 0 0 FXP) 
	(JRST 0 RU-2) 
RU-12 
	(MOVEI A 'T) 
	(SUB FXP (% 0 0 15 15)) 
	(POPJ P) 

UP-RIGHT
	(MOVE D -5 FXP) 
	(ANDI D 37) 
	(MOVNI D 0 D)
	(MOVSI TT 400000) 
	(ASH TT 0 D) 
	(PUSH FXP -4 FXP) 
	(MOVE D -6 FXP) 
	(LSH D -5) 
	(MOVM R -1 FXP) 
	(PUSH FXP TT) 
	(PUSH FXP R) 
	(LSH R -1) 
	(PUSH FXP D) 
	(MOVEI TT 1)
	(PUSH FXP TT) 
	(SKIPG 0 -5 FXP)
	(SETOM 0 0 FXP)
	(MOVMS 0 -5 FXP)
	(PUSH FXP R) 
	(PUSH FXP (% 0)) 
UR-2 
	(MOVE TT 0 FXP) 
	(CAMLE TT -7 FXP) 
	(JRST 0 UR-12) 
	(MOVE TT -6 FXP) 
	(IMULI TT 18.) 
	(ADD TT -3 FXP) 
	(MOVE D -5 FXP) 
        (MOVEM D @ (ARRAY TV)) 
	(MOVE TT -2 FXP) 
	(ADDM TT -6 FXP) 
	(MOVN TT -10 FXP) 
	(ADDB TT -1 FXP) 
	(JUMPGE TT UR-20) 
	(MOVE TT -4 FXP) 
	(ADDM TT -1 FXP) 
	(MOVE TT -5 FXP) 
	(ASH TT -1) 
	(MOVEM TT -5 FXP) 
	(ANDI TT 17) 
	(JUMPE TT UR-20) 
	(MOVSI TT 400000) 
	(MOVEM TT -5 FXP) 
	(AOS 0 -3 FXP) 
UR-20 
	(AOS 0 0 FXP) 
	(JRST 0 UR-2) 
UR-12 
	(MOVEI A 'T) 
	(SUB FXP (% 0 0 15 15)) 
	(POPJ P) 
 
HORIZONTAL-TV-LINE
	(MOVE TT -2 FXP)
	(IMULI TT 18.)
	(MOVE T -5 FXP) 
	(LSH T -5)
	(ADDI TT 0 T)
	(AOJ T)
	(LSH T 5)
	(MOVE D -5 FXP)
	(ANDI D 37)
	(MOVNI D 0 D)
	(MOVEI R 1)
	(SETO F)
	(ROTC R 35. D)
	(TRZ R 17)
	(MOVE D -3 FXP)
	(ANDI D 37)
	(MOVNI D 0 D)
	(MOVSI F 400000)
	(SETO 13)
	(ROTC F 0 D)
H-LINE1 
	(CAMLE T -3 FXP)
	(JRST 0 H-LINE2)
        (MOVEM R @ (ARRAY TV))
	(MOVE R (% -20))
	(ADDI T 32.)
	(AOJ TT)
	(JRST 0 H-LINE1)
H-LINE2
	(AND R F)
        (MOVEM R @ (ARRAY TV))
	(SUB FXP (% 0 0 6 6))
	(MOVEI A 'T)
	(POPJ P)

VERTICAL-TV-LINE
	(MOVE R -3 FXP)
	(ANDI R 37) 
	(MOVNI R 0 R)
	(MOVSI T 400000) 
	(LSH T 0 R) 
	(MOVE R -3 FXP)
	(LSH R -5)
	(MOVE TT -4 FXP) 
V-LINE1
	(CAMLE TT -2 FXP) 
	(JRST 0 V-LINE2) 
	(IMULI TT 18.) 
	(ADDI TT 0 R) 
        (MOVEM T @ (ARRAY TV)) 
	(AOS TT -4 FXP) 
	(JRST 0 V-LINE1) 
V-LINE2 
	(MOVEI A 'T) 
	(SUB FXP (% 0 0 6 6)) 
	(POPJ P) 
NIL 

(LAP HACK-SPECIFIED-TTY SUBR)
(ARGS HACK-SPECIFIED-TTY (NIL . 1))
(DEFSYM *RTVCREG 56 *STVCREG 400056)	;FASLAP LOSES
	(MOVE TT 0 A)
	(*CALL 0 WHERE)
	(*LOSE 0 1000)
	(*SUSET 0 (% 0 0 R *RTVCREG))
	(TLZ R 1774)
	(LSH TT 2)
	(TSO R TT)
	(*SUSET 0 (% 0 0 R *STVCREG))
	(POPJ P)
WHERE	(SETZ)
	(SIXBIT TVWHER)
	(MOVEI 0 400000 TT)
	(MOVEM 0 TT)
	(SETZM 0 TT)
NIL 

(DEFUN DISPLAY-THE-BAG ()
  ((LAMBDA (LEXISOURCE)
    (DRAWMODE TV-ANDC-MODE)
    (DO I 0 (1+ I) (= I 4000)
	(DECLARE (FIXNUM I))
	(STORE (ARRAYCALL FIXNUM TV I) -20))
    (DRAWMODE TV-IOR-MODE)
    (CURSORPOS 20. 0)
    (ERRSET (FILLARRAY TV LEXISOURCE) NIL)
    (CLOSE LEXISOURCE))
   (OPEN '|DSK:VSDB;BAG LUNCH| '(IN FIXNUM))))
