c dlw 10/8/80  -*- Mode: Bolio -*-

.chapter The MATH Package

The 3math* package provides various useful mathematical functions.

.section Matricies

The functions in this section perform some useful matrix operations.
Many simpler ones of of general use, rather than primarily being useful
for mathematics; these are in the 3global* package and are documented
elsewhere.  These functions represent matricies as Lisp arrays.

.defun math:multiply-matrices matrix-1 matrix-2 &optional matrix-3
Multiplies 2matrix-1* by 2matrix-2*.  If 2matrix-3* is supplied,
3multiply-matrices* stores the results into 2matrix-3* and return
2matrix-3*; otherwise it creates an array to contain the answer and
returns it.  All matrices must be two-dimensional, and the first
dimension of 2matrix-2* must equal the second dimension of 2matrix-1*.
.end_defun

.defun math:invert-matrix matrix &optional into-matrix
Computes the inverse of 2matrix*.  If 2into-matrix* is supplied,
stores the result into it and returns it; otherwise it creates an array
to hold the result, and returns it.  2matrix* must be two-dimensional
and square.  The Gauss-Jordan algorithm with partial pivoting is used.
Note: if you want to solve a set of simultaneous equations, you should
not use this function; use 3decompose* and 3solve* (see below).
.end_defun

.defun math:transpose-matrix matrix &optional into-matrix
Transposes 2matrix*.  If 2into-matrix* is supplied, stores the
result into it and returns it; otherwise it creates an array to hold the
result, and returns it.  2matrix* must be two-dimensional.
.end_defun

.defun math:determinant matrix
Returns the determinant of 2matrix*.  2matrix* must be a two-dimensional
square matrix.
.end_defun

.defun math:decompose a &optional lu ps
Compute the LU decomposition of matrix 2a*.  If 2lu* is supplied,
stores the result into it and returns it; otherwise it creates an array
to hold the result, and returns it.  The lower triangle of 2lu*, with
ones added along the diagonal, is L, and the upper triangle of 2lu* is
U, such that the produce of L and U is 2a*.  Gaussian elimination with
partial pivoting is used.  The 2lu* array is permuted by rows according
to the permutation array 2ps*, which is also produced by this function;
if the argument 2ps* is supplied, the permutation array is stored into it;
otherwise, an array is created to hold it.  This function returns two values:
the LU decomposition and the permutation array.
.end_defun

.defun solve lu ps b &optional x
