
  0	JMP 300		;Reset starts here
  2	NOP
  3	NOP		;External interrupt here
  4	NOP
  5	NOP
  6	NOP
  7	SEL RB1		;Timer interrupt here.
 10	MOV R0,#43
 12	MOV @R0,A	;43  A (save through int)
 13	MOV A,#374	;Interrupt again in 534. microseconds
 15	MOV T,A
 16	MOV R0,#45	;(45 has state, initially 0)
 20	MOV A,@R0
 21	JZ 37
 23	DJNZ R5,235	;Output in progress.  Time for next bit?
 25	MOV R5,#21	;Yes.  Bit after this will be in 17.*534. usec (= 110 baud)
 27	JB0 73		;Decode state from 45
 31	JB1 121
 33	JB2 130
 35	JB3 136
 37	MOV A,R3	;Here when state = 0
 40	XRL A,R2
 41	JZ 235		;Jump if fifo is empty
 43	MOV A,R3
 44	ADD A,#17
 46	MOV R1,A	;R1  fifo address (20-27)
 47	MOV A,@R1	;A  current character from fifo
 50	DJNZ R3,54	;Decrement R3 to point to next fifo location
 52	MOV R3,#10
 54	MOV R1,#46	;46  current character (save for transmit loop)
 56	MOV @R1,A
 57	ANL P1,#177	;P1<7>0 (send a start bit)
 61	MOV R4,#10	;Send 8 bits from 46
 63	MOV R1,#47
 65	MOV @R1,#0
 67	MOV @R0,#1	;Enter state 1
 71	JMP 256		;Go dismiss interrupt
 73	DJNZ R4,77	;Here when state = 1 
 75	MOV @R0,#2	;R4 counted out, no bits to send, State  2
 77	MOV R1,#46	;46  46 rotated right 1
101	MOV A,@R1
102	ROT-RIGHT A
103	XCH A,@R1
104	JB0 112		;P1<7>  next bit out (may jump here from 126)
106	ANL P1,#177	;And dismiss interrupt
110	JMP 256
112	ORL P1,#200
114	MOV R1,#47
116	INC @R1
117	JMP 256
121	MOV @R0,#4	;Here when state = 2, state  4
123	MOV R1,#47	;Send from location 47 instead of 46
125	MOV A,@R1
126	JMP 104
130	MOV @R0,#10	;Here when state = 4, state  10
132	ORL P1,#200	;P1<7>  1 (stop bit)
134	JMP 256
136	MOV A,R3	;Here when state = 10
137	XRL A,R2
140	JNZ 43
142	MOV R1,#51
144	MOV A,@R1
145	JB7 162
147	SEL RB0		;Get other bank's R5 which I think is shift/repeat bits
150	MOV A,R5
151	SEL RB1
152	JB4 162
154	JB3 213
156	JB7 166
160	JMP 256
162	MOV @R0,#0
164	JMP 256
166	MOV R1,#52
170	MOV A,@R1
171	XRL A,#75
173	JZ 256
175	MOV A,@R1
176	XRL A,#177
200	JZ 256
202	MOV R1,#50
204	MOV A,@R1
205	JZ 213
207	DEC A
210	MOV @R1,A
211	JMP 256
213	MOV R1,#52
215	MOV A,@R1
216	OUTL BUS,A
217	ANL P1,#337
221	MOV R1,#4
223	DJNZ R1,223
225	ORL P1,#40
227	MOV R1,#44
231	MOV @R1,#47
233	JMP 54
235	MOV R0,#44	;(Here when R5 hasn't counted down to zero)
237	MOV A,@R0
240	JZ 256
242	DEC A
243	MOV @R0,A
244	JB1 252		;P1<6>  44<1> complemented (bell?)
246	ORL P1,#100
250	JMP 256
252	ANL P1,#277
254	JMP 256
256	MOV R0,#43	;Restore A and dismiss interrupt
260	MOV A,@R0
261	RETR
262	NOP
263	NOP
264	NOP
265	NOP
266	NOP
267	NOP
270	NOP
271	NOP
272	NOP
273	NOP
274	NOP
275	NOP
276	NOP
277	NOP
300	MOV A,#377	;Start here
302	OUTL P1,A	;Disable outputs on P1 and P2
303	OUTL P2,A
304	ORL P1,#200	;This appears not to do anything?
306	MOV R0,#60	;Set locations 60-77 (bitmap) to all 1's
310	MOV R4,#20
312	MOV @R0,#377
314	INC R0
315	DJNZ R4,312
317	MOV R5,#0
321	MOV R0,#51	;51  200
323	MOV @R0,#200
325	MOV R0,#45	;45  0
327	MOV @R0,#0
331	SEL RB1		;Select timer-interrupt registers
332	MOV R2,#10	;Fifo in pointer
334	MOV R3,#10	;Fifo out pointer
336	MOV R0,#44	;44  372
340	MOV @R0,#372
342	MOV R5,#21
344	SEL RB0		;Select main-program registers
345	MOV A,#374	;Interrupt in 534. microseconds (320. x 1.67 due to slow clock)
347	MOV T,A
350	EN TCNT I
351	STRT T
352	JMP 374		;Go enter keyboard-scanning loop
354	NOP
355	NOP
356	NOP
357	NOP
360	NOP
361	NOP
362	NOP
363	NOP
364	NOP
365	NOP
366	NOP
367	NOP
370	NOP
371	NOP
372	NOP
373	NOP
374	MOV R4,#20	;R4 is 1+ bitmap index in bytes
376	MOV R3,#0	;R3 is bitmap index in bits
400	MOV A,#57	;Loop here 16. times
402	ADD A,R4
403	MOV R0,A	;R0 addresses bit map byte
404	MOV A,R4
405	DEC A
406	ORL P1,#37	;P1<4:1>  bit_map_index<0,1,2,3>  (bit-reverse)
410	JB0 414
412	ANL P1,#357
414	JB1 420
416	ANL P1,#367
420	JB2 424
422	ANL P1,#373
424	JB3 430
426	ANL P1,#375
430	ANL P1,#376	;P1<0>  0 (strobe keyboard)
432	IN A,P2		;Read back keys
433	CPL A
434	XCH A,@R0	;Bit map  New bits, A  old bits
435	XRL A,@R0	;A gets bits changed
436	JNZ 450		;Jump if any change
440	MOV A,R3	;R3  R3 + 8
441	ADD A,#10
443	MOV R3,A
444	DJNZ R4,400	;Try next key
446	JMP 374		;Do keyboard scan again
450	MOV R1,#40	;Enter here when a key has been typed
452	MOV @R1,A	;40  changed bits
453	ANL A,@R0
454	MOV R0,#41
456	MOV @R0,A	;41  keys now not pressed
457	CPL A
460	ANL A,@R1
461	MOV R0,#42
463	MOV @R0,A	;42  keys now pressed
464	MOV R2,#10
466	MOV R1,#41	;Loops here 8 times, decrementing R2, incrementing R3
470	MOV A,@R1
471	ROT-RIGHT-CARRY A
472	MOV @R1,A
473	JNC 521
475	MOV A,R3	;This key was lifted
476	ROT-LEFT A
477	MOVP3 A,@A	;Get first byte for this key
500	JB6 511
502	CPL A
503	JB5 511
505	ANL A,R5
506	MOV R5,A
507	JMP 1020
511	MOV R1,#51
513	MOV A,@R1
514	XRL A,R3
515	JNZ 521
517	MOV @R1,#200
521	MOV R1,#42	;If key not lifted, check for key pressed
523	MOV A,@R1
524	ROT-RIGHT-CARRY A
525	MOV @R1,A
526	JNC 772		;No, close loop
530	MOV A,R3
531	ROT-LEFT A
532	MOV R7,A
533	MOVP3 A,@A	;Get first byte for this key
534	MOV R6,A
535	MOV A,R7
536	INC A
537	MOVP3 A,@A
540	XCH A,R6	;A  first byte, R6  second byte
541	JB6 545
543	JB5 724
545	CLR C
546	ROT-LEFT-CARRY A
547	ROT-RIGHT A
550	JNC 556		;Check B7 of first byte
552	MOV R1,#50
554	MOV @R1,#101
556	MOV R1,A
557	MOV A,R5
560	ANL A,#17
562	ROT-LEFT A
563	ROT-RIGHT-CARRY A
564	MOV R5,A
565	MOV A,R1
566	JB6 674
570	JB5 724
572	JB4 730
574	JB3 755
576	JB0 602
600	JMP 606
602	MOV A,R5
603	ORL A,#20
605	MOV R5,A
606	MOV A,T		;Await timer = 377
607	ADD A,#1
611	JZ 606
613	MOV A,R6	;Put character in R6 out on parallel interface
614	OUTL BUS,A
615	ANL P1,#337	;Strobe (P1<5>) goes low
617	MOV R1,#4	;Delay 67 microseconds
621	DJNZ R1,621
623	ORL P1,#40	;Strobe goes high
625	MOV R0,#44
627	MOV @R0,#70	;44  70, I think this controls the clicker
631	MOV A,#17
633	SEL RB1
634	ADD A,R2	;A  fifo in address
635	SEL RB0
636	MOV R0,A
637	MOV A,R6
640	MOV @R0,A	;Fifo  character
641	SEL RB1
642	DJNZ R2,646	;Advance fifo in pointer by decrementing it
644	MOV R2,#10
646	SEL RB0
647	MOV R0,#51	;Store key number and translated code for repeat
651	MOV A,R3
652	MOV @R0,A
653	MOV R0,#52
655	MOV A,R6
656	MOV @R0,A
657	SEL RB1
660	MOV A,R2
661	DEC A
662	JNZ 666
664	MOV A,#10
666	XRL A,R3
667	JZ 660		;Loop until fifo not full
671	SEL RB0
672	JMP 772		;Go continue key-scanning loop
674	ANL A,#77
676	MOV R7,A
677	ADD A,R7
700	ADD A,R7
701	ADD A,#200
703	MOV R7,A
704	MOV A,R5
705	JB2 717
707	INC R7
710	JB1 717
712	INC R7
713	JB0 717
715	JMP 606
717	JMP 1374
721	MOV R6,A
722	JMP 606
724	ORL A,R5	;Here when key typed, first byte has b6=0 and b5=1
725	MOV R5,A	;Set bits in R5 from table (this is a shift)
726	JMP 772
730	MOV A,R5
731	JB2 741
733	JB1 747
735	JB0 747
737	JMP 606
741	MOV A,R6
742	ANL A,#37
744	MOV R6,A
745	JMP 606
747	MOV A,R6
750	ANL A,#337
752	MOV R6,A
753	JMP 606
755	MOV A,R5
756	JB2 606
760	JB1 764
762	JMP 606
764	MOV A,R6
765	ANL A,#357
767	MOV R6,A
770	JMP 606
772	INC R3		;This is the bottom of the key-scanning loop
773	DJNZ R2,466
775	DJNZ R4,400
777	JMP 374
1001	NOP
1002	NOP
1003	NOP
1004	NOP
1005	NOP
1006	NOP
1007	NOP
1010	NOP
1011	NOP
1012	NOP
1013	NOP
1014	NOP
1015	NOP
1016	NOP
1017	NOP
1020	MOV R0,#64
1022	MOV A,@R0
1023	CPL A
1024	ANL A,#70
1026	JZ 1034
1030	MOV A,R5
1031	ORL A,#2
1033	MOV R5,A
1034	JMP 521
1036	NOP
1037	NOP
1040	NOP
1041	NOP
1042	NOP
1043	NOP
1044	NOP
1045	NOP
1046	NOP
1047	NOP
1050	NOP
1051	NOP
1052	NOP
1053	NOP
1054	NOP
1055	NOP
1056	NOP
1057	NOP
1060	NOP
1061	NOP
1062	NOP
1063	NOP
1064	NOP
1065	NOP
1066	NOP
1067	NOP
1070	NOP
1071	NOP
1072	NOP
1073	NOP
1074	NOP
1075	NOP
1076	NOP
1077	NOP
1100	NOP
1101	NOP
1102	NOP
1103	NOP
1104	NOP
1105	NOP
1106	NOP
1107	NOP
1110	NOP
1111	NOP
1112	NOP
1113	NOP
1114	NOP
1115	NOP
1116	NOP
1117	NOP
1120	NOP
1121	NOP
1122	NOP
1123	NOP
1124	NOP
1125	NOP
1126	NOP
1127	NOP
1130	NOP
1131	NOP
1132	NOP
1133	NOP
1134	NOP
1135	NOP
1136	NOP
1137	NOP
1140	NOP
1141	NOP
1142	NOP
1143	NOP
1144	NOP
1145	NOP
1146	NOP
1147	NOP
1150	NOP
1151	NOP
1152	NOP
1153	NOP
1154	NOP
1155	NOP
1156	NOP
1157	NOP
1160	NOP
1161	NOP
1162	NOP
1163	NOP
1164	NOP
1165	NOP
1166	NOP
1167	NOP
1170	NOP
1171	NOP
1172	NOP
1173	NOP
1174	NOP
1175	NOP
1176	NOP
1177	NOP
1200	XCH A,R5
1201	MOVD P5,A
1202	XCH A,R5
1203	INC R6
1204	ANL A,R6
1205	ADDC A,R6
1206	NOP
1207	ORL A,@R0
1210	ADD A,@R0
1211	INC R3
1212	ANL A,R3
1213	ADDC A,R3
1214	INC R5
1215	ANL A,R5
1216	ADDC A,R5
1217	ADDC A,R7
1220	ANL A,R7
1221	ANL A,R7
1222	73
1223	XCH A,R3
1224	73
1225	OUTL P2,A
1226	XCH A,R2
1227	OUTL P2,A
1230	INC R4
1231	ANL A,R4
1232	ADDC A,R4
1233	XCH A,R4
1234	MOVD P4,A
1235	XCH A,R4
1236	XCH A,R6
1237	MOVD P6,A
1240	XCH A,R6
1241	XCH A,R7
1242	MOVD P7,A
1243	XCH A,R7
1244	NOP
1245	NOP
1246	NOP
1247	NOP
1250	NOP
1251	NOP
1252	NOP
1253	NOP
1254	NOP
1255	NOP
1256	NOP
1257	NOP
1260	NOP
1261	NOP
1262	NOP
1263	NOP
1264	NOP
1265	NOP
1266	NOP
1267	NOP
1270	NOP
1271	NOP
1272	NOP
1273	NOP
1274	NOP
1275	NOP
1276	NOP
1277	NOP
1300	NOP
1301	NOP
1302	NOP
1303	NOP
1304	NOP
1305	NOP
1306	NOP
1307	NOP
1310	NOP
1311	NOP
1312	NOP
1313	NOP
1314	NOP
1315	NOP
1316	NOP
1317	NOP
1320	NOP
1321	NOP
1322	NOP
1323	NOP
1324	NOP
1325	NOP
1326	NOP
1327	NOP
1330	NOP
1331	NOP
1332	NOP
1333	NOP
1334	NOP
1335	NOP
1336	NOP
1337	NOP
1340	NOP
1341	NOP
1342	NOP
1343	NOP
1344	NOP
1345	NOP
1346	NOP
1347	NOP
1350	NOP
1351	NOP
1352	NOP
1353	NOP
1354	NOP
1355	NOP
1356	NOP
1357	NOP
1360	NOP
1361	NOP
1362	NOP
1363	NOP
1364	NOP
1365	NOP
1366	NOP
1367	NOP
1370	NOP
1371	NOP
1372	NOP
1373	NOP
1374	MOV A,R7
1375	MOVP A,@A
1376	JMP 721
---
1400	1
1401	237
1402	0
1403	60
1404	20
1405	160
1406	106
1407	73
1410	113
1411	57
1412	1
1413	226
1414	1
1415	52
1416	1
1417	57
1420	1
1421	236
1422	10
1423	71
1424	20
1425	157
1426	20
1427	154
1430	112
1431	56
1432	1
1433	361
1434	200
1435	15
1436	305
1437	137
1440	1
1441	340
1442	300
1443	55
1444	103
1445	173
1446	107
1447	72
1450	200
1451	40
1452	1
1453	225
1454	110
1455	174
1456	104
1457	175
1460	1
1461	235
1462	10
1463	70
1464	20
1465	151
1466	20
1467	153
1470	111
1471	54
1472	1
1473	362
1474	1
1475	354
1476	0
1477	12
1500	1
1501	234
1502	10
1503	67
1504	20
1505	165
1506	20
1507	152
1510	20
1511	155
1512	0
1513	60
1514	0
1515	61
1516	0
1517	64
1520	1
1521	233
1522	10
1523	66
1524	20
1525	171
1526	20
1527	150
1530	20
1531	156
1532	1
1533	363
1534	0
1535	62
1536	0
1537	65
1540	1
1541	232
1542	10
1543	65
1544	20
1545	164
1546	20
1547	147
1550	20
1551	142
1552	0
1553	56
1554	0
1555	63
1556	0
1557	66
1560	1
1561	231
1562	10
1563	64
1564	20
1565	162
1566	20
1567	146
1570	20
1571	166
1572	0
1573	75
1574	0
1575	53
1576	0
1577	55
1600	1
1601	217
1602	10
1603	63
1604	20
1605	145
1606	20
1607	144
1610	20
1611	143
1612	1
1613	30
1614	200
1615	10
1616	1
1617	33
1620	1
1621	216
1622	10
1623	62
1624	20
1625	167
1626	20
1627	163
1630	20
1631	170
1632	1
1633	4
1634	101
1635	176
1636	1
1637	341
1640	1
1641	206
1642	10
1643	61
1644	20
1645	161
1646	20
1647	141
1650	20
1651	172
1652	1
1653	355
1654	102
1655	140
1656	1
1657	342
1660	44
1661	0
1662	41
1663	0
1664	1
1665	211
1666	42
1667	0
1670	42
1671	0
1672	42
1673	0
1674	50
1675	0
1676	1
1677	212
1700	1
1701	205
1702	1
1703	350
1704	1
1705	352
1706	1
1707	353
1710	1
1711	360
1712	1
1713	223
1714	1
1715	352
1716	1
1717	343
1720	1
1721	346
1722	1
1723	215
1724	1
1725	220
1726	200
1727	203
1730	1
1731	357
1732	1
1733	364
1734	0
1735	67
1736	1
1737	344
1740	1
1741	213
1742	1
1743	214
1744	1
1745	200
1746	200
1747	204
1750	200
1751	202
1752	1
1753	224
1754	0
1755	71
1756	0
1757	55
1760	1
1761	345
1762	1
1763	347
1764	200
1765	201
1766	1
1767	210
1770	1
1771	356
1772	1
1773	365
1774	0
1775	70
1776	0
1777	53
---
1400	1
1401	ANLD P7,A
1402	NOP
1403	XCHD A,@R0
1404	INC @R0
1405	ADDC A,@R0
1406	JNT1 1473
1410	ORL A,R3
1411	XCH A,R7
1412	1
1413	JNZ 1401
1415	XCH A,R2
1416	1
1417	XCH A,R7
1420	1
1421	ANLD P6,A
1422	INS A,BUS
1423	OUTL P1,A
1424	INC @R0
1425	ADD A,R7
1426	INC @R0
1427	ADD A,R4
1430	ORL A,R2
1431	XCH A,R6
1432	1
1433	MOV A,@R1
1434	MOVX A,@R0
1435	MOVD A,P5
1436	SEL RB0
1437	ANL A,R7
1440	1
1441	340
1442	300
1443	XCH A,R5
1444	ORL A,#173
1446	SWAP A
1447	OUTL P2,A
1450	MOVX A,@R0
1451	XCH A,@R0
1452	1
1453	CPL F0
1454	ORL A,R0
1455	ADDC A,R4
1456	JMP 1175
1460	1
1461	ANLD P5,A
1462	INS A,BUS
1463	70
1464	INC @R0
1465	ADD A,R1
1466	INC @R0
1467	ADD A,R3
1470	ORL A,R1
1471	XCH A,R4
1472	1
1473	JB7 1401
1475	DJNZ R4,1400
1477	IN A,P2
1500	1
1501	ANLD P4,A
1502	INS A,BUS
1503	CPL A
1504	INC @R0
1505	EN T0 CLK
1506	INC @R0
1507	ADD A,R2
1510	INC @R0
1511	ADD A,R5
1512	NOP
1513	XCHD A,@R0
1514	NOP
1515	XCHD A,@R1
1516	NOP
1517	CALL 401
1521	233
1522	INS A,BUS
1523	JT0 1420
1525	ADDC A,R1
1526	INC @R0
1527	ADD A,R0
1530	INC @R0
1531	ADD A,R6
1532	1
1533	363
1534	NOP
1535	JB1 1400
1537	DIS TCNT I
1540	1
1541	ANL P2,#10
1543	DIS TCNT I
1544	INC @R0
1545	CALL 1420
1547	ROT-RIGHT-CARRY A
1550	INC @R0
1551	MOV T,A
1552	NOP
1553	XCH A,R6
1554	NOP
1555	63
1556	NOP
1557	JT0 1401
1561	ANL P1,#10
1563	CALL 420
1565	JB3 1420
1567	146
1570	INC @R0
1571	JF1 1400
1573	MOVD P5,A
1574	NOP
1575	XCH A,R3
1576	NOP
1577	XCH A,R5
1600	1
1601	ORLD P7,A
1602	INS A,BUS
1603	63
1604	INC @R0
1605	STOP TCNT
1606	INC @R0
1607	JMP 1420
1611	143
1612	1
1613	INC R0
1614	MOVX A,@R0
1615	INS A,BUS
1616	1
1617	INC R3
1620	1
1621	ORLD P6,A
1622	INS A,BUS
1623	JB1 1420
1625	ROT-RIGHT A
1626	INC @R0
1627	163
1630	INC @R0
1631	ADDC A,R0
1632	1
1633	JMP 101
1635	ADDC A,R6
1636	1
1637	341
1640	1
1641	JNI 1410
1643	XCHD A,@R1
1644	INC @R0
1645	ADDC A,@R1
1646	INC @R0
1647	ADD A,@R1
1650	INC @R0
1651	ADDC A,R2
1652	1
1653	DJNZ R5,1502
1655	ADD A,@R0
1656	1
1657	342
1660	JMP 400
1662	XCH A,@R1
1663	NOP
1664	1
1665	ORL P1,#42
1667	NOP
1670	42
1671	NOP
1672	42
1673	NOP
1674	XCH A,R0
1675	NOP
1676	1
1677	ORL P2,#1
1701	CLR F0
1702	1
1703	DJNZ R0,1401
1705	DJNZ R2,1401
1707	DJNZ R3,1401
1711	MOV A,@R0
1712	1
1713	RETR
1714	1
1715	DJNZ R2,1401
1717	MOVP3 A,@A
1720	1
1721	JNC 1401
1723	ORLD P5,A
1724	1
1725	MOVX @R0,A
1726	MOVX A,@R0
1727	RET
1730	1
1731	DJNZ R7,1401
1733	CALL 3400
1735	CPL A
1736	1
1737	JMP 3401
1741	213
1742	1
1743	ORLD P4,A
1744	1
1745	MOVX A,@R0
1746	MOVX A,@R0
1747	JMP 2200
1751	202
1752	1
1753	CALL 2000
1755	OUTL P1,A
1756	NOP
1757	XCH A,R5
1760	1
1761	SEL MB0
1762	1
1763	ROT-LEFT A
1764	MOVX A,@R0
1765	MOVX A,@R1
1766	1
1767	ORL BUS,#1
1771	DJNZ R6,1401
1773	SEL MB1
1774	NOP
1775	70
1776	NOP
1777	XCH A,R3     