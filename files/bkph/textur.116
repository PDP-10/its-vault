	TITLE TEXTURE GRADIENT

FIRST:

FLWSWT==0

R10==10
R11==11
R12==12
R13==13
R14==14
R15==15
R16==16

.INSRT SUPPRT ROUT

NQ:	8
NN:	7
LN:	3
NO2:	4
NO4:	2
NO8:	1
FLT:	8.0
TPN:	0.1

RTWO:	0.707106781
TWPI:	6.283185307
ONE:	1.0

IGA:	0
IS:	0
IGR:	0
ITN:	0
IQ:	0
IST:	0
ISTP:	0

Q==PUSHJ P,
R==POPJ P,
M==MOVE
MI==MOVEI
MM==MOVEM
S==SOS
A==AOS
J==JRST
SZ==SETZM
SO==SETOM
EX==EXCH
FA==FADR
FS==FSBR
FD==FDVR
FM==FMPR
COMMAX:	
IRP A,,[START,RST,GOBXRI,GOBDIS,KILARR,LSGARR,DVSCAN,LOOK,ABSOLU,FTRAN,FOUR2
FOIR2,NOTHIN,PNTXR,PNTXI,DSPXR,DSPXI,SLAVE,CLRXRR,CLRXII,PHOTO,DISPAR,APPXRR
REDUCE,TRNXRR,TRNXII,DSPALL,CRATER
ZPZP,MAXXRR,GETEDG,DSPEDG,CNT10,CNT5,MARTER,OPNDIS,CLODIS,GRYXRR,XROUT,DOGRD]
	SIXBIT/A/
	A
TERMIN
	0

VARABX:	
IRP A,,[NFT,SPCE,CENTER,DSPGUM,XCA,YCA,XCD,YCD,PTBLE,XDR,YDR,XDF,YDF,DEMO,EQSZE
MAXEL,MINEL,ATM,BTM,STM,TTM,SIN2T,COS2T,SINT,COST,IMIN,IMAX,ICSM2,GRTAN,GRAX
SCREWD,NARROW
OLD,BRIGHT,APPEND,PNEDT,VDSZ,LINES,SIDE,STEP,GRTAN,GRAX,GRAY,GRAY,EXAGG,NWCR]
	SIXBIT/A/
	A
TERMIN
	0

NARROW:	0	;1 TO CAUSE LOOK ONLY TYPE SET UP
SPCE:	0	;1 TO GET EXTRA SPACE
NEWROW:	0	;FUNCTION AT NEW ROW CALLED
ELEMNT:	0	;FUNCTION EACH ELEMENT CALL
YUMMY:	0
YUMMS:	SIXBIT/%3I0!  /

START:	MI R1,20
	MM R1,NFT
	;SET UP PDL ETC.
	JSR INIT
	Q RST
	J ACCEPT

RST:	Q CLODIS
	MI R1,NWCR+1
	MM R1,NWCR
	SZ APPEND
	SKIPE NARROW
	J NARONL
	Q GOBXRI	;GET CORE REQUIRED
	Q GOBDIS
;	INITIALISE COS SIN AND BTR TBLES
	M R1,NFT
	Q INITS
CINTIR:	M R1,XRRAD
	MI R2,XRMG
	M R3,NFT
	M R4,NFT
	MI R5,R7
	Q MARGIN	;GEN MRGN VECTOR FOR XRR

	M R1,XIIAD
	MI R2,XIMG
	M R3,NFT
	M R4,NFT
	MI R5,R7
	Q MARGIN	;GEN MRGN VECTOR FOR XII

.I RSTART=#ACCEPT
.I COMMAN=#COMMAX
.I VARABL=#VARABX
.I PTBLE=7+340*OLD
	Q MARTER
	Q STADP
	Q FINDP
	R

NARONL:	Q LSGARR
	J CINTIR

MARGIN:	;SETS UP MARGIN ARRAY
	;ARRAY,MARGIN,ROWS,CLMNS,ACJ
	;ACCESS THROUGH @MARGIN(ACI)
	HRL R1,R5
MRGPLC:	MM R1,(R2)
	A R2
	ADD R1,R3
	SOJG R4,MRGPLC
	R
SETASI:	;SET ASIDE SOME NEW CORE
	;WORDS
	ADD R1,NWCR
SETDWN:	SZ APPEND
	MM R1,NWCRS
	IDIVI R1,2000
	A R1
	Q CLODIS
	.CORE @R1
	J LOSCOR
	M R1,NWCR
	M R2,NWCRS
	MM R2,NWCR
	A (P)
	R

LOSCOR:	PRINT _CAGED IN
	Q PAUSE
	M R1,0
	R

GOBXRI:	;SET UP XRR XII
	M R1,NFT
	IMUL R1,R1
	Q SETASI
	J GOBXRI
	MM R1,XRRAD
GOBXIR:	M R1,NFT
	IMUL R1,R1
	Q SETASI
	J GOBXIR
	MM R1,XIIAD
	R

GOBDIS:	;SET UP DISLUM
	M R1,NFT
	IMUL R1,R1
	ADD R1,NFT
	ADDI R1,20
	MM R1,DSLLNG'
	Q SETASI
	J GOBDIS
	MM R1,DSLMAD
	R

KILARR:	MI R1,NWCR+1	;REMOVE EXTRA STORAGE
	J SETDWN

LSGARR:	;MAKE XRR,DISLUM OVERLAP
	MI R1,NWCR+1
	MM R1,NWCR
	Q GOBDIS	;GEN DISLUM
	ADD R1,NFT
	ADDI R1,20
	MM R1,XRRAD
	R

REDUCE:	SO SCREWD'
	HRRZ R1,RSP
	IDIVI R1,2000
	A R1
	.CORE @R1
	R
	R

PNTARR:	;PRINTS ARRAY
	;MARGIN,ROWS,CLMNS,I,SCLE
	M R11,R1
	M R12,R2
	M R13,R3
	M R1,R12
	LSH R1,-1
	MM R1,HV12'
	M R1,R13
	LSH R1,-1
	MM R1,HV13'
	M R14,R4
	M R15,R5

;	KILL DECIMAL POINT FEATURE
	M R1,[SO NOPNT]
	MM R1,FXFRM

	LSH R4,12.
	IOR R4,YUMMS
	MM R4,YUMMY

	M R4,R14
	HRLI R11,R6
	IOR R1,[@]

	MI R1,1
	IMULI R1,10.
	SOJG R4,.-1
	MM R1,MXVL'

	MI R1,RETPNT
	MM R1,NEWROW

	MI R1,ECHEMT
	MM R1,ELEMNT

	M R1,R11
	M R2,R12
	M R3,R13
	Q FEDELM

	SKIPN DSPGUM
	PRINT _
;		RESTORE DECIMAL POINTS
	M R1,[SZ NOPNT]
	MM R1,FXFRM
	R

RETPNT:	SKIPE DSPGUM
	J DSPROW
	PUSH P,R6
	PUSH P,R7
	PRINT _
	POP P,R7
	POP P,R6
	R

DSPROW:	PUSH P,R1
	Q FINDP
	POP P,R1
	HLRZ R4,YPRS
	M R2,YINT
	ADDM R2,YPRS

	LDB R2,RSP
	IORI R2,POINTM
	DPB R2,RSP

	ADDI R4,POINTY
	IDPB R4,RSP

	M R2,XRST
	MM R2,XPRS

	R

CENTER:	0	;-1 TO CENTER THE CENTER
DSPGUM:	0	;-1 TO CAUSE DISPLAY NOT PRINT

CENADJ:	ADD R6,HV12
	CAML R6,R12
	SUB R6,R12

	ADD R7,HV13
	CAML R7,R13
	SUB R7,R13

	R
ECHEMT:	PUSH P,R7
	PUSH P,R6
	SKIPE CENTER
	Q CENADJ	;CENTER IN CENTER
	SKIPE DSPGUM
	J MUSRAT
	M R2,@R1
	FDVR R2,R15
	FIXX R2
	MOVM R2,R3
	SKIPGE R3
	IDIVI R2,10.
	CAML R2,MXVL
	J TROUBS
	TYPE YUMMY
RTLMT:	SKIPE SPCE
	PRINT  
	POP P,R6
	POP P,R7
	R

TROUBS:	JUMPGE R1,STARS	;OUT OF RANGE
	M R4,R14
	PRINT -
	SOJG R4,.-1
	J RTLMT
STARS:	M R4,R14
	PRINT +
	SOJG R4,.-1
	J RTLMT

FEDELM:	;ROUTINE TO FEED ELEMENT AT A TIME
	;MARGIN,ROWS,CLMNS
	MM R2,SZBR'
	MM R3,SZAR'
	HRLI R1,R6
	IOR R1,[@]
	M R6,R2
	S R6
SWRPT:	M R7,SZAR
	S R7
	Q NEWROW@
SWAPT:	;ELEMENT IN @R1. I,J IN R6,R7.
	Q ELEMNT@
	SOJGE R7,SWAPT
	SOJGE R6,SWRPT
	R
MUSRAT:	SKIPE NARROW
	Q GLUMP
	M R2,@R1
	FSBR R2,MINEL
	FMPR R2,YANK
	FIXX R2
	POP P,R6
	POP P,R7

	HLRZ R4,XPRS
	M R2,XINT
	ADDM R2,XPRS

	SKIPG R3
	R
	CAILE R3,7
	MI R3,7
	CAMN R3,IOLE
	J SAMI
	MM R3,IOLE

	ADDI R3,INITDP+POINTM
	IDPB R3,RSP

PTXNT:	ADDI R4,POINTX+INTENS
	IDPB R4,RSP
	R

SAMI:	LDB R3,RSP
	IORI R3,POINTM
	DPB R3,RSP
	J PTXNT

GLUMP:	SUB R6,SZBR
	SUB R7,SZAR
	MOVN R6,R6
	MOVN R7,R7
	S R6
	S R7
	R

;	DISPLAY SQUARE PARAMETERS

XCA:	512.	;CENTER OF DIS
YCA:	512.
XCD:	200.	;WIDTH OF DIS
YCD:	200.

RSP:	0

ESCAPE==400000
INITDP==10110
POINTM==20000
POINTY==200000
POINTX==0
VECTMD==100000
DSTOP==3000
INTENS==2000
CHART==60000


APPEND:	0	;1 TO APPEND NOT RESET RSP

DISPLS:	CHRBKO,,.+1
	BLPN,,0
BLPN:	0

STADP:	MM R1,SV1
	MM R2,SV2
	Q CLODIS
	SKIPE APPEND
	J STADP1
	HRLI R1,442200
	HRR R1,DSLMAD
	MM R1,RSP

	SKIPE NARROW
	J NOFILS
	M R1,[403737,,403737]
	MM R1,@DSLMAD
	M R1,DSLMAD
	HRL R1,R1
	A R1
	M R2,DSLLNG
	ADD R2,DSLMAD
	S R2
	BLT R1,(R2)


NOFILS:	SKIPE CORNRS	;SHOULD WE DISPLAY CORNERS
	Q CORDIS
	MI R1,DISPLS
	MM R1,DISLIS

	MOVN R1,DSLLNG
	HRLZ R1,R1
	HRR R1,DSLMAD
	S R1
	MM R1,BLPN

STADP1:	MI R1,ESCAPE
	IDPB R1,RSP
	SO XOLE'
	SO YOLE'

	Q FINDP
	Q OPNDIS
	SKIP
	M R2,SV2
	M R1,SV1
	R



FINDP:	SKIPN NARROW
	R
	PUSH P,RSP
	MI R1,403737
	IDPB R1,RSP
	IDPB R1,RSP
	IDPB R1,RSP
	HRRZ R1,RSP
	SUB R1,DSLMAD
	MOVN R1,R1
	HRLZ R1,R1
	HRR R1,DSLMAD
	S R1
	MM R1,BLPN
	POP P,RSP
	R
DSPARR:	;DISPLAY AN ARRAY
	;MARGIN,ROWS,CLMNS
	PUSH P,R1
	PUSH P,R2
	PUSH P,R3
	Q MARTER
	SO DSPGUM	;SET ROUTING SWITCH
.I XINT'=XCD*1000000/NFT
.I YINT'=-YCD*1000000/NFT
.I XPRS'=XRST'=(XCA-XCD*(NFT-1)/(2*NFT))*1000000
.I YPRS'=(YCA+YCD*(NFT-1)/(2*NFT))*1000000
.F YANK'=8.0/(MAXEL-MINEL)
	SKIPE NARROW
	Q AJNRQ
	Q STADP
	MI R4,INITDP+POINTM
	IDPB R4,RSP
	SO IOLE'

	MI R4,0
	POP P,R3
	POP P,R2
	POP P,R1
	Q PNTARR	;PRINT IT
	Q FINDP
	SZ DSPGUM
	R

AJNRQ:	MOVNS XINT
	MOVNS YINT
.I XPRS=XRST=(XCA+XCD*(NFT-1)/(2*NFT))*1000000
.I YPRS=(YCA-YCD*(NFT-1)/(2*NFT))*1000000
	R

CHSCAL:	1
BRIGHT:	3

CHRLNG==200

CHRBKO:	0,,CHRLST-1
CHRLST:	BLOCK CHRLNG

CHRSTR:	M R1,[-2,,CHRLST-1]
	MM R1,CHRBKO

	M R1,CHSCAL
	LSH R1,4
	ADD R1,BRIGHT
	ADD R1,[ESCAPE,,INITDP+POINTM]
	MM R1,CHRLST

	M R1,[POINTY+POINTM,,POINTX+CHART]
	IOR R1,[1760,,0]	;POSITION OF FIRST CHARACTER
	MM R1,CHRLST+1

	M R10,[440600,,CHRLST+2]	;BYTE POINTER FOR DISPLAY CHARACTERS
	R

CHRFNS:	MI R1,35	;SPACE OUT TO FULL WORD
	IDPB R1,R10
	HRRZ R2,R10
MRSPCD:	IDPB R1,R10
	HRRZ R3,R10
	CAMN R2,R3
	J MRSPCD

	M R1,[373737,,STOP]
	MM R1,(R10)
	HRRZ R1,R10
	SUBI R1,CHRLST-1
	MOVN R1,R1
	HRLM R1,CHRBKO
	TRZ R0,DISCHR
	R

CORNRS:	7	;INTENSITY OF CORNERS


MARTER:	Q CHRSTR
	TRO R0,DISCHR
	Q STAMP
.F NFT
	PRINT NFT=%1I4
.F XCA,YCA,XCD,YCD
	PRINT _DIS: CEN=%1I4 %2I4  WID=%3I4 %4I4
.F XDR,YDR,XDF,YDF
	PRINT _VID: CEN=%1I4 %2I4  WID=%3I4 %4I4
	Q CHRFNS
	R

CORDIS:	M R3,CORNRS
	ADDI R3,INITDP+POINTM
	IDPB R3,RSP

	M R1,YCA
	M R2,YCD
	LSH R2,-1
	ADD R1,R2
	CAILE R1,1777
	MI R1,1777
	MM R1,SV1'

	ADDI R1,POINTY+POINTM
	IDPB R1,RSP

	M R1,XCA
	M R2,XCD
	LSH R2,-1
	SUB R1,R2
	CAIGE R1,0
	MI R1,0
	MM R1,SV2'

	ADDI R1,POINTX+INTENS+POINTM
	IDPB R1,RSP

	M R1,SV2
	ADD R1,XCD
	CAILE R1,1777
	MI R1,1777
	ADDI R1,POINTX+INTENS+POINTM
	IDPB R1,RSP

	M R1,SV1
	SUB R1,YCD
	CAIGE R1,0
	MI R1,0
	ADDI R1,POINTY+INTENS+POINTM
	IDPB R1,RSP

	M R1,SV2
	ADDI R1,POINTX+INTENS
	IDPB R1,RSP
	R
PTBLE:	3	;CONO BITS
AOBARR:	0,,0
RESOL:	0
MATR1:	0
MATR2:	0
MATC1:	0
MATR3:	0
MATR4:	0
MATC2:	0
MATP1:	0
MATP2:	0

ONHE:	1024.0

;		VIDISECTOR SQUARE PARAMETERS
XDR:	512.
YDR:	512.
XDF:	200.
YDF:	200.

DVSCAN:	SZ QUICK
DVSCA1:	M R1,NFT
	HRL R1,R1
	MM R1,RESOL
	M R1,NFT
	IMUL R1,R1
	MM R1,ARSZE'
	MOVN R1,R1
	HRLZ R1,R1
	HRR R1,XRRAD
	MM R1,AOBARR

	M R1,XDR
	M R2,XDF
	LSH R2,-1
	ADD R1,R2
	LSH R1,4+18.
	MM R1,MATC1

	M R1,YDR
	M R2,YDF
	LSH R2,-1
	SUB R1,R2
	LSH R1,4+18.
	MM R1,MATC2

	MOVN R1,XDF
	LSH R1,4+18.
	MM R1,MATR1
	M R1,YDF
	LSH R1,4+18.
	MM R1,MATR4

	.VSCAN PTBLE
	MI R1,R1
	.VSTST R1,
	SZ DCTOFL'
	SKIPE QUICK
	R

	M R1,ARSZE
	S R1
	M R3,XRRAD
	HRLI R3,R1
	M R2,ONHE
LOPYZ:	HLLZ R7,@R3
	TLNE  R7,3
	A DCTOFL
	FDVRM R2,@R3
	SOJGE R1,LOPYZ
	R

QUICK:	0	;1 TO OMIT INVERSION
DEMO:	0	;1 FOR DISPLAYING INTERMEDIATE RESULTS

LOOK:	GET XLW,XUP,YLW,YUP
	M R1,XUP
	MM R1,XDR
	M R1,YLW
	MM R1,YDR
	M R1,XUP
	SUB R1,XLW
	MM R1,XDF
	LSH R1,-1
	SUB R1,XDR
	MOVNM R1,XDR
	M R1,YUP
	SUB R1,YLW
	MM R1,YDF
	LSH R1,-1
	ADDM R1,YDR

	Q DVSCAN
	SKIPN EQSZE
	J GUNDER
	M R1,XDR
	MM R1,XCA
	M R1,YDR
	MM R1,YCA
	M R1,XDF
	MM R1,XCD
	M R1,YDF
	MM R1,YCD
GUNDER:	Q XROUT
	R

EQSZE:	0	;1 TO CAUSE EQUAL SIZE RELATIONS VID TI DIS
ROLCAL:	0

BGNROW:	M R7,R6
	R

SWAP:	M R2,@R1
	EXCH R6,R7
	EXCH R2,@R1
	EXCH R6,R7
	MM R2,@R1
	R

TRNSPS:	;TRANSPOSE ARRAY
	;MARGIN ROWS,CLMNS
	MI R4,BGNROW
	MM R4,NEWROW
	MI R4,SWAP
	MM R4,ELEMNT
	J FEDELM

NEGATE:	;NEGATE VECTOR
	;VECTOR,SIZE
	MOVNS (R1)
	A R1
	SOJG R2,.-2
	R


ABSOLU:	;GET XRR=XRR^2+XII^2
	MI R1,XRMG
	MI R2,XIMG
	M R3,NFT
	MI R4,ABSCAL
	MM R4,ROLCAL
	J FEDROW

ABSCAL:	MI R1,0
	J ABSVS

FEDROW:	M R11,R1	;FEED ROW AT A TIME
	M R12,R2	;REAL IMAG SIZE
	M R13,R3
	HRLI R11,R13
	HRLI R12,R13
	S R13
NXTRWG:	M R1,@R11
	M R2,@R12
	HRRM R1,XR1
	HRRM R1,XR2
	HRRM R2,XI1
	HRRM R2,XI2
	Q ROLCAL@
	SOJGE R13,NXTRWG
	R
FONCE:	MI R1,XRMG
	MI R2,XIMG
	M R3,NFT
	MI R4,FTRAN
	MM R4,ROLCAL
	Q FEDROW

	Q TRNXRR

	Q TRNXII

	R

FTRAN:	Q REVBS	;FOURIER TRANSFORM
	J TRANS

FOUR2:	Q FONCE	;2 D  FFT
	J FONCE

FOIR2:	MI R1,WI	;INVERSE 2 D   FFT
	M R2,NFT
	Q NEGATE
	Q FOUR2
	MI R1,WI
	M R2,NFT
	J NEGATE

ARRSCL:	M R11,R4	;MULTIPLY ARRAY BY SCALAR
	MI R4,NONE	;MARGIN,ROWS,CLMNS,SCALAR
	MM R4,NEWROW
	MI R4,SCLIT
	MM R4,ELEMNT

	J FEDELM

NONE:	R

SCLIT:	FMPRM R11,@R1
	R
	
NOTHIN:	Q FOUR2	;FORWARD AND REVERSE
	Q FOIR2

	M R1,NFT
	IMUL R1,R1
	FLOT R1
	M R2,[1.0]
	FDVR R2,R1
	MM R2,FLNUM'
	MI R1,XRMG
	M R2,NFT
	M R3,NFT
	M R4,FLNUM
	Q ARRSCL

	MI R1,XIMG
	M R2,NFT
	M R3,NFT
	M R4,FLNUM
	J ARRSCL


SCLPNT:	1.0	;PRINT SCALE

MAXEL:	1.0
AVREL:	0.0	;AVERAGE
MINEL:	1.0


PNTXR:	MI R1,XRMG	;PRINT XRR
PNTXR1:	M R2,NFT
	M R3,NFT
	MI R4,2
	M R5,SCLPNT
	J PNTARR

DSPXR:	MI R1,XRMG	;DISPLAY XRR
DSPXR1:	M R2,NFT
	M R3,NFT
	J DSPARR

PNTXI:	MI R1,XIMG	;PRINT XII
	J PNTXR1

DSPXI:	MI R1,XIMG	;DISPLAY XII
	J DSPXR1

MAXARR:	MI R4,NONE	;FIND MAX OF ARRAY
	MM R4,NEWROW	;MARGIN,ROWS,CLMNS
	MI R4,MAXCAL
	MM R4,ELEMNT
	M R4,R3
	IMUL R4,R3
	MM R4,TOTCN'
	M R10,[-1.0^20]
	M R11,[1.0^20]
	SZ AVREL
	Q FEDELM
	MM R10,MAXEL
	MM R11,MINEL
.F AVREL=AVREL/FLOAT<TOTCN>
	R

MAXCAL:	M R2,@R1
	FADRM R2,AVREL
	CAMLE R2,R10
	M R10,R2
	CAMGE R2,R11
	M R11,R2
	R

APPFUN:	;APPLY ZOOP TO EACH ELEMENT
	;MARGIN,ROWS,CLMNS
	MI R4,NONE
	MM R4,NEWROW
	MI R4,ZOOP
	MM R4,ELEMNT
	J FEDELM

ZOOP:	M R5,R1
.F @R5=(@R5-AVREL)*(1.0-WR(R6))*(1.0-WR(R7))
	M R1,R5
	R

GETGRY:	;CALCULATE GRADIENT
	;MARGIN,ROWS,CLMNS
	SZ SUMX2'
	SZ SUMY2'
	SZ SUMXY'

	MM R2,NUVY'
	LSH R2,-1
	MM R2,NUV2Y'
	LSH R2,1

	MM R3,NUVX'
	LSH R3,-1
	MM R3,NUV2X'
	LSH R3,1

	MI R4,NONE
	MM R4,NEWROW
	MI R4,ZUMER
	MM R4,ELEMNT
	Q FEDELM

.F ATM'=SUMX2-SUMY2, BTM'=2.0*SUMXY
.F TTM'=SQRT<ATM^2+BTM^2>, STM'=SUMX2+SUMY2
.F SIN2T'=BTM/TTM, COS2T'=ATM/TTM
.F COST'=SQRT<(1.0+COS2T)/2.0>
.F SINT'=SIN2T/(2.0*COST)
.F IMIN'=0.5*(STM-TTM), IMAX'=0.5*(STM+TTM)
.F ICSM2'=IMAX/IMIN
.F GRTAN'=SQRT<ICSM2-1.0>
.F GRAX'=GRTAN*COST
.F GRAY'=GRTAN*SINT
	R

ZUMER:	PUSH P,R6
	PUSH P,R7
	CAML R6,NUV2Y
	SUB R6,NUVY
	CAML R7,NUV2X
	SUB R7,NUVX

	M R3,R6	;I SQUARED
	IMUL R3,R3
	EXCH R1,R3
	Q FLOAT
	EXCH R1,R3

	M R4,R7	;J SQUARED
	IMUL R4,R4
	EXCH R1,R4
	Q FLOAT
	EXCH R1,R4

	M R5,R6	;I TIMES J
	IMUL R5,R7
	EXCH R1,R5
	Q FLOAT
	EXCH R1,R5

	POP P,R7
	POP P,R6

	M R2,@R1
	FMPR R3,R2
	FMPR R4,R2
	FMPR R5,R2

	FADRM R4,SUMX2
	FADRM R3,SUMY2
	FADRM R5,SUMXY

	R
EXAGG:	1.0	;EXAGGERATION IN DISPLAYAGE

PAUSE:	MI R1,30.*5
	.SLEEP R1,
	R

XROUT:	Q MAXXRR
.F MAXEL=MAXEL/EXAGG
.F MINEL=0.0
	J DSPXR

MAXXRR:	MI R1,XRMG
	M R2,NFT
	M R3,NFT
	J MAXARR

DOGRD:	M R1,ONE
	MM R1,EXAGG
	SZ CENTER
	Q DVSCAN	;GET THE PICTURE
	SKIPE DEMO
	Q XROUT	;ORIGINAL

	Q CLRXII

	Q APPXRR
	SKIPE DEMO
	Q PAUSE

	SKIPE DEMO
	Q XROUT	;AFTER ZOOP

	SO CENTER
.F EXAGG=100.0
	Q FOUR2
	SKIPE DEMO
	Q XROUT	;FOURIER TRANSFORM
	Q ABSOLU
.F EXAGG=5000.0
	SKIPE DEMO
	Q PAUSE
	SKIPE DEMO
	Q XROUT	;POWER SPECTRUM
	Q FOIR2
	M R1,ONE
	MM R1,EXAGG
	SKIPE DEMO
	Q XROUT	;AUTO-CORRELATION
	SZ CENTER

	Q GRYXRR
.F COST,SINT,GRTAN
	PRINT _COS=%1F0.4 SIN=%2F0.4 GRAD=%3F2.3
	R
XLW:	0
XUP:	0
YLW:	0
YUP:	0

SLAVE:	HRROI R1,-1	;GET THE DISPLAY AT ALL COSTS
	.MASTER R1,
	SKIP
	Q OPNDIS
	SKIP
	R

CLRXRR:	M R1,XRRAD	;CLEAR OUT XRR
CLRXR1:	SZ (R1)
	M R2,NFT
	IMUL R2,R2
	ADD R2,R1
	S R2
	HRL R1,R1
	A R1
	BLT R1,(R2)
	R

CLRXII:	M R1,XIIAD	;CLEAR OUT XII
	J CLRXR1

REPEAX:	0	;NUMBER OF REPEATS IN NDIS

PHOTO:	MI R1,0	;HACK PHOTOS
	.NDIS R1,
	SKIP
	GET REPEAX
	M R1,REPEAX
	S R1
	.NDIS R1,
	SKIP
	R

APPXRR:	MI R1,XRMG	;APPLY ZOOP TO XRR
	M R2,NFT
	M R3,NFT
	J APPFUN

GRYXRR:	MI R1,XRMG	;GET GRADIENT OF XRR
	M R2,NFT
	M R3,NFT
	J GETGRY

DISPAR:	GET XLW,XUP,YLW,YUP
	M R1,XUP
	MM R1,XCA
	M R1,YLW
	MM R1,YCA
	M R1,XUP
	SUB R1,XLW
	MM R1,XCD
	LSH R1,-1
	SUB R1,XCA
	MOVNM R1,XCA
	M R1,YUP
	SUB R1,YLW
	MM R1,YCD
	LSH R1,-1
	ADDM R1,YCA
	R

TRNXII:	MI R1,XIMG
	J TRNXR1

TRNXRR:	MI R1,XRMG	;TRANSPOSE XRR
TRNXR1:	M R2,NFT
	M R3,NFT
	J TRNSPS

CNT10:	;F	EXAGG=1.0
	Q MAXXRR
.F MINEL=MAXEL*0.2
	J DSPXR

CNT5:	;F	EXAGG=1.0
	Q MAXXRR
.F MINEL=MAXEL*0.6
	J DSPXR


DSPEDG:	;FIND AND DISPLAY THE EDGE OF TH WORLD
.I XCA=512.,YCA=512.,XCD=1024.,YCD=1024.
	Q MARTER
	Q STADP
	MI R1,ESCAPE
	IDPB R1,RSP
	MI R1,7
	ADDI R1,INITDP+POINTM
	IDPB R1,RSP
DSPED1:	SZ PNEDT
	Q GETED1
	Q FINDP
	R


DSPALL:	SZ APPEND
.I XCA=XDR=YDR=YCA=512.,XDF=XCD=YDF=YCD=1024.
	Q DSPEDG
	SO APPEND
.I XDR=XCA=XAVR,YDR=YCA=YAVR,XDF=XCD=XRIG-XLEF,YDF=YCD=YTPS-YDWN
	Q DVSCAN
	Q XROUT
	SZ APPEND
	R

POIDIS:	CAME R1,XOLE
	J XDFRS
	CAME R2,YOLE
	J YDFRO
	R

XDFRS:	MM R1,XOLE
	CAME R2,YOLE
	J XYDFR
	ADDI R1,POINTX+POINTM+INTENS
	IDPB R1,RSP
	R

XYDFR:	ADDI R1,POINTX+POINTM
	IDPB R1,RSP
YDFRO:	MM R2,YOLE
	ADDI R2,POINTY+POINTM+INTENS
	IDPB R2,RSP
	R

BTBLE:	3
BOBARR:	0
BESOL:	0
MBTR1:	0
MBTR2:	0
MBTC1:	0
MBTR3:	0
MBTR4:	0
MBTC2:	0
MBTP1:	0
MBTP2:	0

OLD:	0	;1 FOR OLD VIDI
LINES:	40	;NUMBER OF SCANS
VDSZ:	400
PNEDT:	0	;1 TO PRINT EDGE
HORIZ:	0	;1 FOR HORIZONTAL SCAN


EDGST:	SKIPN NARROW
	J DUMRAN
	M R1,LINES
	ADD R1,R1
	SUB R1,NFT
	SKIPLE R1
	STOP MAKE NFT .GRT. 2*LINES
DUMRAN:
.I XLW=0,XUP=1024.,YLW=0,YUP=1024.
.I BTBLE=1+4*2+340*OLD
	SZ XAVR'
	SZ YAVR'
	SZ XCNR'
	SZ YCNR'
.I XLEF'=1000.,XRIG'=0,YDWN'=1000.,YTPS'=0

	HRLZ R1,VDSZ
	A R1
	MM R1,BESOL
	MOVN R1,VDSZ
	HRLZ R1,R1
	HRR R1,XRRAD
	MM R1,BOBARR

	R

GETEDG:	SO PNEDT	;SET PRINT ON
GETED1:	Q EDGST


.I DAMX'=(XUP-XLW)*20*1000000/VDSZ
.I DAMY'=(YUP-YLW)*20*1000000/(LINES-1)
.I MBTC2=YLW*20*1000000
.I MBTR1=(XUP-XLW)*20*1000000
.I MBTR4=MBTR2=MBTR3=0
.I MBTC1=XLW*20*1000000
	SO HORIZ

	Q SAUER
	SKIPN XCNR
	J NOTFUN
.I XAVR=XAVR/(2*XCNR)
	SKIPN PNEDT
	Q FINDP
.I DAMX=(XUP-XLW)*20*1000000/(LINES-1)
.I DAMY=(YUP-YLW)*20*1000000/VDSZ
.I MBTC2=YLW*20*1000000
.I MBTR3=(YUP-YLW)*20*1000000
.I MBTR1=MBTR2=MBTR4=0
.I MBTC1=XLW*20*1000000
	SZ HORIZ

	Q SAUER
.I YAVR=YAVR/(2*YCNR)
.I XAVR,YAVR
	PRINT _CENTER %1I4 %2I4
.I XLEF,XRIG,YDWN,YTPS
	PRINT  X%1I4-%2I4  Y%3I4-%4I4
	R

NOTFUN:	PRINT TAKE THE LENS CAP OFF
	R

SAUER:	M R7,LINES
	S R7
SCNARL:	Q SCNMRL
	J SARTR
	SKIPN HORIZ
	J VERTIC
.I XT1'=(MBTC1+LEFT*DAMX)/(20*1000000),$
.I XT2'=(MBTC1+RIGHT*DAMX)/(20*1000000),$
.I YT'=MBTC2/(20*1000000)
	M R1,XT2
	CAILE R1,1777
	MI R1,1777
	MM R1,XT2	;AVOID BUMBING ON THE RIGHT
.I XAVR=XAVR+XT1+XT2
	A XCNR
	M R1,XT1
	CAMGE R1,XLEF
	MM R1,XLEF
	M R1,XT2
	CAMLE R1,XRIG
	MM R1,XRIG

	SKIPN PNEDT
	J DSPHRG
	PRINT _Y=%3I4  %1I4-%2I4
SARTR:	SKIPN HORIZ
	J VRTAJ
.I MBTC2=MBTC2+DAMY
SARTA:	SOJGE R7,SCNARL
	R

VRTAJ:
.I MBTC1=MBTC1+DAMX
	J SARTA

VERTIC:
.I XT'=MBTC1/(20*1000000),$
.I YT1'=(MBTC2+LEFT*DAMY)/(20*1000000),$
.I YT2'=(MBTC2+RIGHT*DAMY)/(20*1000000)
	M R1,YT2
	CAILE R1,1777
	MI R1,1777
	MM R1,YT2	;AVOID BUMBING ON THE TOP
.I YAVR=YAVR+YT1+YT2
	A YCNR
	M R1,YT1
	CAMGE R1,YDWN
	MM R1,YDWN
	M R1,YT2
	CAMLE R1,YTPS
	MM R1,YTPS

	SKIPN PNEDT
	J DSPVRG
	PRINT _X=%1I4  %2I4-%3I4
	J SARTR

DSPHRG:
.I XT1,YT
	Q POIDIS
.I XT2,YT
	Q POIDIS
	Q FINDP
	J SARTR

DSPVRG:
.I XT,YT1
	Q POIDIS
.I XT,YT2
	Q POIDIS
	Q FINDP
	J SARTR


SCNMRL:	.VSCAN BTBLE
	MI R1,-1
	.VSTST R1,
	M R6,VDSZ
	S R6
	M R3,XRRAD
	HRLI R3,R6
MVDRB:	M R1,@R3
	TLNE R1,3
	SOJGE R6,MVDRB
	A R6
	SKIPN R6
	R
	MM R6,RIGHT'

	SZ R6
	M R3,XRRAD
	HRLI R3,R6
MVDRA:	M R1,@R3
	TLNN R1,3
	J SOMVR
	A R6
	CAME R6,VDSZ
	J MVDRA
SOMVR:	MM R6,LEFT'
	CAMGE R6,RIGHT
	A (P)
	R

EDGEF:	8	;EDGE EFFECT STEPPER OVER
SIDE:	4	;SIDE OF LITTLE SQUARE
STEP:	4	;STEP SIZE 
MINRWS:	140	;MINIMUM ACCEPTABLE ROW-SIZE

ZPZP:	Q EDGSTR
	M R1,SIDE
	MM R1,XDF
	MM R1,YDF
.I PTBLE=1+4*1+340*OLD
.I NFT=8.

	MI R1,1023.
	MM R1,YDR
	SO QUICK

NWLN:	
.I MBTC2=YDR*20*1000000
	Q SCNMRL
	J RDCYDR	;LOOSE
.I RIGHT=RIGHT-EDGEF
.I LEFT=LEFT+EDGEF
.I RIGHT-LEFT-MINRWS
	SKIPG R1
	J RDCYDR	;TOO NEAR TOP OR BOTTOM
.I XT1=(MBTC1+LEFT*DAMX)/(20*1000000)
.I XT2=(MBTC1+RIGHT*DAMX)/(20*1000000)
	M R1,XT2
	CAILE R1,1777
	MI R1,1777
	MM R1,XT2	;AVOID BUMBING ON THE RIGHT
.I XDR=XT2

	Q DVSCA1	;SETTLING HACK, REMOVE EVENTUALLY

SCMR:	Q DVSCA1
	Q VARVAR
	M R1,VAR
	CAML R1,LIMVAR
	Q KUKU	;OUTPUT
.I XDR=XDR-STEP
	CAMLE R1,XT1
	J SCMR
RDCYDR:
.I YDR=YDR-STEP
	SKIPLE R1
	J NWLN

	SZ QUICK
.I PTBLE=7+340*OLD
	R

LIMVAR:	0.075	;LIMITIN VARIANCE

KUKU:	SKIPN PNEDT	;PRINT ONLY
	Q GRUMB	
.F XDR,YDR,VAR
	PRINT _%1I4 %2I4 %3F0.3
	R

GRUMB:
.I XDR,YDR
	Q POIDIS
	R

VARVAR:	M R7,ARSZE
	S R7
	SZ AVR'
	SZ VAR'
	M R2,XRRAD
	HRLI R2,R7
LPAVVR:	M R1,@R2
	TLNE R1,3
	J FIXR
	FADRM R1,AVR
	FMPR R1,R1
	FADRM R1,VAR
	SOJGE R7,LPAVVR
.F NUMB'=FLOAT<ARSZE>
.F AVR=AVR/NUMB, VAR=VAR/NUMB
.F VAR=VAR-AVR^2
.F VAR=SQRT<MAX<0.0,VAR>>/AVR
	SKIPE TYPED
	Q TELVAR
	R

TELVAR:	SZ TYPED
.I XDR,YDR,AVR,VAR
	PRINT _%1I4 %2I4 %3F4.2 %4F0.3
	R


FIXR:	SZ AVR
	SZ VAR
	R

CRATER:
.I XLW=0,XUP=1024.,YLW=0,YUP=1024.
	Q MARTER
	Q STADP
	MI R1,7
	ADDI R1,INITDP+POINTM
	IDPB R1,RSP
CRATE1:	SZ PNEDT
	Q ZPZP
	Q FINDP
	R

EDGSTR:	Q EDGST
	
.I DAMX=(XUP-XLW)*20*1000000/VDSZ
.I MBTR1=(XUP-XLW)*20*1000000
.I MBTC1=XLW*20*1000000
.I MBTR4=MBTR2=MBTR3=0
	SO HORIZ
	R;                INITIALISE TABLES

INITS:	SETZM R5
LOGNLP: AOS R5	;MASSAGE N INTO NEW FORMS
	ASH R1,-1
	JUMPN R1,LOGNLP
	SOS R5
	MOVEM R5,LN;     GET LN
	MOVEI R1,1
	ASH R1,(R5);     N=2**LN

	PUSHJ P,SETNP
	HRLI R6,R3
	HRLI R7,R5
	HRR R6,ABTRVT
	HRR R7,R6

	MOVEI R2,1
OUTER:	SETZM R3	;MAKE BITREVERSE TBLE
	MOVE R5,R2

LOOP:	MOVE R4,R6@
	ASH R4,1
	MOVEM R4,R6@
	AOS R4
	MOVEM R4,R7@
	AOS R5
	AOS R3
	CAMGE R3,R2
	JRST LOOP

	ASH R2,1
	CAMGE R2,NQ
	JRST OUTER

	MOVE R2,FLT
	MOVE R3,TWPI
	FDVR R3,R2;    TWO PIE OVER N
	MOVEM R3,TPN

	HRRZ R6,WR4
	HRRZ R7,WI4
	MOVE R5,ONE
	MOVEM R5,(R6)
	SETZM (R7)
	MOVEI R4,1

SSINT:	MOVE R1,R3	;MAKE COS AND SIN TBLES
	PUSHJ P,COS
	MOVEM R1,WR4@
	MOVE R1,R3
	PUSHJ P,SIN
	MOVEM R1,WI4@

	FADR R3,TPN
	AOS R4
	CAMGE R4,NO8
	JRST SSINT
	MOVE R5,RTWO
	MOVEM R5,WR4@
	MOVEM R5,WI4@

	HRRZ R2,WR4
	HRRZ R3,WI4
	MOVE R4,NO8
	ADD R2,R4;     WRS
	ADD R3,R4;     WIS

N8AD:	MOVE R1,WR4@
	MOVEM R1,(R3)
	MOVE R1,WI4@
	MOVEM R1,(R2)
	AOS R3
	AOS R2
	SOJGE R4,N8AD
 
	HRRZ R2,WR4
	HRRZ R3,WI4
	MOVE R4,NO4
	ADD R2,R4;     WRS
	ADD R3,R4;     WIS

N4AD:	MOVN R1,WR4@
	MOVEM R1,(R2)
	MOVE R1,WI4@
	MOVEM R1,(R3)
	AOS R3
	AOS R2
	SOJGE R4,N4AD

	HRRZ R2,WR4
	HRRZ R3,WI4
	MOVE R4,NO2
	ADD R2,R4
	ADD R3,R4

N2AD:	MOVE R1,WR4@
	MOVEM R1,(R2)
	MOVN R1,WI4@
	MOVEM R1,(R3)
	AOS R3
	AOS R2
	SOJG R4,N2AD
	MOVE R1,NQ
	AOS R1
	POPJ P,

TRANS:	EXCH R7,XR1;             FAST FOURIER TRANSFORM
	EXCH R10,XR2
	EXCH R11,XI1
	EXCH R12,XI2
	PUSH P,13

	MOVE R1,LN
	MOVEI R2,2
	MOVEM R2,IGA;     GAP TO JUMP
	SOS R2
	MOVEM R2,IS;     SPAN AND NUMBER IN A GROUP
	MOVE R2,NO2
	MOVEM R2,IGR; NO OF GROUPS AND RATE OF INCR
	MOVEM R2,ITN;     ITN IS N OVER 2

DO1R:	MOVEM R1,IQ;    SET I TO LN
	SETZ R1,

DO2R:	MOVEM R1,IST;     START OF GROUP
	MOVE R2,R1
	ADD R2,IS;     KR IS IST+IS
	MOVE R3,R2
	SOS R3
	MOVEM R3,ISTP;     ISTP IS KR-1
	SETZ R3,
	MOVE R4,ITN

DO3R:	M R13,@R10	;XR(2)
	M R14,@R12	;XI(2)

	M R15,WR(R4)
	M R16,WI(R4)

	M R5,R13
	FMPR R5,R15
	M R6,R14
	FMPR R6,R16
	FSBR R5,R6
	FADR R5,@R7
	MM R5,@R10	;XR(2)

	FMPR R15,R14
	FMPR R16,R13
	FADR R15,R16
	FADR R15,@R11
	MM R15,@R12	;XI(2)

	M R15,WR(R3)
	M R16,WI(R3)
	M R5,R13
	FMPR R5,R15
	M R6,R14
	FMPR R6,R16
	FSBR R5,R6
	FADRM R5,@R7	;XR(1)

	FMPR R15,R14
	FMPR R16,R13
	FADR R15,R16
	FADRM R15,@R11	;XI(1)

	A R1
	CAMLE R1,ISTP
	J FINDO3

	ADD R3,IGR
	ADD R4,IGR
	AOJA R2,DO3R

FINDO3:	MOVE R1,IST
	ADD R1,IGA
	CAMGE R1,NQ
	JRST DO2R

	MOVE R1,IGR
	ASH R1,-1
	MOVEM R1,IGR

	MOVE R1,IGA
	MOVEM R1,IS
	ADDM R1,IGA

	MOVE R1,IQ
	SOJG R1,DO1R

	EXCH R7,XR1
	EXCH R10,XR2
	EXCH R11,XI1
	EXCH R12,XI2
	POP P,R13

RESURN:	R
;               COMPLEX VECTOR ABS VALUE

ABSVS:	MOVE R5,R1
	MOVE R1,NN
ABSET:	MOVE R3,XR1@
	FMPR R3,R3
	MOVE R4,XI1@
	FMPR R4,R4
	FADR R3,R4
	JUMPE R3,RT
	MOVE R6,R3
	JUMPE R5,NOSQR

	EXCH R1,R6
	PUSHJ P,SQRT
	EXCH R1,R6

NOSQR:	MOVEM R6,XR1@
	SZ XI1@
RT:	SOJGE R1,ABSET

	JRST RESURN


;               BIT REVERSE COMPLEX VECTOR

REVBS:	MOVE R1,NN
	HRLI R7,R1
	HRR R7,ABTRVT
REVB:	MOVE R2,R7@
	CAML R2,R1
	JRST CONT
	MOVE R3,XR2@
	EXCH R3,XR1@
	MOVEM R3,XR2@
	MOVE R3,XI2@
	EXCH R3,XI1@
	MOVEM R3,XI2@
CONT:	SOJGE R1,REVB

	JRST RESURN



SETNP:	MOVEM R1,NQ;     SAVE N
	MOVEM R1,NN
	SOS NN
	ASH R1,-1
	MOVEM R1,NO2
	ASH R1,-1
	MOVEM R1,NO4
	ASH R1,-1
	MOVEM R1,NO8
	MOVE R2,NQ
	FLOT R2
	MOVEM R2,FLT
	POPJ P,

FLORET:	R
;               SEPERATE REAL TRANSFORMS

SEPER:	MOVE R1,NO2
	MOVE R2,R1
	SOS R1
SSPRS:	AOS R2
	MOVE R6,XR1@
	MOVE R7,XR2@
	FADR R6,R7
	FSBR R7,XR1@
	FSC R6,-1
	FSC R7,-1

	MOVE R5,XI1@
	MOVE R3,XI2@
	FADR R3,R5
	FSBR R5,XI2@
	FSC R3,-1
	FSC R5,-1

	MOVEM R6,XR1@
	SOS R2
	MOVEM R7,XI2@
	MOVEM R3,XR2@
	AOS R2
	MOVEM R5,XI1@

	SOJG R1,SSPRS
	SETZM XI2@
	MOVE R3,XI1@
	MOVEM R3,XR2@
	SETZM XI1@
	JRST RESURN


DSLMAD:	0

XR1:	(R1)
XR2:	(R2)
XI1:	(R1)
XI2:	(R2)

XRRAD:	0
XIIAD:	0

NMAX==480.

NFT:	NMAX

BTRVT:	BLOCK NMAX
WR:	BLOCK NMAX
WI:	BLOCK NMAX

ABTRVT:	BTRVT

WR3:	WR(R3)
WR4:	WR(R4)
WI3:	WI(R3)
WI4:	WI(R4)
XRMG:	BLOCK NMAX
XIMG:	BLOCK NMAX

VARIAB
CONSTA

NWCRS:	0
NWCR:	.+1


	END START

	R

GRUMB:
.I XDR,YDR
	Q POIDIS
	R

VARVAR:	M R7,ARSZE
	S R7
	SZ AVR'
	SZ VAR'
	M R2,XRRAD
	HRLI R2,R7
LPAVVR:	M R1,@R2
	TLNE R1,3
	J FIXR
	FADRM R1,AVR
	FMPR R1,R1
	FADRM R1,VAR
	SOJGE R7,LPAVVR
.F NUMB'=FLOAT<ARSZE>
.F AVR=AVR/NUMB, VAR=VAR/NUMB
.F VAR=VAR-AVR^2
.F VAR=SQRT<MAX<0.0,VAR>>/AVR
	SKIPE TYPED
	Q TELVAR
	R

TELVAR:	SZ TYPED
.I XDR,YDR,AVR,VAR
	PRINT _%1I4 %2I4 %3F4.2 %4F0.3
	R


FIXR:	SZ AVR
	SZ VAR
	R

CRATER:
.I XLW=0,XUP=1024.,YLW=0,YUP=1024.
	Q MARTER
	Q STADP
	MI R1,7
	ADDI R1,INITDP+POINTM
	IDPB R1,RSP
CRATE1:	SZ PNEDT
	Q ZPZP
	Q FINDP
	R

EDGSTR:	Q EDGST
	
.I DAMX=(XUP-XLW)*20*1000000/VDSZ
.I MBTR1=(XUP-XLW)*20*1000000
.I MBTC1=XLW*20*1000000
.I MBTR4=MBTR2=MBTR3=0
	SO HORIZ
	R;                INITIALISE TABLES

INITS:	SETZM R5
LOGNLP: AOS R5	;MASSAGE N INTO NEW FORMS
	ASH R1,-1
	JUMPN R1,LOGNLP
	SOS R5
	MOVEM R5,LN;     GET LN
	MOVEI R1,1
	ASH R1,(R5);     N=2**LN

	PUSHJ P,SETNP
	HRLI R6,R3
	HRLI R7,R5
	HRR R6,ABTRVT
	HRR R7,R6

	MOVEI R2,1
OUTER:	SETZM R3	;MAKE BITREVERSE TBLE
	MOVE R5,R2

LOOP:	MOVE R4,R6@
	ASH R4,1
	MOVEM R4,R6@
	AOS R4
	MOVEM R4,R7@
	AOS R5
	AOS R3
	CAMGE R3,R2
	JRST LOOP

	ASH R2,1
	CAMGE R2,NQ
	JRST OUTER

	MOVE R2,FLT
	MOVE R3,TWPI
	FDVR R3,R2;    TWO PIE OVER N
	MOVEM R3,TPN

	HRRZ R6,WR4
	HRRZ R7,WI4
	MOVE R5,ONE
	MOVEM R5,(R6)
	SETZM (