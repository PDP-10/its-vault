ROOT3:	1.7320508
ZINUUR:	100.0	;ROUGH DISTANCE DOWN TO SADDLE
WINGS:	50.0	;WING DISTANCE TO HACK AT
WINROL:	90.0	;WING SIZE IN FINDING ROLL
WINSID:	70.0	;WING SIZE IN FINDING WIDTH

NORMAL:			;NORMALISE THE NOSE ROTATIONALLY
.F ZNT=ZINUUR/FFLOAT<CUTSN>
.F ZIN=ZINUUR-ZNT,SIZEC=1.0
.F XRT=XST,YRT=YST,ZRT=ZST
	SO ONTPOF
	Q SCAT		;FIND AND SORT CONTOUR POINTS-OR SCORN FOR SPEED
	MI U,1
	Q MXLVU		;FIND PEAK APPROXIMATELY AND EXTRACT FLOATING VALUES
	Q MXLVV		;MORE ACCURATELY
.F PITCH=-ATAN<YDUL/(ZTHSLV)>+(30.0/180.0)*3.1415,YAW=-ATAN<XDUL/(ZTHSLV)>	;REAL COORDS W.R.T. SINGULAR
;MIGHT CHECK ON ANGLES
	SKIPE WALLP
	PRINT _PITCH=%1F2.2 YAW=%2F2.2 
.F WINGS=WINROL
	SZ U
	Q MXLVU
	Q MXLVV
	Q GTWNS		;GET WINGS
.F ROLL=-0.5*ATAN<(YLFW1*XLFW2+YLFW2*XLFW1)/(YLFW1*YLFW2-XLFW1*XLFW2)>
	SKIPE WALLP
	PRINT ROLL=%1F2.2
.F YRT=YST+RCURV
	SZ DPQFLG
	Q MODDAT	;ROTATE IT
.F YRT=YST
	J DISGO



DET:	0	;DISCRIMINANT

CIRLIN:			;INTERSECT CIRCLE WITH LINE
.F MX=(YCC(1)-YCC(0))/(XCC(1)-XCC(0))
.F MC=YCC(0)-MX*XCC(0)
.F COA=1.0+MX^2 ,COB=2.0*(MX*MC-(MX*YDUL+XDUL)),COC=(MC-YDUL)^2 +XDUL^2 -RADD^2
.F COB^2 -4.0*COA*COC
	SKIPGE A
	J NOINGH
.F DET=SQRT<>
.F (-COB+DET)/(COA*2.0),(-COB-DET)/(COA*2.0)
TRYX2:	CAMG A,XCC+0
	CAMGE A,XCC+1
	SKIPA
	J WINX1
	CAMG A,XCC+1
	CAMGE A,XCC+0
	SKIPA
	J WINX1
	M A,B
	CAMN A,[-1]
	J NORNGH
	SO B
	J TRYX2		

WINX1:	
.F ,A*MX+MC
	R

NOINGH:	STRIKE _BAD DETERMINANT
NOING1:
.F (XCC(0)+XCC(1))/2.0,(YCC(0)+YCC(1))/2.0
	R

NORNGH:	STRIKE _INTERCEPT NOT BETWEEN ENDPOINTS
	J NOING1

XCC:	BLOCK 3
YCC:	BLOCK 3
RADD:	0
MX:	0
MC:	0

PEKQDR:			;FIND PEAK OF PARABOLA DEFINED BY 3 POINTS
;CHECK ORDER OF GOODIES PERHAPS
.F 0.5*((XCC(0)^2 -XCC(1)^2 )*(YCC(1)-YCC(2))-(XCC(1)^2 -XCC(2)^2 )*(YCC(0)-YCC(1)))/$
.F ((XCC(0)-XCC(1))*(YCC(1)-YCC(2))-(XCC(1)-XCC(2))*(YCC(0)-YCC(1)))
.F ,((XCC(0)-A)^2 *YCC(1)-(XCC(1)-A)^2 *YCC(0))/((XCC(0)-A)^2 -(XCC(1)-A)^2 )
	R

CONDIT:	SZ DPQFLG	;PUT DATA IN FORM REQUIRED FOR ABSTRACTING PARMS
.F SIZEC=1.0
.F YAW=-PITCH=3.1415/2.0,ROLL=0
	Q MODDIT	;GO MODIFY EACH AND EVERY DATA POINT
.F SIZEC=1.0
	J SETROT

GTDTVC:	Q CONDIT
GTDT:	Q NORMAL
	Q NORMAL
	Q NORMAL
GETDIT:
.F XRT=XST,YRT=YST,ZRT=ZST
.F ZNT=0,ZIN=ZINUUR/FFLOAT<CUTSN>
	Q SCAT
	MI U,1
GTDTL1:	Q MXLVU
.F DEPRD'=ZTHSLV/ROOT3
	Q MXLVV
	FSBR B,DEPRD
	MM B,SEPR-1(U)	;DEPTH OF RIDGE
.F WINGS=MUMF<U>*WINSID
	Q GTWNS		;PERHAPS WINGS SHOULD VARY
.F WIDW(U-1)=XLFW2-XLFW1	;WIDTH AT WING LEVEL
.F WINGS=WINGS*2.0
	Q GTWNS
.F DEPC(U-1)=(YLFW1+YLFW2)/2.0-DEPRD
	AOS U
	CAMG U,CUTSN
	J GTDTL1
	J DISGO

MUMF:	PUSH P,B
	FLOAT A
	M B,CUTSN
	FLOAT B
.F -(A/B*0.5-1.0)
	POP P,B
	R

SPLAT:	PRINT _ RIDGE  WIDTH  CHEEK
SPLAT1:	SZ U
SPLAL1:
.F SEPR(U),WIDW(U),DEPC(U)
	PRINT _%1F4.1 %2F4.1 %3F4.1
	AOS U
	CAMGE U,CUTSN
	J SPLAL1
	R

CUTSN:	5	;NUMBER OF CUTS ACROSS

SEPR:	BLOCK 10
WIDW:	BLOCK 10
DEPC:	BLOCK 10

XCNT:	BLOCK 100
YCNT:	BLOCK 100


MXLVU:
.F ZTHSLV=LEVHH<U>
	M V,STRLVL(U)	;PUT CONTOURS INTO REASONABLE COORDS AND FIND PEAK
	M W,STRLVL+1(U)
	SZ T
.F G=100000.0
TRFLS1:	M A,(V)
	LDB B,XBYT
	LDB C,YBYT
	M A,ZTHSLV
	FAD A,ZRT
	Q BCKTRN
	FSBR A,XRT
	FSBR B,YRT
	FSBR C,ZRT
	SKIPE T
	CAME A,XCNT-1(T)
	SKIPA
	J  TRFLS3	;SAME POINT
.F XCNT(T)=,YCNT(T)=
	CAML B,G
	J TRFLS2
	M G,B
	MM T,PKTRV
TRFLS2:	AOS T
	CAIL T,100
	J TOFCST
TRFLS3:	AOS V
	CAMGE V,W
	J TRFLS1
TOFCS1:	SOS T
	MM T,TMXLV	;NUMBER FOR THIS LEVEL -1
	R

TOFCST:	STRIKE _TOO MANY PER LEVEL
	J TOFCS1

MXLVV:	M T,PKTRV
	JUMPE T,TLFZR
	CAIL T,TMXLV
	J TRGZR
MXLVV1:
.F XCC(1)=XCNT(T),YCC(1)=YCNT(T)
.F XCC(0)=XCNT(T-1),YCC(0)=YCNT(T-1)
.F XCC(2)=XCNT(T+1),YCC(2)=YCNT(T+1)
	Q PEKQDR	;SOLVING PEAKING PARABOLA
MXLVV2:
.F XDUL=,YDUL=		;STORE PEAK
.F CRUST<A+XRT,B+YRT,ZRT+ZTHSLV>
.F XDUL,YDUL
	R

TLFZR:	STRIKE _MXLVV TO LEFT
.F XCNT(T),YCNT(T)
	J MXLVV2

TRGZR:	STRIKE _MXLVV TO RIGHT
.F XCNT(T),YCNT(T)
	J MXLVV2


ZTHSLV:	0	;CURRENT Z FOR THIS LEVEL
PKTRV:	0	;POINTER TO ENTRY WITH MIN Y
TMXLV:	0	;NUMBER ON THIS LEVEL -1
XDUL:	0	;LOWEST POINT X
YDUL:	0	;LOWEST POINT Y

BLCH:
.F (XCNT(T)-XDUL)^2 +(YCNT(T)-YDUL)^2
	CAML A,WING2
	AOS (P)
	R

GTWNS:	M T,PKTRV	;GET WINGS
.F WING2'=WINGS^2
GETLW1:	SOJL T,LFWNOF
	Q BLCH
	J GETLW1
.F XCC(0)=XCNT(T),YCC(0)=YCNT(T)
.F XCC(1)=XCNT(T+1),YCC(1)=YCNT(T+1)
.F RADD=WINGS
	Q CIRLIN	;INTERSECT LINE WITH CIRCLE
.F XLFW1'=,YLFW1'=
GETLW8:
.F CRUST<A+XRT,B+YRT,ZRT+ZTHSLV>
	M T,PKTRV
GETLW2:	AOS T
	CAMLE T,TMXLV
	J RGWNOF
	Q BLCH
	J GETLW2
.F XCC(1)=XCNT(T),YCC(1)=YCNT(T)
.F XCC(0)=XCNT(T-1),YCC(0)=YCNT(T-1)
.F RADD=WINGS
	Q CIRLIN
.F XLFW2'=,YLFW2'=
GETLW9:
.F CRUST<A+XRT,B+YRT,ZRT+ZTHSLV>
	R

LFWNOF:;	STRIKE _RAN OFF LEFT WING-GTWNS
	AOS T
.F XFLW1'=XCNT(T),YLFW1'=YCNT(T)
	J GETLW8

RGWNOF:;	STRIKE _RAN OFF RIGHT WING-GTWNS
	SOS T
.F XLFW2'=XCNT(T), YLFW2'=YCNT(T)
	J GETLW9


CRUST:	Q ONTO	;PUT CROSS ON SCOPE IN APPROPRIATE PLACE
.I ,,C+SCNOFF+SCNINC*U/UULTM
	J DCROSS


DSQARY:	-1	;ARRAY HOLDING REDUCED NOSES
DSQPTR:	0	;POINTER INTO SAME ARRAY
NODES:	0	;NUMBER OF NOSES CURRENTLY STORED

SATVCT:
.I DSQARY=ARYALS<DSQARY,2000>
.I DSQPTR=NODES=0
	R

STRVCT:	M A,DSQARY	;STORE CURRENTLY CALCULATED REDUCED NOSE
	M T,DSQPTR
.I ,,CUTSN*3+2
	ADD C,T
	CAML C,ARYL(A)	;ENOUGH SPACE LEFT IN ARRAY ?
	Q INKDSQ
	M B,ARYORG(A)
	ADD B,T
	M C,INOP+1	;GET NAMES
	MM C,(B)
	M C,INOP+2
	MM C,1(B)
	ADDI B,2
	M C,B
	HRLI C,SEPR
	ADD B,CUTSN
	BLT C,-1(B)	;MOVE IN DISTANCES TO RIDGE
	M C,B
	HRLI C,WIDW
	ADD B,CUTSN
	BLT C,-1(B)	;MOVE IN WIDTHS AT HALF-WAY LEVEL
	M C,B
	HRLI C,DEPC
	ADD B,CUTSN
	BLT C,-1(B)
	SUB B,ARYORG(A)
	MM B,DSQPTR
	AOS NODES
	R


INKDSQ:	;EXPAND ARRAY HOLDING NOSES
.I DSQARY=ARYALS<DSQARY,ARYL(A)+2000>
	R


OUTNOD:		;PRINT ALL REDUCED NOSES
.I CUTSN,NODES=DSQPTR/(CUTSN*3+2)
	PRINT _CUTS=#1 NODES=#2__
	SZ T
OUTNO1:	Q GATNOD	;GET THIS ONE DOWN
	M A,T
	PRINT _%1I4 
	Q NAMEP		;PRINT ITS NAME
	SKIPN ALPNFL
	J OUTNU2
	Q SPLAT1	;PRINT ITS VALUES
	PRINT _
OUTNU2:	AOS T
	CAMGE T,NODES
	J OUTNO1
	R

ALPNFL:	-1	;CAUSE FULL AMOUNT OF OUTPUT IN OUTNOD

GATNOD:
.I DSQARY,T*(CUTSN*3+2)+ARYORG(A)
	M A,(B)
	MM A,INOP+1	;FIRST NAME
	M A,1(B)
	MM A,INOP+2	;SECOND NAME
	ADDI B,2
	MI C,SEPR
	HRL C,B
	MI D,SEPR
	ADD D,CUTSN
	BLT C,-1(D)
	ADD B,CUTSN
	MI C,WIDW
	HRL C,B
	MI D,WIDW
	ADD D,CUTSN
	BLT C,-1(D)
	ADD B,CUTSN
	MI C,DEPC
	HRL C,B
	MI D,DEPC
	ADD D,CUTSN
	BLT C,-1(D)
	R

FLSNOD:	GET N1
.F DSQARY,N1*(CUTSIN'=(CUTSN*3+2))+ARYORG(A),DSQPTR+ARYORG(A)
	HRLS B
	ADD B,CUTSIN
	MOVSS B
	BLT B,-1(C)	;KILL ONE ENTRY IN REDUCED NOSES TABLE
	SOS NODES
.I DSQPTR=DSQPTR-CUTSIN
	R

CAREL:
.I N1=0
CARE2:	SO FRCNPT
	PRINT __%1I2: 
	SZ FRCNPT
	AOS A
	SKIPN ONYTRI
	SZ A
	MM A,N2
	CAML A,NODES
	J CARE3		;DONE
CARE1:
	Q COMPN1
.I ,N1,N2
	SKIPE MTRFL
	J MTROUT
	SKIPN TSPNFL
	CAMGE A,CARVAL
	PRINT _%2I4 %3I4 %1F4.1
CARE4:	AOS A,N2
	CAMGE A,NODES
	J CARE1
	AOS A,N1
	CAMGE A,NODES
	J CARE2
CARE3:	PRINT _
	R

MTROUT:	SO FRCNPT
	PRINT %1F3.0
	SZ FRCNPT
	J CARE4

ONYTRI:	-1	;PRINT ONLY HALF OF SYMMETRIC DISTANCE MATRIX
MTRFL:	0	;PRINT IT IN MATRIX FORM
TSPNFL:	-1	;TO PRINT ALL DISTANCES IN CAREL
CARVAL:	5.0	;CUT-OFF VALUE FOR OUTPUT

N1:	0
N2:	0

COMPRN:	GET N1,N2
	Q COMPN1	;COMPARE TWO NODES
	STRIKE %1F4.1
	R

COMPN1:
.I DSQARY,,N1*(CUTSN*3+2)+ARYORG(A)+2,N2*(CUTSN*3+2)+ARYORG(A)+2
	SETZB A,E
	SZ G
	M F,CUTSN
	IMULI F,3
COPM1:
.F A=A+(ZR(C)-ZR(D))^2 *WEIGH(E)
	FADR G,WEIGH(E)
	AOS C
	AOS D
	AOS E
	CAMGE E,F
	J COPM1
	FDVR A,G
	J SQRT

WEIGH:	2.0?2.0?2.0?2.0?2.0
	1.0?1.0?1.0?1.0?1.0
	0.5?0.5?0.5?0.5?0.5

WRTNOD:	MI A,3
	HRLM A,NODFIL
	.OPEN DSOC,NODFIL
	J OPINFL
	M A,[-1,,NODES]
	.IOT DSOC,A
	M A,DSQARY
	M B,ARYORG(A)
	MOVN C,DSQPTR
	HRL B,C
	.IOT DSOC,B
	.CLOSE DSOC,
	R

NODFIL:	0,,(SIXBIT /DSK/)
	SIXBIT /ALL   NOSES /


REDNOD:	MI A,2
	HRLM A,NODFIL
	.OPEN DSIC,NODFIL
	J OPINFL
	M A,[-1,,NODES]
	.IOT DSIC,A
.I DSQPTR=(CUTSN*3+2)*NODES
.I DSQARY=ARYALS<DSQARY,DSQPTR>
	MOVN B,DSQPTR
	HRLS B
	HRR B,ARYORG(A)
	.IOT DSIC,B
	.CLOSE DSIC,
	R

 W,STRLVL+1(U)
	SZ T
.F G=100000.0
TRFLS1:	M A,(V)
	LDB B,XBYT
	LDB C,YBYT
	M A,ZTHSLV
	FAD A,ZRT
	Q BCKTRN
	FSBR A,XRT
	FSBR B,YRT
	FSBR C,ZRT
	SKIPE T
	CAME A,XCNT-1(T)
	SKIPA
	J  TRFLS3	;SAME POINT
.F XCNT(T)=,YCNT(T)=
	CAML B,G
	J TRFLS2
	M G,B
	MM T,PKTRV
TRFLS2:	AOS T
	CAIL T,100
	J TOFCST
TRFLS3:	AOS V
	CAMGE V,W
	J TRFLS1
TOFCS1:	SOS T
	MM T,TMXLV	;NUMBER FOR THIS LEVEL -1
	R

TOFCST:	STRIKE _TOO MANY PER LEVEL
	J TOFCS1

MXLVV:	M T,PKTRV
	JUMPE T,TLFZR
	CAIL T,TMXLV
	J TRGZR
MXLVV1:
.F XCC(1)=XCNT(T),YCC(1)=YCNT(T)
.F XCC(0)=XCNT(T-1),YCC(0)=YCNT(T-1)
.F XCC(2)=XCNT(T+1),YCC(2)=YCNT(T+1)
	Q PEKQDR	;SOLVING PEAKING PARABOLA
MXLVV2:
.F XDUL=,YDUL=		;STORE PEAK
.F CRUST<A+XRT,B+YRT,ZRT+ZTHSLV>
.F XDUL,YDUL
	R

TLFZR:	STRIKE _MXLVV TO LEFT
.F XCNT(T),YCNT(T)
	J MXLVV2

TRGZR:	STRIKE _MXLVV TO RIGHT
.F XCNT(T),YCNT(T)
	J MXLVV2


ZTHSLV:	0	;CURRENT Z FOR THIS LEVEL
PKTRV:	0	;POINTER TO ENTRY WITH MIN Y
TMXLV:	0	;NUMBER ON THIS LEVEL -1
XDUL:	0	;LOWEST POINT X
YDUL:	0	;LOWEST POINT Y

BLCH:
.F (XCNT(T)-XDUL)^2 +(YCNT(T)-YDUL)^2
	CAML A,WING2
	AOS (P)
	R

GTWNS:	M T,PKTRV	;GET WINGS
.F WING2'=WINGS^2
GETLW1:	SOJL T,LFWNOF
	Q BLCH
	J GETLW1
.F XCC(0)=XCNT(T),YCC(0)=YCNT(T)
.F XCC(1)=XCNT(T+1),YCC(1)=YCNT(T+1)
.F RADD=WINGS
	Q CIRLIN	;INTERSECT LINE WITH CIRCLE
.F XLFW1'=,YLFW1'=
GETLW8:
.F CRUST<A+XRT,B+YRT,ZRT+ZTHSLV>
	M T,PKTRV
GETLW2:	AOS T
	CAMLE T,TMXLV
	J RGWNOF
	Q BLCH
	J GETLW2
.F XCC(1)=XCNT(T),YCC(1)=YCNT(T)
.F XCC(0)=XCNT(T-1),YCC(0)=YCNT(T-1)
.F RADD=WINGS
	Q CIRLIN
.F XLFW2'=,YLFW2'=
GETLW9:
.F CRUST<A+XRT,B+YRT,ZRT+ZTHSLV>
	R

LFWNOF:;	STRIKE _RAN OFF LEFT WING-GTWNS
	AOS T
.F XFLW1'=XCNT(T),YLFW1'=YCNT(T)
	J GETLW8

RGWNOF:;	STRIKE _RAN OFF RIGHT WING-GTWNS
	SOS T
.F XLFW2'=XCNT(T), YLFW2'=YCNT(T)
	J GETLW9


CRUST:	Q ONTO	;PUT CROSS ON SCOPE IN APPROPRIATE PLACE
.I ,,C+SCNOFF+SCNINC*U/UULTM
	J DCROSS


DSQARY:	-1	;ARRAY HOLDING REDUCED NOSES
DSQPTR:	0	;POIN