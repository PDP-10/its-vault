Received: from AI.AI.MIT.EDU by MC.LCS.MIT.EDU via Chaosnet; 12 MAY 86  13:40:49 EDT
Date: Mon, 12 May 86 12:26:04 EDT
From: David Chapman <ZVONA@AI.AI.MIT.EDU>
Subject:  end of the list
To: info-bitgraph@MC.LCS.MIT.EDU
cc: ZVONA@AI.AI.MIT.EDU, DCP@AI.AI.MIT.EDU
Message-ID: <[AI.AI.MIT.EDU].37691.860512.ZVONA>

Since this list has been long inactive, and since the hardware the
supports it is going to dies soon, it is hereby officially dead.

Received: from CU-ARPA.CS.CORNELL.EDU by MIT-MC.ARPA 25 Oct 85 05:52:39 EDT
Date: Fri, 25 Oct 85 05:52:33 EDT
From: jqj@CU-ARPA.CS.CORNELL.EDU (J.Q. Johnson)
Message-Id: <8510250952.AA01072@CU-ARPA.CS.CORNELL.EDU>
Received: by CU-ARPA.CS.CORNELL.EDU (5.5/4.30)
	id AA01072; Fri, 25 Oct 85 05:52:33 EDT
To: INFO-TERMS@mit-mc.arpa, WORKS@red.rutgers.edu,
        net-micro-pc@GVAX.CS.CORNELL.EDU
Subject: information on serialized mouse data wanted
Cc: INFO-BITGRAPH@mit-mc.arpa

When using a workstation with a mouse to emulate a terminal, one problem is
how to send mouse-position data inband to the host.  This is important, for 
example, if you want to use the mouse with a host-based editor like Emacs 
that is designed for use with traditional character-oriented crt terminals.  
My question: has any standard arisen for encoding such mouse data?

One possibility, of course, is to transmit a cursor-position sequence (if
the emulation is ANSI standard, that's ESC [ <line> ; <row> R ), but one
frequently wants to have the mouse cursor be independent of the display
cursor, so this is a bad choice.  A variation on this theme is to send
a sequence of relative motion command, as if the user had pressed arrow
keys.  Another (even uglier) possibility is to second-guess why the host 
application program wants to know the mouse cursor; for example, in 
Interlisp-D a click of the mouse sends a sequence of Emacs commands (^A, 
^P, ^N, ^F, etc.) to move the typein point to match the mouse position.

Another possibility, which I prefer, is that used on the BBN Bitgraph --
to send a special command sequence to report on mouse position and status
(e.g. buttons).  For BBN, that sequence is ESC : 2 ; <x> ; <y> ; <flags> c
where x and y are window- or screen-relative pixel coordinates, and flags
encodes such things as which mouse button was pressed, or whether x and y
represent deltas from the previous mouse position.  The Bitgraph may
be programmed to send status reports at timed intervals (to allow host
tracking), on button events, on motion, etc.

I would like to see some standard including these features and others 
(e.g. status reports when the mouse enters a host-settable hotzone or 
crosses a boundary such as a window edge, position reporting in either
pixel or character units, and perhaps support for multiple or 3d pointing 
devices).  Ideally, this would become an extension to X3.64.

Is such a standard unreasonable?  Are there any de facto standards now?

Received: from BBNCC5.ARPA by MIT-MC.ARPA 29 Aug 85 14:33:05 EDT
To: info-bitgraph@mit-mc.ARPA
cc: sdyer@BBNCC5.ARPA
Subject: Forward Technology GTR-01 "Japanese BitGraph"
Date: 29 Aug 85 14:29:16 EDT (Thu)
From: sdyer@BBNCC5.ARPA


We at BBNCC have just completed a week's evaluation of the Japanese
BitGraph, and can unequivocally state that in most respects it is fully
equivalent to the BBN BitGraph.  The qualification comes only from the fact
that we haven't yet received a copy of their symbol table so that we can
relink the various programs (read: games) which can be downloaded directly
into the terminal.  Thus, our experience so far has been with host/terminal
interactions using the escape sequences, and these work as well on the
GTR-01 as on the original BitGraph.  Even our window managers on the C/70
and 4.2BSD VAXes work!  We are expecting to receive a listing of the symbol
table very soon, which should then allow us to judge compatibility with
compiled programs.

Physically, the unit is strikingly different from BBN's, consisting of
three pieces: the monitor on a pedestal, the keyboard, and a box housing
the electronics with cables running out to the monitor, keyboard and
two-button mouse.  The single greatest misfortune with this arrangement is
the presence of a rather loud fan, and the cables connecting the monitor,
keyboard and mouse are too short to allow placement of the electronics on
the floor beneath a desk.  The keyboard, thankfully, retains the
VT100-style layout with the addition of a row of IBM-PC-style function keys
on the left.  It is a low-profile keyboard which has a rather soft feel: a
lot like the feel of the Compac or AT&T PC keyboards.  Whether you'll like
this is a matter of taste; I found I had no problem with it.

Since I just got the manual yesterday, I haven't had a chance to examine
many of the functional differences: there are several Kanji fonts, the
mouse has two, not three, buttons, and the unit is available in 512kb and
2mb versions (as compared with 128kb and 512kb from BBN.) Just as with the
last version of the BitGraph, both landscape and portrait modes are
available, and the monitor, although its pedestal places it in portrait
mode, has a case which is obviously made to lie at an angle for landscape
mode.

Price, quantity 1, is $2950, with discounts presumably available for larger
quantities.  The distributor we have been dealing with here in Cambridge is
Eastmark, a Mr. Marvin Berkowitz.  His phone number is 617-453-9150.
I include this in case people are interested; naturally, BBN has no
connection to Eastmark or Forward Technology.

Received: from BBNCC5 by MIT-MC.ARPA  2 Aug 85 17:08:25 EDT
To: "John G. Aspinall" <JGA@MIT-MC.ARPA>
cc: INFO-BITGRAPH@MIT-MC.ARPA
Subject: Re: The Forward Technology Bitgraph
In-reply-to: Your message of Wed, 17 Jul 85 11:50:07 EDT.
	     <[MIT-MC.ARPA].579086.850717.JGA>
Date: 02 Aug 85 17:04:50 EDT (Fri)
From: sdyer@BBNCC5.ARPA


It seemed to take Forward Technology a long time to get their act together
regarding Japanese BitGraphs, but we've been promised an evaluation unit in in
the next week or so.  Rumor has it that it is pretty much software
compatible with the BBN units.  The local Mass. distributor is a place
called Eastmark, (617)-453-9150, about whom I know nothing yet.
I will be glad to post the comments we get on the evaluation unit once
it comes in, and BBNers have a change to play with it.

/Steve Dyer

Received: from BBNCC5 by MIT-MC.ARPA 26 Jul 85 17:03:09 EDT
To: "John G. Aspinall" <JGA@MIT-MC.ARPA>
cc: INFO-BITGRAPH@MIT-MC.ARPA, jr@BBNCC5.ARPA, wbauer@BBNCC5.ARPA
Subject: Re: The Forward Technology Bitgraph
In-reply-to: Your message of Wed, 17 Jul 85 11:50:07 EDT.
	     <[MIT-MC.ARPA].579086.850717.JGA>
Date: 26 Jul 85 16:54:25 EDT (Fri)
From: jr@BBNCC5.ARPA

FT (part of Digital Computers Ltd. of Japan) is distributing the new
Bitgraph in the US.  DCL bought the technology from BBN.  It should be
upward compatible with any old applications (except, of course,
down-loaded ones).  From what we can tell, they didn't do too much to
the software, aside from adding ROM support for Kanji and changing to
a different mouse.  We are expecting a unit in for evaluation soon,
and I can report more after that happens.

I don't know if this is of much help to you; I don't have any
information on service.

/jr

Date: Wed, 17 Jul 85 11:50:07 EDT
From: John G. Aspinall <JGA@MIT-MC.ARPA>
Subject:  The Forward Technology Bitgraph
To: INFO-BITGRAPH@MIT-MC.ARPA
Message-ID: <[MIT-MC.ARPA].579086.850717.JGA>

This list has been idle for a while, but maybe there's a reason
to wake it up again.

Does anyone have any experience with the *new* non-BBN Bitgraph
as sold by Forward Technology.  A talk on the phone with these
people reveals that they think they have an improved version
(smaller case, faster, cheaper) that is software compatible with
the old version.

Can anyone offer comments on:

 - hands-on experience of the new Bitgraph ?
 - service expected from FT in the Boston area ?
 - anything else that might help me reach a decision about
    whether to consider this terminal.

I plan to use it hardwired to a VMS/Eunice 780, as well as dialing
up to various VMS, Unix, ITS, and other systems.

John Aspinall.

Received: From clemson.csnet by csnet-relay;  27 Apr 84 21:54 EST
Date:     Fri, 27 Apr 84 14:17 EST
From:     Harold Grossman <hcgrs%clemson.csnet@csnet-relay.arpa>
To:       info-bitgraph@mit-mc.arpa
Subject:  Addition to mail list

David,
Would you please add me <hcgrs@clemson> to the mail distribution
list for the BB&N Bitgraph terminal?
Thanks
Harold

Received: from gvax.CORNELL (gvax.ARPA) by arpa.CORNELL (4.12/3.14)
	id AA03157; Tue, 13 Mar 84 12:40:45 est
Date: Tue, 13 Mar 84 12:40:08 est
From: gvax.roger@Cornell (Roger Hoover)
Message-Id: <8403131740.AA05326@gvax.CORNELL>
Received: by gvax.CORNELL (4.12/3.14)
	id AA05326; Tue, 13 Mar 84 12:40:08 est
To: info-bitgraph@mit-mc
Subject: Problems with 2.0c

Our 2.0c bitgraph resets itself when you try to insert a character
in the last column (esc [ @).  Is there a fix for this?  Please respond
by mail as I am not yet on the info-bitgraph mailing list.

			roger@cornell

Date: 18 Jun 1983  14:21 EDT (Sat)
From: Pat O'Donnell <PAO@MIT-EECS>
To:   info-bitgraph@mc, mthompson@xx
cc:   PAO@MIT-EECS
Subject: Emacs mouse library

A new version has been installed on OZ and XX, fixing a horrible bug.
		- Pat

Date: 13 Jun 1983 1834-EDT
From: Joseph A. Frisbie <JAF at MIT-SPEECH>
Subject: ML v2
To: info-bitgraph at MIT-MC

                         Deadline Associates*
                        Hack-a-Minute Division
            "We begin to hack when others begin to crack"

                              -Presents-

                    Emacs / Bitgraph Mouse Library
                             (version 2)

Deadline Associates, Hack-a-Minute division, now announces its Emacs
library for the Bitgraph's mouse, version 2.  It now is completely
extensible, and understands multiple clicks, as well as chords.  (Note
that buttons being held down is not supported.)  Functions to be run
by mouse buttons are user settable, using the M-X Set Mouse Button$
command (analogous to M-X Set Key$).  Decoding of the mouse buttons is
accomplished by the function & Decode Mouse, so anyone who wants to
extend this library can look at the documentation on that function for
preliminary details.  More complete documentation is forthcoming.
Source and :EJ files are on MIT-XX and MIT-OZ, in the <EMACS>
directory.  Suggestions and bugs to PAO@MIT-XX.  I would appreciate
any enhancements being brought to my attention, so that they might be
included in the next release (with appropriate credits).
		- Pat

*Subsidiary of Mu, Inc.
-------

Date:  8 Jun 1983 1359-EDT
From: Joseph A. Frisbie <JAF at MIT-SPEECH>
Subject: SYAS
To: info-bitgraph at MIT-MC


Still yet another song from F&H Enterprises*: Masterpiece, the
theme from masterpiece theatre. For those of you who are on slow
terminals, only the song follows... so you might want to abort now.

*Subsidiary of Mu, Inc.

-Happy tunes 
Joe

#Masterpiece (Theme from Masterpiece Theater)
#by J.J. Mouret and Paul Parnes
#transcribed by J. Frisbie


#	Line 1

v1: !mf	8e1 8d1 |: c1 g c1 d1 | 8e1 8f1 8e1 8d1 8c1 8d1 8e1 8f1 |

v2: !mf	8g 8f |: e e e f | 8g 8a 8g 8f 8e 8f 8g 8a |

v3: !mf	G |: G G G G | h.G 8c 8d |

#	Line 2

v1:	g1 8g1 8g1 g1 a1 | q.g1 8f1 e1 8e1 8f1 | g1 c2 g1 g1 |

v2:	g 8g 8g g a | q.g 8a g 8c1 8d1 | c1 e1 b b |

v3:	e 8e 8e e f | q.e 8d c G | hc hB

#	Line 3

v1:	e1 8d1 8e1 8f1 8g1 8e1 8f1 | d1 g d1 8g 8g | h.g1 !mp 8e1 8d1 |

v2:	g g g g | g g g 8g 8g | h.b !mp 8g 8f |

v3:	hc B C | d G D G1 | D 8G1 8G1 G !mp r |

#	Line 4

v1:	c1 g c1 d1 | 8e1 8f1 8e1 8d1 8c1 8d1 8e1 8f1 | g1 8g1 8g1 g1 a1 |

v2:	e e e f | 8g 8a 8g 8f 8e 8f 8g 8a | g 8g 8g g a |

v3:	G G G G | h.G 8c 8d | e 8e 8e e f |

#	Line 5

v1:	q.g1 8f1 e1 !mf 8e1 8f1 | g1 c2 g1 g1 | e1 8d1 8e1 8f1 8g1 8e1 8f1 |

v2:	q.g 8a g !mf 8c1 8d1 | c1 e1 b b | a a a a |

v3:	q.e 8d c !mf E | hc hB | hA hF |

#	Line 6

v1:	8d1 8g1 8f1 8e1 q.d1 8c1 1|

v2:	8g q.r hr 1|

v3:	hG hf 1|

#	Ending 1

v1:	h.c1 8e1 8d1 2|

v2:	h.e 8g 8f 2|

v3:	hc C r 2|

#	Ending 2 (Including rest of song)

v1:	h.c1 g1 |

v2:	h.e r |

v3:	hc C r |

#	Line 7

v1: !mp	8a1 8g1 8a1 8bb1 8a1 8b1 8a1 8g1 | !p q.f1 8_qf1 f1 |

v2: !mp	wc1 | !p q.d1 8_qd1 d1 |

v3: !mp	wc | !p 8Bb1 8F 8Bb 8B1 8F 8B 8B1 8F |

#	Line 8

v1: !mp	8g1 8f#1 8g1 8a1 8g1 8a1 8g1 8f%1 | !p q.e#1 8_qe1 e1 |

v2: !mp	wb% | !p q.c#1 8_qc1 c1 |

v3: !mp	hG hF% | !p 8A1 8E 8F 8A1 8E 8A 8A1 8E |

#	Line 9

v1:	8f1 8e1 8f1 8g1 8f1 8g1 8f1 8e1 | q.db1 8_qd1 d1 |

v2:	wa | q.bb 8_qb b |

v3:	wA | 8Bb1 8F 8Bb 8B1 8F 8B 8B1 8F |

#	Line 10

v1:	(8c) eb1 d1 e1 f1 g1 f1 gab1 | (sc) !mp bb1 ab1 g1 f1 eb1 f1 g1 a1 !p hb1 |

v2:	g r hr | wr | !p

v3:	wBb | !mp hBb !p sB sAb sG sF 8E sF sG |

#	Line 11

v1:	8f#1 8d1 8f1 f1 g1 8a1 8f1 8a1 a1 b1 | 
	 c2 b1 c2 b1 c2 b1 a1 g1 qa1 qd1 | (qc) g1 r hr |

v2:	wr | wr | b r hr |

v3:	hc 8f# 8d 8f sf sg | sa sg sa sg sa sg sf# se d D | F 8C1 8C1 G1&G2 C1 |

#	Line 12

v1:	wr | wr | hr r 8e1 8d1 3|

v2:	8G1&G2 D1 8D1 G1&G2 8G1&G2 8G1&G2 | G1&G2 8D1 8D1 G1&G2 D1 | 
	 8G1&G2 D1 8D1 G1&G2 r 3|

v3:	wr | wr | wr 3|

#	Ending 3 (Finis)

v1: !f	h.c1 r :|

v2: !f	h.e r :|

v3: !f	hG C r :|
-------

Date:  7 Jun 1983 1726-EDT
From: Joseph A. Frisbie <JAF@MIT-EECS>
Subject: YAMR
To: info-bitgraph@MIT-MC


Yet another musical release from F&H enterprises for your Purdue music
compiler.  This time its the theme from "Chariots of Fire" Again,
comments/suggestions to jaf@mit-xx, g.mah%ee@mit-mc.

Happy listening,
Joe

#Theme  from  Chariots of Fire
#by Vangelis
#Transcribed by J. Frisbie
#Technical Director M. Hamilton

!tempo 80
!key of c
!time 2/2

#	Line 1 and 2

v1: !mf	 c1 q3f1 q3g1 q3a1 | hg1 h_qe1 c1 q3f1 q3g1 q3a1|

v2: !mf  r ha | w_qg r ha |

v3: !mp	 r hC | w_hC1 hC |

#	Line 3, 4 and 5

v1:	w_qg1 qc1 q3f1 q3g1 q3a1 | hg1 h_qe1 qe1 q3f1 q3e1 q3c1 |
	 w_qc1 qc1 q3f1 q3g1 q3a1 | hg1 h_qe1 qc1 q3f1 q3g1 q3a1 |
	 w_qg1 qc1 q3f1 q3g1 q3a1 | hg1 h_qe1 qe1 q3f1 q3e1 q3c1 |
	 w_qc1 qc2 q3b1 q3a1 q3g1 |

v2:	w_qg r ha | w_qg r hf | w_qc r ha  | w_qg r ha | w_qg r ha | w_qg r hf |
	 w_qc qc1 q3b q3a q3g |

v3:	w_hC1 hC | w_hC1 hG2 | w_hC1 hC | w_hC1 hC | w_hC1 hC | w_hC1 hG2 |
	 w_hC1 hE1 |

#	Line 6

v1:	q.b1 8g1 q.a1 8f1 | q.g1 8c2 q3b1 q3a1 q3g1 | wb1 | b1 c2 q3b1 q3a1 q3g1 |

v2:	q.b 8g q.a 8f | q.g 8c1 q3b q3a q3g | w_qb c1 q3b q3a q3g |

v3:	hE1 hF1 | wC1 | hE1 hD1 | hC1  hC1 |

#	Line 7

v1:	q.b1 8g1 q.a1 8f1 | q.g1 8e1 q3f1 q3e1 q3c1 | w_qc1 qc2 q3b1 q3a1 q3g1 |

v2:	q.b 8g q.a 8f | q.g 8e q3f q3e q3c | w_qc c1 q3b q3a q3g |

v3:	hE1 hF1 | wC1 | w_qC1 r hE1 |

#v3:	E1 B1 qG F1 C qA | C1 G1 qE qG2 qG2 | C1 G1 C E G E C G1 | 
#	 C1 G1 C E G c qe |

#	Line 8

v1:	q.b1 8g1 q.a1 8f1 | g1 c2 q3b1 q3a1 q3g1 | wb1 | b1 c2 q3b1 q3a1 q3g1 |

v2:	q.b 8g q.a 8f | g c1 q3b q3a q3g | w_qb c1 q3b q3a q3g |

v3:	hE1 hF1 | wC1 | hE1 hD1 | hC1 hC1 |

#v3:	E1 B1 qG F1 C qA | C1 G1 C E G c qe | E1 B1 qG qG2 qD | C1 G1 C E G c qe |

#	Line 9

v1:	q.b1 8g1 q.a1 8f1 | q.g1 8e1 q3f1 q3e1 q3c1 | wc1 | 

v2:	q.b 8g q.a 8f | q.g 8e q3f q3e q3c | wc | 

v3:	hE1 hF1 | wC1 | wC1 |

#v3:	E1 B1 qG F1 C qA | C1 G1 qE qG2 qG2 | C1 G1 C E qG qG1 | 

-------

Date:  6 Jun 1983 1445-EDT
From: Joseph A. Frisbie <JAF at MIT-SPEECH>
Subject: AS
To: info-bitgraph at MIT-MC


F & H Enterprises* is happy to announce its first release...

The all-time favorite "Born Free" is now available for your Bitgraph.
Comes complete, ready to compile under Perdue's mc. (see enclosure
following this release notice) Comments to jaf@mit-xx or "g.mah@ee"@mit-mc.

Also is there anyone else out there transcibing?

*A subsidiary of Mu, Inc.

#Born Free
#by John Barry
#transcribed J. Frisbie
#technical director M. Hamilton

#Lines 1 and 2

v1: !ff	hc2 h_q.g1 8g1 q3a1 q3g1 q3f1 | he1 h_q.c1 8g1 q3a1 q3g1 q3f1 |
	 hb1 q.g1 8e1 | q.f1 8f1 q3f1 q3e1 q3d1 |

v2: !ff	hc1 h_q.g 8g q3a q3g q3f | he h_q.c 8g q3a q3g q3f | hb q.g 8e |
	 q.f 8f q3f q3e q3d |

#v3:	hc hG | hA q3G q3F q3E | hE hG | q.A 8A q3A q3G q3F | hB q.G 8E |

#Lines 3 and 4

v1:	wc1 | wr | !f hc2 h_q.g1 8g1 q3a1 q3g1 q3f1 | 
	 he1 h_q.c1 8g1 q3a1 q3g1 q3f1 |

v2:	wc | wr | !f hc1 h_q.g 8g q3a q3g q3f | he h_q.c 8g q3a q3g q3f |

#v3:	hG hA | qG q.E1 | hG h_q.A 8A q3A q3G q3F | hG hG | q.A 8A q3A q3G q3F |

#Lines 5 and 6 and 7

v1:	hb1 q.g1 8e1 | q.g1 8g1 q3g1 q3a1 q3g1 | w_qb1 h_qr | !mf 
	 hd1 h_q.a 8a q3b q3a q3g | he h_q.c1 8c1 q3d1 q3a q3c1 | 
	 q.d1 8c1 q.d1 8c1 | q.d1 8c1 q.d1 8c1 |

v2:	hb q.g 8e | q.g 8g q3g q3a q3g | w_qb h_qr | !mf wr | wr | wr |
	 wr | wr | wr |

#Line 8

v1:	wd1 | B d f g | b d1 f1 g1 |

v2:	wr | F G B B | f g b b |

#Line 9 and 10

v1: !ff	hc2 h_q.g1 8g1 q3a1 q3g1 q3f1 | he1 h_q.c1 8g1 q3a1 q3g1 q3f1 |
	hb1 q.g1 8e1 | hc2 hc2 | wc2 |

v2: !ff	hc1 h_q.g 8g q3a q3g q3f | he h_q.c 8g q3a q3g q3f | hb q.g 8e |
	 hc1 hc1 | wc1 |

-------

Date:  6 Jun 1983 0555-EDT
From: Joseph A. Frisbie <JAF@MIT-EECS>
Subject: Goodies...
To: info-bitgraph@MIT-MC


                          ***Announcment***

                         Deadline Associates *
              "We begin hack when others begin to crack"

                                 is

                             -> PROUD <-

           to announce the latest product developed by its
                       hack-a-minute division:

      A Emacs Library that "understands" your bitgraph's mouse!

                 (Yes, it's absolutely true folks...)

The current alpha-test version supports moving your cursor to where
your mouse is at the mere click of the left button. The code is
availible in emacs:mouse.:ej @mit-xx. Loading the "mouse" library on a
bitgraph will automatically turn the mouse on (small cross-hair in the
lower left corner) and away you go. Bugs and suggestions can be sent
to jaf@mit-xx or pao@mit-xx. Stay tuned for a more functional mouse.

*Subsidary of Mu, Inc.
-------

Date: 19 May 1983 15:45:11-EST
From: rlb@purdue.ARPA (Bob Brown)
Reply-to: rlb@purdue.ARPA
To: UC.MP@MIT-EECS.ARPA
Cc: info-bitgraph@MIT-MC.ARPA, cbosgd!mark@UCB-ARPA.ARPA
Subject:  Re: wanted: termcap for Version 3.10
In-reply-to:  Your message of 19 May 1983 1430-EDT.

Below are the termcap entries I've been using.  The problem with scrolling
in vi can only be fixed by getting BBN to put smarter scroll logic in
the terminal or changing vi or padding scrolls with about 500 ms delay.
I always thought the problem was related to the terminal counting newlines
in its input buffer before scrolling and then moving the screen that
much.  Then vi comes along and paints lines in on the bottom line of the
screen, so you get this big white gap.

We have not had sufficient demand for vi (most use emacs or rand) here
to fix this problem...but if you get a good solution, post it to the
list.

Bob

PS the header on your note had the "user at site" notation
   which violates RFC 822 - you might send a note to your postmaster.
------------------------------------------------------------------------
bg|bitgraph|BBN BitGraph:tc=bg3.10rv:
bg|bg3.10rv|bgrv:BBN BitGraph Terminal (reverse video):tc=bg2.0rv
bg|bg3.10nv|bgnv:BBN BitGraph Terminal (normal video):tc=bg2.0nv
bg|bg3.10|bgn:BBN BitGraph Terminal (no init):tc=bg2.0
bg|bg2.0rv|bgrv:BBN BitGraph Terminal (reverse video):is=\E>\E[?5h\E[?7h:\
	:vb=\E[?5l\E[?5h::tc=bg2.0:
bg|bg2.0nv|bgnv:BBN BitGraph Terminal (normal video):is=\E>\E[?5l\E[?7h:\
	:vb=\E[?5h\E[?5l::tc=bg2.0:
bg|bg2.0|bgn:BBN BitGraph Terminal (no init):al=2*\E[L:bs:cd=150\E[J:\
	:ce=2\E[K:cl=150\E[H\E[J:cm=%i\E[%d;%dH:co#85:cs=\E[%i%d;%dr:dl=2*\E[M:\
	:do=\E[B:k1=\EOP:k2=\EOQ:k3=\EOR:k4=\EOS:kd=\E[B:ke=\E>:kl=\E[D:kr=\E[C:\
	:ks=\E=:ku=\E[A:l1=PF1:l2=PF2:l3=PF3:l4=PF4:li#64:nd=\E[C:ns:pt:rc=\E8:\
	:sc=\E7:se=\E[0m:sf=280\n:so=\E[7m:up=\E[A:xn:
bg|bg1.25rv|bgrv:BBN BitGraph Terminal (reverse video):\
	:vb=\E[?5l\E[?5h:is=\E>\E[?5h\E[?7h:tc=bg1.25:
bg|bg1.25nv|bgnv:BBN BitGraph Terminal (normal video):is=\E>\E[?5l\E[?7h:\
	:vb=\E[?5h\E[?5l:tc=bg1.25:
bg|bg1.25|BBN BitGraph terminal:al=2*\E[L:bs:cd=150\E[J:ce=2\E[K:\
	:cl=150\E[H\E[J:cm=%i\E[%d;%dH:co#85:dl=2*\E[M:do=\E[B:k1=\EP:k2=\EQ:\
	:k3=\ER:k4=\ES:kd=\EB:ke=\E>:kl=\ED:kr=\EC::ks=\E=:ku=\EA:li#64:\
	:ll=\E[64;1H:l1=PF1:l2=PF2:l3=PF3:l4=PF4:nd=\E[C:ns:pt:se=\E[0m:sf=280\n:\
	:so=\E[7m:up=\E[A

Date: 19 May 1983 1430-EDT
From: Mark Plotnick <UC.MP at MIT-EECS>
Subject: wanted: termcap for Version 3.10
To: info-bitgraph at MIT-MC
cc: cbosgd!mark at UCB-ARPA

The EECS department just got some BitGraph 3.10's to replace
our 1.25's.  Does anyone have a termcap entry for these?  The
one we currently have is:

bb|bbn|BitGraph:\
	:co#85:li#64:\
	:al=\E[1L:ce=3\E[K:cd=50\E[J:am:cl=50\E[;H\E[2J:bs:\
	:cm=5\E[%i%2;%2H:dl=\E[1M:nd=2\E[C:up=2\E[A:\
	:so=2\E[7m:se=2\E[m:ti\E:0R:us=2\E[4m:ue=2\E[m:\
	:ks=\E[?1h\E=:ke=\E[?1l\E>:\
	:ku=\EA:kd=\EB:kr=\EC:kl=\ED:\
	:k1=\EP:k2=\EQ:k3=\ER:k4=\ES:pt:sr=5\EM:sf=\n:

The problem with this termcap entry is that, when the cursor is
at the bottom of the screen, vi scrolls by typing

^Jone line of text^M^@^Janother line of text^M

The second ^M isn't being followed by a ^J as it should; thus,
the screen rapidly becomes wrong.  This is at 9600 baud.

Any help would be appreciated.

	Mark (MP @ MC)
-------

Date: 17 May 1983 1308-EDT
From: Jeff Langer <jal at MIT-EECS>
Subject: please remove me from the list.
To: info-bitgraph at MIT-MC
cc: . at MIT-EECS


-------

Date: 13 May 1983 00:19:59-EST
From: Bob Brown <rlb@purdue.ARPA>
Reply-to: rlb@purdue.ARPA
To: info-bitgraph@mit-mc
Subject: ditroff driver for BitGraph

I have written a driver for the device independent troff that, using
the Versatec width and font files, produces output in the BitGraph
terminal (REV 3.10 or later only).  The program works by downloading
fonts as needed into the terminal the way you would expect.  Since it
downloads incrementally, there is no hefty initial startup time.

If you want a copy, send me a note.  Let's consider this a beta-level
distribution.  One graduating PhD student here ran his 400 page thesis
through it several times without problem, though, so it's fairly stable.
It works with eqn, tbl, and pic as well.  Previewing pic output is
a real time-saver (I use BitGraph graphic commands here).

I suppose you should provide some proof that you have the license for
the new troff, like a license number (if there is such a thing) and/or
an ls -l on the distribution directory since my program have several
pieces lifted from the distributed code.

Bob Brown <rlb@purdue>
Purdue-CS (317)494-6530

PS If there is sufficient demand, I will retrofit the program to handle
   the old CAT-specific troff as well.

Date: 3 May 1983 20:53 EDT
From: Chris T. Hibbert <CTH @ MIT-MC>
To: INFO-BITGRAPH @ MIT-MC


I work for GenRad Inc. in Concord, MA, and we had a bitgraph for evaluation
for a few days recently.  (By the way, this was much too short a time to be
useful.)  While I had it, I spent about 4 hours writing MLisp code to drive
the mouse in Gosling's EMACS under UNIX.  We used a termcap entry for a
VT100 with the width and height changed, and it worked quite acceptably.

I looked through the archives for this list, and see that someone
(chris.umcp-cs@udel-relay as of August '82) has a c-level driver for the bg
for Gosling's EMACS, so I'll be surprised if many people want it for more
than just to look at.

If anyone would like to see the code, just send me a letter, and I'll
either send individual copies, or forward to the list if there is a general
demand.  I have already sent a copy to John Robinson of BBN, (jr@bbncd or
jr@bbn-unix) so those of you at BBN can just ask him.

I thoroughly enjoyed using the terminal, and was surprised at how quickly I
could get a good picture up using the leroy package from usenix, and the
4010 emulation mode of the terminal.  (The image was obtained from usenet,
and was the map of usenet that was recently posted.)  There were only minor
problems due to the fact that the terminal was emulating a 4010, and the
UNIX filters were trying to draw on a 4014.

If you want to make general remarks to the mailing list in response to
this, I'd appreciate a cc: since I'm not on the list.  You can mail to me
either as
        cth@mit-mc,
or at work in concord (via usenet) as
        genrad!grkermit!chris@mit-ccc@mit-mc (from arpa), or
        decvax!genrad!grkermit!chris on usenet.

Date: 14 Apr 83 08:56 PST
From: Piersol.eos@PARC-MAXC.ARPA
Subject: Re: Color Graphics Terminal Query
To: Jim Knutson <knutson@utexas-11.ARPA>
cc: info-graphics@utexas-20.ARPA, info-bitgraph@mit-mc.ARPA,
 info-terms@mit-mc.ARPA, Piersol.eos@PARC-MAXC.ARPA

I've had experience with a number of raster-scan graphics systems from Ramtek,
AED, and Chromatics.  

The Ramteks in particular are easy for the first time user to learn.  They come in
a variety of prices ($6,000-$100,000) and a number of resolutions (512x256 to
1280x1024).  Most have a  set of 4 standard graphics bit planes (16 colors) and
one text bit plane.  The Ramtek protocol CGL (Color Graphics Language) will
prove adequate for almost any application, and several also support a PLOT-10
emulation mode.  For general purpose color graphics at a low to medium price I
can recommend nothing better than the Ramtek line.

The major AED offering, the AED 512, is somewhat less easy to use, but is very
powerful.  It can support eight bit planes (256 colors), but has no text plane for
terminal interactions.  Many more of the parameters of the terminal can be set
than in the Ramtek systems.  The AED is an excellent terminal for Medium
resolution Image Processing.

The Chromatics 7900 series terminals are the most powerful of any I've worked
with.  They can be very expensive when fully configured, but support a great
deal of local processing power as well as floppies and hard disks.  Their
resolutions run to 1024x1024, with only 1024x780 displayable at a given time. 
Almost any feature available on the other systems is also available on a
Chromatics, along with several powerful features of it's own I have seen
nowhere else.  It is perhaps the best high-end display system I have seen, but
it's cost frequently runs over $100k.

Whether these terminals fit your particular application depands largely on what
that application is.  If you happen to be doing image processing, look for many
bit planes (to support a wide range of color) and anti-aliasing hardware(to reduce
the impact of limited resolution). Raster Technologies appears to have an
excellent one, even though I have not personally used it.  If solid modelling is
your game, once again look for many bit planes and possibly display list
capabilities.  There are such a large number of terminals available, with such
varying capacities, that without some idea in mind of the application,
recommending a terminal is impossible.

As to software, there are a number of excellent packages available, most are
device independent to some extent.  Issco's DISSPLA package is in particular quite
powerful and supports almost every graphics device available.  There are a
number of other competing packages out there, but DISSPLA has a large user
base (over 400 installations when I last checked, and still growing.  There are
several front ends to DISSPLA to enhance the "user-friendliness" of DISSPLA for
statistical graphics, business graphics, etc.  Issco will doubtless be able to tell you
more about it than me.

If Cartographic or Telemetric Graphics are what you are after, we here at Xerox
have been doing such systems for Ramtek terminals for some time.  Let me know
if you are interested and I'll pass along some more information to you.

Kurt Piersol

Date: 11 Apr 1983 at 1312-CST
From: Jim Knutson <knutson@utexas-11.arpa>
Subject: Color Graphics Terminal Query
To: info-graphics@utexas-20
cc: info-bitgraph@mit-mc,info-terms@mit-mc

I am in desperate need of info on different color graphics terminals.
Anyone with info please send to me and I will summarize for the net
if there is sufficient interest.  What I'm looking for are terminals
of various qualities (color computers may also fall into this category)
and their advantages and pitfalls.  If you are sending info on color
computers, please give some information on any software that is available
for its use as a color graphics terminal.  Any and all information would be
much appreciated.
-------

Date: 28 Mar 1983 10:51:27 EST (Monday)
From: Tony Lake <lake@BBN-UNIX>
Subject: TROFF driver
To: info-bitgraph@mit-mc.arpa
Cc: lee@utexas.arpa, lake@BBN-UNIX

Has anyone developed a TROFF output driver for the BitGraph they would
be willing to share with other BitGraph/UNIX users?

Is there any interest in BBN supporting a user software library for
sharing useful code like this?

Reply to me, and I will summarize to the group.

//Tony


Date: 24 February 1983 22:34 EST
From: Donald E. Hopkins <A2DEH @ MIT-ML>
To: Info-BitGraph @ MIT-MC
In-reply-to: The message of 24 Feb 1983 0722-EST from Sam <fHsu at BBNG>

   Please remove me from your mailing list, along with
don.umcp-cs@udel-relay. Thank you.
	-Don


Date: 24 Feb 1983 0722-EST
From: Sam <fHsu at BBNG>
Subject: programs
To: Info-BitGraph at MIT-MC
Reply-To: fhsu@BBNG

I'd be interested in what people have done with their BGs and what sort
of software they'd be willing to share. For example, rwf@BBNU (Rich Fortier)
not long ago sent out a C program for mouse tracking.
-------


Date:  9 Feb 1983  8:51:47 EST (Wednesday)
From: Robert E. Wells <rwells at bbn-unix>
Subject: bg mouse tracking code (190 lines)
To: info-bitgraph at mit-mc
Cc: rwells at bbn-unix

Here are a couple of C routines I developed for BitGraph mouse tracking.
I wrote them as part of the process of porting Bern Niamir's fedcon font
editor from the NUnix workstation environment to the Vax-Unix/BitGraph
environment.  So they are taken out of context, and not really designed to
be self sufficient.  They have a couple of functional deficiencies that
don't matter to fedcon; they confuse a NUL keystroke with a mouse event,
and they discard/mutilate the escape sequences sent by function keys.

They use globals to hold the current (x,y) mouse position, current button
state, and a mask of buttons changed since the last mouse event.  Other
globals suggest the desired resolution for continuous tracking, and are
set appropriately by the application code.  The menu stuff in fedcon is
essentially unchanged from the workstation environment, since track has
the same external interface.  They assume that the terminal has been set
to CBREAK mode, with ^S and ^Q still enabled for flow control, character
at a time no-echo input.  The interrupt/exit handler disables mouse
events, pops the previously pushed BitGraph state, and restores the Unix
terminal modes.  Hope this is helpful... -Robert

/*****************************************************************************
* track - return next character from terminal, or 0 for mouse event          *
*                                                                            *
*   Arguments:                                                               *
*         flag    - 0 for button events only, 1 for continuous tracking      *
*                                                                            *
*   Returns:  Next character from tty, or 0 for mouse event, as long         *
*                                                                            *
*   Remarks: I don't know why it is declared a long function; that's the way *
*   it came.  Upon mouse event, globals hold current mouse state.  g_ESC     *
*   holds the escape character code; 27 for production use, '$' for          *
*   debugging on my h19 at home.                                             *
*****************************************************************************/

long track(flag)
    register int     flag;
    {
    register int     c;
    extern   int     g_ESC;
    extern   int     g_gridw, g_gridh;
    register int     bgmouse_flags;
    register int     deltax, deltay;

    fflush(stdout);

    if (MouseID < 0)        	    /* Once only initialization */
	{
	MouseBut = 0;
	bgmouse_flags = 0;
	/* Set quiesent timer to 200 milliseconds */
	printf("%c:0;%d;;200c", g_ESC, bgmouse_flags);
	}

    /* If we were tracking continuously but shouldn't be... */
    if ((MouseID ISNT 0) AND (flag IS 0))
	{
	MouseID = 0;
	bgmouse_flags = 077;        /* Enable only button events */
	printf("%c:0;%dc", g_ESC, bgmouse_flags);
	fflush(stdout);
	}
    /* Else if we weren't tracking continuously but should be... */
    else if ((MouseID ISNT 1) AND (flag ISNT 0))
	{
	MouseID = 1;
	bgmouse_flags = 077 | 03400; 	/* Enable button and delta events  */

	/* Adjust mouse reporting to granularity of block grid */
	deltax = max(1, g_gridw / 2);
	deltay = max(1, g_gridh / 2);
	if ((MouseDx ISNT deltax) OR (MouseDy ISNT deltay))
	    {
	    /* If deltas for continuous tracking have changed, fix them */
    	    printf("%c:0;%d;;;;;;;;;%d;%dc",
	        g_ESC, bgmouse_flags, deltax, deltay);
	    MouseDx = deltax;
	    MouseDy = deltay;
	    }
	else
    	    printf("%c:0;%dc", g_ESC, bgmouse_flags);
	fflush(stdout);
	}

    FOREVER
	{
        c = track_getevent();   /* Get event */

	/* Return any keyboard input */
	/* Return any button changing event (MouseNBut ISNT 0) */
	/* Return any event if continuous flag is set and a button is down */
	/* Note that this loop is essentially "debouncing" the mouse */
	/* over transitions between continuous and discrete tracking. */
	if ((c ISNT 0) OR MouseNBut OR (flag AND MouseBut))
	    break;
	}

    /* If mouse is continuous and we have wandered into menu, disable */
    /* continuous tracking until we ask for tracking again.  This improves */
    /* things if we are invoking a mouse button like EXIT or REFRESH. */
    /* The problem is that if the mouse button causes a lot of output to */
    /* the terminal, and we keep sending mouse delta events, we will disable */
    /* flow control and characters will get dropped.  This is really a bug */
    /* in the 4.1BSD Unix terminal driver (and maybe others); any terminal */
    /* input cancels a ^S wait state, not just ^Q.  This is probably a nice */
    /* feature when there is a person at the other end, but TANDEM mode */
    /* should probably disable it, as it wipes out flow control if the */
    /* terminal/microprocessor keeps sending stuff during output. */
    /* Note however that we will be enabling and disabling a lot as we */
    /* travel through the menu... we really need an enablement that sends */
    /* delta events only when a button is down. -Robert Wells, Nov 15, 1982 */

    if ((MouseY > MouseMY) AND (MouseID ISNT 0))
        {
	MouseID = 0;
	bgmouse_flags = 077;    	/* Enable only button events */
	printf("%c:0;%dc", g_ESC, bgmouse_flags);
	fflush(stdout);
	}

    return c;
    }

/*****************************************************************************
* track_getevent - return next event from terminal input                     *
*                                                                            *
*   Arguments:                                                               *
*         None.                                                              *
*                                                                            *
*   Returns:  Next character from tty, or 0 for mouse event                  *
*                                                                            *
*   Remarks: Note that track handles mouse enablement/disablement; we just   *
*   parse mouse escape sequences and set state accordingly.                  *
*****************************************************************************/

int track_getevent()
    {
    register int     c;
    register int     x, y, buttons;

    c = getchar();
Test:
    if (c != '\33')
	return c;
    if ((c = getchar()) != ':')
	goto Test;
    if ((c = getchar()) != '2')
	goto Test;
    if ((c = getchar()) != ';')
	goto Test;

    x = 0;
    c = getchar();
    while ((c >= '0') && (c <= '9'))
	{
	x = (x * 10) + (c - '0');
	c = getchar();
	}
    if (c != ';')
	goto Test;

    y = 0;
    c = getchar();
    while ((c >= '0') && (c <= '9'))
	{
	y = (y * 10) + (c - '0');
	c = getchar();
	}
    if (c != ';')
	goto Test;

    buttons = 0;
    c = getchar();
    while ((c >= '0') && (c <= '9'))
	{
	buttons = (buttons * 10) + (c - '0');
	c = getchar();
	}
    if (c != 'c')
	goto Test;

    /* Note that fedcon thinks the origin is in the upper left, */
    /* while the bitgraph thinks of it as being in the lower left. */
    MouseX = x;
    MouseY = SCRNHIGH - y - 1;
    /* 0=right, 1=middle, 2=left */
    buttons &= 7;
    MouseNBut = buttons & (~MouseBut);
    MouseBut = buttons;
    return 0;   /* return 0 to indicate mouse event */
    }


Date:  7 Feb 1983 1622-EST
From: Mark Plotnick <MP@MIT-XX>
Subject: Version 3 software?
To: info-bitgraph@MIT-MC

A group here recently received some Version 3 BitGraphs --
the ones with the ladybug-like mice.  It looks like,
with a little work, one can build a menu system, and
even a full-blown window system, on top of these machines.

As a start, I'll probably write something that produces
pop-up menus and uses the mouse.  Has anybody written
similar software yet?  In particular, I'd like to see
some code that runs on the host and tracks the position
of the mouse.

	Mark
-------

Date: 23 Nov 1982 23:34:47-EST
From: Bob Brown <rlb@Purdue>
Reply-to: rlb@Purdue
To: info-bitgraph@mit-mc
Subject: call for scores

Has anyone out there picked up my music interpreter for the
BitGraph and done anything interestng with it?  If so, please
write and tell me about it.  I'm about to make another pass
over it and would like some input.

Also, if you've done tunes, send them along.  I've done a few
more since posting it at MIT.  One of these is included at
the end of this note.

Bob Brown (rlb)
Purdue-CS (317)494-6530
----------------------------------------------------------------
# Pavana
# The Earle of Salisbury
# by William Byrd
# Adante
# On BitGraph, use mc -u 1 2 3
v1: !mf |: r ha c1 | h.b e | 8.f# sg ha g# | ha r a |
v3: !mf |: wc&e | h.e&B r | hr hd | wc#
v2: !ff |: (qC0) q.a 8a e a | a 8g# 8f# 8g 8a 8b 8c1 | d1&a a hb | q.e 8a he |
v4: !ff |: (qC0) wA&e|he he | q.d 8c hB | wA |
#-----------------------
v1: hc1 8r 8c1 s3b s3c1 s3b 8a | hb 8r 8b s3a s3g s3a 8g | h.a a | wg# :|
v3: r e hf | 8r 8f s3e s3f s3e 8d he | 8r 8e s3d s3e s3d 8c hd | h.e B :|
v2: wa|wg|hc1 8r 8c1 s3b s3c1 s3b 8a | q.e 8B E e :|
v4: wr|hr hb |wf | wb :|
#-----------------------
v1: |: hc hd|q.e 8d c g|hc1 hd1 q.e1 8d1 c1 e1 |
v3: |: r hA B | h.r e|e ha b|c1 r r c1|
v2: |: 8e 8c q.f 8d g|wc1| 8r 8c1 q.f1 8d1 g1 | hg1 ha1|
v4: |: wr|wg&c | wr | hc1 ha&e1|
#-----------------------
v1:e1 q.d1 8e1 c1| q.b 8a 8g 8a 8b 8c1 |8b 8a ha g# 1| wa 2| wa :|
v3:h.b a|g# h.r|hr q.e 8d 1| hc# e A 2| wc# :|
v2: we1|r he1 d1|8d1 8e1 c1 hb| 1| h.a e 2| wa :|
v4: h.g# a|we|he he 1|h.e&A r 2| we&A :|

Date: 5 November 1982 15:06-EST
From: David C. Plummer <DCP at MIT-MC>
To: INFO-BITGRAPH at MIT-MC

This is a test to make sure I didn't destroy this mailing list.
You may ignore it. 

Date: 29 Sep 1982 1637-EDT
From: Steve Berlin <BERLIN at MIT-XX>
Subject: Re: Bitgraph on KL
To: rwf at BBN-UNIX
cc: info-bitgraph at MIT-MC
In-Reply-To: Your message of 29-Sep-82 1444-EDT

We have discovered the problem.  It was my fault, in a sense.
Pins 5,8,20 need to be shorted together in order for the BG to
work, and they were on one of our connectors.  I thought that
I had installed the shorting pins on the BG side, but I remembered
wrong, they were on the other connector.  Hence, when switching
to another system (3 wire connection) we lost because of losing
assertion of DTR and ??? (I forget the signal names).
-------

Date: 29 Sep 1982 14:44:06 EDT (Wednesday)
From: Richard W. Fortier <rwf at BBN-UNIX>
Subject: Re: Bitgraph on KL
In-Reply-to: Your message of 29 Sep 1982 12:15 EDT
To: Steve Berlin <BERLIN at MIT-XX>
Cc: info-bitgraph at MIT-MC

Steve,

Are you using the EIA interface or the current loop interface?
Also, what are the symptoms for 'not working?'  Is it simply
dead in the water, or is it printing garbage characters?

Rich


Date: 29 Sep 1982 1215-EDT
From: Steve Berlin <BERLIN at MIT-XX>
Subject: Bitgraph on KL
To: info-bitgraph at MIT-MC

I have had trouble getting a BitGraph working on my 20.  It works fine
on a VAX, and it works fine when connected to a 20 via coaxial cable, but
a simple (3 wire phone cable) connection doesn't work.  Other terminals
seem to work fine where the BitGraph won't.  Has anybody else had this problem,
or know of a solution?

I have a version 2.0 model.
					-- Steve
-------

Date: 25 Aug 1982 11:35:28 EDT (Wednesday)
From: Richard W. Fortier <rwf at BBN-UNIX>
Subject: Re:  I need a termcap for a BBN bitgraph
In-Reply-to: Your message of 24 Aug 1982 14:09 EDT
To: David C. Plummer <DCP at MIT-MC>
Cc: Chris.umcp-cs at UDEL-RELAY, INFO-BITGRAPH at MIT-MC, DP at MIT-ML,
    mark.umcp-cs at UDEL-RELAY

David,

Why is it that a significant percentage of the non-UNIX community
persists in believing that UNIX cannot share executables?  The system
was able to share executables in version 5 when I was a freshman
in college, and I suspect its ability to do so predates even that
version.

Rich


Date: 24 August 1982 14:09-EDT
From: David C. Plummer <DCP at MIT-MC>
Subject: Re:  I need a termcap for a BBN bitgraph
To: Chris.umcp-cs at UDEL-RELAY
cc: INFO-BITGRAPH at MIT-MC, DP at MIT-ML, mark.umcp-cs at UDEL-RELAY


    It's not VT100 emulation mode -- it's ANSI standard.  That termcap
    works fine with Emacs, but it's a lot better to have a special driver,
    to use multi-line and -character inserts & deletes and such.  To
    anyone who has Gosling's Emacs: I've already got such a driver.
    Ask and thou shalt receive.

Too bad Unix doesn't share executables.  If it did, you would
save on VAX paging performance at the cost of a little less
cursor optimization.  

Date:     22 Aug 82 20:14:49-EDT (Sun)
From:     Chris.umcp-cs at UDel-Relay
To:       Mark Weiser <mark.umcp-cs@UDel-Relay>
cc:       Jeffrey R Del Papa <DP@Mit-Ml>, info-bitgraph at Mit-Ai, 
          chris.umcp-cs at UDel-Relay
Subject:  Re:  I need a termcap for a BBN bitgraph
Via:  UMCP-CS; 23 Aug 82 6:14-EDT

-----------------------------------
Date:     21 Aug 82 13:38:15-EDT (Sat)
From:     Mark Weiser <mark@umcp-cs>
To:       Jeffrey R. Del Papa <DP@mit-ml>
cc:       info-bitgraph at Mit-Ai, chris at Umcp-Cs
Subject:  Re:  I need a termcap for a BBN bitgraph

Here is what we use.  I don't know if this is VT100 emulation
mode or not.  Emacs works fine.
	.
	.
	.
-----------------------------------

It's not VT100 emulation mode -- it's ANSI standard.  That termcap
works fine with Emacs, but it's a lot better to have a special driver,
to use multi-line and -character inserts & deletes and such.  To
anyone who has Gosling's Emacs: I've already got such a driver.
Ask and thou shalt receive.

			- Chris



Date:     21 Aug 82 13:38:15-EDT (Sat)
From:     Mark Weiser <mark.umcp-cs@UDel-Relay>
To:       Jeffrey R Del Papa <DP@Mit-Ml>
cc:       info-bitgraph at Mit-Ai, chris.umcp-cs at UDel-Relay
Subject:  Re:  I need a termcap for a BBN bitgraph
Via:  UMCP-CS; 23 Aug 82 6:12-EDT

Here is what we use.  I don't know if this is VT100 emulation
mode or not.  Emacs works fine.

BG|Bitgraph|BITG|bitg|Bitgraph version 2c:\
	:gr:mi:bs:am:pt:co#85:li#64:\
	:kd=\E[B:kl=\E[D:kr=\E[C:ku=\E[A:k1=\EOP:k2=\EOQ:k3=\EOR:k4=\EOS:\
	:ce=\E[K:cl=\E[2J\E[H:cm=\E[%i%d;%dH:nd=\E[C:up=\EM:\
	:dm=:ed=:dc=\E[P:im=:ei=:ic=\E[@:al=\E[L:dl=\E[M:\
	:so=\E[7m:se=\E[m:us=\E[4m:ue=\E[m:



Date: 17 Aug 1982 01:21:47-EST
From: Bob Brown <rlb at Purdue>
Reply-to: rlb at Purdue
To: info-bitgraph@mit-mc
Subject: New Purdue BitGraph sources

A few minor and otherwise problems have come up since I placed my BitGraph
stuff at MC.  I have fixed the problems that I heard about and have put
a fresh copy of the tar-image file in CSR;MP BITGRA at MIT-MC.  Changes
include:

1) Correct rev 2.0c S-lines files for pacman and space invaders.
2) Enhancements to pacman (delete those score files!).
3) Faster upload.
4) dminor tune deleted - it was in old syntax.

Bob Brown (rlb)
Purdue-CS (317)494-6530

Date:     16 Aug 82 7:52:41-EDT (Mon)
From:     Mark Weiser <mark.umcp-cs@UDel-Relay>
To:       MMILLER at Bbna
cc:       info-bitgraph at Mit-Ai
Subject:  Swiss mice.
Via:  UMCP-CS; 16 Aug 82 19:04-EDT

Swiss mice must refer to the Palo Alto place importing the mice which come with
built-in digital watches.  (Can't recall their name this
second...)  Their letter to me implied readiness to
ship mice, but that RS-232c interfaces were not <quite> ready yet.
When you get some let me know.  Their price looked right.

I've been writing to all the mice places announced on WorkS
recently--if you don't follow this you may wish to look at the
past few weeks' archives.



Date: 16 Aug 1982 10:18:50 EDT (Monday)
From: Richard W. Fortier <rwf at BBN-UNIX>
Subject: Re:  Mice?
In-Reply-to: Your message of     14 Aug 82 16:01:38-EDT (Sat)
To: Mark Weiser <mark.umcp-cs at UDel-Relay>
Cc: info-bitgraph at Mit-Ai

Mark,

We are working on mouse support.  Yes, the $2000 dollar price tag
is ridiculous (who were to talking to?).  The actual figure
hasn't been set yet, but won't be that high.

A question I'd like to ask of the group is 'what should the mouse
protocol look like?' What features do you forsee using?  I won't
say anything about what we have in mind just yet so I won't
bias/preempt any opinions.

Rich



Date: 16 Aug 1982 10:08:00 EDT (Monday)
From: Richard W. Fortier <rwf at BBN-UNIX>
Subject: Re:  More from Maryland's bitgraph group.
In-Reply-to: Your message of     14 Aug 82 10:58:33-EDT (Sat)
To: Mark Weiser <mark.umcp-cs at UDel-Relay>
Cc: info-bitgraph at Mit-Ai

Mark,

It is certainly true that many of the internal routines in
BitGraph assume characters are 16 bits high; this is not so much
a bug as as it was a design decision that enabled us to release
the 2.0c at least a month earlier.  I considered it an excusable
shortcut because that version of the software doesn't allow you
to specify the height when you load a character; it is fixed at
16 bits high.

The current development version of the software has eased that
restriction; characters of arbitrary dimensions may now be
loaded.  The rewrites to RASTOP to make scrolling etc. work
properly are in progress now.  The end result is that everything
will work (I hope!) in the 3.0 software release, but a
substantial performance penalty will be paid when the characters
are not aligned, or not a multiple of 16 in height.


Rich



Date: 15 Aug 1982 2058-EDT
Sender: MMILLER at BBNA
Subject: Re:  Mice?
From: MMILLER at BBNA
To: mark.umcp-cs at UDEL-RELAY
Cc: info-bitgraph at MIT-AI
Message-ID: <[BBNA]15-Aug-82 20:58:17.MMILLER>
In-Reply-To: Your message of     14 Aug 82 16:01:38-EDT (Sat)

I have ordered 8 at something like $495 each.
That includes the interface card and firmware.
However, we haven't received any yet.
  Regards, Mark
ps. They are Swiss mice...


Date:     14 Aug 82 16:01:38-EDT (Sat)
From:     Mark Weiser <mark.umcp-cs@UDel-Relay>
To:       info-bitgraph at Mit-Ai
Subject:  Mice?
Via:  UMCP-CS; 14 Aug 82 18:43-EDT

Any experience with Bitgraph mice?  The BBN person I talked to at
the Boston Usenix conference said BBN was planning to offer one
eventually (it didn't sound soon), and that it would cost around
$2000 (which is ridiculous).



Date:     14 Aug 82 10:58:33-EDT (Sat)
From:     Mark Weiser <mark.umcp-cs@UDel-Relay>
To:       info-bitgraph at Mit-Ai
Subject:  More from Maryland's bitgraph group.
Via:  UMCP-CS; 14 Aug 82 18:43-EDT

Another bug:  Insert-line, delete-line, scrolling, and we think
insert-char and delete-char functions too, do not use the character
height as set by the set text parameters command (BBNSTP).  Instead
they assume that all characters are 16 bits high.  Cursor motion and
adding new text does use the BBNSTP character height, however.

Our problem with the purdue games is that although they come with
versions labeled 2.0C, they don't actually work on 
Bitgraph Version 2.0C.  Bob Brown at purdue has helpfully patched
them for us, but if anyone else has 2.0C bitgraphs, get the fix
from Bob before your gamesters become overally frustrated.



Date:  9 Aug 1982 10:38:01 EDT (Monday)
From: Richard W. Fortier <rwf at BBN-UNIX>
Subject: BitGraph support and marketing questions.
To: bjosephs at bbn-unix
Cc: mar.umcp-cs at UDel-Relay, rwf at BBN-UNIX, info-bitgraph at MIT-MC


----BEGINNING OF FORWARDED MESSAGES----
Date:     5 Aug 82 20:09:37-EDT (Thu)
From:     Mark Weiser <mark.umcp-cs@UDel-Relay>
To:       info-bitgraph at Mit-Mc
Subject:  Bitgraph support software
Via:  UMCP-CS; 7 Aug 82 5:49-EDT

How did other Bitgraph owners get their C-68000 cross compilers,
firmware listings, bithdwr.h files, etc. to run on Vax Unix?
The Bitgraph manual says "these are available" for the asking,
but our salesman (who for some reason is based in Florida,
although we are in Maryland and have a BBN office right up the street...)
cannot seem to locate anything for us.  We have a 68000 cross assembler
written here, but without the location of the firmware routines
or display memory, we can do nothing.  Help!



----END OF FORWARDED MESSAGES----
Bev,

Would you please get in touch with Mark about the tools, etc.?
For the benefit of the rest of the list, marketing questions should
be directed to Bev Josephs <bjosephs at BBN-UNIX>.  Mark, please
contact Bev directly at 617-497-3058 or send her your phone number,
since this discussion really should be moved off of the network.


Rich


Date:  9 Aug 1982  9:14:58 EDT (Monday)
From: Richard W. Fortier <rwf at BBN-UNIX>
Subject: Re:  1 bit wide raster-ops
In-Reply-to: Your message of     26 Jul 82 18:13:32-EDT (Mon)
To: Mark Weiser <mark.umcp-cs at UDel-Relay>
Cc: info-bitgraph at Mit-Mc

Mark,

Sorry to take so long to get back to your question; I was on
vacation.  I'm afraid it is true there is a bug in RASTOP
concerning one wide moves.  The more complete picture is
that when the source is to the LEFT of the destination,
rastop tranfers (width - 1) columns instead of (width)
columns.  A side effect of this bug is that when the width
specified is 1, the column counter counts through 16 bits
worth of columns, crashing the terminal when it touches
illegal memory.

The problem has been fixed here at BBN, and will be
available with the next software release.

Rich


Date: 7 Aug 1982 15:21:20-EST
From: Bob Brown <rlb at Purdue>
Reply-to: rlb at Purdue
To: info-bitgraph@mit-ai
Subject: Purdue Games

The Purdue games do indeed fit in the 128k version - that's the type I
developed them on.  The way I see it, of the 128k, about 98k is used for
the display memory, 8k for control program stack & scratch RAM, leaving
about 22k for downloaded programs.

If you install the S-lines files from the Purdue distribution at MC and
compile Fortier's hostcode & install it, the programs should run (they have
at other sites). If Aliens takes about 16k, it will fit.  Pacman, on the
other hand, requires more memory than the 22k available, so I download
portions of it into the alternate font buffer used by the control program.

Contact me personally if you need more help.

Bob Brown (rlb)
Purdue-CS (317)494-6530


Date:     5 Aug 82 20:05:46-EDT (Thu)
From:     Mark Weiser <mark.umcp-cs@UDel-Relay>
To:       info-bitgraph at Mit-Ai
Subject:  The purdue games.
Via:  UMCP-CS; 7 Aug 82 5:49-EDT

It seems that we have only a 128k Bitgraph, and can't seem to
get the games from Purdue to work (aliens and pacman).
Could it be we lack the memory?  Aliens seems to be about 16k,
and with 96k of display memory, and something for firmware,
perhaps it just won't fit.....



Date:     5 Aug 82 20:09:37-EDT (Thu)
From:     Mark Weiser <mark.umcp-cs@UDel-Relay>
To:       info-bitgraph at Mit-Mc
Subject:  Bitgraph support software
Via:  UMCP-CS; 7 Aug 82 5:49-EDT

How did other Bitgraph owners get their C-68000 cross compilers,
firmware listings, bithdwr.h files, etc. to run on Vax Unix?
The Bitgraph manual says "these are available" for the asking,
but our salesman (who for some reason is based in Florida,
although we are in Maryland and have a BBN office right up the street...)
cannot seem to locate anything for us.  We have a 68000 cross assembler
written here, but without the location of the firmware routines
or display memory, we can do nothing.  Help!


Date: Fri Jul 30 19:40:19 1982
From: npois!npoiv!harpo!decvax!utzoo!watmath!vlsi at Berkeley
To: utzoo!decvax!harpo!npoiv!npois!ucbvax!C70:bitgraph@Berkeley

Where do you get information about the Bitgraph terminals?
Patrick Powell, CCNG,
U. Waterloo, Waterloo, Ont. Canada







Date:     26 Jul 82 20:25:12-EDT (Mon)
From:     Mark Weiser <mark.umcp-cs@UDel-Relay>
To:       info-bitgraph at Mit-Mc
Subject:  Bitmap Manipulation
Via:  UMCP-CS; 28 Jul 82 19:22-EDT

The July 1982 issue of ACM Transactions on Graphics
has an article entitled "A Language for Bitmap Manipulation."
It gives interesting algorithms, etc.


Date:     26 Jul 82 18:13:32-EDT (Mon)
From:     Mark Weiser <mark.umcp-cs@UDel-Relay>
To:       info-bitgraph at Mit-Mc
Subject:  1 bit wide raster-ops
Via:  UMCP-CS; 28 Jul 82 19:22-EDT

In attempting to do some of the Byte magazine documented
raster-op tricks, like zooming an image, some of the people
here tried to do some raster-ops with a height of 1 bit.
This caused a reset of the Bitgraph terminal.  Has anyone else
run into this?


Date: 25 Jul 1982 1145-EDT
Sender: MMILLER at BBNA
Subject: Info-Bitgraph, Hermes
Subject: [Communications Satellite <COMSAT at MIT-AI>: Msg of Sunday...]
From: MMiller
Reply-To: MMiller at BBNA
To: Info-Bitgraph at MIT-MC
Cc: SBliss at BBNF, 
Cc: ACorreira at BBNA, DGorman at BBNA, SAmrhein at BBNA
Message-ID: <[BBNA]25-Jul-82 11:45:19.MMILLER>

The list must be at MC instead of AI.  (Sorry.)
	
Begin forwarded message
Mail-From: MIT-AI
Received-Date: 25-Jul-82 1138-EDT
Date: 25 July 1982 11:35-EDT
From: Communications Satellite <COMSAT at MIT-AI>
To: MMILLER at BBNA
Subject: Msg of Sunday, 25 July 1982 11:35-EDT

A copy of your message is being returned, because:
"INFO-BITGRAPH" at MIT-AI is an unknown recipient.
	Message not sent.
 Failed message follows:
-------
Date: 25 Jul 1982 1135-EDT
Sender: MMILLER at BBNA
Subject: Rubout in Hermes
From: MMILLER at BBNA
To: SBliss at BBNF
Cc: ACorreira at BBNA, DGorman at BBNA, SAmrhein at BBNA, 
Cc: info-bitgraph at MIT-AI
Message-ID: <[BBNA]25-Jul-82 11:35:51.MMILLER>

Dear Susan,

Some further data on the problem with rubbing out in Hermes after
setting the switch terminal type to screen (no-we).  It works
fine on my H19 after telling Tops-20 that I am a VT52.  Thus it
DOES appear to be a bug in the bitgraph firmware.

I'll send a copy to the info-bitgrapSh mailing list to see if
anyone else has figured this out.  I sure hope the new bitgraph
roms are ready soon!

Thanks, Mark


          --------------------
End forwarded message
		

Date:     24 Jul 82 14:03:56-EDT (Sat)
From:     Mark Weiser <mark.umcp-cs@UDel-Relay>
To:       info-bitgraph at Mit-Mc
Subject:  archives
Via:  UMCP-CS; 24 Jul 82 19:22-EDT

We just got a bitgraph for 8 weeks free trial
while I try to convince the powers-that-be to buy 10 or 20.
Does anyone have or know of interesting software running on 
Vax-Unix (4.1bsd) talking to Bitgraphs?  (I can FTP source
without too much trouble.)  Also, my salesman forgot to
give me the listing of the terminal firmware.  Is this on-line?

(P.S. Is the 9 month hiatus in the info-bitgraph archives a bug
or real?)


Date: 22 July 1982 13:15-EDT
From: Mark Plotnick <MP at MIT-MC>
Subject: BitGraph software available
To: INFO-BITGRAPH at MIT-MC

Thanks to the good graces of Bob Brown (rlb@purdue) and
Rich Fortier (rwf@bbn-unix), there's now a collection of
BitGraph software (a few games and a music compiler)
available for FTP.  The file is USERS5;MP BITGRA
on host MIT-MC.  It is a UNIX tar archive, so you should use
TYPE L transfer mode to preserve 8-bit bytes.

Be sure to send constructive suggestions about this
software to the authors listed above.  If you have any other
neat software, I'm sure the list would appreciate knowing
about it.

	Mark

(For those of you at MIT, the un-archived sources are in
/projects/bitgraph on mit-vax.)

Date: 19 Jul 1982 11:40:29 EDT (Monday)
From: Robert E. Wells <rwells at BBN-UNIX>
Subject: Getting rid of gray rectangles inside ITS EMACS
To: info-bitgraph at mit-mc

    Date: 18 Jul 1982 17:22 EDT
    From: Mark L. Miller <MILLER at MIT-AI>
    Meanwhile, as an interim solution, doyou know of any way to persuade emacs
    and/or other systems (tops-20) to pad with NULs?  THanks, Mark

According to my TWENEX EMACS manual, you can set the TECO flag "FS PAD CHR"
to 0 to get NUL padding, or to 127 to get DEL padding.  This is described
in appendix I, section 5.  TECO flags are described in section 22.5, and
are documented through Help T.  Putting "0FS PAD CHR<ESC><CRLF>" in an
appropriate init file, or executing it in the minibuffer, should get rid
of the gray rectangles within EMACS.  By the way, these and similar
problems can sometimes be diagnosed by using the BBNDAC "Display All
Characters" command to make the terminal act as a simple line monitor, as
described on page 34 of the BitGraph Version 2 manual.  With the gray
rectangle problem you would just see gray rectangles after the "Erase In
Line" sequence or wherever, but with your RT11 TECO problem it might be
more illuminating.  Hope this helps, Robert Wells



Date: 16 Jul 1982 16:44:15 EDT (Friday)
From: Winston Edmond <edmond at BBN-UNIX>
Subject: Re: Bugs in Firmware
In-Reply-to: Your message of 16 Jul 1982 09:28 EDT
To: MMILLER at BBNA
Cc: Info-Bitgraph at MIT-MC

   Probably the reason for the gray rectangle is the use of DEL characters
for padding functions like Insert and Delete Line.  The BitGraph displays
DELs as a box, where the H19 and the VT52 discard DELs.  The TOPS-20 EMACS
likes to use DEL characters for padding.  Other TOPS-20 and TENEX programs
also prefer DEL to NUL, since NUL is often used as a string terminator by
operting system functions.
 -WBE



Date: 16 Jul 1982 10:36:56 EDT (Friday)
From: Robert E. Wells <rwells at BBN-UNIX>
Subject: Re: Bugs in Firmware
In-Reply-to: Your message of 16 Jul 1982 09:28 EDT
To: MMILLER at BBNA
Cc: Info-Bitgraph at MIT-MC, rwells at BBN-UNIX

The gray rectangle problem appears with any system that pads with DEL
rather than NUL, because we are printing DEL that way.  That was a mistake
and will be corrected in the next release.

I have not seen or heard of the rt11 screen teco problem before.  Could
you tell me more about the symptoms?  If stuff is getting written across
the entire screen instead of staying inside the top 24 lines, then you
aren't really in vt52 emulation mode.  Both the "\e[?2l" and "\e:1e"
command sequences will put it into vt52 emulation mode.
- Robert Wells


Date: 16 Jul 1982 0928-EDT
Sender: MMILLER at BBNA
Subject: Bugs in Firmware
From: MMILLER at BBNA
To: Info-Bitgraph at MIT-MC
Cc: Miller at MIT-AI
Message-ID: <[BBNA]16-Jul-82 09:28:16.MMILLER>

Has anyone else noticed bugs in the vt100/vt52 compatibility
modes on the Version 2.0 revision C bitgraphs?  "Insert Lines" in
emacs as a vt100 produces a grey rectangle on ours.  Nothing at
all seems to work in vt52 mode in an RT11 screen teco (which
works fine with an H19).

Any suggestions?  Has anyone got non-buggy firmware we could get
proms of?  Is anyone at bbn aware of these problems and working
on them?

Thanks, Mark

Date:  6 Jul 1982 2322-PDT
From: Zellich at OFFICE-3 (Rich Zellich)
Subject: Mailing-list for "List of lists" update notices
To:   All mailing-lists:
cc:   ZELLICH

For those of you not previously aware of it, I maintain a master list
of ARPANET mailing-lists/digests/discussion groups (currently 756
lines or ~29,000 characters) on OFFICE-3 in file:

   <ALMSA>INTEREST-GROUPS.TXT

   For ARPANET users, OFFICE-3 supports the net-standard ANONYMOUS
   login within FTP, with any password.

To keep people up to date on the large number of such lists, I have
established a mailing list for list-of-lists \update notices/.  I do
not propose to send copies of the list itself to the world at large,
but for those ARPANET users who seriously intend to FTP the updated
versions when updated, I will send a brief notice that a new version
is available.  For those counterparts at internet sites who maintain
or redistribute copies for their own networks (DECNet, Xerox, etc.)
and can't reach the master by ARPANET FTP, I will send out the
complete new file.  I do \not/ intend to send file copies to
individual users, either ARPANET or internet; our system is fairly
heavily loaded, and we can't afford it.

There is no particular pattern to the update frequency of INTEREST-
GROUPS.TXT; I will occasionally receive a burst of new mailing-lists
or perhaps a single change of address for a host or mailing-list
coordinator, and then have a long period with no changes.

To get on the list, send requests to ZELLICH@OFFICE-3, \not/ to the
mailing-list this message appears in.

Cheers,
Rich
-------

Date: 23 May 1982 17:25-EDT
From: David C. Plummer <DCP at MIT-MC>
To: INFO-BITGRAPH at MIT-MC

Is there any chance of implementing programmable XON/XOFF
characters?

Date: 3 May 1982 13:45-EDT
From: David C. Plummer <DCP at MIT-MC>
To: INFO-BITGRAPH at MIT-MC

Suggested micro code improvements:

Let control-space send ascii 000 (NULL).  Currently it sends a
space.  Reason: to set or pop marks in EMACS you need to be able
to send ^@ (NULLs).  On several terminals, control space will
generate the correct character.  On some it generates a space.
Typing control space just to get a space isn't entirely useful.
If this is not possible becuase of hardware (i.e., the keyboard
does it and the software can't do anything about) then maybe
there is an easy hardware mod??  

A more global problem: typeing contol-shift-@ (you know what I
mean) does not seem to get the control-@ to the host.  Is this a
problem with the microcode, the uart, or the particular line we
have to the PDP-20? (It works fine from an AAA.)

Date: 8 November 1981 10:05-EST
From: Charles C. Linton <CL at MIT-MC>
To: INFO-BITGRAPH at MIT-MC

I have added Joe Frisbie to this mailing list.  He is an undergraduate
working for Eric.  He is writing a generic graphics software package which
runs on (among other things) the Bitgraph terminal and is likely to have
some comments/suggestions on the terminal software.

Date: 24 September 1981 14:44-EDT
From: David C. Plummer <DCP at MIT-MC>
Subject:  flow control
To: INFO-BITGRAPH at MIT-MC

Do you have plans to implement the ETX/ACK flow control protocol?
The standard sequence is: Host sends an ETX (^C), and when the
terminal reads it out the input buffer he sends an ACK (^F).  As
for XON/XOFF, these would probably want to be programable. It is
important that you send the ACK when you read the ETX, and not
wait for the buffer to empty (as the NEC Spinwriter seems to do).
This allows the host to send 1/4 of a buffer, send an ETX, send
another 1/4, send an ETX, send a third 1/4, send an ETX, then
wait and for each ACK send 1/4 of a buffer followed by an ETX.
This way the host tries to keep the buffer at least 1/2 full and
also leaves room for unexpected output from the operating system
or asynchronous programs.  It is the duty of the host to make
sure the ETX is not in the middle of an escape sequence.
Typically the host will be a program that knows to send ETX and
listen for ACK; it is not necessarily the function of the
operating system.  I haven't started reading the code yet, so I
don't know if it is easy or hard.

Date: 24 Sep 1981  8:07:48 EDT (Thursday)
From: Mike Kraley <kraley at BBN-UNIX>
Subject: Re:  This mailing list
In-Reply-to: Your message of 23 Sep 1981 18:59 EDT
To: David C. Plummer <DCP at MIT-MC>
Cc: INFO-BITGRAPH at MIT-MC, kraley at BBN-UNIX

i suspect its easier if your distribution list just included the
item "bitmap@bbn-unix" in place of the bbn people. this
is our internal distribution list and will make it easier for us
to make our changes - it also saves net traffic.

....Mike

Date: 23 September 1981 18:59-EDT
From: David C. Plummer <DCP at MIT-MC>
Subject:  This mailing list
To: INFO-BITGRAPH at MIT-MC

INFO-BITGRAPH@MIT-MC now exists. Its current content is

    (INFO-BITGRAPH (EQV-LIST
		    ; Information/discussion list for the BBN BitGraph terminal
		    ; ITS archival file
		    (FILE [MC:DCP;INFO BITGRF])
			  ; Massachusetts Institute of Technology
			  (DCP MC) (CL MC) (Eric EE) (JTW SPEECH)
			  ; Bolt Beranek & Newman
			  (rwells BBN-UNIX) (rwf BBN-UNIX)
			  (rhoward BBN-UNIX) (kraley BBN-UNIX)
			  (pelkin BBN-UNIX) (cdh BBN-UNIX)
			  ))

Names, offices and phones of the MIT group:

Eric Ostrom	   (Eric@EE):	     38-370, 253-5624
John T. Wroclawski (JTW@MIT-SPEECH): 36-569, 253-7307
Charles Linton	   (CL@MC):	     38-370, 253-5624
David C. Plummer   (DCP@MC):	   NW16-238, 253-8446


