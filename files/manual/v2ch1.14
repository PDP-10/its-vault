@Chapter[Plotting in MACSYMA]
@Label[elemplt]

MACSYMA can produce plots both on simple printing terminals and on
fancy graphics devices.  This Chapter will deal with the simple plotting
functions, and the next chapter will deal with more complex plotting.

@Section[Simple Plotting Functions]
@Label[simplot]

The MACSYMA functions PLOT, PARAMPLOT, GRAPH, and MULTIGRAPH produce
character plots for the terminal of specified functions and sets of
data points.  The format of these functions and the variables used by
the corresponding routines are described below:

@center(@i[Variables])

LINEL @Index[LINEL] - width of graphing area in terms of number of characters.

PLOTHEIGHT @Index[PLOTHEIGHT] - height of graph in terms of number of characters.

XAXIS[FALSE] @Index[XAXIS] - if set to TRUE will cause the Y=0 axis to be displayed.

YAXIS[FALSE] @Index[YAXIS] - if set to TRUE will cause the X=0 axis to be displayed.
@blankspace(2lines)
@center(@i[Formats for PLOT and PARAMPLOT])

@begin(function)
@fcn[Name="PLOT", Args="F(x), x, low, high"])
- plots the expression F(x) over the domain low < x < high.


@fcn[Name="PLOT", Args="F(x), x, low, high, INTEGER"])
- as above, but plots F(x) only for integer values of x.


@fcn[Name="PLOT", Args="F(x), x, [x1, x2, x3, ..., xn]"])
- plots the function F(x) for the values x1,x2,x3,...,xn.

The first argument to PLOT may also be a list of functions rather than just a
single function.  This permits several functions to be plotted on the same set
of axes. Three optional final arguments may also be given.  They are: (1) an X
axis label (quoted string or name), (2) a Y axis label, and (3) a list of
plotting characters used for the given function(s) enclosed in "s.  (Note also
that if a special symbol such as ; ,  , etc. is used it must be preceded by a
\.)  An * will be used to plot any functions which are not given a particular
plotting character.

@fcn[Name="PARAMPLOT", Args="f1(t),f2(t),t,low,high"])
plots the plane curve f(t) = ( f1(t) , f2(t) ) with parameter t.  The
syntax is basically like that of plot.  For example,
@Begin[Example]
PARAMPLOT(COS(T),SIN(T),T,0,2*%PI);
@End[Example]
plots a circle.  Also several curves may be presented at the same
time by using the following syntax

@fcn[Name="PARAMPLOT", Args="[f1(t), g1(t), ... h1(t)], [f2(t), g2(t), ..., h2(t)], t, low, high, [list of plotting characters]"] )
- plots the plane curves f(t) = (f1,f2), g(t) = (g1,g2),...,h(t) = (h1,h2)  using the specified plotting characters or the default "*".  For example,
@Begin[Example]
PARAMPLOT([COS(T),COS(T)+7],[SIN(T),SIN(T)],
		T,0,2*%PI,["@"]);
@End[Example]
plots two circles. 
@end(function)

The user may wish to TRANSLATE @Index[TRANSLATE] or COMPFILE
@Index[COMPFILE] (see @Ref[compilation]) the functions to be plotted
as they might be evaluated many times.

@center(@i[Formats for GRAPH and MULTIGRAPH:])

@begin(function)
@fcn[Name="GRAPH", Args="[x1, x2, x3, ..., xn], [y1, y2, y3, ..., yn]"])
- Graphs the two sets of data points.

@fcn[Name="GRAPH", Args="[[x1, y1], [x2, y2], ..., [xn, yn]]"])
- Graphs the points specified by the list of coordinate pairs.

@fcn[Name="GRAPH", Args="xset, [yset1, yset2,..., ysetn],optional-args"])
- allows graphing of one x-domain with several y-ranges; e.g.
GRAPH([0,1],[[0,1],[1,2]],["&"]).

@fcn[Name="MULTIGRAPH", Args="[ [xset1, yset1], ..., [xsetn, ysetn] ], optional-args"])
- allows the user to produce a scatter-graph involving several
x-domains each with a single y-range; e.g. MULTIGRAPH([ [[0,1],[0,1]],
[[3,4],[1,2]] ],["&"]).

The three optional final arguments mentioned above under PLOT may also
be used with GRAPH and MULTIGRAPH.
@end(function)

The plot produced by the above functions is a character plot on a
coordinate system defined by axes along the minimum x and y values of
the plot. The x and y coordinates are independently scaled to
optimally use the specified graphing area.  Note that this may distort
the shape of the graph e.g., a circle could become an ellipse.  The
origin of the graph (left-hand corner) is given on the graph by the
values of XORG and YORG; the computed increments (= one character) are
given by the values of XDELTA and YDELTA and the maximum X and Y
values are given by XMAX and YMAX. The axes are labeled with the
number sequence 0,2,4,6,8,0,2,4,...  as an aid in counting the number
of increments from the origin.

When a graph is completed, the user must type a single character (on
non-printing consoles), such as space or carriage return, to return
control to MACSYMA.

@center(@i[Examples])

(C1) XAXIS:YAXIS:TRUE$

(C2) PLOT([1/(X@-[50]+1),X@-[50]-1],X,-2,2,[@]);
  4[    *                           .
   [                                .                           *
  2[                                .
   [     *                          .
  0[                                .                          *
   [      *                         .
  8[                                .                         *
   [       *                        .
  6[                                .                        *
   [        *                       .
  4[                                .                       *
   [         *                      .
  2[                             @@@@@@@                   *
   [          *               @@@   .   @@@
  0[                        @@      .      @@             *
   [           *          @@        .        @@@
  8[                   @@@          .           @@       *
   [            *    @@             .             @@@
  6[             @@@@               .                @@@*
   [         @@@@                   .                  *@@@@
  4[   @@@@@@     *                 .                       @@@@@@
   [@@@            *                .                 *           @@@
  2[                                .                *
   [................*.................................................
  0[                 *              .               *
   [                  *             .              *
  8[                                .             *
   [                   *            .            *
  6[                    *           .           *
   [                     *          .          *
  4[                      **        .         *
   [                        *       .       **
  2[                         **     .      *
   [                           **   .   ***
  0[                             *******
   -------------------------------------------------------------------
    0 2 4 6 8 0 2 4 6 8 0 2 4 6 8 0 2 4 6 8 0 2 4 6 8 0 2 4 6 8 0 2 4
XORG=-2.0 YORG=-0.999744 XDELTA=0.062 YDELTA=0.091
XMAX=1.96800017 YMAX=3.0
@hinge

(C2) POLARPLOT(RHO,NUMBREV):=BLOCK([THETA, LIMIT, X, Y, P, NUMER,
        RATPRINT], NUMER:TRUE, RATPRINT:FALSE, THETA:0.0, X:Y:[],
          LIMIT:72*NUMBREV, FOR I:1 THRU LIMIT DO
                ( P:RHO(THETA), X:CONS(P*COS(THETA),X),
                  Y:CONS(P*SIN(THETA),Y), THETA:THETA+%PI/36.0),
        GRAPH(X,Y,X,Y))$

(C3) XAXIS:YAXIS:FALSE$

(C4) F(T):=4-COS(8.0/3.0*T)$

(C5) POLARPLOT(F,3)





  6[                      *  *  *  *     *  *  *  *
   [              * *  *         * *  *  * *         *  * *
  4[             *           * *             * *            *
   [      * *  *  *  *  *  ** * * * * * * * * * *** *  *  *  ** * *
Y 2[    *     *         **                         **         *      *
   [ **       *   * * **                             * ** *   *       * *
  0[*       * ***                                           *** *       *
   [**  * *     *                                           *      * * **
  8[  *          *                                          *         *
   [**  * *     *                                           *      * * **
  6[*       * ***                                           *** *       *
   [ *        **  * * *                                ** *  **         *
  4[  * *     *        ***                         ***        *      **
   [      * *  *           ** * * * * * * * * * ***          ** * *
  2[             **  *  *    * *             * *    *  *  * *
   [              * *            * *     * *            * *
  0[                   *  *  *  *  *  *  *  *  *  *  *
   ---------------------------------------------------------------------------
    0 2 4 6 8 0 2 4 6 8 0 2 4 6 8 0 2 4 6 8 0 2 4 6 8 0 2 4 6 8 0 2 4 6 8 0 2
XORG=-4.77137667 YORG=-4.77137756 XDELTA=0.14 YDELTA=0.6
XMAX=4.7713773 YMAX=4.77137697
                                  X                 
@end(example)

@section(Plot2 Primer)
@label(prim)

This is a primer for PLOT2 (SHARE;PLOT2 PRIMER).  Please look at
@Ref[Plot2] for full documentation of PLOT2.  (Last revision of
this section:  August 1981.)

Here follows the "Easy Examples" excerpted from PLOT2 USAGE.
You will quite likely be able to figure out what's going on just
from these examples.  Only read the relevant section later, if
something is unclear.  To see the general capabilities of PLOT2 do
DEMO(PLOT2,DEMO,DSK,SHARE); (type spaces after the plots) and
most of these examples will be tried.

@Begin[Example]
(Sec V2-2.2.1)
  PLOT2(SIN(X),X,-%PI,%PI);	plots sin(X) against X as X takes on
				PLOTNUM values between -%PI to %PI
  PLOT2(X!,X,0,6,INTEGER);	plots X! as X takes integral values
				between 0 and 6
  F(X):=SQRT(X+%PI);
  PLOT2(F(X),X,[-2,3,100.12]);	plots F(X) as X takes the values in
				the values in the list
  PLOT2([X+1,X^2+1],X,-1,1);	plots 2 curves on top of each other
(Sec V2-2.2.3)
  GRAPH2([1,2,3],[5,10,6]);	draws a line connecting [1,5], [2,10],
				[3,6]

@hinge
(Sec V2-2.2.3)
  PARAMPLOT2(COS(T),SIN(T),T,0,2*%PI);	Plots cos(T) for the x-axis and
	sin(T) for the y-axis as T takes on PLOTNUM (Sec 1.5) values
	between 0 and 2*%PI.  (If EQUALSCALE is TRUE (Sec 8.3) this
	draws a circle.)

@hinge
(Sec V2-2.2.4)
  LOAD('[WORLD,FASL,DSK,SHARE]);
  WORLDPLOT(-15, 10, 48, 60);	draws a map of the United Kingdom.

@hinge
(Sec V2-2.4.1)
  PLOT3D(EXP(-X@-[50]-Y@-[50])*X,X,-2,2,Y,-1.5,2.5);  Plots exp(-X@-[50]-Y@-[50])*X as
	X takes on PLOTNUM values between -2 and 2 and y takes on
	PLOTNUM1 values between -1.5 and 2.5
  TRANSLATE:TRUE;	causes automatic translation
  G(X,Y):=(MODEDECLARE([X,Y],FLOAT),EXP(-X*X-Y*Y)); define a function G
  PLOT3D(G,-2,2,-2,2);	plot it

@hinge
(Sec V2-2.4.3)
  PLOT3D(SIN(X)+A,X,-%PI,%PI,A,[-2,3,4,6],NOT3D);	plots sin(X)+A
	for X from -%PI to %PI (PLOTNUM points) and A taking the
	values in the list.  This is equivalent to:
	PLOT2([SIN(X)-2,SIN(X)+3,SIN(X)+4,SIN(X)+6],X,-%PI,%PI);
	but requires less typing.

@hinge
(Sec V2-2.6.1)
  CONTOURS:10;		Do 10 contours
  LABELCONTOURS:FALSE;	Don't label the contours
  CONTOURPLOT2(Y@-[50]/2+COS(X)+X/2,X,-6,6,Y,-3,3);		Do a contour
	plot of Y@-[50]/2+cos(X) as X takes PLOTNUM values between -6
	and 6 and as Y takes PLOTNUM1 values between -3 and 3.
	(This gives you the phase space orbits of a particle in a
	periodic potential superimposed on a constant field).
  PLOT3D(Y@-[50]/2+COS(X)+X/2,X,-6,6,Y,-3,3,CONTOUR);	The same
  CONTOURS:[0];		Plot only the zero contour.
  CONTOURPLOT2([REALPART((X+%I*Y)@-[51]-1),IMAGPART((X+%I*Y)@-[51]-1)],
	X,-1.5,1.5,Y,-1.5,1.5,[0,1]);	Finds the zeroes of Z@-[51]=-1 in
	the complex plane.
  CONTOURS:PLOTNUM:PLOTNUM1:10;	Work with a 10x10 grid
  CONTOURPLOT2(RANDOM(100),X,0,1,Y,0,1);	Plot something random

@hinge
(Sec V2-2.7.1)
  PLOT2(1,X,0,2*%PI);	Plots a straight line
  REPLOT(TRUE,POLAR);	Plots it in polar coordinates (Sec 13.1). This
	will appear as an ellipse unless EQUALSCALE:TRUE (Sec 8.3)
  EQUALSCALE:TRUE;
  REPLOT();		Replots the ellipse with EQUALSCALE equal to
	TRUE;  this will then appear as a circle.

@hinge
(Sec V2-2.7.2)
  PLOTMODE(DISPLAY,XGP);	Set things up for plotting on the XGP
	and a datapoint.

@hinge
(Sec V2-2.8.1)
  PLOT2(EXP(X),X,0,3,X,EXP(X),"THIS IS A PLOT OF EXP(X) VS. X");
	plots a curve of exp(X) with an x-label of "X", a y-label of
	"EXP(X)" and a tile of "THIS IS A PLOT OF EXP(X) VS. X" (the
	labels don't appear with the "'s)
  A:3;
  PLOT2(SIN(X)+A,X,-%PI,%PI,FALSE,FALSE,LABEL(A));
	plots sin(X)+A and sticks an the title "A=3".
  PLOT2(SIN(X),X,-%PI,%PI,FALSE,SIN(X)); 	labels the y-axis with
	"SIN(X)".

@hinge
(Sec V2-2.11)
  PLOT2([SIN(X),COS(X)],X,-%PI,%PI,[0,1]);	Plots sin(X) with line
	type 0 (a solid line) and cos(X) with line type 1 (a dashed
	line)
  PARAMPLOT2(RANDOM(),RANDOM(),X,0,1,[19]);	Plots PLOTNUM
	"random" points with symbol 1 (no connecting lines drawn)
  TT:[0,1,2,3,4,5,6,7,8];
  PLOTNUM1:9;
  PLOT3D(SIN(X)+A,X,-%PI,%PI,A,0,2,TT,NOT3D);	Gives the full
	repertory of line types
  TT:9+10*(TT+1);	TT is now [19,29,39 ... ]
  REPLOT(TRUE,TT);	Gives the full repertory of symbol types.

@hinge
(Sec V2-2.12)
  PLOT2(1,T,0,2*%PI,POLAR);	Plots a circle
  REPLOT(TRUE,LIN);		Replots the previous plot on a linear
	scale (i.e., gives a horizontal line)
  PLOT2(EXP(X),X,0,10,LINLOG);	Plots exp(X) on a Lin-Log scale
	(appears as a straight line)
  GRAPH2([1,2,5,10,50,100],[1,1.5,2.5,3,7,10],LOG);	Plots some
	random points on Log-Log scale.  Slope shows that y=sqrt(x).
