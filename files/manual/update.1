MRG@MIT-MC 10/05/76 23:30:58
There is a new command GRIND(arg) which strings out "arg" in a more 
readable format than the usual STRING command.  E.g., to see the stringed 
version of a function definition defined at line c5, simply say
GRIND(D5) and MACSYMA will grind out the definition.  Obviously, it
will work for non function definitions as well.  Eventually GRIND will 
take file specifications as argument and grind whole files.

RZ@MIT-MC 09/22/76 13:37:54
There is a new command in macsyma, TAYLORINFO(<expr>).  If <expr> is not 
a taylor series FALSE is returned.  Otherwise a list of lists is returned.  
Thus taylorinfo(taylor(x,x,0,3,[y,a,inf])) ==>  [[y, a, inf], [x, 0, 3]]
where the correspondences are obvious.  If any switches are given in the 
expansion (eg. asymp) the value of the switch is given in the result.

RZ@MIT-MC 09/21/76 06:09:52
In qmacsyma there is a new function PRIME(N) which returns the Nth prime.
Thus PRIME(3); will return 5.  A table is used by the function so it
works only up to a certain limit.  PRIME(MAXPRIME); is the largest
prime in the table.  The table is kept on disk so as not to affect the
free storage situation.

CFK@MIT-MC 09/16/76 09:30:52
A new ALLROOTS function has been installed.  It will find the roots of
real and complex univariate polynomials and is considerably more reliable
than the old version.  The function for solving complex polynomials is
from Algorithm 419 from the Comm. ACM vol 15 p 97 (1972) by Jenkins and
Traub and the one for real polynomials from Algorithm 493 from ACM TOMS
vol 1 p. 178 (1975) by Jenkins.  ROOTSEPSILON and ROOTSQUAD are not
used.  There is a new flag POLYFACTOR which when TRUE causes ALLROOTS
to factor the polynomial over real numbers, if the polynomial is real,
or over complex numbers, if the polynomial is complex.

JPG@MIT-MC 09/06/76 03:47:34
Re. RATWEIGHTS set up by the RATWEIGHT command: 
KILL(...,RATWEIGHTS), SAVE(...,RATWEIGHTS) work, and you can see what 
you've set up with RATWEIGHTS; or RATWEIGHT(); .

JPG@MIT-MC 08/27/76 06:26:43
MACSYMA 260 has just been created.  New feature:
The switch/function FORTRAN has been eliminated and replaced by a new function 
also called FORTRAN such that FORTRAN(exp) takes a MACSYMA expression (i.e. 
one that is essentially a FORTRAN expression) and converts it into a FORTRAN 
linear expression in legal FORTRAN with 6 spaces inserted at the beginning 
of each line, continuation lines ("cards"), etc.   Also, a new function 
FORTMX(name,matrix) exists which converts a MACSYMA matrix into a sequence 
of FORTRAN assignment statements of the form 
   name(i,j)=<corresponding matrix element> .

JPG@MIT-MC 08/22/76 07:21:53
A new function called DEPENDS exists which does what the DEPENDENCIES 
function does except that it takes a syntax like DECLARE and it evaluates 
its args (something that was difficult with the unfortunate functional 
syntax of DEPENDENCIES - RAB was right!).  E.g. to do 
DEPENDENCIES(F(X,Y),G(X,Y),H(X));  one can now do 
DEPENDS([F,G],[X,Y],H,X);  (these args being evaluated, of course).
The form of the DEPENDENCIES list has not been changed.  It would 
be nice to eventually phase out the DEPENDENCIES function.

JPG@MIT-MC 08/21/76 07:41:03
"FPPREC" has been converted from the syntax e.g. FPPREC(20)$ to FPPREC:20$. 
Similarly for "POISLIM".  This completes the project described in 
MACSYM;UPDATE >, item of 3/24/76 [2].

JPG@MIT-MC 08/20/76 04:09:29
There exists a new function FUNMAKE(name,[arg1,...argn]); which 
returns  name(arg1,...argn)  without calling the function "name". 
(Analogous to the already existing function ARRAYMAKE.)

RZ@MIT-MC 08/17/76 04:20:45
Since its cost outweighed its usefulness, the extendable taylor series 
facility has been eliminated from MACSYMA.  (Hence, the switch EXTENDABLE 
and the function EXTEND have been removed.)

JPG@MIT-MC 07/25/76 11:59:39  The FASSAVE command is operative again.

JPG@MIT-MC 07/21/76 19:10:11
Contrary to what it says in the manual, ASSUME(list) and FORGET(list) 
where "list" is a list of predicates are no longer legal.  One can use 
APPLY to get this effect.  E.g. APPLY('ASSUME,list); .

JPG@MIT-MC 07/20/76 03:29:21  
[1] NROOTS(poly) is equivalent to NROOTS(poly,MINF,INF).
[2] REALROOTS(poly) is equivalent to REALROOTS(poly,ROOTSEPSILON).

JPG@MIT-MC 07/05/76 03:29:18
The comparison routines (IS, etc.) no longer use RATSIMP to determine 
equality, etc.  Hence, some of the examples under IS in the manual no 
longer work.

MSC@MIT-MC 07/02/76 22:50:33
The EXAMPLE command takes an argument like DESCRIBE but does a DEMO of 
relevant examples.  EXAMPLE(function) works for most MACSYMA functions.

ADVISE@MIT-MC 06/22/76 19:26:31
THe DESCRIBE command is now operational.  It takes as argument any MACSYMA
command and prints out the relevant portion of the MACSYMA manual.  

ELLEN@MIT-MC 06/07/76 15:19:26
There is now a copy of the MACSYMA Manual available for
on-line reference, see  .INFO.;MACSYM MANUAL .

JPG@MIT-MC 06/05/76 09:11:34
MACSYMA 259 HAS JUST BEEN CREATED.  New Features: 
[1] KILL(ALLBUT(name1,...,nameI)); will do a KILL(ALL) except it will not 
KILL the names specified.

[2] Things that are ASSUMEd now go on a new list called ASSUMPTIONS. 
KILL(...,ASSUMPTIONS); and SAVE(...,ASSUMPTIONS); do the trick. 
(Of course, ASSUMPTIONS is subsumed under ALL.)

[3] The SIGN command has been changed and there is a new command called 
ASKSIGN.  SIGN no longer asks questions of the user and returns one of 
POS, NEG, ZERO, PZ, NZ, PN, or PNZ whose meanings are probably obvious.  
ASKSIGN does what SIGN used to, except that it returns one of POS, NEG, 
ZERO (not POSITIVE or NEGATIVE as it used to).  Also, if the user 
wishes to further simplify the expression before replying, the variable 
ASKEXP is set to it, so one may due this by typing ^A, etc.

[4] One can now do e.g. DECLARE(N,indicator); where "indicator" is one of 
INTEGER, EVEN, or ODD.  This info is used in simplification of things like 
(-1)^(2*N) -> 1 if N is declared to be INTEGER, (-2)^N -> -2^N if N is ODD, 
etc.; and in relational simplification (e.g. SIGN(A^N); gives PZ if N is 
EVEN.)  TRIG uses this info as well.  (I.e. use DECLARE rather than 
MODEDECLARE for the examples in the manual, p.95 .)  Currently one can 
only KILL such info, but not SAVE it, etc.  Also, DECLARE has assumed the 
role of FEATURE as previously announced (on 5/11/76).

RAB@MIT-MC 05/19/76 18:46:05
There is a new command called FACTOROUT(exp,var1,var2,...) which performs 
yet another kind of factoring of sums.  It factors the expression exp 
(a sum) into a sum of terms each of which is of the form f(var1,var2,...)*g 
where g is a product of expressions not containing the vari's and f is 
factored.  For an example do :print FACTOR DEMO DSK RAB.

ADVISE@MIT-MC 05/11/76 13:38:24
It is now possible to declare an operator in MACSYMA to be
commutative, associative, linear, or nary.  This is accomplished
by using the command FEATURE as follows:
	FEATURE(F,LINEAR,G,ASSOCIATIVE,H,COMMUTATIVE,J,NARY);
Once this is done the simplifier can use such rules in processing
occurrences of the functions named, as follows (e.g.):
	F(A+B)  -->  F(A) + F(B)
	G(G(A,B),G(C,D))-G(A,G(B,G(C,D)))  -->  0
	H(X,Z,Y)  -->  H(Z, Y, X)
	J(J(A,B),J(C,D))  -->  J(A, B, C, D) 
At the moment only one such declaration can be made about an operator.
Later several features may be declared at the same time such as 
COMMUTATIVE and ASSOCIATIVE.  In the next MACSYMA (259) the function 
of FEATURE will be subsumed by DECLARE.

JPG@MIT-MC 04/26/76 04:27:51
LOGCONTRACT, DESCRIBED IN MACSYM;UPDATE >, NOTE OF 1/17/76,  HAS 
BEEN FINISHED.  IT NOW CAN CONVERT E.G. 2*(A*LOG(X)+2*A*LOG(Y)) 
INTO A*LOG(X^2*Y^4) .

JPG@MIT-MC 03/24/76 06:54:51
MAXIMA 258 HAS JUST BEEN CREATED.  NEW FEATURES:

[1] " EXP,RESCAN; "  EXISTS TO MAKE IT EASIER TO REFER TO THE 
RESCANNING ABILITY OF EV.  (IT IS EQUIVALENT TO EV(EXP) .)

[2] SEVERAL MORE SWITCH-FUNCTIONS SUCH AS DSKGC HAVE BEEN CONVERTED 
FROM THE SYNTAX E.G. DSKGC(TRUE)$ TO DSKGC:TRUE$.  THE CURRENT LIST 
INCLUDES: BOTHCASES, DEBUGMODE, DSKGC, FORTRAN, PAGEPAUSE, AND 
STARDISP.  YET TO BE DONE ARE: FPPREC AND POISLIM.  THE FORMER FORM 
E.G. DSKGC(TRUE)$ WILL BE RETAINED FOR A WHILE UNTIL THIS CHANGE IS 
COMPLETE FOR ALL SWITCH FUNCTIONS.  IF YOU THINK OF ANY CANDIDATES 
FOR THIS CONVERSION WHICH I NEGLECTED, LET ME KNOW.  NOTE THAT THIS 
CHANGE HAS BEEN ANNOUNCED IN THE CURRENT MACSYMA MANUAL IN THE NOTE 
BEFORE THE FUNCTION INDEX.

[3] PLAYBACK NOW STRINGS INPUT-LINES AS THE DEFAULT.  THE "STRING" 
OPTION HAS THEREFORE BEEN DELETED.  IF YOU PREFER TO HAVE 
INPUT-LINES DISPLAYED, USE PLAYBACK(...,NOSTRING,...) .

[4] "DIREC" MAY BE USED AS AN ALIAS FOR "UNAME".

[5] THERE IS A NEW INFORMATION-LIST "MYOPTIONS" WHICH CONTAINS THE 
NAMES OF ALL OPTIONS EVER RESET BY THE USER (WHETHER OR NOT THEY GET 
RESET TO THEIR DEFAULT VALUE).  THE PRIMARY REASON FOR THE EXISTENCE 
OF THIS INFOLIST IS TO ENABLE OPTIONS CHANGED BY THE USER TO BE 
SAVED BY EITHER SAVE(...,ALL); OR SAVE(...,MYOPTIONS,...); .

[6] THERE IS A NEW COMMAND "SUBVARP" SUCH THAT SUBVARP(X) RETURNS 
TRUE IFF X IS A SUBCRIPTED VARIABLE, E.G. A[I] .

MGM@MIT-MC 3/18/76 04:45:15 
LIMIT NOW CONVERTS FIB(N) TO ITS CLOSED FORM DEFINITION.
THIS INVOLVES THE CONSTANT %PHI (= (SQRT(5)+1)/2 = 1.618033989).
ALSO, THERE NOW IS A FUNCTION FIBTOPHI(<EXP>) WHICH DOES THIS 
CONVERSION.  IF YOU WANT THE RATIONAL FUNCTION PACKAGE TO KNOW 
ABOUT %PHI DO TELLRAT(%PHI^2-%PHI-1)$  ALGEBRAIC:TRUE$ .

JLK@MIT-MC 03/16/76 19:39:34 
     Re. New --More-- processing facilities in MACSYMA:
Display package now supports --More-- processing.  It is enabled by
the standard I.T.S. mechanisms, namely :TCTYP MORE (in DDT, turns --More--
processing on for all jobs created), PAGEPAUSE(TRUE); (in MACSYMA), or ^_M
(typed anywhere, anytime, toggles --More-- processing for the current job).
When you reach the bottom of the screen in more processing mode during a
display, --More Display?--(SPACE=YES, RUBOUT=NO) will be printed.  Typing
a space will continue the display, typing rubout will flush the display,
both to the terminal and to disk if a WRITEFILE is in progress, and typing
anything else will flush output only to the terminal.  Output is flushed
only for the display of one expression.  Thus if a program prints out
several intermediate results, display of subsequent results is not effected.
Until MACSYMA exists in NEWIO LISP, **MORE** may sometimes appear.  This
is I.T.S.  --More-- processing.  Just type space at it.
     $MOREMSG is an atom which gets printed when --More-- processing
happens, so that those of you who want to set it in your MACSYM
(INIT) files can do (SETQ $MOREMSG '|**MORE**|) for example.
$MOREFLUSH if FALSE (or in LISP, NIL) will cause the --More-- processing
function not to flush any output.  If non-false, it will get
printed as the flush message, and will cause output to be flushed
by setting ~W to T.

JPG@MIT-MC 03/08/76 02:50:49
TWO COMMANDS WHICH EXISTED BUT WHICH FAILED TO GET ANNOUNCED ARE: 
"MAKEFACT" AND "MAKEGAMMA" CONVERT BINOMIALS, FACTORIALS, GAMMAS, 
AND BETAS IN EXPRESSIONS TO FACTORIALS AND GAMMAS, RESPECTIVELY.

MGM@MIT-MC 02/13/76 16:20:04
THERE IS NOW A FLAG ABCONVTEST (DEFAULT FALSE).  DEFINT HAS ALWAYS 
HAD A TEST FOR ABSOLUTE CONVERGENCE BEFORE TRYING INDEFINITE 
INTEGRATION.  THIS TEST IS TIME CONSUMING AND SOMETIMES SCREWS THE 
PROBLEM.  ABCONVTEST:FALSE TURNS OFF THIS TEST. 

JM@MIT-MC 01/20/76 17:53:22
MACSYMA ON MIT-MC CONTAINS A NEW DISPLAY FEATURE WHICH ATTEMPTS TO 
REORDER EXPRESSIONS INTO A MORE 'NATURAL' FORM.  E.G. 
IT GIVES X+Y INSTEAD OF Y+X, X+Y+Z+W INSTEAD OF Z+Y+X+W. 
THE FEATURE MAY CAUSE DISPLAY OF SUMS TO BE SLOWED UP.  
TO DISABLE, SET PRETTYSORT:FALSE$.  SEND BUGS OR COMMENTS TO JM.
(PRETTYSORT is unavailable at this time.  It causes problems with SUBSTPART. 
JPG - APRIL 76)

JPG@MIT-ML 01/17/76 06:08:27
THERE IS A SWITCH "RATALGDENOM" WHICH ENABLES ONE TO RATIONALIZE 
DENOMINATORS WRT RADICALS.  TO DO THIS, ONE MUST USE CRE FORM IN 
ALGEBRAIC MODE, E.G. EV(RATSIMP(EXP),ALGEBRAIC,RATALGDENOM); .

JPG@MIT-ML 01/17/76 04:16:07
THERE IS A NEW COMMAND "LOGCONTRACT" WHICH RECURSIVELY SCANS AN 
EXPRESSION, TRANSFORMING SUBEXPRESSIONS OF THE FORM 
  A1*LOG(B1)+...+AN*LOG(BN)+C  INTO  LOG(RATSIMP(B1^A1*...*BN^AN))+C 
  WHERE THE AI ARE NUMBERS, N>=1, C MAY BE ABSENT.
E.G. LOGCONTRACT(LOG(X)+2*LOG(Y)+Z) GIVES LOG(X*Y^2)+Z
     LOGCONTRACT(LOG(SQRT(X+1)+SQRT(X))+LOG(SQRT(X+1)-SQRT(X))) 
       GIVES 0.
YET FORTHCOMING, LOGCONTRACT WILL CONVERT EXPRESSIONS LIKE 
A*LOG(X)+2*A*LOG(Y)+B INTO A*(LOG(X)+2*LOG(Y))+B SO AS TO BE ABLE TO 
CONTRACT THEM AS WELL.

JPG@MIT-ML 12/22/75 02:17:52
[1] THE "DEBUG" SWITCH HAS BEEN RENAMED "REFCHECK" .

[2] REMFILE(TRUE)$ IS NOW REMFILE(ALL)$ WHICH IS MORE MNEMONIC.  
(THE FORMER WILL STILL BE ACCEPTED FOR A WHILE.)

[3] MACSYMA HAS SEVERAL SWITCH-FUNCTIONS SUCH AS DEBUGMODE, WHERE 
ONE MUST DO E.G. DEBUGMODE(TRUE) RATHER THAN DEBUGMODE:TRUE$.  OVER 
THE NEXT FEW MONTHS, THE FORMER FORMS WILL BE REPLACED BY THE 
LATTER.  NOW, THIS HAS BEEN DONE ONLY FOR DEBUGMODE AND STARDISP.  
THE FORMER FORM I.E. DEBUGMODE(TRUE)$ WILL BE RETAINED FOR A WHILE 
UNTIL THIS CHANGE IS COMPLETE FOR ALL SWITCH FUNCTIONS.  NOTE THAT 
THIS CHANGE HAS BEEN ANNOUNCED IN THE NEW MACSYMA MANUAL IN THE NOTE 
BEFORE THE FUNCTION INDEX.

[4] THE "TELLRATLIST" VARIABLE HAS BEEN ELIMINATED.  TO FIND 
OUT WHICH TELLRATS YOU HAVE DONE, YOU CAN NOW DO TELLRATLIST(); .

JLK@MIT-ML 12/02/75 10:16:25
there is a new flag "transbind" (default is true) affecting 
translating which when true removes global declarations in the local 
context.  note this only applies to variables which are formal 
parameters to functions.

JPG@MIT-ML 12/02/75 01:33:56
FOR YOUR INFO: TO UNDO A TELLRAT, E.G. TO UNDO TELLRAT(X^3-X), 
A POLY. IN X, ONE JUST DOES TELLRAT(X);.  (OF COURSE, TO SIMPLY HAVE 
ALL TELLRAT INFO TEMPORARILY IGNORED, ONE DOES ALGEBRAIC:FALSE$.)  

JPG@MIT-ML 11/30/75 17:54:46
THE FASSAVE COMMAND HAS BEEN MADE INOPERATIVE. 

JLK@MIT-ML 11/22/75 15:44:00
THERE IS A NEW COMMAND CALLED COMPFILE WHICH WILL TRANSLATE 
(IF NECESSARY) AND WRITE OUT MACSYMA FUNCTION DEFINITIONS AND OTHER 
EXPRESSIONS INTO A DISK FILE WHICH CAN BE READ INTO THE COMPILER.  
THE FIRST ARG IS A LIST (OPTIONAL) WHICH SPECIFIES THE FILE TO BE 
WRITTEN.  THE DEFAULT FOR USERS WITH A DIRECTORY IS CMPFIL > AND 
THE STANDARD MACSYMA DEFAULT FILE FOR OTHER USERS.  THE FILE WRITTEN 
CONTAINS DECLARATIONS USED BY THE COMPILER.  THE FUNCTION 
DEFINITIONS ARE GRINDEF'ED WHEN COMPGRIND (DEFAULT FALSE) IS TRUE.  
THE REMAINING ARGS TO COMPFILE ARE ATOM FUNCTION NAMES.
THE COMPILE COMMAND HAS BEEN FLUSHED.

JPG@MIT-ML 11/18/75 03:42:44
STATUS(REALTIME); RETURNS THE REAL TIME (IN SECS.) ELAPSED SINCE 
THE USER STARTED UP HIS MACSYMA.

JPG@MIT-ML 11/05/75 05:54:58
MACSYMA HAS A NEW COMMAND "DISPFORM" SUCH THAT DISPFORM(EXP) RETURNS 
THE EXTERNAL REPRESENTATION OF EXP (AT LEAST WRT ITS MAIN OPERATOR).  
IT SHOULD BE USEFUL IN CONJUNCTION WITH PART WHICH ALSO DEALS WITH 
THE EXTERNAL REPRESENTATION.  
E.G. SUPPOSE EXP IS -A .  THEN, THE INTERNAL REPRESENTATION OF EXP 
IS "*"(-1,A), WHILE THE EXTERNAL REPRESENTATION IS "-"(A).
[1] LENGTH(EXP) GIVES 2, WHILE LENGTH(DISPFORM(EXP)) GIVES 1.
[2] MAP(F,EXP) GIVES F(-1)*F(A), WHILE MAP(F,DISPFORM(EXP)) GIVES 
-F(A).
ALSO TRY A*B/C FOR EXP.

RAB@MIT-ML 10/04/75 17:32:03
ATTN LAPLACE TRANSFORM FANS:
IF F(X) IS A FUNCTION UNKNOWN TO MACSYMA, THEN LAPLACE(F(X),X,S)
RETURNS THE NOUN FORM. IT IS NOW POSSIBLE FOR THE USER TO DEFINE
THE TRANSFORM OF SUCH FUNCTIONS HIMSELF AND THE LAPLACE ROUTINES
WILL UTILIZE HIS DEFINITION PASSING FOUR ARGUMENTS TO THE USER
FUNCTION. IT IS ONLY NECESSARY TO ISSUE "PUT(F,L,LAPLACE);" TO
MACSYMA WHERE L IS THE NAME OF THE USER DEFINED FUNCTION WHICH
TAKES THE TRANSFORM OF F.  IN GENERAL IF THE EXPRESSION F(X)*U(X)
IS ENCOUNTERED BY LAPLACE (U(X) REPRESENTS A PRODUCT OF ARBITRARY
FUNCTIONS MULTIPLYING F OR SIMPLY 1), THEN THE FUNCTION L WILL
BE INVOKED AS L(F(X),U(X),X,S) WHERE S IS THE TRANSFORM PARAMETER.
	SEE THE FILE LAPLAC DEMO DSK DEMO

RAB@MIT-ML 09/22/75 19:36:13
IF YOU WANT TO EXPERIMENT WITH AN INTERACTIVE SIMPLIFIER WHICH KNOWS 
A LITTLE BIT ABOUT HOW TO APPLY MACSYMA'S SIMPLIFIERS TO GROUPS OF 
SEVERAL TERMS IN A SUM THEN DO LOADFILE(SIMP,">",DSK,RAB) AND TRY 
SIMPLIFY(EXPR).  PLEASE SEND ALL COMMENTS TO RAB.  I WOULD 
APPRECIATE SUGGESTIONS FOR IMPROVEMENT.

TM@MIT-ML 08/26/75 17:14:10
FOR THOSE WHO HAVE SOME PROBLEM IN USING LINSOLVE, DETERMINANT, OR 
NEWDET, TRY TMLINSOLVE, TMLIN AND TMNEWDET WHICH MAY BE GOTTEN BY 
DOING LOADFILE(LINNEW,FASL,DSK,TM).  THEY ARE POWERFUL FOR SPARSE 
LINEAR SYSTEMS.  TMLINSOLVE(EQUATIONS,VARS,OUTVARS) WILL SOLVE THE 
LINEAR EQUATIONS WRT VARS AND RETURN THE VALUES OF OUTVARS WHICH IS 
A SUBSET OF VARS.  THIS IS ALMOST THE SAME AS WITH LINSOLVE.  
OUTVARS MAY BE OMITTED IF YOU WANT THE SOLUTION FOR ALL THE VARS.
TMLIN(A,N,M) WHERE A IS AN N*(N+1) MATRIX SOLVES THE LINEAR SYSTEM 
(REGARDING THE MATRIX AS A SET OF LINEAR EQUATIONS IN THE USUAL 
MANNER) AND RETURNS THE SOLUTIONS FOR THE FIRST M VARIABLES.
TMNEWDET(A,N) IS SIMILAR TO NEWDET. 

RAB@MIT-ML 08/14/75 15:25:55
A NEW FUNCTION WILL BE AVAILABLE IN MACSYMA 256 CALLED COMBINE.  IT 
COLLECTS TERMS IN A SUM HAVING THE SAME DENOMINATOR AND RETURNS A 
SINGLE TERM WITH THE SUM OF THE NUMERATORS.  


FOR OLDER UPDATES, :PRINT MACSYM;OUPDATE > .
