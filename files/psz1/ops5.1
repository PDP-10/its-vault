(defmacro dptr(z)`(eq(typep ,z)'list))
(defun infile(x)`(open ,x '(in)))
(defun outfile(x)`(open ,x '(out)))
(defun nwritn(x)(charpos x)) ?
(defmacro mod(x y)`(remainder ,x ,y))
(defmacro readc(x)'(read-char ,x))
(defmacro concat(a b c)(    )) ?
(defmacro drain()nil)
(defmacro *makhunk(x)`(make-sequence 'vector ,(^ 2(1+ x))))
(defmacro exit(x)'(quit))
(defmacro ==(x y)`(= ,x ,y))
(defmacro =ALG(x y) `(= ,x ,y))
(defmacro fast-symeval(x)`(symeval ,x))
(defmacro putvector(vec indx val)`(replace ,vec ,val :start ,indx
                                                     :end (1+ ,indx)))
(defmacro getvector(vec indx)`(elt ,vec ,indx))
(defmacro ce-gelm(x k)`(elt ,x (1- ,k)))
(defmacro gelm(x k)`(elt(elt ,x (/ ,k 10000))(remainder ,k 10000)))
(defmacr0 neq(x y)`(not(eq ,x ,y)))
(defmacro printline(x)`(mapc(function printline*),x))
(defun printline*(y)(princ '\ \)(print y))
