(SSTATUS MACRO /: (FUNCTION (LAMBDA NIL NIL)) SPLICING)
(SETQ IBASE 8.)

; IMGET AND IMPUT ARE FUNCTIONS FOR GETTING AND PUTTING WORDS (16 BIT)
;FROM OR TO THE IMLAC.


(DEFUN IMGET: FEXPR (ADDR) 
	     (TYOIM (APPEND '(37 102) (MAK3 (ISGET ADDR))))
	     (GETIS (BOOLE 7
			     (LSH (BOOLE 1 77 (TYI)) 12.)
			     (LSH (BOOLE 1 77 (TYI)) 6.)
			     (BOOLE 1 77 (TYI)))))
(DEFUN *IMGET: FEXPR (ADDR) 
	     (TYOIM (APPEND '(37 102) (MAK3 (ISGET ADDR))))
	     (BOOLE 7	     (LSH (BOOLE 1 77 (TYI)) 12.)
			     (LSH (BOOLE 1 77 (TYI)) 6.)
			     (BOOLE 1 77 (TYI))))
(DEFUN INCGET: FEXPR (ADDR) 
	(SETQ ADDR1 (APPLY '*IMGET ADDR))
	(MAPCAR (FUNCTION GETIS) (LIST	(LSH (BOOLE 1 177400 ADDR1) -8.) 
					(BOOLE 1 377 ADDR1))))
(DEFUN INCPUT: FEXPR(INCARG) 
(PROG (RET) 
(TYOIM (APPEND '(37 101)
		(MAK3 (ISGET (CAR INCARG)))
		(MAK3 (SETQ RET (BOOLE 7 (LSH (BOOLE 1 377 (ISGET (CADR INCARG))) 8.)
					 (BOOLE 1 377 (ISGET (CADDR INCARG))))))))
(RETURN RET)))


(DEFUN IMPUT: FEXPR (IPARG) 
       (PROG (RET) 
	     (TYOIM (APPEND '(37 101)
			    (MAK3 (ISGET (CAR IPARG)))
			    (MAK3 (SETQ RET (ISGET (CDR IPARG))))))
	     (RETURN RET)))

; THE IMSRT FUNCTIONS ARE FOR TOP LEVEL USE IN DIRECTLY INSERTING
; DJMS'S, INC'S , ETC. INTO THE IMLAC DISPLAY LIST.


(DEFUN IMSRTQ: FEXPR (XL) 
       (TYOIM (APPEND (CONS 36 (MAK3 (ISGET XL)))
		      '(34))))

(DEFUN IMSRT1: (ARG1) 
(TYOIM (MAK3 (ISGET ARG1))))


;THE ISGET FUNCTION TAKES LITERALS AND SEARCHS IMSYMTABLE FOR NUMBER VALUE
;GETIS FUNCTIONS CONVERT NUMBERS TO LITERALS

(DEFUN ISGET: (FORM) 
       (PROG NIL 
	(COND ((ATOM FORM)(SETQ FORM (LIST FORM))))
	     (DO ((F FORM (CDR F))
		  (RET 0 (+ RET
			      (COND ((FIXP (CAR F)))
				    (T (CDR (COND ((ASSQ (CAR F)
						      IMSYMTABLE))
						(T (PRINT '(LITERAL GIVEN TO ISGET NOT FOUND IN IMSYM TABLE))
						(RETURN)))))))))
		 ((NULL F) (RETURN RET)))))



(DEFUN GETIS1: (NUM)
(PROG (RET)
 (COND ((NOT(FIXP NUM))(PRINT '(NON FIXNUM VALUE IN GETIS1))(RETURN)))

 (AND (SETQ RET (ASSQALL1 NUM IMSYMTABLE)) (RETURN (CADR RET)))
(RETURN NUM)))


(DEFUN GETIS: (NUM)
(PROG (RET)
 (COND ((NOT(FIXP NUM))(PRINT '(NON FIXNUM VALUE IN GETIS))(RETURN)))

 (AND (SETQ RET (ASSQALL1 NUM IMSYMTABLE)) (RETURN (LIST (CADR RET) NUM)))

(COND ((EQUAL 3000 (BOOLE 1 777000 NUM))
    (RETURN (LIST (CADR (ASSQALL1 (BOOLE 1 777770 NUM) IMSYMTABLE))
                   (BOOLE 1 7 NUM) NUM))))
(COND ((SETQ RET (ASSQALL1 (BOOLE 1 774000 NUM) IMSYMTABLE))
      (RETURN (LIST (CDR RET)(GETIS1 (BOOLE 1 3777 NUM)) NUM))))
(RETURN NUM)))

(DEFUN GETISD: (NUM)
(PROG (RET)
 (COND ((NOT(FIXP NUM))(PRINT '(NON FIXNUM VALUE IN GETIS))(RETURN)))

 (AND (SETQ RET (ASSQALL1 NUM IMSYMTABLE)) (RETURN (LIST (CADR RET) NUM)))

(COND ((EQUAL 3000 (BOOLE 1 777000 NUM))
    (RETURN (LIST (CADR (ASSQALL1 (BOOLE 1 777770 NUM) IMSYMTABLE))
                   (BOOLE 1 7 NUM) NUM))))
(COND ((SETQ RET (ASSQALL1 (BOOLE 1 770000 NUM) IMSYMTABLE))
      (RETURN (LIST (CDR RET)(GETIS1 (BOOLE 1 7777 NUM)) NUM))))
(RETURN NUM)))

; ASSQALL1 FINDS ALL ASSOCIATIONS OF X IN Y AND RETURNS (X LITERALS)
;  RETURNS NIL IF NONE FOUND

(DEFUN ASSQALL1: (X Y) 
     (PROG (RET)
       (DO Y Y (CDR Y)
	   (NULL Y)
	   (COND ((EQUAL X (CDAR Y)) (SETQ RET (CONS (CAAR Y) RET)))))
	(RETURN (AND RET (CONS X RET)))))

; MAK3 TAKES 18 BITS AND MAKES THEM INTO 3 CHARS

(DEFUN MAK3: (N) 
       (LIST (+ 100 (BOOLE 1 77 (LSH N -12.)))
	     (+ 100 (BOOLE 1 77 (LSH N -6.)))
	     (+ 100 (BOOLE 1 77 N))))

