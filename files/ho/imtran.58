TITLE IMLAC SETUP PHASE

RELOCATABLE

; CHANNEL DEFINITIONS

TYIC==1
TYOC==2
TYOC1==2
IC==1
OC==2

; INSERT FILES

.INSRT ACCUM DEFS
.INSRT UUO PKG
.INSRT MACRO TS
.INSRT COMFIL SCAN

GO:	.OPEN	TYOC,[1,,SIXBIT/   TTY/]	; START UP
	.VALUE	0				; OUTPUT VERSION NUMBER, ETC.
	PASC	[ASCIZ/IMTRAN /]
	PSIX	[.FNAM2]
	MOVE	P,[-40,,PDL]
IMTRAN:	PUSHJ	P,INIT				; INITIALIZE POINTERS, AC'S
	.OPEN	TYOC,[1,,SIXBIT/   TTY/]	; OPEN TO TTY
	.VALUE	0
	.OPEN	TYIC,[SIXBIT/   TTY/]
	.VALUE	0
	PASCR	[ASCIZ //]
	PASC	[ASCIZ /FILE SPEC: /]	; ASK FOR FILE SPECIFICATION
	PUSHJ	P,RCMD			; GET FILE TO BE TRANSLATED
	JRST	IFNAME
	PUSHJ	P,SCNAME
	SETOM	F
	MOVE	0,[PRTF,,PRTF1]
	BLT	0,PRTF1+2
	MOVEI	F,3
	HRLM	F,PRTF1
	PUSHJ	P,RCMD
IFNAME:	PUSHJ	P,SCNAME
	PASC	[ASCIZ/TYPE 'Y' TO GET BLK LDR: /]	; SHOULD THE BLK LDR BE
	.IOT	TYIC,A			; PREFIXED TO THE PROG?
	CAIE	A,131			; BOTH CAP. AND SM. 'Y' ARE YES
	CAIN	A,171
	SETOM	BLKLDR			; SET BLOCK LOADER FLAG
	PASCR	[ASCIZ //]
	JUMPN	F,.+3
	MOVE	F,PRTF+1		; SET UP DEFAULT OUTPUT FILE NAME
	MOVEM	F,PRTF1+1
	MOVEI	F,2			; SET UP FOR BLOCK OUTPUT
	HRLM	F,PRTF
CHOPEN:	.OPEN	OC,PRTF1		; OPEN TO OUTPUT FILE
	JRST OUTERR		; OUTPUT OPEN FAILED
	SKIPE	BLKLDR
	PUSHJ	P,TRBKLR		; GET BLK LDR FROM COM:IMLAC BLKLDR
	.OPEN	IC,PRTF			; OPEN TO MIDAS BINARY OUTPUT
	JRST INERR		; INPUT OPEN FAILED
	PUSHJ	P,MUNG			; ELIMINATE MIDAS BLK LDR
	JRST NULERR		; INPUT FILE IS EMPTY. NUL DEVICE?
	MOVE	M,LNSZ			; HOW MANY OUTPUT CHARS TO A LINE
NEWBLK:	PUSHJ	P,BLKSTR		; GET THE HEADER WORD OF A BLOCK
	JRST	LST		; IF END OF PROG RETURNED, DO THAT
	PUSHJ	P,STADCT		; SET UP IMLAC HEADER WORDS
	MOVE	F,IPNTR
	MOVEM	F,IPNTR1
	.IOT	IC,IPNTR		; INPUT ONE BLOCK INTO INPUT BUFFER
	MOVE	F,IPNTR1
	MOVEM	F,IPNTR
	MOVEI	J,4			; SET UP COUNTER FOR ONE 4-BYTE IMLAC WORD
GET:	SOJL	J,.+3
	PUSHJ	P,GBYTE			; GET ONE BYTE FROM INPUT BUFFER
	JRST	.-2
	PUSHJ	P,WRDEND		; RESET COUNTER AND DO INDIRECT MODIF.
	PUSHJ	P,UPDATE		; UPDATE COUNTS
	PUSHJ	P,BLKCHK		; HAS END OF BLOCK BEEN REACHED
	JRST	GET			; BLKCHK SKIPS IF SO	 
	PUSHJ	P,BLKEND		; DO END OF BLOCK HOUSEKEEPING
	JRST	NEWBLK
LST:	PUSHJ	P,PRGEND		; DO END OF PROG HOUSEKEEPING
	PASCR	[ASCIZ//]
	JRST	IMTRAN
; DESTROYS MIDAS BLK LDR, BUT MAY AT SOME TIME IN FUTURE DO OTHER CLEVER THINGS
; TO MIDAS HEADER

MUNG:	.IOT	IC,UPNTR
	MOVE	F,UPNTR1
	MOVEM	F,UPNTR
	MOVE	F,MIDWRD
	CAMN	F,INBUF+1
	.IOT	IC,HPNTR
	SKIPE	INBUF+1
	AOS	(P)		
	POPJ	P,

; SETS UP IOT POINTER TO GET ONE BLOCK AT A TIME FROM INPUT FILE
; ALSO CHECKS TO SEE IF END OF INPUT PROG HAS BEEN REACHED
; (IGNORES DDT SYMBOL TABLE)
; INPUT: -COUNT,,ADDRESS 

BLKSTR:	MOVEI	G,INBUF+2	; G POINTS TO CURRENT WORD BEING PROCESSED	
	.IOT	IC,UPNTR	; INPUT MIDAS STYLE HEADER WORD
	PUSHJ	P,PRGCHK	; CHECKS FOR END OF PROGRAM, SKIPS IF NOT FOUND
	POPJ	P,		; RETURNS IF END OF PROG WAS FOUND
	AOS	(P)		; SKIPS IF END OF PROG NOT FOUND
	HLL	F,INBUF+1	; GETS -COUNT
	SUB	F,[1,,0]	; ADDS ONE, TO INCLUDE CHECKSUM
	HRR	F,UPNTR		; GETS START OF INBUF
	MOVEM	F,IPNTR		; PUTS IT IN INPUT POINTER
	MOVE	F,UPNTR1	; RESETS IO POINTER
	MOVEM	F,UPNTR
	HLRO	F,IPNTR
	MOVNS	F
	CAIGE	F,40
	POPJ	P,
	HRL	F,[-40]
	HLLM	F,IPNTR
	POPJ	P,

; SETS UP HEADER WORDS FOR CURRENT BLOCK AND PUTS THEM IN OUTPUT BUFFER
;	INBUF:   COUNT OF WORDS IN BLOCK
;	INBUF+1: ADDRESS   

STADCT:	SETZM	F
	HLR	F,INBUF+1	; GET COUNT
	MOVNS	F		; COMPLEMENT COUNT (- TO +)
	HRRZM	F,INBUF		; PUT COUNT IN INBUF 
	MOVE	F,INBUF+1	; GET HEADER WORD
	HRRZM	F,INBUF+1	; PUT ADDRESS IN INBUF+1 
	PUSHJ	P,OHDR		; OUTPUT HEADER WORDS TO OUTPUT BUFFER
	MOVE	F,INBUF
	SUBI	F,40
	MOVEM	F,BIGBLK
	POPJ	P,

; TYPES OUT VARIOUS ERROR MESSAGES
NULERR:	.OPEN	TYOC,[SIXBIT/  !TTY/]
	.VALUE	0
	PASCR	[ASCIZ/INPUT FILE CONTAINS NOTHING!?/]
	JRST DELERR
INERR:	.OPEN	TYOC,[SIXBIT/  !TTY/]
	.VALUE	0
	PASCR	[ASCIZ/INPUT OPEN FAILED!/]
	JRST DELERR
OUTERR:	.OPEN	TYOC,[SIXBIT/  !TTY/]
	.VALUE	0
	PASCR	[ASCIZ/OUTPUT OPEN FAILED!/]
DELERR:	SETZM	PRTF1+3
	.FDELE	PRTF1
	JFCL
	JRST IMTRAN

; PUTS HEADER WORDS, TRANSLATED, INTO OUTPUT BUFFER
;	COUNT: TWO ASCII CHARS.
;	ADDRESS: FOUR ASCII CHARS


OHDR:	MOVEI	J,2		; SET UP FOR COUNT
	ILDB	B,CFOR
	ADDI	B,100
	IDPB	B,OFOR
	PUSHJ	P,OBUFL		; CHECK TO SEE IF OUTPUT BUFFER FULL
	SOJN	J,.-4
	MOVE	F,CFOR1		; RESET BYTE POINTER
	MOVEM	F,CFOR
	MOVEI	J,4		; SET UP FOR ADDRESS
	ILDB	B,AFOR
	ADDI	B,100 
	IDPB	B,OFOR
	PUSHJ	P,OBUFL		; CHECK TO SEE IF OUTPUT BUFFER FULL
	SOJN	J,.-4
	MOVE	F,AFOR1		; RESET BYTE POINTER
	MOVEM	F,AFOR
	POPJ	P,

; GETS ONE BYTE FROM INPUT BUFFER, CONVERTS IT TO AN ASCII CAPITAL,
; AND OUTPUTS IT TO THE OUTPUT BUFFER

GBYTE:  ILDB    B,IFOR          ; GET A BYTE
	ADDI	B,100		; CONVERT TO ASCII CAPITAL
        IDPB    B,OFOR          ; DEPOSIT IN OUTPUT BUFFER
	PUSHJ	P,OBUFL		; CHECK FOR FULL OUTPUT BUFFER
	POPJ	P,

; RESETS POINTERS, ADVANCES INPUT POINTER.
; CHANGES MIDAS '@' (20000000) TO IMLAC 'I' (100000)

WRDEND:	MOVEI   J,4		; RESET BYTE COUNTER
	AOJ	G,		; INCREMENT INPUT POINTER
	LDB	F,[260100,,@G]	; GET INDIRECT BIT
	CAIN	F,1		; IS IT ONE?
	DPB	F,[170100,,@G]	; IF SO, DEPOSIT IN IMLAC INDIRECT BIT
	AOJL	M,RSET		; IF THE NUMBER OF CHARS PER LINE SPECIFIED HAS BEEN REACHED,
	PUSHJ	P,OCRLF		; OUTPUT A CR-LF.
RSET:	MOVE	F,IFOR1		; RESET THE INPUT BYTE-POINTER TO THE NEXT WORD
	HLLM	F,IFOR
	AOS	IFOR
	POPJ	P,
; CHECKS TO SEE IF OUTPUT BUFFER IS FULL AND OUTPUTS AND CLEARS IT IF IT IS.

OBUFL:	SKIPN	OUTBUF+40	; IF =0, BUFFER NOT YET FULL
	POPJ	P,		; RETURNS IF OUTPUT BUFR NOT YET FULL
	.IOT	OC,OPNTR	; OUTPUTS OUTPUT BUFR IF IT IS FULL
	MOVE	F,OUTBUF+40	; WRAPS AROUND OVERFLOW
	MOVE	0,[OUTBUF,,OUTBUF+1]	; CLEARS OUTPUT BUFFER 
	CLEARM	OUTBUF
	BLT	0,BUFEND
	MOVEM	F,OUTBUF
	HRRI	F,OUTBUF	; RESETS POINTER TO OUTPUT BUFFER
	HRRM	F,OFOR
	MOVE	F,OPNTR1
	MOVEM	F,OPNTR
	POPJ	P,

; UPDATES COUNT, CHECKSUM (CORRECTING OVERFLOW IF IT OCCURS)

UPDATE:	AOJ	H,
	AOJ	D,		; UPDATES COUNT OF WORDS PROCESSED
	ADD	E,-1(G)		; UPDATES CHECKSUM
        MOVE    F,E		;TESTS FOR
        SUBI    F,200000	;AND CORRECTS
        JUMPLE  F,.+3		;OVERFLOW IN
        ANDI    E,177777	;CHECKSUM.
        AOJ     E,
	POPJ	P,
; OUTPUTS A CR-LF AFTER LNSZ CHARACTERS (CURRENTLY 15 CHARS)

OCRLF:	MOVE	M,LNSZ
	MOVEI	F,15
	IDPB	F,OFOR
	PUSHJ	P,OBUFL
	MOVEI	F,12
	IDPB	F,OFOR
	PUSHJ	P,OBUFL
	POPJ	P,

; GETS IMLAC BLK LDR FROM COM:IMLAC BLKLDR AND PREFIXES IT TO OUTPUT FILE.

TRBKLR:	MOVE	M,BLKSZ		; BLKSZ=-403
	.OPEN	IC,BLKLOC
	.VALUE	0
MORLDR:	.IOT	IC,F		; GET ONE ASCII CHARACTER
	IDPB	F,OFOR		; OUTPUT IT
	PUSHJ	P,OBUFL
	CAILE	F,77		; IF NOT ASCII BETWEEN '@' AND 'N' DO NOT
	CAIL	F,120		; COUNT IT TOWARDS THE 403 CHARS NEEDED 
	JRST	MORLDR
	AOJL	M,MORLDR
	POPJ	P,
; CHECKS TO SEE IF END OF BLOCK REACHED, AND SKIPS IF IT HAS
; END OF BLOCK REACHED IF WORDS PROCESSED (D) EQUALS WORDS IN BLOCK (INBUF)

BLKCHK:	MOVE	F,INBUF
	CAIGE	F,40
	JRST	ENDBLK
	CAIE	H,40
	JRST	ENDBLK
	SETZM	H
	MOVEI	G,INBUF+2
	MOVE	F,IFOR1
	MOVEM	F,IFOR
	PUSHJ	P,MORBLK
	AOS	(P)
	POPJ	P,
ENDBLK:	MOVEM	D,F		
	SUB	F,INBUF
	SKIPN	F
	AOS	(P)		; SKIPS IF END OF BLOCK REACHED
	POPJ	P,

MORBLK:	MOVE	F,IPNTR1
	MOVEM	F,IPNTR
	MOVE	F,BIGBLK
	CAILE	F,40
	JRST	BIGIO
	CAIG	F,0
	POPJ	P,
	AOS	F
	MOVNS	F
	HRLM	F,IPNTR
BIGIO:	.IOT	IC,IPNTR
	MOVE	F,BIGBLK
	SUBI	F,40
	MOVEM	F,BIGBLK
	AOS	(P)
	POPJ	P,


; IF END OF BLOCK REACHED, RESET POINTERS AND OUTPUT CHECKSUM.
BLKEND:	MOVE	F,IFOR1		; RESET INPUT BYTE-POINTER
	MOVEM	F,IFOR
	MOVEI	J,4		; SET UP CHECKSUM OUTPUT
	ILDB	F,SFOR		; GET BYTE OF CHECKSUM
	ADDI	F,100		; TRANSLATE IT
	IDPB	F,OFOR		; OUTPUT IT
	PUSHJ	P,OBUFL		; BUFFER FULL?
	SOJN	J,.-4
	MOVE	F,SFOR1		; RESET CHECKSUM OUTPUT POINTER
	MOVEM	F,SFOR
	SETZM	D		; ZERO WORDS PROCESSED COUNT
	SETZM	E		; ZERO CHECKSUM
	SETZM	H
	POPJ	P,

; CHECKS FOR END OF PROG, AND SKIPS IF REACHED
; (A JRST INSTRUCTION IN THE HEADER WORD OF A BLOCK)

PRGCHK:	MOVE	N,INBUF+1
	HRRM	N,ECODE
	HRRM	N,DCODE
	CAME	N,ECODE
	CAMN	N,DCODE
	POPJ	P,
	AOS	(P)
	POPJ	P,

; DOES END OF PROGRAM HOUSEKEEPING.
; SETS UP AND OUTPUTS COUNT-ADDRESS WORDS OF 377 & 177777, WHICH THE LOADER
; INTERPRETS AS BEING THE END OF PROGRAM 

PRGEND:	SETZM	INBUF
	MOVEI	F,377		; END OF PROG CODE FOR COUNT
	MOVEM	F,INBUF
	MOVEI	F,177777	; END OF PROG CODE FOR ADDRESS
	MOVEM	F,INBUF+1
	PUSHJ	P,OHDR		; OUTPUT THIS DUMMY HEADER
	AOS	OFOR
	HRRZ	B,OFOR
	MOVE	A,[-1,,C]
	MOVEM	A,@B
	AOS	OFOR
	AOS	B
	PUSHJ	P,OBUFL
	HRL	D,[440700]
	HLL	D,OFOR
	MOVNI	C,5
	MOVEI	F,3
	IDPB	F,D
	PUSHJ	P,OBUFL
	AOJLE	C,.-2
	MOVEM	A,@B
	AOS	OFOR
	HRR	F,OFOR
	PUSHJ	P,OBUFL
	MOVEI	F,OUTBUF	; SET UP AN IOT POINTER TO TAKE CARE OF THE
	HRR	G,OFOR		; SMALLER BUFFER SIZE TO BE OUTPUT
	SUB	F,G
	SUBI	F,1
	HRLM	F,OPNTR
	.IOT	OC,OPNTR	; OUTPUT THE OUTPUT BUFFER
	MOVE	F,OPNTR1	; RESET THE OUTPUT POINTER
	MOVEM	F,OPNTR
	.CLOSE	IC,		; CLOSE THE INPUT CHANNEL
	.CLOSE	OC,		; CLOSE THE OUTPUT CHANNEL
	PUSHJ	P,SAVBIN	; ASK IF BIN FILE TO BE SAVED AND SAVE (OR DELETE) IT.
	POPJ	P,
; REINITIALIZES AC'S AND POINTERS

INIT:	SETZM	A
	SETZM	D
	SETZM	E
	SETZM	F
	SETZM	G
	SETZM	H
	SETZM	M	
	MOVE	0,[IFOR1,,IFOR]	; RESETS ALL POINTERS AND BYTE-POINTERS
	BLT	0,OPNTR
	POPJ	P,

; ASKS IF MIDAS OUTPUT FILE SHOULD BE SAVED, AND DELETES IT IF NOT.

SAVBIN:	.OPEN	TYIC,[SIXBIT/   TTY/]	; OPENS TO TTY
	.VALUE 0
	.OPEN	TYOC,[1,,SIXBIT/   TTY/]
	.VALUE 0
	PASC	[ASCIZ/SAVE MIDAS BIN FILE?: /]
	.IOT	TYIC,A		; GET ANSWER FROM TTY
	CAIE	A,131		; EITHER 'Y' OR 'y' MEANS SAVE
	CAIN	A,171
	POPJ	P,		; RETURN IF TO BE SAVED
	MOVE	F,USRSAV	; ZERO PRTF+3 FOR PROPER DELETE FORMAT,
	SETZM	USRSAV		; SAVING ITS CONTENTS IN (F)
	.FDELE	PRTF		; DELETE MIDAS BIN FILE
	.VALUE	0
	MOVEM	F,USRSAV	; RESTORE PRTF+3
	POPJ	P,


; VARIOUS BYTE POINTERS AND IO POINTERS

IFOR:	200400,,INBUF+2		; INPUT FROM INPUT BUFFER
OFOR:	440700,,OUTBUF		; OUTPUT TO OUTPUT BUFFER
CFOR:	100400,,INBUF		; INPUT FROM COUNT WORD
AFOR:	200400,,INBUF+1		; INPUT FROM ADDRESS WORD
SFOR:	200400,,E		; INPUT FROM CHECKSUM
HPNTR:	-HDRSZ,,INBUF		; INPUT MIDAS HEADER
UPNTR:	-1,,INBUF+1		; INPUT ONE WORD
OPNTR:	-40,,OUTBUF		; OUTPUT OUTPUT BUFFER

IPNTR:	0,,0			; BLOCK INPUT POINTER SET UP HERE
IPNTR1:	0,,0

; SAVED VERSIONS OF ABOVE

IFOR1:	200400,,INBUF+2
OFOR1:	440700,,OUTBUF
CFOR1:	100400,,INBUF
AFOR1:	200400,,INBUF+1
SFOR1:	200400,,E
HPNTR1:	-HDRSZ,,INBUF
UPNTR1:	-1,,INBUF+1
OPNTR1:	-40,,OUTBUF

; POINTER TO OUTPUT FILE, AND POINTER TO BLOCK LOADER

PRTF1:	3,,SIXBIT/   DSK/
	0	
	SIXBIT/IML   /

BLKLOC:	SIXBIT/   DSK/
	SIXBIT/IMLAC /
	SIXBIT/BLKLDR/
; INPUT, OUTPUT, AND PDL BUFFERS

PDL:	BLOCK 30
INBUF:	BLOCK 50
OUTBUF:	BLOCK 41
BUFEND=.-1

; VARIOUS CONSTANTS

HDRSZ=46
LNSZ:	-15
BLKSZ:	-403
BLKLDR:	0
BIGBLK:	0
TYPFLG:	1
NPNT:	0
MIDWRD:	DATAI 104,0
DCODE:	JUMPA 0
ECODE:	JRST 0
LAST:	0

END GO
TR1
	MOVEM	F,OPNTR
	POPJ	P,

; UPDATES COUNT, CHECKSUM (CORRECTING OVERFLOW IF IT OCCURS)

UPDATE:	AOJ	H,
	AOJ	D,		; UPDATES COUNT OF WORDS PROCESSED
	ADD	E,-1(G)		; UPDATES CHECKSUM
        MOVE    F,E		;TESTS FOR
        SUBI    F,200000	;AND CORRECTS
        JUMPLE  F,.+3		;OVERFLOW IN
        ANDI    E,177777	;CHECKSUM.
        AOJ     E,
	POPJ	P,
; OUTPUTS A CR-LF AFTER LNSZ CHARACTERS (CURRENTLY 15 CHARS)

OCRLF:	MOVE	M,LNSZ
	MOVEI	F,15
	IDPB	F,OFOR
	PUSHJ	P,OBUFL
	MOVEI	F,12
	IDPB	F,OFOR
	PUSHJ	P,OBUFL
	POPJ	P,

; GETS IMLAC BLK LDR FROM COM:IMLAC BLKLDR AND PREFIXES IT TO OUTPUT FILE.

TRBKLR:	MOVE	M,BLKSZ		; BLKSZ=-403
	.SUSET	[.RSNAM,,RSYSNM]
	.SUSET	[.SSNAM,,BSYSNM]
	.OPEN	IC,BLKLOC
	.VALUE	0
MORLDR:	.IOT	IC,F		; GET ONE ASCII CHARACTER
	IDPB	F,OFOR		; OUTPUT IT
	PUSHJ	P,OBUFL
	CAILE	F,77		; IF NOT ASCII BETWEEN '@' AND 'N' DO NOT
	CAIL	F,120		; COUNT IT TOWARDS THE 403 CHARS NEEDED 
	JRST	MORLDR
	AOJL	M,MORLDR
	.SUSET	[.SSNAM,,RSYSNM]
	POPJ	P,
; CHECKS TO SEE IF END OF BLOCK REACHED, AND SKIPS IF IT HAS
; END OF BLOCK REACHED IF WORDS PROCESSED (D) EQUALS WORDS IN BLOCK (INBUF)

BLKCHK:	MOVE	F,INBUF
	CAIGE	F,40
	JRST	ENDBLK
	CAIE	H,40
	JRST	ENDBLK
	SETZM	H
	MOVEI	G,INBUF+2
	MOVE	F,IFOR1
	MOVEM	F,IFOR
	PUSHJ	P,MORBLK
	AOS	(P)
	POPJ	P,
ENDBLK:	MOVEM	D,F		
	SUB	F,INBUF
	SKIPN	F
	AOS	(P)		; SKIPS IF END OF BLOCK REACHED
	POPJ	P,

MORBLK:	MOVE	F,IPNTR1
	MOVEM	F,IPNTR
	MOVE	F,BIGBLK
	CAILE	F,40
	JRST	BIGIO
	CAIG	F,0
	POPJ	P,
	AOS	F
	MOVNS	F
	HRLM	F,IPNTR
BIGIO:	.IOT	IC,IPNTR
	MOVE	F,BIGBLK
	SUBI	F,40
	MOVEM	F,BIGBLK
	AOS	(P)
	POPJ	P,


; IF END OF BLOCK REACHED, RESET POINTERS AND OUTPUT CHECKSUM.
BLKEND:	MOVE	F,IFOR1		; RESET INPUT BYTE-POINTER
	MOVEM	F,IFOR
	MOVEI	J,4		; SET UP CHECKSUM OUTPUT
	ILDB	F,SFOR		; GET BYTE OF CHECKSUM
	ADDI	F,100		; TRANSLATE IT
	IDPB	F,OFOR		; OUTPUT IT
	PUSHJ	P,OBUFL		; BUFFER FULL?
	SOJN	J,.-4
	MOVE	F,SFOR1		; RESET CHECKSUM OUTPUT POINTER
	MOVEM	F,SFOR
	SETZM	D		; ZERO WORDS PROCESSED COUNT
	SETZM	E		; ZERO CHECKSUM
	SETZM	H
	POPJ	P,

; CHECKS FOR END OF PROG, AND SKIPS IF REACHED
; (A JRST INSTRUCTION IN THE HEADER WORD OF A BLOCK)

PRGCHK:	MOVE	N,INBUF+1
	HRRM	N,ECODE
	HRRM	N,DCODE
	CAME	N,ECODE
	CAMN	N,DCODE
	POPJ	P,
	AOS	(P)
	POPJ	P,

; DOES END OF PROGRAM HOUSEKEEPING.
; SETS UP AND OUTPUTS COUNT-ADDRESS WORDS OF 377 & 177777, WHICH THE LOADER
; INTERPRETS AS BEING THE END OF PROGRAM 

PRGEND:	SETZM	INBUF
	MOVEI	F,377		; END OF PROG CODE FOR COUNT
	MOVEM	F,INBUF
	MOVEI	F,177777	; END OF PROG CODE FOR ADDRESS
	MOVEM	F,INBUF+1
	PUSHJ	P,OHDR		; OUTPUT THIS DUMMY HEADER
	AOS	OFOR
	HRRZ	B,OFOR
	MOVE	A,[-1,,C]
	MOVEM	A,@B
	AOS	OFOR
	AOS	B
	PUSHJ	P,OBUFL
	HRL	D,[440700]
	HLL	D,OFOR
	MOVNI	C,5
	MOVEI	F,3
	IDPB	F,D
	PUSHJ	P,OBUFL
	AOJLE	C,.-2
	MOVEM	A,@B
	AOS	OFOR
	HRR	F,OFOR
	PUSHJ	P,OBUFL
	MOVEI	F,OUTBUF	; SET UP AN IOT POINTER TO TAKE CARE OF THE
	HRR	G,OFOR		; SMALLER BUFFER SIZE TO BE OUTPUT
	SUB	F,G
	SUBI	F,1
	HRLM	F,OPNTR
	.IOT	OC,OPNTR	; OUTPUT THE OUTPUT BUFFER
	MOVE	F,OPNTR1	; RESET THE OUTPUT POINTER
	MOVEM	F,OPNTR
	.CLOSE	IC,		; CLOSE THE INPUT CHANNEL
	.CLOSE	OC,		; CLOSE THE OUTPUT CHANNEL
	PUSHJ	P,SAVBIN	; ASK IF BIN FILE TO BE SAVED AND SAVE (OR DELETE) IT.
	POPJ	P,
; REINITIALIZES AC'S AND POINTERS

INIT:	SETZM	A
	SETZM	D
	SETZM	E
	SETZM	F
	SETZM	G
	SETZM	H
	SETZM	M	
	MOVE	0,[IFOR1,,IFOR]	; RESETS ALL POINTERS AND BYTE-POINTERS
	BLT	0,OPNTR
	POPJ	P,

; ASKS IF MIDAS OUTPUT FILE SHOULD BE SAVED, AND DELETES IT IF NOT.

SAVBIN:	.OPEN	TYIC,[SIXBIT/   TTY/]	; OPENS TO TTY
	.VALUE 0
	.OPEN	TYOC,[1,,SIXBIT/   TTY/]
	.VALUE 0
	PASC	[ASCIZ/SAVE MIDAS BIN FILE?: /]
	.IOT	TYIC,A		; GET ANSWER FROM TTY
	CAIE	A,131		; EITHER 'Y' OR 'y' MEANS SAVE
	CAIN	A,171
	POPJ	P,		; RETURN IF TO BE SAVED
	MOVE	F,USRSAV	; ZERO PRTF+3 FOR PROPER DELETE FORMAT,
	SETZM	USRSAV		; SAVING ITS CONTENTS IN (F)
	.FDELE	PRTF		; DELETE MIDAS BIN FILE
	.VALUE	0
	MOVEM	F,USRSAV	; RESTORE PRTF+3
	POPJ	P,


; VARIOUS BYTE POINTERS AND IO POINTERS

IFOR:	200400,,INBUF+2		; INPUT FROM INPUT BUFFER
OFOR:	440700,,OUTBUF		; OUTPUT TO OUTPUT BUFFER
CFOR:	100400,,INBUF		; INPUT FROM COUNT WORD
AFOR:	200400,,INBUF+1		; INPUT FROM ADDRESS WORD
SFOR:	200400,,E		; INPUT FROM CHEC