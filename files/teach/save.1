(defun save ()
       (do ((save-file (open (list '(dsk teach)
				   (status uname) 'hack) 'out)))
	   ()
	   (mapatoms '(lambda (x)
			      (cond ((getl x '(expr fexpr))
				     (foo x)))))
	   (close save-file)))

(defun foo (x)
       (do ((prop (getl x '(expr fexpr macro))))
	   nil
	   (princ '|(DEFUN | save-file)	   ;we want a defun
	   (prin1 x save-file)		   ;of name of function
	   (princ '| | save-file)
	   (prin1 (car prop) save-file)	   ;type
	   (princ '| | save-file)
	   (prin1 (cadadr prop) save-file)	   ;BVL
	   (terpri save-file)
	   (mapcar '(lambda (x)
			    (prin1 x save-file))
		   (cddadr prop))
	   (princ '|)| save-file)
	   (terpri save-file)
	   (terpri save-file)))