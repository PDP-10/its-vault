1)  Load the file TEACH;SIMUL MACROS to get ENTITY's and STRUCT's
2)  To create an entity:  Do (ENTITY '<list of vars to close over>
				     '<handler-function>)
    This will return an ENTITY, which is the functional object with
    environment.
3)  To give an ENTITY a name to identify it better, do
    (PUTPROP <entity> <name> 'PNAME).  If you would like to compute the
    name on the fly, the entity can answer the PNAME? operation, which should
    return a string which will be used instead.  The PNAME property overrides
    the PNAME? operation.  Don't forget to put the PNAME? operation in the
    WHICH-OPERATIONS list.
4)  The arguments received by the <handler-function> are as follows:
    (self op dat1 dat2 dat3)
    SELF is the entity being invoked.  OP is the name of the operation to be
    performed, and must be a symbol.  DATn are additional data;  if not
    given to the E-CALL macro, the corresponding DATn will be unbound.
    However, the handler function *MUST* take 5 arguments.  It can ignore
    those it does not want to see.
5)  Every entity *MUST* answer the WHICH-OPERATIONS operation.  This should
    return a list of all the operations that the entity can handle, WITH THE
    EXCEPTION of WHICH-OPERATIONS!
6)  Generally, any handler function is going to be a giant CASEQ which will
    dispatch for the  different operations.
7)  Invoke entities with the macro E-CALL.  Do:
    (E-CALL <entity> <operation> [<up to 3 additional arguments>])
