.TITLE ERRORS!

.IF1
.PRINT /1=> ENGLISH ONLY, 2=> FRENCH ONLY, 3=> BOTH,4=>ENGLISH, FR+SITSD, 5=>SITSD
LANG=/
.TTYMA FLAG
FLAGX==FLAG
.ENDM
SITSD==1
.IF Z FLAGX-5
FLAGX==1
.ENDC
RAF==0
.IF Z FLAGX-4
FLAGX==3
.ENDC
.ENG==FLAGX&1
.FR==FLAGX&2
.PRINT /1=> FIXED, 0=> MOVING
FIXED=/
.TTYMA FLAG
FIXED==FLAG
.ENDM
.ENDC
FRFLG==2
ENGFLG==4
PFRFLG==10
A=%0
B=%1
C=%2
D=%3
E=%4
F=%5
P=%6
PC=%7

.=0
.REPT 200
.+2
HALT
.ENDR

MAXELN==0
DCS=177460
DWC=DCS+2
DMA=DWC+2
DAR=DMA+2
DAE=DAR+2
MCS=177404
MWC=MCS+2
MMA=MWC+2
MAR=MMA+2
MAXROT==0
	.MACRO ERRM A
A'.N==MAXROT+200
MAXROT==MAXROT+1
.ENDM

ERRNO==200
ERMNO==0
	.STITL ERROR TABLES

	ERRM PNAB
	ERRM PRLO
	ERRM TYO
	ERRM PRCO
	ERRM PRS1
	ERRM PRCT
	ERRM GDBY
	ERRM CTIT
	ERRM HNM
	ERRM LDE1
	ERRM PAE
	ERRM PRAB
	ERRM PNH1
	ERRM TMAP
	ERRM TDE
	ERRM BUG
	ERRM BRK
	ERRM WTA
	ERRM WTAA
	ERRM WTAB
	ERRM WTIB

.IFNZ FIXED
.ERDA==2400	;WHERE ERRORS GO; ALSO FIRST BLOCK FOR FIXED DISK
.FNDA1==110000
.FNDA2==2
.FNDA==2440
.CLDA==2500
.IFF
.ERDA==400
.FNDA==440
.FNDA1==110000
.FNDA2==0
.CLDA==500
.IFZ .FR
.IFNZ RAF!SITSD
.ERDA==1400
.FNDA==1440
.FNDA1==110000
.FNDA2==1
.CLDA==1500
.ENDC
.ENDC

.FNTAD==40000

.BLKW 40
PDL=.

.GO:	RESET
	MOV #PDL,%6
	MOV #-ERLNTH/2,A
	MOV #ERRSRT,B
	MOV #.ERDA,D
	JSR PC,DWRITE
	MOV #-CLSLTL,A
	MOV #.SLOT1,Bî
	MOV #.CLDA,D
	JSR PC,DWRITE
	TST .FNTAD+<'A*2>
	BEQ BGOOD
	MOV #-10000,A
	MOV #.FNTAD,B
	MOV #.FNDA,D
	JSR PC,DWRITE
BGOOD:	MOV #7,177566
	BPT
	BR .-2
DWRITE:
.IFNZ FIXED
	MOV A,DWC
	MOV B,DMA
	CLR C
	ASHC #7,C
	MOV C,DAE
	MOV D,DAR
	MOV #3,DCS
	TSTB DCS
	BGE .-4
	TST DCS
	BLT .+4
	RTS PC
FBAD:	BPT
	BR .GO
.ENDC
.IFZ FIXED
	MOV A,MWC
	MOV B,MMA
	ASH #-1,D
	CLR C
	DIV #12.,C
	ASH #4,C
	ADD D,C
.IIF Z .FR,.IIF Z SITSD,.IIF Z RAF,BIS #20000,C
.IIF NZ .FR,ADD #20000,C
	MOV C,MAR
	MOV #3,MCS
	TSTB MCS
	BGE .-4
	TST MCS
	BLT .+4
	RTS PC
MBAD:	BPT
	BR .GO
.ENDC


	.MACRO BEGER X,EN,F
X'.E::
FOO==.
	.ASCII /X/
	.=FOO+4
	BARF==0
	.IRPC Q,X
	BARF==<<''Q-'A+1>&17>+<BARF*20>
	.ENDM
	BARF
	.IFNZ .ENG
	EN
	.ENDC
	.IF Z 3-<.ENG!.FR>
.BYTE 0
.ENDC
	.IFNZ .FR
	F
	.ENDC
	.BYTE 0
	.EVEN
.IIF LT FOO+MAXELN-.,MAXELN==.-FOO
	.ENDM

	.MACRO EROT A
	.BYTE A'.N
	.ENDM


	.MACRO ETEXT AA
	.ASCII \AA\
	.ENDM
ERRSRT:
.OFFSE 0-.


BEGER BADD,<
ETEXT ^/BAD DIRECTORY./>,<
ETEXT ^/MAUVAIS UTILISATEUR/>

BEGER BADE,<
ETEXT ^/BAD ENTRY./>,<
ETEXT ^/MAUVAISE ENTREE/>

BEGER BAT,<
ETEXT ^/BAD ARRAY TYPE./>,<
ETEXT ^/MAUVAIS TYPE DE VECTEUR/>

BEGER BDD,<
ETEXT ^/BAD DISK./>,<
ETEXT ^/MAUVAIS DISQUE/>

BEGER BRK,<
EROT BRK>,<
EROT BRK>

BEGER BUG,<
EROT BUG>,<
EROT BUG>

BEGER CDE,<
ETEXT ^/CAN'T DELETE ENTRY./>,<
ETEXT ^/JE NE PEUX DETRUIRE CETTE ENTREE/>

BEGER CDF,<
ETEXT ^/CAN'T ERASE THAT FILE./>,<
ETEXT ^/NE PEUX DETRUIRE CE FICHIER/>

BEGER COP,<
ETEXT ^/CHAR /
EROT TYO
ETEXT ^/ OUT OF PLACE./>,<
ETEXT ^/CAR /
EROT TYO
ETEXT ^/ HORS POSITION/>

BEGER CRE,<
ETEXT ^/CAN'T READ THAT ENTRY./>,<
ETEXT ^/NE PEUX RAMENER CETTE ENTREE/>

BEGER CTIT,<
ETEXT ^/YOU ARE ALREADY DEFINING /
EROT CTIT>,<
ETEXT ^/VOUS ETES ENTRAIN DE DEFINIR /
EROT CTIT>

BEGER DFU,<
ETEXT ^/DISC FULL./>,<
ETEXT ^/LE DISQUE EST REMPLI/>

BEGER DIU,<
ETEXT ^/DEVICE IN USE./>,<
ETEXT ^/L'APPAREIL N'EST PAS DISPONIBLE/>

BEGER DNA,<
EROT PRS1
ETEXT ^/ IS NOT A DEVICE NAME./>,<
EROT PRS1
ETEXT ^/ N'EST PAS UN APPAREIL./>

BEGER DNR,<
ETEXT ^/DEVICE NOT READY./>,<
ETEXT ^/L'APPAREIL N'EST PAS PRET/>

BEGER DOR,<
ETEXT ^/DURATION OUT OF RANGE/>,<
ETEXT ^/DUREE TROP LONGUE/>

BEGER DRF,<
ETEXT ^/DIRECTORY FULL./>,<
ETEXT ^/PLUS DE PLACE/>

BEGER EAES,<
ETEXT ^/ENTRY ALREADY EXISTS./>,<
ETEXT ^/ENTREE DEJA EXISTANTE/>

BEGER ELW,<
EROT PRCT
ETEXT ^/ - EDIT LINE WHAT?/>,<
ETEXT ^/ EDITE QUELLE LIGNE??/>

BEGER ENDR,<
ETEXT ^/ENTRY NOT A DIRECTORY./>,<
ETEXT ^/CETTE ENTREE N'EST PAS CELLE D'UN UTILISATEUR/>

BEGER ERP,<
ETEXT ^/UNEXPECTED RIGHT PARENTHESIS./>,<
ETEXT ^/PARENTHESE DROITE SUPERFLUE/>

BEGER ERW,<
ETEXT ^/CAN'T ERASE "/
EROT PRCT>,<
EROT PRCT
ETEXT ^/ - EFFACE QUOI?/>

BEGER FAE,<
ETEXT ^/FILE ALREADY EXISTS./>,<
ETEXT ^/FICHIER DEJA EXISTANT/>

BEGER FAO,<
ETEXT ^/FILE ALREADY OPEN./>,<
ETEXT ^/FICHIER DEJA OUVERT/>

BEGER FBUG,<
ETEXT ^/FATAL SYSTEM BUG./
EROT GDBY>,<
ETEXT ^/BUG FATAL AU SYSTEME/
EROT GDBY>

BEGER FNF,<
ETEXT ^/FILE NOT FOUND./>,<
ETEXT ^/N'AI PAS TROUVE CE FICHIER/>

BEGER HARD,<
ETEXT ^/HARDWARE ERROR/>,<
ETEXT ^/ERREUR DE MACHINERIE/>

BEGER HNM,<
ETEXT ^/YOU HAVEN'T TOLD ME HOW   TO /
EROT HNM>,<
EROT HNM
ETEXT ^/ N'EXISTE PAS./>

BEGER HNM1,<
ETEXT ^/YOU HAVEN'T TOLD ME HOW   TO /
EROT PRCT>,<
EROT PRCT
ETEXT ^/ N'EXISTE PAS./>

BEGER HNV,<
EROT PNAB
ETEXT ^/ HAS NO VALUE./>,<
EROT PNAB
ETEXT ^/ N'A PAS RECU DE VALEUR/>

BEGER IDN,<
ETEXT ^/IMPROPER DISPLAY NUMBER (UGH!)/>,<
ETEXT ^/CET ECRAN N'EXISTE PAS/>

BEGER IFN,<
EROT PRCO
ETEXT ^/ IS INVALID FILE NAME./>,<
EROT PRCO
ETEXT ^/ NE PEUT SERVIR COMME NOM DE FICHIER/>

BEGER INF1,<
EROT PRCO
ETEXT ^/ IS IN THE WRONG PLACE./>,<
EROT PRCO
ETEXT ^/ EST A LA MAUVAISE PLACE/>

BEGER INVN,<
ETEXT ^/INVALID NODE./>,<
ETEXT ^/NODE INVALIDE/>

BEGER ITN,<
ETEXT ^/A NONEXISTANT TURTLE?/>,<
ETEXT ^/NUMERO DE TORTUE INEXISTANT/>

BEGER IUN,<
ETEXT ^/INVALID USER./>,<
ETEXT ^/ON NE PEUT UTILISER CE NOM/>

BEGER IVV,<
ETEXT ^/INVALID VOICE NUMBER/>,<
ETEXT ^/NUMERO DE PISTE INEXISTANT/>

BEGER LCE,<
ETEXT ^/LINE ... CHANGED BY EDIT./>,<
ETEXT ^/LIGNE ... A ETE CHANGEE PAR EDITE/>

BEGER LDE,<
ETEXT ^/LINE /
EROT LDE1
ETEXT ^/ DOESN'T EXIST./>,<
ETEXT ^/LIGNE /
EROT LDE1
ETEXT ^/ INEXISTANTE/>

BEGER LNTB,<
ETEXT ^/LINE NUMBER TOO BIG./>,<
ETEXT ^/NUMERO DE LIGNE TROP GRAND/>

BEGER LNTS,<
ETEXT ^/LINE NUMBER TOO SMALL./>,<
ETEXT ^/NUMERO DE LIGNE TROP PETIT/>

BEGER NAS,<
ETEXT ^/NOT ENOUGH ARRAY SPACE./>,<
ETEXT ^/PAS ASSEZ D'ESPACE POUR LA MATRICE/>

BEGER NDU,<
ETEXT ^/YOU DON'T HAVE A DISPLAY CONSOLE/>,<
ETEXT ^/CE TERMINAL NE PEUT AVOIR UN ECRAN/>

BEGER NDV,<
ETEXT ^/NO DISPLAY AVAILABLE./>,<
ETEXT ^/PLUS D'ECRANS DISPONIBLES/>

BEGER NEC,<
EROT PRCT
ETEXT ^/ CAN'T BE EDITED./>,<
EROT PRCT
ETEXT ^/ N'EST PAS UN COMMANDEMENT D'EDITION/>

BEGER NED,<
ETEXT ^/DIRECTORY NOT FOUND./>,<
ETEXT ^/N'AI PAS TROUVE CET UTILISATEUR/>

BEGER NFO,<
ETEXT ^/NO FILE OPEN!/>,<
ETEXT ^/FICHIER N'EST PAS OUVERT!/>

BEGER NIP,<
ETEXT ^/NOTHING INSIDE PARENTHESES./>,<
ETEXT ^/LES PARENTHESES SONT VIDES/>

BEGER NOG,<
ETEXT ^/NOTE OUT OF RANGE/>,<
ETEXT ^/NOTE HORS LIMITE/>

BEGER NOU,<
EROT PRLO
ETEXT ^/ DIDN'T OUTPUT!/>,<
EROT PRLO
ETEXT ^/ N'A PAS PRODUIT D'OUTPUT/>

BEGER NSL,<
ETEXT ^/NO STORAGE LEFT./>,<
ETEXT ^/PLUS D'ESPACE DISPONIBLE/>

BEGER NTB,<
ETEXT ^/THORTON BOX SLOTS NOT AVAILABLE/>,<
ETEXT ^/IL N'Y A PAS DE TBOX/>

BEGER NTF,<
EROT PRS1
ETEXT ^/ NOT "TRUE OR "FALSE ./>,<
ETEXT ^/NI "VRAI NI "FAUX/>

BEGER OIP,<
ETEXT ^/ONLY WHEN DEFINING OR EDITING A PROCEDURE./>,<
ETEXT ^/POSSIBLE SEULEMENT A L'INTERIEUR D'UNE PROCEDURE/>

BEGER OGT,<
ETEXT ^/ONLY ON 2500'S/>,<
ETEXT ^/ONLY ON 2500'S/>

BEGER OOB,<
ETEXT ^/OUT OF BOUNDS/>,<
ETEXT ^/HORS LIMITE/>

BEGER OOP,<
EROT PRCO
ETEXT ^/ OUT OF PLACE./>,<
EROT PRCO
ETEXT ^/ HORS POSITION/>

BEGER OOT,<
ETEXT ^/OUT OF TOKENS./>,<
ETEXT ^/JE SUIS VIDEE/>

BEGER PAE,<
EROT PAE
ETEXT ^/YOU HAVE ALREADY TOLD ME HOW   TO /
EROT PRAB>,<
ETEXT ^/PROCEDURE /
EROT PRAB
ETEXT ^/ DEJA EXISTANTE/>

BEGER PBE,<
EROT CTIT
ETEXT ^/ IS BEING EDITED./>,<
EROT CTIT
ETEXT ^/ EST SOUS EDITION/>

BEGER PNH,<
ETEXT ^/PROCEDURE "/
EROT PRCT
ETEXT ^/ NOT HERE./>,<
ETEXT ^/LA PROCEDURE /
EROT PRCT
ETEXT ^/ N'EST PAS ICI/>

BEGER PNH1,<
EROT PNH1
ETEXT ^/PROCEDURE "/
EROT PRAB
ETEXT ^/ NOT HERE./>,<
ETEXT ^/LA PROCEDURE/
EROT PRAB
ETEXT ^/ N'EST PAS ICI/>

BEGER ROB,<
ETEXT ^/INDEX REFERENCE OUT OF BOUNDS./>,<
ETEXT ^/INDEX DE REFERENCE HORS LIMITE/>

BEGER RTB,<
ETEXT ^/ARITHMETIC RESULT TOO BIG./>,<
ETEXT ^/NOMBRE TROP GRAND/>

BEGER SHW,<
ETEXT ^/CAN'T PRINTOUT "/
EROT PRCT>,<
EROT PRCT
ETEXT ^/ IMPRIME QUOI?/>

BEGER STD,<
ETEXT ^/TOO MANY SNAPS./>,<
ETEXT ^/TROP DE PHOTOS/>

BEGER TDE,<
ETEXT ^/TTY /
EROT TDE
ETEXT ^/ DOESN'T EXIST./>,<
ETEXT ^/TERMINAL /
EROT TDE
ETEXT ^/ NON EXISTANT/>

BEGER TGDZ,<
ETEXT ^/INPUT TO RIGHT OR LEFT TOO LARGE/>,<
ETEXT ^/INPUT TROP GRAND/>

BEGER TIP,<
ETEXT ^/TOO MUCH INSIDE PARENTHESES./>,<
ETEXT ^/TROP DE PARENTHTHESES INTERIEURES/>

BEGER TMAC,<
ETEXT ^/"/
EROT PRCO
ETEXT ^/" CAN'T TAKE MORE THAN 32 ARGS./>,<
EROT PRCO
ETEXT ^/ NE PEUT RECEVOIR PLUS DE 32 INPUTS/>

BEGER TMAP,<
ETEXT ^/TOO MANY ARGS!!!/
EROT TMAP>,<
ETEXT ^/TROP D'INPUTS!!!/
EROT TMAP>

BEGER TML,<
ETEXT ^/TOO MANY LINES/>,<
ETEXT ^/TROP DE LIGNES/>

BEGER TNR,<
ETEXT ^/HELP! TURTLE NOT RESPONDING./>,<
ETEXT ^/AU SECOURS! LA TORTUE NE REPOND PAS/>

BEGER UBL,<
ETEXT ^/"/
EROT PRCT
ETEXT ^/ IS USED BY LOGO./>,<
EROT PRCT
ETEXT ^/ EST UTILISE PAR LOGO/>

BEGER UDA,<
ETEXT ^/YOU HAVE NOT DEFINED ARRAY "/
EROT PRCT>,<
ETEXT ^/MATRICE NON DEFINIE/>

BEGER UEL,<
ETEXT ^/UNEXPECTED END OF LINE./>,<
ETEXT ^/ENONCE INCOMPLET/>

BEGER UELX,<
ETEXT ^/"/
EROT PRCO
ETEXT ^/ NEEDS MORE INPUTS./>,<
EROT PRCO
ETEXT ^/ A BESOIN DE PLUS D'INPUT(S)/>

BEGER VTD,<
ETEXT ^/"/
EROT PRCO
ETEXT ^/ NEEDS A TURTLE OR A DISPLAY/>,<
EROT PRCO
ETEXT ^/ AVEZ-VOUS DEMANDE UNE TORTUE OU UN ECRAN/>

BEGER VTU,<
ETEXT ^/"/
EROT PRCO
ETEXT ^/ NEEDS A TURTLE/>,<
EROT PRCO
ETEXT ^/ AVEZ-VOUS DEMANDE UNE TORTUE/>

BEGER WDIM,<
ETEXT ^/BAD DIMENSION(S)./>,<
ETEXT ^/MAUVAISES DIMENSIONS/>

BEGER WDW,<
ETEXT ^/YOU DON'T SAY WHAT TO DO WITH /
EROT PRS1>,<
ETEXT ^/QUE DOIS-JE FAIRE AVEC /
EROT PRS1>

BEGER WIT,<
EROT PRCT
ETEXT ^/ CAN'T BE AN INPUT./>,<
EROT PRCT
ETEXT ^/ NE PEUT SERVIR D'INPUT/>

BEGER WNA,<
ETEXT ^/WRONG NUMBER OF ARGUMENTS TO /
EROT PRCO>,<
ETEXT ^/NOMBRE INCORRECT D'INPUTS POUR /
EROT PRCO>

BEGER WTA,<
EROT PRCO
ETEXT ^/ DOESN'T LIKE /
EROT PRS1
ETEXT ^/ AS INPUT./>,<
EROT PRCO
ETEXT ^/ N'AIME PAS RECEVOIR /
EROT PRS1
ETEXT ^/ COMME INPUT./>

BEGER WTAA,<
EROT PRCO
ETEXT ^/ DOESN'T LIKE /
EROT WTAA
EROT PRS1
ETEXT ^/ AS INPUT./>,<
EROT PRCO
ETEXT ^/ N'AIME PAS RECEVOIR /
EROT WTAA
EROT PRS1
ETEXT ^/ COMME INPUT./>

BEGER WTAB,<
EROT PRCO
ETEXT ^/ DOESN'T LIKE /
EROT WTAB
EROT PRS1
ETEXT ^/ AS INPUT./>,<
EROT PRCO
ETEXT ^/ N'AIME PAS RECEVOIR /
EROT WTAB
EROT PRS1
ETEXT ^/ COMME INPUT./>

BEGER WTIB,<
EROT PRCO
ETEXT ^/ DOESN'T LIKE /
EROT WTIB
ETEXT ^/ AS INPUT./>,<
EROT PRCO
ETEXT ^/ N'AIME PAS RECEVOIR /
EROT WTIB
ETEXT ^/ COMME INPUT./>

ERREND==.
.OFFSE 0
ERLNTH==.-ERRSRT
PPDLL==1000
SPDLL==1000
DBUFL==2000
PURE==40000
PDSWOP==374
PDSLOP==140
LSTR==140000
SSTR==70000
	.MACR NODE A,B
	.XLIST
$.==$$+1
	A
	B
$$==$$+1
	.LIST
.ENDM
.SLOT1:
MSLTLN==NODESP-UVBLK+<4*4096.>	;ALL YOU COULD POSSIBLY WANT
.OFFSE PURE-.
	.STITL USER VARIABLES

UVBLK=.
S:	IS
UPDLP:	IP	;USER PDL POINTER(ONLY WHEN USER NOT RUNNING)
SPOPL:	IS
SSWPAD:	IS-PDSWOP
PPOPL:	IP
PSWPAD:	IP-PDSWOP
DBUFPT:	0	;POINTER INTO THE DISK BUFFER
ERDISP:	0
ERRPT:	0
BASEUS:	0	;BASE OF USER SLOT(MUST BE LAST RELOCATED)
PRBAO:	0	; = 0,374,770, ... N*PDSWOP
SPRBAO:	0	;WHERE N = # P OR S PDL BLOCKS SWAPPED OUT
NSYBUG:	20.	;NUMBER OF SYSTEM BUGS BEFORE RELOAD
NNGC:	0	;NUMBER OF NODES GARBAGE COLLECTED
NNIFSL:	0	;NO. NODES IN FREE STORAGE LIST
DSKNCH:	0	;NUMBER OF CHARS LEFT IN DISK BUFFER
DSKNSC:	0	;NUMBER OF SECTORS IN THIS FILE
DSKADR:	0	;CURRENT SECTOR FOR THIS FILE
REDFLG:	0
WRTFLG:	0
FILFLG:	0
DEFDIR:	46
.IIF Z SITSD,DEFDSK:	0
.IIF NZ .FR,.IIF NZ SITSD,DEFDSK:	0
.IIF Z .FR,.IIF NZ SITSD,DEFDSK:	4
WRTDIR:	0
LBLKAD:	0
DESMOD:	0
DBGOT:	0
DEOFBL:	-1
ENTBEG:	0
FNBLK:	.BLKW 5
CURDIR:	46
.IIF Z SITSD,WCHDSK:	0	;WHICH DISK
.IIF Z .FR,.IIF NZ SITSD,WCHDSK:	4
.IIF NZ .FR,.IIF NZ SITSD,WCHDSK:	0
DESSAV:	.BYTE 'N,'E,'W,'S+200
	.BLKW 63.
.IF Z SITSD
NAME==DESSAV+2
.IFF
FVERN==DESSAV+2
FPAGE==DESSAV+4
NAME==FPAGE
FBYTES==DESSAV+6
FDATE==DESSAV+10
FTIME==DESSAV+12
.ENDC
DBCNT:	0
DESPNT:	0
DESEPT:	0
SSAVEA:	0	;PLACE S PDL SAVED WHEN MARKING SWAPED OUT PDL
.IIF Z 3-<.ENG!.FR>,LANG:	FRFLG!PFRFLG
FREE:	SOFN	;START OF FREE NODES
GCP1:	0
GCP2:	0
GCPREV:	0
	ERCLR1==.	;ON ERROR, START ZEROING HERE
TOPS:	0	;GC MARK FROM HERE IF NON 0
TOPS1:	0	;   "
TOPS2:	0	; "	(SIGH)
JPLN:	0	;PROCEDURE LINE # BEFORE LAST "GO"
	;THE FOLLOWING ARE PUSHED BY PEVAL
CPP:	0	;CURRENT PROCEDURE UOE POINTER
CPSN:	0
CPLN:	0	;CURRENT PROCEDURE LINE NO.
CLP:	0	;CURRENT LINE POINTER - GOOD IF CPSN'S AGREE
CLGN:	0	;CURRENT LINE GENERATION NO.
CTN:	0	;CURRENT TOKEN NO.
CTP:	0	;CURRENT TOKEN POINTER
IFLEV:	0	;IF LEVEL
NOPAR:	0	;NUMBER OF PARENS SEEN BY STNE
CPDLP:	0	;CURRENT PDL PTR AFTER LAST PEVAL PUSH
CSPDLP:	0	;CURRENT S PDL PTR AFTER LAST PEVAL PUSH
	;END OF PEVAL PUSHES EXCEPT
	;CO, CO+2, FLAGS + ERPROC ARE ALSO PUSHED
FUNLEV:	0	;FUNCTION LEVEL

	;THE FOLLOWING ARE PUSHED (SOMETIMES) BY EVAL
CO:	0	;CURRENT OPERATOR
	0
NOR:	0	;NO. OF OPERANDS STILL NEEDED BEFORE CO CAN BE EXECUTED
	;END OF EVAL PUSHES
COF:	0	;CURRENT OPERATOR FLAGS
LO:	0	;LAST OPERATOR
	0
CT:	0	;CURRENT TOKEN
	0	; "
RDFLAG:	0	;FOR READ
LISTBD:	0	;LIST BUILD DEPTH
PSTOPR:	0	;RETURN ADDR FOR PSTOP
ERFRET:	0	;RETURN ADDR WHEN AN ERROR SET FRAME IS ENCOUNTERED
DOFRET:	0
TEMP:	0
TMPBLK:	.BLKW 7
TFLAGS:	0	;TEMP FLAGS (ALL TFN'S SHOULD EVENTALLY POINT HERE)
NCHR:	0	;FOR BLST
ABASE:	0	;(ABASE)+10. IS WHAT ARITHMETIC BASE WE ARE IN
		;(FOR CONVERT TO & FROM STRING ROUTINES)
	ERCLR2==.	; ON ERROR STOP CLEARING HERE
FLAGS:	0	;FLAG WORD
ERPROC:	0	;UOE PTR TO PROC TO CALL IF THERE IS AN ERROR
ILINEL:	0	;INPUT LINE PTR GC MARK FROM HERE)
NPROCL:	0	;NAME OF PROC BEING EXECUTED WHEN ERROR OCCURED
NLINEL:	0	;# OF PROC LINE BEING EXECUTED " " "
NTOKEL:	0	;# OF TOKEN BEING EXECUTED " " "
ERRORN:	-1	;ERROR NUMBER
BRAKEL:	0	;VALUE OF BRAKE(U)
TOPRNM:	0	;PTR TO UOE OF PROC. BEING "TO"'ED
FNLLP:	0	;FIRST NODE OF LIST OF LINE POINTERS (FOR "TO")
FLAGS2:	0	;EVAL FLAGS - NOT PUSHED BY PEVAL
PRMTCH:	'?	;PROMPT CHAR
GNCN:	0	;"GET NEXT CHAR" NODE AND USED BY GNOLE
	0
NBKTS:	0	;FOR RDSTR
LASTER:	0	;ADDRESS OF LAST ERROR
LASTPR:	0	;LAST PROC DEFINED
GCHR:	0	;SOURCE OF CHARS
PCHR:	0	;PLACE WHERE OUTPUT CHARS GO (TYO, BLST, ...)
RNSEED:	27.	;FOR RANDOM
ALEVN:	0	;NON-ZERO MEANS ALLOW N LEVEL BREAK STUFF
WVALUE:	0	;USED BY EXAMINE, DEPOSIT, VALUE
DBITTB:	.=.+40
DBITBE=.-2
AFREE:	0	;POINTER TO ARAY SPACE FREE LIST
AROVER:	0	;BOW-WOW
ASPACE:	0	;AMOUNT OF ARAY SPACE STILL FREE
NODTOP:	0
SEXP:	0	;USED FOR SIGN OF EXPONENT IN CONVERT
FNPDL:	0	;AUXILIARY STACK IN CONVERT
	0
	0
	0
	0
	0
	0
	0

;MUSIC BOX VARIABLES (ONE SET FOR EACH MUSIC BOX)
	MUSBEG==.	
		;KEEP VARIABLES IN THIS ORDER
MVOC:	.WORD	0,0,0,0	;POINTERS TO VOICE LISTS--ONE FOR EACH VOICE
VLAST:	.WORD	0,0,0,0	;POINTERS TO LAST NODE IN LIST
VOICLN:	.WORD	0,0,0,0	;NUMBER OF NOTES IN EACH VOICE
VOICEN:	0	;INDEX FOR CURRENT ACTIVE VOICE
NVOIC:	0	;NUMBER OF ACTIVE VOICES
	MUSEND==.
MUCWRD:	100	;CONTROL CHAR FOR CURRENT MUSIC BOX MODE
PLTCHR:	0	;CHAR COMING BACK FROM PLOTTER

;TURTLE VARIABLES
TURDN:	0	;USER'S TURTLE DEVICE NUMBER
TURF:	0	;FUDGE FACTOR FOR TURTLE LEFT AMD RIGHT

DFLAGS:	.WORD 0
DIVOWN:	.WORD 0
DPENP:	.WORD 0
PLPENP:	.WORD 0
;PLOTTER VARIABLES
;THESE MUST BE IN ORDER
PORBEG==.
PCURX:	.WORD 0,0	;CURRENT PLOTTER X POS
PCURY:	.WORD 0,0	;PLOTTER CURRENT Y
PCURA:	.WORD 0,0		;CURRENT ANGLE PLOTTER
PCOSA:	.WORD 0,0
PSINA:	.WORD 0,0
RPCURX:	.WORD 0,0,0,0
POREND==.

;VARIABLES AND CONSTANTS FOR DISPLAY SYSTEM

;THESE MUST BE IN THIS ORDER
DORBEG==.
DCURX:	.WORD 0,0
DCURY:	.WORD 0,0
DCURA:	.WORD 0,0
DCOSA:	.WORD 0,0
DSINA:	.WORD 0,0
RDCURX:	.WORD 0,0,0,0
OLDX:	.WORD 0,0
OLDY:	.WORD 0,0
 
NADXY:	0	;NUMBER OF EXTRA ADDXY'S WE CAN TRY TO COLLAPSE
ODIREC:	0	;IF NOT EQUAL TO DIREC BREAK INCREMENTS TO NEW OWRD

DOREND==.	;MARKS END OF THESE VARIABLES
;END OF ORDER

STB:	0	;STATIC AREA BOTTOM
STT:	0	;STATIC AREA TOP.POINTS TO TOP OF STATIC DISPLAY AREA
DYB:	0	;DYNAMIC BOTTOM.  POINTS TO BOT OF DY AREA
DYR:	0	;ROVING POINTER USED BY DISPLAY STORAGE ALLOCATIN ROUTINES
DYT:	0	;POINTER TO DYNAMIC AREA TOP
TUB:	0	;POINTER TO TURTLE AREA BOTTOM
SNLIST:	0	;POINTER TO SNAP LIST
SNABOT:	0	;BOTTOM OF CURRENT SNAP
DFBCNT:	0	;KEEPS TRACK OF # OF FREE BITS IN DISPLAY LIST
PUSHJT:	0	;DISPLAY PUSHJ TO TURTLE
DRELOC:	0	;RELOCATION.  ADD THIS TO VIRTUAL ADDRESS TO GET DISPLAY ADDRESS

DIREC:	0
GTIDF:	0
PI:	40511
	7732
	121041
	64303

ATANC0:	40177		;CONSTANTS FOR ARCTAN (IN TURTLE)
	177202
	76161
	112632
ATANC1:	137652
	46637
	115420
	63453
ATANC2:	37506
	30101
	136067
	177440
ATANC3:	137356
	71757
	163330
	35701
ATANC4:	37127
	125401
	173320
	15574
ATANC5:	136500
	5106
	125337
	36073
;PI / 4
PIFOUR:	40111
	7732
	121041
	64303



ERRBUF:	.=.+MAXELN
LUVBLK==.-UVBLK
	.=.+20	;EXTRA P PDL SLOP
PDLLIM==.
	.=.+PPDLL
	IP=.
PPUSHL==IP-<PPDLL-PDSLOP>
PDLINK:	.=.+4	;LINK TO PREVIOUS DISK BLOCK
	.=.+SPDLL
	IS=.
SPUSHL==IS-<SPDLL-PDSLOP>
SDLINK:	.=.+4
DBUF:	.=.+DBUFL
HCC==67.	;HASH CODE CONSTANT - A PRIME
UHCT:	.=UHCT+<2*HCC>
	-1
GCBITS:	.BLKW 400

NODESP:	0	;NODE 0
N==NODESP
	0
	$$==1
.IFNZ .ENG
TRUE=LSTR+$$
	NODE SSTR+$.,"TR
	NODE SSTR,"UE
FALSE=LSTR+$$
	NODE SSTR+$.,"FA
	NODE SSTR+$.,"LS
	NODE SSTR,'E
.ENDC
.IFNZ .FR
	VRAI=LSTR+$$
	NODE SSTR+$.,"VR
	NODE SSTR,"AI
	FAUX=LSTR+$$
	NODE SSTR+$.,"FA
	NODE SSTR,"UX
.ENDC
.IFNZ .ENG
$TOTO=LSTR+$$
	NODE SSTR,"TO
.ENDC
.IFNZ .FR
$POURX=LSTR+$$
	NODE SSTR+$.,"PO
	NODE SSTR,"UR
.ENDC

	LUNN=$$-1
	NNN=$$	;NEXT NODE NO.
SOFN=NNN	;START OF FREE NODES
ASOFN=.
CLSLTL=<.-UVBLK>/2
	.OFFSE 0
	.END .GO
