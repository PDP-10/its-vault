Date: 15 JUL 1980 2204-EDT
From: Moon at MIT-AI (David A. Moon)
Subject: More grousing about ZTOP mode
To: (BUG ZWEI) at MIT-AI

In the version of zwei on system 30.4, with microcode 671, on LISP Machine Six:

The activation character (typically close parenthesis) does not echo until
after evaluation has been completed.

If I go back and edit something I have already evaluated, unless I am very careful
to make a completely fresh copy, when I hit c-return it starts reading it at a
completely random place and consequently gets an error.

Date: 15 JUL 1980 2154-EDT
From: Moon at MIT-AI (David A. Moon)
Subject: ZTOP mode is worthless!
To: (BUG ZWEI) at MIT-AI

In the version of zwei on system 30.4, with microcode 671, on LISP Machine Six:

I was typing in a function into a ztop buffer, hoping to take advantage of all
the nice editor features for typing in my temporary hack function.  Wanting to
test something before I finished writing it, I went to the end of the buffer and
typed in a form.  Not only did it not evaluate that form, but rather evaluate something
random out of the middle of my partially typed defun and get an error, but it lost
all the stuff I had typed in.

Date: 15 JUL 1980 1741-EDT
From: MMcM at MIT-AI (Mike McMahon)
To: INFO-ZWEI at MIT-AI

The file AI:NZWEI;NZWEI COMDIF contains the differences in the command
sets between the new window system editor in system 30, and the old
window system editor in system 27.


Date: 15 JUL 1980 1811-EDT
From: MMcM at MIT-AI (Mike McMahon)
To: INFO-ZWEI at MIT-AI

The file AI:NZWEI;EMACS COMDIF contains a list of commands (their meagre
self documentation) in the LISP Machine editor, that are not present in
EMACS, or sufficiently different from the corresponding commands to
warrant noting.
The documentation strings are in some cases very vague; these lists are
intended solely to give an idea of the existence of some commands that
you might otherwise never find out about.

Date: 14 JUL 1980 2014-EDT
From: Zvona at MIT-AI (David Chapman)
To: (BUG ZWEI) at MIT-AI

In system 30.3, with microcode 671, on LISP Machine Two:

COM-MAKE-/(/)-BACKWARD does something screwy in the minibuffer. The behavior is that the
open, though it displays, seems to go someplace special, and is not read out of the 
minibuffer by whatever is looking at it. But the next time you do m- you get the open and
nothing else. This is only when the open comes at the beginning of the biffer, I think.

Date: 14 JUL 1980 1924-EDT
From: Moon at MIT-AI (David A. Moon)
To: (BUG ZWEI) at MIT-AI

COM-WHERE-IS-SYMBOL interns the name you type in the user package, so if
it wasn't there before it is now, and you can't find out.  It should leave
it as a string, but it wasn't obvious to me how to fix that without
breaking the feature that you can point at the symbol with the mouse,
hence this letter.

Date: 14 JUL 1980 1841-EDT
From: MMcM at MIT-AI (Mike McMahon)
Subject: statistics
To: (BUG NWS) at MIT-AI, (BUG ZWEI) at MIT-AI

ZMAIL uses 92. different windows, of a total of 30. different flavors,
constructed with 121. total base flavors and mixins, out of the system
total of 233. different flavors.


Date: 14 JUL 1980 0246-EDT
From: Moon at MIT-AI (David A. Moon)
To: (BUG ZWEI) at MIT-AI

In the version of zwei on system 30.3, with microcode 671, on LISP Machine Six:

COM-VIEW-FILE can put the list (ZWEI:CONFIGURATION-CHANGED T) into ZWEI:*LAST-COMMAND-CHAR*
breaking something or other.  Also the window that file viewing uses apparently
doesn't save its bits; it comes up blank if I select away from it and then back with
the SYSTEM key.

DLW@MIT-AI 07/14/80 01:57:16 Re: Commands that should be on keys
To: (BUG ZWEI) at MIT-MC
This listing is certainly valuable and some or all of the suggested key
bindings should be made.  However, keep in mind that some commands
exist without key bindings on purpose, so that people with variant
tastes can bind them if they want.  For example, the old-style c-v and
m-v were left around, unbound, in Emacs for people who wanted them (I
only switched over under pressure), and so I did the same in EINE.  So
don't flush anything that might be useful just because you don't want
to put it onto the default comtab.



Date: 13 JUL 1980 2336-EDT
From: BAK at MIT-AI (William A. Kornfeld)
To: (BUG ZWEI) at MIT-AI

It would be nice, when doing an incremental search, if the cursor in the buffer
would blink.


MOON@MIT-MC 07/13/80 16:43:34 Re: Commands that should be on keys
To: (BUG ZWEI) at MIT-MC
Culled from the list of "unreachable" commands, these are the ones
that seem to me should be on keys in the default environment.  Where
I have them on keys in my environment, I list the key as a suggestion
of where I think it should go.  These are in no particular order.
I believe the keys listed here are all otherwise unassigned.

COM-VIEW-BUFFER			;c-X V    (I use this a lot in Emacs, but
				;   don't currently have it on a key in Z)
COM-INDENT-DIFFERENTLY		;c-Tab
COM-KILL-BACKWARD-UP-LIST
COM-POINT-TO-Q-REG
COM-Q-REG-TO-POINT
COM-MOVE-TO-PREVIOUS-POINT		;c-m-Space
COM-MOVE-TO-DEFAULT-PREVIOUS-POINT	;c-X c-m-Space
COM-SELECT-PREVIOUS-BUFFER		;c-m-L
COM-SELECT-DEFAULT-PREVIOUS-BUFFER	;c-X c-m-L

I don't know what these are, but the names sound like they belong on keys:

COM-FROB-DO			;Perhaps C-M-$ as suggested before
COM-STACK-LIST-VERTICALLY	;GLS' thing, should perhaps have a key
COM-TWO-WINDOWS-SHOWING-REGION	;c-x 8 in MMcM's env.

Mike, can you suggest suitable keys for these?

Date: 13 July 1980 16:28-EDT
From: Mike McMahon <MMCM at MIT-AI>
To: MOON at MIT-AI
cc: BUG-ZWEI at MIT-AI

    Date: 13 JUL 1980 0157-EDT
    From: Moon at MIT-AI (David A. Moon)
    How can I get Electric Shift Lock mode to be operative on a non-lisp mode
    buffer, e.g. the microcode?  I have a mode hook in my init file that turns
    electric shift lock minor mode on and off, but if I turn it on manually for
    a buffer that the mode hook turned it off for, it appears in the mode line
    but fails to upper-case any characters.  Evidently there are two independent
    guys each deciding whether or not electric shift lock should be operative.
A while ago someone added this flag called *GLOBAL-SHIFT-LOCK-MODE-ENABLE*
(actually without the *'s, because they did not believe in following the editor
coding conventions) that modes have to set to have it work at all.
I guess since people use the mode hook, the correct thing would be to remove
it from the sticky minor modes and flush that extraneous flag.

Date: 13 JUL 1980 0300-EDT
From: Moon at MIT-AI (David A. Moon)
To: (BUG ZWEI) at MIT-AI

In the version of ZWEI on system 30.3, with microcode 671, on LISP Machine Six:

It's completely unreasonable that when I edit the microcode (in Fundamental
mode, not Lisp mode) the editor insists on paging in the entire file to
do simple s-expression operations such as c-m-T and blinking the matching
parenthesis.  I obviously wouldn't be doing these if I was inside a string,
and if I did do these inside a string I would want it to act as if the string
wasn't there.

Date: 13 JUL 1980 0223-EDT
From: Moon at MIT-AI (David A. Moon)
To: (BUG ZWEI) at MIT-AI

In the version of zwei on system 30.3, with microcode 671, on LISP Machine Six:

There are problems with continuation lines.  If you type a character that makes the
current line have a continuation line and very quickly type a rubout, an extraneous
blank line with an "!" at the LEFT margin is left on the display.  Also sometimes
expanding the current line into a continuation line wipes out the following line.

All these bugs may be disagreement between typeout and compute-motion.

Date: 13 JUL 1980 0157-EDT
From: Moon at MIT-AI (David A. Moon)
To: (BUG ZWEI) at MIT-AI

In the version of zwei on system 30.3, with microcode 671, on LISP Machine Six:

How can I get Electric Shift Lock mode to be operative on a non-lisp mode
buffer, e.g. the microcode?  I have a mode hook in my init file that turns
electric shift lock minor mode on and off, but if I turn it on manually for
a buffer that the mode hook turned it off for, it appears in the mode line
but fails to upper-case any characters.  Evidently there are two independent
guys each deciding whether or not electric shift lock should be operative.

Date: 12 JUL 1980 1536-EDT
From: ACW at MIT-AI (Allan C. Wechsler)
To: (BUG ZWEI) at MIT-AI

In the version of ZWEI on system 29.96 NWS, with microcode 669, on LISP Machine Two:

The extended command meta/x Install Macro barfs with a "This stream
does not support macros" error.
   ---Wechsler


Date: 12 JUL 1980 1228-EDT
From: BAK at MIT-AI (William A. Kornfeld)
To: (BUG ZWEI) at MIT-AI

I propose changing the name of COM-PACKAGE-SET to COM-SET-PACKAGE.  Reasons:
(1) Its better English. (2) Its consistent with the mode-line prompt
"Set package:" (3) Its consistent with several other commands (e.g. Set Fonts)
and (4) I expect it to be that way (because of reasons 1-3) and consequently
often have to type the command twice before I get it right.


Date: 12 JUL 1980 0412-EDT
From: Moon at MIT-AI (David A. Moon)
Subject: Unreachable commands  (in system 30.3)
To: (BUG ZWEI) at MIT-AI

I wrote a little program (saved in NZWEI;DOC) which finds all the commands not
reachable from any key nor from m-X.  Unfortunately it requires a human to come
in and filter out any commands which belong to major or minor modes, since those
don't have their own separate comtabs for it to look in.  Anyway here is the
list of all the commands that seemed to me to be really unreachable.  We might
want to discuss which of them should be made available to users.  I have attempted
to sort these by category.

COM-MOVE-TO-PREVIOUS-POINT
COM-MOVE-TO-DEFAULT-PREVIOUS-POINT
COM-SELECT-PREVIOUS-BUFFER
COM-SELECT-DEFAULT-PREVIOUS-BUFFER
COM-NEXT-SEVERAL-SCREENS
COM-PREVIOUS-SEVERAL-SCREENS
COM-POINT-TO-Q-REG
COM-Q-REG-TO-POINT

COM-BACKWARD-DOWN-LIST
COM-BACKWARD-SEXP-NO-UP
COM-CANONICALIZE-WHITESPACE
COM-DECLARE-SPECIAL
|COM-DELETE-()|
COM-DOWN-INDENTED-LINE
COM-END-COMMENT
COM-FILL-LONG-COMMENT
COM-FORWARD-SEXP-NO-UP
COM-FROB-DO
COM-GROW-LIST-BACKWARD
COM-GROW-LIST-FORWARD
COM-JUST-ONE-SPACE
COM-KILL-BACKWARD-UP-LIST
COM-KILL-TERMINATED-WORD
|COM-MAKE-()-BACKWARD|
COM-RIGHT-ADJUST-LINE
COM-SIMPLE-EXCHANGE-CHARACTERS
COM-STACK-LIST-VERTICALLY
COM-STUPID-TAB
COM-TAB-HACKING-DELETE-FORWARD
COM-TAB-TO-TAB-STOP
COM-UNCOMMENT-REGION
COM-UP-INDENTED-LINE

COM-DELETE-FILE
COM-MINI-VISITED-FILE

COM-DOCUMENT-CONTAINING-COMMAND
COM-LIST-MATCHING-FUNCTIONS
COM-MACRO-EXPAND-SEXP

COM-COMPILE-AND-EXIT
COM-EVALUATE-AND-EXIT
COM-EVALUATE-AND-REPLACE-INTO-BUFFER

COM-GET-Q-REG

COM-INDENT-COMMENT-RELATIVE
COM-INDENT-DIFFERENTLY
COM-INDENT-FOR-LISP-COMMENTS-SPECIAL
COM-INDENT-NESTED
COM-INDENT-RELATIVE
COM-INDENT-UNDER
COM-MULTIPLE-TRY-LISP-TAB

COM-REQUIRE-ACTIVATION

COM-SORT-LINES
COM-SORT-PARAGRAPHS
COM-SORT-VIA-KEYBOARD-MACROS

COM-TWO-WINDOWS-SHOWING-REGION

COM-UNDO

COM-INSERT-BUFFER
COM-VIEW-BUFFER
COM-VIEW-KBD-MACRO
COM-WHAT-LOSSAGE


Date: 11 JUL 1980 1416-EDT
From: RICH at MIT-AI (Charles Rich)
To: (BUG ZWEI) at MIT-AI

In system `29.95 NWS, with microcode 669, on LISP Machine Eight:
According to Apropos, there is a Delete File command, but
the extended command reader doesn't seem to think so.


Date: 11 July 1980 11:57-EDT
From: Mike McMahon <MMCM at MIT-AI>
To: MOON at MIT-AI
cc: BUG-ZWEI at MIT-AI

    Date: 10 JUL 1980 2258-EDT
    From: Moon at MIT-AI (David A. Moon)
    Killing all the characters in a buffer to which one has previously set up
    an interval-stream somehow breaks the interval-stream so that future output
    to it does not go into the buffer, or at least cannot be made to display.
Did you kill it using the stream message or manually?  State within the stream
is not maintained by a BP, so it will not notice asynchronous messing with the
buffer.

Date: 11 JUL 1980 0512-EDT
From: Moon at MIT-AI (David A. Moon)
To: (BUG ZWEI) at MIT-AI

In the version of zwei on system 30.2, with microcode 671, on LISP Machine One:

Well, this one is strange.  With SCRED, TVDEFS, and MOUSE read into my Zmacs,
the completing reader for m-. was broken.  Typing DO? would show me completions
of DO-MULTIPLE-MOVE and DOPLIST.  If I typed a hyphen, or more of "DO-MULTIPLE-MOVE",
it would claim there were no completions.  If I typed m-. do-multiple-move carriage
return it would find it without resectionizing, even though altmode would beep
and help would say no completions.  The completions listed fo "DO" and "D" were
in alphabetical order.

Date: 11 JUL 1980 0503-EDT
From: Moon at MIT-AI (David A. Moon)
To: (BUG ZWEI) at MIT-AI

In the version of zwei on system 30.2, with microcode 671, on LISP Machine One:

c-u c-u c-sp gets an error


Date: 11 JUL 1980 0501-EDT
From: Moon at MIT-AI (David A. Moon)
To: (BUG ZWEI) at MIT-AI

In the version of zwei on system 30.2, with microcode 671, on LISP Machine One:

There is a command called Undo which seems to work but it's not in the Comtab.
Maybe you should go through the complete list of commands and see if there
are more not in the m-x Comtab.

Date: 11 JUL 1980 0415-EDT
From: DLW at MIT-AI (Daniel L. Weinreb)
Subject: Things nobody will EVER complain about but aren't hard to fix
To: (BUG ZWEI) at MIT-AI

PL1-INDING-STYLE should be a regular ZWEI option, not a DEFVAR.

Date: 11 JUL 1980 0138-EDT
From: Zvona at MIT-AI (David Chapman)
To: (BUG ZWEI) at MIT-AI

In system 29.96 NWS, with microcode 669, on LISP Machine Two:
c-x c-p and relatives don't do quite the right thing. In particular, if you have
-------------------------
foo bar frobozz

<point>

snarkle 
-------------------------
and do c-x c-p, foo bar frobozz gets marked rather than snarkle.


Date: 10 JUL 1980 2258-EDT
From: Moon at MIT-AI (David A. Moon)
To: (BUG ZWEI) at MIT-AI

In the version of zwei on system 30.1, with microcode 671, on LISP Machine One:

Killing all the characters in a buffer to which one has previously set up
an interval-stream somehow breaks the interval-stream so that future output
to it does not go into the buffer, or at least cannot be made to display.
I tried doing a :SET-POINTER 0 to the interval-stream in the hope of being
able to read back what I had output (AFTER doing the killing, I had also done
some output before the killing which had worked fine), but then when I read
from the interval stream I got an error, I think of NIL where a line was
expected.

Date: 10 JUL 1980 2229-EDT
From: Moon at MIT-AI (David A. Moon)
Subject: c-x Altmode
To: (BUG ZWEI) at MIT-AI

In the version of zwei on system 30.1, with microcode 671, on LISP Machine One:

I like the new c-0 c-x Altmode, but why does it type out so slowly?  It's all
computes, not paging.

Date: 10 JUL 1980 2228-EDT
From: Moon at MIT-AI (David A. Moon)
Subject: c-x Altmode
To: (BUG ZWEI) at MIT-AI

In the version of zwei on system 30.1, with microcode 671, on LISP Machine One:

It doesn't remember numeric arguments; this is a screw with m-x List Callers for 
example.

Typing c-m-Y (I think that's what it is in Emacs, you have to type it a funny
way due to brain damage) at any minibuffer should start over with the previous
thing in the ring of saved commands.  This is in ^U m-alt rather than c-x alt
in Emacs, but you get the idea.

Date:  8 JUL 1980 1704-EDT
From: RMS at MIT-AI (Richard M. Stallman)
To: (BUG ZWEI) at MIT-AI

In the version of zwei on system 29.100 nws, with microcode 669, on LISP Machine Six:

C-X M inherits Electric Shift-lock mode from the editor
buffer that was in use before.  This is strange
given that Electric Shift-lock mode is (or at least so I recall)
per-buffer.  Note that I had logged MMCM out on this machine
so maybe it is something strange in his init.


Date:  8 JUL 1980 1702-EDT
From: RMS at MIT-AI (Richard M. Stallman)
To: (BUG ZWEI) at MIT-AI

In the version of zwei on system 29.100 nws, with microcode 669, on LISP Machine Six:

Echo area printouts such as "(new file)" remain on the screen
forever, and it might be better if they were cleared eventually.
For example, that printout should go away if a C-X C-V is done
which finds a real file.  I'm not saying it should
go away precisely then and not before.  Hopefully there is some
simple thing which can be implemented which would have the
desired result.
Perhaps some operations including C-X C-V should always clear
the echo area if there is anything in it.


Date:  8 JUL 1980 0336-EDT
From: Moon at MIT-AI (David A. Moon)
To: (BUG ZWEI) at MIT-AI

In the version of zwei on system 29.100 nws, with microcode 669, on LISP Machine Six:

Evidently ^X^V does not parse the file's modeline; doing ^X^F to the wrong directory,
getting (New file), then fixing it with ^X^V left the file's package (as seen in
the who line) incorrect.  m-x Reparse Mode Line corrected it.

Date: 7 July 1980 16:45-EDT
From: Mike McMahon <MMCM at MIT-AI>
Subject:  Timing bug in C-V, M-V
To: GLS at MIT-AI
cc: BUG-ZWEI at MIT-AI

    Date:  7 JUL 1980 1531-EDT
    From: GLS at MIT-AI (Guy L. Steele, Jr.)
    The C-V (Next Screen) and M-V (Previous Screen) commands have a severe bug.
    If you type them ahead, then they perform relative to the last screen display
    rather than to what the screen would be after the preceding command.
I have fixed C-V and friends to call the correct (new) primitive for first making sure point is
on the screen the way redisplay would first.

    I would surmise that ZWEI is checking for typeahead for immediate eecution
    before updating its idea of what ought to be on the screen.  This idea
    of where the screen-window into the buffer is within the buffer should be
    updated even though none of it has a chance to actually be put up on the
    screen.  That is, ZWEI needs two ideas of what is going on--what IS on
    the screen, and what OUGHT to be (but is not necessarily)--and the second
    should be updated with higher priority than processing typeahead if C-V
    is to work properly without timing screws like this one.
Maintenance of that much information would be much too costly, and mostly useless.  In this
case, all that is important is where the window starts.

Date: 7 July 1980 16:20-EDT
From: Eugene C. Ciccarelli <ECC at MIT-AI>
To: MMCM at MIT-AI
cc: RMS at MIT-AI, BUG-ZWEI at MIT-AI

    Are you sure?  In the version of [WORD] > installed on AI, that macro
    (Word Abbrev Apropos) still exists by only that name.

Just slowness on my part, I'm afraid -- the name IS going away, has in
the source and will in the installed version very shortly as soon as
I'm done the changes to make it correspond to the latest manual
chapter, which is the last word in abbrevs.  (After this basically
nothing will happen to it.)  The new name will be M-X List Some Word
Abbrevs.  RMS and I had talked about this name change a while back,
which is probably when he passed it along to you.

Date:  7 JUL 1980 1531-EDT
From: GLS at MIT-AI (Guy L. Steele, Jr.)
Subject: Timing bug in C-V, M-V
To: (BUG ZWEI) at MIT-AI
CC: GLS at MIT-AI

In the version of ZWEI on system 29.95 NWS, with microcode 669, on LISP Machine Eight:

The C-V (Next Screen) and M-V (Previous Screen) commands have a severe bug.
If you type them ahead, then they perform relative to the last screen display
rather than to what the screen would be after the preceding command.
Example:  I search for something a long way away, then type C-V before
it has been found (I know that what I want will be on the next screenfull).
The result is that when the search terminates, I see the screenfull after
the point I started the search from, not after the found thing.  This also
happens if you substitute M-< for searching--it's not a search bug.

I would surmise that ZWEI is checking for typeahead for immediate eecution
before updating its idea of what ought to be on the screen.  This idea
of where the screen-window into the buffer is within the buffer should be
updated even though none of it has a chance to actually be put up on the
screen.  That is, ZWEI needs two ideas of what is going on--what IS on
the screen, and what OUGHT to be (but is not necessarily)--and the second
should be updated with higher priority than processing typeahead if C-V
is to work properly without timing screws like this one.


Date:  5 JUL 1980 2042-EDT
From: Zvona at MIT-AI (David Chapman)
To: (BUG ZWEI) at MIT-AI

In system 29.96 NWS, with microcode 669, on LISP Machine Two:
The default file-name is wrong in (New Buffers). It should be <buffer-name> > <default
directory>; but is is some random thing, not even the last selected full buffer.

Date: 5 July 1980 14:27-EDT
From: Mike McMahon <MMCM at MIT-AI>
To: DLW at MIT-AI, MOON at MIT-AI
cc: BUG-ZWEI at MIT-AI

    Date:  5 JUL 1980 0344-EDT
    From: RMS at MIT-AI (Richard M. Stallman)
    Presumably a similar paradox occurs if the mouse is used to
    switch windows after a C-X.  I would say, abort the command.
Didn't we decide some time ago that mouse characters in this
circumstance should be ignored?

Date:  5 JUL 1980 1358-EDT
From: BAK at MIT-AI (William A. Kornfeld)
To: (BUG ZWEI) at MIT-AI


In NZWEI, system 29.95:

MOUSE-INDENT-RIGIDLY seems to be broken.  If a region is given and this command is
selected from the editor menu, the region moves one space left and stops.  Holding
down the mouse button and moving the mouse seems to have no effect.


Date:  5 JUL 1980 0344-EDT
From: RMS at MIT-AI (Richard M. Stallman)
To: (BUG ZWEI) at MIT-AI

In the version of zwei on system 29.96 NWS, with microcode 669, on LISP Machine Seven:

Selecting another editor window with the mouse
when ZWEI is waiting for input inside an I-search
has paradoxical effects. 

The other window becomes selected according to the window system,
but the next command typed has its effect on the original (deselected) window.
The following command has its effect on the newly selected window,
as it should.

Selecting another window at such a time is perfectly reasonable,
just as C-X O is reasonable, and it should terminate the I-search
normally (pushing point, etc).

Presumably a similar paradox occurs if the mouse is used to
switch windows after a C-X.  I would say, abort the command.


Date: 4 July 1980 15:19-EDT
From: Mike McMahon <MMCM at MIT-AI>
Subject: INFO-ZWEI
To: INFO-LISPM at MIT-AI
cc: INFO-ZWEI at MIT-AI

I have created this mailing list, primarily for periodic announcements
of new commands and features in the LISP Machine editor.  There seems
to be a large information gap here.  Please add yourself if you are
interested.  Some of you on BUG-ZWEI might want to put yourself here
instead.  In a few days time, i shall mail summaries of commands that
(1) do not exist in EMACS and (2) are new to NZWEI.

Date:  4 JUL 1980 1512-EDT
From: GLS at MIT-AI (Guy L. Steele, Jr.)
To: (BUG ZWEI) at MIT-AI
CC: GLS at MIT-AI

In the version of ZWEI on system 29.95 NWS, with microcode 669, on LISP Machine Eight:

The documentation for such things as Compile Defun (C-) and other
guys that call NZWEI:COMPILE-DEFUN-INTERNAL in general lie in their
all-too-short documentation.  Evidently if there is a region
they do **not** behave as advertised, but instead hack the region
instead of a DEFUN.  This is a great thing to do, but it ought to be
advertised.  The fact that it was not mislead me and shafted me royally.


Date: 4 July 1980 14:39-EDT
From: Mike McMahon <MMCM at MIT-AI>
Subject:  compiler warnings buffer
To: RMS at MIT-AI, MOON at MIT-MC
cc: BUG-ZWEI at MIT-AI

I have fixed the bug where the empty buffer did not redisplay
correctly.  There is no other way to fix the bug, because there is no
other bug.

I gather from your several messages that what you really want is M-X
Edit Compiler Warnings.  This gives you two window mode with as many
lines as needed of compiler warnings at the top and a M-. of the
offending function at the bottom.  C-. cycles through the whole
buffer.  Things are specially arranged so that if you do a compile
type function in the midst of your editing, such as C-T-C, the new
warnings are concatenated to the old warnings *for that function*, not
at the end of the buffer.  This works out quite nicely.

Date: 4 July 1980 13:50-EDT
From: Mike McMahon <MMCM at MIT-AI>
To: RMS at MIT-AI
cc: BUG-ZWEI at MIT-AI

    Date:  4 JUL 1980 0235-EDT
    From: RMS at MIT-AI (Richard M. Stallman)
    I created a second editor window with the system menu,
    having shrunk the original one a while earlier to make
    room for something else.  It is a shame that C-M-V
    does not work in such a situation.
What version of the system was this on?  C-M-V works for me in that
circumstance in the latest one.

MOON@MIT-MC 07/04/80 03:49:24 Re: compiler warnings buffer
To: RMS at MIT-AI
CC: (BUG ZWEI) at MIT-MC
The variable you want is called CONCATENATE-COMPILER-WARNINGS-P.  Maybe the default
should be the other way, but then I'm sure many people would complain that the buffer
was full of junk.  It is of course a bug that the display doesn't reflect what's
really in the buffer.

Date:  4 JUL 1980 0235-EDT
From: RMS at MIT-AI (Richard M. Stallman)
To: (BUG ZWEI) at MIT-AI

I created a second editor window with the system menu,
having shrunk the original one a while earlier to make
room for something else.  It is a shame that C-M-V
does not work in such a situation.

Date:  4 JUL 1980 0058-EDT
From: RMS at MIT-AI (Richard M. Stallman)
To: (BUG ZWEI) at MIT-AI

In the version of zwei on system 29.95 NWS, with microcode 669, on LISP Machine Eight:

I did a C-T-E in one editor window while Compiler Warnings was displayed
in another editor window.  I was operating on a DEFVAR with no init.

Although the mode line said "evaluating mumble", a line
<Compiling DEFS> was printed out in the middle of the other window.
(in the midst of all the data displayed there).  (DEFS was the name
of the file in which the DEFVAR resided).  I was immediately worried
that the old warnings had been clobbered.  I still needed them, and I had not expected
"evaluate" to destroy them.

I was reassured to find, on reselecting the other window,
that the other warnings were still there.  I made use of them for a while.
Then I typed a C-X ] command in that window by mistake
and suddenly they were gone, replaced by just the "<Compiling DEFS>" line.
(Since there were no formfeeds in the warnings, this had the effect
of going to the end of the file.)  I had not finished with them.

Please do not fix this by changing it so that it would have thrown away
the old warnings immediately.  I would rather have it the way it is!
Throwing away the warnings is a bad default.  What reason is there for
throwing them away?
It is much easier for a user to kill what he is not interested in than
for him to get back what was wiped out.

I suggest writing a formfeed into the warnings buffer between
compilations.  This would facilitate going to the beginning of the
most recent compilation.


Date:  4 JUL 1980 0033-EDT
From: RMS at MIT-AI (Richard M. Stallman)
To: (BUG ZWEI) at MIT-AI

In the version of zwei on system 29.95 NWS, with microcode 669, on LISP Machine Eight:

I had an editor window with Compiler Warnings selected.
It was not exposed.  I selected the window using the
system menu "select" menu, and it came up but did not redisplay.
It did redisplay after I typed a command.


Date:  3 JUL 1980 1235-EDT
From: GLS at MIT-AI (Guy L. Steele, Jr.)
To: (BUG ZWEI) at MIT-AI
CC: GLS at MIT-AI

In the version of ZWEI on system 29.95 NWS, with microcode 669, on LISP Machine Eight:

In NZWEI:ROTATE-BUFFER-HISTORY, it ought to check for an invalid numeric
argument.  If you give too large a number, a NIL creeps into the history
list and fouls everything up.  Likewise, a zero or negative argument
causes an unseemly error-it ought to just beep.


Date:  3 JUL 1980 1127-EDT
From: GLS at MIT-AI (Guy L. Steele, Jr.)
Subject: Deleting surrounding spaces and CR's
To: (BUG ZWEI) at MIT-AI, (BUG EMACS) at MIT-AI
CC: GLS at MIT-AI

In the version of ZWEI on system 29.95 NWS, with microcode 669, on LISP Machine Eight:

I often have occasion to want all these operations as distinct commands, and
only a few are provided:

(1) Delete all white space surrounding cursor.  This is M-\.
(2) Delete all white space and carriage returns.
(3) Delete all white space, and leave one space.
    This is good to use between words of a sentence, between sexps, etc.
(4) Delete all white space and carriage returns, and leave one space.
    This is also good to use between words.  M-^ does a generalized special case of this
    (special in that it flushes only one cr; general in that the cursor need not
    be near the cr).
(5) Delete all white space and crs, and leave a cr.  C-X C-O does some cases
    of this but not all, and sometimes (usually) leaves two cr's.  I want to do this
    all the time when splitting a line of words.  LF does this if TAB doesn't indent
    in one's particular mode.

Anyway, I'd like to see a more complete and consistent command set for these operations.


Date:  3 JUL 1980 0449-EDT
From: RMS at MIT-AI (Richard M. Stallman)
To: (BUG ZWEI) at MIT-AI

In the version of ZWEI on system 27.7, with microcode 663, on LISP Machine Five:

I typed CALL while inside C-X M.
Then I typed (ED).  (I had warm-booted in between, but shouldn't matter).
I found myself with the mail buffer, but without the
redefinitions (C-Alt was not defined, mode line was normal).

Then I typed C-X M again and the mode line changed while the text in the
mail buffer did not.  C-Alt then sent the message, and returned me
to my previous buffer. 


Date:  2 JUL 1980 2005-EDT
From: Moon at MIT-AI (David A. Moon)
To: (BUG ZWEI) at MIT-AI

In the version of zwei on system 29.95 NWS, with microcode 669, on LISP Machine Eight:

If the current window is not the zwei-window-1 (e.g. the old system-E bug struck,
but this could also happen legitimately), then ^X4 leaves the wrong thing in the
top window.  Going into two-window mode should either always reshape the current
window to be the top window, or should visit the current buffer in the top window
if it is not the same as the current window.

Date:  2 JUL 1980 1705-EDT
From: GLS at MIT-AI (Guy L. Steele, Jr.)
Subject: C-X T (Exchange Regions)
To: (BUG ZWEI) at MIT-AI
CC: GLS at MIT-AI

In the version of zwei on system 29.95 NWS, with microcode 669, on LISP Machine Eight:

Exchange Regions seems to have a bug where it often gives an error about POINT
being left off the screen.  This happens nine times out of ten.


Date:  2 JUL 1980 1140-EDT
From: GLS at MIT-AI (Guy L. Steele, Jr.)
Subject: Meta-.
To: (BUG ZWEI) at MIT-AI
CC: GLS at MIT-AI, (BUG EMACS) at MIT-AI

In the version of ZWEI on system 29.95 NWS, with microcode 669, on LISP Machine Eight:

I find it very frustrating that when I have several files loaded
which define a function of the same name that I cannot conveniently use
Meta-. to get around within a single file.  I suggest that Meta-.,
on finding more than one definition, should always prefer a definition
in the current buffer to one in another buffer.


Date:  2 JUL 1980 1026-EDT
From: GLS at MIT-AI (Guy L. Steele, Jr.)
Subject: Apparent process-lock bug
To: (BUG ZWEI) at MIT-AI
CC: GLS at MIT-AI

In the version of ZWEI on system 29.95 NWS, with microcode 669, on LISP Machine Eight:

If I do C-X C-F, and while it is waiting in the NET WAIT state I hit [ABORT],
then retry the C-X C-F, it claims that some lock is already locked by the process
(the contents of the lock is a window, and so is the new value).
Evidently the locking is not properly UNWIND-PROTECTed?


Date:  1 JUL 1980 2144-EDT
From: Zvona at MIT-AI (David Chapman)
To: (BUG ZWEI) at MIT-AI

In system 29.95 NWS, with microcode 669, on LISP Machine Twelve:
com-make-()-backwards positions point after the close rather than before the close as it
should. That it should can be seen from symmetry with com-make-() and from the way it
is used, namely to enlistify the symbol you are typeing when you forgot to do com-make-()
at the begining of the symbol.

Date:  1 JUL 1980 1150-EDT
From: GLS at MIT-AI (Guy L. Steele, Jr.)
Subject: Suggestions for C-Q (Various Quantities)
To: (BUG ZWEI) at MIT-AI
CC: GLS at MIT-AI

In the version of zwei on system 29.95 NWS, with microcode 669, on LISP Machine Eight:

Some suggestions for more operations and objects.  Objects:

(a) As suggested before, a way to treat a lower-case-to-uppercase transition
    as a word break, as in TEX and some PASCAL-like languages.
(b) Using a delimiter of the set of pairs [] "" `' <> {}  ||  means
    "an object delimited by that character and its mate".
(c) # means "a region delimted by a font change".

Operations:

(a) # = change font
(b) _ = underline
(c) Capitalize (unfortunately C now means copy -- how about Y for that, by analogy with C-Y?)
(d) Using a delimiter of the set of pairs [] "" `' <> {}  ||  $$ means
    "surround the object with that character and its mate", with default
    arg -1 probably.


Date: 30 June 1980 22:58-EDT
From: Mike McMahon <MMCM at MIT-AI>
To: BAK at MIT-AI
cc: BUG-ZWEI at MIT-AI, BUG-NWS at MIT-AI

    Date: 29 JUN 1980 0246-EDT
    From: BAK at MIT-AI (William A. Kornfeld)
    System 29.95.  When doing a meta-. from the editor I get the error message
    from within the function FILE-SPREAD-PATHNAME "<ART-16B-12 ...> not an
    acceptable pathname".  It does not always happen, but once it starts (I'm not 
    sure what the catalyst is) it continues doing this.  I'm using multi-font files
    at the time so this be causing it some confusion.  This bug was never noticed under
    the old window system.
I fixed the bug where things put into the kill ring from a file with fonts and unkillt
in the mini-buffer would cause this screwup.

Date: 29 June 1980 12:37-EDT
From: Mike McMahon <MMCM at MIT-AI>
To: BAK at MIT-AI
cc: BUG-ZWEI at MIT-AI, BUG-NWS at MIT-AI

    Date: 29 JUN 1980 0246-EDT
    From: BAK at MIT-AI (William A. Kornfeld)
    System 29.95.  When doing a meta-. from the editor I get the error message
    from within the function FILE-SPREAD-PATHNAME "<ART-16B-12 ...> not an
    acceptable pathname".  It does not always happen, but once it starts (I'm not 
    sure what the catalyst is) it continues doing this.  I'm using multi-font files
    at the time so this be causing it some confusion.  This bug was never noticed under
    the old window system.
Do you move text into the mini-buffer from the main window?

Date: 29 JUN 1980 0309-EDT
From: BAK at MIT-AI (William A. Kornfeld)
Subject: Correction to previous bug msg.
To: (BUG ZWEI) at MIT-AI, (BUG NWS) at MIT-AI

The error attributed to meta-. actually happened with ctrl-X ctrl-F.


Date: 29 JUN 1980 0246-EDT
From: BAK at MIT-AI (William A. Kornfeld)
To: (BUG ZWEI) at MIT-AI, (BUG NWS) at MIT-AI

System 29.95.  When doing a meta-. from the editor I get the error message
from within the function FILE-SPREAD-PATHNAME "<ART-16B-12 ...> not an
acceptable pathname".  It does not always happen, but once it starts (I'm not 
sure what the catalyst is) it continues doing this.  I'm using multi-font files
at the time so this be causing it some confusion.  This bug was never noticed under
the old window system.


Date: 28 JUN 1980 1714-EDT
From: Moon at MIT-AI (David A. Moon)
To: (BUG ZWEI) at MIT-AI

I started fixing this, but got too deep in lossage, so I'll mail it in instead.
If you tab off the end of the line in Mail mode, it gets an error with a
negative argument to make-array.  The bugs are as follows:

com-tab-to-tab-stop calls sheet-compute-motion instead of sheet-string-length,
thus when it wraps around in the tab-stop buffer it gets a small X-coordinate
which is not where it really wants to tab to.

indent-to given a bp to the end of a line with a lot of tabs in it and
a small place to indent to, instead of deciding it can't indent to there
tries to "grow" the line to a negative length.

com-tab-to-tab-stop doesn't try to do anything reasonable when the
length of the tab stop buffer is exceeded.  Emacs somehow manages to
keep putting in tabs in this case with the default tab stop buffer; I
don't know what it tries to do in general.

Date: 28 JUN 1980 1530-EDT
From: Moon at MIT-AI (David A. Moon)
To: (BUG ZWEI) at MIT-AI

Parenthesis error or whatever COM-COMPILE-DEFUN is barfing about should
not just beep, but should print an explanatory message.

Date: 28 JUN 1980 1526-EDT
From: Moon at MIT-AI (David A. Moon)
To: (BUG ZWEI) at MIT-AI

In the version of zwei on system 29.99 nws, with microcode 669, on LISP Machine Six:

In a freshly loaded world, if I first go into the editor via system E rather than
(ed), and use meta-. to read in a file and point at a function, then use esc S
to leave the editor, then later use (ed), something anomalous happens.  It comes up
in BUFFER-1 instead of the buffer I was in, and when I reselect that buffer its
point is at the beginning instead of where it was.  Furthermore when (ED) first
stabilizes it leaves the who-line saying RUN instead of TYI (but nothing is running).
Clicking the mouse on the BUFFER-1 window fixes the who-line.

This is probably all caused by the fact that system-E gives me ZMACS-WINDOW-4 but
(ed) gives me ZMACS-WINDOW-1.

Also in this world the prompt for the mail and quit commands in the Zwei mailing
stuff has been changed, but the commands themselves have not been changed.
(Hmm, actually control-] is not a defined key, control-G is still quit, but
both control- and End are terminating command.)

Date: 27 JUN 1980 1358-EDT
From: GLS at MIT-AI (Guy L. Steele, Jr.)
To: (BUG ZWEI) at MIT-AI
CC: GLS at MIT-AI

In the version of ZWEI on system 29.95 NWS, with microcode 669, on LISP Machine Eight:

I have taken the liberty of making the following changes:
(1) I altered  Where Am I  to print the X position not only
    as the number of characters from the left and the number of
    pixels, but also the number of columns.  In my application
    (making sure a piece of code will fit on a published page),
    this is the most useful figure.  I defined "columns" to be the
    measure used by the INDENT-TO function: the pixel position
    divided by the font-space-width.
(2) I created  Fast Where Am I  which prints the X, Y, and CHAR
    information but no line counts.  The counting of lines in
    a large file significantly slows down  Where Am I  and when
    I am trying to indent a piece of code I may type C-= five
    times in ten seconds---that is, I would if it didn't take
    more than two seconds to respond sometimes.  Also, I put
    Fast Where Am I  on Control-=, leaving  Where Am I  on
    Control-X =.

I recompiled the files COMC and COMTAB on directory NZWEI.


Date: 26 JUN 1980 2124-EDT
From: Zvona at MIT-AI (David Chapman)
To: (BUG ZWEI) at MIT-AI

In system 29.95 NWS, with microcode 663, on LISP Machine Three:
Although COM-FORWARD-SEXP-NO-UP is implemented, COM-BACKWARD-SEXP-NO-UP isn't. This
appears to be true in the latest version of COMA also.

Date: 25 JUN 1980 0014-EDT
From: Moon at MIT-AI (David A. Moon)
To: (BUG ZWEI) at MIT-AI

Moving the mouse around while reading in a file for meta-., with a buffer
switch also typed ahead (via COM-SELECT-PREVIOUS-BUFFER), can cause an
error in the mouse process inside COUNT-LINES from :SCROLL-POSITION;
NIL to ARRAY-LEADER.

Date: 24 JUN 1980 2233-EDT
From: Moon at MIT-AI (David A. Moon)
To: (BUG ZWEI) at MIT-AI

Shouldn't c-X = show the number of lines in the region, if there is a region?
This would be real useful for deciding what numeric argument to give to c-x )
for instance.

Date: 24 JUN 1980 0051-EDT
From: RMS at MIT-AI (Richard M. Stallman)
To: (BUG ZWEI) at MIT-AI

Whenever I spend a few hours editing on a Lisp machine, I run into a
few mysterious errors.  I don't define any new commands and I haven't
been hacking ZWEI, so I'm sure this must happen to everyone.  I don't
usually remember enough about what the ZWEI data structure is supposed
to look like to investigate, so I just ^Z them.  I developed this
habit for two reasons:

1) It usually works
2) I usually don't know enough to figure out anything else
3) The error usually is not related to the particular command
I had just typed.  Usually it is due to something else that went wrong
earlier.  Most of the errors are in redisplay.
4) The errors are often nonreproduceable (if it is reproduceable, I
have something to investigate).

Nevertheless, when you have a program with nonreproduceable bugs that
strike fairly often, you have to do your best to look for them.  It's
no use saying "I won't do anything until I get a report I like".  This
attitude just leads to bugs not getting fixed.  If the only way ZWEI
can be made reliable (and, in my opinion, it is not) is to spend a lot
of time looking over the code and to put in debugging checks, then do
it!

I sometimes complain to people when they leave out information from a
bug report if they have reproduceable problems, but that is because I
know the person can easily determine the information and send a better
report.  When the problem is not reproduceable it is purposeless to
complain.  You have the information you have.  The question is, do
you try find the bug or you decide to leave it in?

I also sometimes complain to people who fail to dump unreproduceable
crashes.  Sadly, there is no way to dump a crashed ZWEI, unless I feel
like clobbering one of the bands.  I wouldn't normally expect that
there would be a band that I could obviously clobber.  If there were a
crash analysis program that would check over all the ZWEI data
structures, you could ask people to run that.  Until then, you cannot
expect anything but sketchy bug reports and you ought to do your best
with them since you will never get anything better to work with.

Date: 23 June 1980 14:12-EDT
From: Mike McMahon <MMcM at MIT-AI>
Sender: MMcM at CADR6 at MIT-AI
To: RMS at MIT-AI
cc: BUG-ZWEI at MIT-AI, BUG-WORDAB at MIT-AI

    Date: 22 JUN 1980 2029-EDT
    From: RMS at MIT-AI (Richard M. Stallman)
    The command Word Abbrev Apropos has been flushed from EMACS
    in favor of something else, so that Word Ab is a good abbreviation for
    Word Abbrev Mode.  ZWEI ought to have the same extended commands that
    EMACS has.
Are you sure?  In the version of [WORD] > installed on AI, that macro
still exists by only that name.

Date: 23 JUN 1980 0421-EDT
From: RMS at MIT-AI (Richard M. Stallman)
To: (BUG ZWEI) at MIT-AI

In the version of zwei on system 29.95 NWS, with microcode 669, on LISP Machine Seven:

C-X C-P given with point right after a formfeed marks the previous page.
In EMACS it marks the following page in this case.


Date: 23 JUN 1980 0306-EDT
From: RMS at MIT-AI (Richard M. Stallman)
To: (BUG ZWEI) at MIT-AI

In the version of zwei on system 29.95 NWS, with microcode 669, on LISP Machine Seven:

If I switch buffers and type ahead a C-S and argument,
the old place in the buffer is displayed,
then the search command is echoed with the argument,
then the new place in the buffer is displayed.

I don't know whether it matters that the command is a C-S.


Date: 23 JUN 1980 0207-EDT
From: RMS at MIT-AI (Richard M. Stallman)
To: (BUG ZWEI) at MIT-AI

In the version of zwei on system 29.95 NWS, with microcode 669, on LISP Machine Seven:

If C-G is to be used as the way to abort C-X M, then it should first
check for a region and flush the region instead of aborting C-X M.


Date: 23 JUN 1980 0206-EDT
From: RMS at MIT-AI (Richard M. Stallman)
To: (BUG ZWEI) at MIT-AI

Suppose that the buffer contains exactly
"To: BUG-zwei
--Text follows this line--
In the version of zwei on system 29.95 NWS, with microcode 669, on LISP Machine Seven:

C-U C-Y seems to get the get the fourth thing on the kill ring, rather than getting the thing at the top of the kill ring leaving point before it (as it has done in EMACS for almost a year)."

and point is at the end (note no CRLF at the end).

Doing M-Q breaks the line starting "In the version ...", which is not
the paragraph that point is inside.  It also creates a CRLF at the end
of the buffer.  The NEXT M-Q breaks the line it is supposed to break.

The bug is in M-H.  When I did M-H with point at the end of the para
before this one, and no CRLF at the end of the line, it marked the first
two lines of the paragraph only.  It did not include the last line
of the paragraph in the region.


Date: 23 JUN 1980 0201-EDT
From: RMS at MIT-AI (Richard M. Stallman)
To: (BUG ZWEI) at MIT-AI

In the version of zwei on system 29.95 NWS, with microcode 669, on LISP
Machine Seven:

C-U C-Y seems to get the get the fourth thing on the kill ring, rather
than getting the thing at the top of the kill ring leaving point before
it (as it has done in EMACS for almost a year).

Date: 23 JUN 1980 0151-EDT
From: RMS at MIT-AI (Richard M. Stallman)
To: (BUG ZWEI) at MIT-AI

In the version of zwei on system 29.95 NWS, with microcode 669, on LISP Machine Seven:

I did C-X C-F DEFS and that was a non-ex file, so I did
C-X C-V FSDEF.  (default dir LMFILE).

Now, I can get back to that buffer with C-X C-F FSDEF,
but C-X B FSDEF thinks it doesn't exist.
C-X C-B mentions it just as I would expect, buffer named FSDEF > ...
containing the file ... FSDEF >, but C-X B ? does not mention it.

ADDENDUM:
after I found the buffer with C-X C-F FSDEF, the buffer appears
to be accessible normally with C-X B, and C-X B ? mentions it.


Date: 23 JUN 1980 0148-EDT
From: RMS at MIT-AI (Richard M. Stallman)
To: (BUG ZWEI) at MIT-AI

In the version of zwei on system 29.95 NWS, with microcode 669, on LISP Machine Seven:

I did C-X C-F DEFS and that was a non-ex file, so I did
C-X C-V FSDEF.  (default dir LMFILE).

Now, I can get back to that buffer with C-X C-F FSDEF,
but C-X B FSDEF thinks it doesn't exist.
C-X C-B mentions it just as I would expect, buffer named FSDEF > ...
containing the file ... FSDEF >, but C-X B ? does not mention it.


Date: 22 JUN 1980 2030-EDT
From: RMS at MIT-AI (Richard M. Stallman)
To: (BUG ZWEI) at MIT-AI

In the version of zwei on system 29.95 NWS, with microcode 669, on LISP Machine Seven:

With Word Abbrev mode on, inside M-X Bug, I typed END to exit.
It gave an error 224 was beyond the length, 220, in AP-1,
from EXPAND-P.


Date: 22 JUN 1980 2029-EDT
From: RMS at MIT-AI (Richard M. Stallman)
To: (BUG ZWEI) at MIT-AI

In the version of zwei on system 29.95 NWS, with microcode 669, on LISP Machine Seven:

The command Word Abbrev Apropos has been flushed from EMACS
in favor of something else, so that Word Ab is a good abbreviation for
Word Abbrev Mode.  ZWEI ought to have the same extended commands that
EMACS has.


Date: 22 JUN 1980 1959-EDT
From: ACW at MIT-AI (Allan C. Wechsler)
To: (BUG ZWEI) at MIT-AI

In the version of ZWEI on system 29.95 NWS, with microcode 669, on LISP Machine Twelve:
Major mode: text
Minor mode: auto fill
Context: typing text at end of line
Symptom: behaves as if fill prefix is a tab, although it isn't.
   Several "CTRL/X ."s failed to rectify the situation.
   ---Wechsler


MOON@MIT-MC 06/22/80 03:34:07
To: RMS at MIT-AI
CC: (BUG ZWEI) at MIT-MC
    Date: 22 JUN 1980 0259-EDT
    From: RMS at MIT-AI (Richard M. Stallman)
    To: (BUG ZWEI) at MIT-AI

    In system 29.95 NWS, with microcode 669, on LISP Machine Nine:

    When I use the M-X BUG command, the first thing I always want to do
    is change which mailing list I am sending it to.  It should
    leave the cursor after "BUG-".

Use c-U m-x Bug

Date: 22 JUN 1980 0303-EDT
From: RMS at MIT-AI (Richard M. Stallman)
To: (BUG ZWEI) at MIT-AI

In system 29.95 NWS, with microcode 669, on LISP Machine Nine:

I did a C-M-H on a function that was missing a closeparen.
It marked the PREVIOUS function!  That can't be right.
Before I saw that this had happened, I typed a C-M-W C-W.
This got an error of some sort.
what was already in the kill ring must have been damaged,
because when I C-Y'd that I got another such error.
After I ^Z'd that,
part of my buffer that had been near where I was yanking
seemed to be duplicated!  I was afraid it was circular.
It wasn't, but it was screwed up.  The editor kept
getting errors in redisplay and I couldn't use SAVE-ALL-FILES.


Date: 22 JUN 1980 0259-EDT
From: RMS at MIT-AI (Richard M. Stallman)
To: (BUG ZWEI) at MIT-AI

In system 29.95 NWS, with microcode 669, on LISP Machine Nine:

When I use the M-X BUG command, the first thing I always want to do
is change which mailing list I am sending it to.  It should
leave the cursor after "BUG-".


Date: 21 June 1980 21:24-EDT
From: Mike McMahon <MMCM at MIT-AI>
To: RMS at MIT-AI
cc: BUG-ZWEI at MIT-AI, HIC at MIT-AI

    Date: 21 JUN 1980 2120-EDT
    From: RMS at MIT-AI (Richard M. Stallman)
    I did C-X Altmode to restart a Query Replace.
    It asked me once again for the string to replace.
    This is a bug to begin with, in my opinion; it should
    simply repeat it.  However, I had a vague recollection
    that there was a convenient way to tell it to use the
    same arguments, so I tried to find it.

    It occurred to me that Help might tell me, but Help got an error, that
    NIL had no documentation.
Of course C-X Alt gives you the same string as before, or else it
would be almost useless; it is only a bug in that system which is
already fixed.  The problem with help is exactly the same bug.

Date: 21 JUN 1980 2120-EDT
From: RMS at MIT-AI (Richard M. Stallman)
To: (BUG ZWEI) at MIT-AI

In system 29.95 NWS, with microcode 669, on LISP Machine Nine:

I did C-X Altmode to restart a Query Replace.
It asked me once again for the string to replace.
This is a bug to begin with, in my opinion; it should
simply repeat it.  However, I had a vague recollection
that there was a convenient way to tell it to use the
same arguments, so I tried to find it.

Nothing that was obvious (to me) did it.  If this feature does exist,
the mode line ought to say how to do it.  I tried a few things, none of
which did the trick.

It occurred to me that Help might tell me, but Help got an error, that
NIL had no documentation.

Changing the subject, the way to abort C-X M ought to be C-], not C-G.
And there is still no star in the mode line for a modified buffer.


Date: 21 JUN 1980 2111-EDT
From: RMS at MIT-AI (Richard M. Stallman)
To: (BUG ZWEI) at MIT-AI

In system 29.95 NWS, with microcode 669, on LISP Machine Nine:

The question "Package ... does not exist.  Create?" in C-X C-F,
if answered Y, inhibits redisplay after the file is read in,
until a space is typed.


Date: 20 JUN 1980 1625-EDT
From: GLS at MIT-AI (Guy L. Steele, Jr.)
To: (BUG ZWEI) at MIT-AI
CC: GLS at MIT-AI

In the version of ZWEI on system 29.95 NWS, with microcode 669, on LISP Machine One:

It would be useful to have a (single-key!) command that would
take the S-expression after ., kill it, evaluate it, and put
its value back into the buffer where the s-exp was.

This can be done by killing it, running Evaluate Into Buffer, un-killing,
Return, but that takes more keystrokes, and also is slower when iterated
by a keyboard macro, because it insists on printing prompts in the echo area.

One thing this lets you do easily is clever keyboard macros that for
example find certain numbers in the buffer and increment them, etc.


Date: 19 JUN 1980 2029-EDT
From: Moon at MIT-AI (David A. Moon)
To: (BUG ZWEI) at MIT-AI

In the version of zwei on system 29.95 NWS, with microcode 669, on LISP Machine Seven:

Reverting a buffer with no -*- line, when the file has been changed on disk
to have a -*- Mode:Text -*- in it, puts "LISPText" as the major mode in the
mode line at the bottom of the screen.

Date: 18 JUN 1980 0142-EDT
From: ACW at MIT-AI (Allan C. Wechsler)
Subject:  In 29.95, ucode 669 NWS, nota specificitam meam...
To: (BUG ZWEI) at MIT-AI

 depended on by FED-WINDOW, FED, FED-LAYOUT-WINDOW,
CHAR-BOX-GRID-WINDOW, PLANE-GRID-WINDOW, NOOP-LISTEN, GRID-WINDOW,
ERROR-HANDLER-FRAME, STACK-SCROLL-WINDOW,
GRAY-ERROR-HANDLER-TEXT-SCROLL-WINDOW, ERROR-HANDLER-TEXT-SCROLL-WINDOW, ERROR-HANDLER-LISP-LISTENER, EDITOR-TOP-LEVEL, EDITOR-STREAM-WINDOW, EDITOR-STREAM,
ALWAYS-INCLUDE-MINI-BUFFER, ECHO-AREA-WINDOW, FIXED-HEIGHT-WINDOW,
DEEXPOSED-TEMPORARY-WINDOW, ZWEI-WITH-TYPEOUT-UNSELECTABLE,
ZMACS-WINDOW, ZWEI-WINDOW, ZWEI-WITH-TYPEOUT, ZWEI,
EDITOR-TYPEOUT-WINDOW, ZWEI-STREAM, MAIL-TOP-LEVEL-EDITOR,
ZMACS-TOP-LEVEL-EDITOR, ZMACS-EDITOR, TOP-LEVEL-EDITOR, EDITOR,
TELNET-WINDOW, TELNET, SUPDUP-WINDOW, SUPDUP, NVT, BUFFERED-OUTPUT,
BORDERED-CONSTRAINT-FRAME, CONSTRAINT-FRAME, BASIC-CONSTRAINT-FRAME,
PROPORTIONAL-FRAME, BASIC-FRAME, COMMAND-MENU-PANE, LISP-LISTENER-PANE,
PANE, PEEK, PEEK-WINDOW, LINE-AREA-MOUSE-SENSITIVE-TEXT-SCROLL-WINDOW, LINE-AREA-TEXT-SCROLL-WINDOW, MARGIN-SCROLL, MARGIN-REGION, TEXT-SCROLL-WINDOW-EMPTY-GRAY-HACK, MOUSE-SENSITIVE-TEXT-SCROLL-WINDOW, FUNCTION-TEXT-SCROLL-WINDOW, TEXT-SCROLL-WINDOW,
SCROLL-MOUSE, BASIC-SCROLL-MOUSE, SCROLL-WINDOW-WITH-TYPEOUT,
SCROLL-WINDOW, BASIC-SCROLL-WINDOW, DISPLAY-LAYOUT-WINDOW,
BASIC-TYPEOUT-WINDOW, ITEM-TYPEOUT-WINDOW, KLUDGE-INFERIOR,
TYPEOUT-WINDOW, WINDOW-WITH-TYPEOUT, TYPEOUT-ITEM-TEST-WINDOW,
TYPEOUT-ITEM-WINDOW, MOMENTARY-WINDOW-HACKING-MENU, MOMENTARY-MENU,
WINDOW-HACKING-MENU, TEMPORARY-MENU, COMMAND-MENU, MENU-EXECUTE,
POP-UP-MENU, BASIC-MENU, MENU, FLASHY-SCROLLING, BASIC-SCROLL-BAR,
HYSTERETIC-WINDOW, KBD-MOUSE-BUTTONS, BASIC-MOUSE,
POP-UP-NOTIFICATION-WINDOW, POP-UP-NOTIFICATION, BASIC-NOTIFICATION,
POP-UP-TEXT-WINDOW, AUTOMATICALLY-CREATED-LISP-LISTENER,
AUTOMATICALLY-CREATED-WINDOW, LISP-LISTENER, BASIC-LISTENER,
BASIC-PROCESS, FULL-SCREEN-HACK, TEMPORARY-WINDOW, BASIC-STREAM,
TOP-BOX-LABEL, TOP-LABEL, DELAYED-REDISPLAY-LABEL, BASIC-LABEL, BASIC-WINDOW-WITH-ESSENTIAL-LABEL, ESSENTIAL-LABEL, BASIC-BORDERS, MARGIN-HACKER, BASIC-SET-EDGES,
DONT-SELECT-WITH-MOUSE, BASIC-SELECT, BASIC-ACTIVATE, BASIC-EXPOSE,
BASIC-WINDOW, ESSENTIAL-WINDOW, WINDOW, GRAY-DEEXPOSED-RIGHT,
GRAY-DEEXPOSED-WRONG, SCREEN, SHEET

META/Q non muta.

 --- Wechsler


Date: 16 June 1980 19:07-EDT
From: Mike McMahon <MMcM at MIT-AI>
Sender: MMcM at CADR6 at MIT-AI
Subject: ztop
To: HENRY at MIT-AI
cc: BUG-ZWEI at MIT-AI, BUG-NWS at MIT-AI

Obviously you view this according to a less conventional model.  ZTOP
mode is a read-eval-print loop implemented as a major mode, whereby it
reads input and prints to a buffer that receives typein in the normal
fashion.
It shouldn't be too hard to implement commands to simulate the other
features of your old thing; such as printing an evaluation value into
this buffer.  I don't understand what is useful about printing the
result of a compilation, unless what you really mean is that you want
the Compiler Warnings buffer to be in ZTOP mode, which is quite easy.

Date: 16 JUN 1980 1739-EDT
From: Henry at MIT-AI (Henry Lieberman)
To: (BUG ZWEI) at MIT-AI

In the version of zwei on system 27.93 NWS, with microcode 669, on LISP Machine Twelve:

I've been playing around with the new Ztop mode. It seems to be getting there.
A few problems and suggestions:

Marking a region from elsewhere in the buffer and evaluating it doesn't work; often it
displays the first value twice if there's more than one form. 
The evaluation character isn't defined in a buffer which isn't in ztop mode. I'd recommend
having it evaluate the form back into the ztop buffer, which makes it good for using
multiple windows, one with code, one with top level interaction.
I tried the ZTOP-EVALUATION-PRIN1 feature, which was supposed to make it act
like my ztop. To do this, it should comment out all output, including stuff printed
and interaction with the error handler, as well as the value returned. Also it would
be nice to have a switch *ZTOP-EVALUATION-TERPRI-P controlling whether a new
line appears between successive form-value pairs. Another feature is having
a alternative character that does compiles instead of evaluations. 
Take a look at my implementation for code which implements all this stuff, 
and other features, which you should be able to steal relatively straightforwardly.
I will volunteer some hacking labor to fix it up if you like. 


Date: 15 JUN 1980 0024-EDT
From: Moon at MIT-AI (David A. Moon)
To: (BUG ZWEI) at MIT-AI

In the version of zwei on system 27.92 nws, with microcode 667, on LISP Machine Six:

Multiple Query Replace doesn't work.  It reads input, runs for a while, then returns
with the cursor positioned at the last place it might have replaced.  But it never
interacts with the user and never changes anything!

Also, type m-x Multiple Query Replace then type help.  No documentation on Multiple
Query Replace.  Hit return and type Help again; results are even more useless.

Date: 11 JUN 1980 1624-EDT
From: TK at MIT-AI (Tom Knight)
To: (BUG ZWEI) at MIT-AI

In system 27.92 nws, with microcode 667, on LISP Machine One:

When you type meta-X ?, which produces a long list
of commands, it gives you **MORE** processing,
but the blinker after the **MORE** does not
blink, whereas the blinker in the minibuffer
does blink.  This is confusing.  (Pardon the
margin but I am demoing windows and am typing this
from a narrow one!)


Date: 11 JUN 1980 0442-EDT
From: RMS at MIT-AI (Richard M. Stallman)
To: (BUG ZWEI) at MIT-AI

In system 27.7, with microcode 666, on LISP Machine Four:

Type Break in ZWEI and then type Form.
ZWEI does not realize that its window has been
entirely cleared.  This is OWS.


Date: 10 JUN 1980 0721-EDT
From: ACW at MIT-AI (Allan C. Wechsler)
Subject:  In 27.91 nws...
To: (BUG ZWEI) at MIT-AI


Occasionally when in auto-fill mode, you get to the end of a line and
type a space, and the space is merely gobbled.  The line remains as it
was.  This happens when you are exactly at the fill column.
   ---Wechsler


Date:  9 JUN 1980 1432-EDT
From: GLS at MIT-AI (Guy L. Steele, Jr.)
To: (BUG ZWEI) at MIT-AI
CC: GLS at MIT-AI, (BUG EMACS) at MIT-AI

In the version of ZWEI on system 27.84 nws, with microcode 667, on LISP Machine Two:

If nothing better is thought of for Control-Linefeed, I suggest that in LISP Mode
it mean <arg>C-M-B Linefeed <arg>C-M-F, except that it also moves forward
over any spaces which originally preceded the cursor.  Put another way,
it is as if you had typed Linefeed n S-expressions ago.  This is good if you are
typing away, discover the line won't fit, and decide to correct it.
In text mode n could refer to words instead of sexps.


Date:  9 JUN 1980 0355-EDT
From: Moon at MIT-AI (David A. Moon)
To: (BUG ZWEI) at MIT-AI

In the version of zwei on system 27.91 nws, with microcode 667, on LISP Machine Six:

Many bugs in c-m-&:

If we have the following text:
	       (COND (LINE-TO-REDISPLAY
		      (FUNCALL-SELF ':CLEAR-EOL)))

Doing c-m-& with the cursor after the COND tries to make it an AND but forgets
to put in the AND.  Doing c-m-& with the cursor at the beginning of the second
line does the right thing, but doing c-m-& where that leaves the cursor changes
it back to a COND but leaves the parentheses unbalanced.  Doing c-m-& again
at that point runs for a while then gets an error.

Date:  9 JUN 1980 0223-EDT
From: Moon at MIT-AI (David A. Moon)
To: (BUG ZWEI) at MIT-AI

In the version of zwei on system 27.91 nws, with microcode 667, on LISP Machine Six:

c-X Altmode seems to have been vandalized.  E.g. m-x List Fonts followed by c-X Altmode
comes up with an "extended command:" prompt and a minibuffer with nothing in it.

Date:  7 JUN 1980 1925-EDT
From: GLS at MIT-AI (Guy L. Steele, Jr.)
To: (BUG ZWEI) at MIT-AI
CC: GLS at MIT-AI

In the version of ZWEI on system 27.84 nws, with microcode 667, on LISP Machine Two:

Various Quantities  should have a way under its M command (change mode)
to specify that you want to change Meta-F, Meta-B, etc. or C-M-F, C-M-B, etc.
rather than the Control versions.  Suggestion: C-U prefix means alter Meta,
and C-U C-U prefix means Control-Meta.  Also, a zero argument to ^Q M could
read no second letter and reset all three of C-, M-, and C-M- versions to
the default (character, word, sexp).


Date:  7 JUN 1980 1916-EDT
From: GLS at MIT-AI (Guy L. Steele, Jr.)
To: (BUG ZWEI) at MIT-AI
CC: GLS at MIT-AI

In the version of ZWEI on system 27.84 nws, with microcode 667, on LISP Machine Two:

It would be helpful if somewhere (perhaps as a case of Various Quantities)
ZWEI knew about the kind of object I shall call a Cap-word: a word
which is separated by either the usual word breaks *or* by a transition
from lower to upper case (but not vice versa).  Thus the string
"GrossRidiculousTexMacroName" is one word, but five Cap-words.
Some programming languages conventionally spell variable names this
way, particularly TEX (which allows only letters in macro names
of more than one character).  It would be useful to have a way
of getting around within such names.


Date: Saturday, 7 June 1980  13:50-EDT
From: Earl Killian <EKILLIAN at BBN-TENEXA>
To: BUG-ZWEI at MIT-AI
Subject: Editor-people

Are any of you on the Editor-people mailing list?  If so, you
might want to reply to a recent series of messages by telling
them about the services ZWEI provides.

Date: 31 MAY 1980 1111-EDT
From: GLS at MIT-AI (Guy L. Steele, Jr.)
To: (BUG ZWEI) at MIT-AI
CC: GLS at MIT-AI

In the version of ZWEI on system 27.84 nws, with microcode 667, on LISP Machine Two:
Two bugs in Control-Q (Various Quantities):
(1) Control-Q M  complains that a certain variable is unbound (name is
something like *QUANTITY-MODE-SAVE*).
(2) Control-Q ?  prints its documentation in the type-in area, but it is
immediately obliterated.


Date: 30 MAY 1980 0025-EDT
From: Moon at MIT-AI (David A. Moon)
To: (BUG ZWEI) at MIT-AI, (BUG EMACS) at MIT-AI

In the version of zwei on system 27.87 nws, with microcode 667, on LISP Machine Six:

Why is the same function called m-x Read Tag Table in Zmacs and m-x Visit Tag Table
in Emacs?  Actually I like the first name better but I'm used to the second name.

Date: 29 MAY 1980 2350-EDT
From: Moon at MIT-AI (David A. Moon)
To: (BUG ZWEI) at MIT-AI

In the version of zwei on system 27.87 nws, with microcode 667, on LISP Machine Six:

Still has the bug that typing into the middle of LISPM2;GLOBAL when in electric
shift lock mode is extremely slow, and not just for the first character typed either.

Date: 29 MAY 1980 2223-EDT
From: Moon at MIT-AI (David A. Moon)
To: (BUG ZWEI) at MIT-AI

In the version of zwei on system 27.87 nws, with microcode 667, on LISP Machine Six:

If I switch back and forth between an editor and a full-screen supdup
with esc S, while the editor is saving all its files,  it goes into an
output hold that is difficult to unhang, because selecting the editor
doesn't expose the typein-line window which the save-files guy is
wanting to type out on, and this window can't be selected via the system menu.


Date: 29 MAY 1980 0247-EDT
From: Moon at MIT-AI (David A. Moon)
To: (BUG ZWEI) at MIT-AI

In the version of zwei on system 27.87 nws, with microcode 667, on LISP Machine Six:

I'm not sure just what's broken, but doing c-E in the error handler goes into
the editor and fucks up the display.  I believe what's happening is that the
display starts out blank, but it thinks it has whatever it had before, and
blts it around and thinks that it has made a valid display.  hitting form 
fixes it.

Date: 23 MAY 1980 0215-EDT
From: RMS at MIT-AI (Richard M. Stallman)
To: (BUG ZWEI) at MIT-AI

In system 27.7, with microcode 666, on LISP Machine Four:

With QCP1 loaded into the editor, M-. QC-TRANSL Alt
beeps.  No matter how many more characters of the name
QC-TRANSLATE-FUNCTION I type in, Alt still beeps.


Date: 23 May 1980 01:31-EDT
From: Mike McMahon <MMCM at MIT-AI>
To: MOON at MIT-AI
cc: BUG-ZWEI at MIT-AI, BUG-NWS at MIT-AI

    Moon@MIT-AI 04/29/80 15:38:17 Re: Blown-out idea
    The save-kill-unmod menu you added to the editor recently should have a 4th column,
    window.  Initially all buffers in exposed windows should be marked, but you can mark
    others.  This can be used to select buffers and to set up 2-window displays.
    I'm not sure whether it is best to have 2 columns, for 2-window mode only, to
    have one column which allows multiple marks in it, to have a way of adding more
    columns by pushing at the right edge with the mouse, or what.  But anyway there
    should be a quick way to set up multiple buffers in multiple windows through this
    kind of pointing mechanism.
I have implemented a cross between split screen via menus and c-x 4, which seems to
be closer to the right thing, as well as more general.

Date: 22 May 1980 14:59-EDT
From: Mike McMahon <MMCM at MIT-AI>
Subject:  Control-Meta-, and Control-,
To: HENRY at MIT-AI
cc: GLS at MIT-AI, BUG-ZWEI at MIT-AI

In my environment, i assign GLS' buffer commands to C-X C-H and C-X C-M-H, which i find
quite satisfactory even though two keystrokes.  (I put something else on C-, and C-M-,.)
I put the ZTOP activation command on C-CR.
I therefore do not care about what the default is, so perhaps someone else can come up
with a nice complete scheme.

Date: 22 MAY 1980 1242-EDT
From: GLS at MIT-AI (Guy L. Steele, Jr.)
To: (BUG ZWEI) at MIT-AI
CC: GLS at MIT-AI

In the version of ZWEI on system 27.84 nws, with microcode 667, on LISP Machine Six:

Well, maybe the C-, etc. commands should be reserved for "comma-arguments"
in the possible future or whatever.  However, some single keys ought to
be standard for the select-previous-buffer commands.

	
Also, C-X C-B should arrange to list the buffers in the order shown
in the buffer history list.  If there is some reason that they must
be printed in another order, then a zero argument to com-select-previous-buffer
should print the history list.


Date: 22 MAY 1980 1236-EDT
From: GLS at MIT-AI (Guy L. Steele, Jr.)
To: (BUG ZWEI) at MIT-AI

In the version of ZWEI on system 27.84 nws, with microcode 667, on LISP Machine Six:

M-~ should probably warn you in the prompt area that it has taken
a rather weird action.  (Presently it is silent.)

I would like to suggest C-, and C-M-, for COM-SELECT-PREVIOUS-BUFFER
and COM-SELECT-DEFAULT-PREVIOUS-BUFFER.  They are super winners!



Date: 21 May 1980 13:04-EDT
From: Mike McMahon <MMCM at MIT-AI>
To: RMS at MIT-AI
cc: BUG-ZWEI at MIT-AI

    Date: 21 MAY 1980 0201-EDT
    From: RMS at MIT-AI (Richard M. Stallman)
    On the machine in 921, neither C-T-E nor C-T-C causes a DEFVAR
    variable to be reset if it is already bound,
    regardless of whether there is an argument or not.
    In both cases there was no region.  The DEFVAR was the
    containing defun.
I don't know what version of the system is running on the machine in 921, i
don't even know what the number of the machine in 921 is.  An argument to
C-T-C means micro-compile i believe.

Date: 21 MAY 1980 0201-EDT
From: RMS at MIT-AI (Richard M. Stallman)
To: (BUG ZWEI) at MIT-AI

On the machine in 921, neither C-T-E nor C-T-C causes a DEFVAR
variable to be reset if it is already bound,
regardless of whether there is an argument or not.
In both cases there was no region.  The DEFVAR was the
containing defun.


Date: 21 MAY 1980 0137-EDT
From: RMS at MIT-AI (Richard M. Stallman)
To: (BUG ZWEI) at MIT-AI

When visiting a file, answering no to the "Package FOO does not exist, create? "
question enters the error handler.  After ^Z'ing out of that, things are screwed up.
The buffer is empty but ZWEI thinks the file is there.
C-X C-V of that file gets "... is already being edited in another buffer".


Date: 20 May 1980 20:47-EDT
From: Mike McMahon <MMCM at MIT-AI>
Subject:  Featurama Zwei
To: MOON at MIT-AI
cc: BUG-ZWEI at MIT-AI

    Date:  3 MAY 1980 1713-EDT
    From: Moon at MIT-AI (David A. Moon)
    There should be a ?-like character you can type at a completing reader
    which causes it to do Apropos of what has been typed so far, rather than
    just doing completions of it.
C-/.

Date: 20 May 1980 15:44-EDT
From: Mike McMahon <MMCM at MIT-AI>
To: AGRE at MIT-AI
cc: BUG-ZWEI at MIT-AI

    Date: 20 MAY 1980 0118-EDT
    From: Agre at MIT-AI (Philip E. Agre)
    In Zwei, despite the fact that C-) claims to be undefined, it acts like C-9.
I find this very difficult to believe, could you please describe exactly what
happened to you?

Date: 20 May 1980 00:58-EDT
From: Mike McMahon <MMCM at MIT-AI>
To: HENRY at MIT-AI
cc: BUG-ZWEI at MIT-AI

    Date: 20 MAY 1980 0019-EDT
    From: Henry at MIT-AI (Henry Lieberman)
    In Control-x A (Append to Buffer), if you append to a buffer which is on another
    window on the screen, it would be nice if the window were redisplayed to 
    show the insertion. I like to use this command to collect pieces of text from
    various places into one place, and it would be nice to see it as it happens.
I believe that is the behaviour exhibited in the new window system.

Date: 20 MAY 1980 0019-EDT
From: Henry at MIT-AI (Henry Lieberman)
To: (BUG ZWEI) at MIT-AI

In the version of zwei on system 27.7, with microcode 663, on LISP Machine One:

In Control-x A (Append to Buffer), if you append to a buffer which is on another
window on the screen, it would be nice if the window were redisplayed to 
show the insertion. I like to use this command to collect pieces of text from
various places into one place, and it would be nice to see it as it happens.


Date: 19 MAY 1980 2258-EDT
From: Moon at MIT-AI (David A. Moon)
Subject: METHOD-ARGLIST
To: (BUG ZWEI) at MIT-AI

I fixed some bugs in this, however there are still several bugs in METHOD-ARGLIST-MERGE,
including clobbering permanent data structure, generating absurd arglists like (&OPTIONAL),
and a bug due to the fact that it has two variables called OLD and gets them confused.
I spent a long time trying to rewrite that function but finally decided to punt for now,
finding myself unable to code it tastefully.

Date: 19 May 1980 16:52-EDT
From: Mike McMahon <MMCM at MIT-AI>
Subject:  editor echo area
To: TK at MIT-AI
cc: BUG-ZWEI at MIT-AI

    TK@MIT-AI 05/18/80 19:53:20 Re: editor echo area
    It didn't move when I tried it.
When you tried what?
    While we are on the subject, I think it is extremely bad human engineering for the
    echoing of random typeout to sometimes occur on the top, and sometimes on the
    bottom of the screen.
How about concrete suggestions on how you think it should work?

Date: 19 MAY 1980 1641-EDT
From: GLS at MIT-AI (Guy L. Steele, Jr.)
To: (BUG ZWEI) at MIT-AI
CC: GLS at MIT-AI

In the version of ZWEI on system 27.82 nws, with microcode 666, on LISP Machine Six:

(a) I would much repfer to have the "bump-a-line" mouse-sensitive region
of the top and bottom borders be at the center of the borders rather
than at the right.  The problem is that when I scoot the mouse down to the
lower right-hand corner to get rid of it for a while, the buffer gets bumped.
I know it won't if I move it fast, but when moving it down to that corner I
obviously decelerate when I near the corner and...

(b) I would like Evaluate Into Buffer (or some version of it) to rebind
STANDARD-OUTPUT or whatever so that anything printed by the evaluation
also goes into the buffer (maybe ^U arg should do this, or turn it off,
or something?)


Date: 19 May 1980 14:31-EDT
From: Mike McMahon <MMCM at MIT-AI>
Subject:  A suggestion for ZWEI
To: JIS at MIT-AI
cc: BUG-ZWEI at MIT-AI

    Date: 18 MAY 1980 2200-EDT
    From: Jis at MIT-AI (Jeffrey I. Schiller)
    (ZWEI:SAVE-ALL-FILES) is a win. I suggest that another function also be
    defined, one that doesn't attempt any interaction with the window system
    and can be used from the cold load stream, with minimum console
    interaction.
SAVE-ALL-FILES only sends messages to streams.  So, if called from the
cold load stream, it only requires that the file system still work,
which is no better than your suggestion.

Date: 18 MAY 1980 2340-EDT
From: Moon at MIT-AI (David A. Moon)
To: (BUG ZWEI) at MIT-AI

In the version of ZWEI on system 27.82 nws, with microcode 666, on LISP Machine Six:

Using the mouse to point at a pline of a continuation line after the first does not
work; it always gets the first pline

Date: 16 May 1980 13:14-EDT
From: Mike McMahon <MMCM at MIT-AI>
To: RMS at MIT-AI
cc: BUG-ZWEI at MIT-AI

    Date: 16 MAY 1980 0036-EDT
    From: RMS at MIT-AI (Richard M. Stallman)
    I cold booted, then did (ed) M-X List Files Return AI:LMIO; Return.
    It asked for my login name and I said RMS.
    Then the chaos background process got an error
    "attempt to receive a packat from a connection which said:LOS,
    connection not known at this end" or something similar.
This is the old timing problem in login that has not been found and has nothing
specific to do with the editor.

Date: 16 MAY 1980 0419-EDT
From: DLW at MIT-AI (Daniel L. Weinreb)
To: (BUG EMACS) at MIT-AI
CC: (BUG ZWEI) at MIT-AI

If anybody is feeling ambitious, I think the following two ideas would
make DIRED a much more useful tool.

(1) Make it very easy to request alternative directory listings from
the DIR device, such as CDATE DOWN in particular.  I know there is some random
variable now that you can set, but that is a lousy user interface and I can
never remember the name of the variable.

(2) Have some way to operate in two window mode, in which the E command (Examine)
reads the file into a buffer being displayed in the lower window, or elsejust
have it type out the first screensize/2 lines in the bottom window.  It
is very annoying now that it takes so long, after you have sen the file and
been remineded what the file is, to get back to the display of
the directory.

I think the benefit per cost of these features would be relatively
high.

Date: 16 MAY 1980 0054-EDT
From: RMS at MIT-AI (Richard M. Stallman)
To: (BUG ZWEI) at MIT-AI

If I visit with C-X C-F a nonexistent file, then immediately ask to kill the buffer,
ZWEI thinks it has been modified and offers to save it.

Then it is incompatible with EMACS in that it does not accept "n" for an answer,
and in addition does not give any indication in the question that this is so.


Date: 16 MAY 1980 0038-EDT
From: RMS at MIT-AI (Richard M. Stallman)
To: (BUG ZWEI) at MIT-AI

List Files gave me defaults NIL: NIL; and I said just LMIO;.
It got an error because of device NIL:.
I did List Files again and the defaults were again NIL: NIL;.
The LMIO; I had already specified was forgotten.


Date: 16 MAY 1980 0037-EDT
From: RMS at MIT-AI (Richard M. Stallman)
To: (BUG ZWEI) at MIT-AI

I did List Files having already logged in
and the defaults it offered me were NIL: NIL;


Date: 16 MAY 1980 0036-EDT
From: RMS at MIT-AI (Richard M. Stallman)
To: (BUG ZWEI) at MIT-AI

I cold booted, then did (ed) M-X List Files Return AI:LMIO; Return.
It asked for my login name and I said RMS.
Then the chaos background process got an error
"attempt to receive a packat from a connection which said:LOS,
connection not known at this end" or something similar.


Date: 15 May 1980 00:14-EDT
From: Mike McMahon <MMCM at MIT-AI>
To: JERRYB at MIT-AI
cc: BUG-ZWEI at MIT-AI

    Date: 14 MAY 1980 2346-EDT
    From: jerryb at MIT-AI (Gerald R. Barber)
    In Zwei, with a form like:

    TV:(defmethod ... )

    ctl-meta A and ctl-top-C etc, don't find the right thing.
defun's are only recognized by lines that begin with an (.  you should do
tv:
(defmethod ...)
c-t-c is smart enough to include the package prefix when it compiles that.

You should send bug reports in the editor to bug-zwei (give an argument to the m-x bug
command).  Likewise, reports about new window system should go to bug-nws.  bug-lispm
is much too bloated these days.

Date: 14 MAY 1980 2008-EDT
From: Moon at MIT-AI (David A. Moon)
To: (BUG ZWEI) at MIT-AI

In the version of zwei on system 27.77 NWS, with microcode 663, on LISP Machine Eight:

m-x Q sp R sp L sp K does not complete to Query Replace Last Kill;
m-x Q sp R sp sp L sp K does.  This is the same bug as in my earlier
message essentially.

Doing Query Replace Last Kill drags the region underlining around obnoxiously;
it should get rid of the region before starting q-r execution.

Date: 14 MAY 1980 1653-EDT
From: Moon at MIT-AI (David A. Moon)
To: (BUG ZWEI) at MIT-AI

In the version of zwei on system 27.77 NWS, with microcode 663, on LISP Machine Eight:


When space in the completing reader feeps, it would be better if it still inserted
a space in the buffer.  When one types ahead "fio bar" when it should have been
"foo bar", then if the space still inserted a space one could go back and fix the
typo and then win without further ado.

Date: 14 MAY 1980 1515-EDT
From: Moon at MIT-AI (David A. Moon)
To: (BUG ZWEI) at MIT-AI

In the version of zwei on system 27.77 NWS, with microcode 663, on LISP Machine Eight:

If you are on the line after this one:
  (PUSH (LIST TYPE ITEM (+ LEFT (SHEET-INSIDE-LEFT)) (+ TOP (SHEET-INSIDE-TOP))
and hit tab followed by 5 control-tabs (COM-INDENT-DIFFERENTLY), it doesn't
indent to where I would like and expect.  It puts it under the + sign rather
than under the ( before the +.

Date: 14 MAY 1980 1507-EDT
From: Moon at MIT-AI (David A. Moon)
To: (BUG ZWEI) at MIT-AI

In the version of zwei on system 27.77 NWS, with microcode 663, on LISP Machine Eight:


m-x Update Mode Line discards any properties in the -*- line which I put in myself
and it doesn't know about.  What it should do is edit the values of the properties
it knows about, adding any that aren't there already, but leaving the general
structure and order of the mode line alone.

Date: 14 MAY 1980 1446-EDT
From: Moon at MIT-AI (David A. Moon)
To: (BUG ZWEI) at MIT-AI

In the version of zwei on system 27.77 NWS, with microcode 663, on LISP Machine Eight:

The hair in query replace that decides whether to insert text in all upper case,
capitalized, or all lower case, does not work in the case of a single letter
followed by a hyphen.  Query replace n-foos => number-bars changes N-FOOS to Number-bars

Date: 14 MAY 1980 1439-EDT
From: Moon at MIT-AI (David A. Moon)
To: (BUG ZWEI) at MIT-AI

In the version of zwei on system 27.77 NWS, with microcode 663, on LISP Machine Eight:

MACRO HELP and MACRO ? beep at me.  I'm trying to find the way to accept keyboard
input in the middle of a keyboard macro.

Date:  6 MAY 1980 2329-EDT
From: DLW at MIT-AI (Daniel L. Weinreb)
To: MOON at MIT-AI
CC: (BUG ZWEI) at MIT-AI

    Date:  6 MAY 1980 2322-EDT
    From: Moon at MIT-AI (David A. Moon)

    In the version of zwei on system 27.77 NWS, with microcode 661, on LISP Machine Eight:

    c-minus c-Y does not do the obvious thing, but instead gets an error with NTH
    of a negative number.

Just out of curiosity, what is the obvious thing?  I don't
think Emacs does it, whatever it is.

Date:  6 MAY 1980 2322-EDT
From: Moon at MIT-AI (David A. Moon)
To: (BUG ZWEI) at MIT-AI

In the version of zwei on system 27.77 NWS, with microcode 661, on LISP Machine Eight:

c-minus c-Y does not do the obvious thing, but instead gets an error with NTH
of a negative number.

Date:  4 MAY 1980 1403-EDT
From: CWH at MIT-AI (Carl W. Hoffman)
To: (BUG ZWEI) at MIT-AI

Redisplay should be suppressed during execution of a keyboard macro,
i.e. a single redispay should happen after the macro has finished
execution.

When an "error" occurs during the execution of a keyboard macro (such as
not finding a search string), execution of the macro should halt immediately.


Date:  3 MAY 1980 1713-EDT
From: Moon at MIT-AI (David A. Moon)
Subject: Featurama Zwei
To: (BUG ZWEI) at MIT-AI

m-x Apropos should be quittable by hitting a key.
There should be a ?-like character you can type at a completing reader
which causes it to do Apropos of what has been typed so far, rather than
just doing completions of it.

Date:  3 MAY 1980 0009-EDT
From: Moon at MIT-AI (David A. Moon)
To: (BUG ZWEI) at MIT-AI

In the version of zwei on system 27.65 NWS, with microcode 661, on LISP Machine Six:

If inside a Query Replace you do c-R, switch buffers, and switch buffers back,
then c- and continue the query replace, it is screwed up.  I think what has
happened is that (POINT) has gotten copied and Query Replace is still
dealing with the old copy.

Date:  2 MAY 1980 1719-EDT
From: Moon at MIT-AI (David A. Moon)
Subject: P.S. to previous
To: (BUG ZWEI) at MIT-AI

Ah, it doesn't really clobber the buffer.  It creates a not-fully initialized buffer
which is in the data structure under the name of the file being found, but sets
*INTERVAL* to that without really switching to it.  By immediately hitting call
and doing (ed "filename") of some other file then using ^X^B and the mouse to
get back to the buffer that I thought was clobbered I can get it back.

Probably the bug is simply that it changes the permanent data structure too soon,
and/or doesn't bind some specials that are implicit arguments to subroutines
called by FIND-FILE.

Date:  2 MAY 1980 1715-EDT
From: Moon at MIT-AI (David A. Moon)
To: (BUG ZWEI) at MIT-AI

In the version of ZWEI on system 27.65 NWS, with microcode 661, on LISP Machine Six:

Hitting abort while reading a file in the FIND-FILE command deletes the contents
of the buffer that was selected while doing the find file.  It also fucks it over
somehow so as to cause errors in redisplay.  I have been screwed twice by this now.

Date:  1 MAY 1980 2239-EDT
From: MOON5 at MIT-AI (David A. Moon)
Subject: Zwei bug
To: (BUG ZWEI) at MIT-AI

In the 183rd line of the function NZWEI:REDISPLAY, where it's deciding whether
to do an erase-to-eof, appears the test
			       (> (PLINE-TICK WINDOW PLINE) 0)
If the very first display ever done doesn't fill the screen (e.g. start
a fresh world and do (ed 'foo) where foo is a function defined at the end
of a file) this line gets an error because PLINE-TICK is NIL.  But why
this magic zero??  In fact I don't see what this line accomplishes at all
in its containing AND.

Another random bug, while I'm at it.  In Mail mode, c-; inserts a ;-comment
but c-m-; is a no-op.  I think this bug was inherited from Emacs and has to
do with the difference between comment begin and comment start.

Date:  1 MAY 1980 1515-EDT
From: Moon at MIT-AI (David A. Moon)
To: (BUG ZWEI) at MIT-AI

In the version of zwei on system 27.50 NWS, with microcode 661, on LISP Machine Six:

Well, m-x describe flavor needs to be done over to have more readable and useful
typeout.  But aside from that, if you click the mouse on a method (e.g. the
word primary which lights up when you point the mouse at it), it calls EDIT-DEFINITION
with an argument of NIL, prompts for "read NIL from what file", then gets an error
of NZWEI:*CURRENT-COMMAND* unbound.

Date: 29 APR 1980 1619-EDT
From: Moon at MIT-AI (David A. Moon)
To: (BUG ZWEI) at MIT-AI

In system 27.46 NWS, with microcode 661, on LISP Machine Six:

How do I terminate a View File (or other View operation) prematurely?
In Emacs it is now CR, and used to be c-C.  In Zwei it is c-Z.  In
Nzwei no matter what I type it seems to execute it as a command, often
modifying my buffer when I didn't want it to.

Date: 29 APR 1980 1516-EDT
From: Moon at MIT-AI (David A. Moon)
To: (BUG ZWEI) at MIT-AI

In system 27.46 NWS, with microcode 661, on LISP Machine Six:

Mouse-middle-twice (COM-MOUSE-KILL-YANK) conforms neither to its documentation
nor to what it used to do (which are themselves different.)  The right thing for
it to do is (when there is a region) the first time save it and the second time
kill it without saving on the kill ring.  If done when there is no region, the
first time yank it and the second time meta-Y.  Since it never kills, I suspect
it gets faked out by the fact that saving (m-W) gets rid of the region.

Date: 29 APR 1980 1444-EDT
From: Moon at MIT-AI (David A. Moon)
To: (BUG ZWEI) at MIT-AI

In system 27.46 NWS, with microcode 661, on LISP Machine Six:

m-x Insert File does not leave a mark behind.

Date: 20 APR 1980 2119-EST
From: Gyro at MIT-AI (Scott W. Layson)
Subject:  mode line
To: (BUG ZWEI) at MIT-AI

In the version of ZWEI on system 27.1, with microcode 635, on LISP Machine Seven:
Is there anywhere a description of the syntax of the -*-...-*- mode line?
Specifically, can I specify things like auto fill mode and the fill column?


Date: 19 APR 1980 0805-EST
From: H at MIT-AI (Jack Holloway)
To: (BUG ZWEI) at MIT-AI


COM-FILL-PARAGRAPH should recognize the end of the buffer as delimiting the end
of the last paragraph in the case where the last line has no EOL yet.


Date: 17 APR 1980 1733-EST
From: Batali at MIT-AI (John Batali)
To: (BUG ZWEI) at MIT-AI

In system 26.3, with microcode 616, on LISP Machine Three:
After doing a RESHAPE of the buffer, and then trying to RESHAPE
the buffer back to normal, the bottom window is about twice as big
as usual--and no reshaping can fix it.

Date: 16 April 1980 17:36-EST
From: Mike McMahon <MMCM at MIT-AI>
To: LPD at MIT-AI
cc: BUG-ZWEI at MIT-AI

    Date: 16 APR 1980 1717-EST
    From: LPD at MIT-AI (L. Peter Deutsch)
    In system 26.3, with microcode 618, on LISP Machine Two:
    The Meta-s command centers the line between the physical boundaries of the window,
    not between the margins established for Filling.  (I suppose one can argue as to
    whether this is a bug, but it certainly wasn't what I wanted, and I couldn't find
    any way to set the window size to a precise number of characters or pixels.)
It was considered a bug, and is fixed in NZWEI.

Date: 14 April 1980 18:07-EST
From: Mike McMahon <MMCM at MIT-AI>
To: EAK at MIT-MC
cc: BUG-ZWEI at MIT-AI

    Date: 14 April 1980 17:46-EST
    From: Earl A. Killian <EAK at MIT-MC>
    How about adding the name Read Word Abbrev File to Read QWABL so
    that it is consistent with WORDAB, and findable via Apropos.
I will perform the name change; it is consistent with what it was called
in WORDAB when i wrote it some time ago.

Date: 14 April 1980 17:46-EST
From: Earl A. Killian <EAK at MIT-MC>
To: MMCM at MIT-AI
cc: BUG-ZWEI at MIT-AI

How about adding the name Read Word Abbrev File to Read QWABL so
that it is consistent with WORDAB, and findable via Apropos.


Date: 14 APR 1980 0331-EST
From: Moon at MIT-AI (David A. Moon)
To: (BUG ZWEI) at MIT-AI

In the version of zwei on system 26.20 NWS, with microcode 618, on LISP Machine Six:

(ed '(tv:select-mixin :call)) goes to the wrong place in the right file
(the defflavor for select-mixin) and tells the joke "0 more definitions as well."

Date: 12 April 1980 17:42-EST
From: Mike McMahon <MMCM at MIT-AI>
To: EAK at MIT-MC
cc: BUG-ZWEI at MIT-AI

    Date: 12 APR 1980 1203-EST
    From: EAK at MIT-AI (Earl A. Killian)
    Is there no way to read in a word abbrev file to ZWEI?
M-X Read QWABL, unless the format has been changed again on me.

Date: 12 April 1980 17:37-EST
From: Mike McMahon <MMCM at MIT-AI>
Subject:  M-Z and C-M-Z
To: DCB at MIT-AI
cc: BUG-ZWEI at MIT-AI

    Date: 12 April 1980 17:13-EST
    From: Dan Brotsky <DCB at MIT-AI>
    In my init I connect M-Z to Compile Buffer and C-M-Z to Evaluate Buffer
    (since I use Henry's ZTOP I never want to exit).  But they do not stay
    connected to these commands.  A little later they are again Compile and Exit,
    etc..  What gives?
These commands get installed by Lisp mode, so you'll need to define a Lisp
mode hook to assign what you want to them or redefine lisp mode.

Date: 12 April 1980 17:13-EST
From: Dan Brotsky <DCB at MIT-AI>
Subject:  M-Z and C-M-Z
To: BUG-ZWEI at MIT-AI

In my init I connect M-Z to Compile Buffer and C-M-Z to Evaluate Buffer
(since I use Henry's ZTOP I never want to exit).  But they do not stay
connected to these commands.  A little later they are again Compile and Exit,
etc..  What gives?

Date: 12 APR 1980 1203-EST
From: EAK at MIT-AI (Earl A. Killian)
To: (BUG ZWEI) at MIT-AI

Is there no way to read in a word abbrev file to ZWEI?


Date: 12 APR 1980 0111-EST
From: Moon at MIT-AI (David A. Moon)
To: (BUG ZWEI) at MIT-AI

In the version of zwei on system 26.20 NWS, with microcode 618, on LISP Machine Six:

When I go (ed), and the last time I was in the editor the typeout window was in use,
it doesn't do a redisplay to flush the typeout.  I'm not sure but I think this
is a new bug in this world.

Date: 11 April 1980 03:52-EST
From: Mike McMahon <MMCM at MIT-AI>
To: JPG at MIT-MC
cc: BUG-ZWEI at MIT-AI

    Date: 11 APR 1980 0337-EST
    From: JPG at MIT-MC (Jeffrey P. Golden)
    It would break lots of old code.  Who wants to have to go through old 
    code converting the DOs there to new-style DOs?  (I suppose someone 
    out there recommending flushing the old-style DO has an automatic 
    converter to the new-style or is willing to write one?)
While i am definitely not an advocate of such a silly change, there is
in fact a command in the Lisp machine editor to do the conversion.

Date: 9 April 1980 14:56-EST
From: Mike McMahon <MMCM at MIT-AI>
To: RMS at MIT-AI
cc: BUG-ZWEI at MIT-AI

    RMS@MIT-AI 04/09/80 05:23:30
    Now I hear that the new window system won't be released for a month.
    It's safe to assume that it will be delayed past that since
    all software timetables underestimate.
    So the OWS version of ZWEI should get all the bug fixes.
You are quite mistaken about the timetable.  I would estimate more than a week
of solid work to merge in what represents over four months of pretty solid
hacking: it should be quite obvious that this is impractical.  It would be
throwaway; and would even further delay the documentation of the nws.  Many of
the data structures have been changed to accomodate bug fixes.  Far and above
the most serious bugs in the ows version are in the window system interface,
which cannot be improved upon.  The most serious bugs that i am aware of have
already been fixed of course in both versions.

Date:  9 APR 1980 0834-EST
From: Gyro at MIT-AI (Scott W. Layson)
Subject:  request for font feature
To: (BUG ZWEI) at MIT-AI

In the version of ZWEI on system 26.4, with microcode 618, on LISP Machine Nine:

I would very much like a command that would change, within a region, all characters
of one font to another font.  This differs from Change Font Region in that nothing
not in the former font is disturbed.


Date:  1 April 1980 14:44-EST
From: Mike McMahon <MMCM at MIT-AI>
To: LPD at MIT-AI
cc: BUG-ZWEI at MIT-AI

The Compile File command in the editor is nothing more than
(QC-FILE (BUFFER-NAME <buffer>)); it should have no more (and no fewer)
problems than that would.  I believe you need to move your macro definitions
into another file which gets loaded before you compile the main file.  If your
stuff is within a separate package, this is the purpose of declaring DEFS in
the package's file-alist.

Date:  1 April 1980 02:08-EST
From: Mike McMahon <MMCM at MIT-AI>
To: GLS at MIT-AI
cc: BUG-ZWEI at MIT-AI

When i say that something is already fixed, i refer to NZWEI, since ZWEI has
only had very serious bug fixes (no new features) since the beginning of the
year.
Undoableness does not fit well into the environment of a character editor,
because of the enormous overhead of undo saving every command, and the general
uselessness of undoing a self-inserting character, for example.  It is intended
solely for giving a consistent way of recovering from gross changes to the
buffer, such as grinding it as text.
The problem with lisp machine software updates is NOT that new systems do not
automagically move themselves around while we sleep, it is that none of us has
enough time always to be generating those new systems.

Date:  1 April 1980 01:40-EST
From: "Guy L. Steele, Jr." <GLS at MIT-AI>
To: MMCM at MIT-AI
cc: GLS at MIT-AI, BUG-ZWEI at MIT-AI

    From: Mike McMahon <MMCM at MIT-AI>
        From: GLS at MIT-AI (Guy L. Steele, Jr.)

        Perhaps Help U should do Undo.
    It does.
Not on CADR-2 and not in EMACS.  (I do try things before complaining.)
        On the other hand, I wish that Undo were by default on some single keystroke.
    I doubt this would be useful, since most commands are not undoable.
Well, most commands SHOULD be undoable.
        (3) I think I've suggested these before:  LET Replace (LET Query Replace?),
            and LET Displace (LET Query Displace).
    These exist in NZWEI.  There is also a whole new set of query replace type commands,
    such as Query Exchange (query replace a=>b b=>a at the same time), some of which
    could be implemented in EMACS if someone had the inclination and patience to deal
    with the overloaded CPU's
Wonderful!  Win!

There is this problem with the fact that LISP machine software changes are not
quite as fast as we have become accustomed to on ITS.  I'm sorry if I gripe
about things that have already been fixed, but sometimes the time between gripe
and fix is so long that I forget whether or not I have already griped about
a particular thing.  It would help if there were a file of things that have been
fixed -- just short notes.  Even better would be the grand scheme for having
free LISP Machines spend their time trying to load new versions of programs into
themselves.

Date: 31 MAR 1980 0446-EST
From: GLS at MIT-AI (Guy L. Steele, Jr.)
Subject: Proposed new commands, and sundry remarks.
To: (BUG ZWEI) at MIT-AI, (BUG EMACS) at MIT-AI
CC: GLS at MIT-AI, INFO-EMACS at MIT-AI

Comments solicited on the following suggestions (which are NOT from
an EMACS or ZWEI implementor necessarily).

I suggest that Help mention Undo explicitly, to help the naive user.
Perhaps Help U should do Undo.

On the other hand, I wish that Undo were by default on some single keystroke.

I wish that some single keystroke (on a Knight keyboard) would do C-X B Return.
This is a VERY common operation (I assert; has any thought been given to
collecting statistics on which ^R commands (expecially C-X ones) are invoked
most often, for possible redistribution to easier-to-reach keys?).
Also, the Stanford E editor has an extremely winning feature whereby all the
buffers (actually files) are ordered on a pdl, and C-H exchanges the top two
on the PDL (like C-X B), but C-M-H rotates the top k (default k=3), n C-H
rotates the top n, and n C-M-H rotates the top n and sets k to n.  This allows
easy running among three or more files.  Specifying a file explicitly is like
saying n C-H, where the file is n'th from the top of the pdl.  Perhaps
similar operations for the point/mark pdl and kill ring would also be useful.

I want to yell some more for C-M-O => C-O, and C-M-O = ^R Stack List Vertically.

I propose some commands which I believe would make LISP editing easier,
and I wish I had them right now:

(1) ^R Inject Arguments (suggested key: C-M->):
	n C-M->  means:   n C-M-F ) C-B n C-M-B ( Space C-B         [n positive]
			  n C-M-B ( Space n C-M-F ) C-M-P C-B C-B   [n negative]

    That is, take the following n s-expressions, wrap them up in a pair of
    parens, put a space after the left paren and the cursor before that.
    This prepares to make a new level of function call with the s-expressions
    as arguments.

(2) ^R Extract Arguments (suggested key: C-M-<):
        n C-M-<  means:   n C-M-F C-Space n C-M-B C-W C-( C-M-K C-Y
		except that the kill ring is not affected (but Undo can undo it).

    This takes n s-expressions and deletes the s-expression containing them,
    then puts them back in place of it.  Perhaps typing C-M-< after an n C-M-<
    should arrange to use the same n, i.e. allow incremental layers of list
    structure.  Maybe a zero argument should mean all s-expressions from
    point to the enclosing ).

(3) I think I've suggested these before:  LET Replace (LET Query Replace?),
    and LET Displace (LET Query Displace).
    LET Replace expects the cursor to be within a LET binding clause,
    and replaces all occurrences of the variable in the LET body with the
    corresponding expression.  Maybe if the cursor is in front of the set
    of bindings it does them all.
    LET Displace does the inverse operation.  It reads an expression
    and a variable, replaces occurrences of the expression with the
    variable in the body, then creates a new LET binding clause.


GLS@MIT-AI 03/29/80 02:18:46
To: (BUG ZWEI) at MIT-AI
CC: GLS at MIT-AI
In the version of ZWEI on system 26.3, with microcode 618, on LISP Machine Two:
I suggest that the value of *LISP-DEFUN-INDENTATION* be changed from
(2 1) to (1 1 2 1).  Often I define macros named DEFMUMBLE which are of
the form (DEFMUMBLE name body), rather than (DEFMUMBLE name vars body),
and I want the DEF-indentation to apply to them also.  (DEFSTRUCT is a case
in point.)


GLS@MIT-AI 03/29/80 02:07:51
To: (BUG ZWEI) at MIT-AI
CC: GLS at MIT-AI
In the version of ZWEI on system 26.3, with microcode 618, on LISP Machine Two:

Apparently  Evaluate Into Buffer  doesn't note that the buffer has been modified?
I read in a file, did an E I B, then killed it, and it didn't ask whether or
not to save it.


Moon@MIT-AI 03/28/80 02:42:30
To: (BUG ZWEI) at MIT-AI
In the version of zwei on system 26.15 xnws, with microcode 618, on LISP Machine Six:

I ^X^F'ed a file that was in lowercase but had just -*- Lisp -*- at the front.
So of course it went into electric shift lock mode, which I didn't want.
I fixed the mode line to have Lowercase:True, and did m-x Reparse Mode Line.
But it didn't turn off electric shift lock!  However, at that point doing
m-X Lisp did.  It looks like Reparse Mode Line does not call the user's mode
hook; it should.

Moon@MIT-AI 03/28/80 01:17:02
To: (BUG ZWEI) at MIT-AI
In system 26.15 xnws, with microcode 618, on LISP Machine Six:

recenter-type :point left point outside the window.
This happens reliably if I do a string search to something below the
bottom of the window and type-ahead c-B <minus-sign>.

RMS@MIT-AI 03/26/80 03:52:01
To: (BUG ZWEI) at MIT-AI
On a new keyboard, I can't find any way to insert a Backspace.
I thought I had won by inserting a lambda, but it cleverly
screwed me by writing out a rubout in front of it.
Shouldn't C-Q Overstrike do this?

DLW@MIT-AI 03/25/80 17:32:20 Re: Subtle screw with word abbrevs
To: (BUG ZWEI) at MIT-AI
I have never been happy with the way the major and minor mode scheme
interacts with recursive editing.  (I have examined the Multics
Emacs and SINE schewmes too and I don't like them either.)  Perhaps
switching into and out of the minibuffer should do a full turn-off/turn-on
modes sequence and the minibuffer should just ahve its own modes,
probably none of them, or something.  Are there any modes that SHOULD
be on in the minibuffer?

The easy way to solve the immediate problem is just to have a
dont-expand-abbrevs flag that gets lambda bound over the call to the
function taht reads from the minibuffer, but that is ad hoc...

MOON@MIT-MC 03/25/80 13:06:07 Re: Proposed feature
To: (BUG ZWEI) at MIT-MC, (BUG EMACS) at MIT-MC
If you type several Lisp-mode-tabs in a row, it should cycle through
various useful places that you might want to indent to.  The first time
you type it it should do what it does now.  The second time, it should
indent under the other of the first or second thing in the enclosing list,
whichever it didn't do the first time.  The third time, it should go into
"^R Indent Relative" with a starting indentation of zero.

In zwei, where the first time you type it it may indent to a special
place dependent on the function you are in, then the second time you
type it that knowledge should be shut off (or turned on if it had been
shut off by a ' or a `), and the third time it should do what I said
to do the second time above.

MOON@MIT-MC 03/25/80 12:51:25 Re: Subtle screw with word abbrevs
To: (BUG zwei) at MIT-AI
Is it ever right to have word abbrev expansion enabled in the mini buffer?
I guess it's sometimes right, but it's often not desirable.  Especially
not when defining a word abbrev.

Date: 25 March 1980 02:40-EST
From: Mike McMahon <MMCM at MIT-AI>
To: RMS at MIT-AI
cc: BUG-ZWEI at MIT-AI

    RMS@MIT-AI 03/25/80 00:47:18
    Changing the definition of a word abbrev appears to do nothing;
    the abbrev continues to expand to its old expansion.
    I used C-X + to define it, both times.
Subtle screw: when you type the CR to end the specification of the abbrev, it
expands to the old expansion and then that gets to be the abbrev.
What do people think of the idea of temporarily turning off word abbrev expansion
during this reading of the abbrev?

By the way, all your other BUG-ZWEI's of this evening were fixed already in NZWEI;
that is not to discourage you from sending bug reports, it is easy for me to verify
that things have indeed been fixed.

RMS@MIT-AI 03/25/80 01:52:48
To: (BUG ZWEI) at MIT-AI
With a fill column of 80, the following paragraph is not changed by M-Q:

The first Lisp-specific editing commands were those to move over, kill, and copy s-expressions.  These have existed since the 1960's, originally as TECO macros.  They are
basic to the editing of Lisp code in a text-based editor, since they provide the
capabilities which come naturally to structure editors which edit actual lists
of a function definition in Lisp. 


RMS@MIT-AI 03/25/80 01:51:23
To: (BUG ZWEI) at MIT-AI
Period should not be part of a word in text mode.


RMS@MIT-AI 03/25/80 01:39:05
To: (BUG ZWEI) at MIT-AI
In text mode, singlequote ought to be considered part of a word.


RMS@MIT-AI 03/25/80 01:01:22
To: (BUG ZWEI) at MIT-AI
I was at the end of the buffer in a line containing only a space and without a
terminating CR.  I typed two rubouts fast, and it rubbed out the space and the
previous CR as it should, but it left a dead cursor on the screen line where the
now nonexistent space used to be.

In fact, I see that this happens without the space, if I rub out a CR at the end
of the buffer at a moment when the cursor is visible.


RMS@MIT-AI 03/25/80 00:59:46
To: (BUG ZWEI) at MIT-AI
I was at the end of the buffer in a line containing only a space and without a
terminating CR.  I typed two rubouts fast, and it rubbed out the space and the
previous CR as it should, but it left a dead cursor on the screen line where the
now nonexistent space used to be.


RMS@MIT-AI 03/25/80 00:57:27
To: (BUG ZWEI) at MIT-AI
In Auto Fill mode, Return does not break lines.
I had a fill column of 80 and a line containing:
certain level (this is the problem for which Interlisp's square-brackets were invented).



RMS@MIT-AI 03/25/80 00:47:18
To: (BUG ZWEI) at MIT-AI
Changing the definition of a word abbrev appears to do nothing;
the abbrev continues to expand to its old expansion.
I used C-X + to define it, both times.


RMS@MIT-AI 03/25/80 00:12:28
To: (BUG ZWEI) at MIT-AI
C-m-i and c-m-Tab are undefined.  They ought to do Lisp indentation
(in all modes).

Gyro@MIT-AI 03/21/80 13:42:52
To: (BUG ZWEI) at MIT-AI
In the version of ZWEI on system 26.3, with microcode 616, on LISP Machine Seven:
LISP-PARSE-LINE-MEMOIZED gave me an obscure error (reference to DTP-TRAP)
when trying to go forward over an sexp containing a string with a carriage return
in it.  This was after calling FASL Update on the file.  Ask me and I'll try
and reproduce the situation; I don't really know how to describe it, because
I don't know what is relevant.


Moon@MIT-AI 03/20/80 23:09:06
To: (BUG ZWEI) at MIT-AI
In system 26.10 NWS, with microcode 618, on LISP Machine Nine:

In Text mode and Bolio mode period is an alphabetic character and hence part of a word.
This is not the case in Emacs.

Moon@MIT-AI 03/20/80 22:57:06
To: (BUG ZWEI) at MIT-AI
In system 26.10 NWS, with microcode 618, on LISP Machine Nine:

Typing unbalanced parentheses then a CR to meta-. blows out with an eof in middle
of list error.  Maybe it should gratuitously stick enough closes on the end, or
maybe it should beep and make me type it myself.

Moon@MIT-AI 03/20/80 22:13:41
To: (BUG ZWEI) at MIT-AI
In system 26.10 NWS, with microcode 618, on LISP Machine Nine:
In Bolio mode, lines beginning with a dot are recognized by the meta-Q command
as terminators at the beginning of a paragraph but not at the end.

GLS@MIT-AI 03/18/80 14:06:07
To: (BUG ZWEI) at MIT-AI
CC: GLS at MIT-AI
In the version of ZWEI on system 26.3, with microcode 618, on LISP Machine Two:

Yet another instance of the screw where Apropos lists a certain command
but the M-X completing command reader refuses to believe it:
I defined a few Word Abbrevs, and was in Abbrev mode.  Doing M-X Apropos Abbrev
says that, among others, Kill Global Word Abbrev and Kill Mode Word Abbrev
are available commands (and not attached to any key).  However, typing
M-X Kill M beeps at me when I type the space after the M (similarly
for a G instead of an M).  Grumph.


Gyro@MIT-AI 03/15/80 09:45:53
To: (BUG ZWEI) at MIT-AI
In the version of ZWEI on system 26.4, with microcode 618, on LISP Machine Nine:
Word Abbrevs should expand into the current font.  Or does this work right
in the NWS?

Date: 14 March 1980 19:46-EST
From: Mike McMahon <MMCM at MIT-AI>
To: JERRYB at MIT-AI
cc: BUG-ZWEI at MIT-AI

    Date: 14 MAR 1980 1520-EST
    From: jerryb at MIT-AI (Gerald R. Barber)
    Marks don't seem to be buffer specific anymore, ie if I set a mark in buffer foo,
    switch to buffer bar and do a U<space> I am switched back to buffer foo.
The point pdl never was buffer specific.  I believe the current behaviour is much
more desirable.  The alternative would be to give an error that the saved point is not
in the same buffer.

DLW@MIT-AI 03/13/80 03:34:26
To: MMCM at MIT-AI, (BUG ZWEI) at MIT-AI
The intention was that *STANDARD-COMTAB* is supposed to be the common
ultimate default; a change to it is intended to happen to ALL ZWEI
invocations, ZMACS or not.  So I guess it is a bug for modes
to chagne STANDARD-COMTAB; they ought to leave it alone.  So I
guess each invocation does need its own COMTAB if it wants to use
modes.  This means that a ZMACS with modes really ought to go through
three COMTABs, the modes one, the ZMACS one, and the ZWEI one.
You could change the functions in COMTAB > to know about a second
format of COMTABs meant to be used for sparse COMTABs, that need
not have the moby array...

MMcM@MIT-AI 03/12/80 22:16:15
To: (BUG ZWEI) at MIT-AI
there is this systematic poor interaction between multiple editors using modes:
namely, they all do their redefinitions in *STANDARD-COMTAB* directly, so if
you have more than one running at the same time, they can step on one another's
toes.  anybody have a good solution other than everyone having their own comtab
if they are going to use modes and doing the redefinitions there?


Date: 12 March 1980 22:12-EST
From: Mike McMahon <MMCM at MIT-AI>
To: DLW at MIT-AI
cc: BUG-ZWEI at MIT-AI

    DLW@MIT-AI 03/12/80 19:57:21
    Gee, can't fonts by loaded dynamically and automatically as needed?
Same old story: they are indeed loaded automatically in the new window
system.

DLW@MIT-AI 03/12/80 19:57:21
To: (BUG ZWEI) at MIT-AI
Gee, can't fonts by loaded dynamically and automatically as needed?

Gyro@MIT-AI 03/12/80 13:24:54 Re:  fonts in next world
To: (BUG ZWEI) at MIT-AI
Can the fonts hl12, hl12i, and hl12b be made part of the standard cold
load in the next system?  They don't take much room and I use them all
the time.  I don't really mind loading them, but I would like others to
be able to look at my files without also having to load them...

Or are there any other about-cptfont-size variable-width fonts you would
prefer?  This is the only group I found in a quick look through LMFONT;.


Date:  4 MAR 1980 1113-EST
From: RICH at MIT-AI (Charles Rich)
Subject:  DIRED
To: (BUG ZWEI) at MIT-AI
CC: (BUG LISPM) at MIT-AI

It is very confusing if you are in DIRED and hit control-Z
and then type (ED) again, you end up back in the *DIRED*
buffer but not under the control of the DIRED program.
The screen looks the same (except for the line "Q to Quit"
at the bottom) and it can take a while to figure out why
it doesn't respond like a DIRED.

Date:  2 March 1980 17:04-EST
From: Mike McMahon <MMCM at MIT-AI>
Subject:  desired feature
To: GYRO at MIT-AI
cc: BUG-ZWEI at MIT-AI

the FASL Updater claims to do something along these lines.

Gyro@MIT-AI 03/02/80 15:18:53 Re:  desired feature
To: (BUG ZWEI) at MIT-AI
A command that compiles the buffer into a file, instead of into the current
environment, would be most welcome.  For one thing, it's just a waste to have
qc-file read back in the file you just wrote out.  But worse, qc-file doesn't
know about fonts, so one has to write out a version with no font information,
which is a pain.

Moon@MIT-AI 03/02/80 04:00:14
To: (BUG ZWEI) at MIT-AI
In 25.11 nws, if I read in LISPM2;FLAVOR then LMMAN;FLAVOR, and do m-. DEFW altmode,
it thinks there is only one definition of it, the one in the second file read in.
There's a reasonable definition in the other file, too.

Moon@MIT-AI 02/28/80 01:49:46
To: (BUG ZWEI) at MIT-AI
In 25.11 nws, meta-Tab in Lisp mode ignores its numeric argument.  It should insert
that many tabs.

Alan@MIT-AI 02/27/80 17:08:33
To: (BUG ZWEI) at MIT-AI

I exited dired and then ^X^Bed back to the dired buffer and wrote
its contents out to "ALAN;. .", a cannonical place for trash.
Later I had some new trash in "ALAN;. ." that I wanted to read back in.
When I tried to ^X^F this file I was first asked the obnoxious question
about somebody having modified the file since I wrote it, then after I had been
forced to type the characters "yes<return>" I was feeped at and told "read-only"
in the usual small print at the bottom of my screen.  Perhaps someone should
offer to un-read-only-ify the buffer in this (if not some other) cases.

Is there some way I can read in a file read-only?  Is there some way
to force read-only-ness off?

moon5@MIT-AI 02/27/80 01:54:18
To: (BUG ZWEI) at MIT-AI
In system 25.11 nws, with microcode 613, on LISP Machine Six:

If you do m-X List Fonts (or probably anything that does typeout), followed
by m-x View Dir, the View Dir homes up the typeout window but does not erase
the first line.  Also when it gets to a more break, the cursor of the typeout
window is not blinking.

RMS@MIT-AI 02/23/80 22:33:37
To: (BUG ZWEI) at MIT-AI
When I type M-X Save CR ahead, it displays the minibuffer anyway.
It should detect the presence of type-ahead in two ways:

1) Completion should not display if the CR has already been typed ahead
(at least not if no display has yet been done)

2) The minibuffer should not be exposed at all if its contents
never need to be displayed.  When ZWEI decides under program control to switch windows,
nothing should be done to the window system until it is time to redisplay.

3) Another bug: when the minibuffer appears for a M-. command,
the cursor is always at a random place in the middle of it at first.
After a while of thrashing, the cursor moves to the correct place
when redisplay happens.  It would look better is a special hack were
put in to make the cursor appear at the beginning of the line
when it appears for the first time.


RMS@MIT-AI 02/23/80 17:53:01
To: (BUG ZWEI) at MIT-AI
Commands Copy File, Rename File, etc. should be created.


Gyro@MIT-AI 02/22/80 11:58:33
To: (BUG ZWEI) at MIT-AI
In the version of ZWEI on system 25.5, with microcode 613, on LISP Machine Six:
Why is there no online documentation on the side window?  One ought to be able
to call up a side window and hit HELP to get useful information.

GLS@MIT-AI 02/21/80 11:43:36
To: (BUG ZWEI) at MIT-AI
CC: GLS at MIT-AI
In the version of ZWEI on system 25.0, with microcode 612, on LISP Machine Two:
If you use blank lines as paragraph separators, and say M-Q when within a paragraph
of exactly two lines, then it seems to delete the following blank line (thus bringing
the next paragraph up as part of this one (but not filled in with it)).


jerryb@MIT-AI 02/20/80 11:15:18
To: (BUG ZWEI) at MIT-AI

Sometimes, and I haven't figured out when yet, doing meta-. on a function that is already
loaded causes the editor to go into an infinite loop.


BAK@MIT-AI 02/18/80 09:43:07
To: (BUG ZWEI) at MIT-AI
When query replace is called in a buffer with multiple fonts it puts the substituted
text in font A regardless of the font of the substituted-for text.  It clearly should
use the same font as the substituted-for text.


Date: 15 February 1980 07:58-EST
From: "Guy L. Steele, Jr." <GLS at MIT-AI>
To: MMCM at MIT-AI
cc: GLS at MIT-AI, BUG-ZWEI at MIT-AI

Thanks ever so much for being patient with my complaints and implementing
features and things.  One more remark though: I still think it's confusing
to do an Apropos, see the name of a command, and then when you try to
execute it with M-X to be told simply that it does not exist.  I suggest
that EITHER the error message state that it exists but some restriction
is in force (Hairy Command        This mungs the world.
                  but you can't invoke it in Mail Mode), OR that Apropos
simply not show things you can't do (but have another kind of Apropos
(^U argument??) that shows everything).

Date: 15 February 1980 05:28-EST
From: Mike McMahon <MMCM at MIT-AI>
To: GLS at MIT-AI
cc: BUG-ZWEI at MIT-AI

    Date: 02/14/80 08:14:03
    From: GLS at MIT-AI

    (a) Why is it that you cannot type ANY command name that Apropos shows
    you as an extended command?  In particular, it claims that Mail can
    be invoked by ^X M, but I can't do M-X Mail <return>.  I think it would
    all be more intuitive if you could.  If Apropos can find it, so can
    the command parser!
This is quite deliberate, only those extended commands that are meaningful in the
particular environment are present.  For example, M-X List Buffers would not
work inside the (MAIL) editor or the editor top level.  As it happens, M-X Mail
does exist in the new editor.  The C-M-X command will execute any command, whether
it is assigned to a command or belongs in the current environment, of course this
will sometimes cause errors and odd behaviour, so this command is not well advertised.
    (d) Well, I see the point that you might want TAB to realign LISP
    code even when in a comment.  However, the place I always want tabs
    is when in ;;; comments, and usually there is no LISP code on the line.
    So I'll modify my request: I would like LISP mode TAB to simply
    insert a TAB if within a ;;; comment.
I have modified the command i wrote per your previous request to only insert tabs if
the current line begins with a comment.
					   (By extension, I think
    that there is a great deal to be said for having M-Q and C-M-Q
    manage to treat ;;;'s as "transparent" so that one can fill
    paragraphs or indent code that one has put into ;;; comments.
There is a command in the new editor called Fill Long Comment or something that
does a M-Q on the comment lines around point, ignoring the actual ;'s.
    Maybe what I really want is within ;;; comments to get most of the
    effect of being in TEXT mode.  One could imagine wanting LF
    within a ;;; to create a new line and put in ";;; " automatically,
    etc.  Oh well.)
The Indent New Comment Line (M-Line) command will insert ";;; "'s for new comments
if that's how the current line's comment starts.

Gyro@MIT-AI 02/14/80 11:02:55 Re:  bigger font bug
To: (BUG ZWEI) at MIT-AI
In the version of ZWEI on system 25.4, with microcode 613, on LISP Machine Six:
When I'm hacking a buffer with some fancy fonts, and I read in a file with
no font information in the header, the new buffer is SOMETIMES (I can't pick out
just when) put in the fancy fonts instead of just cptfont.  Now granted, this is
sometimes a feature.  The problem arises when the file has 's in it that don't
have anything to do with fonts (as my zwei init does, in the form #/<char>); it
tries to select font "/" and bombs with an array-reference-out-of-bounds
on the current-font array.  At least, I think that's what is going on.


Gyro@MIT-AI 02/14/80 08:57:01 Re:  little font bugs, part 2
To: (BUG ZWEI) at MIT-AI
In the version of ZWEI on system 25.4, with microcode 613, on LISP Machine Six:
Correction to previous bug report:  When flashing the "(" corresponding to the
just-typed ")", it's using an "(" in the right font, but it's putting it in the
wrong place (vertically).  It lines up the top of the paren with the top of the
line, rather than lining up the bottom of the paren with the baseline; this loses
if the current font is not the tallest of the fonts in use.  For a clear
example, do
M-X Set Fonts
cptfont mets
()
Since mets is about twice as tall as cptfont, the flashing "(" will appear
completely above the one that's supposed to be flashed!


GLS@MIT-AI 02/14/80 08:42:58
To: (BUG ZWEI) at MIT-AI
CC: GLS at MIT-AI
In the version of ZWEI on system 25.0, with microcode 612, on LISP Machine Two:
M-S is supposed to center the line within the width defined by the fill column;
but it is using the width of the piece of paper.


GLS@MIT-AI 02/14/80 08:14:03
To: (BUG ZWEI) at MIT-AI
CC: GLS at MIT-AI
In the version of ZWEI on system 25.0, with microcode 612, on LISP Machine Two:

(a) Why is it that you cannot type ANY command name that Apropos shows
you as an extended command?  In particular, it claims that Mail can
be invoked by ^X M, but I can't do M-X Mail <return>.  I think it would
all be more intuitive if you could.  If Apropos can find it, so can
the command parser!

(d) Well, I see the point that you might want TAB to realign LISP
code even when in a comment.  However, the place I always want tabs
is when in ;;; comments, and usually there is no LISP code on the line.
So I'll modify my request: I would like LISP mode TAB to simply
insert a TAB if within a ;;; comment.  (By extension, I think
that there is a great deal to be said for having M-Q and C-M-Q
manage to treat ;;;'s as "transparent" so that one can fill
paragraphs or indent code that one has put into ;;; comments.
Maybe what I really want is within ;;; comments to get most of the
effect of being in TEXT mode.  One could imagine wanting LF
within a ;;; to create a new line and put in ";;; " automatically,
etc.  Oh well.)


Gyro@MIT-AI 02/13/80 13:14:02 Re:  little font bugs
To: (BUG ZWEI) at MIT-AI
In the version of ZWEI on system 25.0, with microcode 612, on LISP Machine Nine:
Meta-Tab inserts a tab in font A instead of in the current font.

When flashing the "(" corresponding to the ")" just before the cursor,
the paren flashed is sometimes of the wrong font (this looks very strange, as
parens in the fonts I use don't overlap very much).

Date: 11 February 1980 23:40-EST
From: Mike McMahon <MMCM at MIT-AI>
To: RMS at MIT-AI
cc: BUG-ZWEI at MIT-AI

    RMS@MIT-AI 02/11/80 23:12:48
    To: (BUG ZWEI) at MIT-AI
    I just repeated the long I-search experiment.  I let the search
    finish displaying and then typed C-N.  It did a little swapping,
    then spent quite a while thinking.  The Altmode had already been
    printed in the echo area, but the ^@ had not been.  This leads me to
    suspect that what is losing is the decision of whether to push point!
    It must not give up counting once it sees that point has moved
    more than far enough to be pushed.
Yes, it does, it is still necessary to page in a few lines near the old point
though.

Date: 11 February 1980 23:39-EST
From: Mike McMahon <MMCM at MIT-AI>
To: RMS at MIT-AI
cc: BUG-ZWEI at MIT-AI

    RMS@MIT-AI 02/11/80 23:09:17
    To: (BUG ZWEI) at MIT-AI
    When I do an I-search that goes a long distance,
    and then exit with something trivial like C-O,
    it runs for a while, almost as if it were TECO moving the gap.
    It shouldn't have any more swapping to do, since the
    display has already been updated, so all relevant lines
    are already swapped in.
It is paging in the several lines around where point used to be to see if
the distance apart is enough to warrant ^@.
    Also, C-U C-Y does not have the new EMACS definition.
    It appears to insert the fourth thing in the kill ring.
    Not only that, but it seems to permanently change the kill ring,
    which C-Y with an arg is not supposed to do.

    Also, C-] does not exit from C-X M.

    All these bug reports are on the machine in 936 next to
    the parts drawers.
These and your previous bug reports are fixed in the new editor.

RMS@MIT-AI 02/11/80 23:12:48
To: (BUG ZWEI) at MIT-AI
I just repeated the long I-search experiment.  I let the search
finish displaying and then typed C-N.  It did a little swapping,
then spent quite a while thinking.  The Altmode had already been
printed in the echo area, but the ^@ had not been.  This leads me to
suspect that what is losing is the decision of whether to push point!
It must not give up counting once it sees that point has moved
more than far enough to be pushed.


RMS@MIT-AI 02/11/80 23:09:17
To: (BUG ZWEI) at MIT-AI
When I do an I-search that goes a long distance,
and then exit with something trivial like C-O,
it runs for a while, almost as if it were TECO moving the gap.
It shouldn't have any more swapping to do, since the
display has already been updated, so all relevant lines
are already swapped in.

Also, C-U C-Y does not have the new EMACS definition.
It appears to insert the fourth thing in the kill ring.
Not only that, but it seems to permanently change the kill ring,
which C-Y with an arg is not supposed to do.

Also, C-] does not exit from C-X M.

All these bug reports are on the machine in 936 next to
the parts drawers.


RMS@MIT-AI 02/11/80 21:04:05
To: (BUG ZWEI) at MIT-AI

C-M-P in MIDAS mode, starting on a line with a label but after the end
of that label, should go back only to the end of that label, and not
look for the label before.  

C-M-N in MIDAS mode, in the middle of a label, should go to the end of that label.

In C-X M, the "--Text follows this line--" string should be added
to the list of paragraph delimiters, for the sake of M-Q.

I did C-X C-V in the initial buffer "BUFFER-1", the first thing I did,
and the file had -*-MIDAS-*- in it, but the buffer stayed in Lisp mode.

I am very happy with the speed of C-X M now.  It used to be very slow
to start up.  Let's see how fast it is to finish...


cwh@MIT-AI 02/11/80 16:57:56
To: (BUG ZWEI) at MIT-AI
Could you make Frob-Lisp-Conditional work with IF, and handle both
the THEN and ELSE cases?


Date: 11 February 1980 16:28-EST
From: Mike McMahon <MMCM at MIT-AI>
To: GLS at MIT-AI
cc: BUG-ZWEI at MIT-AI

    Date: 02/11/80 14:05:18
    From: GLS at MIT-AI
    (b) C-M-& (Frob LISP Conditional) seems to be extremely marginal.
    It doesn't always work (but I can't reconstruct the bug); it does
    more than it is advertised to do, i.e. the documentation loses
    (e.g. it frobs OR's too); and it leaves the cursor in a completely
    random place such that two C-M-&'s issues consecutively fail
    to be the identity operation.
i believe the documentation describes where it leaves the cursor,
at least the one for the TECO version does, i find this very useful.
i guess there could be some flag to cause point to be preserved instead.
    (c) In case my previous complaint has been forgotten, C-M-Q is still
    failing to indent comments properly; on EVERY line in the range
    a C-M-Q, one should first do a LISP indent, and then if there is
    a comment on the line do a comment indent.
nothing got lost, this bug is fixed in the new editor since before you
reported it.
    (d) If LISP Electric Shift Lock can tell whether you're in a comment,
    then so can TAB.  I suggest that TAB behave as a sinple self-inserting
    character in LISP mode if you're in a comment.
i use tab to realign the current line wherever i am within it.  i will
define another version of it that does what you say which you can assign then
to tab, since c-m-tab is available always to re-indent, i suppose.

GLS@MIT-AI 02/11/80 14:05:18
To: (BUG ZWEI) at MIT-AI
CC: GLS at MIT-AI
In the version of ZWEI on system 25.0, with microcode 612, on LISP Machine Two:
(a) It would be really useful if some command (maybe C-U C-M-Z ?) caused
the portion of the buffer from the beginning of the current DEFUN to
the end of the buffer to be evaluated.  This would be good if you did C-M-Z,
encountered an error in evaluation, went and edited the bad place, and then
wanted to continue.

(b) C-M-& (Frob LISP Conditional) seems to be extremely marginal.
It doesn't always work (but I can't reconstruct the bug); it does
more than it is advertised to do, i.e. the documentation loses
(e.g. it frobs OR's too); and it leaves the cursor in a completely
random place such that two C-M-&'s issues consecutively fail
to be the identity operation.

(c) In case my previous complaint has been forgotten, C-M-Q is still
failing to indent comments properly; on EVERY line in the range
a C-M-Q, one should first do a LISP indent, and then if there is
a comment on the line do a comment indent.

(d) If LISP Electric Shift Lock can tell whether you're in a comment,
then so can TAB.  I suggest that TAB behave as a sinple self-inserting
character in LISP mode if you're in a comment.


HENRY@MIT-AI 02/08/80 03:00:32
To: (BUG ZWEI) at MIT-AI
For keyboard macros, if you do a Control-S search, 
the search string you type doesn't get included in
the keyboard macro. Instead when you're executing the
keyboard macro it stops and asks you to type a search
string. It should include the search string in the
macro like EMACS does.

HIC@MIT-AI 02/07/80 19:26:57 Re:  Incremental search
To: (BUG ZWEI) at MIT-AI

Please make incremental search push on the mark pdl correctly.  You
have known about this bug for a long time.  I know you don't
like to admit that there are people who use incremental search, but....


MMCM@MIT-AI 02/07/80 14:26:26
To: RG at MIT-AI
CC: (BUG ZWEI) at MIT-AI
please tell me whenever you modify the old editor, even if you say no more
than that, so that i know to look there for changes before the old versions
get reaped.
your addition of COM-SELF-EDIT is not really right, first off, that command
already exists, it is called COM-EDIT-ZMACS-COMMAND, Apropos of "edit" would
have found it just as well; and it does not belong in DOC or in the standard
comtab, since it calls edit definition which only works in the complete ZMACS
environment with file hackery and everything.

LEVITT@MIT-AI 02/06/80 05:07:59 Re: Continued; bug redisplaying tab in last columns
To: (BUG ZWEI) at MIT-AI
A little investigation showed that the problem I just reported is
caused by a tab in one of the last columns of a line; Control-L and
Control-V redisplay this fine, but Meta-V produces:

"Recenter type POINT left point outside the point window"

This message reappears each time one tries to exit the debugger, and
one may seem hopelessly wedged -- but if you quickly type 
Control-Z Control-V at it, you return to the editor with a redisplay it
seems to like.

Actually, this is a rare problem because ZWEI doesn't ordinarily let you insert
a tab in those columns unless you use Control-Q, something you'd hardly care
to do, in LISP mode.  I think my file was generated using ITS EMACS, which
likes it fine and displays the line without so much as an exclamation mark.

LEVITT@MIT-AI 02/06/80 01:56:42 Re: Sometimes long lines don't redisplay properly
To: (BUG ZWEI) at MIT-AI
Lines longer than the screen width sometimes cause redisplay problems.
In a certain file containing an unnoticed long line (the extra chars were
all spaces or tabs), the redisplay trouble never happened when I was 
Control-V'ing through the file, but always when I Meta-V'd back through that
section.  I fixed the offending line, and now see it was harder to duplicate
than I thought... Hope this is helpful in tracking it down anyway.  The file
contained commented lisp code, lisp mode.

H@MIT-AI 02/05/80 20:15:23
To: (BUG ZWEI) at MIT-AI
Trifle, but c-top-C is confused by DEFUN forms
that have a #Q in front of them.


GLS@MIT-AI 02/04/80 17:17:38
To: (BUG ZWEI) at MIT-AI
CC: GLS at MIT-AI
In the version of zwei on system 25.1, with microcode 613, on LISP Machine One:
Doing  M-X View XGP Queue  in a fresh ZWEI, then typing in text
and doing  ^X^W  causes the default device for writing out
to be XGP:, not DSK:.


DLW@MIT-AI 02/02/80 16:59:27
To: GYRO at MIT-AI, (BUG ZWEI) at MIT-AI
The difference between *COMTAB* and *STANDARD-COMTAB* is that the
former is a variable that is always lambda-bound to the CURRENT command
table, while the latter is a constant (that is, its value is a
constant), namely the "standard" COMTAB.  The standard COMTAB should be
modified if you want your changes to be reflected in all invocations of
the editor: not only in ZMACS but in anything else that uses ZWEI, say,
to read in a line of text with edit-processing.  I don't know if
anything besides ZMACS uses ZWEI these days.

I don't know why it isn't working though; you'd have to find out
from someone at MIT who is keeping up with the changes.

Gyro@MIT-AI 02/01/80 12:20:03
To: (BUG ZWEI) at MIT-AI
In the version of ZWEI on system 21.7, with microcode 604, on LISP Machine Five:
What's the difference between *COMTAB* and *STANDARD-COMTAB*?  I'm trying
to make my init file put my own function on z, and 
(SET-COMTAB *STANDARD-COMTAB* '(#/Z COM-KLUGE))
doesn't do it.  But it DOES work for keys that don't have a standard definition
already.  What's going on?

Also, are there hooks to change the character syntax tables?  I would like,
for example, "'" (single-quote) to count as a letter for the purpose of 
forward-word etc.


GYRO@MIT-ML 02/01/80 10:00:33 Re: m-) enclose previous sexp(s)
To: HENRY at MIT-ML
CC: (BUG EMACS) at MIT-ML, (BUG ZWEI) at MIT-ML
KMP wrote for me a Teco macro to do just this.  Look in ml:krep;paren >
or do MM Load Libraryml:krep;paren   then install ^R Revised Make ()
on the key of your choice (I keep it on ")" and put M-( on "(").

I wrote a similar frob for Zwei.  Indeed, my Zwei init (ai:apiary;gyro zwei)
is designed to permit the easy enforcement of the invariant: "Unbalanced
parentheses NEVER appear on the screen".  It tries to do likewise for
other delimiter pairs, like brackets, braces, double-quotes, etc., but some
of the features currently only work right for parens (notably Delete
Balanced Delimiter Pair).  Take a look at the init file!


Date: 1 FEB 1980 0309-EST
From: HENRY at MIT-AI (Henry Lieberman)
To: (BUG EMACS) at MIT-AI, (BUG ZWEI) at MIT-AI

Sugesstion for a feature: Since Meta-( with an 
argument encloses N s-expressions to the right in parens, 
how about having Meta-) with an argument enclose N
s-exprs to the LEFT, analogously.

GLS@MIT-AI 01/29/80 14:30:17
To: (BUG ZWEI) at MIT-AI
CC: GLS at MIT-AI
In the version of ZWEI on system 25.1, with microcode 613, on LISP Machine One:
The default file name for Insert File seems to be  ZWEI;GAZONK .DEL .
It would be a lot more reasonable for it to default at least the directory
to that of the file in the current buffer.


GLS@MIT-AI 01/29/80 14:33:23
To: (BUG ZWEI) at MIT-AI
CC: GLS at MIT-AI
In the version of ZWEI on system 25.1, with microcode 613, on LISP Machine One:
Meta-= seems to report the number of lines in the region in octal.
Decimal would be a better default.  (Maybe there should be a command
Set Default Message Radix ?)


LEVITT@MIT-AI 01/28/80 16:09:03 Re: Dangerous bug in "Replace string" !
To: (BUG ZWEI) at MIT-AI
"Replace string" deletes too many characters under certain conditions, over and
above those specified for replacement.  This can be observed in Query-Replace but
is especially dangerous in Replace-All-Occurences-Of.

In summary, if in Text Mode I have

One
Hi
Two
Hi
Three
Hi
Four
Hi
Five



at the end of my file, and command to
Replace All Occurences Of "HI<RET>" to "X"
(I inserted the <RET> with Control-q ; was this my bug?)
I wind up with:

OXTXThrXFoXFive

if memory serves.  Get the idea?
Is there a better way to search for carriage returns, (i.e. without using
Control-q)?  Did you know about this bug?

Since it munges the ENDS of lines,  it can be insidious, as it was when I
was converting a file from TJ6 to R format.

Gyro@MIT-AI 01/27/80 16:55:46
To: (BUG ZWEI) at MIT-AI
In Fill Paragraph (but not Auto-Fill Space), if a word extends from before the fill column
to after the end of the physical line, so that !-wrap occurs somewhere in the              middle of it,
then the filler doesn't notice that it should have broken the line at the beginning of
the word.  Presumably what is happening is that it looks at the physical column the word
ends on rather than the "real" column, which is off the screen.


DLW@MIT-AI 01/27/80 04:27:18
To: (BUG ZWEI) at MIT-AI
I hate to be a noodge, but somebody ought to go through EMACS;EMACS
NEWS and update ZWEI to be compatible.  I realize you may want to wait
until ZWEI doesn't exist in two versions before you do this.  Like, for
example, Meta-K should be Kill Sentence now, and things like that.

DHD@MIT-AI 01/23/80 23:58:50
To: (BUG ZWEI) at MIT-AI
CC: dhd at MIT-ML
To: bug-zwei
cc:dhd
--Text follows this line--
In lisp-emacs-fill mode, as ZWEI had just reached the end of a line, the following
error message resulted:

>>TRAP 2622. (ARGTYP ARRAY M-A NIL ...)  ARRAY-LEADER.
Some arg to ARRAY-LEADER, NIL, was of the wrong type.
...
ZWEI:MOVE-BP
 ARG 0 (BP): <the text on the line>
 ARG 1 (LINE): NIL
 ARG 2 (INDEX): 0

This has happened to me several times.  Although this bug is certainly very
annoying, it hasn't yet produced any serious concequences; when z is typed,
no text was lost.  -dhd

(another bug: control-altmode in this mail doesn't work right.  says its an undefined
key.  sigh.  Wrote it into a file and resent it).

Moon@MIT-AI 01/22/80 23:47:26
To: (BUG ZWEI) at MIT-AI
In system 25.0, with microcode 612, on LISP Machine Six:

I realize this should be fixed in a more general way, but it seems like enough
of a screw that it is worth fixing in general.  I hit call out of a ^X^S command.
When I re-entered the editor via (ed), it closed the output file, creating
a truncated file with the correct name.  It should have created a _LSPM_ OUTPUT
or deleted the output file.

Moon@MIT-AI 01/22/80 23:20:03
To: (BUG ZWEI) at MIT-AI
In 25.0, Zwei has a weird idea of how to indent the 3rd argument to DEFPROP.  It probably
thinks it is DEFUN.  Also PROG* is not in the indent table.

DLW@MIT-AI 01/22/80 19:28:57 Re: Contol-Meta-G in Zwei problem
To: GYRO at MIT-ML, CWH at MIT-MC
CC: (BUG ZWEI) at MIT-AI
    GYRO@MIT-ML 01/22/80 14:40:49 Re: Contol-Meta-G in Zwei problem
    How about just making it leave the thing it ground on the kill
    ring so one can get it back?

I have changed the Format Code command to do this.  MMcM seems to have
removed Format Code from the default command table, which I think is a
good idea as it is a pretty useless command and a poor substitute for
the ITS Emacs command on that key.

CWH@MIT-MC 01/19/80 19:31:41
To: DLW at MIT-MC, (BUG ZWEI) at MIT-AI
    DLW@MIT-AI 01/18/80 23:32:25
        CWH@MIT-AI 01/18/80 20:44:30
        I think C-M-G (Grind Sexp) is too dangerous to have around in the default world.
        (I was just shafted royally by it -- it expands backquotes, #, etc.)
        If anything, it should work like M-G and operate on the region.

    I must admit that I never really thought this was a useful command; I
    was mostly demonstrating how easy it was to hook up the real grinder to
    the real editor in the wonderful Lisp Machine integrated environment.
    The fact that to do so is not the right thing did occur to me but I
    couldn't restrain myself.  This was like right after we defined streams
    and made them work.  I suppose the right thing is to write a true
    source-to-source grinder that preserves reader macros, but I don't
    think the demand would be nearly high enough to justify (no pun
    intended) the amount of work that would be needed.

A source-to-source grinder might be nice, but I'm not looking for that.
The problem is that Grind Sexp is too easy to accidentally invoke in the
default environment.  (I hit it while going for C-M-F)


DLW@MIT-AI 01/18/80 23:32:25
To: (BUG ZWEI) at MIT-AI, CWH at MIT-MC
    CWH@MIT-AI 01/18/80 20:44:30
    I think C-M-G (Grind Sexp) is too dangerous to have around in the default world.
    (I was just shafted royally by it -- it expands backquotes, #, etc.)
    If anything, it should work like M-G and operate on the region.

I must admit that I never really thought this was a useful command; I
was mostly demonstrating how easy it was to hook up the real grinder to
the real editor in the wonderful Lisp Machine integrated environment.
The fact that to do so is not the right thing did occur to me but I
couldn't restrain myself.  This was like right after we defined streams
and made them work.  I suppose the right thing is to write a true
source-to-source grinder that preserves reader macros, but I don't
think the demand would be nearly high enough to justify (no pun
intended) the amount of work that would be needed.

CWH@MIT-AI 01/18/80 20:44:30
To: (BUG ZWEI) at MIT-AI
I think C-M-G (Grind Sexp) is too dangerous to have around in the default world.
(I was just shafted royally by it -- it expands backquotes, #, etc.)
If anything, it should work like M-G and operate on the region.


CWH@MIT-AI 01/18/80 20:34:32
To: (BUG ZWEI) at MIT-AI
ZWEI should have an Atom-Word-Replace command.  Basically, it
would be used for replacing one symbol by another in Lisp code.
For instance, one may want to replace X with *X*, but we don't want
to do the replacement within comments or strings, and not within
other symbols, like MAX-X.


JLK@MIT-MC 01/16/80 10:29:15
To: (BUG EMACS) at MIT-MC
CC: (BUG zwei) at MIT-AI
I think that the feature where M-Q is disabled whenever COMMENT START is
non-zero, is a crock.  It should instead check the paragraph for comments
(i.e. presence of non-quoted COMMENT START's) to decide whether or not
to fill it.  In LISP mode, it probably should be disabled however.  But
for hacking text for TEX, you want to beable to fill paragraphs and have
comments (outside of paragraphs).  It would also be nice to have a way
of re-filling indented or (for LISP code) commented paragraphs (I suspect
there is a way, but it would be nice to have it be easy to do)...


Date: 15 JAN 1980 1425-EST
From: GLS at MIT-AI (Guy L. Steele, Jr.)
To: (BUG ZWEI) at MIT-AI, (BUG EMACS) at MIT-AI
CC: GLS at MIT-AI, RZ at MIT-AI

There should be a means for treating "\" specially the way "." is treated
in the paragraph commands, i.e. a way to say that a line whose first
character is "\" is a paragraph unto itself.  This will help in hacking
TEX source files (it is not convenient to make "." be special to TEX).


H@MIT-AI 01/12/80 00:49:21
To: (BUG ZWEI) at MIT-AI
There is a bug in SECTIONALIZE-BUFFER if the file being
read in has a line consisting of a single open-paren.
(Probably STRING-EQUAL should check to see if the index
and limits are reasonable, as it is it gets an array
reference out-of-bounds.


GLS@MIT-MC 01/09/80 14:25:01
To: (BUG zwei) at MIT-AI
CC: gls at MIT-AI, (BUG lispm) at MIT-AI
All sorts of things go wrong with the file system if AI is down.
Presumably this should be all straightened out one day.  The current
screw is that in ZWEI I want to type C-X C-W MC:FOO;BAR BAZ <return>,
but typing C-X C-W causes it to try to calculate the default file
name, and it blows up trying to get the HSNAME from AI.  It can't
tell that intended to tell it MC anyway.  I got around it by
disassembling a lot of functions (can't look at the source code,
of course) and determining that I should clobber SI:LAST-FILE-DEVICE
or whatever it is called to "MC".


GLS@MIT-AI 01/07/80 15:51:53
To: (BUG ZWEI) at MIT-AI
In the version of ZWEI on system 21.7, with microcode 604, on LISP Machine Eight:
Meta-# and Meta-_ are not defined.


HIC@MIT-AI 01/05/80 14:46:11
To: (BUG ZWEI) at MIT-AI
In the new window system, control-X 2 leaves the first window selected.


DLW@MIT-AI 01/01/80 17:33:31
To: (BUG ZWEI) at MIT-AI
Control-X M works but the extended command "Mail" does not exist.
The latter occured to me first, it might as well exist.


CWH@MIT-AI 01/01/80 03:02:15
To: (BUG ZWEI) at MIT-AI
After several buffers are in existance, type C-X C-B, mouse a buffer name and
kill it.  Then type C-X C-B again and strange things happen (which can be
described if needed).

In the menu which is popped up when mousing a buffer displayed via C-X C-B,
the distance between the "save" and "kill" options is much too small.  A slip
of the hand when mousing "save" could hit "kill" instead.


Zvona@MIT-AI 12/31/79 00:13:51
To: (BUG ZWEI) at MIT-AI
In system 21.7, with microcode 604, on LISP Machine Two:
m-x bug does not as documented prompt for program. 
c- does not look for a package at the beginning of the def'n, like
foo:
(defun mumble (frotz) (loose horribly))

Zvona@MIT-AI 12/30/79 23:46:27
To: (BUG ZWEI) at MIT-AI
In system 21.7, with microcode 604, on LISP Machine Two:
m-( does the wrong thing when you give it a negative arg.

MMCM@MIT-AI 12/21/79 22:02:25
To: BEPPE at MIT-AI
CC: (BUG ZWEI) at MIT-AI
ZWEI;FOR 118 says you are the author, was there some reason for
converting all the tabs in that file to equivalent spaces?

RMS@MIT-AI 12/19/79 04:24:56
To: (BUG ZWEI) at MIT-AI
C-M-U does not move back over a ' or ` before the open-paren which it moves back to.


GLS@MIT-AI 12/17/79 15:41:44
To: (BUG ZWEI) at MIT-AI
In the version of ZWEI on system 21.7, with microcode 604, on LISP Machine Four:

C-M-W fails to affect M-W.  For the purposes of appending the next kill,
M-W should be considered a "kill".  (EMACS says M-W is exactly
like C-W C-Y, except that the buffer is not modified.  This is
not precisely true when it is preceded by C-M-W, but you get the
idea -- it should append to the top kill riong item when preceded
by C-M-W.)


GLS@MIT-AI 12/17/79 15:03:05
To: (BUG ZWEI) at MIT-AI
CC: GLS at MIT-AI
In the version of ZWEI on system 21.7, with microcode 604, on LISP Machine Four:

Despite the fact that M-] and friends are advertised to look at
both *PAGE-DELIMITER-LIST* and *PARAGRAPH-DELIMITER-LIST*, they
appear to look at only the latter, which is sort of a screw.

Also, it is a screw that *PARAGRAPH-DELIMITER-LIST* is () when in
LISP mode.  I often want to fill a paragraph when in LISP mode
before installing ;;; on each line.  (Bsically, having it be ()
in LISP mode is completely useless.)

Finally, the docuementation for M-Q doesn't mention these variables.


Another complaint: Evaluate Into Buffer doesn't save its argument
on the kill ring or minibuffer ring or anything (I want C-Y to be
able to get back the last argument form I gave it).

Also, two commands that would be useful are Evaluate And Print
and Evaluate Into Nowhere.


Moon@MIT-AI 12/14/79 11:05:40 Re: Helpful user interface
To: (BUG ZWEI) at MIT-AI
I tried to change EDIT-DEFINITION so that when it says "n more definitions as well"
it tells you how to get them.  Unfortunately FIND-COMMAND-ON-KEYS is impossible
to call because it is modularized completely wrong.  Someone who's not in the
middle of N other things should fix this.

Moon@MIT-AI 12/10/79 05:59:56
To: (BUG ZWEI) at MIT-AI
In system 20.5, with microcode 604, on LISP Machine Six:

m-X Kill Some does not remove references to killed buffers from the point pdl.
This is probably true of any form of buffer killing.

Moon@MIT-AI 12/10/79 03:50:37
To: (BUG ZWEI) at MIT-AI
(This applies to system 20 on CADR6)

Shouldn't rubout in text mode be tab-hacking rubout?

tk@MIT-AI (Sent by HIC@MIT-AI) 12/07/79 03:54:35
To: (BUG ZWEI) at MIT-AI
mistakenly doing an XDIRED while already in dired loses very big.

jerryb@MIT-AI 12/06/79 14:39:53
To: (BUG ZWEI) at MIT-AI
When asking for 2 windows ZWEI should check that they are exposed before telling
you that 2 windows already exist...


GLS@MIT-AI 12/06/79 12:38:08
To: (BUG ZWEI) at MIT-AI
In system 21.9 VLSI, with microcode 604, on LISP Machine Two:

It would be really nice if when in a Variable Set command, C-M-Y
would yank the old value of the variable so you could edit it
instead of retyping the whole thing (e.g. Lisp Indent Offset Alist !!!).
Similarly for related commands.


JlK@MIT-AI 12/01/79 09:42:56
To: (BUG ZWEI) at MIT-AI
In system 20.5, with microcode 604, on LISP Machine Six:

If I set the fill column with ^XF and then use Meta-Q to readjust a paragraph,
I get garbage (i.e. it doesn't fill correctly at all).


Henry@MIT-AI 11/28/79 23:08:54
To: (BUG ZWEI) at MIT-AI
Edit Word Abbrevs causes an error.


ZVONA@MIT-AI 11/27/79 17:45:04
To: (BUG ZWEI) at MIT-AI
let* is not indented right.
Dired looses most of the time -- it reads the directory into a read-only buffer but does not
give you the dired functions. Also, it seems to want a semi after the directory name arg
which is inaesthetic.

RG@MIT-AI 11/22/79 11:17:34
To: (BUG ZWEI) at MIT-AI
*UTILITY-PACKAGE* IS UNBOUND ON READIN INTO A FRESH
COLD LOAD IN FILE ZWEI;MODES.

kmp@MIT-AI 11/17/79 12:28:15
To: (BUG ZWEI) at MIT-AI
CC: kmp at MIT-MC
In my init file, I alias Control-M to Return by dropping (0. #\CR) in its slot ...
Unfortunately, when I type Control-M in one of the little reader frobs like you
get for Find File, etc. it does not terminate the reader like Return does. Can
this be fixed? Thanx. -kmp


GLS@MIT-AI 11/16/79 15:26:24
To: (BUG ZWEI) at MIT-AI
CC: GLS at MIT-AI
In the version of ZWEI on system 20.4, with microcode 600, on LISP Machine One:

I notice that if you create multiple-font text in your buffer with ZWEI,
then when the text is written to a file the font changes get converted
to ^F-type font changing commands, which is nifty.  But there seems to be
no way to perform the inverse of this, i.e. read a file into a ZWEI buffer
and have the ^F commands interpreted as font changes so you see the fonts
on your screen.  (It would be nice if this could also look for font defining
commands in the buffer; this might require first looking for a mode line like
	.c -*-Processor:TJ6-*-
or something like that, so as to know what kind of font-defining command
to look for.


Agre@MIT-AI 11/14/79 21:46:07
To: (BUG ZWEI) at MIT-AI
I have a file, AI:AGRE;SCENE9 >, which consists of one s-expression containing several
thousand characters with no carriage returns (i.e., it's all on one line).  When I
use ZWEI on it and try to redisplay somewhere in the middle of the thing, I get
"Recenter type ABSOLUTE left point outside the window".     


GLS@MIT-AI 11/14/79 16:45:11
To: (BUG ZWEI) at MIT-AI
CC: GLS at MIT-AI
In system 20.4, with microcode 604, on LISP Machine Three:

When you are in the mailer, it says "c- mails, c-G quits",
rather than "C- mails, C-G quits" (or better yet,
"Control- mails, Control-G quits"; or yet better,
"Control- mails; Control-G quits.").  Yes, this is nit-picking,
but consistency with both internal convention (c- vs. C-)
and English punctuation is a virtue.


GLS@MIT-AI 11/14/79 16:42:25
To: (BUG ZWEI) at MIT-AI
CC: GLS at MIT-AI
In the version of ZWEI on system 20.4, with microcode 604, on LISP Machine Three:

Edit ZMACS Command seems to work fine for editing commands
associated with keys; but what about commands not associated
with keys?


Moon@MIT-AI 11/11/79 00:55:49
To: (BUG ZWEI) at MIT-AI
A useful crock would be for c-m-t-E to be like c-t-E except that DEFVAR
is translated into SETQ.  Sad but true.

Moon@MIT-AI 11/10/79 01:21:18
To: (BUG ZWEI) at MIT-AI
In system 20.2 on CADR2

The thing that c-t-C uses to find the current defun can get faked out if you
have an open paren on the beginning of a line in the middle of the function.
This tends to cause it to compile the next function instead.  It should probably
barf if the bounds it ends up finding do not include point.

Moon@MIT-AI 11/10/79 00:35:31
To: (BUG ZWEI) at MIT-AI
In system 20.2 on CADR-2.

The "-*- base:" attribute is not treated like the package.  If you setq it
it does not get put back.

GLS@MIT-AI 11/08/79 16:27:14
To: (BUG ZWEI) at MIT-AI
In the version of ZWEI on system 20.3, with microcode 604, on LISP Machine Seven:

If you have a large region underscored near the end of the buffer,
such that the entire region and the end of the buffer are on the screen,
then kill the region (C-W), so that the bit of text after the region
is simply moved upward on the screen, then the underlining is not
completely erased from the screen.


Moon@MIT-AI 11/05/79 17:41:19
To: (BUG ZWEI) at MIT-AI
In Text mode and Bolio mode, lines beginning .defxxxx should be recognized
as function definitions for purposes of m-.

Moon@MIT-AI 11/05/79 15:56:18
To: (BUG ZWEI) at MIT-AI
^X^I (COM-INDENT-RIGIDLY) gets an error if given a negative argument and
some line in the region is shorter than that.  It should check and never remove
more indentation than the line has.

Date: 5 NOV 1979 1148-EST
From: Moon at MIT-AI (David A. Moon)
Subject: Suggestion
To: (BUG EMACS) at MIT-AI, (BUG ZWEI) at MIT-AI

^X4, if followed by an otherwise illegal character that has some "bucky-bits" on,
could execute that character "in the other window", passing on the numeric argument,
and doing prefixes.  This would be useful for e.g. beginning-of-defun.

Date: 2 NOV 1979 1445-EST
From: GLS at MIT-AI (Guy L. Steele, Jr.)
To: (BUG ZWEI) at MIT-AI
CC: GLS at MIT-AI, (BUG EMACS) at MIT-AI

In the version of zwei on system 20.2, with microcode 593, on LISP Machine Two:

I'd like to plump again for a command which I find incredibly useful:
^R Stack List Vertically (in AI:GLS;.EMACS >).  The list following . is
ground just at that one level; that is, newlines are inserted between
every S-expression in the list except the first and second, and all
the new lines are indented properly.  With a ^U argument, a newline
is put between the first and second S-expressions as well, thus yielding
miser format.  Thus if . is at the "." below,

	(this is a .(super gross crock fellows))

then the command without an argument yields

	(this is a (super gross
                          crock
                          fellows))

and with a ^U yields

	(this is a (super
                     gross
                     crock
                     fellows))

It is more powerful than C-M-Q and less so than C-M-G, and I use it all
the time.  I wish it were in ZMACS (and standard in EMACS).  I put it on
C-M-O, moving ^R Split Line to M-O (which makes more sense anyway, as
it is a "line" operation more than a "list" operation).  I suggest that
ZMACS' This Indentation be moved from M-O to, say, C-Linefeed.


GLS@MIT-AI 11/01/79 11:06:45
To: (BUG ZWEI) at MIT-AI
CC: GLS at MIT-AI
In the version of ZWEI on system 20.3, with microcode 600, on LISP Machine One:
(1) C-M-Q is not consistent with EMACS in its treatment of comments.
In the case:

(DEFUN BLAG (X Y)
       (DO-HAIR)				;HAIR is so hairy that it takes a
						; two-line comment to explain it
       (DO-MORE-HAIR))

if you are before the (DEFUN and type C-M-Q, this happens:

(DEFUN BLAG (X Y)
       (DO-HAIR)				;HAIR is so hairy that it takes a
       ; two-line comment to explain it
       (DO-MORE-HAIR))

In EMACS, Indent Comment is called on each line if the line is changed so that
you can't get screwed this way.

(2) C-M-Tab should be Indent for LISP always, even in non-LISP modes (indeed,
especially in such modes, for then Tab itself does not do that).  I was annoyed
by this in reporting bug (1).


Moon@MIT-AI 10/31/79 21:29:47
To: (BUG ZWEI) at MIT-AI
In system-20, meta-. of a definition in a killed buffer reads the damned
file in again and recreates the buffer.  Such definitions should be purged
when the buffer is killed.

GLS@MIT-AI 10/31/79 18:14:02
To: (BUG LISPM) at MIT-AI, (BUG ZWEI) at MIT-AI
CC: GLS at MIT-AI
In system 20.2, with microcode 593, on LISP Machine Two:
The grinding algorithms used by C-M-G and C-M-Q ought to be consistent.
(And NEITHER of them does what I want to be done with DEFUN,
namely just the obvious dumb thing.  Bah, humbug.)


GLS@MIT-AI 10/30/79 16:54:46
To: (BUG ZWEI) at MIT-AI
CC: GLS at MIT-AI
In the version of ZWEI on system 20.2, with microcode 593, on LISP Machine Eight:
The command C- and M- are Evaluate Defun and Evaluate Defun Verbose.
(1) The documentation is the same for both of them.  There is no clue
as to what the distinction is.
(2) The completing reader seems not to work when one string is
a proper prefix of another.  In this case, I cannot get it to
understand that I want precisely "Evaluate Defun", because at that
point there are two valid completions.


AGRE@MIT-AI 10/26/79 18:35:53
To: (BUG ZWEI) at MIT-AI
Under system 20.3 on CADR-1, M-X Query Replace has the bug that if the first
occurrance of the string to be replaced does not fall on the current screenful,
the screen window is not moved to include it, so that the cursor stays where
it is and the machine does a TYI with you not being able to see what string
you're being queried about.  Is this bug a feature?   - Phil

gls@MIT-AI 10/26/79 13:34:47
To: (BUG ZWEI) at MIT-AI
CC: GLS at MIT-AI
In the version of ZWEI on system 20.2, with microcode 593, on LISP Machine Seven:
(1) Many commands, like Delete Forward and Forward, fail to have "Character"
in their names.  Hence M-X Apropos Char fails to find such commands.  I think
the names should try to be as complete as possible, rather than short, for
the sake of Apropos.
(2) There should be a command, findable via HELP, that will read a key or
a command character and create a buffer with the code for that command in
it, so a hacker can find out exactly what it does.


gls@MIT-AI 10/26/79 13:31:00
To: (BUG ZWEI) at MIT-AI
CC: GLS at MIT-AI
In the version of ZWEI on system 20.2, with microcode 593, on LISP Machine Seven:
I am only semi-impressed with the treatment by the TAB command
of (DEF... forms.  When I type "(DEFSTRUCT (FOO)<lf>(BAZ 0)<lf>QUUX" I get

(DEFSTRUCT (FOO)
           (BAZ 0)
  QUUX

which is decidedly marginal.  Suggestion: make C-TAB be "^R Indent for LISP,
and don't be so damn clever".  In this way if it is outsmarting itself you
can easily recover.


Henry@MIT-AI 10/25/79 22:17:17 Re:  suggestion, if it doesn't already exist.
To: (BUG ZWEI) at MIT-AI
How 'bout in the mode line a new item -*- Eval: (do-something) ; -*-
as a general procedural hook so that you can do anything when reading in a
file, like read abbrevs, load other files, set base to roman ....

Also, as a matter of personal preference, I don't like TABS in my files
since they violate the "what you see is what you get" principle -- They
look like spaces and confuse me when I do Control-F's.
So how 'bout a switch which tells Zwei to use spaces instead of tabs.
Or should I just redefine Zwei's indenter to do this?


DHD@MIT-AI 10/25/79 21:32:16
To: (BUG ZWEI) at MIT-AI
In zwei (text-fill-abbrev), if you try to tab past the last tab stop, the error message
"Negative array size of -87 illegal" results. 
	

Henry@MIT-AI 10/24/79 22:28:04 Re:  Control-X G
To: (BUG ZWEI) at MIT-AI
Try typing:
foo
foo

Mark those two lines, then Control-X X 1, 
then Control-X G 1.


Henry@MIT-AI 10/24/79 00:34:36
To: (BUG ZWEI) at MIT-AI
Control-X G (Insert q-register) seems to be broken. 
How 'bout string-named q-registers instead of character-named
q-registers for this command?


Moon@MIT-AI 10/21/79 05:19:26
To: (BUG ZWEI) at MIT-AI
Typing ^XB <return> then typing ahead c-minus m-R before the display
finishes gets you into the fucked state where the display is in
a different buffer than the selected one.  This is in system 20.2.

MOON@MIT-MC 10/21/79 05:09:25
To: (BUG zwei) at MIT-AI
CC: Katsu at MIT-AI
KATSU@MIT-AI 10/20/79 12:55:30
To: (BUG LMMAN) at MIT-AI
I think zwei should have "auto save mode" as soon as posible.
Because funny bugs often force me to do boot strap,
and the contents in the buffer go away.



PAE@MIT-MC 10/20/79 12:51:15 Re: ^x-3
To: (BUG ZWEI) at MIT-MC
^x-3 does not select either window as the current window; I could
not find any way to select either window other than thru the mouse.

jerryb@MIT-AI 10/20/79 01:29:07
To: (BUG ZWEI) at MIT-AI

The the variable zwei:*lisp-defun-indentation* still exist and do what it suggests
it should do?  I have it set to 2 and it gets an error when it trys to be used.


PAE@MIT-AI 10/19/79 05:29:23 Re:  going into 2-window mode
To: (BUG ZWEI) at MIT-AI
how can you select which window to go to when you type
^x-2 WITHOUT the mouse?

GLS@MIT-AI 10/18/79 16:57:42
To: (BUG ZWEI) at MIT-AI
CC: GLS at MIT-AI
In system 20.2, with microcode 593, on LISP Machine Eight:
[1] APROPOS of "DOC" lists "Document Completing Read" as a command.
    However, attempting to use it fails, as the completing reader
    itself claims it does not exist.  Typing Meta-X D ? lists
    four possible completions, none of which is "Document Completing
    Read".

[2] Meta-X Set Fonts <return> <return> beeps and gives an error message.
    [a] The error message is misspelled ("represetation").
    [b] The error message is wrong or misleading or something
        (should or should not one type the outer parentheses, or
        does it matter?).
    [c] The action the error message asks you to take doesn't work
        if you do what it tells you to do.  Instead, you must first
        type Meta-X Set Fonts <return> once again.
    [d] The error message is in the echo area (is this normal on ZWEI?).
    [e] The error message remains around and does not disappear if you
        continue to edit.


GLS@MIT-AI 10/18/79 16:57:42
To: (BUG ZWEI) at MIT-AI
CC: GLS at MIT-AI
In system 20.2, with microcode 593, on LISP Machine Eight:
[1] APROPOS of "DOC" lists "Document Completing Read" as a command.
    However, attempting to use it fails, as the completing reader
    itself claims it does not exist.  Typing Meta-X D ? lists
    four possible completions, none of which is "Document Completing
    Read".

[2] Meta-X Set Fonts <return> <return> beeps and gives an error message.
    [a] The error message is misspelled ("represetation").
    [b] The error message is wrong or misleading or something
        (should or should not one type the outer parentheses, or
        does it matter?).
    [c] The action the error message asks you to take doesn't work
        if you do what it tells you to do.  Instead, you must first
        type Meta-X Set Fonts <return> once again.
    [d] The error message is in the echo area (is this normal on ZWEI?).
    [e] The error message remains around and does not disappear if you
        continue to edit.


Moon@MIT-AI 10/16/79 13:37:58
To: (BUG ZWEI) at MIT-AI
The auto indentor doesn't know about DEFFLAVOR

Moon@MIT-AI 10/16/79 05:58:50
To: (BUG ZWEI) at MIT-AI
The c-Q commands for sentences are amazingly broken.  ^QTS sometimes duplicates
the second sentence rather than interchanging the two, and sometimes just beeps.
This may depend on whether what follows the period is space, cr, or end of buffer.
This is in text mode.  I'm too burned-out to debug this now.  ^QRS doesn't work
either, that is, it works, but it deletes the sentence after the cursor instead
of the one before.

Moon@MIT-AI 10/16/79 05:56:55 Re: Unusability
To: (BUG ZWEI) at MIT-AI
MOUSE-INDENT-UNDER should indent the whole region if there is one,
rather than just the current line.  MOUSE-INDENT-RIGIDLY is unusable
because it is too slow (for a 20-line region).  When I
tried the command, the display was so far behind the motion of the mouse
that it appeared just to be completely random.  Possibly having speed
control like the thing that finds function names would help.


Moon@MIT-AI 10/16/79 05:52:51
To: (BUG ZWEI) at MIT-AI
COM-INDENT-RIGIDLY should not flush the region, since you frequently
want to do it several times in a row before getting the indentation right.

Moon@MIT-AI 10/16/79 01:24:45 Re: Feature Zwei
To: (BUG ZWEI) at MIT-AI
In the editor top-level, h-. should redisplay the last result in decimal
and h-8 should redisplay it in octal.

Moon@MIT-AI 10/13/79 23:11:23
To: (BUG ZWEI) at MIT-AI
There should be a m-x Describe Flavor analogous to Describe Class

ED@MIT-AI 10/13/79 00:25:37
To: (BUG ZWEI) at MIT-AI
Doing M- (load "foo;bar") while in DIRED gets you a Mode Not Available from the
DIR: device.

Moon@MIT-AI 10/12/79 15:23:58
To: (BUG ZWEI) at MIT-AI
Do a meta-. defmethod (in 20.2).  It has more than a screen-full of comments and blank
lines before it, so the function definition doesn't show up at all.  Is this
easy to fix?

ALAN@MIT-AI 10/12/79 01:25:18
To: (BUG ZWEI) at MIT-AI
In case you don't know it defstruct indents like defun.

(defstruct (graph)
	   graph-nodes
   graph-frobs
   ...)

This is right for most thing that start with "def" but is a royal
pain in the ass otherwise.

Date: 9 October 1979 19:24-EDT
From: Mike McMahon <MMCM at MIT-AI>
To: JLK at MIT-MC
cc: BUG-ZWEI at MIT-AI

    JLK@MIT-MC 10/09/79 09:46:29
    Try loading a 100 block file into a single buffer.   Then try using the scroll
    bar and notice that the thing pages for about 30 secs or so (each time you
    do this).  Is this inherent or symptomatic of lossage?
this is inherent to the buffer being a linked list, you cannot do random access or
know how long it is.

JLK@MIT-MC 10/09/79 09:46:29
To: (BUG ZWEI) at MIT-AI
Try loading a 100 block file into a single buffer.   Then try using the scroll
bar and notice that the thing pages for about 30 secs or so (each time you
do this).  Is this inherent or symptomatic of lossage?


Moon@MIT-AI 10/08/79 10:38:04
To: (BUG ZWEI) at MIT-AI
Even in system 20, meta-Q while sending mail includes the "--Text follows this line--"
in the paragraph, but not the line before it.  Evidently it knows about it but
doesn't know about it correctly.

Moon@MIT-AI 10/08/79 10:34:37
To: (BUG ZWEI) at MIT-AI
In lisp mode, type (format t "~%frob
followed by control-minus meta-C.  It thinks the % is the first character
in the word, so it doesn't do anything.  I think it would be better for meta-C
to move forward until it finds the first genuine letter.

Moon@MIT-AI 10/08/79 10:20:27
To: (BUG ZWEI) at MIT-AI
If a cold-boot a system 20.0, login, type (ed), ^U^X^D  (^U^C^D actually)
the default is NIL: NIL; and indeed if I don't type an explicit device
it gets a no such device error for NIL:.  I don't think this bug is peculiar
to 20.0

ED@MIT-AI 10/06/79 22:14:30 Re: Redisplay Lossage
To: (BUG ZWEI) at MIT-AI
Whoops!.  When using an unconventional font (LMFONT;BUG, chars ABCD),
redisplay in continuation lines loses in various ways.  Fill the screen
with bugs, and type <control-L> and <control-D> to see examples.
I realize that continuation lines were not intended to be well-done
in EINE, but thought I'd mention it.

ED@MIT-AI 10/06/79 22:08:57 Re: Redisplay Lossage
To: (BUG ZWEI) at MIT-AI
When using an unconventional font (LMFONT;BUG, chars 

Moon@MIT-AI 10/06/79 02:05:44
To: (BUG ZWEI) at MIT-AI
m-X Insert File should set the mark to the other end of the file,
but not turn on the region.

Moon@MIT-AI 10/05/79 04:04:44
To: (BUG ZWEI) at MIT-AI
Close parenthesis should act like altmode to the completing reader,
at least when typing the name of a function, at least if it's not
slashified or in quotes.

Moon@MIT-AI 10/05/79 01:49:04
To: (BUG ZWEI) at MIT-AI
Minor bug.  Meta-Q mungs lines it does not change.

PAE@MIT-AI 10/04/79 06:36:07
To: (BUG ZWEI) at MIT-AI
install macro is described in the documentation but is not implemented.
can a keyboard macro presently be bound to a key?

Date: 3 October 1979 16:43-EDT
From: Mike McMahon <MMCM at MIT-AI>
To: JLK at MIT-MC
cc: BUG-ZWEI at MIT-AI

    JLK@MIT-AI 10/03/79 14:28:14
    In system 19.6 CC, with microcode 579, on LISP Machine Seven:
    Type Meta-X ? and select VIEW DIRECTORY with the mouse.  While viewing the
    directory, the mouse still thinks its selecting a command.  Seems rather
    unesthetic.
"ITEM"'s in the typeout window behave like a permanent menu.  the mouse is never
"selecting a command"; rather, so long as the list is left on the screen the
corresponding command can be called with the mouse.

JLK@MIT-AI 10/03/79 14:28:14
To: (BUG ZWEI) at MIT-AI
In system 19.6 CC, with microcode 579, on LISP Machine Seven:
Type Meta-X ? and select VIEW DIRECTORY with the mouse.  While viewing the
directory, the mouse still thinks its selecting a command.  Seems rather
unesthetic.


Moon@MIT-AI 10/03/79 10:58:49
To: (BUG ZWEI) at MIT-AI
c-X = prints the wrong X-position if there are tabs in the line.

EAK@MIT-MC 10/02/79 18:00:50
To: (BUG ZWEI) at MIT-MC
I'd like commands for moving to the beginning of the next/previous line.
Setting the goal column isn't a win, because that prevents me from
putting the up/down commands on other keys.  In EMACS I have
^N/^P	Beginning of next/previous line
^X^N/^X^P	Up/down
and I'd like to have an init file do the same for ZWEI.

MOON@MIT-MC 10/01/79 20:55:39
To: (BUG zwei) at MIT-AI
CC: PAE at MIT-MC
Amazingly enough, the code for moving backwards by characters in Zwei
was completely wrong!  I guess it isn't used much in the case where you
are going across line boundaries.  I complete rewrote it; the fixed
version will be in the next system to be installed.

PAE@MIT-AI 09/30/79 03:04:30 Re:  numeric modifiers
To: (BUG ZWEI) at MIT-AI
how come ^u^u^u^u^f immmediately followed by ^u^u^u^u^b
doesn't work?

Moon@MIT-AI 09/27/79 02:12:41
To: (BUG ZWEI) at MIT-AI
Editing the file LISPM2;GLOBAL in electric shift-lock mode is very slow.
Apparently it looks through the whole file every time a character is inserted
to see whether it is code or string.  Can't this be fixed?  This is in 19.8 on 6.

Moon@MIT-AI 09/26/79 00:48:00
To: (BUG ZWEI) at MIT-AI
At least in fundamental mode, meta-N does weird things if given a numeric
argument.  Leaves the cursor at the beginning of a line.

BAK@MIT-AI 09/24/79 17:20:49
To: (BUG ZWEI) at MIT-AI
The current way of doing EVALUATE BUFFER is to do all the reading before any of the 
evaling-printing.  There is one screw in this: When there is an unbalanced paren
somewhere in the file there is no dribble of read and evald functions to give you an 
indication of where the misbalanced paren is.  You have to search through the
entire file looking for it.  What is the argument for doing it this way instead
of the old-fashioned: read one function - eval - print  loop?  If it is not compelling
I would suggest switching back.


Date: 24 September 1979 12:01-EDT
From: Earl A. Killian <EAK at MIT-MC>
Subject:  ZWEI
To: BUG-zwei at MIT-AI

    Date: 23 September 1979 20:17-EDT
    From: Mike McMahon <MMCM at MIT-AI>
    To:   DLW at MIT-AI
    cc:   EAK
    Re:   ZWEI

            EAK@MIT-AI 09/22/79 16:03:57 Re:  ZWEI
            How do I have my LISPM init file turn on Auto Fill Mode and Word Abbrev Mode?

    you can associate minor modes with whatever major modes you want by something like
    (LOGIN-SETQ ZWEI:TEXT-MODE-HOOK '(LAMBDA () (ZWEI:TURN-ON-MODE 'ZWEI:AUTO-FILL-MODE)))

But I don't want to associate minor modes with major modes.  Do you
really mean to say that I can't have minor modes on by default?  Also,
how would I go about loading word abbrevs at login time?


Moon@MIT-AI 09/24/79 09:21:35
To: (BUG ZWEI) at MIT-AI
CC: HIC at MIT-AI
In any recent system (>= 19.5) try visiting a file on ML or MC; the buffer
name gets the machine name in it twice.  This is probably not what is intended.

Moon@MIT-AI 09/24/79 02:44:12
To: (BUG ZWEI) at MIT-AI
Renaming a buffer by using ^X^W to write out to a different file
causes "1 more definition as well" for all the definitions in
that file.  Someplace it isn't forgetting that the old file isn't
in a buffer any more.

HENRY@MIT-AI 09/22/79 01:59:12 Re:  changes to Zwei, error handler
To: (BUG ZWEI) at MIT-AI
Have there been any changes lately to Zwei or the error handler
likely to affect the editor top level? In systems >19.5 when 
you get an error in the editor top level, it simply loops and has
to be warm booted. Sometimes even cold booted. 

Moon@MIT-AI 09/21/79 10:19:48 Re: P.S.
To: (BUG ZWEI) at MIT-AI
In 19.7 on cadr-6, methods accumulate multiple entries in the completion aarray
so that yoy get silly messages like "4 more definitions as well" for something
that is only defined in one place.  This happens only for methods, not for
normal functions.
---
No, actually the bug is that all methods for a class look the same, even though
completion does the right thing, so the "4" is 1- the number of methods for
that class (flavor).

Moon@MIT-AI 09/21/79 10:18:18
To: (BUG ZWEI) at MIT-AI
In 19.7 on cadr-6, methods accumulate multiple entries in the completion aarray
so that yoy get silly messages like "4 more definitions as well" for something
that is only defined in one place.  This happens only for methods, not for
normal functions.

Moon@MIT-AI 09/21/79 08:16:52
To: (BUG ZWEI) at MIT-AI
Top-line search frequently doesn't put have any effect on where the window goes.
This is in 19.7 on CADR6

Moon@MIT-AI 09/17/79 10:07:52
To: (BUG ZWEI) at MIT-AI
Do ^XM inside DIRED and watch it lie in the modeline "(Q to exit)".
This probably requires some reorganization to fix.

DLW@MIT-AI 09/17/79 05:19:31
To: MOON at MIT-AI, (BUG ZWEI) at MIT-AI
    Moon@MIT-AI 09/17/79 05:02:27
    I think COM-INDENT-RIGIDLY should probably not flush the region, since
    often I do it several times before I get it right.

Better, it should be one of those commands that works even if there is
no region provided the previous command was an Indent Rigidly.  If you
do an Indent Rigidly and then start control-Fing, the underlining would
look obnoxious.  Maybe Uppercae Region and Lowercase Region should do
this too, come to think of it.  Actually, maybe region commands should
always work if the lst command was a region command (other than delete
region), as the user can be assumed to know where the region is and so
not lose. 

Moon@MIT-AI 09/17/79 05:02:27
To: (BUG ZWEI) at MIT-AI
I think COM-INDENT-RIGIDLY should probably not flush the region, since
often I do it several times before I get it right.

Moon@MIT-AI 09/17/79 04:42:18
To: (BUG ZWEI) at MIT-AI
MMcM said there would be a function called BUG, but it stil doesn't seem
to be here in system 19.  But maybe I'm just confused.

The actual bug is that control-top-A doesn't look for arglist of a macro,
although in fact they have them.

RG@MIT-AI 09/16/79 05:04:26
To: (BUG ZWEI) at MIT-AI
  IF THE MODE LINE IS SCREWWED UP, ZWEI FREQUENTLY BOMBS
AND REFUSES TO READ THE FILE AT ALL.  (FOR EXAMPLE, HAVING
A COMMA WHERE A SEMI-COLON SHOULD BE BETWEEN TWO PROPERTIES.).
IT SHOULD HAVE AN ERRSET AND WARN THE USER, BUT READ THE
FILE ANYWAY.

RICH@MIT-AI 09/11/79 11:44:26 Re:  Hacking paragraphs in text mode
To: (BUG ZWEI) at MIT-AI
Meta-H (Mark Paragraph) has a bug. In the following
situation, it includes the .PARA as part of the paragraph,
which means it gets munged in by Meta-Q (Fill Paragraph):

.PARA
<some text>
.END_PARA

Also, I think it would be much more useful if Meta-Q removed
extra spaces like it does now in EMACS.  It is easy to accidentally
introduce such spaces in the midst of editting, and text
processors such as TJ6 and R do not remove them, so one of
the major reasons I fill a paragraph is to get rid of extra
spaces.

	Thank you, Chuck Rich.

RWK@MIT-AI 09/09/79 19:42:25
To: (BUG ZWEI) at MIT-AI
In system 18.3 on CADR-8, if you do ^X^B while in a buffer you created,
and you mouse the BUFFER-1 shown, and select it on the little menu that
comes up, and then do a ^X^B, you will find that while you are now in
BUFFER-1, it has dissapeared from the ^X^B list, with only your other
buffer remaining.  Switching back to your other buffer and doing ^X^B
does not cause it to return.


DLW@MIT-AI 09/02/79 18:53:34
To: MOON5 at MIT-AI, (BUG ZWEI) at MIT-AI
Yeah, I guess the EINE dir might as well be deleted at this point,
as far as I am concerned.  Make sure there isn't anything still
to be converted or anything...

MOON5@MIT-AI 09/01/79 21:41:31
To: (BUG ZWEI) at MIT-AI
CC: DLW at MIT-AI
I moved the file EINE;PL1DCL to ZWEI;.  The rest of the files
look useless; should the directory be trashed?

Moon@MIT-AI 08/31/79 20:36:28 Re: Post script
To: (BUG ZWEI) at MIT-AI
m-X Edit Callers gets "Can't find a definition of class-message-METHOD" if a
method is among the callers, at the time you control-. to it.  Maybe this
is hard to fix.

The bug only shows up when the method has been redefined.  It first barfs failing
to find the symbol, then later it finds the method.  So the bug is that superseded
methods don't have source but are interned.

Moon@MIT-AI 08/31/79 20:33:20
To: (BUG ZWEI) at MIT-AI
m-X Edit Callers gets "Can't find a definition of class-message-METHOD" if a
method is among the callers, at the time you control-. to it.  Maybe this
is hard to fix.

Date: 30 August 1979 13:18-EDT
From: Mike McMahon <MMCM at MIT-AI>
To: MOON at MIT-AI, BUG-ZWEI at MIT-AI

    Moon@MIT-AI 08/30/79 07:10:01
    To: (BUG ZWEI) at MIT-AI
    In 18.3 it is still the case that the thing which isolates the region of the
    buffer for a defun doesn't notice (local-declare <mumble> immediately before the 
    (defun
it certainly tries to, can you give an instance that loses?

Moon@MIT-AI 08/30/79 07:40:05
To: (BUG ZWEI) at MIT-AI
In 18.3, if you do a meta-. that switches buffers then a c-U c-space, it sends
you to strange and exotic places rather than back where you came from.

Moon@MIT-AI 08/30/79 07:10:01
To: (BUG ZWEI) at MIT-AI
In 18.3 it is still the case that the thing which isolates the region of the
buffer for a defun doesn't notice (local-declare <mumble> immediately before the 
(defun

Moon@MIT-AI 08/30/79 05:58:18
To: (BUG ZWEI) at MIT-AI
In 18.3 creating an editor window with the mouse causes ZWEI:TELL-EDITOR-TO-REDISPLAY
to be called on NIL instead of a window, in an unselected process, causing an error.
This happens whether or not you have already used the editor, and before it asks you
for the rectangle to put the window in.

cwh@MIT-AI 08/29/79 23:15:12
To: (BUG ZWEI) at MIT-AI
I think an option in the "-*-" line to turn on Electric Shift Lock Mode
would be a win.


JIS@MIT-AI 08/27/79 09:16:56
To: (BUG ZWEI) at MIT-AI
I marked a region using ^<space> and when I used ^W I got the error
some argument to ARRAY-LEADER ("" NORMAL #<ART-Q-15 Gubbish>) was of the wrong type

in ZWEI:BP <- ZWEI:COM-KILL-REGION ...

also View Directory does not restore the entire screen after you quit out. The problem
appears to be that View Directory is clearing the rest of the screen after the view
dir, but then only restoring that part of the screen actually typed over.

Both of these bugs are in system 18.2

				-Jeff

CWH@MIT-MC 08/26/79 19:36:28
To: MMCM at MIT-AI
CC: (BUG ZWEI) at MIT-MC
Date: 26 August 1979 13:47-EDT
    From: Mike McMahon <MMCM at MIT-AI>

        cwh@MIT-AI 08/26/79 02:58:13
        To: (BUG ZWEI) at MIT-AI
        Query replace seems to be broken in 18.1
    Without the vaguest specification of how it loses, we have very little hope of fixing it,
    knowing if it has already been fixed, or doing much of anything about it.

The problem occurs when the first occurrence of the thing you're going to replace
occurs on the next page (i.e. it isn't currently visible).  The redisplay doesn't happen
when it should, i.e. it leave you on the first. page.

I found another bug while I was at it.
Get an empty buffer.  Type:
FOO C-N C-SPACE C-P C-W


Date: 26 August 1979 13:47-EDT
From: Mike McMahon <MMCM at MIT-AI>
To: CWH at MIT-MC
cc: BUG-ZWEI at MIT-AI

    cwh@MIT-AI 08/26/79 02:58:13
    To: (BUG ZWEI) at MIT-AI
    Query replace seems to be broken in 18.1
Without the vaguest specification of how it loses, we have very little hope of fixing it,
knowing if it has already been fixed, or doing much of anything about it.

Moon@MIT-AI 08/26/79 13:36:41 Re: Obscure files/buffers bug
To: (BUG ZWEI) at MIT-AI
If you have a non-file buffer, and do a ^X^V, it doesn't correctly change
it into a file-type buffer.  m-X Save does not offer to save that buffer
(although ^X^B shows it with a star) and ^X^W works but prompts with a random
filename other than the name of the buffer.

This commonly happens to me when it dies while trying to read in a file
because the chaos net went down and the chaos net software didn't detect
the error right.

cwh@MIT-AI 08/26/79 02:58:13
To: (BUG ZWEI) at MIT-AI
Query replace seems to be broken in 18.1


Date: 23 AUG 1979 1702-EDT
From: MOON at MIT-MC (David A. Moon)
Subject: Point Piddle.
To: RWK at MIT-MC, (BUG ZWEI) at MIT-MC

    RWK@MIT-MC 08/23/79 12:43:13 Re: Point Piddle.
    To: (BUG ZWEI) at MIT-MC
    Just a random thought prompted EMACSing...
    How about remembering the ZWEI equivalent of FS WINDOW as well as point?
I think it does.  If it doesn't, it certainly should.

RWK@MIT-MC 08/23/79 12:43:13 Re: Point Piddle.
To: (BUG ZWEI) at MIT-MC
Just a random thought prompted EMACSing...
How about remembering the ZWEI equivalent of FS WINDOW as well as point?
If you were editing a function definition, the function will be at the
top of the screen, that's generally a good place to window when you pop
the point too.  Also, I make a lot of use of <arg>^L to set my window
apropriately.  While this matters a lot less if you have a reasonable
screen size, perhaps it would also be worthwhile on the LISPM?


Moon@MIT-AI 08/23/79 04:30:43 Re: PS to previous message about popping up leaving nothing selected
To: (BUG ZWEI) at MIT-AI
This happens with either menus or text windows, when popped up over the
blank window, and doesn't happen when popped up over just the editor window.
The right way to fix it is probably to give the blank window a way to refuse
to be selected so that WINDOWS-AUTOEXPOSE will find someone else to select.
Alternatively the blank window could pick an editor window and select it
when someone sends it a select message, which would be a kludge.

Moon@MIT-AI 08/23/79 04:25:24
To: (BUG ZWEI) at MIT-AI
The reason for the bug where when you use a pop-up text window over the editor
when it pops down there is no selected window, is because the blank window tends
to get on the front of exposed windows and therefore gets selected, which it
just ignores.  I guess I'll change the pop up text class to do whatever the pop up
menu class does.

Moon@MIT-AI 08/23/79 01:46:50
To: (BUG ZWEI) at MIT-AI
In system 18 zwei:multiple-value-funcall and zwei:multiple-value-lexpr-funcall
should be no longer necessary.

RWK@MIT-MC 08/23/79 00:27:57
To: (BUG ZWEI) at MIT-MC
CC: BAK at MIT-MC, MOON at MIT-MC
Moon's Second-level point PDL sounds useful.  I also think a menu would be
useful for the main point PDL as well as the second-level one.  However,
I also find it useful to name arbitrary points in my buffer with more permenent
names than the second-level mark pdl would provide.  In my EMACS I've long
had the capability to mark a single point in my buffer with a single-character
mnemonic, or alternatively with a long name, and then return to that point
by name.  I think this capability along with a menu would be very useful.


MOON@MIT-MC 08/23/79 00:04:41 Re: COM-EDIT-DEFINITION extension
To: MMCM at MIT-AI, BAK at MIT-AI, (BUG ZWEI) at MIT-AI
Possibly what is called for is a "second-level" point-pdl, which
doesn't accumulate garbage due to local editing; commands like search
and region-marking would use the first-level point-pdl, edit-definition
and friends (and an explicit command) would push on both.  Then a
command to pop the second-level point pdl (as a ring rather than as
a stack so you don't lose anything) would get you back to the last
important place.  There should also be a command to get you a menu of
second-level point-pdl entries, with each one showing the line point is
on and a name such as the arg to meta-.

Does this sound reasonable to anyone?

Date: 22 August 1979 17:05-EDT
From: Mike McMahon <MMCM at MIT-AI>
Subject:  COM-EDIT-DEFINITION extension
To: BAK at MIT-AI, BUG-ZWEI at MIT-AI

this is definitely a useful thing to be able to do, but i am not sure this is the right
way to do it.
minor problems with the way you have it are that the list grows and grows and should probably
have a maximum size; typing errors also get pushed onto the list, even though the call
to EDIT-DEFINITION bombs.
it is also a fair amount of overhead to bring up the mini-buffer when you only want to type CR
at it (you already have the right idea of what the default will be).
also this does not save functions that you got to from edit callers, function apropos and
friends.
i think it might be much better to orient this around the point pdl, with some command to go to
the last position in that and push point.
does anyone else have ideas?

AGRE@MIT-AI 08/22/79 16:28:24 Re: c-t-e and Evaluate Region
To: (BUG ZWEI) at MIT-AI
blow up when the cadr of the form being evaluated is not an atomic symbol
when it tries to fiddle with the plist of the cadr of the form.  Apparently
it assumes that c-t-e and Evaluate Region (and probably some others)
assume that the s-expression being evaluated is the definition of something,
like (defun atm ...) or (setq atm ...) but this is not the case with
(load "ai:dir;fn1 fn2") or (set-frob-parameter 4.7).

BAK@MIT-AI 08/22/79 03:00:21 Re:  COM-EDIT-DEFINITION extension
To: (BUG ZWEI) at MIT-AI

I have a suitably hacked up version of this function that keeps a stack of 
definitions that it previously looked at and uses this to set the default
argument.  If no argument is given to meta-. , it goes to the previous definition
and pops the stack.  Frequently I am looking at the definition of a function
and need to see the definition of a function it calls but then want to go back
to the original function.  This feature allows this to happen with no typing of
function names.  To make this work requires only a couple lines of code (see
BAK;ZFIX > ) and might be put into standard ZWEI.


Moon@MIT-AI 08/21/79 00:15:29
To: (BUG ZWEI) at MIT-AI
COM-EVALUATE-DEFUN in the mini-buffers get a SUBSCRIPT-OOB error for the usual
reason.

cwh@MIT-AI 08/20/79 19:47:04
To: (BUG ZWEI) at MIT-AI
How about giving LET* the same indentation characteristics as LET?


Moon@MIT-AI 08/20/79 04:13:44
To: (BUG ZWEI) at MIT-AI
In 17.7 at least, the blank window does not come up (at the bottom of the screen)
if you select the editor with the mouse.

RMS@MIT-AI 08/19/79 03:23:43
To: (BUG ZWEI) at MIT-AI
^U^Y gets the fourth thing on the kill rings
instead of yanking and leaving point before.


ZVONA@MIT-AI 08/18/79 18:38:53
To: (BUG ZWEI) at MIT-AI
If one tries to m-. a function in one's init file, one looses, because the file uname >
is snarfed rather than uname LISPM.

RMS@MIT-AI (Sent by RMS0@MIT-AI) 08/17/79 01:30:27
To: (BUG ZWEI) at MIT-AI
It might be good for Altmode in M-X to terminate the command
as well as completing.

ACW@MIT-AI 08/16/79 22:02:24
To: (BUG ZWEI) at MIT-AI

   '(foo ...  <linefeed>

  indents wrongly.  It positions the cursor exactly under the quoted
open paren.  Note that the indenter does not lose count, it simply decides
to indent by zero.  Does somebody think this is the right thing or is it a real bug?
   ---Wechsler


Moon@MIT-AI 08/16/79 17:28:52
To: (BUG ZWEI) at MIT-AI
m-x Edit Callers should sort the callers by source file.

BAK@MIT-AI 08/16/79 13:05:53
To: (BUG ZWEI) at MIT-AI
The various "Evaluate" commands in Zwei (evaluate region, evaluate defun) have
an erratic behaviour on CADR4, system 17.7.  The following forms cause errors
when you try to evaluate them in this manner: (+ 1 2) and (let ((a 1) (b 2)) (+ 1 2)) .
I have one (rather more complicated) form that causes zwei to get into a state in
which the machine is waiting for input, yet zwei does not respond to any characters
typed.

HIC@MIT-AI 08/15/79 23:22:16
To: (BUG ZWEI) at MIT-AI
When you leave the editor in two-window mode, and then reenter it, it should leave
you in the same window that you were in before you exited, not always
the upper window.


ZVONA@MIT-AI 08/12/79 22:40:27
To: (BUG ZWEI) at MIT-AI
View Directory seems to print the wrong default -- if you are editing foo;bar and do
Vi D you get a default of foo; if you over ride this and view baz; then if you immediately
Vi D again the printed default is foo but the actual default is baz.

ZVONA@MIT-AI 08/12/79 21:21:13
To: (BUG ZWEI) at MIT-AI
doing a double-right "new" and then an "edit" fails in sys 17.7:
ZWEI:TELL-EDITOR-TO-REDISPLAY passes ARRAY-LEADER a NIL which it shouldn't oughta. Also,
there is this curious (though not particularly bothersome) feature whereby moving the mouse
arond quickly causes a lage cruciform blinker to appear momentarily. I've no idea what this
might indicate.

Moon@MIT-AI 08/12/79 12:06:22
To: (BUG ZWEI) at MIT-AI
The fucking bug where the typeout window flushes the blinkers of the editor
window is still there.  I didn't warm boot the machine.  Possibly I typed (ed)
from a break out of the editor.

Moon@MIT-AI 08/12/79 11:24:46
To: (BUG ZWEI) at MIT-AI
CC: RMS at MIT-AI
System 17.6 still has a bug where sometimes when you hit line feed after typing
in the first line of a defun you get "2 called as a function" in the lisp indent
code.

Hmm, this may be an unannounced incompatibility with my init file.  If so
please announce or fix it.

Moon@MIT-AI 08/12/79 11:24:12
To: (BUG ZWEI) at MIT-AI
CC: RMS at MIT-AI
System 17.6 still has a bug where sometimes when you hit line feed after typing
in the first line of a defun you get "2 called as a function" in the lisp indent
code.

MOON@MIT-AI 08/11/79 03:02:26
To: (BUG ZWEI) at MIT-AI
The :WAIT-FOR-CHOICE method in WINTYP probably doesn't work in system 17.
It probably also isn't needed in that system.  Someone who's on a Lisp
machine should look into this.

RMS@MIT-AI 08/11/79 02:10:26
To: (BUG ZWEI) at MIT-AI
Electric Shift-Lock should not be automatically local.
It should be possible to make it local, but if that is not
explicitly done in a certain buffer then it should be global.
I often turn it on after reading in a few files, and when I do
that I want it to apply to all files with suitable major modes.


DANNY@MIT-AI 08/10/79 21:41:38
To: (BUG ZWEI) at MIT-AI
In PL1 mode, ZWEI doesn't seem to know about ending comments.
Either it doesn't realize that comments need a terminator in PL1,
or else M-; has not been fixed to insert the terminator as well as the start.


JIS@MIT-AI 08/10/79 13:05:25
To: (BUG ZWEI) at MIT-AI
CC: (BUG LISPM) at MIT-AI
I have found an incompatability with the ZEI in system 17.
My init file binds zwei:*lisp-defun-indentation* to 7.
This results in the new ZWEI blowing out complaining that
7 was called as a function. I went munging through the code and
changed *lisp-defun-indentation* to be (0 7) this did the correct
thing.

			-Jeff

RICH@MIT-AI 08/08/79 19:07:05 Re:  Various problems with KBD macros
To: (BUG ZWEI) at MIT-AI
(1) the kbd macro query feature is in some wierd state.  According
    to apropos there is a command Kbd Query, but you can get
    at it by Meta-X, or ^XQ.  ^XQ says it is not implemented yet --
    if that is just the answer, then ok.

(2) If you type ^X) when you are not in macro level, you get
    a Lisp error, when you should probably just get a beep.  This
    is compounded by the fact that the footer line is not properly
    cleared when you exit from a kbd macro by control-G or
    other error.

Date: 6 August 1979 16:38-EDT
From: Mike McMahon <MMCM at MIT-AI>
Subject:  Feature
To: MOON at MIT-AI, BUG-ZWEI at MIT-AI

    Date: 08/05/79 01:02:57
    From: Moon at MIT-AI

    Perhaps if there is a region, c-t-E (and for symmetry c-t-C) should do that region
    instead of the current "defun"
agreed, i thought of this once, but never implemented it.

Moon@MIT-AI 08/05/79 01:02:57 Re: Feature
To: (BUG ZWEI) at MIT-AI
Perhaps if there is a region, c-t-E (and for symmetry c-t-C) should do that region
instead of the current "defun"

Moon@MIT-AI 08/04/79 23:03:19
To: (BUG ZWEI) at MIT-AI
Entering the editor in the case where it brings up saved bits should still
do a dis-text rather than a dis-none, in case the contents of the displayed
buffer was changed by an outside agency.  I have a program which does this.

ZVONA@MIT-AI 08/04/79 07:19:24
To: (BUG ZWEI) at MIT-AI
in sys 15.3, zwei can get stuck with zwei:write-mode-line passing zwei:tv-make-stream-internal
some random cons that my program produced. I take it that this is because zwei:display-mode-
line nreverses the list and some pointers get scrambled somehow.

RMS@MIT-AI 08/04/79 03:54:28
To: (BUG ZWEI) at MIT-AI
C-M-& loses if you put, in an empty buffer, just
(COND (FOO  and then do it.  I have just finished converting
C-M-& to use the new Lisp parsing code, but that seems to work,
and this bug is present in the earlier version of C-M-& as well.


TFT@MIT-AI 07/31/79 13:56:59
To: (BUG ZWEI) at MIT-AI
Any chance of getting the paren follower to better understand (I.e. totally ignore)
semicolons?  (At the moment, it considers parens to the right of semis to be part of
the form on the left. This leaves me doing "manual" paren following.(I suppose I could
learn not to use parens in my comments, but it's so much fun.( Also, sometimes it's
even useful, e.g. giving an example of how a newly def'd macro is to be used. (If you
think this is a lot of parens, just be glad I'm not doing any more. (That reminds me
of  "Knock, knock" "Who's there?" "Orange."  etc. Oh well, enough.) Oh well, enough.)
 Oh well, enough.) Oh well, enough.) Oh well, enough.)

RMS@MIT-AI 07/29/79 03:26:45
To: (BUG ZWEI) at MIT-AI
Is it possible to make the matching paren blinker
visible ONLY while ZWEI is waiting for input?

RMS@MIT-AI 07/29/79 03:05:34
To: (BUG ZWEI) at MIT-AI
Can intervals, buffers and windows be made named structures?

RMS@MIT-AI 07/29/79 01:47:22
To: (BUG ZWEI) at MIT-AI
The C-M-H command when given on a function at the top of a page
should include in the region the CRLF after the formfeed
(though not the formfeed itself).


RMS@MIT-AI 07/29/79 01:11:07
To: (BUG ZWEI) at MIT-AI
Electric shift-lock mode should not apply inside minibuffers,
at least not for minibuffers for Query Replace.


Moon@MIT-AI 07/28/79 02:05:14
To: (BUG ZWEI) at MIT-AI
In system 16.1 I somehow got something on the point pdl which pointed
to a different buffer than the one I was in.  Going there partially selected
that buffer and partially didn't, causing errors at various odd places.
Too bad I can't be more specific.

RMS@MIT-AI 07/25/79 00:43:06
To: (BUG ZWEI) at MIT-AI
Auto fill space in ZWEI loses: if I have a line that is a little too long
and ends with 'point"to', with the cursor between "point" and the '"',
and "point" fits within the fill column but the '"to' does not,
then when I type space it moves 'point"to' to the next line and leaves
the cursor at the end of the original line, where used to be the beginning
of "point".  It appears that auto-fill processing precedes the insertion of the space.
Why?


KEN@MIT-AI 07/24/79 17:21:16 Re: Read Tags File
To: RICH at MIT-AI
CC: (BUG ZWEI) at MIT-AI
I had the same problem but I theorized that ^r find tag (meta-. in EMACS)
just doesn't exist in ZWEI.   Perhaps the most useful thing would be
to find tags and then failing that to run edit function? and put this on meta-.

RICH@MIT-AI 07/24/79 12:43:02 Re:  Read Tags File
To: (BUG ZWEI) at MIT-AI
Thanks to whoever worked on Read Tags File to make
it work for LISP tags files.  However it still
does not work for text (R) tags files.  It
reads them in without complaining, but Meta-.
(Edit Definition) can't seem to find the tagged
items.  For example, try RICH;.X TAGS, which
is the tags for my thesis draft (this allows
me to jump around between sections, tables,
etc. between files).

P.S.  Perhaps the Edit Definition command
should type out the prompt "Edit Definition:"
rather than "Edit Function:" as it does now.
(is this a clue to what the bug is?)

	Thank you, Chuck Rich.

Moon@MIT-AI 07/24/79 00:45:34 Re: More babbling about speed
To: HIC at MIT-AI, RMS at MIT-AI, (BUG ZWEI) at MIT-AI
I changed QFILE not to update the who-line for every packet on read
and write; instead the who-line is updated when the process goes blocked.
This seems to make reading in CHSNCP 10 seconds or so faster, although
there's enough variance in the times that it's hard to be accurate.
The who-line still updates every 2 or 3 seconds which seems quite adequate.

Henry@MIT-AI 07/24/79 00:01:42
To: (BUG ZWEI) at MIT-AI, (BUG WORDAB) at MIT-AI
It would be nice if Save all Files offered to save your word
abbrev file if any new abbrevs have been defined since the
abbrev file was last written.

Moon@MIT-AI 07/23/79 23:35:36
To: (BUG ZWEI) at MIT-AI
In system 15.3 CC on CADR6, in Text Mode, c-; and m-N put in a comment
which c-m-; will not take out.

RMS@MIT-AI 07/22/79 16:06:02 Re: EMACS C-N and C-P.
To: AGRE at MIT-AI, (BUG ZWEI) at MIT-AI
There has been no change in these commands in EMACS for months.
They work differently depending on terminal capabilities and speed.

Moon@MIT-AI 07/21/79 02:58:13
To: (BUG ZWEI) at MIT-AI
m-X View Dir doesn't show the default in the prompt.

Moon@MIT-AI 07/21/79 02:33:59 Re: More about timing
To: (BUG ZWEI) at MIT-AI, RMS at MIT-AI, HIC at MIT-AI

I have done some investigation of CHAOS:GET-NEXT-PKT.  The results
are a little bizarre.  This function calls 2 other functions,
PROCESS-WAIT and TRANSMIT-STS.  Half the time essentially all of
GET-NEXT-PKT's time is taken up in PROCESS-WAIT.  The other half the
time PROCESS-WAIT takes less time, and TRANSMIT-STS, which isn't
called very often, is very slow (100 ms as compared to 10 ms) and
takes up the rest of the time.  The sum of the two times comes out
rather close to the same.  I suppose this must depend on timing of
stuff happening on the network, whether there are any interrupt
packets, etc.  Anyway it doesn't look like GET-NEXT-PKT can be sped
up, since it looks like its delays are legitimate waiting for the
network rather than computational delays.  


Moon@MIT-AI 07/21/79 00:28:26 Re: More timing info
To: (BUG ZWEI) at MIT-AI, RMS at MIT-AI, HIC at MIT-AI
Here's some more accurate timing info for reading in LMIO;CHSNCP,
using the previously-mentioned optimization of the STRING-SEARCH-CHAR

The LINE-IN operations takes 24 ms on the average.
5 ms of this is spent in MAKE-ARRAY and ADJUST-ARRAY-SIZE (3.5 and 1.9 respectively)
10 ms, averaged, is spent getting a new packet.
9 ms of LINE-IN are not accounted for, this includes executing miscellanous Lisp
 code, searching for the CR, and copying the line once it is found.

Getting a new packet is done once every 12 lines, and costs 114 ms.
Of this, 33 ms are for updating the who-line (assuming it is only updated
 once, i.e. it doesn't have to go blocked.)
58 ms are spent in CHAOS:GET-NEXT-PKT (or 5 ms per LINE-IN)

MOON@MIT-MC 07/20/79 23:50:27 Re: Where reading files into ZWEI spends its time.
To: RMS at MIT-AI, (BUG ZWEI) at MIT-AI
CC: HIC at MIT-MC
The time spent inside the LINE-IN operation of the file stream, about half
of the total, breaks down roughly as follows:
	1/3 in STRING-SEARCH-CHAR looking for a carriage return
	1/3 in FILE-NEXT-READ-PKT, of which
	    almost 1/2 CHAOS:GET-NEXT-PKT
	    almost 1/2 TV-WHO-LINE-UPDATE
		(This is somewhat inflated since there were who-line
		 updates due to my typing the commands to read the file.)
	1/3 elsewhere (generally just executing code.)
	1/10 of the total is in ADJUST-ARRAY-SIZE, which is a fairly
		slowly-written function.

I changed it to open-code the STRING-SEARCH-CHAR, not calling CHAR-EQUAL
since it's using 8-bit characters and not searching for a letter.  It's hard
to measure the difference but I think it cut out only about 1/2 of the time
that was spent searching for the CR.  I haven't tried to do anything about
the who-line update yet.

This code (in QFILE) could probably use a bit more attention.

The 1/6 of the time spent in the Chaos net is probably reasonable.

To help with these measurements I'm writing a little (teensy) timing
package.  It will be in AI:MOON;LMTIME (it isn't done yet, and I don't
guarantee to leave it in working condition.)
---
RMS@MIT-AI 07/20/79 01:11:04 Re: Where reading files into ZWEI spends its time.
To: (BUG ZWEI) at MIT-AI
These statistics apply to reading in LMIO;CHSNCP.
The largest share is spent inside the chaos stream: 27 seconds.
The next largest goes to sectionizing.  It takes about 20 seconds
but this time increases with the amount of data in the editor.
Doing the interns takes 6 seconds, but swaps in enough to delay
other things another 4 seconds or so.  Merging the arrays adds another 10.
Removing the old definitions for this buffer takes another 2 or so.

The ZWEI interval-stream takes only about 2 seconds to store the lines.
It takes about 4 seconds to open the file, maybe 2 to close it.

Grand total: about 1 minute.



Date: 20 JUL 1979 1840-EDT
From: AGRE at MIT-AI (Philip E. Agre)
To: (BUG EMACS) at MIT-AI
CC: (BUG ZWEI) at MIT-AI

I would like to complain about the recent change to EMACS in which ctrl-N
at the bottom of the screen or ctrl-P at the top of the screen causes
one-line scrolling rather than pseudo-re-centering of the cursor.  When I
leave the end of the screen by one line, I am usually interested in a context
which extends from a few lines above the cursor to a few lines below it,
e.g., the middle of a Lisp function or a paragraph of text.

Now, about two weeks ago I complained about this very same feature on ZWEI.
Many other people joined my complaint, all citing the reason I just gave.
It was changed to agree with the EMACS standard, or what used to be the EMACS
standard.

I would like to know (i) who requested that the change be made (ii) why they
prefer one-line scrolling to re-centering (if they have a good reason, I'll
certainly listen) and (iii) if you're not going to change it back, how I can
have my EMACS do it the old way.

I hate to be a bother, but this is a great inconvenience.     - Phil Agre

RMS@MIT-AI 07/20/79 01:11:04 Re: Where reading files into ZWEI spends its time.
To: (BUG ZWEI) at MIT-AI
These statistics apply to reading in LMIO;CHSNCP.
The largest share is spent inside the chaos stream: 27 seconds.
The next largest goes to sectionizing.  It takes about 20 seconds
but this time increases with the amount of data in the editor.
Doing the interns takes 6 seconds, but swaps in enough to delay
other things another 4 seconds or so.  Merging the arrays adds another 10.
Removing the old definitions for this buffer takes another 2 or so.

The ZWEI interval-stream takes only about 2 seconds to store the lines.
It takes about 4 seconds to open the file, maybe 2 to close it.

Grand total: about 1 minute.


ZVONA@MIT-AI 07/19/79 20:36:56
To: (BUG ZWEI) at MIT-AI
if you quit out of the editor with two windows and then restart, it invariably puts you in the
wrong window.

Moon@MIT-AI 07/19/79 04:58:49 Re: Slowness
To: (BUG ZWEI) at MIT-AI
I've been working on finding out why switching buffers is so slow in Zwei.
The most useful page-trace is in the file AI:MOON;.FOO 4.  Here are some of
the reasons I've found so far.  (There are more).

The *ZMACS-BUFFER-HISTORY* list gets looked at by DELQ.  This list has one
cons for each buffer in the editor, and these conses are generally all on
different pages.  The list should be added to with APPEND rather than CONS
so that it gets copied.

The modes stuff seems to touch quite a few pages, partly because it uses
the Lisp interpreter.

Exposing and de-exposing the mini-buffer window swaps in a bit-save array,
probably the one for the lisp listener.  This then kicks out all kinds of
useful stuff.

Due to the real-time delay of switching buffers, once it comes back into
TYI, all the other processes in the machine wake up and touch various
pages (those that don't wake up tend to touch a page or two needed by
their blocking conditions, e.g. pc-ppr-output-hold-flag).  This probably
wouldn't happen if it wasn't for the big bit-save array.

I'd like to try changing Zwei so that the mini-buffer is always exposed, but
just "turned on and off".  Alternatively we could have a small blank window,
preferably with no bit save array, which is under the mini-buffer.

Another idea would be to implement RMS's idea of having a blank window which
appears at some point in the ACTIVE-WINDOWS list.  Anything below this can't
have little bits of itself displayed.  Also of course this window would know
not to save its bits, even when doing partial-screen hackery, since it is
always blank.  Then ZED would expose the blank window then the editor window.
This would prevent the lossages at the bottom of the screen and between the
two window in 2-window mode.

Moon@MIT-MC 07/19/79 00:56:23
To: (BUG ZWEI) at MIT-MC
If you have the cursor at the front of the following text:

foo bar baz quux mum foo foo foo foo foo foo foo foo foo foo foo foo foo
foo frobboz.

mutter

and you hit meta-Q, the blank line disappears and several gratuitous spaces
are inserted after the period.  It seems to depend on the fact that the
paragraph being filled is exactly 2 lines long.



Moon@MIT-MC 07/19/79 00:24:31
To: (BUG ZWEI) at MIT-MC
In system 15.3 on CADR6, ^QBP does the same thing as ^QFP !


Moon@MIT-MC 07/19/79 00:23:05
To: (BUG ZWEI) at MIT-MC
The initial fill column in text mode is about 440 pixels, which is absurdly
narrow.  A better value would be 576. (72. characters).


Moon@MIT-AI 07/18/79 23:49:39
To: (BUG ZWEI) at MIT-AI
Character search with a negative numeric argument doesn't search backwards

KEN@MIT-AI 07/17/79 06:13:04
To: (BUG ZWEI) at MIT-AI
Zwei cannot read in the very short file called ai:ken;cant read
(Reaches what it thinks is an end of file after reading 20%)
The problem seems to be that I have a ; on a line beginning with
(def without any name.  E.g.

(defcomment ;;this is the problem
(defun foo nil
	...)
)

Moon@MIT-AI 07/15/79 22:17:49
To: (BUG ZWEI) at MIT-AI
Twiddle Line is broken such that one of the 2 lines disappears entirely

Henry@MIT-AI 07/14/79 02:17:39
To: (BUG ZWEI) at MIT-AI
As a matter of taste, I prefer to disable the feature
which does non-standard indenting of various constructs like DEFUN, DO, etc.
[I don't mind wasting a few characters here and there for the sake of 
a uniform indenting convention]. I have in my init,

(SETQ *LISP-DEFUN-INDENTATION* NIL *LISP-INDENT-OFFSET-ALIST* NIL)

but non-standard indenting seems to persist in things like COND clauses, 
LET variable lists. [It only started to happen relatively recently.]


RMS@MIT-AI 07/12/79 23:50:03
To: (BUG ZWEI) at MIT-AI
M-Q doesn't save the pre-filled text on the kill ring, it seems.


Henry@MIT-AI 07/10/79 03:41:13
To: (BUG ZWEI) at MIT-AI
I would like Meta-) to expand abbrevs in Word Abbrev Mode.
Do you think this is the right thing? If not, how can I 
set it up in my personal environemnt? 
Should I use the table *WORD-ABBREV-TABLE* [it seems only
look at non-buckyed characters.] or should I redefine the
definition of Meta-).


RMS@MIT-AI 07/09/79 19:12:39
To: (BUG ZWEI) at MIT-AI
(DEFMETHOD (FOO-CLASS :BAR) <lf>
indents the next line with only two spaces.
It should indent that line more, as MULTIPLE-VALUE-BIND does.

DEFUN indents differently when not at the top level of list structure.
It ought to indent in the same special fashion all the time.


Doyle@MIT-AI 07/09/79 13:55:08
To: (BUG ZWEI) at MIT-AI
Is there any way that the mailer can be entered from lisp?  I sure would
find top level MAIL and BUG functions convenient.

Doyle@MIT-AI 07/09/79 13:42:41
To: (BUG ZWEI) at MIT-AI
View File has the bug that no carriage returns are heeded, so the text comes out as
compacted all over the screen.  This is in system 15.1.

AGRE@MIT-AI 07/09/79 11:35:49
To: (BUG ZWEI) at MIT-AI
CC: DOYLE at MIT-AI
    Date: 8 JUL 1979 1414-EDT
    From: Doyle at MIT-AI (Jon Doyle)

    I would like to propose a change to the Zwei command Evaluate Defun (ctl-top-E) so
    that it would not print out the value if the form being evaluated was indeed a defun
    (or other DEF-thing), on the assumption that all these things evaluate to their
    names.  I am continually irritated by the fact that while I can compile a function
    without trouble, I can't evaluate one without causing a time-consuming halt and
    screen redisplay.  I am willing to put up with this when I evaluate a non-DEF form,
    but in the normal case it is a loss. 

I vote with Jon.

Date: 8 JUL 1979 1414-EDT
From: Doyle at MIT-AI (Jon Doyle)
To: INFO-LISPM at MIT-AI, (BUG ZWEI) at MIT-AI

I would like to propose a change to the Zwei command Evaluate Defun (ctl-top-E) so
that it would not print out the value if the form being evaluated was indeed a defun
(or other DEF-thing), on the assumption that all these things evaluate to their
names.  I am continually irritated by the fact that while I can compile a function
without trouble, I can't evaluate one without causing a time-consuming halt and
screen redisplay.  I am willing to put up with this when I evaluate a non-DEF form,
but in the normal case it is a loss. 

P.S. I would make my own macro to do this, but it looks like the only way to make
this change (without having my own versions of several other editor functions) is to
make a slight modification to ZWEI:COMPILE-INTERVAL so that COMPILE-P takes another
flag value which indicates just evaluation, and not printing.

RG@MIT-AI 07/07/79 11:30:18
To: (BUG ZWEI) at MIT-AI
  THE NEW SPLIT SCREEN MODE OFTEN LEAVES A LINE OF GARBAGE AROUND
BETWEEN THE TOP AND BOTTOM WINDOWS.  IN OTHER WORDS, THE REGION OF
THE SCREEN BETWEEN THE TOP AND BOTTOM WINDOWS IS NOT CLEARED OUT,
AND SO "SHOWS THROUGH" WHAT EVER WINDOW IS BEHIND.  
  THE CURRENT EFFECT IS VERY ANNOYING.  POSSIBLE FIXES ARE ASSURING
THE TOP AND BOTTOM WINDOWS ABUT CLOSELY (BUT THEN IT MIGHT HAVE TO
WORRY MORE ABOUT FRATIONAL LINES) OR AUTOMATICALLY CLEARING THE
AREA BETWEEN THE WINDOWS (THIS PROBABLY WORKS OK WHEN CNTRL-X 2 IS
FIRST DONE, BUT MAY NOT BE AS EASY WHEN RESUMING THE EDITOR INTO
A TWO-WINDOW STATE.).

MOON@MIT-MC 07/06/79 17:19:51 Re: **MORE** twice when listing directory
To: Doyle at MIT-AI
CC: (BUG ZWEI) at MIT-MC
I believe RMS is fixing this.

Doyle@MIT-AI 07/06/79 09:53:48
To: (BUG ZWEI) at MIT-AI
Is there any way to correct the double-MORE bug in Zwei?  Namely, if
you list your directory, and it is longer than one screenful, you get
two More queries, and miss out on seeing the two or three files that
would have been displayed between the two mores.

Doyle@MIT-AI 07/06/79 09:40:21
To: (BUG ZWEI) at MIT-AI
The redisplay process gets confused when you search for something just after doing
something which printed out messages over a portion of the buffer window, e.g.
compiler warning messages or ctl-x ctl-b.  The manifestation is that the search
finds something, but the display process clears the window, leaving the cursor in
the middle of a blank screen, presumably at the point at which the search would
have left it had the text been redisplayed properly.

RMS@MIT-AI 07/05/79 00:19:27
To: (BUG ZWEI) at MIT-AI
I have changed M-H and C-M-H to be compatible with EMACS
and suitable for picking up functions/paragraphs and reordering them.

RMS@MIT-AI 07/04/79 03:42:14
To: (BUG ZWEI) at MIT-AI
M-H and C-M-H both fail to include one blank line before
the paragraph or defun as they should.

rms@MIT-AI (Sent by RG@MIT-AI) 07/03/79 04:17:52
To: (BUG ZWEI) at MIT-AI
It seems that font hacking at all in ZWEI
makes it impossible to eval part of the buffer.
NLM can show you a short function which looked
reasonable but would guve "eof" on evalling it
from the editor buffer in any way (C-T-E, Ev Re)
as a result of having done some font hackery on part of it.

rms@MIT-AI (Sent by RG@MIT-AI) 07/03/79 03:22:22
To: (BUG ZWEI) at MIT-AI
C-T-C loses on functions which have unbalanced parens
in comments.  There is no reason why it should lose that way.
Mark defun ought to use the F^F type of scan.

RG@MIT-AI 07/03/79 03:16:17
To: (BUG ZWEI) at MIT-AI
Often Tab will leave the cursor at the wrong place.
If it was previously at the first nonblank character,
instead of staying with that character it stays at the
same horizontal position.

doyle@MIT-AI (Sent by RG@MIT-AI) 07/02/79 08:41:00
To: (BUG LISPM) at MIT-AI, (BUG ZWEI) at MIT-AI
System 14.5 on LM1 has more bugs.
[1] Formfeed at lisp top level just refreshes the screen, leaving all
the previous contents there, and adding a formfeed character to the screen.

[2] Several times in a row, I had meta-ff in Zwei (com-insert-ff) produce
the error of array adjusting with a floating-point number, namely adjust-array-size
was being called with arguments of "" and 1.0s0.  While trying to figure this out,
I installed an interpreted version of zwei:set-line-length.  Stepping through this
produced no error, and when I then undefun'd this function, the error was gone.
Since this function has been constant over the past month (according to the file
dates) I am confused about what was causing this error.

DLW@MIT-AI 07/02/79 03:08:27
To: (BUG ZWEI) at MIT-AI
Try typing "this is a test", Control-A, and four Meta-C's.
My listing shows a bug wherein Meta-Cing the "a" will move
forward over the "test".

KEN@MIT-AI 06/30/79 06:03:00 Re:  control-n past the end of the screen
To: (BUG ZWEI) at MIT-AI
CC: AGRE at MIT-AI
If we're taking a poll then I agree with Henry and Agre, I find the Emacs way
more convenient.

Henry@MIT-AI 06/29/79 23:25:26
To: (BUG ZWEI) at MIT-AI, AGRE at MIT-AI
I'd have to agree with AGRE that there's something to be said
for EMACS's behaviour when Control-N'ing past the end of the 
screen over Zwei's. Frequently, when I go line-by-line down past
the bottom, I'm most interested in the text around that area, like a
definition of a Lisp function that spans the bottom of the screen.
When Zwei redisplays, the lines above the point are cut off by the
top of the screen. I have to do some more fiddling if I want to 
see the whole function on the screen at once.

RMS@MIT-AI 06/27/79 04:17:05
To: (BUG ZWEI) at MIT-AI
IF I HAVE TV AND TVWARM IN ZWEI
THEN I CAN'T ^XB TO TV.  EVEN IF I TYPE TV SPACE,
IT COMPLETES OK BUT WON'T VISIT IT.
THIS IS SYSTEM 11.16, CADR 6.


DOYLE@MIT-AI 06/26/79 10:44:20
To: (BUG ZWEI) at MIT-AI
There is either some screwy bug in the interpreter, or in ZWEI, or
perhaps just inconsistent versions of files are part of load 11.5.
When I do M-. of "make-typed-part" in doyle;sdl >, I get the phrase
"1 more definition" typed at the bottom of the screen, followed by
an error, claiming that the first argument to sys:M-=, NIL, should
have been a number.  Tracing backwards, the problem is that
Zwei:edit-definition is trying to do (TYPEIN-LINE "~D more definition~P as well."
with two parameters, both the length of a list, in this case 1.
But the trace says that Typein-line has only the list (1) as its rest
argument, so one of these parameters was lost somehow.  Further,
by the time things get to Format:format-ctl-string, the arguments
have become just 1 and the format string - the list of arguments (1)
has become the number 1.  Then Format-ctl-op is called with a list
of arguments of NIL, so the 1 went away as well.

Perhaps you can repeat this bug by logging in as doyle, and doing
M-. of I:make-typed-part in the editor.

I was able to repeat this several times.

Moon@MIT-AI 06/26/79 06:32:11
To: (BUG ZWEI) at MIT-AI
In 2-window mode in system 11, ^Z ing out of the editor 
and coming in again with (ed) leaves the top window selected
instead of the one that was selected before.

Moon@MIT-AI 06/26/79 06:10:25 Re: ELECTRIC SHIFT LOCK MODE
To: (BUG ZWEI) at MIT-AI
I MODIFIED IT NOT TO GRATUITOUSLY UPPER-CASE THE FIRST CHARACTER IN A COMMENT,
BECAUSE I FOUND IT IMPOSSIBLE TO LIVE WITH THIS HELPFUL FEATURE.  THIS LETTER
WOULDN'T BE IN ALL UPPER-CASE IF IT WASN'T THAT ^XM INHERITS THE MINOR MODES
IN EFFECT AT THE TIME AND I COULDN'T FIGURE OUT HOW TO TURN OFF A MINOR
MODE.  ^XM WORKS COMPLETELY THE WRONG WAY ANYWAY.

KEN@MIT-AI 06/25/79 04:23:47
To: (BUG ZWEI) at MIT-AI
d2060 was me, sorry

D2060@MIT-AI 06/25/79 04:22:28
To: (BUG ZWEI) at MIT-AI
in edit-function, if there is more than one definition of the symbol
it errors out in trying to print "... more defintion~p ..." claiming
that something (presumably p) is NIL not a number as expected.

ALAN@MIT-AI 06/24/79 03:32:34
To: (BUG ZWEI) at MIT-AI

I was sent the following:

    FIN@MIT-ML 06/22/79 17:00:01 Re: Obtaining a tape of Zwei
    Following is a copy of a message that was sent around a week ago with
    some questions about Zwei:

    -------------------------------------------------
    Miller@ai (Sent by FIN) 06/15/79 18:40:30 Re:     The VINE (Vine Is Not Emacs) Vax Editor Project at TI
    To: FIN at MIT-ML, RYLAND@RUTGERS at MIT-ML, Miller at MIT-AI
    To: DLW at MIT-AI, RG at MIT-AI, TK at MIT-AI, RMS at MIT-AI
    To: Jonl at MIT-MC, Moon at MIT-MC, RJF at MIT-MC
        We at TI would like to convert Zwei to run on the Vax under NIL
    [initially under Franz or else just under MacLisp on 20X for now].  We have
    a number of questions in regard to this.
        (a) Does anyone see any insurmountable obstacles to this project from a
    technical point of view?  We understand that we will have to redo the
    screen redisplay, the file system interface, and the terminal interface.
    How bad does this sound?  What, if any, other problems might arise that
    have not occurred to us?  
        (b) Does anyone see any legal obstacles, e.g., is someone (DLW?)
    authorized and willing to give us the source of Zwei?
        (c) We would like to make the result available to other Vax sites without
    charge or any other strings attached.  Would there be any problem about this?
        (d) AS A TOTALLY SEPARATE ISSUE, if at some undetermined time in the
    far future, on some hypothetical TI hardware, we found that a market
    existed for a text editor similar to Emacs/Zwei/Vine, does anyone foresee
    whether there would be a reason for NOT being able to include it as part of
    an overall software package? 
        (e) Depending of course on the above, could someone send us a Tops-20
    Dumper format 1600 bpi 9 track tape containing all relevant files?
        (f) What related projects are there that might be doing closely similar
    things?  We are vaguely aware of Chris Ryland's effort at Rutgers, Igor (?)
    at CMU, and EX at Berkeley.
        Thanks, Mark Miller (Miller@ai) and Craig Finseth (Fin@ml)
    ---------------------------------------------------

    After getting replies to some of the points mentioned, we decided that the
    next step would be to get a tape (See point (e)) and look at the code to
    se just how hard it would be to convert.  What I am asking is for you
    to make a tape with all of the relevant files and send it down.  We will,
    of course, send you a blank tape in exchange.

    If you are not the right person to ask, could you at least tell me who is?

    If you will do this, let me know and I'll get you an address to send the
    tape.  Thanks.

    Craig Finseth (Fin @ ml)

I'm of course the wrong person to send this too. (There was another recipient
to the message but his name was garbaged so I have no idea who it was or
if he got the message.) Will one of you please reply to Craig? Thanks.

KEN@MIT-AI 06/21/79 21:41:29
To: (BUG ZWEI) at MIT-AI
Zwei loses while reading a file with a defprop followed by a <cr>.
the following for example,
(defprop
foo
bar
zap)
causes it to bomb out with string-equal called with the wrong args.
this is lispmachine 1 (11.5 I think)

KEN@MIT-AI 06/16/79 18:34:10 Re: wordab
To: (BUG ZWEI) at MIT-AI
In word abbrev mode, <tab> expands the string to the left of the cursor which
is annoying and the Emacs version does not do so.

MMCM@MIT-AI 06/14/79 12:54:50
To: RMS at MIT-AI, (BUG ZWEI) at MIT-AI
    Date: 06/13/79 05:00:38
    From: rms at MIT-AI
    To:   (BUG ZWEI)

    COM-MOUSE-END-OF-MINI-BUFFER
    1) doesn't work; its attempt to test whether the minibuffer window is selected
    always says that it is.  This is why it is impossible to use the mouse
    to reselect the minibuffer window with mouse-right, the normal command for
    reselecting a window.
you misunderstand the test, which is not for the mini-buffer being "selected", which it
always is if it on the screen, but for being under the mouse.  this is how mouse-left
manages to work to mark a region in the main window to move down into the mini-buffer
window.
    2) obscures a useful command.  It should be possible to use the mouse to move
    point inside the minibuffer.  Maybe this function should be on a different key
    and then might not have to ask which window was selected.
i will move it onto mouse-left-double, since this isnt a very useful operation in the
mini-buffer.  i believe it is important to have a mouse command to terminate the mini-buffer
input.

MMCM@MIT-AI 06/14/79 12:45:25
To: RMS at MIT-AI, (BUG ZWEI) at MIT-AI
    Date: 06/13/79 05:57:32
    From: rms at MIT-AI
    To:   (BUG ZWEI)

    MAKE-WINDOW-CURRENT contains a very suspicious test
    (NEQ WINDOW *MINI-BUFFER-WINDOW*).
    How can this possibly be right?  Why shouldn't selecting the
    mini buffer window with the mouse make its buffer current?
If the mini-buffer is up, you cannot select another window in the editor's view, this
allows moving text from the main window into the mini-buffer window with the mouse,
without screwing yourself by selecting things for real.
    Should COM-OTHER-WINDOW, etc., be calling MAKE-WINDOW-CURRENT?
Yes, since ^XO selects some other window completely.
    Would it be a win for the function SELECT-WINDOW, in SCREEN,
    to call MAKE-WINDOW-CURRENT?
SELECT-WINDOW involves window-system selection, MAKE-WINDOW-CURRENT involves editor
selection.  In fact, MAKE-WINDOW-CURRENT calls SELECT-WINDOW (as one might suspect).

Making the window system cause things to appear correctly to the user is reasonably
complicated: i believe these functions work properly from both the user and
programmer standpoints, so there shouldnt be any need to rearrange them.

MOON@MIT-AI 06/14/79 04:00:27
To: (BUG ZWEI) at MIT-AI
Indeed, ^XM should be done over to use a buffer rather than
RECURSIVE-EDIT.

RMS@MIT-AI 06/14/79 03:56:50
To: (BUG ZWEI) at MIT-AI
Reading a function name with the minibuffer, if it gets a name
which it doesn't recognize (has no function definition, has
no source-file property, not known from TAGS), should try completing
it and use the completion.  Only if there is no completion should
it return the name as typed.


RMS@MIT-AI 06/14/79 03:55:19
To: (BUG ZWEI) at MIT-AI
DAMN DAMN DAMN I wish I had never heard of C-X M.
It does not set up anything to catch quits out of minibuffers.


RMS@MIT-AI 06/13/79 21:20:10
To: (BUG ZWEI) at MIT-AI

    MMCM@MIT-AI 06/12/79 14:21:30

        rms@MIT-AI 06/12/79 02:40:22
        I think that (ZED) ought to sanitize the buffer by going through and fixing any
        conditions that would make it impossible to edit the buffer.  There will always
        be such bugs as this one from time to time, and it would be good if they
        didn't screw the user out of writing his file out.  Note that this bug has
        nothing to do with what I was working on in this session, so I had no reason to
        be cautious about such problems.  It could happen to anyone at any time.
    paging in every buffer when the editor is entered during normal operation seems
    highly misguided.
Did I say anything about "every" buffer?

RMS@MIT-AI 06/13/79 06:19:28
To: (BUG ZWEI) at MIT-AI
M-Altmode should evaluate all the forms that the user
gives, not just the first.

RMS@MIT-AI 06/13/79 06:18:40
To: (BUG ZWEI) at MIT-AI
Why is it that all the fundamental data structures are
not named structures?  It would be very useful for them
to print out as something understandable.

rms@MIT-AI 06/13/79 05:57:32
To: (BUG ZWEI) at MIT-AI
MAKE-WINDOW-CURRENT contains a very suspicious test
(NEQ WINDOW *MINI-BUFFER-WINDOW*).
How can this possibly be right?  Why shouldn't selecting the
mini buffer window with the mouse make its buffer current?

Should COM-OTHER-WINDOW, etc., be calling MAKE-WINDOW-CURRENT?
Would it be a win for the function SELECT-WINDOW, in SCREEN,
to call MAKE-WINDOW-CURRENT?


rms@MIT-AI 06/13/79 05:00:38
To: (BUG ZWEI) at MIT-AI
COM-MOUSE-END-OF-MINI-BUFFER
1) doesn't work; its attempt to test whether the minibuffer window is selected
always says that it is.  This is why it is impossible to use the mouse
to reselect the minibuffer window with mouse-right, the normal command for
reselecting a window.
2) obscures a useful command.  It should be possible to use the mouse to move
point inside the minibuffer.  Maybe this function should be on a different key
and then might not have to ask which window was selected.


rms@MIT-AI 06/13/79 04:41:21
To: (BUG ZWEI) at MIT-AI
Inside M-., I can't use the mouse to reselect the minibuffer
after having selected the main window.  It beeps and the minibuffer goes away.
This is in band 4 on cadr 1.  I was looking at ZWEI;MOUSE at the time.
This may have to do with the fact that it is trying to let
you mouse the function to go to.


RMS@MIT-AI 06/13/79 02:58:10
To: (BUG ZWEI) at MIT-AI
Kill Some Buffers, when you say "Y" to kill a modified buffer,
puts no CR before the question of whether to save it.


MMCM@MIT-AI 06/12/79 14:21:30
To: RMS at MIT-AI, (BUG ZWEI) at MIT-AI

    rms@MIT-AI 06/12/79 02:40:22
    I think that (ZED) ought to sanitize the buffer by going through and fixing any
    conditions that would make it impossible to edit the buffer.  There will always
    be such bugs as this one from time to time, and it would be good if they
    didn't screw the user out of writing his file out.  Note that this bug has
    nothing to do with what I was working on in this session, so I had no reason to
    be cautious about such problems.  It could happen to anyone at any time.
paging in every buffer when the editor is entered during normal operation seems
highly misguided.  any groveling should be limited to (SAVE-ALL-FILES).  writing
out one's files is the only important consideration when the editor crashes hard for
the average user, not being able to continue normal editing.

rms@MIT-AI 06/12/79 02:43:47
To: (BUG ZWEI) at MIT-AI
I have fixed the problems between ZWEI and the new screen stuff, except:

1) I haven't got around to C-X 2 yet.
2) C-X M still makes a window with its own box.  It ought not to.

I have made ZWEI windows blt back their old contents unless they have
at least DIS-TEXT worth of redisplay to do anyway.  This makes a big
improvement now with controlled swapping.


rms@MIT-AI 06/12/79 02:40:22
To: (BUG ZWEI) at MIT-AI
If a line is continued by a tab, there is no "!" in the continuation column,
and all sorts of horrible things happen if the tab is rubbed out by the tab-hacking
rubout.  For example, it leads to errors "Recenter type :POINT left point outside
the window", to lines with negative fill pointers, to lines with tick = DELETED
left in the buffer after DELETE-INTERVAL bombed when I tried to fix things, etc.
To create this, just make a short line with a comment considerably indented by
several tabs, and then start adding stuff at the front.  Then go to the end and 
start rubbing stuff out, or to the tab that continues.

I think that (ZED) ought to sanitize the buffer by going through and fixing any
conditions that would make it impossible to edit the buffer.  There will always
be such bugs as this one from time to time, and it would be good if they
didn't screw the user out of writing his file out.  Note that this bug has
nothing to do with what I was working on in this session, so I had no reason to
be cautious about such problems.  It could happen to anyone at any time.

For example, any "deleted" lines would have their ticks set to reasonable values.
All LINE-PREVIOUS components would be set to the correct previous line.
Any line with negative fill pointer would get its fill pointer set from its real size
to bring back any interesting text in case the user wants it.
The interval-last-bp would be set to the line which had no next.
Point would be brought in range if its char pos were unreasonable.
If its line had not been seen during the scan, it would be set to the beginning of
the buffer.  To help the user know where the lossages were, lines saying
**** Inconsistent editor data structure was found below **** could be inserted
at the appropriate places, and a message telling him that such had been found
would be printed to direct him to search for ****.

Another way to make things more robust is to make DELETE-INTERVAL do ALL its
error checking before changing anything; absolutely NO path for bombing out
in the middle with an inconsistent buffer.  Then at least it would not have made
things worse as it did.


rms@MIT-AI 06/12/79 00:05:53
To: (BUG ZWEI) at MIT-AI
WITHOUT-INTERRUPTS ought to have a suitable indentation property.
I think it ought to indent by 2, not by 1.

Maybe the default should be to indent by 2 under a function
which is atomic and which has no args on the same line with it.


RMS@MIT-AI 06/11/79 01:02:34
To: (BUG ZWEI) at MIT-AI
C-X C-P right after a formfeed should apply to the page which follows that formfeed.
Right now it applies to the previous page.


MMCM@MIT-AI 06/10/79 22:30:30
To: (BUG ZWEI) at MIT-AI
the screen interface is slightly more broken than m-.
the frame stuff makes windows created with the mouse not get selected properly
edges-inside-box<- seems to have been flushed, this means no one ever tells the window
to change its margins from what they default to when first created the full size of the
screen, so it never gets a box around it
various sublter things with menus have stopped working as well
lasciate ogni speranza, voi ch'entrate...

RMS@MIT-AI 06/10/79 18:59:28
To: (BUG ZWEI) at MIT-AI
C-X ) is not compatible with EMACS, nor is C-X E.
In fact, I can't figure out how to get them to work.
Either one puts the cursor in the echo area while
saying "Macro level 1" in the mode line.
My macro has an incremental search in it.
Maybe it is just that incremental search doesn't work in macros.


MMcM@MIT-AI 06/10/79 15:49:08
To: (BUG ZWEI) at MIT-AI
m-. with method definitions is broken in most every conceivable way
NIL is printed for (FOO-CLASS :MUMBLE) in prompts and error messages
SECTIONIZE-BUFFER doesnt include them at all


RMS@MIT-AI 06/10/79 03:09:28
To: (BUG ZWEI) at MIT-AI
I believe I have made ZWEI keep proper track of
multiple definitions of the same symbol in one buffer.

Moon@MIT-AI 06/09/79 11:28:38
To: (BUG ZWEI) at MIT-AI
The indent table doesn't know about LET-GLOBALLY

Moon@MIT-AI 06/09/79 11:23:33
To: (BUG ZWEI) at MIT-AI
When sent an EDGES<- message, a zwei window should MIN the specified bottom
with the top of the status line, to avoid overlap.

Moon@MIT-AI 06/09/79 11:13:45
To: (BUG ZWEI) at MIT-AI
I thought ^X1 was supposed to make the current window the full screen (i.e. the
dimensions of the initial window).  It says "only 1 window".

Moon@MIT-AI 06/09/79 10:53:46
To: (BUG ZWEI) at MIT-AI
In 9.4 CC on CADR5, Type:
(defun foo (x)
	(mapcar #'(lambda (x) x)
<tab>
and watch it indent 1 column too much.


Moon@MIT-AI 06/09/79 10:33:25
To: (BUG ZWEI) at MIT-AI
If the same function is defined (or appears to SECTIONIZE-BUFFER
to be defined) twice in the same file, meta-. gives you only the second
definition and c-U meta-. claims there are no more definitions.
For a test case try CLASS in LISPM2;CLASS

Moon@MIT-AI 06/09/79 05:42:12
To: (BUG ZWEI) at MIT-AI
This is in 9.4CC on CADR5

Try getting a menu of functions in the typeout window, with m-x Who Calls
or m-x List Functions.  Now try clicking right on one of those functions,
to get a menu of operations.  It fucks up in various ways, including trying
to create a negative-width pc-ppr, and not doing anything when you click Edit.

Moon@MIT-AI 06/09/79 05:19:24 Re: P.P.S. to previous message
To: (BUG ZWEI) at MIT-AI
Well, I've fixed the bug, which was in DEFINITION-TEXT-LOCATION,
but the way this selects and unselects buffers all over the place sucks
totally and should be done over.   The right thing is for only COM-
level functions to select buffers, and the subroutines to work on buffers
passed around as arguments without selecting them.

Moon@MIT-AI 06/09/79 05:13:22 Re: P.S. to previous message
To: (BUG ZWEI) at MIT-AI
This is completely reproducible, at least in the current core image.  System is 9.4 CC on CADR5

Moon@MIT-AI 06/09/79 05:10:35
To: (BUG ZWEI) at MIT-AI
Truly fucked!  Somehow meta-. to a function in a different buffer made point
the right thing, but didn't make the containing buffer current.  The who-line
went with the current buffer, but the displayed text did not.  meta-< caused
the displayed text to be the start of the current buffer, and c-U c-space
went back to the meta-.'ed function in the other buffer, still without
switching current buffers.  Using ^XB to switch buffers seemed to make everyuthing work.

KEN@MIT-AI 06/09/79 02:49:50
To: (BUG ZWEI) at MIT-AI
after typing meta-.
I could not type the name of my function since it had a ? in it.
I tried slashifying it and also typing control-q before the ?
but it kept giving me help but would not insert the "?" in the bottom region

RMS@MIT-AI 06/08/79 03:53:53
To: (BUG ZWEI) at MIT-AI
I think that trace output inside a break inside ZWEI
should go to the typeout window.  The Meta-Alt minibuffer
may need attention in this regard also.

But trace output from random places inside ZWEI probably
should continue to use the console-io-pc-ppr so that it
doesn't cause output-hold screwups to trace parts of display.


RMS@MIT-AI 06/08/79 03:25:27
To: (BUG ZWEI) at MIT-AI
If I make a minibuffer inside of C-X M, and quit out, it goes
all the way out of the C-X M.


RMS@MIT-AI 06/07/79 23:55:24
To: (BUG ZWEI) at MIT-AI
C-M-Rubout and probably all backwards sexp motion
does not check properly whether a slash is real or slashified.
If I put in the buffer
// FOO
with point after the FOO, and do C-M-Rubout, one slash
and the space are rubbed out with the FOO.  On backward scan,
on looking at the space, it ought to count the parity of slashes
before the space.  This is what TECO does.


RMS@MIT-AI 06/06/79 01:53:09
To: (BUG ZWEI) at MIT-AI
I do C-X B DEFS C-A CR
and it gives me an error inside the completing reader.
DEFS was a legitimate buffer name abbreviation, and C-Z
from the error left me properly back in the minibuffer
after which C-E CR selected the buffer.


MMCM@MIT-AI 06/04/79 21:46:58
To: RMS at MIT-AI
CC: (BUG ZWEI) at MIT-AI
    Date: 06/02/79 02:14:43
    From: RMS at MIT-AI

    2) C-X Tab with no argument should default the arg to 1.
    It should run a Tab over each line whose first character
    is inside the region.
C-X C-I does default its argument to 1, that is it should indent the region 1 space.
C-X C-I is Indent Rigidly.  what you seem to be describing is Indent Region,
which is on C-M-\ in the default ZMACS environment.  is some of this inconsistant
with the latest EMACS command behaviour/layout?

RMS@MIT-AI 06/04/79 06:03:45
To: (BUG ZWEI) at MIT-AI
I FIXED A BUG THAT MADE SCROLLING BY LINES NOT USE I/D LINE.


RMS@MIT-AI 06/04/79 05:45:59
To: (BUG ZWEI) at MIT-AI
I typed ahead C-S TV-PC-PPR-L
while the file TVDEFS was being read in.
The TV-PC-PPR-L echoed at the end of the mode line!
Then it went away when the C-S was processed and updated the display.
By the way, C-S still displays in the mode line.
It no longer does so in EMACS.


Moon@MIT-AI 06/04/79 02:11:28
To: (BUG ZWEI) at MIT-AI
List Buffers does not flag "new files", i.e. buffers that have a file name
but the file does not yet exist.  This should be indicated some how.

Moon@MIT-AI 06/04/79 01:57:04
To: (BUG ZWEI) at MIT-AI
The use of the mouse to select a function as an argument to commands
such as meta-. does not work for names in the text which are names of
known sections, but not defined as functions in the Lisp.  This happens
when editing a file before loading it.

RMS@MIT-AI 06/04/79 00:24:05
To: (BUG ZWEI) at MIT-AI
If in an empty buffer I insert
(LONGLONGATOMNAME FOOBARBAR
		  (
and then I do C-P C-A C-F DEFUN Space C-N Tab,
this ought to leave the cursor before the (.
Instead, it leaves the cursor after the (.


RMS@MIT-AI 06/02/79 04:44:16
To: (BUG ZWEI) at MIT-AI
The Lisp syntax of # is wrong.  It should be a prefix like '.

I fixed the bug that happened when a string starting with a CR
was inserted at the beginning of a line.  The line wasn't being munged.
I also fixed a bug whereby typing text into a line which had following continuations
did a chinese fire drill with the plines on the screen.


RMS@MIT-AI 06/02/79 02:14:43
To: (BUG ZWEI) at MIT-AI
1) ^X^F ZMACS, then do M-. SECTION-buf and it refuses to complete
to SECTIONIZE-BUFFER; it beeps.
However, SECTION? says the only completions are SECTION-COMPLETION
and SECTIONIZE-BUFFER.

2) C-X Tab with no argument should default the arg to 1.
It should run a Tab over each line whose first character
is inside the region.


rms@MIT-AI 06/01/79 01:27:45
To: (BUG ZWEI) at MIT-AI
CADR3, system 8.3:  It never rains, it pours!

1) Quitting out of ^XM just left me with no selected window.
I was able to reselect the regular zmacs window with the mouse.

2) There seems to be no way to resume a ^XM which was quit out of.

3) Linefeed doesn't expand word abbrevs.  It should, since it should
be equivalent to Return Tab.

4) There are no word abbrevs inside a Query Replace minibuffer.
There are no word abbrevs inside ^XM.
Both of these ought to have them.
There may be some minibuffers which shouldn't, but these should.

5) There is no C-X  command, so there is no way to resume a Query Replace
which was exited.  Such a command ought to remember every M-X command
and every Query Replace and a few other things.

6) The mouse has strange interactions with minibuffers.
I was in the second minibuffer of a Query Replace when I decided that I
wanted it to start from a different place in the buffer.  Since I couldn't just
exit and resume it as I would in EMACS, I selected the desired spot in the
main buffer with the mouse, then went back into the minibuffer with the mouse
to tell it to go ahead.  When I did so, it went ahead so fast as to change
all the occurrences without querying me.

7) C-V when the end of the buffer is inside the window leaves an empty window.
It ought to refuse to do anything.

8) When a string which starts with a CR and doesn't end with one
is inserted at the front of a line, display screws up.
This operation produces alters the line, and moves it down leaving
a blank line in its place.  On the screen, however, the blank line is
not redisplayed and continues to show the old line.


ALAN@MIT-AI 05/29/79 02:28:12
To: (BUG ZWEI) at MIT-AI
What ever happened to Zowie and Barfola modes?
These were the features that made Eine the excellent piece
of software that it was!

HIC@MIT-MC 05/27/79 21:03:58
To: (BUG ZWEI) at MIT-MC
In auto fill mode, when typing at the end of a line, and there exists text
on the following line, occaisionally you will type a space, the word
you just typed will move to the next line, but the cursor will remain
on the current line.

For example:

A b c d e f<cursor>
1 2 3 4 5

Typing "g<sp>":
A b c d e f <cursor>
g1 2 3 4 5



moon@MIT-MC (Sent by RWG@MIT-MC) 05/25/79 02:10:54
To: (BUG ZWEI) at MIT-MC
m-x Package Set does not do completion on the package name


MMCM@MIT-AI 05/18/79 18:53:22
To: MOON at MIT-MC, (BUG ZWEI) at MIT-MC
CC: HIC at MIT-MC
this has been fixed for a long time now, i will see if there is some losing
band on that machine.


MOON@MIT-MC 05/18/79 18:11:39
To: (BUG ZWEI) at MIT-MC
CC: HIC at MIT-MC
The ^XM command in the current system on CADR5 appears to work if you
use it, except for taking a real long time to set up the incorrect window
it sets up.  However, the message as delivered consists of only a header!
This should be fixed ASAP.

HENRY@MIT-AI 05/11/79 22:44:33
To: (BUG ZWEI) at MIT-AI
Is there an equivalent of Emacs' Mumble Mode Hook variables?
I'd like to hook up my Zwei so that it goes into Fill Mode
whenever Text mode is called, Electric Shift Lock whenever 
Lisp mode is on. Or is there a better way to do this?

HENRY@MIT-AI 05/04/79 01:32:12
To: (BUG ZWEI) at MIT-AI
Control-X A, Append to Buffer, always uses a new buffer
even when the name already exists.


DLW@MIT-AI 04/27/79 04:18:10
To: BAK at MIT-AI, (BUG ZWEI) at MIT-AI

    bak@MIT-AI (Sent by HENRY@MIT-AI) 04/27/79 00:01:03
    It would be nice if the blinking matching parenthesis hack worked forward over a list
    as well as backwards.  If the cursor is on a left paren, the matching right paren should
    blink.

Just for the record: If the cursor is in the middle of a ")(" pair,
would you like to see both the matching "(" and the matching
")" blink at the same time?  Just wondering.

bak@MIT-AI (Sent by HENRY@MIT-AI) 04/27/79 00:01:03
To: (BUG ZWEI) at MIT-AI
It would be nice if the blinking matching parenthesis hack worked forward over a list
as well as backwards.  If the cursor is on a left paren, the matching right paren should
blink.

BAK@MIT-MC 04/25/79 22:56:51
To: (BUG zwei) at MIT-AI
There are a couple of importaint parameters (current fonts and current package,
possibly others I don't know of yet) that are easy to set, but there is no
easy way to find out the current setting.  The variables containing this info
should be accesible via Variable Apropos (or perhaps in the case of current
package should be on the modeline).


MMCM@MIT-AI 04/25/79 00:24:58
To: (BUG ZWEI) at MIT-AI
string-search ignores the argument

RMS@MIT-AI (Sent by ___031@MIT-AI) 04/25/79 00:23:36
To: (BUG ZWEI) at MIT-AI
Visit LISPM2;EH and do M-. EH-T-L-T Altmode.
It beeps.  Yet the list of printed by doing
EH-T ? shows that the former has a unique completion.

RG@MIT-AI 04/23/79 08:09:38
To: (BUG ZWEI) at MIT-AI
ZWEI SOMETIMES DISPLAYS CONTINUATION LINES AS NULL.
THIS SEEMS TO HAPPEN WHEN THERES A LOT OF WHITE
SPACE AFTER THE ORIGINAL LINE GOES OFF THE SCREEN.
THE RESULT IS THERE CAN BE TEXT IN YOUR BUFFER YOU
DONT SEE AT ALL (MOBY SCREW).

RG@MIT-AI 04/22/79 11:09:42
To: (BUG ZWEI) at MIT-AI
 IF YOU DO META-., THEN MOUSE A FUNCTION TO EDIT,
IT READS IN THE FUNCTION, BUT LEAVES YOU EDITING THE COMMAND
BUFFER.  NOTHING I COULD FIND WOULD PERSUADE IT TO RETURN
TO EDITING THE REAL BUFFERS.

moon@MIT-AI (Sent by ___025@MIT-AI) 04/22/79 06:17:29
To: (BUG ZWEI) at MIT-AI
Tab in Text mode ignores a numeric argument instead of inserting that many tabs

moon@MIT-AI (Sent by ___025@MIT-AI) 04/22/79 06:09:17
To: (BUG ZWEI) at MIT-AI
Tab in Fundamental mode doesn't do anything, it probably thinks it's Lisp mode tab.

RMS@MIT-AI 04/21/79 22:28:14
To: (BUG ZWEI) at MIT-AI
I was visiting an INFO file, in Text mode,
and did M-Q on a paragraph that was followed by a node boundary.
It filled all the rest of the file.
The same lossage happened once before, on a paragraph
that may have been ended by an ordinary blank line (I'm not  sure).

MOON5@MIT-AI 04/19/79 18:59:55
To: (BUG ZWEI) at MIT-AI
It's time to have a way to tell the typeout-window to make the main window smaller
instead of covering it.  The main issue is what key will be used to make the
main window re-expand to its original size.

Without this feature, the new COM-LONG-DOCUMENTATION command is kind of useless.

moon@MIT-AI (Sent by ___065@MIT-AI) 04/19/79 18:55:09
To: (BUG ZWEI) at MIT-AI
c-? m-X should call mm Describe Command instead of just telling you what
meta-X does, by analogy with c-? c-X

m-X Install Command does not use the mousey function name reader.
Also when it echos the character it immediately wipes it out with
the mode line, making it difficult to tell if you really put it on
the right character

MMCM@MIT-AI 04/17/79 05:45:07
To: RMS at MIT-AI, (BUG ZWEI) at MIT-AI, HIC at MIT-AI
yes, almost all of the slowness is due to counting the number of lines.

rms@MIT-AI 04/17/79 05:44:06
To: (BUG ZWEI) at MIT-AI
Why is C-X C-B so much slower than M-X Save?
Could C-X C-B be made as fast as M-X Save if it no longer
printed out how many lines there are in each buffer?
It's not important enough to be worth the time.

RMS@MIT-AI 04/16/79 22:41:40
To: (BUG ZWEI) at MIT-AI
List Variables and Alter Options should present the list in alphabetical order.

SILVER@MIT-AI 04/16/79 09:27:43
To: (BUG ZWEI) at MIT-AI
PLEASE re-install the edval function as described in the Lisp Machine
Manual, page 259 (2nd version).
Also, (zed 'foo) doesn't seem to work as advertised.

HENRY@MIT-AI 04/13/79 00:24:26
To: (BUG ZWEI) at MIT-AI
Typing stuff other than space to more prompt
doesn't discourage View File from continuing.

moon@MIT-AI (Sent by ___062@MIT-AI) 04/12/79 15:40:51
To: (BUG ZWEI) at MIT-AI
^QDS, ^QFS, etc. beep if the period that ends the sentence is the last character
in the buffer.

MOON@MIT-MC 04/12/79 05:18:03 Re: Menu problems
To: (BUG ZWEI) at MIT-MC
1) Select Buffer from the editor menu should give you a menu of buffers,
not put you in the mini buffer

2) Single-click-right in the typeout window should give you the editor menu.

3) Hitting single-click-right in the typeout window does grossly bizzare things.
The first time it makes it look like you're back in the editor window, the
mouse blinker changes to an arrow and so forth, however clicking for a menu does
nothing.  I kept clicking and nothing happened.  Finally I hit space, it redisplayed
and gave me a menu.  But when I tried to click on the menu it feeped, said something
about mouse-right-4 being undefined, and gave me the menu again.  Very confused.

moon@MIT-AI (Sent by ___021@MIT-AI) 04/12/79 04:09:17
To: (BUG ZWEI) at MIT-AI
The form of Edit Callers which looks in only 1 package should also look in
all its superior packages.  Not doing this is the source of my complaints about
it not finding all callers; it fails to find callers which are in the same
file as ones it does find but happen to be global.

HENRY@MIT-AI 04/11/79 23:33:12
To: (BUG ZWEI) at MIT-AI
If you're in two-window mode and return to one,
it would be nice if it left you in the one
you were currently in instead of always choosing the top one.

HENRY@MIT-AI 04/11/79 23:18:14
To: (BUG ZWEI) at MIT-AI
If you change the syntax tables to make "{" and "}"
be treated like parens, Lisp indentation doesn't
notice this, like it does in Emacs.

HENRY@MIT-AI 04/11/79 23:06:20
To: (BUG ZWEI) at MIT-AI
How come Zwei doesn't show you what package you're in 
the way Eine did? 
What can I put in a Zwei program to assure that things
are started up so I can create new buffers?
The variable *MODE-LIST* remains undefined even after
a INITIALIZE-ZMACS-IF-NECESSARY. 



moon@MIT-AI (Sent by ___015@MIT-AI) 04/11/79 21:27:01
To: (BUG ZWEI) at MIT-AI
When ^X^W renames a buffer, it fails to update the completion list used by ^XB

moon@MIT-AI (Sent by ___022@MIT-AI) 04/11/79 21:01:30
To: (BUG ZWEI) at MIT-AI
Character Search does not use its numeric argument as the number of times to search

moon@MIT-AI (Sent by ___047@MIT-AI) 04/11/79 20:56:53
To: (BUG ZWEI) at MIT-AI
In the latest ZWEI, the one on CADR5, it is still the case that control-minus meta-T
puts garbage in the buffer

MMCM@MIT-AI 04/10/79 17:15:57 Re:  TYPE-OUT WINDOW
To: JERRYB at MIT-AI, (BUG ZWEI) at MIT-AI
    Date: 04/10/79 11:18:45
    From: JERRYB at MIT-AI
    Re:   TYPE-OUT WINDOW

    When it is typed on by ZWEI it seems to grab the mouse or the mouse handler
    for ZWEI windows is changed or it is indeed larger than it appears.  The net
    result is that you can't select a ZWEI window with the mouse.
you can select the zwei window with the mouse from the portion that isnt covered.
since it is deexposed though, you dont get its mouse handler.  so far as i can tell
this is another generic window system screw, and not dependant on the typeout window
itself.
note that compiler error messages are not indended to go to the typeout window in the
great eventuality, they will do something more like henry's history window.

JERRYB@MIT-AI (Sent by JERRY0@MIT-AI) 04/10/79 11:18:45 Re: TYPE-OUT WINDOW
To: (BUG ZWEI) at MIT-AI
I guess my main objection to the present way the typeout window is is that
it behaves so strangely, very much differently that other windows and
I don't think this should be.  When it is sent a select message, which is
easy to do since it is left in the list of active windows it doesn't expose
itself.  You can only tell it is there by the strange behavior of the mouse.
When it is typed on by ZWEI it seems to grab the mouse or the mouse handler
for ZWEI windows is changed or it is indeed larger than it appears.  The net
result is that you can't select a ZWEI window with the mouse.

RMS@MIT-AI 04/10/79 10:48:58
To: (BUG ZWEI) at MIT-AI
M-Q loses when the paragraph includes the last line of the buffer
(with no CR afterwards).  It gets an error trying to access
th efollowing line.

rms@MIT-AI (Sent by ___074@MIT-AI) 04/10/79 10:09:21
To: (BUG ZWEI) at MIT-AI
SUBSET-DIRECTORY-LISTING lost when it read a zero-length line
from the directory stream with :LINE-IN and tried to index
into it with AR-1.

rms@MIT-AI (Sent by ___016@MIT-AI) 04/10/79 07:53:27
To: (BUG ZWEI) at MIT-AI
There is a peculiar boundary condition in auto fill mode
where I have the pointer at the end of a line, after a single space,
and typing spaces has no effect whatever except to cause the line
to be redisplayed.  In getting into this state, when I typed the
space which was at the end of the line, it made an additional blank line
(there had been only one blank line after that line) but did not move point
or any of the text onto the new blank line.

RMS@MIT-AI 04/10/79 07:44:28
To: (BUG ZWEI) at MIT-AI
Auto Fill in Text mode should not recognize semicolons as special.
In EMACS, while explicit comment commands will work in Text mode
using ";" as the comment starter, nothing will presume to recognize
a ";" as starting a comment.  This is different from the behavior
in Lisp and MIDAS mode.  In those modes, Comment Start is ";".
In Text mode, it is 0.

RMS@MIT-AI 04/10/79 07:29:50
To: (BUG ZWEI) at MIT-AI
Zwei's auto fill is neat, but it has a bug:
Suppose that the pointer is in the middle of a line, just before the
first character of a word.  I now insert one word and a space to end it.
Suppose that this word does not fit within the fill column.
The word moves to the next line, with NO space between it and the following word,
but the cursor stays at the end of the previous line, at which place
a space is inserted.

rms@MIT-AI (Sent by ___016@MIT-AI) 04/10/79 07:25:31
To: (BUG ZWEI) at MIT-AI
I'm not sure how it happened, but after putting myself in Text mode I suddenly
found that I had an error - overpop in ARRAY-POP inside F-CONTROL-F - 
and on wondering why that had been called in Text mode, I saw that I was
in Lisp mode.  First of all, F-CONTROL-F shouldn't ever get an error, no
matter what is in the buffer.  Second of all, it shouldn't have magically
gone into Lisp mode (though I realize that this is obvious and not much
help).

This wasn't the end.  I had been in Auto Fill mode.  When I went back into
Text mode, though the mode line still said Fill, I discovered that space no
longer did that.  By turning Auto Fill mode off and on again, I managed
to make it start filling again.

This is on the CADR terminal next to the bean-bag chair.

rms@MIT-AI (Sent by ___021@MIT-AI) 04/10/79 06:43:18
To: (BUG ZWEI) at MIT-AI
C-X Rubout should not kill the spaces before the sentence.
In the most common application, they just have to be typed in again.

DLW@MIT-AI 04/10/79 02:24:17
To: RMS at MIT-AI, (BUG ZWEI) at MIT-AI

    RMS@MIT-AI 04/09/79 23:16:31
    ZWEI ought to offer commands for keyboard macros that are
    compatible with EMACS.  It's ok for it to have other bells
    and whistles, even for them to be a totally distinct mode
    (though that would be less desirable), but one ought to be
    able to use all the EMACS commands and get the EMACS results.
Please remember that the keyboard macro facility was not
intended to be part of EINE or ZWEI.  The idea was to provide
a general-purpose transducer for streams; keyboard macros should work in
the LispM DRAW program, or at Lisp Top Level, or anywhere else.  That is
why the usurp a key for their commands, and are NOT ZWEI commands.

Now, if you want the EMACS commands to work, I suggest that you
make ZWEI commands that tell the stream what to do;
either have it insert the backnext comands into the input stream,
or have specialized stream operatins.  I think that would
work out better that way.

RMS@MIT-AI 04/09/79 23:16:31
To: (BUG ZWEI) at MIT-AI
ZWEI ought to offer commands for keyboard macros that are
compatible with EMACS.  It's ok for it to have other bells
and whistles, even for them to be a totally distinct mode
(though that would be less desirable), but one ought to be
able to use all the EMACS commands and get the EMACS results.

MOON@MIT-MC 04/09/79 16:14:20 Re: ZWEI's TYPEOUT-WINDOW
To: JERRYB at MIT-AI, (BUG ZWEI) at MIT-AI
I think the principle problem is that the window system fails to display
an outline for a window while you are reshaping it and the like.  Clearly
it should.  I think it would be a gross loss to display an outline for
the typeout window during normal operation (when it is not being reshaped,
moved, etc.)  Note that the typeout window dynamically expands as it
displays things, which is why you can see other windows while it is active.

JERRYB@MIT-AI 04/09/79 11:51:39
To: MMCM at MIT-AI
CC: (BUG ZWEI) at MIT-AI

    MMCM@MIT-AI 04/08/79 22:06:21
    ...
    the only problem is that you can click the middle button and move it around
    holding down the button until it is marking the right frob, which is often
    necessary since the hardware movement is so poor.  double-click and hold
    requires some more effort.  do you think this is worth it? 

What about exchanging single-click right and double-click middle?

JERRYB@MIT-AI 04/09/79 11:37:03 Re: ZWEI's TYPEOUT-WINDOW
To: (BUG ZWEI) at MIT-AI
It seems like the typeout window is a very strange creature and causes some problems
when manipulating windows on the screen.  Its hard to tell where it is because it 
doesn't have any boundaries.  When it is selected it doesn't seem to expose itself
becuase you can see what is underneath it.  It seems it ought to be treated more like
other windows, in particular if it had an outline it would help a lot.  Maybe giving it a
buffer in its own right would be a good idea, that way you could always select it and review
any error messages etc tha may have been too big to fit in one screen.

JERRYB@MIT-AI 04/09/79 11:09:26 Re: :LABEL message for zwei windows
To: (BUG ZWEI) at MIT-AI
Why isn't the label in a ZWEI window returned by a ':LABEL message to that window?
This would be helpful in identifying what windows are on the screen.

Maybe it should return (if the label is SYSMEN > LISPM; AI) something like:
ZWEI: SYSMEN > LISPM; AI.

MOON@MIT-AI 04/09/79 05:13:29
To: (BUG ZWEI) at MIT-AI
MM Occur in Emacs starts at point, but in Zwei it starts at beginning of buffer always.  The former is probably better

MMCM@MIT-AI 04/08/79 22:06:21
To: JERRYB at MIT-AI, MOON at MIT-MC
CC: (BUG ZWEI) at MIT-AI
    Date: 8 APR 1979 1427-EST
    From: JERRYB at MIT-AI (Gerald R. Barber)
    Subject: MOUSE COMMANDS
    To: (BUG ZWIE) at MIT-AI
    
    IT SEEMS THAT MOUSE-MIDDLE-TWICE IS VERY USEFUL AND BY THE WAY IT WORKS
    WILL BE USED IN SUCCESSION OFTEN WHILE MOUSE-MIDDLE-ONCE WON'T BE USED SUCCESIVELY
    QUITE SO OFTEN, HOW ABOUT INTERCHANGING THESE TWO COMMANDS.

the only problem is that you can click the middle button and move it around
holding down the button until it is marking the right frob, which is often
necessary since the hardware movement is so poor.  double-click and hold
requires some more effort.  do you think this is worth it? 

MOON@MIT-AI (Sent by ___067@MIT-AI) 04/07/79 16:44:23
To: (BUG ZWEI) at MIT-AI
(// A B <RETURN> <TAB>
indents incorrectly

MOON@MIT-MC 04/06/79 03:02:38 Re: Subtle bugs with ^U^X^D
To: (BUG ZWEI) at MIT-MC
When using Subset Directory Listing (the default), it is reasonable to type
a full file-name at this.  The displayed default only includes the device and
directory.  If I type FOO > at it with no directory, it uses ">;" as the dir.
This all works right in Emacs; Zmacs should do whatever Emacs does.

rms@MIT-AI (Sent by ___022@MIT-AI) 04/06/79 02:21:42
To: (BUG ZWEI) at MIT-AI
ZWEI:REVERT-BUFFER  as present in CADR 3 is a loser.
Loading it in and recompiling it works.

RMS@MIT-AI 04/06/79 02:33:22
To: (BUG ZWEI) at MIT-AI
The page commands C-X ] and [ do not recognize a page delimiter
unless it is followed by a CR.  Page delimiters must be preceded by CRs
but need not be followed by them.

rms@MIT-AI (Sent by ___022@MIT-AI) 04/06/79 02:23:21
To: (BUG ZWEI) at MIT-AI
When I load both EH and EHR into ZWEI, I am not allowed
to select the buffer EH any more.  Even if I type "EH >"
and then an altmode, it completes but leaves the cursor after
the "EH".  Then, no matter where the cursor is, CR just gives me an error.

RMS@MIT-AI 04/06/79 01:56:13
To: (BUG ZWEI) at MIT-AI
It just happened to me that POINT was a bp with an index of NIL.
I think this was caused by INDENT-FOR-LISP, but I couldn't
reproduce it.

RMS@MIT-AI 04/06/79 01:53:51
To: (BUG ZWEI) at MIT-AI
C-X L prints the counts for the two parts of the page, above and below point,
in backwards order.  The number of lines abovepoint should be first.

moon@MIT-AI (Sent by ___034@MIT-AI) 04/05/79 17:11:08
To: (BUG ZWEI) at MIT-AI
In system 2.2c on CADR5
(1) typeout-merging is broken.  After using control-?, using it again clears
the screen and displays the buffer when it prompts for an arg.
(2) In TEXT mode, Tab and meta-Tab sometimes indent to different places
(not always).

MMCM@MIT-AI 04/04/79 02:26:02
To: (BUG ZWEI) at MIT-AI
CC: HENRY at MIT-AI
the problem with classes that dont end in "-CLASS" has been fixed in the source
(this is what is wrong with ACTOR;^DS).  i'll check it out when
next on something faster than 30cps.

MMCM@MIT-AI 04/04/79 02:02:28
To: HENRY at MIT-AI, (BUG ZWEI) at MIT-AI
that is ZDT getting into Output Hold, so using EINE will do
no better.  CALL attempts to select the top window, but
its process is talking to a stream whose window isnt exposed.

HENRY@MIT-AI (Sent by HENRY0@MIT-AI) 04/04/79 01:25:09
To: (BUG ZWEI) at MIT-AI
ZWEI bombs out trying to read AI:ACTOR;^DS >.
ZWEI also manages to get into "Output Hold" mode a fair bit,
for instance, when leaving ZDT by hitting CALL.
What does "Output Hold" mean, anyway and what should I
do if it happens?
Would it be all right to leave EINE around for a bit longer,
do you think?

HENRY@MIT-AI 04/03/79 01:56:45
To: (BUG ZWEI) at MIT-AI
Meta-) fails to close off successive levels of parens correctly.
Control-@ is undefined.
I tried setting ZWEI:*LISP-INDENTATION-OFFSET* as recommended
in a recent message to disable the new indent feature but it didn't work.

MMCM@MIT-AI 04/02/79 15:07:39
To: (BUG ZWEI) at MIT-AI
CC: HIC at MIT-AI
the current use of tabs in INDENT-TO has a subtle screw: it assumes that the
width of a TAB is an integral number of spaces, actually it is the whatever
indentation is needed to get to the next column that is a multiple of 8 spaces
from the left margin, which is different with multiple/variable-width fonts.

HIC@MIT-MC 03/31/79 16:45:11
To: (BUG ZWEI) at MIT-MC
INDENT-TO was completely broken.  (This was the bug with meta-;).  It forgot that
the first tab was not always 8 long!  I put in a hack to calculate the length
of the first tab, and it now seems to work ok.


hic@MIT-AI (Sent by ___034@MIT-AI) 03/31/79 11:40:32
To: (BUG ZWEI) at MIT-AI
Meta-; is broken in (at least) electric midas mode.  It tabs to the
wrong column (obsereved to always be less than the current comment column)

rms@MIT-AI (Sent by ___025@MIT-AI) 03/31/79 03:23:25
To: (BUG ZWEI) at MIT-AI
I once saw the mouse character blinker of the minibuffer
still blinking after I had exited ZWEI.

DLW@MIT-AI 03/31/79 00:08:39
To: MMCM at MIT-AI, (BUG ZWEI) at MIT-AI

    mmcm@MIT-AI (Sent by ___012@MIT-AI) 03/30/79 03:39:24
    Another lossage with the lack of INTERVAL-TICK is that only deleting
    lines doesnt get noticed as having modified the file.  time for these
    extended BPs.
What are extended BPs going to be?

MOON@MIT-AI (Sent by MOON0@MIT-AI) 03/30/79 05:49:36
To: (BUG ZWEI) at MIT-AI
If the typeout window adjusted its size to the amount it
was using, this would allow you to reselect the main window with the mouse.  This is
independent of whether or not the main window shrinks to avoid being de-exposed by the
typeout window; if it does it wouldn't wait for a space, but FORM or something would
flush the typeout window and re-grow the main window.

MOON@MIT-AI (Sent by MOON0@MIT-AI) 03/30/79 05:02:48
To: (BUG ZWEI) at MIT-AI
When being asked for mini buffer input, e.g. for meta-., it does not work
to use single and double click middle to copy text from the main buffer
down into the mini buffer; nothing happens.  A more bizzare bug is that
clicking single in the top buffer can make it look like THING was typed
in the mini buffer

MOON@MIT-AI (Sent by MOON0@MIT-AI) 03/30/79 04:59:20
To: (BUG ZWEI) at MIT-AI
Weird bug in 1.8 cc on CADR2:

If you go meta-x List fu ? return it prompts you for a buffer name but fails
to display a mini buffer outline and fails to put a blinker down there.
This does not happen if you do not type ?, evidently bringing up a typeout
display somehow breaks the mini buffer

mmcm@MIT-AI (Sent by ___012@MIT-AI) 03/30/79 03:39:24
To: (BUG ZWEI) at MIT-AI
Another lossage with the lack of INTERVAL-TICK is that only deleting
lines doesnt get noticed as having modified the file.  time for these
extended BPs.

MOON@MIT-MC 03/29/79 11:19:58 Re: Electric Midas mode
To: (BUG ZWEI) at MIT-MC
This should be renamed to Electric shift-lock mode, and made a minor
mode, and made to use the mode-dependent comment delimiters rather
than a constant semicolon, and it should XOR with the case of the
characters rather than forcing to upper case.  I would like to use this
mode with Lisp code as well as Midas code.  Can the -*- line call for
minor modes?

HIC@MIT-AI 03/29/79 11:05:19
To: (BUG ZWEI) at MIT-AI
poping point into another buffer dies.  I did ^U<space>
one too many times and lost as the point went into a previous buffer.

RMS@MIT-AI 03/29/79 03:26:28
To: (BUG ZWEI) at MIT-AI
C-M-E, C-T-C, etc. should use F-CONTROL-F to find the end of the defun
so that they win on funny comments, etc.

moon@MIT-AI (Sent by ___072@MIT-AI) 03/28/79 23:11:42
To: (BUG ZWEI) at MIT-AI
INDENT-TO should use tabs where appropriate

RMS@MIT-AI 03/28/79 22:51:06
To: (BUG ZWEI) at MIT-AI
C-M-V seems to be a no-op.

RMS@MIT-AI 03/28/79 22:50:50
To: (BUG ZWEI) at MIT-AI
When I visit a nonexistent file, type in some text, and do C-X C-S,
it asks me which file to write, offering as the defaults the name of another
file that I had read in since then.

RMS@MIT-AI 03/28/79 22:49:32
To: (BUG ZWEI) at MIT-AI
C-M-H when teh pointer is positioned after the ) of a defun, at the end of the line,
marks the following defun.

MOON@MIT-MC 03/28/79 19:14:07
To: (BUG ZWEI) at MIT-MC
It would bite the bag a lot less if it didn't select random windows
while you're in the mini buffer.  It seems that whenever I try to use things
like Edit Callers and give it a function name from the mouse, if I slip and
hit the wrong button it gets into any number of spastic states, e.g. wanting to
see a function name but the main buffer is being typed into, suddenly gives me
a menu containing total gubbish plus a random assortment of names of functions
inside the editor (hit the right button while being asked for a function name
for Edit Callers), gets me into a recursive mini-buffer with no indication
of the fact, gets me into a state where going into the editor thinks the mini buffer
should be the selected window and buffer, and gets into states where it gets array
out of bounds because it is trying to use the mini buffer zwei interval as a zmacs
buffer.

I think almost all of these symptoms are due to outness of phase between the subroutine
the Zmacs process is in (one that thinks it's hacking the mini buffer) and which
window is selected.

Also try hitting mouse buttons that trigger a call to barf while in the mini buffer,
this seems to screw up the window selection

MOON@MIT-MC 03/28/79 18:48:53
To: (BUG ZWEI) at MIT-MC
    moon@MIT-AI (Sent by ___063@MIT-AI) 03/28/79 17:48:09
    To: (BUG ZWEI) at MIT-AI
    Edit Callers says "no more callers" prematurely.  I don't know why yet.
    Who Calls in ZWEI also doesn't list all the callers, just some of them.  Weird!
Foo, this feature that it only does the current package is a loss.  It might be all right
if the prompt would give some hint of what was going on.

Also, m-X Who Calls gets a divide by zero in the typeout menu stuff if there aren't any callers.

moon@MIT-AI (Sent by ___063@MIT-AI) 03/28/79 17:48:09
To: (BUG ZWEI) at MIT-AI
Edit Callers says "no more callers" prematurely.  I don't know why yet.

MOON@MIT-MC 03/28/79 17:30:04
To: (BUG zwei) at MIT-AI
c-m-V also does the wrong thing if given arg of control-minus (as opposed
to control-minus control-1)

RICH@MIT-AI 03/28/79 17:17:00
To: (BUG ZWEI) at MIT-AI
The ARGLIST command bombs out computing the default function name
when the cursor is in a bad place, such as inside a string.

MOON5@MIT-AI 03/28/79 16:48:54
To: (BUG ZWEI) at MIT-AI
When you exit ZWEI the mouse character blinker is not deactivated.

moon@MIT-AI (Sent by ___062@MIT-AI) 03/28/79 15:02:58
To: (BUG ZWEI) at MIT-AI
There is a bug with display of the mini-buffer in the ^X4F command;
another character must be typed before it displays.

Typing ^Z in the mini buffer seems to have got broken such that it types
UNKNOWN not implemented over the mini buffer and leaves you in the mini buffer

moon@MIT-AI (Sent by ___055@MIT-AI) 03/28/79 12:27:10
To: (BUG ZWEI) at MIT-AI
It would appear that if you create a random buffer, do meta-X package,
then later do ^X^W, it forgets the package

MOON@MIT-AI (Sent by ___043@MIT-AI) 03/28/79 12:23:51
To: (BUG ZWEI) at MIT-AI
^XO is broken again such that in 1-window mode it doesn't get you the other window.

MOON@MIT-AI (Sent by ___046@MIT-AI) 03/28/79 12:20:45
To: (BUG ZWEI) at MIT-AI
SOMEONE PUT BACK THE BUG IN ONE OF THE INSERT ROUTINES THAT MAKES  C-M-T GARBAGE THE LINE

MOON@MIT-AI (Sent by ___023@MIT-AI) 03/28/79 12:01:14
To: (BUG ZWEI) at MIT-AI
C-M-V GOES THE WRONG WAY (I.E. ITS ARG IS NEGATED FROM EMACS' ARG)

rms@MIT-AI (Sent by ___021@MIT-AI) 03/28/79 02:27:39
To: (BUG ZWEI) at MIT-AI
When DELETE-INTERVAL is given bps out of order and told
that they are in order, it manages to garbage the whole
buffer from there on before complaining.
If it would slow things down to check the condition before
changing anything, maybe it is possible to arrange to
be able to undo what has been done, after noticing that it has
lost and before reporting the error.

RG@MIT-AI 03/26/79 00:39:20
To: (BUG ZWEI) at MIT-AI
M-Y seems to ignore its argument.
At least, it doesn't know about negative args.
They should make it go backwards.
A higher absolute value should be a repeat count.

RG@MIT-AI 03/23/79 23:02:12
To: (BUG ZWEI) at MIT-AI
  IN C-R TYPE SEARCH (REVERSE INCREMENTAL), TYPING ANOTHER C-R DOES
NOT FIND THE PREVIOUS INSTANCE OF THE STRING SO FAR, INSTEAD IT
JUST FINDS THE CURRENT INSTANCE AGAIN.

RG@MIT-AI 03/23/79 22:10:05
To: (BUG ZWEI) at MIT-AI
  IF YOU DO A C-TOP-C OF A FUNCTION AT THE EXTREME END OF THE BUFFER,
IT BOMBS ON A "UNABLE TO COERCE XXX TO A STRING" ERROR.
  AFTER LEAVING ZWEI WHEN IN TWO WINDOW MODE AND REENTERING, THIS
ARE STILL SOMETIMES SOMEWHAT SCREWWED UP, BUT NO WHERE NEARLY AS
BADLY AS BEFORE.  WORST IS THAT IT ONLY DISPLAYS ONE WINDOW AND REFUSES
TO SWITCH TO THE OTHER WITH C-X O, ETC.  DOING C-X 1 FOLLOWED BY C-X 2
UNWEDGES IT.
  THE FOLLOWING SEQUENCE MANAGED TO GET INTO A STATE WHERE NO WINDOW
AS SELECTED.  THIS WAS PARTICULARLY SERIOUS, SINCE THE MACHINE I WAS
ON DIDNT HAVE A MOUSE!  
     COMPILING FROM THE BUFFER IN TWO WINDOW MODE FROM THE BOTTOM WINDOW
AND GETTING SOME WARNING MESSAGES, FOLLOWED BY IMMEDIATELY TYPING CNTRL-S
(INCREMENTAL SEARCH).

MOON5@MIT-MC 03/23/79 17:22:16
To: (BUG ZWEI) at MIT-MC
In 2 -window mode, hit break then $p space then form.  One of the
windows disappears

RG@MIT-AI 03/21/79 00:07:34
To: (BUG ZWEI) at MIT-AI
  STILL FAILS TO KEEP PACKAGE NAMES OF BUFFERS STRAIGHT.
IN VANILLA FLAVORED ZED, HAD A BUFFER WITH A PACKAGE NAME OF
USER.  I DID A META-. AND WHICH RESULTED IN READING IN A FILE
WITH PACKAGE SI.  SWITCHING BACK TO THE ORIGINAL BUFFER WITH
C-X B <CR>, THE PACKAGE NAME OF THE BUFFER HAD SWITCHED TO SI.

RMS@MIT-AI 03/19/79 04:08:52
To: (BUG ZWEI) at MIT-AI
An error in compilation during C-T-C
causes trouble if there were any warnings before it:
typing C-Z leaves no process selected.
This must have to do with an interactionwith the typeout window.
By "error" I mean actually calling the error handler,
as with wrong number of args to a DEFMACRO.

RMS@MIT-AI 03/19/79 04:06:52
To: (BUG ZWEI) at MIT-AI
C-X L gets an error in SEARCH-FOR-LINE
if done with point right after a Formfeed or
if there are no formfeeds in the buffer before point.

rms@MIT-AI (Sent by ___025@MIT-AI) 03/18/79 06:54:24
To: (BUG ZWEI) at MIT-AI
C-M-when point is just before the (defun works
on the previous defun unstead of that one.
It should apply to the same defun that C-M-H would mark.

RMS@MIT-AI 03/17/79 05:27:23
To: (BUG ZWEI) at MIT-AI
If I read in ZWEI;DISPLA and type REDIS$-BL$ at M-., it completes to
REDISPLAY-BLT, but if I type REDIS-BL$ it does not.

RMS@MIT-AI 03/17/79 05:26:20
To: (BUG ZWEI) at MIT-AI
C-X Tab is still undefined.
Rubbing out the last character of a line, when that eliminates
the need for a continuation line, does not get rid of it or
erase the char rubbed out.  I suspect the wrong criterion is being
used for what to mung.  I think that the same problem exists in the code
that inserts a character at the end of a line to make a continuation line,
but that has had no noticeable consequences until now, when it disables
somehow the insert/delete line processing I have just implemented.

RG@MIT-AI 03/17/79 03:23:01
To: (BUG ZWEI) at MIT-AI
  ZWEI CAN GET CONFUSED AS TO WHAT FILE TO WRITE TO WHEN YOU
DO A C-X C-S.  NAMELY, GENERATE ONE ZWEI WINDOW WITH THE MOUSE,
READ IN A FILE, GENERATE ANOTHER AND READ IN A FILE, AND RETURN
TO THE FIRST.  IF YOU CHANGE IT AND TRY TO WRITE IT OUT THE
FIRST BUFFER, IT INSTEAD WRITES OUT THE SECOND BUFFER.
  ANOTHER TIME (I M NOT SURE EXACTLY WHAT I DID) IT MANAGED TO
WRITE A BUFFER BACK UNDER THE FILE NAME BELONGING TO ANOTHER 
BUFFER.  IN THIS PROCESS, THE BUFFER WRITTEN WAS RENAMED SO
BOTH BUFFERS WOUND UP WITH THE SAME NAME.

MOON@MIT-AI 03/17/79 00:58:22
To: (BUG ZWEI) at MIT-AI
Perhaps there should be another kind of BP which contains a 4th field
which is the ZMACS buffer (or appropriate frob for other ZWEI users,
in general something you can put in *INTERVAL* and WINDOW-INTERVAL).
This would be useful for the tags alist, for the point pdl, and probably
other things.

RMS@MIT-AI 03/16/79 03:35:59
To: (BUG ZWEI) at MIT-AI, ALAN at MIT-AI
What about a spelling-correcting reader that
does spelling-correction on the symbols it reads?
When reading out of an editor buffer it could put any changes
back into the buffer so they would go into the source automatically.

RMS@MIT-AI 03/16/79 03:32:01
To: (BUG ZWEI) at MIT-AI
I fixed the problem that region underlining got left on the screen,
and also the problem that inserting a CR in a continued line
wouldn't erase the stuff that had been moved into the next line.
Also I made new type-in stop redisplay and do the command.
Now, C-V has the peculiar bug that if you type it while
a previous C-V was redisplaying, it doesn't go to exactly the same
place as it would if you waited!  It is off by exactly one line.

RMS@MIT-AI 03/16/79 03:30:00
To: (BUG ZWEI) at MIT-AI
C-M-Q indents lines that start inside strings.
It should be able to detect that fact and not touch them.

Tab with an arg should move over the lines it indents so that
you can do it again to get the next few lines.

HENRY@MIT-AI 03/15/79 22:29:08 Re:  editor top level
To: (BUG ZWEI) at MIT-AI
I've been playing with ZWEI's new editor top level. I like
it, it's a lot better than the previous top level loop. I
had implemented a editor top level with EINE which I've been
using for quite a while and consider pretty good. It has some
features that you might want to consider adopting for ZWEI:

When you evaluate a form, it prints the value on the next
line preceded by a semicolon. This visually distinguishes
forms from values and makes it easy to re-evaluate forms
large sections of the buffer without having to filter out
the values. Form-value pairs are separated by a new line.

Some people like evaluation to commence when you hit the matching
right paren, like the standard Lisp top level. But I generally
always type balanced sets of parens using the Meta-paren feature, 
so I prefer a "do it" key. Mine evaluates the Region, or if
there is none, does a Control-Meta-H. 

A special buffer called "History" is created to store your
interactions with the top level of Lisp.
If you take code from another buffer, you are retured to the History buffer at the bottom, 
and a note "; Code taken from <Name of buffer>" is printed. 
It's really nice to use this in Two-window mode with the History
buffer in one of the windows, your code in the other.

The file is HENRY;ETOP if you want to look at it or play with it.
I'd appreciate any comments. 

RMS@MIT-AI 03/15/79 21:44:02
To: (BUG ZWEI) at MIT-AI
C-M-B does not know about slashified parens.
This is not hard; EMACS does it right.

RG@MIT-AI 03/15/79 20:08:11
To: (BUG ZWEI) at MIT-AI
  when lisp aligning (with tab) a list which had a lot of strings,
it evidently managed to get out of phase with the " 'S and got an
eof encountered within string error bomb out.  No string overlapped
line boundaries.  I was not able to reproduce this trivially,
but think I probably can sometime when mmcm is available to look at it.

RG@MIT-AI 03/15/79 20:01:05
To: (BUG ZWEI) at MIT-AI
when compiling, etc a buffer which doesnt have a package
declaration, you sometimes dont get the package which
was selected at editor entry.  I think the problem may
be that it does a pack-set instead of a package-bind type
operation when you compile-defun, etc.

RG@MIT-AI 03/14/79 02:56:39
To: (BUG ZWEI) at MIT-AI
  DESPITE TRYING, IT STILL DOESNT INITIALIZE RIGHT IF 
YOU TRY CREATING AN EDITOR WINDOW WITH THE MOUSE BEFORE
YOU HAVE EVER DONE A (ZED).  AFTER DOING (ZED), CREATING
A WINDOW WITH THE MOUSE USES THE SAME WINDOW THAT WAS USED
BY THE (ZED), WHICH IS NOT CLEAR IF IS A FEATURE OR NOT.

RMS@MIT-AI 03/13/79 02:32:05
To: (BUG ZWEI) at MIT-AI
A failing inc search does another search each time a new input char
is added to the string.  It should realize that once it is failing
new characters can't make it successful.

RMS@MIT-AI 03/13/79 02:27:40
To: (BUG ZWEI) at MIT-AI
The thing to compute the relevant function for M-X Arglist loses in this case:
(DEFUN FOO
....
     (MUMBLE "
....)
with an unmatched doublequote.  Such things can happen while the function
is being changed.  It may well lose the same way if the doublequote is matched.

RMS@MIT-AI 03/13/79 02:25:40
To: (BUG ZWEI) at MIT-AI
M-X View File gets an output hold.
The file was RMS;2LPROP, if it matters.

RG@MIT-AI 03/12/79 19:28:21
To: (BUG ZWEI) at MIT-AI
  if you do a c-x c-f and give it the wrong directory name,
the do another c-x c-f and give it the right one, it doesnt
realize that a "buffer named xx" already exists and makes another
one.

RG@MIT-AI 03/12/79 10:56:04
To: (BUG ZWEI) at MIT-AI
A SIMPLE ONE:  DESCRIBE-CLASS BOMBS IF YOU TYPE SOMETHING
THATS NOT A CLASS.

RMS@MIT-AI 03/12/79 02:44:52
To: (BUG ZWEI) at MIT-AI
Macros don't seem to remember which files they were loaded from.

RMS@MIT-AI 03/12/79 02:43:45
To: (BUG ZWEI) at MIT-AI
If the visited file's package is nonexistent,
entering ZWEI gets an error.
This happens whenever a file is visited by doing M-.
on a function which was loaded from a file which
was loaded by PKG-LOAD into a package which isn't
right under GLOBAL.  PKG-LOAD does teh right things
and loads the files but the file is given the package
name rather than the package as its PACKAGE property.
Then when ZWEI tries to figure out the package
it loses because that name can't be looked up.
Probably these things should be done:
1) PKG-DECLARE should put the package, not the package name,
on the file symbol's plist.
2) ZWEI should not get an error if the file's package prop
is a symbol which can't be looked up as a refname.
3) The package prop should be able to be a pathname down
from GLOBAL instead of just one level.  Say, if it is a list.
Then you can put specs of such things inside -*-'s.
4) Looking for a package should search not only the refnames
of the current package but also search their refnames, etc.
recursively but breadth-first so that direct refnames
always win out.

RMS@MIT-AI 03/12/79 01:58:39
To: (BUG ZWEI) at MIT-AI
I have seen zwei leave some underlining on the screen
when it gets rid of the mark.  I verified that the mark
was really gone, and, in any case, whan I move point
the underlining does not change, so I think that
zwei doesn't know that the underlining is there.

RMS@MIT-AI 03/12/79 01:51:32
To: (BUG ZWEI) at MIT-AI
C-T-C (compile defun) in ZWEI loses when there are extra closeparens
after the defun (such as, because the defun is inside a conditional)
before the CRLF.  It includes the extra closes in the read and gets
an error.  In this situation C-T-C should not include those extra closes
in the read.  Maybe also C-M-E and C-M-H should not include the rest
of the last line when that contains closeparens, or anything other
than whitespace and comment.  Unlike them, C-T-C could happily never
include the stuff.

RMS@MIT-AI 03/12/79 01:44:27
To: (BUG ZWEI) at MIT-AI
The ZWEI command loop should catch TOP-LEVEL
(SI: I think) so that ^Z in the error handler
doesn't leave things screwed up.

RMS@MIT-AI 03/12/79 01:34:00
To: (BUG ZWEI) at MIT-AI
C-M-E puts you right after the closeparen of the function,
not on the next line.  C-M-H puts the mark at that same place.
When the cursor is at that place, C-M-H finds the next defun
instead of the one which you are at the end of.
(Actually, I can't reproduce it with C-M-E now, which seems
to be going to the right place, but C-M-H is still marking the wrong one.
But C-M-E is finding a list inside a comment and going to the line after
the end of that.  C-M-E should always work by finding the start of
the previous defun and then moving over it;  if that leaves point
earlier than it used to be, move down to the next start of defun and
move over it.
C-M-- C-M-E sometimes works, but if you go to the function UNDEFUN
in QMISC and do C-M-E, after that C-M-- C-M-E is a no-op.

The C-M-E problem I can't reproduce probably is reproduceable in
a particular spot which I can no longer find.

RMS@MIT-AI 03/12/79 01:08:21
To: (BUG ZWEI) at MIT-AI
C-M-Q in ZWEI re-indents the line the cursor is on.  It shouldn't.

moon@MIT-AI (Sent by ___007@MIT-AI) 03/11/79 09:14:22
To: (BUG ZWEI) at MIT-AI
Typing 3 control-Vs in a row rapidly causes it blow out inside redisplay

MMCM@MIT-AI 03/10/79 09:38:06
To: (BUG ZWEI) at MIT-AI
CC: RMS at MIT-AI
there should be another value of *IMPOSSIBLE-IS-OK-P*, :MAYBE, which causes CR to complete
and require old names, but allows C-CR to give a new name.  thus is isnt necessary to do
C-G and another C-X C-B if you forgot.

rms@MIT-AI (Sent by MMCM@MIT-AI) 03/10/79 03:33:21
To: (BUG ZWEI) at MIT-AI
Popping the point pdl can try to take you into another buffer
which gets things so that redisplay screws up and errs.
I don't think ZWEI realizes that it has changed buffers.

MMCM@MIT-AI 03/10/79 03:00:23
To: (BUG ZWEI) at MIT-AI
^X] ignores its argument.
^XB refuses to create buffers.
There is no obvious other way to create them.
I finally did ^X^F on a nonexistent file.

HIC@MIT-AI 03/09/79 09:43:22
To: (BUG ZWEI) at MIT-AI
Attempting to kill the last line of the buffer if it contains only whitespace
bombs out (this is with control-K).  I guess this also fails if the line is completely
blank.

MMCM@MIT-MC (Sent by ___032@MIT-MC) 03/08/79 22:46:30
To: (BUG ZWEI) at MIT-MC
WORD ABBREV DEFINING COMMANDS SHOULD BIND THE KILL RING WITH THE THING TO BE ABBREVIATED
TO ALLOW EASY TRIMMING.

hic@MIT-MC (Sent by ___035@MIT-MC) 03/08/79 08:10:11
To: (BUG ZWEI) at MIT-MC
I think that the reason it wnet into Output Hold when I hit tab was
that *PROG-INDENT-OFFSET* was unbound.  Unfroutunatly, the interaction
with the rror handler was screwed up.  I discovered this while not using (ZDT).
Also, I suspect that the Meta-V problem was due to me hitting tab somewhere in
there, but I am not sure...


hic@MIT-MC (Sent by ___032@MIT-MC) 03/08/79 08:07:30
To: (BUG ZWEI) at MIT-MC
Every once in a while while typing at a (ZED) from within a (ZDT) it goes into output
hold.  I noticed this while yping Meta-V's as well as Tab's.

Also, when you supdup from ZDT, and then break-L, output hold happens.


HIC@MIT-MC (Sent by ___005@MIT-MC) 03/08/79 08:01:56
To: (BUG ZWEI) at MIT-AI
ZWEI doesn't know about DO-NAMED and SELECTQ (probably also not about SELECT).


RMS@MIT-AI 03/08/79 04:49:31
To: (BUG ZWEI) at MIT-AI
Does ZWEI still have its own version of TV-COMPUTE-MOTION?
It is handling kerning wrong.  Specifically, it should
ignore the left kern, since the kern only affects where
the raster is displayed with respect to the character box.
I have just got finished fixing all the rest of the software
to do this right.  Until now, nobody even used the feature.

moon@MIT-AI (Sent by ___064@MIT-AI) 03/08/79 02:17:44
To: (BUG ZWEI) at MIT-AI
(zed) fails to display the outline around the window for some reason.

^X^D does not use the filename of the buffer, instead it uses the aux file name
which is not correct.

MOON@MIT-AI 03/07/79 21:34:18
To: (BUG ZWEI) at MIT-AI
the fn2 defaulting is wrong.  E.g. (zed "lmio;supdup") tried
to visit "lmio;supdup (init)".

MOON@MIT-MC 03/07/79 09:48:45
To: (BUG ZWEI) at MIT-MC
We should write some kind of brief document on differences
between ZWEI and EMACS.
 - new commands
 - missing commands
 - tags system works differently
 - mouse features
 - how to write init files
 - subtle differences, e.g. numeric argument to ^XB
 - philosophy with files
 - how to write extensions??
 - column numbers (comment column, fill column, etc.)
 - fonts
The most important thing is simply essentially a srccom of the wall charts,
i.e. what differences you need to know about just to edit.

DLW@MIT-AI 03/07/79 00:25:59
To: RMS at MIT-AI
CC: (BUG ZWEI) at MIT-AI
I am pretty sure EINE has a command to let
you specify a file explicitly.  It is something like
an argument to the M-. command, I'm not sure.

BEE@MIT-AI 03/06/79 16:52:59
To: (BUG ZWEI) at MIT-AI
  in two window mode with both windows looking at the same
buffer, c-m-a affects both windows!  so does cntrl-p and
cntrl-n.  cntrl-v and meta-v affect only one window,
however, things are wedged afterwards.  The cursor does
not move past the characters being inserted (ie type foo,
insert oof).

MOON@MIT-AI (Sent by ___071@MIT-AI) 03/06/79 12:12:58
To: (BUG ZWEI) at MIT-AI
The function that meta-X ARGL calls to get a function name, whose name
I can't put in this message because the editor in this machine is fucked,
is fucked.  I fixed it up a little bit but it really doesn't win with the
way it just randomly selects the mini buffer.  Also, the BLINK-FUNCTION
calls ATOM-UNDER-MOUSE in the wrong process and hence with the wrong package.
Also, I suspect that over popping the point pdl causes the editor to blow out.

moon@MIT-AI (Sent by ___017@MIT-AI) 03/06/79 11:32:41
To: (BUG ZWEI) at MIT-AI
MAKE-COMMAND-LOOP still closes over *TYPEOUT-WINDOW*.  Probably it shouldn't any more.

MOON@MIT-MC (Sent by MOON0@MIT-MC) 03/06/79 10:23:27
To: (BUG ZWEI) at MIT-MC
Tab-hacking rubout needs to be done, and the commands on rubout
and control-rubout need to be mode-dependent.  Currently there is no command
on control-rubout.

MOON@MIT-MC (Sent by MOON0@MIT-MC) 03/06/79 10:00:04
To: (BUG ZWEI) at MIT-MC
Repeating an excremental search a lot of times by typing ^S
over and over gets a subscript beyond the length error after about 200 octal times

MOON@MIT-MC (Sent by MOON0@MIT-MC) 03/06/79 09:32:41
To: (BUG ZWEI) at MIT-MC
Here is a bug only MMcM can fix.  If you type a package prefix in the argument
to meta-., you don't get completion.

Another bug is that if you do something which does an explicit redisplay, then
type ahead a c-Z, the redisplay happens anyway before ZMACS exits.

RMS@MIT-AI 03/06/79 04:34:13
To: (BUG ZWEI) at MIT-AI
The incremental search in ZWEI types out at the end
of the mode line, sometimes.  After I typed the first
character of arg, the mode line reverted to its top-level
contents and further characters of arg were echoed there.
It was still searching properly.

RMS@MIT-AI 03/06/79 04:32:26
To: (BUG ZWEI) at MIT-AI
0) Preparation:  I loaded WINDOW and accidentally said "WINDOW!" so
it seemed to be another file containing the same functions.
later I started ZWEI and said M-. on WINDOW-RESTORE-PARTIAL.
1) The first time, it asked me which file.  Why?
2) I said "LISPM2;WINDOW".  It read in the file,
sat thinking for a hell of a long time, and then said
it couldn't find that function.
3) I verified that it was there, and then said M-. on it again.
This time it did not ask me which file.  It just read in WINDOW!,
sat thinking for the same long time, and found it.

A) It takes so long that I greatly prefer EINE.
It's true that it is nice to be able to edit the whole thing
at once, but I think that should be done via an NLS-ish viewspec
together with the ability to have dummy sections that appear to
exist but are not read in until they are "looked at".
But EINE at least gave me the choice of slow whole file
(though not as slow as this) or limited sections.

B) In both ZWEI and EINE, I have often wanted to be able to
override the system's idea of which file to use.  I can't.

C) Even allowing for that, weren't these events strange?

MMCM@MIT-AI 03/01/79 17:13:42
To: (BUG ZWEI) at MIT-AI
i have made this list for the obvious reason.

MMCM@MIT-AI 02/22/79 07:15:57
To: MOON at MIT-AI
CC: (FILE [AI:ZWEI;BUGS BUGS]) at MIT-AI
issues from the first stab at ^X 2ish commands:

 where should all the windows that belong to an editor live, closed over in
the command loop, pointed to by each window, closed over by the caller?  note that
it is nice to call must-redisplay without being in the closure itself.

 should all knowledge of multiple window commands be in zmacs and not zwei?  this includes
the select-window message, which needs to cause more to happen when zmacs windows
are involved than just window-install-interval and setq *window* and *interval*.

 redisplay should occur after all the window commands (as opposed to kbd commands)
are processed, not after each; a bunch of `(redisplay mumble)'s can accumulate it
seems.
 these should probably live in a per editor cell, so that those for non-selected windows
get seen as well, perhaps a locative should then be the instance variable, or a gensym?


bugs in window system:

 labels seem to get updated before a edges<- takes effect, ie they appear in the old
place and get immediately erased

MOON@MIT-AI 02/20/79 00:13:50
To: MMCM at MIT-AI
CC: (FILE [ZWEI;BUGS BUGS]) at MIT-AI
EDIT-DEFINITION has to search through the whole buffer to see if the
line is still in that buffer.  It would seem to be more of a win
to (like Multics Emacs) have a way of marking a line as deleted,
and to say that a line can never be moved from one buffer to another.
Then it can be determined if the line is validly part of the interval
without searching, just by checking for deletion.  It should then still
check if that line starts that defun.

I wonder if it should try sectionizing the buffer again once if the line
has been deleted; the user might have killed the defun and yanked it back.

A STREAM WITHIN THE WINDOW DATA STRCUTURE STRUCTURE THAT BUFFERS WINDOW COMMANDS

MOON@MIT-AI 02/11/79 01:33:02 Re: ZWEI
To: DLW at MIT-AI, MMCM at MIT-AI
COMMAND-LOOP shouldn't really bind the search ring and the kill ring,
since you'd like to be able to go in and out of the editor and retain
these as global variables.  Perhaps there should be a create-an-editor
function, which may also need to copy those comtabs that things bash.
This function could return a closure, or something.
    
    MOON5@MIT-AI 01/29/79 14:30:42 Re: bug zwei (P.S.)
    In REDISPLAY, 
			 (COND ((AND (EQ LINE WINDOW-LINE)
				     (NOT TOTALLY-MUNGED-P)
				     (> (PLINE-TICK WINDOW PLINE) LINE-TICK)
    this ">" is never true, as far as I can see.  I'm not sure what this is supposed 
    to do, probably a comment would be worthwhile here.
    ---
    OK, I guess I see.  Evidently redisplay causes a redundant tick, so
    this ">" really means "=".
I must say, I don't know what you're talking about.  If you read the
thesis you should know what this code is for.  If it were never true,
ZWEI would always redisplay all lines.  If I changed it to "=", it would
never be true, and ZWEI really WOULD redisplay all lines.  If you look
at ZWEI you will see that it does in fact work.  I assume that no two
values of the clock will be equal, since every interesting event
causes the clock to tick.
